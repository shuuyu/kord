[{"name":"AeadAes256Gcm","description":"dev.kord.voice.EncryptionMode.AeadAes256Gcm","location":"voice/dev.kord.voice/-encryption-mode/-aead-aes256-gcm/index.html","searchKeys":["AeadAes256Gcm","AeadAes256Gcm","dev.kord.voice.EncryptionMode.AeadAes256Gcm"]},{"name":"AeadAes256GcmRtpsize","description":"dev.kord.voice.EncryptionMode.AeadAes256GcmRtpsize","location":"voice/dev.kord.voice/-encryption-mode/-aead-aes256-gcm-rtpsize/index.html","searchKeys":["AeadAes256GcmRtpsize","AeadAes256GcmRtpsize","dev.kord.voice.EncryptionMode.AeadAes256GcmRtpsize"]},{"name":"ClientDisconnect","description":"dev.kord.voice.gateway.OpCode.ClientDisconnect","location":"voice/dev.kord.voice.gateway/-op-code/-client-disconnect/index.html","searchKeys":["ClientDisconnect","ClientDisconnect","dev.kord.voice.gateway.OpCode.ClientDisconnect"]},{"name":"Heartbeat","description":"dev.kord.voice.gateway.OpCode.Heartbeat","location":"voice/dev.kord.voice.gateway/-op-code/-heartbeat/index.html","searchKeys":["Heartbeat","Heartbeat","dev.kord.voice.gateway.OpCode.Heartbeat"]},{"name":"HeartbeatAck","description":"dev.kord.voice.gateway.OpCode.HeartbeatAck","location":"voice/dev.kord.voice.gateway/-op-code/-heartbeat-ack/index.html","searchKeys":["HeartbeatAck","HeartbeatAck","dev.kord.voice.gateway.OpCode.HeartbeatAck"]},{"name":"Hello","description":"dev.kord.voice.gateway.OpCode.Hello","location":"voice/dev.kord.voice.gateway/-op-code/-hello/index.html","searchKeys":["Hello","Hello","dev.kord.voice.gateway.OpCode.Hello"]},{"name":"Identify","description":"dev.kord.voice.gateway.OpCode.Identify","location":"voice/dev.kord.voice.gateway/-op-code/-identify/index.html","searchKeys":["Identify","Identify","dev.kord.voice.gateway.OpCode.Identify"]},{"name":"Microphone","description":"dev.kord.voice.SpeakingFlag.Microphone","location":"voice/dev.kord.voice/-speaking-flag/-microphone/index.html","searchKeys":["Microphone","Microphone","dev.kord.voice.SpeakingFlag.Microphone"]},{"name":"Priority","description":"dev.kord.voice.SpeakingFlag.Priority","location":"voice/dev.kord.voice/-speaking-flag/-priority/index.html","searchKeys":["Priority","Priority","dev.kord.voice.SpeakingFlag.Priority"]},{"name":"Ready","description":"dev.kord.voice.gateway.OpCode.Ready","location":"voice/dev.kord.voice.gateway/-op-code/-ready/index.html","searchKeys":["Ready","Ready","dev.kord.voice.gateway.OpCode.Ready"]},{"name":"Resume","description":"dev.kord.voice.gateway.OpCode.Resume","location":"voice/dev.kord.voice.gateway/-op-code/-resume/index.html","searchKeys":["Resume","Resume","dev.kord.voice.gateway.OpCode.Resume"]},{"name":"Resumed","description":"dev.kord.voice.gateway.OpCode.Resumed","location":"voice/dev.kord.voice.gateway/-op-code/-resumed/index.html","searchKeys":["Resumed","Resumed","dev.kord.voice.gateway.OpCode.Resumed"]},{"name":"SelectProtocol","description":"dev.kord.voice.gateway.OpCode.SelectProtocol","location":"voice/dev.kord.voice.gateway/-op-code/-select-protocol/index.html","searchKeys":["SelectProtocol","SelectProtocol","dev.kord.voice.gateway.OpCode.SelectProtocol"]},{"name":"SessionDescription","description":"dev.kord.voice.gateway.OpCode.SessionDescription","location":"voice/dev.kord.voice.gateway/-op-code/-session-description/index.html","searchKeys":["SessionDescription","SessionDescription","dev.kord.voice.gateway.OpCode.SessionDescription"]},{"name":"Soundshare","description":"dev.kord.voice.SpeakingFlag.Soundshare","location":"voice/dev.kord.voice/-speaking-flag/-soundshare/index.html","searchKeys":["Soundshare","Soundshare","dev.kord.voice.SpeakingFlag.Soundshare"]},{"name":"Speaking","description":"dev.kord.voice.gateway.OpCode.Speaking","location":"voice/dev.kord.voice.gateway/-op-code/-speaking/index.html","searchKeys":["Speaking","Speaking","dev.kord.voice.gateway.OpCode.Speaking"]},{"name":"Unknown","description":"dev.kord.voice.gateway.OpCode.Unknown","location":"voice/dev.kord.voice.gateway/-op-code/-unknown/index.html","searchKeys":["Unknown","Unknown","dev.kord.voice.gateway.OpCode.Unknown"]},{"name":"XSalsa20Poly1305","description":"dev.kord.voice.EncryptionMode.XSalsa20Poly1305","location":"voice/dev.kord.voice/-encryption-mode/-x-salsa20-poly1305/index.html","searchKeys":["XSalsa20Poly1305","XSalsa20Poly1305","dev.kord.voice.EncryptionMode.XSalsa20Poly1305"]},{"name":"XSalsa20Poly1305Lite","description":"dev.kord.voice.EncryptionMode.XSalsa20Poly1305Lite","location":"voice/dev.kord.voice/-encryption-mode/-x-salsa20-poly1305-lite/index.html","searchKeys":["XSalsa20Poly1305Lite","XSalsa20Poly1305Lite","dev.kord.voice.EncryptionMode.XSalsa20Poly1305Lite"]},{"name":"XSalsa20Poly1305LiteRtpsize","description":"dev.kord.voice.EncryptionMode.XSalsa20Poly1305LiteRtpsize","location":"voice/dev.kord.voice/-encryption-mode/-x-salsa20-poly1305-lite-rtpsize/index.html","searchKeys":["XSalsa20Poly1305LiteRtpsize","XSalsa20Poly1305LiteRtpsize","dev.kord.voice.EncryptionMode.XSalsa20Poly1305LiteRtpsize"]},{"name":"XSalsa20Poly1305Suffix","description":"dev.kord.voice.EncryptionMode.XSalsa20Poly1305Suffix","location":"voice/dev.kord.voice/-encryption-mode/-x-salsa20-poly1305-suffix/index.html","searchKeys":["XSalsa20Poly1305Suffix","XSalsa20Poly1305Suffix","dev.kord.voice.EncryptionMode.XSalsa20Poly1305Suffix"]},{"name":"abstract class AudioPacketProvider(val key: ByteArray, val nonceStrategy: NonceStrategy)","description":"dev.kord.voice.udp.AudioPacketProvider","location":"voice/dev.kord.voice.udp/-audio-packet-provider/index.html","searchKeys":["AudioPacketProvider","abstract class AudioPacketProvider(val key: ByteArray, val nonceStrategy: NonceStrategy)","dev.kord.voice.udp.AudioPacketProvider"]},{"name":"abstract fun Flow<AudioFrame?>.intercept(configuration: FrameInterceptorConfiguration): Flow<AudioFrame?>","description":"dev.kord.voice.FrameInterceptor.intercept","location":"voice/dev.kord.voice/-frame-interceptor/intercept.html","searchKeys":["intercept","abstract fun Flow<AudioFrame?>.intercept(configuration: FrameInterceptorConfiguration): Flow<AudioFrame?>","dev.kord.voice.FrameInterceptor.intercept"]},{"name":"abstract fun append(nonce: ByteArrayView, cursor: MutableByteArrayCursor)","description":"dev.kord.voice.encryption.strategies.NonceStrategy.append","location":"voice/dev.kord.voice.encryption.strategies/-nonce-strategy/append.html","searchKeys":["append","abstract fun append(nonce: ByteArrayView, cursor: MutableByteArrayCursor)","dev.kord.voice.encryption.strategies.NonceStrategy.append"]},{"name":"abstract fun generate(header: () -> ByteArrayView): ByteArrayView","description":"dev.kord.voice.encryption.strategies.NonceStrategy.generate","location":"voice/dev.kord.voice.encryption.strategies/-nonce-strategy/generate.html","searchKeys":["generate","abstract fun generate(header: () -> ByteArrayView): ByteArrayView","dev.kord.voice.encryption.strategies.NonceStrategy.generate"]},{"name":"abstract fun provide(sequence: UShort, timestamp: UInt, ssrc: UInt, data: ByteArray): ByteArrayView","description":"dev.kord.voice.udp.AudioPacketProvider.provide","location":"voice/dev.kord.voice.udp/-audio-packet-provider/provide.html","searchKeys":["provide","abstract fun provide(sequence: UShort, timestamp: UInt, ssrc: UInt, data: ByteArray): ByteArrayView","dev.kord.voice.udp.AudioPacketProvider.provide"]},{"name":"abstract fun strip(packet: RTPPacket): ByteArrayView","description":"dev.kord.voice.encryption.strategies.NonceStrategy.strip","location":"voice/dev.kord.voice.encryption.strategies/-nonce-strategy/strip.html","searchKeys":["strip","abstract fun strip(packet: RTPPacket): ByteArrayView","dev.kord.voice.encryption.strategies.NonceStrategy.strip"]},{"name":"abstract suspend fun detach()","description":"dev.kord.voice.gateway.VoiceGateway.detach","location":"voice/dev.kord.voice.gateway/-voice-gateway/detach.html","searchKeys":["detach","abstract suspend fun detach()","dev.kord.voice.gateway.VoiceGateway.detach"]},{"name":"abstract suspend fun discoverIp(address: InetSocketAddress, ssrc: Int): InetSocketAddress","description":"dev.kord.voice.udp.VoiceUdpSocket.discoverIp","location":"voice/dev.kord.voice.udp/-voice-udp-socket/discover-ip.html","searchKeys":["discoverIp","abstract suspend fun discoverIp(address: InetSocketAddress, ssrc: Int): InetSocketAddress","dev.kord.voice.udp.VoiceUdpSocket.discoverIp"]},{"name":"abstract suspend fun listen(key: ByteArray, server: SocketAddress)","description":"dev.kord.voice.streams.Streams.listen","location":"voice/dev.kord.voice.streams/-streams/listen.html","searchKeys":["listen","abstract suspend fun listen(key: ByteArray, server: SocketAddress)","dev.kord.voice.streams.Streams.listen"]},{"name":"abstract suspend fun provide(): AudioFrame?","description":"dev.kord.voice.AudioProvider.provide","location":"voice/dev.kord.voice/-audio-provider/provide.html","searchKeys":["provide","abstract suspend fun provide(): AudioFrame?","dev.kord.voice.AudioProvider.provide"]},{"name":"abstract suspend fun send(command: Command)","description":"dev.kord.voice.gateway.VoiceGateway.send","location":"voice/dev.kord.voice.gateway/-voice-gateway/send.html","searchKeys":["send","abstract suspend fun send(command: Command)","dev.kord.voice.gateway.VoiceGateway.send"]},{"name":"abstract suspend fun send(packet: Datagram)","description":"dev.kord.voice.udp.VoiceUdpSocket.send","location":"voice/dev.kord.voice.udp/-voice-udp-socket/send.html","searchKeys":["send","abstract suspend fun send(packet: Datagram)","dev.kord.voice.udp.VoiceUdpSocket.send"]},{"name":"abstract suspend fun start(configuration: AudioFrameSenderConfiguration)","description":"dev.kord.voice.udp.AudioFrameSender.start","location":"voice/dev.kord.voice.udp/-audio-frame-sender/start.html","searchKeys":["start","abstract suspend fun start(configuration: AudioFrameSenderConfiguration)","dev.kord.voice.udp.AudioFrameSender.start"]},{"name":"abstract suspend fun start(configuration: VoiceGatewayConfiguration)","description":"dev.kord.voice.gateway.VoiceGateway.start","location":"voice/dev.kord.voice.gateway/-voice-gateway/start.html","searchKeys":["start","abstract suspend fun start(configuration: VoiceGatewayConfiguration)","dev.kord.voice.gateway.VoiceGateway.start"]},{"name":"abstract suspend fun stop()","description":"dev.kord.voice.gateway.VoiceGateway.stop","location":"voice/dev.kord.voice.gateway/-voice-gateway/stop.html","searchKeys":["stop","abstract suspend fun stop()","dev.kord.voice.gateway.VoiceGateway.stop"]},{"name":"abstract suspend fun stop()","description":"dev.kord.voice.udp.VoiceUdpSocket.stop","location":"voice/dev.kord.voice.udp/-voice-udp-socket/stop.html","searchKeys":["stop","abstract suspend fun stop()","dev.kord.voice.udp.VoiceUdpSocket.stop"]},{"name":"abstract val events: SharedFlow<VoiceEvent>","description":"dev.kord.voice.gateway.VoiceGateway.events","location":"voice/dev.kord.voice.gateway/-voice-gateway/events.html","searchKeys":["events","abstract val events: SharedFlow<VoiceEvent>","dev.kord.voice.gateway.VoiceGateway.events"]},{"name":"abstract val incoming: SharedFlow<Datagram>","description":"dev.kord.voice.udp.VoiceUdpSocket.incoming","location":"voice/dev.kord.voice.udp/-voice-udp-socket/incoming.html","searchKeys":["incoming","abstract val incoming: SharedFlow<Datagram>","dev.kord.voice.udp.VoiceUdpSocket.incoming"]},{"name":"abstract val incomingAudioFrames: Flow<Pair<UInt, AudioFrame>>","description":"dev.kord.voice.streams.Streams.incomingAudioFrames","location":"voice/dev.kord.voice.streams/-streams/incoming-audio-frames.html","searchKeys":["incomingAudioFrames","abstract val incomingAudioFrames: Flow<Pair<UInt, AudioFrame>>","dev.kord.voice.streams.Streams.incomingAudioFrames"]},{"name":"abstract val incomingAudioPackets: Flow<RTPPacket>","description":"dev.kord.voice.streams.Streams.incomingAudioPackets","location":"voice/dev.kord.voice.streams/-streams/incoming-audio-packets.html","searchKeys":["incomingAudioPackets","abstract val incomingAudioPackets: Flow<RTPPacket>","dev.kord.voice.streams.Streams.incomingAudioPackets"]},{"name":"abstract val incomingUserStreams: Flow<Pair<Snowflake, AudioFrame>>","description":"dev.kord.voice.streams.Streams.incomingUserStreams","location":"voice/dev.kord.voice.streams/-streams/incoming-user-streams.html","searchKeys":["incomingUserStreams","abstract val incomingUserStreams: Flow<Pair<Snowflake, AudioFrame>>","dev.kord.voice.streams.Streams.incomingUserStreams"]},{"name":"abstract val nonceLength: Int","description":"dev.kord.voice.encryption.strategies.NonceStrategy.nonceLength","location":"voice/dev.kord.voice.encryption.strategies/-nonce-strategy/nonce-length.html","searchKeys":["nonceLength","abstract val nonceLength: Int","dev.kord.voice.encryption.strategies.NonceStrategy.nonceLength"]},{"name":"abstract val ping: StateFlow<Duration?>","description":"dev.kord.voice.gateway.VoiceGateway.ping","location":"voice/dev.kord.voice.gateway/-voice-gateway/ping.html","searchKeys":["ping","abstract val ping: StateFlow<Duration?>","dev.kord.voice.gateway.VoiceGateway.ping"]},{"name":"abstract val scope: CoroutineScope","description":"dev.kord.voice.gateway.VoiceGateway.scope","location":"voice/dev.kord.voice.gateway/-voice-gateway/scope.html","searchKeys":["scope","abstract val scope: CoroutineScope","dev.kord.voice.gateway.VoiceGateway.scope"]},{"name":"abstract val ssrcToUser: Map<UInt, Snowflake>","description":"dev.kord.voice.streams.Streams.ssrcToUser","location":"voice/dev.kord.voice.streams/-streams/ssrc-to-user.html","searchKeys":["ssrcToUser","abstract val ssrcToUser: Map<UInt, Snowflake>","dev.kord.voice.streams.Streams.ssrcToUser"]},{"name":"class Builder(code: Int = 0)","description":"dev.kord.voice.SpeakingFlags.Builder","location":"voice/dev.kord.voice/-speaking-flags/-builder/index.html","searchKeys":["Builder","class Builder(code: Int = 0)","dev.kord.voice.SpeakingFlags.Builder"]},{"name":"class Builder(var ssrc: UInt, var timestamp: UInt, var sequence: UShort, var payloadType: Byte, var payload: ByteArray)","description":"dev.kord.voice.udp.RTPPacket.Builder","location":"voice/dev.kord.voice.udp/-r-t-p-packet/-builder/index.html","searchKeys":["Builder","class Builder(var ssrc: UInt, var timestamp: UInt, var sequence: UShort, var payloadType: Byte, var payload: ByteArray)","dev.kord.voice.udp.RTPPacket.Builder"]},{"name":"class ByteArrayView : Iterable<Byte> ","description":"dev.kord.voice.io.ByteArrayView","location":"voice/dev.kord.voice.io/-byte-array-view/index.html","searchKeys":["ByteArrayView","class ByteArrayView : Iterable<Byte> ","dev.kord.voice.io.ByteArrayView"]},{"name":"class DefaultAudioFrameSender(val data: DefaultAudioFrameSenderData) : AudioFrameSender","description":"dev.kord.voice.udp.DefaultAudioFrameSender","location":"voice/dev.kord.voice.udp/-default-audio-frame-sender/index.html","searchKeys":["DefaultAudioFrameSender","class DefaultAudioFrameSender(val data: DefaultAudioFrameSenderData) : AudioFrameSender","dev.kord.voice.udp.DefaultAudioFrameSender"]},{"name":"class DefaultAudioPacketProvider(val key: ByteArray, val nonceStrategy: NonceStrategy) : AudioPacketProvider","description":"dev.kord.voice.udp.DefaultAudioPacketProvider","location":"voice/dev.kord.voice.udp/-default-audio-packet-provider/index.html","searchKeys":["DefaultAudioPacketProvider","class DefaultAudioPacketProvider(val key: ByteArray, val nonceStrategy: NonceStrategy) : AudioPacketProvider","dev.kord.voice.udp.DefaultAudioPacketProvider"]},{"name":"class DefaultFrameInterceptor(data: DefaultFrameInterceptorData = DefaultFrameInterceptorData()) : FrameInterceptor","description":"dev.kord.voice.DefaultFrameInterceptor","location":"voice/dev.kord.voice/-default-frame-interceptor/index.html","searchKeys":["DefaultFrameInterceptor","class DefaultFrameInterceptor(data: DefaultFrameInterceptorData = DefaultFrameInterceptorData()) : FrameInterceptor","dev.kord.voice.DefaultFrameInterceptor"]},{"name":"class DefaultStreams(voiceGateway: VoiceGateway, udp: VoiceUdpSocket, nonceStrategy: NonceStrategy) : Streams","description":"dev.kord.voice.streams.DefaultStreams","location":"voice/dev.kord.voice.streams/-default-streams/index.html","searchKeys":["DefaultStreams","class DefaultStreams(voiceGateway: VoiceGateway, udp: VoiceUdpSocket, nonceStrategy: NonceStrategy) : Streams","dev.kord.voice.streams.DefaultStreams"]},{"name":"class DefaultVoiceGateway(data: DefaultVoiceGatewayData) : VoiceGateway","description":"dev.kord.voice.gateway.DefaultVoiceGateway","location":"voice/dev.kord.voice.gateway/-default-voice-gateway/index.html","searchKeys":["DefaultVoiceGateway","class DefaultVoiceGateway(data: DefaultVoiceGatewayData) : VoiceGateway","dev.kord.voice.gateway.DefaultVoiceGateway"]},{"name":"class DefaultVoiceGatewayBuilder(val selfId: Snowflake, val guildId: Snowflake, val sessionId: String)","description":"dev.kord.voice.gateway.DefaultVoiceGatewayBuilder","location":"voice/dev.kord.voice.gateway/-default-voice-gateway-builder/index.html","searchKeys":["DefaultVoiceGatewayBuilder","class DefaultVoiceGatewayBuilder(val selfId: Snowflake, val guildId: Snowflake, val sessionId: String)","dev.kord.voice.gateway.DefaultVoiceGatewayBuilder"]},{"name":"class LiteNonceStrategy : NonceStrategy","description":"dev.kord.voice.encryption.strategies.LiteNonceStrategy","location":"voice/dev.kord.voice.encryption.strategies/-lite-nonce-strategy/index.html","searchKeys":["LiteNonceStrategy","class LiteNonceStrategy : NonceStrategy","dev.kord.voice.encryption.strategies.LiteNonceStrategy"]},{"name":"class MutableByteArrayCursor(data: ByteArray)","description":"dev.kord.voice.io.MutableByteArrayCursor","location":"voice/dev.kord.voice.io/-mutable-byte-array-cursor/index.html","searchKeys":["MutableByteArrayCursor","class MutableByteArrayCursor(data: ByteArray)","dev.kord.voice.io.MutableByteArrayCursor"]},{"name":"class NormalNonceStrategy : NonceStrategy","description":"dev.kord.voice.encryption.strategies.NormalNonceStrategy","location":"voice/dev.kord.voice.encryption.strategies/-normal-nonce-strategy/index.html","searchKeys":["NormalNonceStrategy","class NormalNonceStrategy : NonceStrategy","dev.kord.voice.encryption.strategies.NormalNonceStrategy"]},{"name":"class ReadableByteArrayCursor(val view: ByteArrayView)","description":"dev.kord.voice.io.ReadableByteArrayCursor","location":"voice/dev.kord.voice.io/-readable-byte-array-cursor/index.html","searchKeys":["ReadableByteArrayCursor","class ReadableByteArrayCursor(val view: ByteArrayView)","dev.kord.voice.io.ReadableByteArrayCursor"]},{"name":"class SpeakingFlags","description":"dev.kord.voice.SpeakingFlags","location":"voice/dev.kord.voice/-speaking-flags/index.html","searchKeys":["SpeakingFlags","class SpeakingFlags","dev.kord.voice.SpeakingFlags"]},{"name":"class SuffixNonceStrategy : NonceStrategy","description":"dev.kord.voice.encryption.strategies.SuffixNonceStrategy","location":"voice/dev.kord.voice.encryption.strategies/-suffix-nonce-strategy/index.html","searchKeys":["SuffixNonceStrategy","class SuffixNonceStrategy : NonceStrategy","dev.kord.voice.encryption.strategies.SuffixNonceStrategy"]},{"name":"class Unknown(val code: Int) : VoiceGatewayCloseCode","description":"dev.kord.voice.gateway.VoiceGatewayCloseCode.Unknown","location":"voice/dev.kord.voice.gateway/-voice-gateway-close-code/-unknown/index.html","searchKeys":["Unknown","class Unknown(val code: Int) : VoiceGatewayCloseCode","dev.kord.voice.gateway.VoiceGatewayCloseCode.Unknown"]},{"name":"class Unknown(value: Byte) : PayloadType","description":"dev.kord.voice.udp.PayloadType.Unknown","location":"voice/dev.kord.voice.udp/-payload-type/-unknown/index.html","searchKeys":["Unknown","class Unknown(value: Byte) : PayloadType","dev.kord.voice.udp.PayloadType.Unknown"]},{"name":"class VoiceConnection(val data: VoiceConnectionData, val gateway: Gateway, val voiceGateway: VoiceGateway, val socket: VoiceUdpSocket, var voiceGatewayConfiguration: VoiceGatewayConfiguration, val streams: Streams, val audioProvider: AudioProvider, val frameInterceptor: FrameInterceptor, val frameSender: AudioFrameSender, val nonceStrategy: NonceStrategy, connectionDetachDuration: Duration)","description":"dev.kord.voice.VoiceConnection","location":"voice/dev.kord.voice/-voice-connection/index.html","searchKeys":["VoiceConnection","class VoiceConnection(val data: VoiceConnectionData, val gateway: Gateway, val voiceGateway: VoiceGateway, val socket: VoiceUdpSocket, var voiceGatewayConfiguration: VoiceGatewayConfiguration, val streams: Streams, val audioProvider: AudioProvider, val frameInterceptor: FrameInterceptor, val frameSender: AudioFrameSender, val nonceStrategy: NonceStrategy, connectionDetachDuration: Duration)","dev.kord.voice.VoiceConnection"]},{"name":"class VoiceConnectionBuilder(var gateway: Gateway, var selfId: Snowflake, var channelId: Snowflake, var guildId: Snowflake)","description":"dev.kord.voice.VoiceConnectionBuilder","location":"voice/dev.kord.voice/-voice-connection-builder/index.html","searchKeys":["VoiceConnectionBuilder","class VoiceConnectionBuilder(var gateway: Gateway, var selfId: Snowflake, var channelId: Snowflake, var guildId: Snowflake)","dev.kord.voice.VoiceConnectionBuilder"]},{"name":"class VoiceConnectionInitializationException : Exception","description":"dev.kord.voice.exception.VoiceConnectionInitializationException","location":"voice/dev.kord.voice.exception/-voice-connection-initialization-exception/index.html","searchKeys":["VoiceConnectionInitializationException","class VoiceConnectionInitializationException : Exception","dev.kord.voice.exception.VoiceConnectionInitializationException"]},{"name":"class XSalsa20Poly1305Codec(val key: ByteArray)","description":"dev.kord.voice.encryption.XSalsa20Poly1305Codec","location":"voice/dev.kord.voice.encryption/-x-salsa20-poly1305-codec/index.html","searchKeys":["XSalsa20Poly1305Codec","class XSalsa20Poly1305Codec(val key: ByteArray)","dev.kord.voice.encryption.XSalsa20Poly1305Codec"]},{"name":"data class AudioFrameSenderConfiguration(val server: SocketAddress, val ssrc: UInt, val key: ByteArray, val interceptorConfiguration: FrameInterceptorConfiguration)","description":"dev.kord.voice.udp.AudioFrameSenderConfiguration","location":"voice/dev.kord.voice.udp/-audio-frame-sender-configuration/index.html","searchKeys":["AudioFrameSenderConfiguration","data class AudioFrameSenderConfiguration(val server: SocketAddress, val ssrc: UInt, val key: ByteArray, val interceptorConfiguration: FrameInterceptorConfiguration)","dev.kord.voice.udp.AudioFrameSenderConfiguration"]},{"name":"data class Data(val address: String, val port: Int, val mode: EncryptionMode)","description":"dev.kord.voice.gateway.SelectProtocol.Data","location":"voice/dev.kord.voice.gateway/-select-protocol/-data/index.html","searchKeys":["Data","data class Data(val address: String, val port: Int, val mode: EncryptionMode)","dev.kord.voice.gateway.SelectProtocol.Data"]},{"name":"data class DefaultAudioFrameSenderData(val udp: VoiceUdpSocket, val interceptor: FrameInterceptor, val provider: AudioProvider, val nonceStrategy: NonceStrategy)","description":"dev.kord.voice.udp.DefaultAudioFrameSenderData","location":"voice/dev.kord.voice.udp/-default-audio-frame-sender-data/index.html","searchKeys":["DefaultAudioFrameSenderData","data class DefaultAudioFrameSenderData(val udp: VoiceUdpSocket, val interceptor: FrameInterceptor, val provider: AudioProvider, val nonceStrategy: NonceStrategy)","dev.kord.voice.udp.DefaultAudioFrameSenderData"]},{"name":"data class DefaultFrameInterceptorData(val speakingState: SpeakingFlags = SpeakingFlags { +SpeakingFlag.Microphone })","description":"dev.kord.voice.DefaultFrameInterceptorData","location":"voice/dev.kord.voice/-default-frame-interceptor-data/index.html","searchKeys":["DefaultFrameInterceptorData","data class DefaultFrameInterceptorData(val speakingState: SpeakingFlags = SpeakingFlags { +SpeakingFlag.Microphone })","dev.kord.voice.DefaultFrameInterceptorData"]},{"name":"data class DefaultVoiceGatewayData(val selfId: Snowflake, val guildId: Snowflake, val sessionId: String, val client: HttpClient, val reconnectRetry: Retry, val eventFlow: MutableSharedFlow<VoiceEvent>)","description":"dev.kord.voice.gateway.DefaultVoiceGatewayData","location":"voice/dev.kord.voice.gateway/-default-voice-gateway-data/index.html","searchKeys":["DefaultVoiceGatewayData","data class DefaultVoiceGatewayData(val selfId: Snowflake, val guildId: Snowflake, val sessionId: String, val client: HttpClient, val reconnectRetry: Retry, val eventFlow: MutableSharedFlow<VoiceEvent>)","dev.kord.voice.gateway.DefaultVoiceGatewayData"]},{"name":"data class DiscordClose(val closeCode: VoiceGatewayCloseCode, val recoverable: Boolean) : Close","description":"dev.kord.voice.gateway.Close.DiscordClose","location":"voice/dev.kord.voice.gateway/-close/-discord-close/index.html","searchKeys":["DiscordClose","data class DiscordClose(val closeCode: VoiceGatewayCloseCode, val recoverable: Boolean) : Close","dev.kord.voice.gateway.Close.DiscordClose"]},{"name":"data class FrameInterceptorConfiguration(val gateway: Gateway, val voiceGateway: VoiceGateway, val ssrc: UInt)","description":"dev.kord.voice.FrameInterceptorConfiguration","location":"voice/dev.kord.voice/-frame-interceptor-configuration/index.html","searchKeys":["FrameInterceptorConfiguration","data class FrameInterceptorConfiguration(val gateway: Gateway, val voiceGateway: VoiceGateway, val ssrc: UInt)","dev.kord.voice.FrameInterceptorConfiguration"]},{"name":"data class Heartbeat(val nonce: Long) : Command","description":"dev.kord.voice.gateway.Heartbeat","location":"voice/dev.kord.voice.gateway/-heartbeat/index.html","searchKeys":["Heartbeat","data class Heartbeat(val nonce: Long) : Command","dev.kord.voice.gateway.Heartbeat"]},{"name":"data class HeartbeatAck(val nonce: Long) : VoiceEvent","description":"dev.kord.voice.gateway.HeartbeatAck","location":"voice/dev.kord.voice.gateway/-heartbeat-ack/index.html","searchKeys":["HeartbeatAck","data class HeartbeatAck(val nonce: Long) : VoiceEvent","dev.kord.voice.gateway.HeartbeatAck"]},{"name":"data class Hello(val version: Short, val heartbeatInterval: Double) : VoiceEvent","description":"dev.kord.voice.gateway.Hello","location":"voice/dev.kord.voice.gateway/-hello/index.html","searchKeys":["Hello","data class Hello(val version: Short, val heartbeatInterval: Double) : VoiceEvent","dev.kord.voice.gateway.Hello"]},{"name":"data class Identify(val serverId: Snowflake, val userId: Snowflake, val sessionId: String, val token: String) : Command","description":"dev.kord.voice.gateway.Identify","location":"voice/dev.kord.voice.gateway/-identify/index.html","searchKeys":["Identify","data class Identify(val serverId: Snowflake, val userId: Snowflake, val sessionId: String, val token: String) : Command","dev.kord.voice.gateway.Identify"]},{"name":"data class RTPPacket(val paddingBytes: UByte, val payloadType: Byte, val sequence: UShort, val timestamp: UInt, val ssrc: UInt, val csrcIdentifiers: UIntArray, val hasMarker: Boolean, val hasExtension: Boolean, val payload: ByteArrayView)","description":"dev.kord.voice.udp.RTPPacket","location":"voice/dev.kord.voice.udp/-r-t-p-packet/index.html","searchKeys":["RTPPacket","data class RTPPacket(val paddingBytes: UByte, val payloadType: Byte, val sequence: UShort, val timestamp: UInt, val ssrc: UInt, val csrcIdentifiers: UIntArray, val hasMarker: Boolean, val hasExtension: Boolean, val payload: ByteArrayView)","dev.kord.voice.udp.RTPPacket"]},{"name":"data class Ready(val ssrc: UInt, val ip: String, val port: Int, val modes: List<EncryptionMode>) : VoiceEvent","description":"dev.kord.voice.gateway.Ready","location":"voice/dev.kord.voice.gateway/-ready/index.html","searchKeys":["Ready","data class Ready(val ssrc: UInt, val ip: String, val port: Int, val modes: List<EncryptionMode>) : VoiceEvent","dev.kord.voice.gateway.Ready"]},{"name":"data class Resume(val serverId: Snowflake, val sessionId: String, val token: String) : Command","description":"dev.kord.voice.gateway.Resume","location":"voice/dev.kord.voice.gateway/-resume/index.html","searchKeys":["Resume","data class Resume(val serverId: Snowflake, val sessionId: String, val token: String) : Command","dev.kord.voice.gateway.Resume"]},{"name":"data class SelectProtocol(val protocol: String, val data: SelectProtocol.Data) : Command","description":"dev.kord.voice.gateway.SelectProtocol","location":"voice/dev.kord.voice.gateway/-select-protocol/index.html","searchKeys":["SelectProtocol","data class SelectProtocol(val protocol: String, val data: SelectProtocol.Data) : Command","dev.kord.voice.gateway.SelectProtocol"]},{"name":"data class SendSpeaking(val speaking: SpeakingFlags, val delay: Int, val ssrc: UInt) : Command","description":"dev.kord.voice.gateway.SendSpeaking","location":"voice/dev.kord.voice.gateway/-send-speaking/index.html","searchKeys":["SendSpeaking","data class SendSpeaking(val speaking: SpeakingFlags, val delay: Int, val ssrc: UInt) : Command","dev.kord.voice.gateway.SendSpeaking"]},{"name":"data class SessionDescription(val mode: EncryptionMode, val secretKey: List<UByte>) : VoiceEvent","description":"dev.kord.voice.gateway.SessionDescription","location":"voice/dev.kord.voice.gateway/-session-description/index.html","searchKeys":["SessionDescription","data class SessionDescription(val mode: EncryptionMode, val secretKey: List<UByte>) : VoiceEvent","dev.kord.voice.gateway.SessionDescription"]},{"name":"data class Speaking(val userId: Snowflake, val ssrc: UInt, val speaking: SpeakingFlags) : VoiceEvent","description":"dev.kord.voice.gateway.Speaking","location":"voice/dev.kord.voice.gateway/-speaking/index.html","searchKeys":["Speaking","data class Speaking(val userId: Snowflake, val ssrc: UInt, val speaking: SpeakingFlags) : VoiceEvent","dev.kord.voice.gateway.Speaking"]},{"name":"data class VoiceConnectionData(val selfId: Snowflake, val guildId: Snowflake, val sessionId: String)","description":"dev.kord.voice.VoiceConnectionData","location":"voice/dev.kord.voice/-voice-connection-data/index.html","searchKeys":["VoiceConnectionData","data class VoiceConnectionData(val selfId: Snowflake, val guildId: Snowflake, val sessionId: String)","dev.kord.voice.VoiceConnectionData"]},{"name":"data class VoiceGatewayConfiguration(val token: String, val endpoint: String)","description":"dev.kord.voice.gateway.VoiceGatewayConfiguration","location":"voice/dev.kord.voice.gateway/-voice-gateway-configuration/index.html","searchKeys":["VoiceGatewayConfiguration","data class VoiceGatewayConfiguration(val token: String, val endpoint: String)","dev.kord.voice.gateway.VoiceGatewayConfiguration"]},{"name":"enum EncryptionMode : Enum<EncryptionMode> ","description":"dev.kord.voice.EncryptionMode","location":"voice/dev.kord.voice/-encryption-mode/index.html","searchKeys":["EncryptionMode","enum EncryptionMode : Enum<EncryptionMode> ","dev.kord.voice.EncryptionMode"]},{"name":"enum OpCode : Enum<OpCode> ","description":"dev.kord.voice.gateway.OpCode","location":"voice/dev.kord.voice.gateway/-op-code/index.html","searchKeys":["OpCode","enum OpCode : Enum<OpCode> ","dev.kord.voice.gateway.OpCode"]},{"name":"enum SpeakingFlag : Enum<SpeakingFlag> ","description":"dev.kord.voice.SpeakingFlag","location":"voice/dev.kord.voice/-speaking-flag/index.html","searchKeys":["SpeakingFlag","enum SpeakingFlag : Enum<SpeakingFlag> ","dev.kord.voice.SpeakingFlag"]},{"name":"fun AudioFrame(data: ByteArray)","description":"dev.kord.voice.AudioFrame.AudioFrame","location":"voice/dev.kord.voice/-audio-frame/-audio-frame.html","searchKeys":["AudioFrame","fun AudioFrame(data: ByteArray)","dev.kord.voice.AudioFrame.AudioFrame"]},{"name":"fun AudioFrameSenderConfiguration(server: SocketAddress, ssrc: UInt, key: ByteArray, interceptorConfiguration: FrameInterceptorConfiguration)","description":"dev.kord.voice.udp.AudioFrameSenderConfiguration.AudioFrameSenderConfiguration","location":"voice/dev.kord.voice.udp/-audio-frame-sender-configuration/-audio-frame-sender-configuration.html","searchKeys":["AudioFrameSenderConfiguration","fun AudioFrameSenderConfiguration(server: SocketAddress, ssrc: UInt, key: ByteArray, interceptorConfiguration: FrameInterceptorConfiguration)","dev.kord.voice.udp.AudioFrameSenderConfiguration.AudioFrameSenderConfiguration"]},{"name":"fun AudioPacketProvider(key: ByteArray, nonceStrategy: NonceStrategy)","description":"dev.kord.voice.udp.AudioPacketProvider.AudioPacketProvider","location":"voice/dev.kord.voice.udp/-audio-packet-provider/-audio-packet-provider.html","searchKeys":["AudioPacketProvider","fun AudioPacketProvider(key: ByteArray, nonceStrategy: NonceStrategy)","dev.kord.voice.udp.AudioPacketProvider.AudioPacketProvider"]},{"name":"fun Builder(code: Int = 0)","description":"dev.kord.voice.SpeakingFlags.Builder.Builder","location":"voice/dev.kord.voice/-speaking-flags/-builder/-builder.html","searchKeys":["Builder","fun Builder(code: Int = 0)","dev.kord.voice.SpeakingFlags.Builder.Builder"]},{"name":"fun Builder(ssrc: UInt, timestamp: UInt, sequence: UShort, payloadType: Byte, payload: ByteArray)","description":"dev.kord.voice.udp.RTPPacket.Builder.Builder","location":"voice/dev.kord.voice.udp/-r-t-p-packet/-builder/-builder.html","searchKeys":["Builder","fun Builder(ssrc: UInt, timestamp: UInt, sequence: UShort, payloadType: Byte, payload: ByteArray)","dev.kord.voice.udp.RTPPacket.Builder.Builder"]},{"name":"fun ByteArray.mutableCursor(): MutableByteArrayCursor","description":"dev.kord.voice.io.mutableCursor","location":"voice/dev.kord.voice.io/mutable-cursor.html","searchKeys":["mutableCursor","fun ByteArray.mutableCursor(): MutableByteArrayCursor","dev.kord.voice.io.mutableCursor"]},{"name":"fun ByteArray.readableCursor(): ReadableByteArrayCursor","description":"dev.kord.voice.io.readableCursor","location":"voice/dev.kord.voice.io/readable-cursor.html","searchKeys":["readableCursor","fun ByteArray.readableCursor(): ReadableByteArrayCursor","dev.kord.voice.io.readableCursor"]},{"name":"fun ByteArray.view(): ByteArrayView","description":"dev.kord.voice.io.view","location":"voice/dev.kord.voice.io/view.html","searchKeys":["view","fun ByteArray.view(): ByteArrayView","dev.kord.voice.io.view"]},{"name":"fun ByteArray.view(start: Int, end: Int): ByteArrayView?","description":"dev.kord.voice.io.view","location":"voice/dev.kord.voice.io/view.html","searchKeys":["view","fun ByteArray.view(start: Int, end: Int): ByteArrayView?","dev.kord.voice.io.view"]},{"name":"fun ByteArrayView.mutableCursor(): MutableByteArrayCursor","description":"dev.kord.voice.io.mutableCursor","location":"voice/dev.kord.voice.io/mutable-cursor.html","searchKeys":["mutableCursor","fun ByteArrayView.mutableCursor(): MutableByteArrayCursor","dev.kord.voice.io.mutableCursor"]},{"name":"fun ByteArrayView.readableCursor(): ReadableByteArrayCursor","description":"dev.kord.voice.io.readableCursor","location":"voice/dev.kord.voice.io/readable-cursor.html","searchKeys":["readableCursor","fun ByteArrayView.readableCursor(): ReadableByteArrayCursor","dev.kord.voice.io.readableCursor"]},{"name":"fun Data(address: String, port: Int, mode: EncryptionMode)","description":"dev.kord.voice.gateway.SelectProtocol.Data.Data","location":"voice/dev.kord.voice.gateway/-select-protocol/-data/-data.html","searchKeys":["Data","fun Data(address: String, port: Int, mode: EncryptionMode)","dev.kord.voice.gateway.SelectProtocol.Data.Data"]},{"name":"fun DefaultAudioFrameSender(data: DefaultAudioFrameSenderData)","description":"dev.kord.voice.udp.DefaultAudioFrameSender.DefaultAudioFrameSender","location":"voice/dev.kord.voice.udp/-default-audio-frame-sender/-default-audio-frame-sender.html","searchKeys":["DefaultAudioFrameSender","fun DefaultAudioFrameSender(data: DefaultAudioFrameSenderData)","dev.kord.voice.udp.DefaultAudioFrameSender.DefaultAudioFrameSender"]},{"name":"fun DefaultAudioFrameSenderData(udp: VoiceUdpSocket, interceptor: FrameInterceptor, provider: AudioProvider, nonceStrategy: NonceStrategy)","description":"dev.kord.voice.udp.DefaultAudioFrameSenderData.DefaultAudioFrameSenderData","location":"voice/dev.kord.voice.udp/-default-audio-frame-sender-data/-default-audio-frame-sender-data.html","searchKeys":["DefaultAudioFrameSenderData","fun DefaultAudioFrameSenderData(udp: VoiceUdpSocket, interceptor: FrameInterceptor, provider: AudioProvider, nonceStrategy: NonceStrategy)","dev.kord.voice.udp.DefaultAudioFrameSenderData.DefaultAudioFrameSenderData"]},{"name":"fun DefaultAudioPacketProvider(key: ByteArray, nonceStrategy: NonceStrategy)","description":"dev.kord.voice.udp.DefaultAudioPacketProvider.DefaultAudioPacketProvider","location":"voice/dev.kord.voice.udp/-default-audio-packet-provider/-default-audio-packet-provider.html","searchKeys":["DefaultAudioPacketProvider","fun DefaultAudioPacketProvider(key: ByteArray, nonceStrategy: NonceStrategy)","dev.kord.voice.udp.DefaultAudioPacketProvider.DefaultAudioPacketProvider"]},{"name":"fun DefaultFrameInterceptor(data: DefaultFrameInterceptorData = DefaultFrameInterceptorData())","description":"dev.kord.voice.DefaultFrameInterceptor.DefaultFrameInterceptor","location":"voice/dev.kord.voice/-default-frame-interceptor/-default-frame-interceptor.html","searchKeys":["DefaultFrameInterceptor","fun DefaultFrameInterceptor(data: DefaultFrameInterceptorData = DefaultFrameInterceptorData())","dev.kord.voice.DefaultFrameInterceptor.DefaultFrameInterceptor"]},{"name":"fun DefaultFrameInterceptorData(speakingState: SpeakingFlags = SpeakingFlags { +SpeakingFlag.Microphone })","description":"dev.kord.voice.DefaultFrameInterceptorData.DefaultFrameInterceptorData","location":"voice/dev.kord.voice/-default-frame-interceptor-data/-default-frame-interceptor-data.html","searchKeys":["DefaultFrameInterceptorData","fun DefaultFrameInterceptorData(speakingState: SpeakingFlags = SpeakingFlags { +SpeakingFlag.Microphone })","dev.kord.voice.DefaultFrameInterceptorData.DefaultFrameInterceptorData"]},{"name":"fun DefaultStreams(voiceGateway: VoiceGateway, udp: VoiceUdpSocket, nonceStrategy: NonceStrategy)","description":"dev.kord.voice.streams.DefaultStreams.DefaultStreams","location":"voice/dev.kord.voice.streams/-default-streams/-default-streams.html","searchKeys":["DefaultStreams","fun DefaultStreams(voiceGateway: VoiceGateway, udp: VoiceUdpSocket, nonceStrategy: NonceStrategy)","dev.kord.voice.streams.DefaultStreams.DefaultStreams"]},{"name":"fun DefaultVoiceGateway(data: DefaultVoiceGatewayData)","description":"dev.kord.voice.gateway.DefaultVoiceGateway.DefaultVoiceGateway","location":"voice/dev.kord.voice.gateway/-default-voice-gateway/-default-voice-gateway.html","searchKeys":["DefaultVoiceGateway","fun DefaultVoiceGateway(data: DefaultVoiceGatewayData)","dev.kord.voice.gateway.DefaultVoiceGateway.DefaultVoiceGateway"]},{"name":"fun DefaultVoiceGatewayBuilder(selfId: Snowflake, guildId: Snowflake, sessionId: String)","description":"dev.kord.voice.gateway.DefaultVoiceGatewayBuilder.DefaultVoiceGatewayBuilder","location":"voice/dev.kord.voice.gateway/-default-voice-gateway-builder/-default-voice-gateway-builder.html","searchKeys":["DefaultVoiceGatewayBuilder","fun DefaultVoiceGatewayBuilder(selfId: Snowflake, guildId: Snowflake, sessionId: String)","dev.kord.voice.gateway.DefaultVoiceGatewayBuilder.DefaultVoiceGatewayBuilder"]},{"name":"fun DefaultVoiceGatewayData(selfId: Snowflake, guildId: Snowflake, sessionId: String, client: HttpClient, reconnectRetry: Retry, eventFlow: MutableSharedFlow<VoiceEvent>)","description":"dev.kord.voice.gateway.DefaultVoiceGatewayData.DefaultVoiceGatewayData","location":"voice/dev.kord.voice.gateway/-default-voice-gateway-data/-default-voice-gateway-data.html","searchKeys":["DefaultVoiceGatewayData","fun DefaultVoiceGatewayData(selfId: Snowflake, guildId: Snowflake, sessionId: String, client: HttpClient, reconnectRetry: Retry, eventFlow: MutableSharedFlow<VoiceEvent>)","dev.kord.voice.gateway.DefaultVoiceGatewayData.DefaultVoiceGatewayData"]},{"name":"fun DiscordClose(closeCode: VoiceGatewayCloseCode, recoverable: Boolean)","description":"dev.kord.voice.gateway.Close.DiscordClose.DiscordClose","location":"voice/dev.kord.voice.gateway/-close/-discord-close/-discord-close.html","searchKeys":["DiscordClose","fun DiscordClose(closeCode: VoiceGatewayCloseCode, recoverable: Boolean)","dev.kord.voice.gateway.Close.DiscordClose.DiscordClose"]},{"name":"fun FrameInterceptorConfiguration(gateway: Gateway, voiceGateway: VoiceGateway, ssrc: UInt)","description":"dev.kord.voice.FrameInterceptorConfiguration.FrameInterceptorConfiguration","location":"voice/dev.kord.voice/-frame-interceptor-configuration/-frame-interceptor-configuration.html","searchKeys":["FrameInterceptorConfiguration","fun FrameInterceptorConfiguration(gateway: Gateway, voiceGateway: VoiceGateway, ssrc: UInt)","dev.kord.voice.FrameInterceptorConfiguration.FrameInterceptorConfiguration"]},{"name":"fun Heartbeat(nonce: Long)","description":"dev.kord.voice.gateway.Heartbeat.Heartbeat","location":"voice/dev.kord.voice.gateway/-heartbeat/-heartbeat.html","searchKeys":["Heartbeat","fun Heartbeat(nonce: Long)","dev.kord.voice.gateway.Heartbeat.Heartbeat"]},{"name":"fun HeartbeatAck(nonce: Long)","description":"dev.kord.voice.gateway.HeartbeatAck.HeartbeatAck","location":"voice/dev.kord.voice.gateway/-heartbeat-ack/-heartbeat-ack.html","searchKeys":["HeartbeatAck","fun HeartbeatAck(nonce: Long)","dev.kord.voice.gateway.HeartbeatAck.HeartbeatAck"]},{"name":"fun Hello(version: Short, heartbeatInterval: Double)","description":"dev.kord.voice.gateway.Hello.Hello","location":"voice/dev.kord.voice.gateway/-hello/-hello.html","searchKeys":["Hello","fun Hello(version: Short, heartbeatInterval: Double)","dev.kord.voice.gateway.Hello.Hello"]},{"name":"fun Identify(serverId: Snowflake, userId: Snowflake, sessionId: String, token: String)","description":"dev.kord.voice.gateway.Identify.Identify","location":"voice/dev.kord.voice.gateway/-identify/-identify.html","searchKeys":["Identify","fun Identify(serverId: Snowflake, userId: Snowflake, sessionId: String, token: String)","dev.kord.voice.gateway.Identify.Identify"]},{"name":"fun LiteNonceStrategy()","description":"dev.kord.voice.encryption.strategies.LiteNonceStrategy.LiteNonceStrategy","location":"voice/dev.kord.voice.encryption.strategies/-lite-nonce-strategy/-lite-nonce-strategy.html","searchKeys":["LiteNonceStrategy","fun LiteNonceStrategy()","dev.kord.voice.encryption.strategies.LiteNonceStrategy.LiteNonceStrategy"]},{"name":"fun MutableByteArrayCursor(data: ByteArray)","description":"dev.kord.voice.io.MutableByteArrayCursor.MutableByteArrayCursor","location":"voice/dev.kord.voice.io/-mutable-byte-array-cursor/-mutable-byte-array-cursor.html","searchKeys":["MutableByteArrayCursor","fun MutableByteArrayCursor(data: ByteArray)","dev.kord.voice.io.MutableByteArrayCursor.MutableByteArrayCursor"]},{"name":"fun MutableByteArrayCursor.writeByteArrayOrResize(data: ByteArray)","description":"dev.kord.voice.io.writeByteArrayOrResize","location":"voice/dev.kord.voice.io/write-byte-array-or-resize.html","searchKeys":["writeByteArrayOrResize","fun MutableByteArrayCursor.writeByteArrayOrResize(data: ByteArray)","dev.kord.voice.io.writeByteArrayOrResize"]},{"name":"fun MutableByteArrayCursor.writeByteViewOrResize(view: ByteArrayView)","description":"dev.kord.voice.io.writeByteViewOrResize","location":"voice/dev.kord.voice.io/write-byte-view-or-resize.html","searchKeys":["writeByteViewOrResize","fun MutableByteArrayCursor.writeByteViewOrResize(view: ByteArrayView)","dev.kord.voice.io.writeByteViewOrResize"]},{"name":"fun NormalNonceStrategy()","description":"dev.kord.voice.encryption.strategies.NormalNonceStrategy.NormalNonceStrategy","location":"voice/dev.kord.voice.encryption.strategies/-normal-nonce-strategy/-normal-nonce-strategy.html","searchKeys":["NormalNonceStrategy","fun NormalNonceStrategy()","dev.kord.voice.encryption.strategies.NormalNonceStrategy.NormalNonceStrategy"]},{"name":"fun RTPPacket(paddingBytes: UByte, payloadType: Byte, sequence: UShort, timestamp: UInt, ssrc: UInt, csrcIdentifiers: UIntArray, hasMarker: Boolean, hasExtension: Boolean, payload: ByteArrayView)","description":"dev.kord.voice.udp.RTPPacket.RTPPacket","location":"voice/dev.kord.voice.udp/-r-t-p-packet/-r-t-p-packet.html","searchKeys":["RTPPacket","fun RTPPacket(paddingBytes: UByte, payloadType: Byte, sequence: UShort, timestamp: UInt, ssrc: UInt, csrcIdentifiers: UIntArray, hasMarker: Boolean, hasExtension: Boolean, payload: ByteArrayView)","dev.kord.voice.udp.RTPPacket.RTPPacket"]},{"name":"fun RTPPacket(ssrc: UInt, timestamp: UInt, sequence: UShort, payloadType: Byte, payload: ByteArray, builder: RTPPacket.Builder.() -> Unit = { }): RTPPacket","description":"dev.kord.voice.udp.RTPPacket","location":"voice/dev.kord.voice.udp/-r-t-p-packet.html","searchKeys":["RTPPacket","fun RTPPacket(ssrc: UInt, timestamp: UInt, sequence: UShort, payloadType: Byte, payload: ByteArray, builder: RTPPacket.Builder.() -> Unit = { }): RTPPacket","dev.kord.voice.udp.RTPPacket"]},{"name":"fun ReadableByteArrayCursor(view: ByteArrayView)","description":"dev.kord.voice.io.ReadableByteArrayCursor.ReadableByteArrayCursor","location":"voice/dev.kord.voice.io/-readable-byte-array-cursor/-readable-byte-array-cursor.html","searchKeys":["ReadableByteArrayCursor","fun ReadableByteArrayCursor(view: ByteArrayView)","dev.kord.voice.io.ReadableByteArrayCursor.ReadableByteArrayCursor"]},{"name":"fun Ready(ssrc: UInt, ip: String, port: Int, modes: List<EncryptionMode>)","description":"dev.kord.voice.gateway.Ready.Ready","location":"voice/dev.kord.voice.gateway/-ready/-ready.html","searchKeys":["Ready","fun Ready(ssrc: UInt, ip: String, port: Int, modes: List<EncryptionMode>)","dev.kord.voice.gateway.Ready.Ready"]},{"name":"fun Resume(serverId: Snowflake, sessionId: String, token: String)","description":"dev.kord.voice.gateway.Resume.Resume","location":"voice/dev.kord.voice.gateway/-resume/-resume.html","searchKeys":["Resume","fun Resume(serverId: Snowflake, sessionId: String, token: String)","dev.kord.voice.gateway.Resume.Resume"]},{"name":"fun SelectProtocol(protocol: String, data: SelectProtocol.Data)","description":"dev.kord.voice.gateway.SelectProtocol.SelectProtocol","location":"voice/dev.kord.voice.gateway/-select-protocol/-select-protocol.html","searchKeys":["SelectProtocol","fun SelectProtocol(protocol: String, data: SelectProtocol.Data)","dev.kord.voice.gateway.SelectProtocol.SelectProtocol"]},{"name":"fun SendSpeaking(speaking: SpeakingFlags, delay: Int, ssrc: UInt)","description":"dev.kord.voice.gateway.SendSpeaking.SendSpeaking","location":"voice/dev.kord.voice.gateway/-send-speaking/-send-speaking.html","searchKeys":["SendSpeaking","fun SendSpeaking(speaking: SpeakingFlags, delay: Int, ssrc: UInt)","dev.kord.voice.gateway.SendSpeaking.SendSpeaking"]},{"name":"fun SessionDescription(mode: EncryptionMode, secretKey: List<UByte>)","description":"dev.kord.voice.gateway.SessionDescription.SessionDescription","location":"voice/dev.kord.voice.gateway/-session-description/-session-description.html","searchKeys":["SessionDescription","fun SessionDescription(mode: EncryptionMode, secretKey: List<UByte>)","dev.kord.voice.gateway.SessionDescription.SessionDescription"]},{"name":"fun Speaking(userId: Snowflake, ssrc: UInt, speaking: SpeakingFlags)","description":"dev.kord.voice.gateway.Speaking.Speaking","location":"voice/dev.kord.voice.gateway/-speaking/-speaking.html","searchKeys":["Speaking","fun Speaking(userId: Snowflake, ssrc: UInt, speaking: SpeakingFlags)","dev.kord.voice.gateway.Speaking.Speaking"]},{"name":"fun SpeakingFlags(flags: Iterable<SpeakingFlag>): SpeakingFlags","description":"dev.kord.voice.SpeakingFlags","location":"voice/dev.kord.voice/-speaking-flags.html","searchKeys":["SpeakingFlags","fun SpeakingFlags(flags: Iterable<SpeakingFlag>): SpeakingFlags","dev.kord.voice.SpeakingFlags"]},{"name":"fun SpeakingFlags(flags: Iterable<SpeakingFlags>): SpeakingFlags","description":"dev.kord.voice.SpeakingFlags","location":"voice/dev.kord.voice/-speaking-flags.html","searchKeys":["SpeakingFlags","fun SpeakingFlags(flags: Iterable<SpeakingFlags>): SpeakingFlags","dev.kord.voice.SpeakingFlags"]},{"name":"fun SpeakingFlags(vararg flags: SpeakingFlag): SpeakingFlags","description":"dev.kord.voice.SpeakingFlags","location":"voice/dev.kord.voice/-speaking-flags.html","searchKeys":["SpeakingFlags","fun SpeakingFlags(vararg flags: SpeakingFlag): SpeakingFlags","dev.kord.voice.SpeakingFlags"]},{"name":"fun SpeakingFlags(vararg flags: SpeakingFlags): SpeakingFlags","description":"dev.kord.voice.SpeakingFlags","location":"voice/dev.kord.voice/-speaking-flags.html","searchKeys":["SpeakingFlags","fun SpeakingFlags(vararg flags: SpeakingFlags): SpeakingFlags","dev.kord.voice.SpeakingFlags"]},{"name":"fun SuffixNonceStrategy()","description":"dev.kord.voice.encryption.strategies.SuffixNonceStrategy.SuffixNonceStrategy","location":"voice/dev.kord.voice.encryption.strategies/-suffix-nonce-strategy/-suffix-nonce-strategy.html","searchKeys":["SuffixNonceStrategy","fun SuffixNonceStrategy()","dev.kord.voice.encryption.strategies.SuffixNonceStrategy.SuffixNonceStrategy"]},{"name":"fun Unknown(code: Int)","description":"dev.kord.voice.gateway.VoiceGatewayCloseCode.Unknown.Unknown","location":"voice/dev.kord.voice.gateway/-voice-gateway-close-code/-unknown/-unknown.html","searchKeys":["Unknown","fun Unknown(code: Int)","dev.kord.voice.gateway.VoiceGatewayCloseCode.Unknown.Unknown"]},{"name":"fun Unknown(value: Byte)","description":"dev.kord.voice.udp.PayloadType.Unknown.Unknown","location":"voice/dev.kord.voice.udp/-payload-type/-unknown/-unknown.html","searchKeys":["Unknown","fun Unknown(value: Byte)","dev.kord.voice.udp.PayloadType.Unknown.Unknown"]},{"name":"fun VoiceConnection(data: VoiceConnectionData, gateway: Gateway, voiceGateway: VoiceGateway, socket: VoiceUdpSocket, voiceGatewayConfiguration: VoiceGatewayConfiguration, streams: Streams, audioProvider: AudioProvider, frameInterceptor: FrameInterceptor, frameSender: AudioFrameSender, nonceStrategy: NonceStrategy, connectionDetachDuration: Duration)","description":"dev.kord.voice.VoiceConnection.VoiceConnection","location":"voice/dev.kord.voice/-voice-connection/-voice-connection.html","searchKeys":["VoiceConnection","fun VoiceConnection(data: VoiceConnectionData, gateway: Gateway, voiceGateway: VoiceGateway, socket: VoiceUdpSocket, voiceGatewayConfiguration: VoiceGatewayConfiguration, streams: Streams, audioProvider: AudioProvider, frameInterceptor: FrameInterceptor, frameSender: AudioFrameSender, nonceStrategy: NonceStrategy, connectionDetachDuration: Duration)","dev.kord.voice.VoiceConnection.VoiceConnection"]},{"name":"fun VoiceConnectionBuilder(gateway: Gateway, selfId: Snowflake, channelId: Snowflake, guildId: Snowflake)","description":"dev.kord.voice.VoiceConnectionBuilder.VoiceConnectionBuilder","location":"voice/dev.kord.voice/-voice-connection-builder/-voice-connection-builder.html","searchKeys":["VoiceConnectionBuilder","fun VoiceConnectionBuilder(gateway: Gateway, selfId: Snowflake, channelId: Snowflake, guildId: Snowflake)","dev.kord.voice.VoiceConnectionBuilder.VoiceConnectionBuilder"]},{"name":"fun VoiceConnectionData(selfId: Snowflake, guildId: Snowflake, sessionId: String)","description":"dev.kord.voice.VoiceConnectionData.VoiceConnectionData","location":"voice/dev.kord.voice/-voice-connection-data/-voice-connection-data.html","searchKeys":["VoiceConnectionData","fun VoiceConnectionData(selfId: Snowflake, guildId: Snowflake, sessionId: String)","dev.kord.voice.VoiceConnectionData.VoiceConnectionData"]},{"name":"fun VoiceConnectionInitializationException(cause: Throwable)","description":"dev.kord.voice.exception.VoiceConnectionInitializationException.VoiceConnectionInitializationException","location":"voice/dev.kord.voice.exception/-voice-connection-initialization-exception/-voice-connection-initialization-exception.html","searchKeys":["VoiceConnectionInitializationException","fun VoiceConnectionInitializationException(cause: Throwable)","dev.kord.voice.exception.VoiceConnectionInitializationException.VoiceConnectionInitializationException"]},{"name":"fun VoiceConnectionInitializationException(message: String)","description":"dev.kord.voice.exception.VoiceConnectionInitializationException.VoiceConnectionInitializationException","location":"voice/dev.kord.voice.exception/-voice-connection-initialization-exception/-voice-connection-initialization-exception.html","searchKeys":["VoiceConnectionInitializationException","fun VoiceConnectionInitializationException(message: String)","dev.kord.voice.exception.VoiceConnectionInitializationException.VoiceConnectionInitializationException"]},{"name":"fun VoiceConnectionInitializationException(message: String, cause: Throwable)","description":"dev.kord.voice.exception.VoiceConnectionInitializationException.VoiceConnectionInitializationException","location":"voice/dev.kord.voice.exception/-voice-connection-initialization-exception/-voice-connection-initialization-exception.html","searchKeys":["VoiceConnectionInitializationException","fun VoiceConnectionInitializationException(message: String, cause: Throwable)","dev.kord.voice.exception.VoiceConnectionInitializationException.VoiceConnectionInitializationException"]},{"name":"fun VoiceGatewayConfiguration(token: String, endpoint: String)","description":"dev.kord.voice.gateway.VoiceGatewayConfiguration.VoiceGatewayConfiguration","location":"voice/dev.kord.voice.gateway/-voice-gateway-configuration/-voice-gateway-configuration.html","searchKeys":["VoiceGatewayConfiguration","fun VoiceGatewayConfiguration(token: String, endpoint: String)","dev.kord.voice.gateway.VoiceGatewayConfiguration.VoiceGatewayConfiguration"]},{"name":"fun XSalsa20Poly1305Codec(key: ByteArray)","description":"dev.kord.voice.encryption.XSalsa20Poly1305Codec.XSalsa20Poly1305Codec","location":"voice/dev.kord.voice.encryption/-x-salsa20-poly1305-codec/-x-salsa20-poly1305-codec.html","searchKeys":["XSalsa20Poly1305Codec","fun XSalsa20Poly1305Codec(key: ByteArray)","dev.kord.voice.encryption.XSalsa20Poly1305Codec.XSalsa20Poly1305Codec"]},{"name":"fun XSalsa20Poly1305Codec.decrypt(box: ByteArray, boxOffset: Int = 0, boxLength: Int = box.size, nonce: ByteArray): ByteArray?","description":"dev.kord.voice.encryption.decrypt","location":"voice/dev.kord.voice.encryption/decrypt.html","searchKeys":["decrypt","fun XSalsa20Poly1305Codec.decrypt(box: ByteArray, boxOffset: Int = 0, boxLength: Int = box.size, nonce: ByteArray): ByteArray?","dev.kord.voice.encryption.decrypt"]},{"name":"fun XSalsa20Poly1305Codec.encrypt(message: ByteArray, mOffset: Int = 0, mLength: Int = message.size, nonce: ByteArray): ByteArray?","description":"dev.kord.voice.encryption.encrypt","location":"voice/dev.kord.voice.encryption/encrypt.html","searchKeys":["encrypt","fun XSalsa20Poly1305Codec.encrypt(message: ByteArray, mOffset: Int = 0, mLength: Int = message.size, nonce: ByteArray): ByteArray?","dev.kord.voice.encryption.encrypt"]},{"name":"fun asByteArray(): ByteArray","description":"dev.kord.voice.udp.RTPPacket.asByteArray","location":"voice/dev.kord.voice.udp/-r-t-p-packet/as-byte-array.html","searchKeys":["asByteArray","fun asByteArray(): ByteArray","dev.kord.voice.udp.RTPPacket.asByteArray"]},{"name":"fun asByteArrayView(buffer: MutableByteArrayCursor): ByteArrayView","description":"dev.kord.voice.udp.RTPPacket.asByteArrayView","location":"voice/dev.kord.voice.udp/-r-t-p-packet/as-byte-array-view.html","searchKeys":["asByteArrayView","fun asByteArrayView(buffer: MutableByteArrayCursor): ByteArrayView","dev.kord.voice.udp.RTPPacket.asByteArrayView"]},{"name":"fun asInt(): Int","description":"dev.kord.voice.io.ByteArrayView.asInt","location":"voice/dev.kord.voice.io/-byte-array-view/as-int.html","searchKeys":["asInt","fun asInt(): Int","dev.kord.voice.io.ByteArrayView.asInt"]},{"name":"fun asShort(): Short","description":"dev.kord.voice.io.ByteArrayView.asShort","location":"voice/dev.kord.voice.io/-byte-array-view/as-short.html","searchKeys":["asShort","fun asShort(): Short","dev.kord.voice.io.ByteArrayView.asShort"]},{"name":"fun audioProvider(provider: AudioProvider)","description":"dev.kord.voice.VoiceConnectionBuilder.audioProvider","location":"voice/dev.kord.voice/-voice-connection-builder/audio-provider.html","searchKeys":["audioProvider","fun audioProvider(provider: AudioProvider)","dev.kord.voice.VoiceConnectionBuilder.audioProvider"]},{"name":"fun build(): DefaultVoiceGateway","description":"dev.kord.voice.gateway.DefaultVoiceGatewayBuilder.build","location":"voice/dev.kord.voice.gateway/-default-voice-gateway-builder/build.html","searchKeys":["build","fun build(): DefaultVoiceGateway","dev.kord.voice.gateway.DefaultVoiceGatewayBuilder.build"]},{"name":"fun build(): RTPPacket","description":"dev.kord.voice.udp.RTPPacket.Builder.build","location":"voice/dev.kord.voice.udp/-r-t-p-packet/-builder/build.html","searchKeys":["build","fun build(): RTPPacket","dev.kord.voice.udp.RTPPacket.Builder.build"]},{"name":"fun clone(): ByteArrayView","description":"dev.kord.voice.io.ByteArrayView.clone","location":"voice/dev.kord.voice.io/-byte-array-view/clone.html","searchKeys":["clone","fun clone(): ByteArrayView","dev.kord.voice.io.ByteArrayView.clone"]},{"name":"fun clone(): RTPPacket","description":"dev.kord.voice.udp.RTPPacket.clone","location":"voice/dev.kord.voice.udp/-r-t-p-packet/clone.html","searchKeys":["clone","fun clone(): RTPPacket","dev.kord.voice.udp.RTPPacket.clone"]},{"name":"fun consume(n: Int)","description":"dev.kord.voice.io.ReadableByteArrayCursor.consume","location":"voice/dev.kord.voice.io/-readable-byte-array-cursor/consume.html","searchKeys":["consume","fun consume(n: Int)","dev.kord.voice.io.ReadableByteArrayCursor.consume"]},{"name":"fun decrypt(box: ByteArray, boxOffset: Int = 0, boxLength: Int = box.size, nonce: ByteArray, output: MutableByteArrayCursor): Boolean","description":"dev.kord.voice.encryption.XSalsa20Poly1305Codec.decrypt","location":"voice/dev.kord.voice.encryption/-x-salsa20-poly1305-codec/decrypt.html","searchKeys":["decrypt","fun decrypt(box: ByteArray, boxOffset: Int = 0, boxLength: Int = box.size, nonce: ByteArray, output: MutableByteArrayCursor): Boolean","dev.kord.voice.encryption.XSalsa20Poly1305Codec.decrypt"]},{"name":"fun encrypt(message: ByteArray, mOffset: Int = 0, mLength: Int = message.size, nonce: ByteArray, output: MutableByteArrayCursor): Boolean","description":"dev.kord.voice.encryption.XSalsa20Poly1305Codec.encrypt","location":"voice/dev.kord.voice.encryption/-x-salsa20-poly1305-codec/encrypt.html","searchKeys":["encrypt","fun encrypt(message: ByteArray, mOffset: Int = 0, mLength: Int = message.size, nonce: ByteArray, output: MutableByteArrayCursor): Boolean","dev.kord.voice.encryption.XSalsa20Poly1305Codec.encrypt"]},{"name":"fun flags(): SpeakingFlags","description":"dev.kord.voice.SpeakingFlags.Builder.flags","location":"voice/dev.kord.voice/-speaking-flags/-builder/flags.html","searchKeys":["flags","fun flags(): SpeakingFlags","dev.kord.voice.SpeakingFlags.Builder.flags"]},{"name":"fun frameInterceptor(frameInterceptor: FrameInterceptor)","description":"dev.kord.voice.VoiceConnectionBuilder.frameInterceptor","location":"voice/dev.kord.voice/-voice-connection-builder/frame-interceptor.html","searchKeys":["frameInterceptor","fun frameInterceptor(frameInterceptor: FrameInterceptor)","dev.kord.voice.VoiceConnectionBuilder.frameInterceptor"]},{"name":"fun from(data: ByteArray, start: Int, end: Int): ByteArrayView?","description":"dev.kord.voice.io.ByteArrayView.Companion.from","location":"voice/dev.kord.voice.io/-byte-array-view/-companion/from.html","searchKeys":["from","fun from(data: ByteArray, start: Int, end: Int): ByteArrayView?","dev.kord.voice.io.ByteArrayView.Companion.from"]},{"name":"fun from(value: Byte): PayloadType","description":"dev.kord.voice.udp.PayloadType.Companion.from","location":"voice/dev.kord.voice.udp/-payload-type/-companion/from.html","searchKeys":["from","fun from(value: Byte): PayloadType","dev.kord.voice.udp.PayloadType.Companion.from"]},{"name":"fun fromData(data: ByteArray?): AudioFrame?","description":"dev.kord.voice.AudioFrame.Companion.fromData","location":"voice/dev.kord.voice/-audio-frame/-companion/from-data.html","searchKeys":["fromData","fun fromData(data: ByteArray?): AudioFrame?","dev.kord.voice.AudioFrame.Companion.fromData"]},{"name":"fun fromPacket(packet: ByteReadPacket): RTPPacket?","description":"dev.kord.voice.udp.RTPPacket.Companion.fromPacket","location":"voice/dev.kord.voice.udp/-r-t-p-packet/-companion/from-packet.html","searchKeys":["fromPacket","fun fromPacket(packet: ByteReadPacket): RTPPacket?","dev.kord.voice.udp.RTPPacket.Companion.fromPacket"]},{"name":"fun interface AudioProvider","description":"dev.kord.voice.AudioProvider","location":"voice/dev.kord.voice/-audio-provider/index.html","searchKeys":["AudioProvider","fun interface AudioProvider","dev.kord.voice.AudioProvider"]},{"name":"fun interface FrameInterceptor","description":"dev.kord.voice.FrameInterceptor","location":"voice/dev.kord.voice/-frame-interceptor/index.html","searchKeys":["FrameInterceptor","fun interface FrameInterceptor","dev.kord.voice.FrameInterceptor"]},{"name":"fun none(): VoiceGateway","description":"dev.kord.voice.gateway.VoiceGateway.Companion.none","location":"voice/dev.kord.voice.gateway/-voice-gateway/-companion/none.html","searchKeys":["none","fun none(): VoiceGateway","dev.kord.voice.gateway.VoiceGateway.Companion.none"]},{"name":"fun none(): VoiceUdpSocket","description":"dev.kord.voice.udp.VoiceUdpSocket.Companion.none","location":"voice/dev.kord.voice.udp/-voice-udp-socket/-companion/none.html","searchKeys":["none","fun none(): VoiceUdpSocket","dev.kord.voice.udp.VoiceUdpSocket.Companion.none"]},{"name":"fun of(code: Int): VoiceGatewayCloseCode","description":"dev.kord.voice.gateway.VoiceGatewayCloseCode.Companion.of","location":"voice/dev.kord.voice.gateway/-voice-gateway-close-code/-companion/of.html","searchKeys":["of","fun of(code: Int): VoiceGatewayCloseCode","dev.kord.voice.gateway.VoiceGatewayCloseCode.Companion.of"]},{"name":"fun readByte(): Byte","description":"dev.kord.voice.io.ReadableByteArrayCursor.readByte","location":"voice/dev.kord.voice.io/-readable-byte-array-cursor/read-byte.html","searchKeys":["readByte","fun readByte(): Byte","dev.kord.voice.io.ReadableByteArrayCursor.readByte"]},{"name":"fun readBytes(n: Int): ByteArrayView","description":"dev.kord.voice.io.ReadableByteArrayCursor.readBytes","location":"voice/dev.kord.voice.io/-readable-byte-array-cursor/read-bytes.html","searchKeys":["readBytes","fun readBytes(n: Int): ByteArrayView","dev.kord.voice.io.ReadableByteArrayCursor.readBytes"]},{"name":"fun readInt(): Int","description":"dev.kord.voice.io.ReadableByteArrayCursor.readInt","location":"voice/dev.kord.voice.io/-readable-byte-array-cursor/read-int.html","searchKeys":["readInt","fun readInt(): Int","dev.kord.voice.io.ReadableByteArrayCursor.readInt"]},{"name":"fun readRemaining(): ByteArrayView","description":"dev.kord.voice.io.ReadableByteArrayCursor.readRemaining","location":"voice/dev.kord.voice.io/-readable-byte-array-cursor/read-remaining.html","searchKeys":["readRemaining","fun readRemaining(): ByteArrayView","dev.kord.voice.io.ReadableByteArrayCursor.readRemaining"]},{"name":"fun readShort(): Short","description":"dev.kord.voice.io.ReadableByteArrayCursor.readShort","location":"voice/dev.kord.voice.io/-readable-byte-array-cursor/read-short.html","searchKeys":["readShort","fun readShort(): Short","dev.kord.voice.io.ReadableByteArrayCursor.readShort"]},{"name":"fun reset()","description":"dev.kord.voice.io.MutableByteArrayCursor.reset","location":"voice/dev.kord.voice.io/-mutable-byte-array-cursor/reset.html","searchKeys":["reset","fun reset()","dev.kord.voice.io.MutableByteArrayCursor.reset"]},{"name":"fun resize(newSize: Int, ifSmaller: Boolean = false): Boolean","description":"dev.kord.voice.io.MutableByteArrayCursor.resize","location":"voice/dev.kord.voice.io/-mutable-byte-array-cursor/resize.html","searchKeys":["resize","fun resize(newSize: Int, ifSmaller: Boolean = false): Boolean","dev.kord.voice.io.MutableByteArrayCursor.resize"]},{"name":"fun resize(start: Int = this.dataStart, end: Int = this.dataEnd): Boolean","description":"dev.kord.voice.io.ByteArrayView.resize","location":"voice/dev.kord.voice.io/-byte-array-view/resize.html","searchKeys":["resize","fun resize(start: Int = this.dataStart, end: Int = this.dataEnd): Boolean","dev.kord.voice.io.ByteArrayView.resize"]},{"name":"fun toByteArray(): ByteArray","description":"dev.kord.voice.io.ByteArrayView.toByteArray","location":"voice/dev.kord.voice.io/-byte-array-view/to-byte-array.html","searchKeys":["toByteArray","fun toByteArray(): ByteArray","dev.kord.voice.io.ByteArrayView.toByteArray"]},{"name":"fun valueOf(value: String): EncryptionMode","description":"dev.kord.voice.EncryptionMode.valueOf","location":"voice/dev.kord.voice/-encryption-mode/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): EncryptionMode","dev.kord.voice.EncryptionMode.valueOf"]},{"name":"fun valueOf(value: String): OpCode","description":"dev.kord.voice.gateway.OpCode.valueOf","location":"voice/dev.kord.voice.gateway/-op-code/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): OpCode","dev.kord.voice.gateway.OpCode.valueOf"]},{"name":"fun valueOf(value: String): SpeakingFlag","description":"dev.kord.voice.SpeakingFlag.valueOf","location":"voice/dev.kord.voice/-speaking-flag/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): SpeakingFlag","dev.kord.voice.SpeakingFlag.valueOf"]},{"name":"fun values(): Array<EncryptionMode>","description":"dev.kord.voice.EncryptionMode.values","location":"voice/dev.kord.voice/-encryption-mode/values.html","searchKeys":["values","fun values(): Array<EncryptionMode>","dev.kord.voice.EncryptionMode.values"]},{"name":"fun values(): Array<OpCode>","description":"dev.kord.voice.gateway.OpCode.values","location":"voice/dev.kord.voice.gateway/-op-code/values.html","searchKeys":["values","fun values(): Array<OpCode>","dev.kord.voice.gateway.OpCode.values"]},{"name":"fun values(): Array<SpeakingFlag>","description":"dev.kord.voice.SpeakingFlag.values","location":"voice/dev.kord.voice/-speaking-flag/values.html","searchKeys":["values","fun values(): Array<SpeakingFlag>","dev.kord.voice.SpeakingFlag.values"]},{"name":"fun view(start: Int = dataStart, end: Int = dataEnd): ByteArrayView?","description":"dev.kord.voice.io.ByteArrayView.view","location":"voice/dev.kord.voice.io/-byte-array-view/view.html","searchKeys":["view","fun view(start: Int = dataStart, end: Int = dataEnd): ByteArrayView?","dev.kord.voice.io.ByteArrayView.view"]},{"name":"fun voiceGateway(builder: DefaultVoiceGatewayBuilder.() -> Unit)","description":"dev.kord.voice.VoiceConnectionBuilder.voiceGateway","location":"voice/dev.kord.voice/-voice-connection-builder/voice-gateway.html","searchKeys":["voiceGateway","fun voiceGateway(builder: DefaultVoiceGatewayBuilder.() -> Unit)","dev.kord.voice.VoiceConnectionBuilder.voiceGateway"]},{"name":"fun writeByte(b: Byte)","description":"dev.kord.voice.io.MutableByteArrayCursor.writeByte","location":"voice/dev.kord.voice.io/-mutable-byte-array-cursor/write-byte.html","searchKeys":["writeByte","fun writeByte(b: Byte)","dev.kord.voice.io.MutableByteArrayCursor.writeByte"]},{"name":"fun writeByteArray(array: ByteArray, offset: Int = 0, length: Int = array.size)","description":"dev.kord.voice.io.MutableByteArrayCursor.writeByteArray","location":"voice/dev.kord.voice.io/-mutable-byte-array-cursor/write-byte-array.html","searchKeys":["writeByteArray","fun writeByteArray(array: ByteArray, offset: Int = 0, length: Int = array.size)","dev.kord.voice.io.MutableByteArrayCursor.writeByteArray"]},{"name":"fun writeByteView(view: ByteArrayView)","description":"dev.kord.voice.io.MutableByteArrayCursor.writeByteView","location":"voice/dev.kord.voice.io/-mutable-byte-array-cursor/write-byte-view.html","searchKeys":["writeByteView","fun writeByteView(view: ByteArrayView)","dev.kord.voice.io.MutableByteArrayCursor.writeByteView"]},{"name":"fun writeHeader(): ByteArray","description":"dev.kord.voice.udp.RTPPacket.writeHeader","location":"voice/dev.kord.voice.udp/-r-t-p-packet/write-header.html","searchKeys":["writeHeader","fun writeHeader(): ByteArray","dev.kord.voice.udp.RTPPacket.writeHeader"]},{"name":"fun writeHeader(buffer: MutableByteArrayCursor)","description":"dev.kord.voice.udp.RTPPacket.writeHeader","location":"voice/dev.kord.voice.udp/-r-t-p-packet/write-header.html","searchKeys":["writeHeader","fun writeHeader(buffer: MutableByteArrayCursor)","dev.kord.voice.udp.RTPPacket.writeHeader"]},{"name":"fun writeInt(i: Int)","description":"dev.kord.voice.io.MutableByteArrayCursor.writeInt","location":"voice/dev.kord.voice.io/-mutable-byte-array-cursor/write-int.html","searchKeys":["writeInt","fun writeInt(i: Int)","dev.kord.voice.io.MutableByteArrayCursor.writeInt"]},{"name":"fun writeShort(s: Short)","description":"dev.kord.voice.io.MutableByteArrayCursor.writeShort","location":"voice/dev.kord.voice.io/-mutable-byte-array-cursor/write-short.html","searchKeys":["writeShort","fun writeShort(s: Short)","dev.kord.voice.io.MutableByteArrayCursor.writeShort"]},{"name":"inline fun <T : VoiceEvent> VoiceGateway.on(scope: CoroutineScope = this.scope, crossinline consumer: suspend T.() -> Unit): Job","description":"dev.kord.voice.gateway.on","location":"voice/dev.kord.voice.gateway/on.html","searchKeys":["on","inline fun <T : VoiceEvent> VoiceGateway.on(scope: CoroutineScope = this.scope, crossinline consumer: suspend T.() -> Unit): Job","dev.kord.voice.gateway.on"]},{"name":"inline fun SpeakingFlags(builder: SpeakingFlags.Builder.() -> Unit): SpeakingFlags","description":"dev.kord.voice.SpeakingFlags","location":"voice/dev.kord.voice/-speaking-flags.html","searchKeys":["SpeakingFlags","inline fun SpeakingFlags(builder: SpeakingFlags.Builder.() -> Unit): SpeakingFlags","dev.kord.voice.SpeakingFlags"]},{"name":"inline fun copy(block: SpeakingFlags.Builder.() -> Unit): SpeakingFlags","description":"dev.kord.voice.SpeakingFlags.copy","location":"voice/dev.kord.voice/-speaking-flags/copy.html","searchKeys":["copy","inline fun copy(block: SpeakingFlags.Builder.() -> Unit): SpeakingFlags","dev.kord.voice.SpeakingFlags.copy"]},{"name":"inline suspend fun VoiceConnection(gateway: Gateway, selfId: Snowflake, channelId: Snowflake, guildId: Snowflake, builder: VoiceConnectionBuilder.() -> Unit = {}): VoiceConnection","description":"dev.kord.voice.VoiceConnection","location":"voice/dev.kord.voice/-voice-connection.html","searchKeys":["VoiceConnection","inline suspend fun VoiceConnection(gateway: Gateway, selfId: Snowflake, channelId: Snowflake, guildId: Snowflake, builder: VoiceConnectionBuilder.() -> Unit = {}): VoiceConnection","dev.kord.voice.VoiceConnection"]},{"name":"interface AudioFrameSender","description":"dev.kord.voice.udp.AudioFrameSender","location":"voice/dev.kord.voice.udp/-audio-frame-sender/index.html","searchKeys":["AudioFrameSender","interface AudioFrameSender","dev.kord.voice.udp.AudioFrameSender"]},{"name":"interface NonceStrategy","description":"dev.kord.voice.encryption.strategies.NonceStrategy","location":"voice/dev.kord.voice.encryption.strategies/-nonce-strategy/index.html","searchKeys":["NonceStrategy","interface NonceStrategy","dev.kord.voice.encryption.strategies.NonceStrategy"]},{"name":"interface Streams","description":"dev.kord.voice.streams.Streams","location":"voice/dev.kord.voice.streams/-streams/index.html","searchKeys":["Streams","interface Streams","dev.kord.voice.streams.Streams"]},{"name":"interface VoiceGateway","description":"dev.kord.voice.gateway.VoiceGateway","location":"voice/dev.kord.voice.gateway/-voice-gateway/index.html","searchKeys":["VoiceGateway","interface VoiceGateway","dev.kord.voice.gateway.VoiceGateway"]},{"name":"interface VoiceUdpSocket","description":"dev.kord.voice.udp.VoiceUdpSocket","location":"voice/dev.kord.voice.udp/-voice-udp-socket/index.html","searchKeys":["VoiceUdpSocket","interface VoiceUdpSocket","dev.kord.voice.udp.VoiceUdpSocket"]},{"name":"object Alive : PayloadType","description":"dev.kord.voice.udp.PayloadType.Alive","location":"voice/dev.kord.voice.udp/-payload-type/-alive/index.html","searchKeys":["Alive","object Alive : PayloadType","dev.kord.voice.udp.PayloadType.Alive"]},{"name":"object AlreadyAuthenticated : VoiceGatewayCloseCode","description":"dev.kord.voice.gateway.VoiceGatewayCloseCode.AlreadyAuthenticated","location":"voice/dev.kord.voice.gateway/-voice-gateway-close-code/-already-authenticated/index.html","searchKeys":["AlreadyAuthenticated","object AlreadyAuthenticated : VoiceGatewayCloseCode","dev.kord.voice.gateway.VoiceGatewayCloseCode.AlreadyAuthenticated"]},{"name":"object Audio : PayloadType","description":"dev.kord.voice.udp.PayloadType.Audio","location":"voice/dev.kord.voice.udp/-payload-type/-audio/index.html","searchKeys":["Audio","object Audio : PayloadType","dev.kord.voice.udp.PayloadType.Audio"]},{"name":"object AuthenticationFailed : VoiceGatewayCloseCode","description":"dev.kord.voice.gateway.VoiceGatewayCloseCode.AuthenticationFailed","location":"voice/dev.kord.voice.gateway/-voice-gateway-close-code/-authentication-failed/index.html","searchKeys":["AuthenticationFailed","object AuthenticationFailed : VoiceGatewayCloseCode","dev.kord.voice.gateway.VoiceGatewayCloseCode.AuthenticationFailed"]},{"name":"object Companion","description":"dev.kord.voice.AudioFrame.Companion","location":"voice/dev.kord.voice/-audio-frame/-companion/index.html","searchKeys":["Companion","object Companion","dev.kord.voice.AudioFrame.Companion"]},{"name":"object Companion","description":"dev.kord.voice.gateway.VoiceGateway.Companion","location":"voice/dev.kord.voice.gateway/-voice-gateway/-companion/index.html","searchKeys":["Companion","object Companion","dev.kord.voice.gateway.VoiceGateway.Companion"]},{"name":"object Companion","description":"dev.kord.voice.gateway.VoiceGatewayCloseCode.Companion","location":"voice/dev.kord.voice.gateway/-voice-gateway-close-code/-companion/index.html","searchKeys":["Companion","object Companion","dev.kord.voice.gateway.VoiceGatewayCloseCode.Companion"]},{"name":"object Companion","description":"dev.kord.voice.io.ByteArrayView.Companion","location":"voice/dev.kord.voice.io/-byte-array-view/-companion/index.html","searchKeys":["Companion","object Companion","dev.kord.voice.io.ByteArrayView.Companion"]},{"name":"object Companion","description":"dev.kord.voice.udp.PayloadType.Companion","location":"voice/dev.kord.voice.udp/-payload-type/-companion/index.html","searchKeys":["Companion","object Companion","dev.kord.voice.udp.PayloadType.Companion"]},{"name":"object Companion","description":"dev.kord.voice.udp.RTPPacket.Companion","location":"voice/dev.kord.voice.udp/-r-t-p-packet/-companion/index.html","searchKeys":["Companion","object Companion","dev.kord.voice.udp.RTPPacket.Companion"]},{"name":"object Companion","description":"dev.kord.voice.udp.VoiceUdpSocket.Companion","location":"voice/dev.kord.voice.udp/-voice-udp-socket/-companion/index.html","searchKeys":["Companion","object Companion","dev.kord.voice.udp.VoiceUdpSocket.Companion"]},{"name":"object DeserializationStrategy : DeserializationStrategy<VoiceEvent?> ","description":"dev.kord.voice.gateway.VoiceEvent.DeserializationStrategy","location":"voice/dev.kord.voice.gateway/-voice-event/-deserialization-strategy/index.html","searchKeys":["DeserializationStrategy","object DeserializationStrategy : DeserializationStrategy<VoiceEvent?> ","dev.kord.voice.gateway.VoiceEvent.DeserializationStrategy"]},{"name":"object Disconnect : VoiceGatewayCloseCode","description":"dev.kord.voice.gateway.VoiceGatewayCloseCode.Disconnect","location":"voice/dev.kord.voice.gateway/-voice-gateway-close-code/-disconnect/index.html","searchKeys":["Disconnect","object Disconnect : VoiceGatewayCloseCode","dev.kord.voice.gateway.VoiceGatewayCloseCode.Disconnect"]},{"name":"object FailedToDecodePayload : VoiceGatewayCloseCode","description":"dev.kord.voice.gateway.VoiceGatewayCloseCode.FailedToDecodePayload","location":"voice/dev.kord.voice.gateway/-voice-gateway-close-code/-failed-to-decode-payload/index.html","searchKeys":["FailedToDecodePayload","object FailedToDecodePayload : VoiceGatewayCloseCode","dev.kord.voice.gateway.VoiceGatewayCloseCode.FailedToDecodePayload"]},{"name":"object GlobalVoiceUdpSocket : VoiceUdpSocket","description":"dev.kord.voice.udp.GlobalVoiceUdpSocket","location":"voice/dev.kord.voice.udp/-global-voice-udp-socket/index.html","searchKeys":["GlobalVoiceUdpSocket","object GlobalVoiceUdpSocket : VoiceUdpSocket","dev.kord.voice.udp.GlobalVoiceUdpSocket"]},{"name":"object NOPStreams : Streams","description":"dev.kord.voice.streams.NOPStreams","location":"voice/dev.kord.voice.streams/-n-o-p-streams/index.html","searchKeys":["NOPStreams","object NOPStreams : Streams","dev.kord.voice.streams.NOPStreams"]},{"name":"object NotAuthenticated : VoiceGatewayCloseCode","description":"dev.kord.voice.gateway.VoiceGatewayCloseCode.NotAuthenticated","location":"voice/dev.kord.voice.gateway/-voice-gateway-close-code/-not-authenticated/index.html","searchKeys":["NotAuthenticated","object NotAuthenticated : VoiceGatewayCloseCode","dev.kord.voice.gateway.VoiceGatewayCloseCode.NotAuthenticated"]},{"name":"object Reconnecting : Close","description":"dev.kord.voice.gateway.Close.Reconnecting","location":"voice/dev.kord.voice.gateway/-close/-reconnecting/index.html","searchKeys":["Reconnecting","object Reconnecting : Close","dev.kord.voice.gateway.Close.Reconnecting"]},{"name":"object Resumed : VoiceEvent","description":"dev.kord.voice.gateway.Resumed","location":"voice/dev.kord.voice.gateway/-resumed/index.html","searchKeys":["Resumed","object Resumed : VoiceEvent","dev.kord.voice.gateway.Resumed"]},{"name":"object RetryLimitReached : Close","description":"dev.kord.voice.gateway.Close.RetryLimitReached","location":"voice/dev.kord.voice.gateway/-close/-retry-limit-reached/index.html","searchKeys":["RetryLimitReached","object RetryLimitReached : Close","dev.kord.voice.gateway.Close.RetryLimitReached"]},{"name":"object SerializationStrategy : SerializationStrategy<Command> ","description":"dev.kord.voice.gateway.Command.SerializationStrategy","location":"voice/dev.kord.voice.gateway/-command/-serialization-strategy/index.html","searchKeys":["SerializationStrategy","object SerializationStrategy : SerializationStrategy<Command> ","dev.kord.voice.gateway.Command.SerializationStrategy"]},{"name":"object ServerNotFound : VoiceGatewayCloseCode","description":"dev.kord.voice.gateway.VoiceGatewayCloseCode.ServerNotFound","location":"voice/dev.kord.voice.gateway/-voice-gateway-close-code/-server-not-found/index.html","searchKeys":["ServerNotFound","object ServerNotFound : VoiceGatewayCloseCode","dev.kord.voice.gateway.VoiceGatewayCloseCode.ServerNotFound"]},{"name":"object SessionNoLongerValid : VoiceGatewayCloseCode","description":"dev.kord.voice.gateway.VoiceGatewayCloseCode.SessionNoLongerValid","location":"voice/dev.kord.voice.gateway/-voice-gateway-close-code/-session-no-longer-valid/index.html","searchKeys":["SessionNoLongerValid","object SessionNoLongerValid : VoiceGatewayCloseCode","dev.kord.voice.gateway.VoiceGatewayCloseCode.SessionNoLongerValid"]},{"name":"object SessionTimeout : VoiceGatewayCloseCode","description":"dev.kord.voice.gateway.VoiceGatewayCloseCode.SessionTimeout","location":"voice/dev.kord.voice.gateway/-voice-gateway-close-code/-session-timeout/index.html","searchKeys":["SessionTimeout","object SessionTimeout : VoiceGatewayCloseCode","dev.kord.voice.gateway.VoiceGatewayCloseCode.SessionTimeout"]},{"name":"object Timeout : Close","description":"dev.kord.voice.gateway.Close.Timeout","location":"voice/dev.kord.voice.gateway/-close/-timeout/index.html","searchKeys":["Timeout","object Timeout : Close","dev.kord.voice.gateway.Close.Timeout"]},{"name":"object UnknownEncryptionMode : VoiceGatewayCloseCode","description":"dev.kord.voice.gateway.VoiceGatewayCloseCode.UnknownEncryptionMode","location":"voice/dev.kord.voice.gateway/-voice-gateway-close-code/-unknown-encryption-mode/index.html","searchKeys":["UnknownEncryptionMode","object UnknownEncryptionMode : VoiceGatewayCloseCode","dev.kord.voice.gateway.VoiceGatewayCloseCode.UnknownEncryptionMode"]},{"name":"object UnknownOpcode : VoiceGatewayCloseCode","description":"dev.kord.voice.gateway.VoiceGatewayCloseCode.UnknownOpcode","location":"voice/dev.kord.voice.gateway/-voice-gateway-close-code/-unknown-opcode/index.html","searchKeys":["UnknownOpcode","object UnknownOpcode : VoiceGatewayCloseCode","dev.kord.voice.gateway.VoiceGatewayCloseCode.UnknownOpcode"]},{"name":"object UnknownProtocol : VoiceGatewayCloseCode","description":"dev.kord.voice.gateway.VoiceGatewayCloseCode.UnknownProtocol","location":"voice/dev.kord.voice.gateway/-voice-gateway-close-code/-unknown-protocol/index.html","searchKeys":["UnknownProtocol","object UnknownProtocol : VoiceGatewayCloseCode","dev.kord.voice.gateway.VoiceGatewayCloseCode.UnknownProtocol"]},{"name":"object UserClose : Close","description":"dev.kord.voice.gateway.Close.UserClose","location":"voice/dev.kord.voice.gateway/-close/-user-close/index.html","searchKeys":["UserClose","object UserClose : Close","dev.kord.voice.gateway.Close.UserClose"]},{"name":"object VoiceServerCrashed : VoiceGatewayCloseCode","description":"dev.kord.voice.gateway.VoiceGatewayCloseCode.VoiceServerCrashed","location":"voice/dev.kord.voice.gateway/-voice-gateway-close-code/-voice-server-crashed/index.html","searchKeys":["VoiceServerCrashed","object VoiceServerCrashed : VoiceGatewayCloseCode","dev.kord.voice.gateway.VoiceGatewayCloseCode.VoiceServerCrashed"]},{"name":"open operator override fun iterator(): Iterator<Byte>","description":"dev.kord.voice.io.ByteArrayView.iterator","location":"voice/dev.kord.voice.io/-byte-array-view/iterator.html","searchKeys":["iterator","open operator override fun iterator(): Iterator<Byte>","dev.kord.voice.io.ByteArrayView.iterator"]},{"name":"open override fun Flow<AudioFrame?>.intercept(configuration: FrameInterceptorConfiguration): Flow<AudioFrame?>","description":"dev.kord.voice.DefaultFrameInterceptor.intercept","location":"voice/dev.kord.voice/-default-frame-interceptor/intercept.html","searchKeys":["intercept","open override fun Flow<AudioFrame?>.intercept(configuration: FrameInterceptorConfiguration): Flow<AudioFrame?>","dev.kord.voice.DefaultFrameInterceptor.intercept"]},{"name":"open override fun append(nonce: ByteArrayView, cursor: MutableByteArrayCursor)","description":"dev.kord.voice.encryption.strategies.LiteNonceStrategy.append","location":"voice/dev.kord.voice.encryption.strategies/-lite-nonce-strategy/append.html","searchKeys":["append","open override fun append(nonce: ByteArrayView, cursor: MutableByteArrayCursor)","dev.kord.voice.encryption.strategies.LiteNonceStrategy.append"]},{"name":"open override fun append(nonce: ByteArrayView, cursor: MutableByteArrayCursor)","description":"dev.kord.voice.encryption.strategies.NormalNonceStrategy.append","location":"voice/dev.kord.voice.encryption.strategies/-normal-nonce-strategy/append.html","searchKeys":["append","open override fun append(nonce: ByteArrayView, cursor: MutableByteArrayCursor)","dev.kord.voice.encryption.strategies.NormalNonceStrategy.append"]},{"name":"open override fun append(nonce: ByteArrayView, cursor: MutableByteArrayCursor)","description":"dev.kord.voice.encryption.strategies.SuffixNonceStrategy.append","location":"voice/dev.kord.voice.encryption.strategies/-suffix-nonce-strategy/append.html","searchKeys":["append","open override fun append(nonce: ByteArrayView, cursor: MutableByteArrayCursor)","dev.kord.voice.encryption.strategies.SuffixNonceStrategy.append"]},{"name":"open override fun deserialize(decoder: Decoder): VoiceEvent?","description":"dev.kord.voice.gateway.VoiceEvent.DeserializationStrategy.deserialize","location":"voice/dev.kord.voice.gateway/-voice-event/-deserialization-strategy/deserialize.html","searchKeys":["deserialize","open override fun deserialize(decoder: Decoder): VoiceEvent?","dev.kord.voice.gateway.VoiceEvent.DeserializationStrategy.deserialize"]},{"name":"open override fun generate(header: () -> ByteArrayView): ByteArrayView","description":"dev.kord.voice.encryption.strategies.LiteNonceStrategy.generate","location":"voice/dev.kord.voice.encryption.strategies/-lite-nonce-strategy/generate.html","searchKeys":["generate","open override fun generate(header: () -> ByteArrayView): ByteArrayView","dev.kord.voice.encryption.strategies.LiteNonceStrategy.generate"]},{"name":"open override fun generate(header: () -> ByteArrayView): ByteArrayView","description":"dev.kord.voice.encryption.strategies.NormalNonceStrategy.generate","location":"voice/dev.kord.voice.encryption.strategies/-normal-nonce-strategy/generate.html","searchKeys":["generate","open override fun generate(header: () -> ByteArrayView): ByteArrayView","dev.kord.voice.encryption.strategies.NormalNonceStrategy.generate"]},{"name":"open override fun generate(header: () -> ByteArrayView): ByteArrayView","description":"dev.kord.voice.encryption.strategies.SuffixNonceStrategy.generate","location":"voice/dev.kord.voice.encryption.strategies/-suffix-nonce-strategy/generate.html","searchKeys":["generate","open override fun generate(header: () -> ByteArrayView): ByteArrayView","dev.kord.voice.encryption.strategies.SuffixNonceStrategy.generate"]},{"name":"open override fun provide(sequence: UShort, timestamp: UInt, ssrc: UInt, data: ByteArray): ByteArrayView","description":"dev.kord.voice.udp.DefaultAudioPacketProvider.provide","location":"voice/dev.kord.voice.udp/-default-audio-packet-provider/provide.html","searchKeys":["provide","open override fun provide(sequence: UShort, timestamp: UInt, ssrc: UInt, data: ByteArray): ByteArrayView","dev.kord.voice.udp.DefaultAudioPacketProvider.provide"]},{"name":"open override fun serialize(encoder: Encoder, value: Command)","description":"dev.kord.voice.gateway.Command.SerializationStrategy.serialize","location":"voice/dev.kord.voice.gateway/-command/-serialization-strategy/serialize.html","searchKeys":["serialize","open override fun serialize(encoder: Encoder, value: Command)","dev.kord.voice.gateway.Command.SerializationStrategy.serialize"]},{"name":"open override fun strip(packet: RTPPacket): ByteArrayView","description":"dev.kord.voice.encryption.strategies.LiteNonceStrategy.strip","location":"voice/dev.kord.voice.encryption.strategies/-lite-nonce-strategy/strip.html","searchKeys":["strip","open override fun strip(packet: RTPPacket): ByteArrayView","dev.kord.voice.encryption.strategies.LiteNonceStrategy.strip"]},{"name":"open override fun strip(packet: RTPPacket): ByteArrayView","description":"dev.kord.voice.encryption.strategies.NormalNonceStrategy.strip","location":"voice/dev.kord.voice.encryption.strategies/-normal-nonce-strategy/strip.html","searchKeys":["strip","open override fun strip(packet: RTPPacket): ByteArrayView","dev.kord.voice.encryption.strategies.NormalNonceStrategy.strip"]},{"name":"open override fun strip(packet: RTPPacket): ByteArrayView","description":"dev.kord.voice.encryption.strategies.SuffixNonceStrategy.strip","location":"voice/dev.kord.voice.encryption.strategies/-suffix-nonce-strategy/strip.html","searchKeys":["strip","open override fun strip(packet: RTPPacket): ByteArrayView","dev.kord.voice.encryption.strategies.SuffixNonceStrategy.strip"]},{"name":"open override fun toString(): String","description":"dev.kord.voice.SpeakingFlags.toString","location":"voice/dev.kord.voice/-speaking-flags/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.kord.voice.SpeakingFlags.toString"]},{"name":"open override val descriptor: SerialDescriptor","description":"dev.kord.voice.gateway.Command.SerializationStrategy.descriptor","location":"voice/dev.kord.voice.gateway/-command/-serialization-strategy/descriptor.html","searchKeys":["descriptor","open override val descriptor: SerialDescriptor","dev.kord.voice.gateway.Command.SerializationStrategy.descriptor"]},{"name":"open override val descriptor: SerialDescriptor","description":"dev.kord.voice.gateway.VoiceEvent.DeserializationStrategy.descriptor","location":"voice/dev.kord.voice.gateway/-voice-event/-deserialization-strategy/descriptor.html","searchKeys":["descriptor","open override val descriptor: SerialDescriptor","dev.kord.voice.gateway.VoiceEvent.DeserializationStrategy.descriptor"]},{"name":"open override val events: SharedFlow<VoiceEvent>","description":"dev.kord.voice.gateway.DefaultVoiceGateway.events","location":"voice/dev.kord.voice.gateway/-default-voice-gateway/events.html","searchKeys":["events","open override val events: SharedFlow<VoiceEvent>","dev.kord.voice.gateway.DefaultVoiceGateway.events"]},{"name":"open override val incoming: SharedFlow<Datagram>","description":"dev.kord.voice.udp.GlobalVoiceUdpSocket.incoming","location":"voice/dev.kord.voice.udp/-global-voice-udp-socket/incoming.html","searchKeys":["incoming","open override val incoming: SharedFlow<Datagram>","dev.kord.voice.udp.GlobalVoiceUdpSocket.incoming"]},{"name":"open override val incomingAudioFrames: Flow<Pair<UInt, AudioFrame>>","description":"dev.kord.voice.streams.DefaultStreams.incomingAudioFrames","location":"voice/dev.kord.voice.streams/-default-streams/incoming-audio-frames.html","searchKeys":["incomingAudioFrames","open override val incomingAudioFrames: Flow<Pair<UInt, AudioFrame>>","dev.kord.voice.streams.DefaultStreams.incomingAudioFrames"]},{"name":"open override val incomingAudioFrames: Flow<Pair<UInt, AudioFrame>>","description":"dev.kord.voice.streams.NOPStreams.incomingAudioFrames","location":"voice/dev.kord.voice.streams/-n-o-p-streams/incoming-audio-frames.html","searchKeys":["incomingAudioFrames","open override val incomingAudioFrames: Flow<Pair<UInt, AudioFrame>>","dev.kord.voice.streams.NOPStreams.incomingAudioFrames"]},{"name":"open override val incomingAudioPackets: Flow<RTPPacket>","description":"dev.kord.voice.streams.NOPStreams.incomingAudioPackets","location":"voice/dev.kord.voice.streams/-n-o-p-streams/incoming-audio-packets.html","searchKeys":["incomingAudioPackets","open override val incomingAudioPackets: Flow<RTPPacket>","dev.kord.voice.streams.NOPStreams.incomingAudioPackets"]},{"name":"open override val incomingAudioPackets: SharedFlow<RTPPacket>","description":"dev.kord.voice.streams.DefaultStreams.incomingAudioPackets","location":"voice/dev.kord.voice.streams/-default-streams/incoming-audio-packets.html","searchKeys":["incomingAudioPackets","open override val incomingAudioPackets: SharedFlow<RTPPacket>","dev.kord.voice.streams.DefaultStreams.incomingAudioPackets"]},{"name":"open override val incomingUserStreams: Flow<Pair<Snowflake, AudioFrame>>","description":"dev.kord.voice.streams.NOPStreams.incomingUserStreams","location":"voice/dev.kord.voice.streams/-n-o-p-streams/incoming-user-streams.html","searchKeys":["incomingUserStreams","open override val incomingUserStreams: Flow<Pair<Snowflake, AudioFrame>>","dev.kord.voice.streams.NOPStreams.incomingUserStreams"]},{"name":"open override val incomingUserStreams: SharedFlow<Pair<Snowflake, AudioFrame>>","description":"dev.kord.voice.streams.DefaultStreams.incomingUserStreams","location":"voice/dev.kord.voice.streams/-default-streams/incoming-user-streams.html","searchKeys":["incomingUserStreams","open override val incomingUserStreams: SharedFlow<Pair<Snowflake, AudioFrame>>","dev.kord.voice.streams.DefaultStreams.incomingUserStreams"]},{"name":"open override val nonceLength: Int","description":"dev.kord.voice.encryption.strategies.SuffixNonceStrategy.nonceLength","location":"voice/dev.kord.voice.encryption.strategies/-suffix-nonce-strategy/nonce-length.html","searchKeys":["nonceLength","open override val nonceLength: Int","dev.kord.voice.encryption.strategies.SuffixNonceStrategy.nonceLength"]},{"name":"open override val nonceLength: Int = 0","description":"dev.kord.voice.encryption.strategies.NormalNonceStrategy.nonceLength","location":"voice/dev.kord.voice.encryption.strategies/-normal-nonce-strategy/nonce-length.html","searchKeys":["nonceLength","open override val nonceLength: Int = 0","dev.kord.voice.encryption.strategies.NormalNonceStrategy.nonceLength"]},{"name":"open override val nonceLength: Int = 4","description":"dev.kord.voice.encryption.strategies.LiteNonceStrategy.nonceLength","location":"voice/dev.kord.voice.encryption.strategies/-lite-nonce-strategy/nonce-length.html","searchKeys":["nonceLength","open override val nonceLength: Int = 4","dev.kord.voice.encryption.strategies.LiteNonceStrategy.nonceLength"]},{"name":"open override val ping: StateFlow<Duration?>","description":"dev.kord.voice.gateway.DefaultVoiceGateway.ping","location":"voice/dev.kord.voice.gateway/-default-voice-gateway/ping.html","searchKeys":["ping","open override val ping: StateFlow<Duration?>","dev.kord.voice.gateway.DefaultVoiceGateway.ping"]},{"name":"open override val scope: CoroutineScope","description":"dev.kord.voice.gateway.DefaultVoiceGateway.scope","location":"voice/dev.kord.voice.gateway/-default-voice-gateway/scope.html","searchKeys":["scope","open override val scope: CoroutineScope","dev.kord.voice.gateway.DefaultVoiceGateway.scope"]},{"name":"open override val ssrcToUser: Map<UInt, Snowflake>","description":"dev.kord.voice.streams.DefaultStreams.ssrcToUser","location":"voice/dev.kord.voice.streams/-default-streams/ssrc-to-user.html","searchKeys":["ssrcToUser","open override val ssrcToUser: Map<UInt, Snowflake>","dev.kord.voice.streams.DefaultStreams.ssrcToUser"]},{"name":"open override val ssrcToUser: Map<UInt, Snowflake>","description":"dev.kord.voice.streams.NOPStreams.ssrcToUser","location":"voice/dev.kord.voice.streams/-n-o-p-streams/ssrc-to-user.html","searchKeys":["ssrcToUser","open override val ssrcToUser: Map<UInt, Snowflake>","dev.kord.voice.streams.NOPStreams.ssrcToUser"]},{"name":"open suspend fun CoroutineScope.provideFrames(frames: SendChannel<AudioFrame?>)","description":"dev.kord.voice.AudioProvider.provideFrames","location":"voice/dev.kord.voice/-audio-provider/provide-frames.html","searchKeys":["provideFrames","open suspend fun CoroutineScope.provideFrames(frames: SendChannel<AudioFrame?>)","dev.kord.voice.AudioProvider.provideFrames"]},{"name":"open suspend override fun detach()","description":"dev.kord.voice.gateway.DefaultVoiceGateway.detach","location":"voice/dev.kord.voice.gateway/-default-voice-gateway/detach.html","searchKeys":["detach","open suspend override fun detach()","dev.kord.voice.gateway.DefaultVoiceGateway.detach"]},{"name":"open suspend override fun discoverIp(address: InetSocketAddress, ssrc: Int): InetSocketAddress","description":"dev.kord.voice.udp.GlobalVoiceUdpSocket.discoverIp","location":"voice/dev.kord.voice.udp/-global-voice-udp-socket/discover-ip.html","searchKeys":["discoverIp","open suspend override fun discoverIp(address: InetSocketAddress, ssrc: Int): InetSocketAddress","dev.kord.voice.udp.GlobalVoiceUdpSocket.discoverIp"]},{"name":"open suspend override fun listen(key: ByteArray, server: SocketAddress)","description":"dev.kord.voice.streams.DefaultStreams.listen","location":"voice/dev.kord.voice.streams/-default-streams/listen.html","searchKeys":["listen","open suspend override fun listen(key: ByteArray, server: SocketAddress)","dev.kord.voice.streams.DefaultStreams.listen"]},{"name":"open suspend override fun listen(key: ByteArray, server: SocketAddress)","description":"dev.kord.voice.streams.NOPStreams.listen","location":"voice/dev.kord.voice.streams/-n-o-p-streams/listen.html","searchKeys":["listen","open suspend override fun listen(key: ByteArray, server: SocketAddress)","dev.kord.voice.streams.NOPStreams.listen"]},{"name":"open suspend override fun send(command: Command)","description":"dev.kord.voice.gateway.DefaultVoiceGateway.send","location":"voice/dev.kord.voice.gateway/-default-voice-gateway/send.html","searchKeys":["send","open suspend override fun send(command: Command)","dev.kord.voice.gateway.DefaultVoiceGateway.send"]},{"name":"open suspend override fun send(packet: Datagram)","description":"dev.kord.voice.udp.GlobalVoiceUdpSocket.send","location":"voice/dev.kord.voice.udp/-global-voice-udp-socket/send.html","searchKeys":["send","open suspend override fun send(packet: Datagram)","dev.kord.voice.udp.GlobalVoiceUdpSocket.send"]},{"name":"open suspend override fun start(configuration: AudioFrameSenderConfiguration)","description":"dev.kord.voice.udp.DefaultAudioFrameSender.start","location":"voice/dev.kord.voice.udp/-default-audio-frame-sender/start.html","searchKeys":["start","open suspend override fun start(configuration: AudioFrameSenderConfiguration)","dev.kord.voice.udp.DefaultAudioFrameSender.start"]},{"name":"open suspend override fun start(configuration: VoiceGatewayConfiguration)","description":"dev.kord.voice.gateway.DefaultVoiceGateway.start","location":"voice/dev.kord.voice.gateway/-default-voice-gateway/start.html","searchKeys":["start","open suspend override fun start(configuration: VoiceGatewayConfiguration)","dev.kord.voice.gateway.DefaultVoiceGateway.start"]},{"name":"open suspend override fun stop()","description":"dev.kord.voice.gateway.DefaultVoiceGateway.stop","location":"voice/dev.kord.voice.gateway/-default-voice-gateway/stop.html","searchKeys":["stop","open suspend override fun stop()","dev.kord.voice.gateway.DefaultVoiceGateway.stop"]},{"name":"open suspend override fun stop()","description":"dev.kord.voice.udp.GlobalVoiceUdpSocket.stop","location":"voice/dev.kord.voice.udp/-global-voice-udp-socket/stop.html","searchKeys":["stop","open suspend override fun stop()","dev.kord.voice.udp.GlobalVoiceUdpSocket.stop"]},{"name":"operator fun SpeakingFlag.unaryMinus()","description":"dev.kord.voice.SpeakingFlags.Builder.unaryMinus","location":"voice/dev.kord.voice/-speaking-flags/-builder/unary-minus.html","searchKeys":["unaryMinus","operator fun SpeakingFlag.unaryMinus()","dev.kord.voice.SpeakingFlags.Builder.unaryMinus"]},{"name":"operator fun SpeakingFlag.unaryPlus()","description":"dev.kord.voice.SpeakingFlags.Builder.unaryPlus","location":"voice/dev.kord.voice/-speaking-flags/-builder/unary-plus.html","searchKeys":["unaryPlus","operator fun SpeakingFlag.unaryPlus()","dev.kord.voice.SpeakingFlags.Builder.unaryPlus"]},{"name":"operator fun SpeakingFlags.unaryMinus()","description":"dev.kord.voice.SpeakingFlags.Builder.unaryMinus","location":"voice/dev.kord.voice/-speaking-flags/-builder/unary-minus.html","searchKeys":["unaryMinus","operator fun SpeakingFlags.unaryMinus()","dev.kord.voice.SpeakingFlags.Builder.unaryMinus"]},{"name":"operator fun SpeakingFlags.unaryPlus()","description":"dev.kord.voice.SpeakingFlags.Builder.unaryPlus","location":"voice/dev.kord.voice/-speaking-flags/-builder/unary-plus.html","searchKeys":["unaryPlus","operator fun SpeakingFlags.unaryPlus()","dev.kord.voice.SpeakingFlags.Builder.unaryPlus"]},{"name":"operator fun contains(flag: SpeakingFlags): Boolean","description":"dev.kord.voice.SpeakingFlags.contains","location":"voice/dev.kord.voice/-speaking-flags/contains.html","searchKeys":["contains","operator fun contains(flag: SpeakingFlags): Boolean","dev.kord.voice.SpeakingFlags.contains"]},{"name":"operator fun contains(flags: SpeakingFlag): Boolean","description":"dev.kord.voice.SpeakingFlags.contains","location":"voice/dev.kord.voice/-speaking-flags/contains.html","searchKeys":["contains","operator fun contains(flags: SpeakingFlag): Boolean","dev.kord.voice.SpeakingFlags.contains"]},{"name":"operator fun get(index: Int): Byte","description":"dev.kord.voice.io.ByteArrayView.get","location":"voice/dev.kord.voice.io/-byte-array-view/get.html","searchKeys":["get","operator fun get(index: Int): Byte","dev.kord.voice.io.ByteArrayView.get"]},{"name":"operator fun minus(flags: SpeakingFlag): SpeakingFlags","description":"dev.kord.voice.SpeakingFlags.minus","location":"voice/dev.kord.voice/-speaking-flags/minus.html","searchKeys":["minus","operator fun minus(flags: SpeakingFlag): SpeakingFlags","dev.kord.voice.SpeakingFlags.minus"]},{"name":"operator fun minus(flags: SpeakingFlags): SpeakingFlags","description":"dev.kord.voice.SpeakingFlags.minus","location":"voice/dev.kord.voice/-speaking-flags/minus.html","searchKeys":["minus","operator fun minus(flags: SpeakingFlags): SpeakingFlags","dev.kord.voice.SpeakingFlags.minus"]},{"name":"operator fun plus(flags: SpeakingFlag): SpeakingFlags","description":"dev.kord.voice.SpeakingFlags.plus","location":"voice/dev.kord.voice/-speaking-flags/plus.html","searchKeys":["plus","operator fun plus(flags: SpeakingFlag): SpeakingFlags","dev.kord.voice.SpeakingFlags.plus"]},{"name":"operator fun plus(flags: SpeakingFlags): SpeakingFlags","description":"dev.kord.voice.SpeakingFlags.plus","location":"voice/dev.kord.voice/-speaking-flags/plus.html","searchKeys":["plus","operator fun plus(flags: SpeakingFlags): SpeakingFlags","dev.kord.voice.SpeakingFlags.plus"]},{"name":"sealed class Close : VoiceEvent","description":"dev.kord.voice.gateway.Close","location":"voice/dev.kord.voice.gateway/-close/index.html","searchKeys":["Close","sealed class Close : VoiceEvent","dev.kord.voice.gateway.Close"]},{"name":"sealed class Command","description":"dev.kord.voice.gateway.Command","location":"voice/dev.kord.voice.gateway/-command/index.html","searchKeys":["Command","sealed class Command","dev.kord.voice.gateway.Command"]},{"name":"sealed class PayloadType","description":"dev.kord.voice.udp.PayloadType","location":"voice/dev.kord.voice.udp/-payload-type/index.html","searchKeys":["PayloadType","sealed class PayloadType","dev.kord.voice.udp.PayloadType"]},{"name":"sealed class VoiceEvent","description":"dev.kord.voice.gateway.VoiceEvent","location":"voice/dev.kord.voice.gateway/-voice-event/index.html","searchKeys":["VoiceEvent","sealed class VoiceEvent","dev.kord.voice.gateway.VoiceEvent"]},{"name":"sealed class VoiceGatewayCloseCode","description":"dev.kord.voice.gateway.VoiceGatewayCloseCode","location":"voice/dev.kord.voice.gateway/-voice-gateway-close-code/index.html","searchKeys":["VoiceGatewayCloseCode","sealed class VoiceGatewayCloseCode","dev.kord.voice.gateway.VoiceGatewayCloseCode"]},{"name":"suspend fun VoiceUdpSocket.receiveFrom(address: InetSocketAddress): Datagram","description":"dev.kord.voice.udp.receiveFrom","location":"voice/dev.kord.voice.udp/receive-from.html","searchKeys":["receiveFrom","suspend fun VoiceUdpSocket.receiveFrom(address: InetSocketAddress): Datagram","dev.kord.voice.udp.receiveFrom"]},{"name":"suspend fun build(): VoiceConnection","description":"dev.kord.voice.VoiceConnectionBuilder.build","location":"voice/dev.kord.voice/-voice-connection-builder/build.html","searchKeys":["build","suspend fun build(): VoiceConnection","dev.kord.voice.VoiceConnectionBuilder.build"]},{"name":"suspend fun connect(scope: CoroutineScope = this.scope)","description":"dev.kord.voice.VoiceConnection.connect","location":"voice/dev.kord.voice/-voice-connection/connect.html","searchKeys":["connect","suspend fun connect(scope: CoroutineScope = this.scope)","dev.kord.voice.VoiceConnection.connect"]},{"name":"suspend fun disconnect()","description":"dev.kord.voice.VoiceConnection.disconnect","location":"voice/dev.kord.voice/-voice-connection/disconnect.html","searchKeys":["disconnect","suspend fun disconnect()","dev.kord.voice.VoiceConnection.disconnect"]},{"name":"suspend fun leave()","description":"dev.kord.voice.VoiceConnection.leave","location":"voice/dev.kord.voice/-voice-connection/leave.html","searchKeys":["leave","suspend fun leave()","dev.kord.voice.VoiceConnection.leave"]},{"name":"suspend fun move(channelId: Snowflake, selfMute: Boolean = false, selfDeaf: Boolean = false)","description":"dev.kord.voice.VoiceConnection.move","location":"voice/dev.kord.voice/-voice-connection/move.html","searchKeys":["move","suspend fun move(channelId: Snowflake, selfMute: Boolean = false, selfDeaf: Boolean = false)","dev.kord.voice.VoiceConnection.move"]},{"name":"suspend fun shutdown()","description":"dev.kord.voice.VoiceConnection.shutdown","location":"voice/dev.kord.voice/-voice-connection/shutdown.html","searchKeys":["shutdown","suspend fun shutdown()","dev.kord.voice.VoiceConnection.shutdown"]},{"name":"val SILENCE: AudioFrame","description":"dev.kord.voice.AudioFrame.Companion.SILENCE","location":"voice/dev.kord.voice/-audio-frame/-companion/-s-i-l-e-n-c-e.html","searchKeys":["SILENCE","val SILENCE: AudioFrame","dev.kord.voice.AudioFrame.Companion.SILENCE"]},{"name":"val address: String","description":"dev.kord.voice.gateway.SelectProtocol.Data.address","location":"voice/dev.kord.voice.gateway/-select-protocol/-data/address.html","searchKeys":["address","val address: String","dev.kord.voice.gateway.SelectProtocol.Data.address"]},{"name":"val audioProvider: AudioProvider","description":"dev.kord.voice.VoiceConnection.audioProvider","location":"voice/dev.kord.voice/-voice-connection/audio-provider.html","searchKeys":["audioProvider","val audioProvider: AudioProvider","dev.kord.voice.VoiceConnection.audioProvider"]},{"name":"val client: HttpClient","description":"dev.kord.voice.gateway.DefaultVoiceGatewayData.client","location":"voice/dev.kord.voice.gateway/-default-voice-gateway-data/client.html","searchKeys":["client","val client: HttpClient","dev.kord.voice.gateway.DefaultVoiceGatewayData.client"]},{"name":"val closeCode: VoiceGatewayCloseCode","description":"dev.kord.voice.gateway.Close.DiscordClose.closeCode","location":"voice/dev.kord.voice.gateway/-close/-discord-close/close-code.html","searchKeys":["closeCode","val closeCode: VoiceGatewayCloseCode","dev.kord.voice.gateway.Close.DiscordClose.closeCode"]},{"name":"val code: Int","description":"dev.kord.voice.SpeakingFlag.code","location":"voice/dev.kord.voice/-speaking-flag/code.html","searchKeys":["code","val code: Int","dev.kord.voice.SpeakingFlag.code"]},{"name":"val code: Int","description":"dev.kord.voice.SpeakingFlags.code","location":"voice/dev.kord.voice/-speaking-flags/code.html","searchKeys":["code","val code: Int","dev.kord.voice.SpeakingFlags.code"]},{"name":"val code: Int","description":"dev.kord.voice.gateway.OpCode.code","location":"voice/dev.kord.voice.gateway/-op-code/code.html","searchKeys":["code","val code: Int","dev.kord.voice.gateway.OpCode.code"]},{"name":"val code: Int","description":"dev.kord.voice.gateway.VoiceGatewayCloseCode.code","location":"voice/dev.kord.voice.gateway/-voice-gateway-close-code/code.html","searchKeys":["code","val code: Int","dev.kord.voice.gateway.VoiceGatewayCloseCode.code"]},{"name":"val csrcIdentifiers: UIntArray","description":"dev.kord.voice.udp.RTPPacket.csrcIdentifiers","location":"voice/dev.kord.voice.udp/-r-t-p-packet/csrc-identifiers.html","searchKeys":["csrcIdentifiers","val csrcIdentifiers: UIntArray","dev.kord.voice.udp.RTPPacket.csrcIdentifiers"]},{"name":"val data: ByteArray","description":"dev.kord.voice.AudioFrame.data","location":"voice/dev.kord.voice/-audio-frame/data.html","searchKeys":["data","val data: ByteArray","dev.kord.voice.AudioFrame.data"]},{"name":"val data: ByteArray","description":"dev.kord.voice.io.ByteArrayView.data","location":"voice/dev.kord.voice.io/-byte-array-view/data.html","searchKeys":["data","val data: ByteArray","dev.kord.voice.io.ByteArrayView.data"]},{"name":"val data: DefaultAudioFrameSenderData","description":"dev.kord.voice.udp.DefaultAudioFrameSender.data","location":"voice/dev.kord.voice.udp/-default-audio-frame-sender/data.html","searchKeys":["data","val data: DefaultAudioFrameSenderData","dev.kord.voice.udp.DefaultAudioFrameSender.data"]},{"name":"val data: SelectProtocol.Data","description":"dev.kord.voice.gateway.SelectProtocol.data","location":"voice/dev.kord.voice.gateway/-select-protocol/data.html","searchKeys":["data","val data: SelectProtocol.Data","dev.kord.voice.gateway.SelectProtocol.data"]},{"name":"val data: VoiceConnectionData","description":"dev.kord.voice.VoiceConnection.data","location":"voice/dev.kord.voice/-voice-connection/data.html","searchKeys":["data","val data: VoiceConnectionData","dev.kord.voice.VoiceConnection.data"]},{"name":"val delay: Int","description":"dev.kord.voice.gateway.SendSpeaking.delay","location":"voice/dev.kord.voice.gateway/-send-speaking/delay.html","searchKeys":["delay","val delay: Int","dev.kord.voice.gateway.SendSpeaking.delay"]},{"name":"val endpoint: String","description":"dev.kord.voice.gateway.VoiceGatewayConfiguration.endpoint","location":"voice/dev.kord.voice.gateway/-voice-gateway-configuration/endpoint.html","searchKeys":["endpoint","val endpoint: String","dev.kord.voice.gateway.VoiceGatewayConfiguration.endpoint"]},{"name":"val eventFlow: MutableSharedFlow<VoiceEvent>","description":"dev.kord.voice.gateway.DefaultVoiceGatewayData.eventFlow","location":"voice/dev.kord.voice.gateway/-default-voice-gateway-data/event-flow.html","searchKeys":["eventFlow","val eventFlow: MutableSharedFlow<VoiceEvent>","dev.kord.voice.gateway.DefaultVoiceGatewayData.eventFlow"]},{"name":"val flags: List<SpeakingFlag>","description":"dev.kord.voice.SpeakingFlags.flags","location":"voice/dev.kord.voice/-speaking-flags/flags.html","searchKeys":["flags","val flags: List<SpeakingFlag>","dev.kord.voice.SpeakingFlags.flags"]},{"name":"val frameInterceptor: FrameInterceptor","description":"dev.kord.voice.VoiceConnection.frameInterceptor","location":"voice/dev.kord.voice/-voice-connection/frame-interceptor.html","searchKeys":["frameInterceptor","val frameInterceptor: FrameInterceptor","dev.kord.voice.VoiceConnection.frameInterceptor"]},{"name":"val frameSender: AudioFrameSender","description":"dev.kord.voice.VoiceConnection.frameSender","location":"voice/dev.kord.voice/-voice-connection/frame-sender.html","searchKeys":["frameSender","val frameSender: AudioFrameSender","dev.kord.voice.VoiceConnection.frameSender"]},{"name":"val gateway: Gateway","description":"dev.kord.voice.FrameInterceptorConfiguration.gateway","location":"voice/dev.kord.voice/-frame-interceptor-configuration/gateway.html","searchKeys":["gateway","val gateway: Gateway","dev.kord.voice.FrameInterceptorConfiguration.gateway"]},{"name":"val gateway: Gateway","description":"dev.kord.voice.VoiceConnection.gateway","location":"voice/dev.kord.voice/-voice-connection/gateway.html","searchKeys":["gateway","val gateway: Gateway","dev.kord.voice.VoiceConnection.gateway"]},{"name":"val guildId: Snowflake","description":"dev.kord.voice.VoiceConnectionData.guildId","location":"voice/dev.kord.voice/-voice-connection-data/guild-id.html","searchKeys":["guildId","val guildId: Snowflake","dev.kord.voice.VoiceConnectionData.guildId"]},{"name":"val guildId: Snowflake","description":"dev.kord.voice.gateway.DefaultVoiceGatewayBuilder.guildId","location":"voice/dev.kord.voice.gateway/-default-voice-gateway-builder/guild-id.html","searchKeys":["guildId","val guildId: Snowflake","dev.kord.voice.gateway.DefaultVoiceGatewayBuilder.guildId"]},{"name":"val guildId: Snowflake","description":"dev.kord.voice.gateway.DefaultVoiceGatewayData.guildId","location":"voice/dev.kord.voice.gateway/-default-voice-gateway-data/guild-id.html","searchKeys":["guildId","val guildId: Snowflake","dev.kord.voice.gateway.DefaultVoiceGatewayData.guildId"]},{"name":"val hasExtension: Boolean","description":"dev.kord.voice.udp.RTPPacket.hasExtension","location":"voice/dev.kord.voice.udp/-r-t-p-packet/has-extension.html","searchKeys":["hasExtension","val hasExtension: Boolean","dev.kord.voice.udp.RTPPacket.hasExtension"]},{"name":"val hasMarker: Boolean","description":"dev.kord.voice.udp.RTPPacket.hasMarker","location":"voice/dev.kord.voice.udp/-r-t-p-packet/has-marker.html","searchKeys":["hasMarker","val hasMarker: Boolean","dev.kord.voice.udp.RTPPacket.hasMarker"]},{"name":"val heartbeatInterval: Double","description":"dev.kord.voice.gateway.Hello.heartbeatInterval","location":"voice/dev.kord.voice.gateway/-hello/heartbeat-interval.html","searchKeys":["heartbeatInterval","val heartbeatInterval: Double","dev.kord.voice.gateway.Hello.heartbeatInterval"]},{"name":"val interceptor: FrameInterceptor","description":"dev.kord.voice.udp.DefaultAudioFrameSenderData.interceptor","location":"voice/dev.kord.voice.udp/-default-audio-frame-sender-data/interceptor.html","searchKeys":["interceptor","val interceptor: FrameInterceptor","dev.kord.voice.udp.DefaultAudioFrameSenderData.interceptor"]},{"name":"val interceptorConfiguration: FrameInterceptorConfiguration","description":"dev.kord.voice.udp.AudioFrameSenderConfiguration.interceptorConfiguration","location":"voice/dev.kord.voice.udp/-audio-frame-sender-configuration/interceptor-configuration.html","searchKeys":["interceptorConfiguration","val interceptorConfiguration: FrameInterceptorConfiguration","dev.kord.voice.udp.AudioFrameSenderConfiguration.interceptorConfiguration"]},{"name":"val ip: String","description":"dev.kord.voice.gateway.Ready.ip","location":"voice/dev.kord.voice.gateway/-ready/ip.html","searchKeys":["ip","val ip: String","dev.kord.voice.gateway.Ready.ip"]},{"name":"val isExhausted: Boolean","description":"dev.kord.voice.io.MutableByteArrayCursor.isExhausted","location":"voice/dev.kord.voice.io/-mutable-byte-array-cursor/is-exhausted.html","searchKeys":["isExhausted","val isExhausted: Boolean","dev.kord.voice.io.MutableByteArrayCursor.isExhausted"]},{"name":"val key: ByteArray","description":"dev.kord.voice.encryption.XSalsa20Poly1305Codec.key","location":"voice/dev.kord.voice.encryption/-x-salsa20-poly1305-codec/key.html","searchKeys":["key","val key: ByteArray","dev.kord.voice.encryption.XSalsa20Poly1305Codec.key"]},{"name":"val key: ByteArray","description":"dev.kord.voice.udp.AudioFrameSenderConfiguration.key","location":"voice/dev.kord.voice.udp/-audio-frame-sender-configuration/key.html","searchKeys":["key","val key: ByteArray","dev.kord.voice.udp.AudioFrameSenderConfiguration.key"]},{"name":"val key: ByteArray","description":"dev.kord.voice.udp.AudioPacketProvider.key","location":"voice/dev.kord.voice.udp/-audio-packet-provider/key.html","searchKeys":["key","val key: ByteArray","dev.kord.voice.udp.AudioPacketProvider.key"]},{"name":"val mode: EncryptionMode","description":"dev.kord.voice.gateway.SelectProtocol.Data.mode","location":"voice/dev.kord.voice.gateway/-select-protocol/-data/mode.html","searchKeys":["mode","val mode: EncryptionMode","dev.kord.voice.gateway.SelectProtocol.Data.mode"]},{"name":"val mode: EncryptionMode","description":"dev.kord.voice.gateway.SessionDescription.mode","location":"voice/dev.kord.voice.gateway/-session-description/mode.html","searchKeys":["mode","val mode: EncryptionMode","dev.kord.voice.gateway.SessionDescription.mode"]},{"name":"val modes: List<EncryptionMode>","description":"dev.kord.voice.gateway.Ready.modes","location":"voice/dev.kord.voice.gateway/-ready/modes.html","searchKeys":["modes","val modes: List<EncryptionMode>","dev.kord.voice.gateway.Ready.modes"]},{"name":"val nonce: Long","description":"dev.kord.voice.gateway.Heartbeat.nonce","location":"voice/dev.kord.voice.gateway/-heartbeat/nonce.html","searchKeys":["nonce","val nonce: Long","dev.kord.voice.gateway.Heartbeat.nonce"]},{"name":"val nonce: Long","description":"dev.kord.voice.gateway.HeartbeatAck.nonce","location":"voice/dev.kord.voice.gateway/-heartbeat-ack/nonce.html","searchKeys":["nonce","val nonce: Long","dev.kord.voice.gateway.HeartbeatAck.nonce"]},{"name":"val nonceStrategy: NonceStrategy","description":"dev.kord.voice.VoiceConnection.nonceStrategy","location":"voice/dev.kord.voice/-voice-connection/nonce-strategy.html","searchKeys":["nonceStrategy","val nonceStrategy: NonceStrategy","dev.kord.voice.VoiceConnection.nonceStrategy"]},{"name":"val nonceStrategy: NonceStrategy","description":"dev.kord.voice.udp.AudioPacketProvider.nonceStrategy","location":"voice/dev.kord.voice.udp/-audio-packet-provider/nonce-strategy.html","searchKeys":["nonceStrategy","val nonceStrategy: NonceStrategy","dev.kord.voice.udp.AudioPacketProvider.nonceStrategy"]},{"name":"val nonceStrategy: NonceStrategy","description":"dev.kord.voice.udp.DefaultAudioFrameSenderData.nonceStrategy","location":"voice/dev.kord.voice.udp/-default-audio-frame-sender-data/nonce-strategy.html","searchKeys":["nonceStrategy","val nonceStrategy: NonceStrategy","dev.kord.voice.udp.DefaultAudioFrameSenderData.nonceStrategy"]},{"name":"val paddingBytes: UByte","description":"dev.kord.voice.udp.RTPPacket.paddingBytes","location":"voice/dev.kord.voice.udp/-r-t-p-packet/padding-bytes.html","searchKeys":["paddingBytes","val paddingBytes: UByte","dev.kord.voice.udp.RTPPacket.paddingBytes"]},{"name":"val payload: ByteArrayView","description":"dev.kord.voice.udp.RTPPacket.payload","location":"voice/dev.kord.voice.udp/-r-t-p-packet/payload.html","searchKeys":["payload","val payload: ByteArrayView","dev.kord.voice.udp.RTPPacket.payload"]},{"name":"val payloadType: Byte","description":"dev.kord.voice.udp.RTPPacket.payloadType","location":"voice/dev.kord.voice.udp/-r-t-p-packet/payload-type.html","searchKeys":["payloadType","val payloadType: Byte","dev.kord.voice.udp.RTPPacket.payloadType"]},{"name":"val port: Int","description":"dev.kord.voice.gateway.Ready.port","location":"voice/dev.kord.voice.gateway/-ready/port.html","searchKeys":["port","val port: Int","dev.kord.voice.gateway.Ready.port"]},{"name":"val port: Int","description":"dev.kord.voice.gateway.SelectProtocol.Data.port","location":"voice/dev.kord.voice.gateway/-select-protocol/-data/port.html","searchKeys":["port","val port: Int","dev.kord.voice.gateway.SelectProtocol.Data.port"]},{"name":"val protocol: String","description":"dev.kord.voice.gateway.SelectProtocol.protocol","location":"voice/dev.kord.voice.gateway/-select-protocol/protocol.html","searchKeys":["protocol","val protocol: String","dev.kord.voice.gateway.SelectProtocol.protocol"]},{"name":"val provider: AudioProvider","description":"dev.kord.voice.udp.DefaultAudioFrameSenderData.provider","location":"voice/dev.kord.voice.udp/-default-audio-frame-sender-data/provider.html","searchKeys":["provider","val provider: AudioProvider","dev.kord.voice.udp.DefaultAudioFrameSenderData.provider"]},{"name":"val raw: Byte","description":"dev.kord.voice.udp.PayloadType.raw","location":"voice/dev.kord.voice.udp/-payload-type/raw.html","searchKeys":["raw","val raw: Byte","dev.kord.voice.udp.PayloadType.raw"]},{"name":"val reconnectRetry: Retry","description":"dev.kord.voice.gateway.DefaultVoiceGatewayData.reconnectRetry","location":"voice/dev.kord.voice.gateway/-default-voice-gateway-data/reconnect-retry.html","searchKeys":["reconnectRetry","val reconnectRetry: Retry","dev.kord.voice.gateway.DefaultVoiceGatewayData.reconnectRetry"]},{"name":"val recoverable: Boolean","description":"dev.kord.voice.gateway.Close.DiscordClose.recoverable","location":"voice/dev.kord.voice.gateway/-close/-discord-close/recoverable.html","searchKeys":["recoverable","val recoverable: Boolean","dev.kord.voice.gateway.Close.DiscordClose.recoverable"]},{"name":"val remaining: Int","description":"dev.kord.voice.io.MutableByteArrayCursor.remaining","location":"voice/dev.kord.voice.io/-mutable-byte-array-cursor/remaining.html","searchKeys":["remaining","val remaining: Int","dev.kord.voice.io.MutableByteArrayCursor.remaining"]},{"name":"val remaining: Int","description":"dev.kord.voice.io.ReadableByteArrayCursor.remaining","location":"voice/dev.kord.voice.io/-readable-byte-array-cursor/remaining.html","searchKeys":["remaining","val remaining: Int","dev.kord.voice.io.ReadableByteArrayCursor.remaining"]},{"name":"val scope: CoroutineScope","description":"dev.kord.voice.VoiceConnection.scope","location":"voice/dev.kord.voice/-voice-connection/scope.html","searchKeys":["scope","val scope: CoroutineScope","dev.kord.voice.VoiceConnection.scope"]},{"name":"val secretKey: List<UByte>","description":"dev.kord.voice.gateway.SessionDescription.secretKey","location":"voice/dev.kord.voice.gateway/-session-description/secret-key.html","searchKeys":["secretKey","val secretKey: List<UByte>","dev.kord.voice.gateway.SessionDescription.secretKey"]},{"name":"val selfId: Snowflake","description":"dev.kord.voice.VoiceConnectionData.selfId","location":"voice/dev.kord.voice/-voice-connection-data/self-id.html","searchKeys":["selfId","val selfId: Snowflake","dev.kord.voice.VoiceConnectionData.selfId"]},{"name":"val selfId: Snowflake","description":"dev.kord.voice.gateway.DefaultVoiceGatewayBuilder.selfId","location":"voice/dev.kord.voice.gateway/-default-voice-gateway-builder/self-id.html","searchKeys":["selfId","val selfId: Snowflake","dev.kord.voice.gateway.DefaultVoiceGatewayBuilder.selfId"]},{"name":"val selfId: Snowflake","description":"dev.kord.voice.gateway.DefaultVoiceGatewayData.selfId","location":"voice/dev.kord.voice.gateway/-default-voice-gateway-data/self-id.html","searchKeys":["selfId","val selfId: Snowflake","dev.kord.voice.gateway.DefaultVoiceGatewayData.selfId"]},{"name":"val sequence: UShort","description":"dev.kord.voice.udp.RTPPacket.sequence","location":"voice/dev.kord.voice.udp/-r-t-p-packet/sequence.html","searchKeys":["sequence","val sequence: UShort","dev.kord.voice.udp.RTPPacket.sequence"]},{"name":"val server: SocketAddress","description":"dev.kord.voice.udp.AudioFrameSenderConfiguration.server","location":"voice/dev.kord.voice.udp/-audio-frame-sender-configuration/server.html","searchKeys":["server","val server: SocketAddress","dev.kord.voice.udp.AudioFrameSenderConfiguration.server"]},{"name":"val serverId: Snowflake","description":"dev.kord.voice.gateway.Identify.serverId","location":"voice/dev.kord.voice.gateway/-identify/server-id.html","searchKeys":["serverId","val serverId: Snowflake","dev.kord.voice.gateway.Identify.serverId"]},{"name":"val serverId: Snowflake","description":"dev.kord.voice.gateway.Resume.serverId","location":"voice/dev.kord.voice.gateway/-resume/server-id.html","searchKeys":["serverId","val serverId: Snowflake","dev.kord.voice.gateway.Resume.serverId"]},{"name":"val sessionId: String","description":"dev.kord.voice.VoiceConnectionData.sessionId","location":"voice/dev.kord.voice/-voice-connection-data/session-id.html","searchKeys":["sessionId","val sessionId: String","dev.kord.voice.VoiceConnectionData.sessionId"]},{"name":"val sessionId: String","description":"dev.kord.voice.gateway.DefaultVoiceGatewayBuilder.sessionId","location":"voice/dev.kord.voice.gateway/-default-voice-gateway-builder/session-id.html","searchKeys":["sessionId","val sessionId: String","dev.kord.voice.gateway.DefaultVoiceGatewayBuilder.sessionId"]},{"name":"val sessionId: String","description":"dev.kord.voice.gateway.DefaultVoiceGatewayData.sessionId","location":"voice/dev.kord.voice.gateway/-default-voice-gateway-data/session-id.html","searchKeys":["sessionId","val sessionId: String","dev.kord.voice.gateway.DefaultVoiceGatewayData.sessionId"]},{"name":"val sessionId: String","description":"dev.kord.voice.gateway.Identify.sessionId","location":"voice/dev.kord.voice.gateway/-identify/session-id.html","searchKeys":["sessionId","val sessionId: String","dev.kord.voice.gateway.Identify.sessionId"]},{"name":"val sessionId: String","description":"dev.kord.voice.gateway.Resume.sessionId","location":"voice/dev.kord.voice.gateway/-resume/session-id.html","searchKeys":["sessionId","val sessionId: String","dev.kord.voice.gateway.Resume.sessionId"]},{"name":"val socket: VoiceUdpSocket","description":"dev.kord.voice.VoiceConnection.socket","location":"voice/dev.kord.voice/-voice-connection/socket.html","searchKeys":["socket","val socket: VoiceUdpSocket","dev.kord.voice.VoiceConnection.socket"]},{"name":"val speaking: SpeakingFlags","description":"dev.kord.voice.gateway.SendSpeaking.speaking","location":"voice/dev.kord.voice.gateway/-send-speaking/speaking.html","searchKeys":["speaking","val speaking: SpeakingFlags","dev.kord.voice.gateway.SendSpeaking.speaking"]},{"name":"val speaking: SpeakingFlags","description":"dev.kord.voice.gateway.Speaking.speaking","location":"voice/dev.kord.voice.gateway/-speaking/speaking.html","searchKeys":["speaking","val speaking: SpeakingFlags","dev.kord.voice.gateway.Speaking.speaking"]},{"name":"val speakingState: SpeakingFlags","description":"dev.kord.voice.DefaultFrameInterceptorData.speakingState","location":"voice/dev.kord.voice/-default-frame-interceptor-data/speaking-state.html","searchKeys":["speakingState","val speakingState: SpeakingFlags","dev.kord.voice.DefaultFrameInterceptorData.speakingState"]},{"name":"val ssrc: UInt","description":"dev.kord.voice.FrameInterceptorConfiguration.ssrc","location":"voice/dev.kord.voice/-frame-interceptor-configuration/ssrc.html","searchKeys":["ssrc","val ssrc: UInt","dev.kord.voice.FrameInterceptorConfiguration.ssrc"]},{"name":"val ssrc: UInt","description":"dev.kord.voice.gateway.Ready.ssrc","location":"voice/dev.kord.voice.gateway/-ready/ssrc.html","searchKeys":["ssrc","val ssrc: UInt","dev.kord.voice.gateway.Ready.ssrc"]},{"name":"val ssrc: UInt","description":"dev.kord.voice.gateway.SendSpeaking.ssrc","location":"voice/dev.kord.voice.gateway/-send-speaking/ssrc.html","searchKeys":["ssrc","val ssrc: UInt","dev.kord.voice.gateway.SendSpeaking.ssrc"]},{"name":"val ssrc: UInt","description":"dev.kord.voice.gateway.Speaking.ssrc","location":"voice/dev.kord.voice.gateway/-speaking/ssrc.html","searchKeys":["ssrc","val ssrc: UInt","dev.kord.voice.gateway.Speaking.ssrc"]},{"name":"val ssrc: UInt","description":"dev.kord.voice.udp.AudioFrameSenderConfiguration.ssrc","location":"voice/dev.kord.voice.udp/-audio-frame-sender-configuration/ssrc.html","searchKeys":["ssrc","val ssrc: UInt","dev.kord.voice.udp.AudioFrameSenderConfiguration.ssrc"]},{"name":"val ssrc: UInt","description":"dev.kord.voice.udp.RTPPacket.ssrc","location":"voice/dev.kord.voice.udp/-r-t-p-packet/ssrc.html","searchKeys":["ssrc","val ssrc: UInt","dev.kord.voice.udp.RTPPacket.ssrc"]},{"name":"val streams: Streams","description":"dev.kord.voice.VoiceConnection.streams","location":"voice/dev.kord.voice/-voice-connection/streams.html","searchKeys":["streams","val streams: Streams","dev.kord.voice.VoiceConnection.streams"]},{"name":"val timestamp: UInt","description":"dev.kord.voice.udp.RTPPacket.timestamp","location":"voice/dev.kord.voice.udp/-r-t-p-packet/timestamp.html","searchKeys":["timestamp","val timestamp: UInt","dev.kord.voice.udp.RTPPacket.timestamp"]},{"name":"val token: String","description":"dev.kord.voice.gateway.Identify.token","location":"voice/dev.kord.voice.gateway/-identify/token.html","searchKeys":["token","val token: String","dev.kord.voice.gateway.Identify.token"]},{"name":"val token: String","description":"dev.kord.voice.gateway.Resume.token","location":"voice/dev.kord.voice.gateway/-resume/token.html","searchKeys":["token","val token: String","dev.kord.voice.gateway.Resume.token"]},{"name":"val token: String","description":"dev.kord.voice.gateway.VoiceGatewayConfiguration.token","location":"voice/dev.kord.voice.gateway/-voice-gateway-configuration/token.html","searchKeys":["token","val token: String","dev.kord.voice.gateway.VoiceGatewayConfiguration.token"]},{"name":"val udp: VoiceUdpSocket","description":"dev.kord.voice.udp.DefaultAudioFrameSenderData.udp","location":"voice/dev.kord.voice.udp/-default-audio-frame-sender-data/udp.html","searchKeys":["udp","val udp: VoiceUdpSocket","dev.kord.voice.udp.DefaultAudioFrameSenderData.udp"]},{"name":"val userId: Snowflake","description":"dev.kord.voice.gateway.Identify.userId","location":"voice/dev.kord.voice.gateway/-identify/user-id.html","searchKeys":["userId","val userId: Snowflake","dev.kord.voice.gateway.Identify.userId"]},{"name":"val userId: Snowflake","description":"dev.kord.voice.gateway.Speaking.userId","location":"voice/dev.kord.voice.gateway/-speaking/user-id.html","searchKeys":["userId","val userId: Snowflake","dev.kord.voice.gateway.Speaking.userId"]},{"name":"val version: Short","description":"dev.kord.voice.gateway.Hello.version","location":"voice/dev.kord.voice.gateway/-hello/version.html","searchKeys":["version","val version: Short","dev.kord.voice.gateway.Hello.version"]},{"name":"val view: ByteArrayView","description":"dev.kord.voice.io.ReadableByteArrayCursor.view","location":"voice/dev.kord.voice.io/-readable-byte-array-cursor/view.html","searchKeys":["view","val view: ByteArrayView","dev.kord.voice.io.ReadableByteArrayCursor.view"]},{"name":"val viewSize: Int","description":"dev.kord.voice.io.ByteArrayView.viewSize","location":"voice/dev.kord.voice.io/-byte-array-view/view-size.html","searchKeys":["viewSize","val viewSize: Int","dev.kord.voice.io.ByteArrayView.viewSize"]},{"name":"val voiceGateway: VoiceGateway","description":"dev.kord.voice.FrameInterceptorConfiguration.voiceGateway","location":"voice/dev.kord.voice/-frame-interceptor-configuration/voice-gateway.html","searchKeys":["voiceGateway","val voiceGateway: VoiceGateway","dev.kord.voice.FrameInterceptorConfiguration.voiceGateway"]},{"name":"val voiceGateway: VoiceGateway","description":"dev.kord.voice.VoiceConnection.voiceGateway","location":"voice/dev.kord.voice/-voice-connection/voice-gateway.html","searchKeys":["voiceGateway","val voiceGateway: VoiceGateway","dev.kord.voice.VoiceConnection.voiceGateway"]},{"name":"value class AudioFrame(val data: ByteArray)","description":"dev.kord.voice.AudioFrame","location":"voice/dev.kord.voice/-audio-frame/index.html","searchKeys":["AudioFrame","value class AudioFrame(val data: ByteArray)","dev.kord.voice.AudioFrame"]},{"name":"var audioProvider: AudioProvider? = null","description":"dev.kord.voice.VoiceConnectionBuilder.audioProvider","location":"voice/dev.kord.voice/-voice-connection-builder/audio-provider.html","searchKeys":["audioProvider","var audioProvider: AudioProvider? = null","dev.kord.voice.VoiceConnectionBuilder.audioProvider"]},{"name":"var audioSender: AudioFrameSender? = null","description":"dev.kord.voice.VoiceConnectionBuilder.audioSender","location":"voice/dev.kord.voice/-voice-connection-builder/audio-sender.html","searchKeys":["audioSender","var audioSender: AudioFrameSender? = null","dev.kord.voice.VoiceConnectionBuilder.audioSender"]},{"name":"var channelId: Snowflake","description":"dev.kord.voice.VoiceConnectionBuilder.channelId","location":"voice/dev.kord.voice/-voice-connection-builder/channel-id.html","searchKeys":["channelId","var channelId: Snowflake","dev.kord.voice.VoiceConnectionBuilder.channelId"]},{"name":"var client: HttpClient? = null","description":"dev.kord.voice.gateway.DefaultVoiceGatewayBuilder.client","location":"voice/dev.kord.voice.gateway/-default-voice-gateway-builder/client.html","searchKeys":["client","var client: HttpClient? = null","dev.kord.voice.gateway.DefaultVoiceGatewayBuilder.client"]},{"name":"var connectionDetachDuration: Duration","description":"dev.kord.voice.VoiceConnectionBuilder.connectionDetachDuration","location":"voice/dev.kord.voice/-voice-connection-builder/connection-detach-duration.html","searchKeys":["connectionDetachDuration","var connectionDetachDuration: Duration","dev.kord.voice.VoiceConnectionBuilder.connectionDetachDuration"]},{"name":"var csrcIdentifiers: UIntArray","description":"dev.kord.voice.udp.RTPPacket.Builder.csrcIdentifiers","location":"voice/dev.kord.voice.udp/-r-t-p-packet/-builder/csrc-identifiers.html","searchKeys":["csrcIdentifiers","var csrcIdentifiers: UIntArray","dev.kord.voice.udp.RTPPacket.Builder.csrcIdentifiers"]},{"name":"var cursor: Int","description":"dev.kord.voice.io.MutableByteArrayCursor.cursor","location":"voice/dev.kord.voice.io/-mutable-byte-array-cursor/cursor.html","searchKeys":["cursor","var cursor: Int","dev.kord.voice.io.MutableByteArrayCursor.cursor"]},{"name":"var cursor: Int","description":"dev.kord.voice.io.ReadableByteArrayCursor.cursor","location":"voice/dev.kord.voice.io/-readable-byte-array-cursor/cursor.html","searchKeys":["cursor","var cursor: Int","dev.kord.voice.io.ReadableByteArrayCursor.cursor"]},{"name":"var data: ByteArray","description":"dev.kord.voice.io.MutableByteArrayCursor.data","location":"voice/dev.kord.voice.io/-mutable-byte-array-cursor/data.html","searchKeys":["data","var data: ByteArray","dev.kord.voice.io.MutableByteArrayCursor.data"]},{"name":"var dataEnd: Int","description":"dev.kord.voice.io.ByteArrayView.dataEnd","location":"voice/dev.kord.voice.io/-byte-array-view/data-end.html","searchKeys":["dataEnd","var dataEnd: Int","dev.kord.voice.io.ByteArrayView.dataEnd"]},{"name":"var dataStart: Int","description":"dev.kord.voice.io.ByteArrayView.dataStart","location":"voice/dev.kord.voice.io/-byte-array-view/data-start.html","searchKeys":["dataStart","var dataStart: Int","dev.kord.voice.io.ByteArrayView.dataStart"]},{"name":"var eventFlow: MutableSharedFlow<VoiceEvent>","description":"dev.kord.voice.gateway.DefaultVoiceGatewayBuilder.eventFlow","location":"voice/dev.kord.voice.gateway/-default-voice-gateway-builder/event-flow.html","searchKeys":["eventFlow","var eventFlow: MutableSharedFlow<VoiceEvent>","dev.kord.voice.gateway.DefaultVoiceGatewayBuilder.eventFlow"]},{"name":"var frameInterceptor: FrameInterceptor? = null","description":"dev.kord.voice.VoiceConnectionBuilder.frameInterceptor","location":"voice/dev.kord.voice/-voice-connection-builder/frame-interceptor.html","searchKeys":["frameInterceptor","var frameInterceptor: FrameInterceptor? = null","dev.kord.voice.VoiceConnectionBuilder.frameInterceptor"]},{"name":"var gateway: Gateway","description":"dev.kord.voice.VoiceConnectionBuilder.gateway","location":"voice/dev.kord.voice/-voice-connection-builder/gateway.html","searchKeys":["gateway","var gateway: Gateway","dev.kord.voice.VoiceConnectionBuilder.gateway"]},{"name":"var guildId: Snowflake","description":"dev.kord.voice.VoiceConnectionBuilder.guildId","location":"voice/dev.kord.voice/-voice-connection-builder/guild-id.html","searchKeys":["guildId","var guildId: Snowflake","dev.kord.voice.VoiceConnectionBuilder.guildId"]},{"name":"var hasExtension: Boolean = false","description":"dev.kord.voice.udp.RTPPacket.Builder.hasExtension","location":"voice/dev.kord.voice.udp/-r-t-p-packet/-builder/has-extension.html","searchKeys":["hasExtension","var hasExtension: Boolean = false","dev.kord.voice.udp.RTPPacket.Builder.hasExtension"]},{"name":"var marker: Boolean = false","description":"dev.kord.voice.udp.RTPPacket.Builder.marker","location":"voice/dev.kord.voice.udp/-r-t-p-packet/-builder/marker.html","searchKeys":["marker","var marker: Boolean = false","dev.kord.voice.udp.RTPPacket.Builder.marker"]},{"name":"var nonceStrategy: NonceStrategy? = null","description":"dev.kord.voice.VoiceConnectionBuilder.nonceStrategy","location":"voice/dev.kord.voice/-voice-connection-builder/nonce-strategy.html","searchKeys":["nonceStrategy","var nonceStrategy: NonceStrategy? = null","dev.kord.voice.VoiceConnectionBuilder.nonceStrategy"]},{"name":"var paddingBytes: UByte","description":"dev.kord.voice.udp.RTPPacket.Builder.paddingBytes","location":"voice/dev.kord.voice.udp/-r-t-p-packet/-builder/padding-bytes.html","searchKeys":["paddingBytes","var paddingBytes: UByte","dev.kord.voice.udp.RTPPacket.Builder.paddingBytes"]},{"name":"var payload: ByteArray","description":"dev.kord.voice.udp.RTPPacket.Builder.payload","location":"voice/dev.kord.voice.udp/-r-t-p-packet/-builder/payload.html","searchKeys":["payload","var payload: ByteArray","dev.kord.voice.udp.RTPPacket.Builder.payload"]},{"name":"var payloadType: Byte","description":"dev.kord.voice.udp.RTPPacket.Builder.payloadType","location":"voice/dev.kord.voice.udp/-r-t-p-packet/-builder/payload-type.html","searchKeys":["payloadType","var payloadType: Byte","dev.kord.voice.udp.RTPPacket.Builder.payloadType"]},{"name":"var receiveVoice: Boolean = false","description":"dev.kord.voice.VoiceConnectionBuilder.receiveVoice","location":"voice/dev.kord.voice/-voice-connection-builder/receive-voice.html","searchKeys":["receiveVoice","var receiveVoice: Boolean = false","dev.kord.voice.VoiceConnectionBuilder.receiveVoice"]},{"name":"var reconnectRetry: Retry? = null","description":"dev.kord.voice.gateway.DefaultVoiceGatewayBuilder.reconnectRetry","location":"voice/dev.kord.voice.gateway/-default-voice-gateway-builder/reconnect-retry.html","searchKeys":["reconnectRetry","var reconnectRetry: Retry? = null","dev.kord.voice.gateway.DefaultVoiceGatewayBuilder.reconnectRetry"]},{"name":"var selfDeaf: Boolean = false","description":"dev.kord.voice.VoiceConnectionBuilder.selfDeaf","location":"voice/dev.kord.voice/-voice-connection-builder/self-deaf.html","searchKeys":["selfDeaf","var selfDeaf: Boolean = false","dev.kord.voice.VoiceConnectionBuilder.selfDeaf"]},{"name":"var selfId: Snowflake","description":"dev.kord.voice.VoiceConnectionBuilder.selfId","location":"voice/dev.kord.voice/-voice-connection-builder/self-id.html","searchKeys":["selfId","var selfId: Snowflake","dev.kord.voice.VoiceConnectionBuilder.selfId"]},{"name":"var selfMute: Boolean = false","description":"dev.kord.voice.VoiceConnectionBuilder.selfMute","location":"voice/dev.kord.voice/-voice-connection-builder/self-mute.html","searchKeys":["selfMute","var selfMute: Boolean = false","dev.kord.voice.VoiceConnectionBuilder.selfMute"]},{"name":"var sequence: UShort","description":"dev.kord.voice.udp.RTPPacket.Builder.sequence","location":"voice/dev.kord.voice.udp/-r-t-p-packet/-builder/sequence.html","searchKeys":["sequence","var sequence: UShort","dev.kord.voice.udp.RTPPacket.Builder.sequence"]},{"name":"var ssrc: UInt","description":"dev.kord.voice.udp.RTPPacket.Builder.ssrc","location":"voice/dev.kord.voice.udp/-r-t-p-packet/-builder/ssrc.html","searchKeys":["ssrc","var ssrc: UInt","dev.kord.voice.udp.RTPPacket.Builder.ssrc"]},{"name":"var streams: Streams? = null","description":"dev.kord.voice.VoiceConnectionBuilder.streams","location":"voice/dev.kord.voice/-voice-connection-builder/streams.html","searchKeys":["streams","var streams: Streams? = null","dev.kord.voice.VoiceConnectionBuilder.streams"]},{"name":"var timeout: Long = 5000","description":"dev.kord.voice.VoiceConnectionBuilder.timeout","location":"voice/dev.kord.voice/-voice-connection-builder/timeout.html","searchKeys":["timeout","var timeout: Long = 5000","dev.kord.voice.VoiceConnectionBuilder.timeout"]},{"name":"var timestamp: UInt","description":"dev.kord.voice.udp.RTPPacket.Builder.timestamp","location":"voice/dev.kord.voice.udp/-r-t-p-packet/-builder/timestamp.html","searchKeys":["timestamp","var timestamp: UInt","dev.kord.voice.udp.RTPPacket.Builder.timestamp"]},{"name":"var udpSocket: VoiceUdpSocket? = null","description":"dev.kord.voice.VoiceConnectionBuilder.udpSocket","location":"voice/dev.kord.voice/-voice-connection-builder/udp-socket.html","searchKeys":["udpSocket","var udpSocket: VoiceUdpSocket? = null","dev.kord.voice.VoiceConnectionBuilder.udpSocket"]},{"name":"var voiceGatewayConfiguration: VoiceGatewayConfiguration","description":"dev.kord.voice.VoiceConnection.voiceGatewayConfiguration","location":"voice/dev.kord.voice/-voice-connection/voice-gateway-configuration.html","searchKeys":["voiceGatewayConfiguration","var voiceGatewayConfiguration: VoiceGatewayConfiguration","dev.kord.voice.VoiceConnection.voiceGatewayConfiguration"]},{"name":"abstract class AbstractLiveKordEntity(val kord: Kord, coroutineScope: CoroutineScope = kord + SupervisorJob(kord.coroutineContext.job)) : LiveKordEntity, CoroutineScope","description":"dev.kord.core.live.AbstractLiveKordEntity","location":"core/dev.kord.core.live/-abstract-live-kord-entity/index.html","searchKeys":["AbstractLiveKordEntity","abstract class AbstractLiveKordEntity(val kord: Kord, coroutineScope: CoroutineScope = kord + SupervisorJob(kord.coroutineContext.job)) : LiveKordEntity, CoroutineScope","dev.kord.core.live.AbstractLiveKordEntity"]},{"name":"abstract class LiveChannel(val kord: Kord, coroutineScope: CoroutineScope = kord + SupervisorJob(kord.coroutineContext.job)) : AbstractLiveKordEntity","description":"dev.kord.core.live.channel.LiveChannel","location":"core/dev.kord.core.live.channel/-live-channel/index.html","searchKeys":["LiveChannel","abstract class LiveChannel(val kord: Kord, coroutineScope: CoroutineScope = kord + SupervisorJob(kord.coroutineContext.job)) : AbstractLiveKordEntity","dev.kord.core.live.channel.LiveChannel"]},{"name":"abstract class RestOnlyBuilder","description":"dev.kord.core.builder.kord.RestOnlyBuilder","location":"core/dev.kord.core.builder.kord/-rest-only-builder/index.html","searchKeys":["RestOnlyBuilder","abstract class RestOnlyBuilder","dev.kord.core.builder.kord.RestOnlyBuilder"]},{"name":"abstract fun getActiveThreads(guildId: Snowflake): Flow<ThreadChannel>","description":"dev.kord.core.supplier.EntitySupplier.getActiveThreads","location":"core/dev.kord.core.supplier/-entity-supplier/get-active-threads.html","searchKeys":["getActiveThreads","abstract fun getActiveThreads(guildId: Snowflake): Flow<ThreadChannel>","dev.kord.core.supplier.EntitySupplier.getActiveThreads"]},{"name":"abstract fun getAutoModerationRules(guildId: Snowflake): Flow<AutoModerationRule>","description":"dev.kord.core.supplier.EntitySupplier.getAutoModerationRules","location":"core/dev.kord.core.supplier/-entity-supplier/get-auto-moderation-rules.html","searchKeys":["getAutoModerationRules","abstract fun getAutoModerationRules(guildId: Snowflake): Flow<AutoModerationRule>","dev.kord.core.supplier.EntitySupplier.getAutoModerationRules"]},{"name":"abstract fun getChannelPins(channelId: Snowflake): Flow<Message>","description":"dev.kord.core.supplier.EntitySupplier.getChannelPins","location":"core/dev.kord.core.supplier/-entity-supplier/get-channel-pins.html","searchKeys":["getChannelPins","abstract fun getChannelPins(channelId: Snowflake): Flow<Message>","dev.kord.core.supplier.EntitySupplier.getChannelPins"]},{"name":"abstract fun getChannelWebhooks(channelId: Snowflake): Flow<Webhook>","description":"dev.kord.core.supplier.EntitySupplier.getChannelWebhooks","location":"core/dev.kord.core.supplier/-entity-supplier/get-channel-webhooks.html","searchKeys":["getChannelWebhooks","abstract fun getChannelWebhooks(channelId: Snowflake): Flow<Webhook>","dev.kord.core.supplier.EntitySupplier.getChannelWebhooks"]},{"name":"abstract fun getCurrentUserGuilds(limit: Int? = null): Flow<Guild>","description":"dev.kord.core.supplier.EntitySupplier.getCurrentUserGuilds","location":"core/dev.kord.core.supplier/-entity-supplier/get-current-user-guilds.html","searchKeys":["getCurrentUserGuilds","abstract fun getCurrentUserGuilds(limit: Int? = null): Flow<Guild>","dev.kord.core.supplier.EntitySupplier.getCurrentUserGuilds"]},{"name":"abstract fun getEmojis(guildId: Snowflake): Flow<GuildEmoji>","description":"dev.kord.core.supplier.EntitySupplier.getEmojis","location":"core/dev.kord.core.supplier/-entity-supplier/get-emojis.html","searchKeys":["getEmojis","abstract fun getEmojis(guildId: Snowflake): Flow<GuildEmoji>","dev.kord.core.supplier.EntitySupplier.getEmojis"]},{"name":"abstract fun getGlobalApplicationCommands(applicationId: Snowflake, withLocalizations: Boolean? = null): Flow<GlobalApplicationCommand>","description":"dev.kord.core.supplier.EntitySupplier.getGlobalApplicationCommands","location":"core/dev.kord.core.supplier/-entity-supplier/get-global-application-commands.html","searchKeys":["getGlobalApplicationCommands","abstract fun getGlobalApplicationCommands(applicationId: Snowflake, withLocalizations: Boolean? = null): Flow<GlobalApplicationCommand>","dev.kord.core.supplier.EntitySupplier.getGlobalApplicationCommands"]},{"name":"abstract fun getGuildApplicationCommandPermissions(applicationId: Snowflake, guildId: Snowflake): Flow<ApplicationCommandPermissions>","description":"dev.kord.core.supplier.EntitySupplier.getGuildApplicationCommandPermissions","location":"core/dev.kord.core.supplier/-entity-supplier/get-guild-application-command-permissions.html","searchKeys":["getGuildApplicationCommandPermissions","abstract fun getGuildApplicationCommandPermissions(applicationId: Snowflake, guildId: Snowflake): Flow<ApplicationCommandPermissions>","dev.kord.core.supplier.EntitySupplier.getGuildApplicationCommandPermissions"]},{"name":"abstract fun getGuildApplicationCommands(applicationId: Snowflake, guildId: Snowflake, withLocalizations: Boolean? = null): Flow<GuildApplicationCommand>","description":"dev.kord.core.supplier.EntitySupplier.getGuildApplicationCommands","location":"core/dev.kord.core.supplier/-entity-supplier/get-guild-application-commands.html","searchKeys":["getGuildApplicationCommands","abstract fun getGuildApplicationCommands(applicationId: Snowflake, guildId: Snowflake, withLocalizations: Boolean? = null): Flow<GuildApplicationCommand>","dev.kord.core.supplier.EntitySupplier.getGuildApplicationCommands"]},{"name":"abstract fun getGuildBans(guildId: Snowflake, limit: Int? = null): Flow<Ban>","description":"dev.kord.core.supplier.EntitySupplier.getGuildBans","location":"core/dev.kord.core.supplier/-entity-supplier/get-guild-bans.html","searchKeys":["getGuildBans","abstract fun getGuildBans(guildId: Snowflake, limit: Int? = null): Flow<Ban>","dev.kord.core.supplier.EntitySupplier.getGuildBans"]},{"name":"abstract fun getGuildChannels(guildId: Snowflake): Flow<TopGuildChannel>","description":"dev.kord.core.supplier.EntitySupplier.getGuildChannels","location":"core/dev.kord.core.supplier/-entity-supplier/get-guild-channels.html","searchKeys":["getGuildChannels","abstract fun getGuildChannels(guildId: Snowflake): Flow<TopGuildChannel>","dev.kord.core.supplier.EntitySupplier.getGuildChannels"]},{"name":"abstract fun getGuildMembers(guildId: Snowflake, limit: Int? = null): Flow<Member>","description":"dev.kord.core.supplier.EntitySupplier.getGuildMembers","location":"core/dev.kord.core.supplier/-entity-supplier/get-guild-members.html","searchKeys":["getGuildMembers","abstract fun getGuildMembers(guildId: Snowflake, limit: Int? = null): Flow<Member>","dev.kord.core.supplier.EntitySupplier.getGuildMembers"]},{"name":"abstract fun getGuildRoles(guildId: Snowflake): Flow<Role>","description":"dev.kord.core.supplier.EntitySupplier.getGuildRoles","location":"core/dev.kord.core.supplier/-entity-supplier/get-guild-roles.html","searchKeys":["getGuildRoles","abstract fun getGuildRoles(guildId: Snowflake): Flow<Role>","dev.kord.core.supplier.EntitySupplier.getGuildRoles"]},{"name":"abstract fun getGuildScheduledEventMembersAfter(guildId: Snowflake, eventId: Snowflake, after: Snowflake, limit: Int? = null): Flow<Member>","description":"dev.kord.core.supplier.EntitySupplier.getGuildScheduledEventMembersAfter","location":"core/dev.kord.core.supplier/-entity-supplier/get-guild-scheduled-event-members-after.html","searchKeys":["getGuildScheduledEventMembersAfter","abstract fun getGuildScheduledEventMembersAfter(guildId: Snowflake, eventId: Snowflake, after: Snowflake, limit: Int? = null): Flow<Member>","dev.kord.core.supplier.EntitySupplier.getGuildScheduledEventMembersAfter"]},{"name":"abstract fun getGuildScheduledEventMembersBefore(guildId: Snowflake, eventId: Snowflake, before: Snowflake, limit: Int? = null): Flow<Member>","description":"dev.kord.core.supplier.EntitySupplier.getGuildScheduledEventMembersBefore","location":"core/dev.kord.core.supplier/-entity-supplier/get-guild-scheduled-event-members-before.html","searchKeys":["getGuildScheduledEventMembersBefore","abstract fun getGuildScheduledEventMembersBefore(guildId: Snowflake, eventId: Snowflake, before: Snowflake, limit: Int? = null): Flow<Member>","dev.kord.core.supplier.EntitySupplier.getGuildScheduledEventMembersBefore"]},{"name":"abstract fun getGuildScheduledEventUsersAfter(guildId: Snowflake, eventId: Snowflake, after: Snowflake, limit: Int? = null): Flow<User>","description":"dev.kord.core.supplier.EntitySupplier.getGuildScheduledEventUsersAfter","location":"core/dev.kord.core.supplier/-entity-supplier/get-guild-scheduled-event-users-after.html","searchKeys":["getGuildScheduledEventUsersAfter","abstract fun getGuildScheduledEventUsersAfter(guildId: Snowflake, eventId: Snowflake, after: Snowflake, limit: Int? = null): Flow<User>","dev.kord.core.supplier.EntitySupplier.getGuildScheduledEventUsersAfter"]},{"name":"abstract fun getGuildScheduledEventUsersBefore(guildId: Snowflake, eventId: Snowflake, before: Snowflake, limit: Int? = null): Flow<User>","description":"dev.kord.core.supplier.EntitySupplier.getGuildScheduledEventUsersBefore","location":"core/dev.kord.core.supplier/-entity-supplier/get-guild-scheduled-event-users-before.html","searchKeys":["getGuildScheduledEventUsersBefore","abstract fun getGuildScheduledEventUsersBefore(guildId: Snowflake, eventId: Snowflake, before: Snowflake, limit: Int? = null): Flow<User>","dev.kord.core.supplier.EntitySupplier.getGuildScheduledEventUsersBefore"]},{"name":"abstract fun getGuildScheduledEvents(guildId: Snowflake): Flow<GuildScheduledEvent>","description":"dev.kord.core.supplier.EntitySupplier.getGuildScheduledEvents","location":"core/dev.kord.core.supplier/-entity-supplier/get-guild-scheduled-events.html","searchKeys":["getGuildScheduledEvents","abstract fun getGuildScheduledEvents(guildId: Snowflake): Flow<GuildScheduledEvent>","dev.kord.core.supplier.EntitySupplier.getGuildScheduledEvents"]},{"name":"abstract fun getGuildStickers(guildId: Snowflake): Flow<GuildSticker>","description":"dev.kord.core.supplier.EntitySupplier.getGuildStickers","location":"core/dev.kord.core.supplier/-entity-supplier/get-guild-stickers.html","searchKeys":["getGuildStickers","abstract fun getGuildStickers(guildId: Snowflake): Flow<GuildSticker>","dev.kord.core.supplier.EntitySupplier.getGuildStickers"]},{"name":"abstract fun getGuildVoiceRegions(guildId: Snowflake): Flow<Region>","description":"dev.kord.core.supplier.EntitySupplier.getGuildVoiceRegions","location":"core/dev.kord.core.supplier/-entity-supplier/get-guild-voice-regions.html","searchKeys":["getGuildVoiceRegions","abstract fun getGuildVoiceRegions(guildId: Snowflake): Flow<Region>","dev.kord.core.supplier.EntitySupplier.getGuildVoiceRegions"]},{"name":"abstract fun getGuildWebhooks(guildId: Snowflake): Flow<Webhook>","description":"dev.kord.core.supplier.EntitySupplier.getGuildWebhooks","location":"core/dev.kord.core.supplier/-entity-supplier/get-guild-webhooks.html","searchKeys":["getGuildWebhooks","abstract fun getGuildWebhooks(guildId: Snowflake): Flow<Webhook>","dev.kord.core.supplier.EntitySupplier.getGuildWebhooks"]},{"name":"abstract fun getJoinedPrivateArchivedThreads(channelId: Snowflake, before: Snowflake? = null, limit: Int? = null): Flow<ThreadChannel>","description":"dev.kord.core.supplier.EntitySupplier.getJoinedPrivateArchivedThreads","location":"core/dev.kord.core.supplier/-entity-supplier/get-joined-private-archived-threads.html","searchKeys":["getJoinedPrivateArchivedThreads","abstract fun getJoinedPrivateArchivedThreads(channelId: Snowflake, before: Snowflake? = null, limit: Int? = null): Flow<ThreadChannel>","dev.kord.core.supplier.EntitySupplier.getJoinedPrivateArchivedThreads"]},{"name":"abstract fun getMessagesAfter(messageId: Snowflake, channelId: Snowflake, limit: Int? = null): Flow<Message>","description":"dev.kord.core.supplier.EntitySupplier.getMessagesAfter","location":"core/dev.kord.core.supplier/-entity-supplier/get-messages-after.html","searchKeys":["getMessagesAfter","abstract fun getMessagesAfter(messageId: Snowflake, channelId: Snowflake, limit: Int? = null): Flow<Message>","dev.kord.core.supplier.EntitySupplier.getMessagesAfter"]},{"name":"abstract fun getMessagesAround(messageId: Snowflake, channelId: Snowflake, limit: Int = 100): Flow<Message>","description":"dev.kord.core.supplier.EntitySupplier.getMessagesAround","location":"core/dev.kord.core.supplier/-entity-supplier/get-messages-around.html","searchKeys":["getMessagesAround","abstract fun getMessagesAround(messageId: Snowflake, channelId: Snowflake, limit: Int = 100): Flow<Message>","dev.kord.core.supplier.EntitySupplier.getMessagesAround"]},{"name":"abstract fun getMessagesBefore(messageId: Snowflake, channelId: Snowflake, limit: Int? = null): Flow<Message>","description":"dev.kord.core.supplier.EntitySupplier.getMessagesBefore","location":"core/dev.kord.core.supplier/-entity-supplier/get-messages-before.html","searchKeys":["getMessagesBefore","abstract fun getMessagesBefore(messageId: Snowflake, channelId: Snowflake, limit: Int? = null): Flow<Message>","dev.kord.core.supplier.EntitySupplier.getMessagesBefore"]},{"name":"abstract fun getNitroStickerPacks(): Flow<StickerPack>","description":"dev.kord.core.supplier.EntitySupplier.getNitroStickerPacks","location":"core/dev.kord.core.supplier/-entity-supplier/get-nitro-sticker-packs.html","searchKeys":["getNitroStickerPacks","abstract fun getNitroStickerPacks(): Flow<StickerPack>","dev.kord.core.supplier.EntitySupplier.getNitroStickerPacks"]},{"name":"abstract fun getPrivateArchivedThreads(channelId: Snowflake, before: Instant? = null, limit: Int? = null): Flow<ThreadChannel>","description":"dev.kord.core.supplier.EntitySupplier.getPrivateArchivedThreads","location":"core/dev.kord.core.supplier/-entity-supplier/get-private-archived-threads.html","searchKeys":["getPrivateArchivedThreads","abstract fun getPrivateArchivedThreads(channelId: Snowflake, before: Instant? = null, limit: Int? = null): Flow<ThreadChannel>","dev.kord.core.supplier.EntitySupplier.getPrivateArchivedThreads"]},{"name":"abstract fun getPublicArchivedThreads(channelId: Snowflake, before: Instant? = null, limit: Int? = null): Flow<ThreadChannel>","description":"dev.kord.core.supplier.EntitySupplier.getPublicArchivedThreads","location":"core/dev.kord.core.supplier/-entity-supplier/get-public-archived-threads.html","searchKeys":["getPublicArchivedThreads","abstract fun getPublicArchivedThreads(channelId: Snowflake, before: Instant? = null, limit: Int? = null): Flow<ThreadChannel>","dev.kord.core.supplier.EntitySupplier.getPublicArchivedThreads"]},{"name":"abstract fun getTemplates(guildId: Snowflake): Flow<Template>","description":"dev.kord.core.supplier.EntitySupplier.getTemplates","location":"core/dev.kord.core.supplier/-entity-supplier/get-templates.html","searchKeys":["getTemplates","abstract fun getTemplates(guildId: Snowflake): Flow<Template>","dev.kord.core.supplier.EntitySupplier.getTemplates"]},{"name":"abstract fun getThreadMembers(channelId: Snowflake): Flow<ThreadMember>","description":"dev.kord.core.supplier.EntitySupplier.getThreadMembers","location":"core/dev.kord.core.supplier/-entity-supplier/get-thread-members.html","searchKeys":["getThreadMembers","abstract fun getThreadMembers(channelId: Snowflake): Flow<ThreadMember>","dev.kord.core.supplier.EntitySupplier.getThreadMembers"]},{"name":"abstract fun shutDown(cause: CancellationException = CancellationException(\"The live entity is shut down\", null))","description":"dev.kord.core.live.LiveKordEntity.shutDown","location":"core/dev.kord.core.live/-live-kord-entity/shut-down.html","searchKeys":["shutDown","abstract fun shutDown(cause: CancellationException = CancellationException(\"The live entity is shut down\", null))","dev.kord.core.live.LiveKordEntity.shutDown"]},{"name":"abstract fun supply(kord: Kord): T","description":"dev.kord.core.supplier.EntitySupplyStrategy.supply","location":"core/dev.kord.core.supplier/-entity-supply-strategy/supply.html","searchKeys":["supply","abstract fun supply(kord: Kord): T","dev.kord.core.supplier.EntitySupplyStrategy.supply"]},{"name":"abstract fun withStrategy(strategy: EntitySupplyStrategy<*>): Strategizable","description":"dev.kord.core.entity.Strategizable.withStrategy","location":"core/dev.kord.core.entity/-strategizable/with-strategy.html","searchKeys":["withStrategy","abstract fun withStrategy(strategy: EntitySupplyStrategy<*>): Strategizable","dev.kord.core.entity.Strategizable.withStrategy"]},{"name":"abstract operator override fun equals(other: Any?): Boolean","description":"dev.kord.core.behavior.automoderation.AutoModerationRuleBehavior.equals","location":"core/dev.kord.core.behavior.automoderation/-auto-moderation-rule-behavior/equals.html","searchKeys":["equals","abstract operator override fun equals(other: Any?): Boolean","dev.kord.core.behavior.automoderation.AutoModerationRuleBehavior.equals"]},{"name":"abstract override fun hashCode(): Int","description":"dev.kord.core.behavior.automoderation.AutoModerationRuleBehavior.hashCode","location":"core/dev.kord.core.behavior.automoderation/-auto-moderation-rule-behavior/hash-code.html","searchKeys":["hashCode","abstract override fun hashCode(): Int","dev.kord.core.behavior.automoderation.AutoModerationRuleBehavior.hashCode"]},{"name":"abstract override fun toString(): String","description":"dev.kord.core.behavior.automoderation.AutoModerationRuleBehavior.toString","location":"core/dev.kord.core.behavior.automoderation/-auto-moderation-rule-behavior/to-string.html","searchKeys":["toString","abstract override fun toString(): String","dev.kord.core.behavior.automoderation.AutoModerationRuleBehavior.toString"]},{"name":"abstract override fun toString(): String","description":"dev.kord.core.entity.automoderation.AutoModerationAction.toString","location":"core/dev.kord.core.entity.automoderation/-auto-moderation-action/to-string.html","searchKeys":["toString","abstract override fun toString(): String","dev.kord.core.entity.automoderation.AutoModerationAction.toString"]},{"name":"abstract override fun toString(): String","description":"dev.kord.core.event.automoderation.AutoModerationEvent.toString","location":"core/dev.kord.core.event.automoderation/-auto-moderation-event/to-string.html","searchKeys":["toString","abstract override fun toString(): String","dev.kord.core.event.automoderation.AutoModerationEvent.toString"]},{"name":"abstract override fun withStrategy(strategy: EntitySupplyStrategy<*>): ActionInteraction","description":"dev.kord.core.entity.interaction.ActionInteraction.withStrategy","location":"core/dev.kord.core.entity.interaction/-action-interaction/with-strategy.html","searchKeys":["withStrategy","abstract override fun withStrategy(strategy: EntitySupplyStrategy<*>): ActionInteraction","dev.kord.core.entity.interaction.ActionInteraction.withStrategy"]},{"name":"abstract override fun withStrategy(strategy: EntitySupplyStrategy<*>): ApplicationCommandInteraction","description":"dev.kord.core.entity.interaction.ApplicationCommandInteraction.withStrategy","location":"core/dev.kord.core.entity.interaction/-application-command-interaction/with-strategy.html","searchKeys":["withStrategy","abstract override fun withStrategy(strategy: EntitySupplyStrategy<*>): ApplicationCommandInteraction","dev.kord.core.entity.interaction.ApplicationCommandInteraction.withStrategy"]},{"name":"abstract override fun withStrategy(strategy: EntitySupplyStrategy<*>): AutoCompleteInteraction","description":"dev.kord.core.entity.interaction.AutoCompleteInteraction.withStrategy","location":"core/dev.kord.core.entity.interaction/-auto-complete-interaction/with-strategy.html","searchKeys":["withStrategy","abstract override fun withStrategy(strategy: EntitySupplyStrategy<*>): AutoCompleteInteraction","dev.kord.core.entity.interaction.AutoCompleteInteraction.withStrategy"]},{"name":"abstract override fun withStrategy(strategy: EntitySupplyStrategy<*>): AutoCompleteInteractionBehavior","description":"dev.kord.core.behavior.interaction.AutoCompleteInteractionBehavior.withStrategy","location":"core/dev.kord.core.behavior.interaction/-auto-complete-interaction-behavior/with-strategy.html","searchKeys":["withStrategy","abstract override fun withStrategy(strategy: EntitySupplyStrategy<*>): AutoCompleteInteractionBehavior","dev.kord.core.behavior.interaction.AutoCompleteInteractionBehavior.withStrategy"]},{"name":"abstract override fun withStrategy(strategy: EntitySupplyStrategy<*>): AutoModerationEvent","description":"dev.kord.core.event.automoderation.AutoModerationEvent.withStrategy","location":"core/dev.kord.core.event.automoderation/-auto-moderation-event/with-strategy.html","searchKeys":["withStrategy","abstract override fun withStrategy(strategy: EntitySupplyStrategy<*>): AutoModerationEvent","dev.kord.core.event.automoderation.AutoModerationEvent.withStrategy"]},{"name":"abstract override fun withStrategy(strategy: EntitySupplyStrategy<*>): AutoModerationRule","description":"dev.kord.core.entity.automoderation.AutoModerationRule.withStrategy","location":"core/dev.kord.core.entity.automoderation/-auto-moderation-rule/with-strategy.html","searchKeys":["withStrategy","abstract override fun withStrategy(strategy: EntitySupplyStrategy<*>): AutoModerationRule","dev.kord.core.entity.automoderation.AutoModerationRule.withStrategy"]},{"name":"abstract override fun withStrategy(strategy: EntitySupplyStrategy<*>): AutoModerationRuleBehavior","description":"dev.kord.core.behavior.automoderation.AutoModerationRuleBehavior.withStrategy","location":"core/dev.kord.core.behavior.automoderation/-auto-moderation-rule-behavior/with-strategy.html","searchKeys":["withStrategy","abstract override fun withStrategy(strategy: EntitySupplyStrategy<*>): AutoModerationRuleBehavior","dev.kord.core.behavior.automoderation.AutoModerationRuleBehavior.withStrategy"]},{"name":"abstract override fun withStrategy(strategy: EntitySupplyStrategy<*>): AutoModerationRuleConfigurationEvent","description":"dev.kord.core.event.automoderation.AutoModerationRuleConfigurationEvent.withStrategy","location":"core/dev.kord.core.event.automoderation/-auto-moderation-rule-configuration-event/with-strategy.html","searchKeys":["withStrategy","abstract override fun withStrategy(strategy: EntitySupplyStrategy<*>): AutoModerationRuleConfigurationEvent","dev.kord.core.event.automoderation.AutoModerationRuleConfigurationEvent.withStrategy"]},{"name":"abstract override fun withStrategy(strategy: EntitySupplyStrategy<*>): BaseApplication","description":"dev.kord.core.entity.BaseApplication.withStrategy","location":"core/dev.kord.core.entity/-base-application/with-strategy.html","searchKeys":["withStrategy","abstract override fun withStrategy(strategy: EntitySupplyStrategy<*>): BaseApplication","dev.kord.core.entity.BaseApplication.withStrategy"]},{"name":"abstract override fun withStrategy(strategy: EntitySupplyStrategy<*>): ButtonInteraction","description":"dev.kord.core.entity.interaction.ButtonInteraction.withStrategy","location":"core/dev.kord.core.entity.interaction/-button-interaction/with-strategy.html","searchKeys":["withStrategy","abstract override fun withStrategy(strategy: EntitySupplyStrategy<*>): ButtonInteraction","dev.kord.core.entity.interaction.ButtonInteraction.withStrategy"]},{"name":"abstract override fun withStrategy(strategy: EntitySupplyStrategy<*>): CategorizableChannel","description":"dev.kord.core.entity.channel.CategorizableChannel.withStrategy","location":"core/dev.kord.core.entity.channel/-categorizable-channel/with-strategy.html","searchKeys":["withStrategy","abstract override fun withStrategy(strategy: EntitySupplyStrategy<*>): CategorizableChannel","dev.kord.core.entity.channel.CategorizableChannel.withStrategy"]},{"name":"abstract override fun withStrategy(strategy: EntitySupplyStrategy<*>): ChatInputCommandInteraction","description":"dev.kord.core.entity.interaction.ChatInputCommandInteraction.withStrategy","location":"core/dev.kord.core.entity.interaction/-chat-input-command-interaction/with-strategy.html","searchKeys":["withStrategy","abstract override fun withStrategy(strategy: EntitySupplyStrategy<*>): ChatInputCommandInteraction","dev.kord.core.entity.interaction.ChatInputCommandInteraction.withStrategy"]},{"name":"abstract override fun withStrategy(strategy: EntitySupplyStrategy<*>): ComponentInteraction","description":"dev.kord.core.entity.interaction.ComponentInteraction.withStrategy","location":"core/dev.kord.core.entity.interaction/-component-interaction/with-strategy.html","searchKeys":["withStrategy","abstract override fun withStrategy(strategy: EntitySupplyStrategy<*>): ComponentInteraction","dev.kord.core.entity.interaction.ComponentInteraction.withStrategy"]},{"name":"abstract override fun withStrategy(strategy: EntitySupplyStrategy<*>): DataInteraction","description":"dev.kord.core.entity.interaction.DataInteraction.withStrategy","location":"core/dev.kord.core.entity.interaction/-data-interaction/with-strategy.html","searchKeys":["withStrategy","abstract override fun withStrategy(strategy: EntitySupplyStrategy<*>): DataInteraction","dev.kord.core.entity.interaction.DataInteraction.withStrategy"]},{"name":"abstract override fun withStrategy(strategy: EntitySupplyStrategy<*>): DataInteractionBehavior","description":"dev.kord.core.behavior.interaction.DataInteractionBehavior.withStrategy","location":"core/dev.kord.core.behavior.interaction/-data-interaction-behavior/with-strategy.html","searchKeys":["withStrategy","abstract override fun withStrategy(strategy: EntitySupplyStrategy<*>): DataInteractionBehavior","dev.kord.core.behavior.interaction.DataInteractionBehavior.withStrategy"]},{"name":"abstract override fun withStrategy(strategy: EntitySupplyStrategy<*>): DeferredMessageInteractionResponseBehavior","description":"dev.kord.core.behavior.interaction.response.DeferredMessageInteractionResponseBehavior.withStrategy","location":"core/dev.kord.core.behavior.interaction.response/-deferred-message-interaction-response-behavior/with-strategy.html","searchKeys":["withStrategy","abstract override fun withStrategy(strategy: EntitySupplyStrategy<*>): DeferredMessageInteractionResponseBehavior","dev.kord.core.behavior.interaction.response.DeferredMessageInteractionResponseBehavior.withStrategy"]},{"name":"abstract override fun withStrategy(strategy: EntitySupplyStrategy<*>): EphemeralInteractionResponseBehavior","description":"dev.kord.core.behavior.interaction.response.EphemeralInteractionResponseBehavior.withStrategy","location":"core/dev.kord.core.behavior.interaction.response/-ephemeral-interaction-response-behavior/with-strategy.html","searchKeys":["withStrategy","abstract override fun withStrategy(strategy: EntitySupplyStrategy<*>): EphemeralInteractionResponseBehavior","dev.kord.core.behavior.interaction.response.EphemeralInteractionResponseBehavior.withStrategy"]},{"name":"abstract override fun withStrategy(strategy: EntitySupplyStrategy<*>): FollowupMessage","description":"dev.kord.core.entity.interaction.followup.FollowupMessage.withStrategy","location":"core/dev.kord.core.entity.interaction.followup/-followup-message/with-strategy.html","searchKeys":["withStrategy","abstract override fun withStrategy(strategy: EntitySupplyStrategy<*>): FollowupMessage","dev.kord.core.entity.interaction.followup.FollowupMessage.withStrategy"]},{"name":"abstract override fun withStrategy(strategy: EntitySupplyStrategy<*>): FollowupMessageBehavior","description":"dev.kord.core.behavior.interaction.followup.FollowupMessageBehavior.withStrategy","location":"core/dev.kord.core.behavior.interaction.followup/-followup-message-behavior/with-strategy.html","searchKeys":["withStrategy","abstract override fun withStrategy(strategy: EntitySupplyStrategy<*>): FollowupMessageBehavior","dev.kord.core.behavior.interaction.followup.FollowupMessageBehavior.withStrategy"]},{"name":"abstract override fun withStrategy(strategy: EntitySupplyStrategy<*>): GlobalComponentInteraction","description":"dev.kord.core.entity.interaction.GlobalComponentInteraction.withStrategy","location":"core/dev.kord.core.entity.interaction/-global-component-interaction/with-strategy.html","searchKeys":["withStrategy","abstract override fun withStrategy(strategy: EntitySupplyStrategy<*>): GlobalComponentInteraction","dev.kord.core.entity.interaction.GlobalComponentInteraction.withStrategy"]},{"name":"abstract override fun withStrategy(strategy: EntitySupplyStrategy<*>): GlobalInteraction","description":"dev.kord.core.entity.interaction.GlobalInteraction.withStrategy","location":"core/dev.kord.core.entity.interaction/-global-interaction/with-strategy.html","searchKeys":["withStrategy","abstract override fun withStrategy(strategy: EntitySupplyStrategy<*>): GlobalInteraction","dev.kord.core.entity.interaction.GlobalInteraction.withStrategy"]},{"name":"abstract override fun withStrategy(strategy: EntitySupplyStrategy<*>): GlobalInteractionBehavior","description":"dev.kord.core.behavior.interaction.GlobalInteractionBehavior.withStrategy","location":"core/dev.kord.core.behavior.interaction/-global-interaction-behavior/with-strategy.html","searchKeys":["withStrategy","abstract override fun withStrategy(strategy: EntitySupplyStrategy<*>): GlobalInteractionBehavior","dev.kord.core.behavior.interaction.GlobalInteractionBehavior.withStrategy"]},{"name":"abstract override fun withStrategy(strategy: EntitySupplyStrategy<*>): GuildChannel","description":"dev.kord.core.entity.channel.GuildChannel.withStrategy","location":"core/dev.kord.core.entity.channel/-guild-channel/with-strategy.html","searchKeys":["withStrategy","abstract override fun withStrategy(strategy: EntitySupplyStrategy<*>): GuildChannel","dev.kord.core.entity.channel.GuildChannel.withStrategy"]},{"name":"abstract override fun withStrategy(strategy: EntitySupplyStrategy<*>): GuildComponentInteraction","description":"dev.kord.core.entity.interaction.GuildComponentInteraction.withStrategy","location":"core/dev.kord.core.entity.interaction/-guild-component-interaction/with-strategy.html","searchKeys":["withStrategy","abstract override fun withStrategy(strategy: EntitySupplyStrategy<*>): GuildComponentInteraction","dev.kord.core.entity.interaction.GuildComponentInteraction.withStrategy"]},{"name":"abstract override fun withStrategy(strategy: EntitySupplyStrategy<*>): GuildInteraction","description":"dev.kord.core.entity.interaction.GuildInteraction.withStrategy","location":"core/dev.kord.core.entity.interaction/-guild-interaction/with-strategy.html","searchKeys":["withStrategy","abstract override fun withStrategy(strategy: EntitySupplyStrategy<*>): GuildInteraction","dev.kord.core.entity.interaction.GuildInteraction.withStrategy"]},{"name":"abstract override fun withStrategy(strategy: EntitySupplyStrategy<*>): GuildMessageChannel","description":"dev.kord.core.entity.channel.GuildMessageChannel.withStrategy","location":"core/dev.kord.core.entity.channel/-guild-message-channel/with-strategy.html","searchKeys":["withStrategy","abstract override fun withStrategy(strategy: EntitySupplyStrategy<*>): GuildMessageChannel","dev.kord.core.entity.channel.GuildMessageChannel.withStrategy"]},{"name":"abstract override fun withStrategy(strategy: EntitySupplyStrategy<*>): GuildScheduledEventEvent","description":"dev.kord.core.event.guild.GuildScheduledEventEvent.withStrategy","location":"core/dev.kord.core.event.guild/-guild-scheduled-event-event/with-strategy.html","searchKeys":["withStrategy","abstract override fun withStrategy(strategy: EntitySupplyStrategy<*>): GuildScheduledEventEvent","dev.kord.core.event.guild.GuildScheduledEventEvent.withStrategy"]},{"name":"abstract override fun withStrategy(strategy: EntitySupplyStrategy<*>): GuildScheduledEventUserEvent","description":"dev.kord.core.event.guild.GuildScheduledEventUserEvent.withStrategy","location":"core/dev.kord.core.event.guild/-guild-scheduled-event-user-event/with-strategy.html","searchKeys":["withStrategy","abstract override fun withStrategy(strategy: EntitySupplyStrategy<*>): GuildScheduledEventUserEvent","dev.kord.core.event.guild.GuildScheduledEventUserEvent.withStrategy"]},{"name":"abstract override fun withStrategy(strategy: EntitySupplyStrategy<*>): Interaction","description":"dev.kord.core.entity.interaction.Interaction.withStrategy","location":"core/dev.kord.core.entity.interaction/-interaction/with-strategy.html","searchKeys":["withStrategy","abstract override fun withStrategy(strategy: EntitySupplyStrategy<*>): Interaction","dev.kord.core.entity.interaction.Interaction.withStrategy"]},{"name":"abstract override fun withStrategy(strategy: EntitySupplyStrategy<*>): InteractionBehavior","description":"dev.kord.core.behavior.interaction.InteractionBehavior.withStrategy","location":"core/dev.kord.core.behavior.interaction/-interaction-behavior/with-strategy.html","searchKeys":["withStrategy","abstract override fun withStrategy(strategy: EntitySupplyStrategy<*>): InteractionBehavior","dev.kord.core.behavior.interaction.InteractionBehavior.withStrategy"]},{"name":"abstract override fun withStrategy(strategy: EntitySupplyStrategy<*>): InteractionResponseBehavior","description":"dev.kord.core.behavior.interaction.response.InteractionResponseBehavior.withStrategy","location":"core/dev.kord.core.behavior.interaction.response/-interaction-response-behavior/with-strategy.html","searchKeys":["withStrategy","abstract override fun withStrategy(strategy: EntitySupplyStrategy<*>): InteractionResponseBehavior","dev.kord.core.behavior.interaction.response.InteractionResponseBehavior.withStrategy"]},{"name":"abstract override fun withStrategy(strategy: EntitySupplyStrategy<*>): KeywordAutoModerationRuleBehavior","description":"dev.kord.core.behavior.automoderation.KeywordAutoModerationRuleBehavior.withStrategy","location":"core/dev.kord.core.behavior.automoderation/-keyword-auto-moderation-rule-behavior/with-strategy.html","searchKeys":["withStrategy","abstract override fun withStrategy(strategy: EntitySupplyStrategy<*>): KeywordAutoModerationRuleBehavior","dev.kord.core.behavior.automoderation.KeywordAutoModerationRuleBehavior.withStrategy"]},{"name":"abstract override fun withStrategy(strategy: EntitySupplyStrategy<*>): KeywordPresetAutoModerationRuleBehavior","description":"dev.kord.core.behavior.automoderation.KeywordPresetAutoModerationRuleBehavior.withStrategy","location":"core/dev.kord.core.behavior.automoderation/-keyword-preset-auto-moderation-rule-behavior/with-strategy.html","searchKeys":["withStrategy","abstract override fun withStrategy(strategy: EntitySupplyStrategy<*>): KeywordPresetAutoModerationRuleBehavior","dev.kord.core.behavior.automoderation.KeywordPresetAutoModerationRuleBehavior.withStrategy"]},{"name":"abstract override fun withStrategy(strategy: EntitySupplyStrategy<*>): MentionSpamAutoModerationRuleBehavior","description":"dev.kord.core.behavior.automoderation.MentionSpamAutoModerationRuleBehavior.withStrategy","location":"core/dev.kord.core.behavior.automoderation/-mention-spam-auto-moderation-rule-behavior/with-strategy.html","searchKeys":["withStrategy","abstract override fun withStrategy(strategy: EntitySupplyStrategy<*>): MentionSpamAutoModerationRuleBehavior","dev.kord.core.behavior.automoderation.MentionSpamAutoModerationRuleBehavior.withStrategy"]},{"name":"abstract override fun withStrategy(strategy: EntitySupplyStrategy<*>): MessageChannel","description":"dev.kord.core.entity.channel.MessageChannel.withStrategy","location":"core/dev.kord.core.entity.channel/-message-channel/with-strategy.html","searchKeys":["withStrategy","abstract override fun withStrategy(strategy: EntitySupplyStrategy<*>): MessageChannel","dev.kord.core.entity.channel.MessageChannel.withStrategy"]},{"name":"abstract override fun withStrategy(strategy: EntitySupplyStrategy<*>): MessageCommandInteraction","description":"dev.kord.core.entity.interaction.MessageCommandInteraction.withStrategy","location":"core/dev.kord.core.entity.interaction/-message-command-interaction/with-strategy.html","searchKeys":["withStrategy","abstract override fun withStrategy(strategy: EntitySupplyStrategy<*>): MessageCommandInteraction","dev.kord.core.entity.interaction.MessageCommandInteraction.withStrategy"]},{"name":"abstract override fun withStrategy(strategy: EntitySupplyStrategy<*>): MessageInteractionResponse","description":"dev.kord.core.entity.interaction.response.MessageInteractionResponse.withStrategy","location":"core/dev.kord.core.entity.interaction.response/-message-interaction-response/with-strategy.html","searchKeys":["withStrategy","abstract override fun withStrategy(strategy: EntitySupplyStrategy<*>): MessageInteractionResponse","dev.kord.core.entity.interaction.response.MessageInteractionResponse.withStrategy"]},{"name":"abstract override fun withStrategy(strategy: EntitySupplyStrategy<*>): MessageInteractionResponseBehavior","description":"dev.kord.core.behavior.interaction.response.MessageInteractionResponseBehavior.withStrategy","location":"core/dev.kord.core.behavior.interaction.response/-message-interaction-response-behavior/with-strategy.html","searchKeys":["withStrategy","abstract override fun withStrategy(strategy: EntitySupplyStrategy<*>): MessageInteractionResponseBehavior","dev.kord.core.behavior.interaction.response.MessageInteractionResponseBehavior.withStrategy"]},{"name":"abstract override fun withStrategy(strategy: EntitySupplyStrategy<*>): ModalParentInteractionBehavior","description":"dev.kord.core.behavior.interaction.ModalParentInteractionBehavior.withStrategy","location":"core/dev.kord.core.behavior.interaction/-modal-parent-interaction-behavior/with-strategy.html","searchKeys":["withStrategy","abstract override fun withStrategy(strategy: EntitySupplyStrategy<*>): ModalParentInteractionBehavior","dev.kord.core.behavior.interaction.ModalParentInteractionBehavior.withStrategy"]},{"name":"abstract override fun withStrategy(strategy: EntitySupplyStrategy<*>): ModalSubmitInteraction","description":"dev.kord.core.entity.interaction.ModalSubmitInteraction.withStrategy","location":"core/dev.kord.core.entity.interaction/-modal-submit-interaction/with-strategy.html","searchKeys":["withStrategy","abstract override fun withStrategy(strategy: EntitySupplyStrategy<*>): ModalSubmitInteraction","dev.kord.core.entity.interaction.ModalSubmitInteraction.withStrategy"]},{"name":"abstract override fun withStrategy(strategy: EntitySupplyStrategy<*>): PublicInteractionResponseBehavior","description":"dev.kord.core.behavior.interaction.response.PublicInteractionResponseBehavior.withStrategy","location":"core/dev.kord.core.behavior.interaction.response/-public-interaction-response-behavior/with-strategy.html","searchKeys":["withStrategy","abstract override fun withStrategy(strategy: EntitySupplyStrategy<*>): PublicInteractionResponseBehavior","dev.kord.core.behavior.interaction.response.PublicInteractionResponseBehavior.withStrategy"]},{"name":"abstract override fun withStrategy(strategy: EntitySupplyStrategy<*>): SelectMenuInteraction","description":"dev.kord.core.entity.interaction.SelectMenuInteraction.withStrategy","location":"core/dev.kord.core.entity.interaction/-select-menu-interaction/with-strategy.html","searchKeys":["withStrategy","abstract override fun withStrategy(strategy: EntitySupplyStrategy<*>): SelectMenuInteraction","dev.kord.core.entity.interaction.SelectMenuInteraction.withStrategy"]},{"name":"abstract override fun withStrategy(strategy: EntitySupplyStrategy<*>): SpamAutoModerationRuleBehavior","description":"dev.kord.core.behavior.automoderation.SpamAutoModerationRuleBehavior.withStrategy","location":"core/dev.kord.core.behavior.automoderation/-spam-auto-moderation-rule-behavior/with-strategy.html","searchKeys":["withStrategy","abstract override fun withStrategy(strategy: EntitySupplyStrategy<*>): SpamAutoModerationRuleBehavior","dev.kord.core.behavior.automoderation.SpamAutoModerationRuleBehavior.withStrategy"]},{"name":"abstract override fun withStrategy(strategy: EntitySupplyStrategy<*>): ThreadParentChannel","description":"dev.kord.core.entity.channel.ThreadParentChannel.withStrategy","location":"core/dev.kord.core.entity.channel/-thread-parent-channel/with-strategy.html","searchKeys":["withStrategy","abstract override fun withStrategy(strategy: EntitySupplyStrategy<*>): ThreadParentChannel","dev.kord.core.entity.channel.ThreadParentChannel.withStrategy"]},{"name":"abstract override fun withStrategy(strategy: EntitySupplyStrategy<*>): ThreadParentChannelBehavior","description":"dev.kord.core.behavior.channel.threads.ThreadParentChannelBehavior.withStrategy","location":"core/dev.kord.core.behavior.channel.threads/-thread-parent-channel-behavior/with-strategy.html","searchKeys":["withStrategy","abstract override fun withStrategy(strategy: EntitySupplyStrategy<*>): ThreadParentChannelBehavior","dev.kord.core.behavior.channel.threads.ThreadParentChannelBehavior.withStrategy"]},{"name":"abstract override fun withStrategy(strategy: EntitySupplyStrategy<*>): TopGuildChannel","description":"dev.kord.core.entity.channel.TopGuildChannel.withStrategy","location":"core/dev.kord.core.entity.channel/-top-guild-channel/with-strategy.html","searchKeys":["withStrategy","abstract override fun withStrategy(strategy: EntitySupplyStrategy<*>): TopGuildChannel","dev.kord.core.entity.channel.TopGuildChannel.withStrategy"]},{"name":"abstract override fun withStrategy(strategy: EntitySupplyStrategy<*>): TopGuildMessageChannel","description":"dev.kord.core.entity.channel.TopGuildMessageChannel.withStrategy","location":"core/dev.kord.core.entity.channel/-top-guild-message-channel/with-strategy.html","searchKeys":["withStrategy","abstract override fun withStrategy(strategy: EntitySupplyStrategy<*>): TopGuildMessageChannel","dev.kord.core.entity.channel.TopGuildMessageChannel.withStrategy"]},{"name":"abstract override fun withStrategy(strategy: EntitySupplyStrategy<*>): TypedAutoModerationRuleBehavior","description":"dev.kord.core.behavior.automoderation.TypedAutoModerationRuleBehavior.withStrategy","location":"core/dev.kord.core.behavior.automoderation/-typed-auto-moderation-rule-behavior/with-strategy.html","searchKeys":["withStrategy","abstract override fun withStrategy(strategy: EntitySupplyStrategy<*>): TypedAutoModerationRuleBehavior","dev.kord.core.behavior.automoderation.TypedAutoModerationRuleBehavior.withStrategy"]},{"name":"abstract override fun withStrategy(strategy: EntitySupplyStrategy<*>): UserCommandInteraction","description":"dev.kord.core.entity.interaction.UserCommandInteraction.withStrategy","location":"core/dev.kord.core.entity.interaction/-user-command-interaction/with-strategy.html","searchKeys":["withStrategy","abstract override fun withStrategy(strategy: EntitySupplyStrategy<*>): UserCommandInteraction","dev.kord.core.entity.interaction.UserCommandInteraction.withStrategy"]},{"name":"abstract override val channel: ThreadChannel","description":"dev.kord.core.event.channel.thread.ThreadChannelCreateEvent.channel","location":"core/dev.kord.core.event.channel.thread/-thread-channel-create-event/channel.html","searchKeys":["channel","abstract override val channel: ThreadChannel","dev.kord.core.event.channel.thread.ThreadChannelCreateEvent.channel"]},{"name":"abstract override val channel: ThreadChannel","description":"dev.kord.core.event.channel.thread.ThreadUpdateEvent.channel","location":"core/dev.kord.core.event.channel.thread/-thread-update-event/channel.html","searchKeys":["channel","abstract override val channel: ThreadChannel","dev.kord.core.event.channel.thread.ThreadUpdateEvent.channel"]},{"name":"abstract override val interaction: ActionInteraction","description":"dev.kord.core.event.interaction.ActionInteractionCreateEvent.interaction","location":"core/dev.kord.core.event.interaction/-action-interaction-create-event/interaction.html","searchKeys":["interaction","abstract override val interaction: ActionInteraction","dev.kord.core.event.interaction.ActionInteractionCreateEvent.interaction"]},{"name":"abstract override val interaction: ApplicationCommandInteraction","description":"dev.kord.core.event.interaction.ApplicationCommandInteractionCreateEvent.interaction","location":"core/dev.kord.core.event.interaction/-application-command-interaction-create-event/interaction.html","searchKeys":["interaction","abstract override val interaction: ApplicationCommandInteraction","dev.kord.core.event.interaction.ApplicationCommandInteractionCreateEvent.interaction"]},{"name":"abstract override val interaction: AutoCompleteInteraction","description":"dev.kord.core.event.interaction.AutoCompleteInteractionCreateEvent.interaction","location":"core/dev.kord.core.event.interaction/-auto-complete-interaction-create-event/interaction.html","searchKeys":["interaction","abstract override val interaction: AutoCompleteInteraction","dev.kord.core.event.interaction.AutoCompleteInteractionCreateEvent.interaction"]},{"name":"abstract override val interaction: ButtonInteraction","description":"dev.kord.core.event.interaction.ButtonInteractionCreateEvent.interaction","location":"core/dev.kord.core.event.interaction/-button-interaction-create-event/interaction.html","searchKeys":["interaction","abstract override val interaction: ButtonInteraction","dev.kord.core.event.interaction.ButtonInteractionCreateEvent.interaction"]},{"name":"abstract override val interaction: ChatInputCommandInteraction","description":"dev.kord.core.event.interaction.ChatInputCommandInteractionCreateEvent.interaction","location":"core/dev.kord.core.event.interaction/-chat-input-command-interaction-create-event/interaction.html","searchKeys":["interaction","abstract override val interaction: ChatInputCommandInteraction","dev.kord.core.event.interaction.ChatInputCommandInteractionCreateEvent.interaction"]},{"name":"abstract override val interaction: ComponentInteraction","description":"dev.kord.core.event.interaction.ComponentInteractionCreateEvent.interaction","location":"core/dev.kord.core.event.interaction/-component-interaction-create-event/interaction.html","searchKeys":["interaction","abstract override val interaction: ComponentInteraction","dev.kord.core.event.interaction.ComponentInteractionCreateEvent.interaction"]},{"name":"abstract override val interaction: DataInteraction","description":"dev.kord.core.event.interaction.DataInteractionCreateEvent.interaction","location":"core/dev.kord.core.event.interaction/-data-interaction-create-event/interaction.html","searchKeys":["interaction","abstract override val interaction: DataInteraction","dev.kord.core.event.interaction.DataInteractionCreateEvent.interaction"]},{"name":"abstract override val interaction: GlobalApplicationCommandInteraction","description":"dev.kord.core.event.interaction.GlobalApplicationCommandInteractionCreateEvent.interaction","location":"core/dev.kord.core.event.interaction/-global-application-command-interaction-create-event/interaction.html","searchKeys":["interaction","abstract override val interaction: GlobalApplicationCommandInteraction","dev.kord.core.event.interaction.GlobalApplicationCommandInteractionCreateEvent.interaction"]},{"name":"abstract override val interaction: GlobalComponentInteraction","description":"dev.kord.core.event.interaction.GlobalComponentInteractionCreateEvent.interaction","location":"core/dev.kord.core.event.interaction/-global-component-interaction-create-event/interaction.html","searchKeys":["interaction","abstract override val interaction: GlobalComponentInteraction","dev.kord.core.event.interaction.GlobalComponentInteractionCreateEvent.interaction"]},{"name":"abstract override val interaction: GuildApplicationCommandInteraction","description":"dev.kord.core.event.interaction.GuildApplicationCommandInteractionCreateEvent.interaction","location":"core/dev.kord.core.event.interaction/-guild-application-command-interaction-create-event/interaction.html","searchKeys":["interaction","abstract override val interaction: GuildApplicationCommandInteraction","dev.kord.core.event.interaction.GuildApplicationCommandInteractionCreateEvent.interaction"]},{"name":"abstract override val interaction: GuildComponentInteraction","description":"dev.kord.core.event.interaction.GuildComponentInteractionCreateEvent.interaction","location":"core/dev.kord.core.event.interaction/-guild-component-interaction-create-event/interaction.html","searchKeys":["interaction","abstract override val interaction: GuildComponentInteraction","dev.kord.core.event.interaction.GuildComponentInteractionCreateEvent.interaction"]},{"name":"abstract override val interaction: MessageCommandInteraction","description":"dev.kord.core.event.interaction.MessageCommandInteractionCreateEvent.interaction","location":"core/dev.kord.core.event.interaction/-message-command-interaction-create-event/interaction.html","searchKeys":["interaction","abstract override val interaction: MessageCommandInteraction","dev.kord.core.event.interaction.MessageCommandInteractionCreateEvent.interaction"]},{"name":"abstract override val interaction: ModalSubmitInteraction","description":"dev.kord.core.event.interaction.ModalSubmitInteractionCreateEvent.interaction","location":"core/dev.kord.core.event.interaction/-modal-submit-interaction-create-event/interaction.html","searchKeys":["interaction","abstract override val interaction: ModalSubmitInteraction","dev.kord.core.event.interaction.ModalSubmitInteractionCreateEvent.interaction"]},{"name":"abstract override val interaction: SelectMenuInteraction","description":"dev.kord.core.event.interaction.SelectMenuInteractionCreateEvent.interaction","location":"core/dev.kord.core.event.interaction/-select-menu-interaction-create-event/interaction.html","searchKeys":["interaction","abstract override val interaction: SelectMenuInteraction","dev.kord.core.event.interaction.SelectMenuInteractionCreateEvent.interaction"]},{"name":"abstract override val interaction: UserCommandInteraction","description":"dev.kord.core.event.interaction.UserCommandInteractionCreateEvent.interaction","location":"core/dev.kord.core.event.interaction/-user-command-interaction-create-event/interaction.html","searchKeys":["interaction","abstract override val interaction: UserCommandInteraction","dev.kord.core.event.interaction.UserCommandInteractionCreateEvent.interaction"]},{"name":"abstract override val rule: AutoModerationRule","description":"dev.kord.core.event.automoderation.AutoModerationRuleConfigurationEvent.rule","location":"core/dev.kord.core.event.automoderation/-auto-moderation-rule-configuration-event/rule.html","searchKeys":["rule","abstract override val rule: AutoModerationRule","dev.kord.core.event.automoderation.AutoModerationRuleConfigurationEvent.rule"]},{"name":"abstract override val triggerType: AutoModerationRuleTriggerType","description":"dev.kord.core.behavior.automoderation.TypedAutoModerationRuleBehavior.triggerType","location":"core/dev.kord.core.behavior.automoderation/-typed-auto-moderation-rule-behavior/trigger-type.html","searchKeys":["triggerType","abstract override val triggerType: AutoModerationRuleTriggerType","dev.kord.core.behavior.automoderation.TypedAutoModerationRuleBehavior.triggerType"]},{"name":"abstract suspend fun delete()","description":"dev.kord.core.behavior.ApplicationCommandBehavior.delete","location":"core/dev.kord.core.behavior/-application-command-behavior/delete.html","searchKeys":["delete","abstract suspend fun delete()","dev.kord.core.behavior.ApplicationCommandBehavior.delete"]},{"name":"abstract suspend fun edit(builder: suspend ChatInputModifyBuilder.() -> Unit): ChatInputCommandCommand","description":"dev.kord.core.behavior.ChatInputCommandBehavior.edit","location":"core/dev.kord.core.behavior/-chat-input-command-behavior/edit.html","searchKeys":["edit","abstract suspend fun edit(builder: suspend ChatInputModifyBuilder.() -> Unit): ChatInputCommandCommand","dev.kord.core.behavior.ChatInputCommandBehavior.edit"]},{"name":"abstract suspend fun edit(builder: suspend MessageCommandModifyBuilder.() -> Unit): MessageCommand","description":"dev.kord.core.behavior.MessageCommandBehavior.edit","location":"core/dev.kord.core.behavior/-message-command-behavior/edit.html","searchKeys":["edit","abstract suspend fun edit(builder: suspend MessageCommandModifyBuilder.() -> Unit): MessageCommand","dev.kord.core.behavior.MessageCommandBehavior.edit"]},{"name":"abstract suspend fun edit(builder: suspend UserCommandModifyBuilder.() -> Unit): UserCommand","description":"dev.kord.core.behavior.UserCommandBehavior.edit","location":"core/dev.kord.core.behavior/-user-command-behavior/edit.html","searchKeys":["edit","abstract suspend fun edit(builder: suspend UserCommandModifyBuilder.() -> Unit): UserCommand","dev.kord.core.behavior.UserCommandBehavior.edit"]},{"name":"abstract suspend fun getApplicationCommandPermissionsOrNull(applicationId: Snowflake, guildId: Snowflake, commandId: Snowflake): ApplicationCommandPermissions?","description":"dev.kord.core.supplier.EntitySupplier.getApplicationCommandPermissionsOrNull","location":"core/dev.kord.core.supplier/-entity-supplier/get-application-command-permissions-or-null.html","searchKeys":["getApplicationCommandPermissionsOrNull","abstract suspend fun getApplicationCommandPermissionsOrNull(applicationId: Snowflake, guildId: Snowflake, commandId: Snowflake): ApplicationCommandPermissions?","dev.kord.core.supplier.EntitySupplier.getApplicationCommandPermissionsOrNull"]},{"name":"abstract suspend fun getAutoModerationRuleOrNull(guildId: Snowflake, ruleId: Snowflake): AutoModerationRule?","description":"dev.kord.core.supplier.EntitySupplier.getAutoModerationRuleOrNull","location":"core/dev.kord.core.supplier/-entity-supplier/get-auto-moderation-rule-or-null.html","searchKeys":["getAutoModerationRuleOrNull","abstract suspend fun getAutoModerationRuleOrNull(guildId: Snowflake, ruleId: Snowflake): AutoModerationRule?","dev.kord.core.supplier.EntitySupplier.getAutoModerationRuleOrNull"]},{"name":"abstract suspend fun getChannelOrNull(id: Snowflake): Channel?","description":"dev.kord.core.supplier.EntitySupplier.getChannelOrNull","location":"core/dev.kord.core.supplier/-entity-supplier/get-channel-or-null.html","searchKeys":["getChannelOrNull","abstract suspend fun getChannelOrNull(id: Snowflake): Channel?","dev.kord.core.supplier.EntitySupplier.getChannelOrNull"]},{"name":"abstract suspend fun getEmojiOrNull(guildId: Snowflake, emojiId: Snowflake): GuildEmoji?","description":"dev.kord.core.supplier.EntitySupplier.getEmojiOrNull","location":"core/dev.kord.core.supplier/-entity-supplier/get-emoji-or-null.html","searchKeys":["getEmojiOrNull","abstract suspend fun getEmojiOrNull(guildId: Snowflake, emojiId: Snowflake): GuildEmoji?","dev.kord.core.supplier.EntitySupplier.getEmojiOrNull"]},{"name":"abstract suspend fun getFollowupMessageOrNull(applicationId: Snowflake, interactionToken: String, messageId: Snowflake): FollowupMessage?","description":"dev.kord.core.supplier.EntitySupplier.getFollowupMessageOrNull","location":"core/dev.kord.core.supplier/-entity-supplier/get-followup-message-or-null.html","searchKeys":["getFollowupMessageOrNull","abstract suspend fun getFollowupMessageOrNull(applicationId: Snowflake, interactionToken: String, messageId: Snowflake): FollowupMessage?","dev.kord.core.supplier.EntitySupplier.getFollowupMessageOrNull"]},{"name":"abstract suspend fun getGlobalApplicationCommandOrNull(applicationId: Snowflake, commandId: Snowflake): GlobalApplicationCommand?","description":"dev.kord.core.supplier.EntitySupplier.getGlobalApplicationCommandOrNull","location":"core/dev.kord.core.supplier/-entity-supplier/get-global-application-command-or-null.html","searchKeys":["getGlobalApplicationCommandOrNull","abstract suspend fun getGlobalApplicationCommandOrNull(applicationId: Snowflake, commandId: Snowflake): GlobalApplicationCommand?","dev.kord.core.supplier.EntitySupplier.getGlobalApplicationCommandOrNull"]},{"name":"abstract suspend fun getGuildApplicationCommandOrNull(applicationId: Snowflake, guildId: Snowflake, commandId: Snowflake): GuildApplicationCommand?","description":"dev.kord.core.supplier.EntitySupplier.getGuildApplicationCommandOrNull","location":"core/dev.kord.core.supplier/-entity-supplier/get-guild-application-command-or-null.html","searchKeys":["getGuildApplicationCommandOrNull","abstract suspend fun getGuildApplicationCommandOrNull(applicationId: Snowflake, guildId: Snowflake, commandId: Snowflake): GuildApplicationCommand?","dev.kord.core.supplier.EntitySupplier.getGuildApplicationCommandOrNull"]},{"name":"abstract suspend fun getGuildBanOrNull(guildId: Snowflake, userId: Snowflake): Ban?","description":"dev.kord.core.supplier.EntitySupplier.getGuildBanOrNull","location":"core/dev.kord.core.supplier/-entity-supplier/get-guild-ban-or-null.html","searchKeys":["getGuildBanOrNull","abstract suspend fun getGuildBanOrNull(guildId: Snowflake, userId: Snowflake): Ban?","dev.kord.core.supplier.EntitySupplier.getGuildBanOrNull"]},{"name":"abstract suspend fun getGuildOrNull(id: Snowflake): Guild?","description":"dev.kord.core.supplier.EntitySupplier.getGuildOrNull","location":"core/dev.kord.core.supplier/-entity-supplier/get-guild-or-null.html","searchKeys":["getGuildOrNull","abstract suspend fun getGuildOrNull(id: Snowflake): Guild?","dev.kord.core.supplier.EntitySupplier.getGuildOrNull"]},{"name":"abstract suspend fun getGuildPreviewOrNull(guildId: Snowflake): GuildPreview?","description":"dev.kord.core.supplier.EntitySupplier.getGuildPreviewOrNull","location":"core/dev.kord.core.supplier/-entity-supplier/get-guild-preview-or-null.html","searchKeys":["getGuildPreviewOrNull","abstract suspend fun getGuildPreviewOrNull(guildId: Snowflake): GuildPreview?","dev.kord.core.supplier.EntitySupplier.getGuildPreviewOrNull"]},{"name":"abstract suspend fun getGuildScheduledEventOrNull(guildId: Snowflake, eventId: Snowflake): GuildScheduledEvent?","description":"dev.kord.core.supplier.EntitySupplier.getGuildScheduledEventOrNull","location":"core/dev.kord.core.supplier/-entity-supplier/get-guild-scheduled-event-or-null.html","searchKeys":["getGuildScheduledEventOrNull","abstract suspend fun getGuildScheduledEventOrNull(guildId: Snowflake, eventId: Snowflake): GuildScheduledEvent?","dev.kord.core.supplier.EntitySupplier.getGuildScheduledEventOrNull"]},{"name":"abstract suspend fun getGuildStickerOrNull(guildId: Snowflake, id: Snowflake): GuildSticker?","description":"dev.kord.core.supplier.EntitySupplier.getGuildStickerOrNull","location":"core/dev.kord.core.supplier/-entity-supplier/get-guild-sticker-or-null.html","searchKeys":["getGuildStickerOrNull","abstract suspend fun getGuildStickerOrNull(guildId: Snowflake, id: Snowflake): GuildSticker?","dev.kord.core.supplier.EntitySupplier.getGuildStickerOrNull"]},{"name":"abstract suspend fun getGuildWidgetOrNull(guildId: Snowflake): GuildWidget?","description":"dev.kord.core.supplier.EntitySupplier.getGuildWidgetOrNull","location":"core/dev.kord.core.supplier/-entity-supplier/get-guild-widget-or-null.html","searchKeys":["getGuildWidgetOrNull","abstract suspend fun getGuildWidgetOrNull(guildId: Snowflake): GuildWidget?","dev.kord.core.supplier.EntitySupplier.getGuildWidgetOrNull"]},{"name":"abstract suspend fun getMemberOrNull(guildId: Snowflake, userId: Snowflake): Member?","description":"dev.kord.core.supplier.EntitySupplier.getMemberOrNull","location":"core/dev.kord.core.supplier/-entity-supplier/get-member-or-null.html","searchKeys":["getMemberOrNull","abstract suspend fun getMemberOrNull(guildId: Snowflake, userId: Snowflake): Member?","dev.kord.core.supplier.EntitySupplier.getMemberOrNull"]},{"name":"abstract suspend fun getMessageOrNull(channelId: Snowflake, messageId: Snowflake): Message?","description":"dev.kord.core.supplier.EntitySupplier.getMessageOrNull","location":"core/dev.kord.core.supplier/-entity-supplier/get-message-or-null.html","searchKeys":["getMessageOrNull","abstract suspend fun getMessageOrNull(channelId: Snowflake, messageId: Snowflake): Message?","dev.kord.core.supplier.EntitySupplier.getMessageOrNull"]},{"name":"abstract suspend fun getRoleOrNull(guildId: Snowflake, roleId: Snowflake): Role?","description":"dev.kord.core.supplier.EntitySupplier.getRoleOrNull","location":"core/dev.kord.core.supplier/-entity-supplier/get-role-or-null.html","searchKeys":["getRoleOrNull","abstract suspend fun getRoleOrNull(guildId: Snowflake, roleId: Snowflake): Role?","dev.kord.core.supplier.EntitySupplier.getRoleOrNull"]},{"name":"abstract suspend fun getSelfOrNull(): User?","description":"dev.kord.core.supplier.EntitySupplier.getSelfOrNull","location":"core/dev.kord.core.supplier/-entity-supplier/get-self-or-null.html","searchKeys":["getSelfOrNull","abstract suspend fun getSelfOrNull(): User?","dev.kord.core.supplier.EntitySupplier.getSelfOrNull"]},{"name":"abstract suspend fun getStageInstanceOrNull(channelId: Snowflake): StageInstance?","description":"dev.kord.core.supplier.EntitySupplier.getStageInstanceOrNull","location":"core/dev.kord.core.supplier/-entity-supplier/get-stage-instance-or-null.html","searchKeys":["getStageInstanceOrNull","abstract suspend fun getStageInstanceOrNull(channelId: Snowflake): StageInstance?","dev.kord.core.supplier.EntitySupplier.getStageInstanceOrNull"]},{"name":"abstract suspend fun getStickerOrNull(id: Snowflake): Sticker?","description":"dev.kord.core.supplier.EntitySupplier.getStickerOrNull","location":"core/dev.kord.core.supplier/-entity-supplier/get-sticker-or-null.html","searchKeys":["getStickerOrNull","abstract suspend fun getStickerOrNull(id: Snowflake): Sticker?","dev.kord.core.supplier.EntitySupplier.getStickerOrNull"]},{"name":"abstract suspend fun getTemplateOrNull(code: String): Template?","description":"dev.kord.core.supplier.EntitySupplier.getTemplateOrNull","location":"core/dev.kord.core.supplier/-entity-supplier/get-template-or-null.html","searchKeys":["getTemplateOrNull","abstract suspend fun getTemplateOrNull(code: String): Template?","dev.kord.core.supplier.EntitySupplier.getTemplateOrNull"]},{"name":"abstract suspend fun getUserOrNull(id: Snowflake): User?","description":"dev.kord.core.supplier.EntitySupplier.getUserOrNull","location":"core/dev.kord.core.supplier/-entity-supplier/get-user-or-null.html","searchKeys":["getUserOrNull","abstract suspend fun getUserOrNull(id: Snowflake): User?","dev.kord.core.supplier.EntitySupplier.getUserOrNull"]},{"name":"abstract suspend fun getWebhookMessageOrNull(webhookId: Snowflake, token: String, messageId: Snowflake, threadId: Snowflake? = null): Message?","description":"dev.kord.core.supplier.EntitySupplier.getWebhookMessageOrNull","location":"core/dev.kord.core.supplier/-entity-supplier/get-webhook-message-or-null.html","searchKeys":["getWebhookMessageOrNull","abstract suspend fun getWebhookMessageOrNull(webhookId: Snowflake, token: String, messageId: Snowflake, threadId: Snowflake? = null): Message?","dev.kord.core.supplier.EntitySupplier.getWebhookMessageOrNull"]},{"name":"abstract suspend fun getWebhookOrNull(id: Snowflake): Webhook?","description":"dev.kord.core.supplier.EntitySupplier.getWebhookOrNull","location":"core/dev.kord.core.supplier/-entity-supplier/get-webhook-or-null.html","searchKeys":["getWebhookOrNull","abstract suspend fun getWebhookOrNull(id: Snowflake): Webhook?","dev.kord.core.supplier.EntitySupplier.getWebhookOrNull"]},{"name":"abstract suspend fun getWebhookWithTokenOrNull(id: Snowflake, token: String): Webhook?","description":"dev.kord.core.supplier.EntitySupplier.getWebhookWithTokenOrNull","location":"core/dev.kord.core.supplier/-entity-supplier/get-webhook-with-token-or-null.html","searchKeys":["getWebhookWithTokenOrNull","abstract suspend fun getWebhookWithTokenOrNull(id: Snowflake, token: String): Webhook?","dev.kord.core.supplier.EntitySupplier.getWebhookWithTokenOrNull"]},{"name":"abstract suspend fun handle(event: ShardEvent, kord: Kord): Event?","description":"dev.kord.core.gateway.handler.GatewayEventInterceptor.handle","location":"core/dev.kord.core.gateway.handler/-gateway-event-interceptor/handle.html","searchKeys":["handle","abstract suspend fun handle(event: ShardEvent, kord: Kord): Event?","dev.kord.core.gateway.handler.GatewayEventInterceptor.handle"]},{"name":"abstract val applicationId: Snowflake","description":"dev.kord.core.behavior.ApplicationCommandBehavior.applicationId","location":"core/dev.kord.core.behavior/-application-command-behavior/application-id.html","searchKeys":["applicationId","abstract val applicationId: Snowflake","dev.kord.core.behavior.ApplicationCommandBehavior.applicationId"]},{"name":"abstract val applicationId: Snowflake","description":"dev.kord.core.behavior.interaction.InteractionBehavior.applicationId","location":"core/dev.kord.core.behavior.interaction/-interaction-behavior/application-id.html","searchKeys":["applicationId","abstract val applicationId: Snowflake","dev.kord.core.behavior.interaction.InteractionBehavior.applicationId"]},{"name":"abstract val applicationId: Snowflake","description":"dev.kord.core.behavior.interaction.followup.FollowupMessageBehavior.applicationId","location":"core/dev.kord.core.behavior.interaction.followup/-followup-message-behavior/application-id.html","searchKeys":["applicationId","abstract val applicationId: Snowflake","dev.kord.core.behavior.interaction.followup.FollowupMessageBehavior.applicationId"]},{"name":"abstract val applicationId: Snowflake","description":"dev.kord.core.behavior.interaction.response.InteractionResponseBehavior.applicationId","location":"core/dev.kord.core.behavior.interaction.response/-interaction-response-behavior/application-id.html","searchKeys":["applicationId","abstract val applicationId: Snowflake","dev.kord.core.behavior.interaction.response.InteractionResponseBehavior.applicationId"]},{"name":"abstract val approximateMemberCount: OptionalInt","description":"dev.kord.core.cache.data.BaseInviteData.approximateMemberCount","location":"core/dev.kord.core.cache.data/-base-invite-data/approximate-member-count.html","searchKeys":["approximateMemberCount","abstract val approximateMemberCount: OptionalInt","dev.kord.core.cache.data.BaseInviteData.approximateMemberCount"]},{"name":"abstract val approximatePresenceCount: OptionalInt","description":"dev.kord.core.cache.data.BaseInviteData.approximatePresenceCount","location":"core/dev.kord.core.cache.data/-base-invite-data/approximate-presence-count.html","searchKeys":["approximatePresenceCount","abstract val approximatePresenceCount: OptionalInt","dev.kord.core.cache.data.BaseInviteData.approximatePresenceCount"]},{"name":"abstract val averagePing: Duration?","description":"dev.kord.core.gateway.MasterGateway.averagePing","location":"core/dev.kord.core.gateway/-master-gateway/average-ping.html","searchKeys":["averagePing","abstract val averagePing: Duration?","dev.kord.core.gateway.MasterGateway.averagePing"]},{"name":"abstract val channel: Channel","description":"dev.kord.core.event.channel.ChannelCreateEvent.channel","location":"core/dev.kord.core.event.channel/-channel-create-event/channel.html","searchKeys":["channel","abstract val channel: Channel","dev.kord.core.event.channel.ChannelCreateEvent.channel"]},{"name":"abstract val channel: Channel","description":"dev.kord.core.event.channel.ChannelDeleteEvent.channel","location":"core/dev.kord.core.event.channel/-channel-delete-event/channel.html","searchKeys":["channel","abstract val channel: Channel","dev.kord.core.event.channel.ChannelDeleteEvent.channel"]},{"name":"abstract val channel: Channel","description":"dev.kord.core.event.channel.ChannelUpdateEvent.channel","location":"core/dev.kord.core.event.channel/-channel-update-event/channel.html","searchKeys":["channel","abstract val channel: Channel","dev.kord.core.event.channel.ChannelUpdateEvent.channel"]},{"name":"abstract val channel: Channel","description":"dev.kord.core.live.channel.LiveChannel.channel","location":"core/dev.kord.core.live.channel/-live-channel/channel.html","searchKeys":["channel","abstract val channel: Channel","dev.kord.core.live.channel.LiveChannel.channel"]},{"name":"abstract val channel: DeletedThreadChannel","description":"dev.kord.core.event.channel.thread.ThreadChannelDeleteEvent.channel","location":"core/dev.kord.core.event.channel.thread/-thread-channel-delete-event/channel.html","searchKeys":["channel","abstract val channel: DeletedThreadChannel","dev.kord.core.event.channel.thread.ThreadChannelDeleteEvent.channel"]},{"name":"abstract val channelId: Snowflake","description":"dev.kord.core.behavior.MessageBehavior.channelId","location":"core/dev.kord.core.behavior/-message-behavior/channel-id.html","searchKeys":["channelId","abstract val channelId: Snowflake","dev.kord.core.behavior.MessageBehavior.channelId"]},{"name":"abstract val channelId: Snowflake","description":"dev.kord.core.behavior.StageInstanceBehavior.channelId","location":"core/dev.kord.core.behavior/-stage-instance-behavior/channel-id.html","searchKeys":["channelId","abstract val channelId: Snowflake","dev.kord.core.behavior.StageInstanceBehavior.channelId"]},{"name":"abstract val channelId: Snowflake","description":"dev.kord.core.behavior.interaction.InteractionBehavior.channelId","location":"core/dev.kord.core.behavior.interaction/-interaction-behavior/channel-id.html","searchKeys":["channelId","abstract val channelId: Snowflake","dev.kord.core.behavior.interaction.InteractionBehavior.channelId"]},{"name":"abstract val channelId: Snowflake","description":"dev.kord.core.behavior.interaction.followup.FollowupMessageBehavior.channelId","location":"core/dev.kord.core.behavior.interaction.followup/-followup-message-behavior/channel-id.html","searchKeys":["channelId","abstract val channelId: Snowflake","dev.kord.core.behavior.interaction.followup.FollowupMessageBehavior.channelId"]},{"name":"abstract val channelId: Snowflake?","description":"dev.kord.core.cache.data.BaseInviteData.channelId","location":"core/dev.kord.core.cache.data/-base-invite-data/channel-id.html","searchKeys":["channelId","abstract val channelId: Snowflake?","dev.kord.core.cache.data.BaseInviteData.channelId"]},{"name":"abstract val code: String","description":"dev.kord.core.behavior.TemplateBehavior.code","location":"core/dev.kord.core.behavior/-template-behavior/code.html","searchKeys":["code","abstract val code: String","dev.kord.core.behavior.TemplateBehavior.code"]},{"name":"abstract val code: String","description":"dev.kord.core.cache.data.BaseInviteData.code","location":"core/dev.kord.core.cache.data/-base-invite-data/code.html","searchKeys":["code","abstract val code: String","dev.kord.core.cache.data.BaseInviteData.code"]},{"name":"abstract val command: GuildApplicationCommand","description":"dev.kord.core.event.interaction.ApplicationCommandCreateEvent.command","location":"core/dev.kord.core.event.interaction/-application-command-create-event/command.html","searchKeys":["command","abstract val command: GuildApplicationCommand","dev.kord.core.event.interaction.ApplicationCommandCreateEvent.command"]},{"name":"abstract val command: GuildApplicationCommand","description":"dev.kord.core.event.interaction.ApplicationCommandDeleteEvent.command","location":"core/dev.kord.core.event.interaction/-application-command-delete-event/command.html","searchKeys":["command","abstract val command: GuildApplicationCommand","dev.kord.core.event.interaction.ApplicationCommandDeleteEvent.command"]},{"name":"abstract val command: GuildApplicationCommand","description":"dev.kord.core.event.interaction.ApplicationCommandUpdateEvent.command","location":"core/dev.kord.core.event.interaction/-application-command-update-event/command.html","searchKeys":["command","abstract val command: GuildApplicationCommand","dev.kord.core.event.interaction.ApplicationCommandUpdateEvent.command"]},{"name":"abstract val component: Component","description":"dev.kord.core.entity.interaction.ComponentInteraction.component","location":"core/dev.kord.core.entity.interaction/-component-interaction/component.html","searchKeys":["component","abstract val component: Component","dev.kord.core.entity.interaction.ComponentInteraction.component"]},{"name":"abstract val components: Optional<List<ComponentData>>","description":"dev.kord.core.cache.data.ComponentData.components","location":"core/dev.kord.core.cache.data/-component-data/components.html","searchKeys":["components","abstract val components: Optional<List<ComponentData>>","dev.kord.core.cache.data.ComponentData.components"]},{"name":"abstract val coverImage: Optional<String>","description":"dev.kord.core.cache.data.BaseApplicationData.coverImage","location":"core/dev.kord.core.cache.data/-base-application-data/cover-image.html","searchKeys":["coverImage","abstract val coverImage: Optional<String>","dev.kord.core.cache.data.BaseApplicationData.coverImage"]},{"name":"abstract val customContext: Any?","description":"dev.kord.core.event.Event.customContext","location":"core/dev.kord.core.event/-event/custom-context.html","searchKeys":["customContext","abstract val customContext: Any?","dev.kord.core.event.Event.customContext"]},{"name":"abstract val customId: Optional<String>","description":"dev.kord.core.cache.data.ComponentData.customId","location":"core/dev.kord.core.cache.data/-component-data/custom-id.html","searchKeys":["customId","abstract val customId: Optional<String>","dev.kord.core.cache.data.ComponentData.customId"]},{"name":"abstract val customInstallUrl: Optional<String>","description":"dev.kord.core.cache.data.BaseApplicationData.customInstallUrl","location":"core/dev.kord.core.cache.data/-base-application-data/custom-install-url.html","searchKeys":["customInstallUrl","abstract val customInstallUrl: Optional<String>","dev.kord.core.cache.data.BaseApplicationData.customInstallUrl"]},{"name":"abstract val data: ApplicationCommandData","description":"dev.kord.core.entity.application.ApplicationCommand.data","location":"core/dev.kord.core.entity.application/-application-command/data.html","searchKeys":["data","abstract val data: ApplicationCommandData","dev.kord.core.entity.application.ApplicationCommand.data"]},{"name":"abstract val data: ApplicationInteractionData","description":"dev.kord.core.entity.interaction.InteractionCommand.data","location":"core/dev.kord.core.entity.interaction/-interaction-command/data.html","searchKeys":["data","abstract val data: ApplicationInteractionData","dev.kord.core.entity.interaction.InteractionCommand.data"]},{"name":"abstract val data: BaseApplicationData","description":"dev.kord.core.entity.BaseApplication.data","location":"core/dev.kord.core.entity/-base-application/data.html","searchKeys":["data","abstract val data: BaseApplicationData","dev.kord.core.entity.BaseApplication.data"]},{"name":"abstract val data: ChannelData","description":"dev.kord.core.entity.channel.Channel.data","location":"core/dev.kord.core.entity.channel/-channel/data.html","searchKeys":["data","abstract val data: ChannelData","dev.kord.core.entity.channel.Channel.data"]},{"name":"abstract val data: ComponentData","description":"dev.kord.core.entity.component.Component.data","location":"core/dev.kord.core.entity.component/-component/data.html","searchKeys":["data","abstract val data: ComponentData","dev.kord.core.entity.component.Component.data"]},{"name":"abstract val data: InteractionData","description":"dev.kord.core.entity.interaction.Interaction.data","location":"core/dev.kord.core.entity.interaction/-interaction/data.html","searchKeys":["data","abstract val data: InteractionData","dev.kord.core.entity.interaction.Interaction.data"]},{"name":"abstract val description: String","description":"dev.kord.core.cache.data.BaseApplicationData.description","location":"core/dev.kord.core.cache.data/-base-application-data/description.html","searchKeys":["description","abstract val description: String","dev.kord.core.cache.data.BaseApplicationData.description"]},{"name":"abstract val disabled: OptionalBoolean","description":"dev.kord.core.cache.data.ComponentData.disabled","location":"core/dev.kord.core.cache.data/-component-data/disabled.html","searchKeys":["disabled","abstract val disabled: OptionalBoolean","dev.kord.core.cache.data.ComponentData.disabled"]},{"name":"abstract val emoji: Optional<DiscordPartialEmoji>","description":"dev.kord.core.cache.data.ComponentData.emoji","location":"core/dev.kord.core.cache.data/-component-data/emoji.html","searchKeys":["emoji","abstract val emoji: Optional<DiscordPartialEmoji>","dev.kord.core.cache.data.ComponentData.emoji"]},{"name":"abstract val events: Flow<Event>","description":"dev.kord.core.live.LiveKordEntity.events","location":"core/dev.kord.core.live/-live-kord-entity/events.html","searchKeys":["events","abstract val events: Flow<Event>","dev.kord.core.live.LiveKordEntity.events"]},{"name":"abstract val events: Flow<ShardEvent>","description":"dev.kord.core.gateway.MasterGateway.events","location":"core/dev.kord.core.gateway/-master-gateway/events.html","searchKeys":["events","abstract val events: Flow<ShardEvent>","dev.kord.core.gateway.MasterGateway.events"]},{"name":"abstract val expiresAt: Optional<Instant?>","description":"dev.kord.core.cache.data.BaseInviteData.expiresAt","location":"core/dev.kord.core.cache.data/-base-invite-data/expires-at.html","searchKeys":["expiresAt","abstract val expiresAt: Optional<Instant?>","dev.kord.core.cache.data.BaseInviteData.expiresAt"]},{"name":"abstract val flags: Optional<ApplicationFlags>","description":"dev.kord.core.cache.data.BaseApplicationData.flags","location":"core/dev.kord.core.cache.data/-base-application-data/flags.html","searchKeys":["flags","abstract val flags: Optional<ApplicationFlags>","dev.kord.core.cache.data.BaseApplicationData.flags"]},{"name":"abstract val focused: Boolean","description":"dev.kord.core.entity.interaction.OptionValue.focused","location":"core/dev.kord.core.entity.interaction/-option-value/focused.html","searchKeys":["focused","abstract val focused: Boolean","dev.kord.core.entity.interaction.OptionValue.focused"]},{"name":"abstract val gateways: Map<Int, Gateway>","description":"dev.kord.core.gateway.MasterGateway.gateways","location":"core/dev.kord.core.gateway/-master-gateway/gateways.html","searchKeys":["gateways","abstract val gateways: Map<Int, Gateway>","dev.kord.core.gateway.MasterGateway.gateways"]},{"name":"abstract val guild: Optional<PartialGuildData>","description":"dev.kord.core.cache.data.BaseInviteData.guild","location":"core/dev.kord.core.cache.data/-base-invite-data/guild.html","searchKeys":["guild","abstract val guild: Optional<PartialGuildData>","dev.kord.core.cache.data.BaseInviteData.guild"]},{"name":"abstract val guildId: OptionalSnowflake","description":"dev.kord.core.cache.data.BaseApplicationData.guildId","location":"core/dev.kord.core.cache.data/-base-application-data/guild-id.html","searchKeys":["guildId","abstract val guildId: OptionalSnowflake","dev.kord.core.cache.data.BaseApplicationData.guildId"]},{"name":"abstract val guildId: Snowflake","description":"dev.kord.core.behavior.GuildApplicationCommandBehavior.guildId","location":"core/dev.kord.core.behavior/-guild-application-command-behavior/guild-id.html","searchKeys":["guildId","abstract val guildId: Snowflake","dev.kord.core.behavior.GuildApplicationCommandBehavior.guildId"]},{"name":"abstract val guildId: Snowflake","description":"dev.kord.core.behavior.GuildEmojiBehavior.guildId","location":"core/dev.kord.core.behavior/-guild-emoji-behavior/guild-id.html","searchKeys":["guildId","abstract val guildId: Snowflake","dev.kord.core.behavior.GuildEmojiBehavior.guildId"]},{"name":"abstract val guildId: Snowflake","description":"dev.kord.core.behavior.GuildScheduledEventBehavior.guildId","location":"core/dev.kord.core.behavior/-guild-scheduled-event-behavior/guild-id.html","searchKeys":["guildId","abstract val guildId: Snowflake","dev.kord.core.behavior.GuildScheduledEventBehavior.guildId"]},{"name":"abstract val guildId: Snowflake","description":"dev.kord.core.behavior.MemberBehavior.guildId","location":"core/dev.kord.core.behavior/-member-behavior/guild-id.html","searchKeys":["guildId","abstract val guildId: Snowflake","dev.kord.core.behavior.MemberBehavior.guildId"]},{"name":"abstract val guildId: Snowflake","description":"dev.kord.core.behavior.RoleBehavior.guildId","location":"core/dev.kord.core.behavior/-role-behavior/guild-id.html","searchKeys":["guildId","abstract val guildId: Snowflake","dev.kord.core.behavior.RoleBehavior.guildId"]},{"name":"abstract val guildId: Snowflake","description":"dev.kord.core.behavior.StickerBehavior.guildId","location":"core/dev.kord.core.behavior/-sticker-behavior/guild-id.html","searchKeys":["guildId","abstract val guildId: Snowflake","dev.kord.core.behavior.StickerBehavior.guildId"]},{"name":"abstract val guildId: Snowflake","description":"dev.kord.core.behavior.TemplateBehavior.guildId","location":"core/dev.kord.core.behavior/-template-behavior/guild-id.html","searchKeys":["guildId","abstract val guildId: Snowflake","dev.kord.core.behavior.TemplateBehavior.guildId"]},{"name":"abstract val guildId: Snowflake","description":"dev.kord.core.behavior.automoderation.AutoModerationRuleBehavior.guildId","location":"core/dev.kord.core.behavior.automoderation/-auto-moderation-rule-behavior/guild-id.html","searchKeys":["guildId","abstract val guildId: Snowflake","dev.kord.core.behavior.automoderation.AutoModerationRuleBehavior.guildId"]},{"name":"abstract val guildId: Snowflake","description":"dev.kord.core.behavior.channel.GuildChannelBehavior.guildId","location":"core/dev.kord.core.behavior.channel/-guild-channel-behavior/guild-id.html","searchKeys":["guildId","abstract val guildId: Snowflake","dev.kord.core.behavior.channel.GuildChannelBehavior.guildId"]},{"name":"abstract val guildId: Snowflake","description":"dev.kord.core.behavior.interaction.GuildInteractionBehavior.guildId","location":"core/dev.kord.core.behavior.interaction/-guild-interaction-behavior/guild-id.html","searchKeys":["guildId","abstract val guildId: Snowflake","dev.kord.core.behavior.interaction.GuildInteractionBehavior.guildId"]},{"name":"abstract val guildId: Snowflake","description":"dev.kord.core.event.automoderation.AutoModerationEvent.guildId","location":"core/dev.kord.core.event.automoderation/-auto-moderation-event/guild-id.html","searchKeys":["guildId","abstract val guildId: Snowflake","dev.kord.core.event.automoderation.AutoModerationEvent.guildId"]},{"name":"abstract val guildId: Snowflake","description":"dev.kord.core.event.guild.GuildScheduledEventUserEvent.guildId","location":"core/dev.kord.core.event.guild/-guild-scheduled-event-user-event/guild-id.html","searchKeys":["guildId","abstract val guildId: Snowflake","dev.kord.core.event.guild.GuildScheduledEventUserEvent.guildId"]},{"name":"abstract val guildScheduledEvent: Optional<GuildScheduledEventData>","description":"dev.kord.core.cache.data.BaseInviteData.guildScheduledEvent","location":"core/dev.kord.core.cache.data/-base-invite-data/guild-scheduled-event.html","searchKeys":["guildScheduledEvent","abstract val guildScheduledEvent: Optional<GuildScheduledEventData>","dev.kord.core.cache.data.BaseInviteData.guildScheduledEvent"]},{"name":"abstract val guilds: Flow<Guild>","description":"dev.kord.core.supplier.EntitySupplier.guilds","location":"core/dev.kord.core.supplier/-entity-supplier/guilds.html","searchKeys":["guilds","abstract val guilds: Flow<Guild>","dev.kord.core.supplier.EntitySupplier.guilds"]},{"name":"abstract val icon: String?","description":"dev.kord.core.cache.data.BaseApplicationData.icon","location":"core/dev.kord.core.cache.data/-base-application-data/icon.html","searchKeys":["icon","abstract val icon: String?","dev.kord.core.cache.data.BaseApplicationData.icon"]},{"name":"abstract val id: Snowflake","description":"dev.kord.core.cache.data.BaseApplicationData.id","location":"core/dev.kord.core.cache.data/-base-application-data/id.html","searchKeys":["id","abstract val id: Snowflake","dev.kord.core.cache.data.BaseApplicationData.id"]},{"name":"abstract val id: Snowflake","description":"dev.kord.core.entity.Entity.id","location":"core/dev.kord.core.entity/-entity/id.html","searchKeys":["id","abstract val id: Snowflake","dev.kord.core.entity.Entity.id"]},{"name":"abstract val installParams: Optional<InstallParams>","description":"dev.kord.core.cache.data.BaseApplicationData.installParams","location":"core/dev.kord.core.cache.data/-base-application-data/install-params.html","searchKeys":["installParams","abstract val installParams: Optional<InstallParams>","dev.kord.core.cache.data.BaseApplicationData.installParams"]},{"name":"abstract val interaction: Interaction","description":"dev.kord.core.event.interaction.InteractionCreateEvent.interaction","location":"core/dev.kord.core.event.interaction/-interaction-create-event/interaction.html","searchKeys":["interaction","abstract val interaction: Interaction","dev.kord.core.event.interaction.InteractionCreateEvent.interaction"]},{"name":"abstract val inviterId: OptionalSnowflake","description":"dev.kord.core.cache.data.BaseInviteData.inviterId","location":"core/dev.kord.core.cache.data/-base-invite-data/inviter-id.html","searchKeys":["inviterId","abstract val inviterId: OptionalSnowflake","dev.kord.core.cache.data.BaseInviteData.inviterId"]},{"name":"abstract val kord: Kord","description":"dev.kord.core.KordObject.kord","location":"core/dev.kord.core/-kord-object/kord.html","searchKeys":["kord","abstract val kord: Kord","dev.kord.core.KordObject.kord"]},{"name":"abstract val label: Optional<String>","description":"dev.kord.core.cache.data.ComponentData.label","location":"core/dev.kord.core.cache.data/-component-data/label.html","searchKeys":["label","abstract val label: Optional<String>","dev.kord.core.cache.data.ComponentData.label"]},{"name":"abstract val maxLength: OptionalInt","description":"dev.kord.core.cache.data.ComponentData.maxLength","location":"core/dev.kord.core.cache.data/-component-data/max-length.html","searchKeys":["maxLength","abstract val maxLength: OptionalInt","dev.kord.core.cache.data.ComponentData.maxLength"]},{"name":"abstract val maxValues: OptionalInt","description":"dev.kord.core.cache.data.ComponentData.maxValues","location":"core/dev.kord.core.cache.data/-component-data/max-values.html","searchKeys":["maxValues","abstract val maxValues: OptionalInt","dev.kord.core.cache.data.ComponentData.maxValues"]},{"name":"abstract val mention: String","description":"dev.kord.core.entity.ReactionEmoji.mention","location":"core/dev.kord.core.entity/-reaction-emoji/mention.html","searchKeys":["mention","abstract val mention: String","dev.kord.core.entity.ReactionEmoji.mention"]},{"name":"abstract val minLength: OptionalInt","description":"dev.kord.core.cache.data.ComponentData.minLength","location":"core/dev.kord.core.cache.data/-component-data/min-length.html","searchKeys":["minLength","abstract val minLength: OptionalInt","dev.kord.core.cache.data.ComponentData.minLength"]},{"name":"abstract val minValues: OptionalInt","description":"dev.kord.core.cache.data.ComponentData.minValues","location":"core/dev.kord.core.cache.data/-component-data/min-values.html","searchKeys":["minValues","abstract val minValues: OptionalInt","dev.kord.core.cache.data.ComponentData.minValues"]},{"name":"abstract val name: String","description":"dev.kord.core.cache.data.BaseApplicationData.name","location":"core/dev.kord.core.cache.data/-base-application-data/name.html","searchKeys":["name","abstract val name: String","dev.kord.core.cache.data.BaseApplicationData.name"]},{"name":"abstract val name: String","description":"dev.kord.core.entity.ReactionEmoji.name","location":"core/dev.kord.core.entity/-reaction-emoji/name.html","searchKeys":["name","abstract val name: String","dev.kord.core.entity.ReactionEmoji.name"]},{"name":"abstract val old: Channel?","description":"dev.kord.core.event.channel.ChannelUpdateEvent.old","location":"core/dev.kord.core.event.channel/-channel-update-event/old.html","searchKeys":["old","abstract val old: Channel?","dev.kord.core.event.channel.ChannelUpdateEvent.old"]},{"name":"abstract val old: ThreadChannel?","description":"dev.kord.core.event.channel.thread.ThreadChannelDeleteEvent.old","location":"core/dev.kord.core.event.channel.thread/-thread-channel-delete-event/old.html","searchKeys":["old","abstract val old: ThreadChannel?","dev.kord.core.event.channel.thread.ThreadChannelDeleteEvent.old"]},{"name":"abstract val options: Map<String, OptionValue<*>>","description":"dev.kord.core.entity.interaction.InteractionCommand.options","location":"core/dev.kord.core.entity.interaction/-interaction-command/options.html","searchKeys":["options","abstract val options: Map<String, OptionValue<*>>","dev.kord.core.entity.interaction.InteractionCommand.options"]},{"name":"abstract val options: Optional<List<SelectOptionData>>","description":"dev.kord.core.cache.data.ComponentData.options","location":"core/dev.kord.core.cache.data/-component-data/options.html","searchKeys":["options","abstract val options: Optional<List<SelectOptionData>>","dev.kord.core.cache.data.ComponentData.options"]},{"name":"abstract val ownerId: OptionalSnowflake","description":"dev.kord.core.cache.data.BaseApplicationData.ownerId","location":"core/dev.kord.core.cache.data/-base-application-data/owner-id.html","searchKeys":["ownerId","abstract val ownerId: OptionalSnowflake","dev.kord.core.cache.data.BaseApplicationData.ownerId"]},{"name":"abstract val parentId: Snowflake","description":"dev.kord.core.behavior.channel.threads.ThreadChannelBehavior.parentId","location":"core/dev.kord.core.behavior.channel.threads/-thread-channel-behavior/parent-id.html","searchKeys":["parentId","abstract val parentId: Snowflake","dev.kord.core.behavior.channel.threads.ThreadChannelBehavior.parentId"]},{"name":"abstract val placeholder: Optional<String>","description":"dev.kord.core.cache.data.ComponentData.placeholder","location":"core/dev.kord.core.cache.data/-component-data/placeholder.html","searchKeys":["placeholder","abstract val placeholder: Optional<String>","dev.kord.core.cache.data.ComponentData.placeholder"]},{"name":"abstract val primarySkuId: OptionalSnowflake","description":"dev.kord.core.cache.data.BaseApplicationData.primarySkuId","location":"core/dev.kord.core.cache.data/-base-application-data/primary-sku-id.html","searchKeys":["primarySkuId","abstract val primarySkuId: OptionalSnowflake","dev.kord.core.cache.data.BaseApplicationData.primarySkuId"]},{"name":"abstract val privacyPolicyUrl: Optional<String>","description":"dev.kord.core.cache.data.BaseApplicationData.privacyPolicyUrl","location":"core/dev.kord.core.cache.data/-base-application-data/privacy-policy-url.html","searchKeys":["privacyPolicyUrl","abstract val privacyPolicyUrl: Optional<String>","dev.kord.core.cache.data.BaseApplicationData.privacyPolicyUrl"]},{"name":"abstract val regions: Flow<Region>","description":"dev.kord.core.supplier.EntitySupplier.regions","location":"core/dev.kord.core.supplier/-entity-supplier/regions.html","searchKeys":["regions","abstract val regions: Flow<Region>","dev.kord.core.supplier.EntitySupplier.regions"]},{"name":"abstract val required: OptionalBoolean","description":"dev.kord.core.cache.data.ComponentData.required","location":"core/dev.kord.core.cache.data/-component-data/required.html","searchKeys":["required","abstract val required: OptionalBoolean","dev.kord.core.cache.data.ComponentData.required"]},{"name":"abstract val resolvedObject: T?","description":"dev.kord.core.entity.interaction.ResolvableOptionValue.resolvedObject","location":"core/dev.kord.core.entity.interaction/-resolvable-option-value/resolved-object.html","searchKeys":["resolvedObject","abstract val resolvedObject: T?","dev.kord.core.entity.interaction.ResolvableOptionValue.resolvedObject"]},{"name":"abstract val rpcOrigins: Optional<List<String>>","description":"dev.kord.core.cache.data.BaseApplicationData.rpcOrigins","location":"core/dev.kord.core.cache.data/-base-application-data/rpc-origins.html","searchKeys":["rpcOrigins","abstract val rpcOrigins: Optional<List<String>>","dev.kord.core.cache.data.BaseApplicationData.rpcOrigins"]},{"name":"abstract val rule: TypedAutoModerationRuleBehavior","description":"dev.kord.core.event.automoderation.AutoModerationEvent.rule","location":"core/dev.kord.core.event.automoderation/-auto-moderation-event/rule.html","searchKeys":["rule","abstract val rule: TypedAutoModerationRuleBehavior","dev.kord.core.event.automoderation.AutoModerationEvent.rule"]},{"name":"abstract val ruleId: Snowflake","description":"dev.kord.core.event.automoderation.AutoModerationEvent.ruleId","location":"core/dev.kord.core.event.automoderation/-auto-moderation-event/rule-id.html","searchKeys":["ruleId","abstract val ruleId: Snowflake","dev.kord.core.event.automoderation.AutoModerationEvent.ruleId"]},{"name":"abstract val scheduledEvent: GuildScheduledEvent","description":"dev.kord.core.event.guild.GuildScheduledEventEvent.scheduledEvent","location":"core/dev.kord.core.event.guild/-guild-scheduled-event-event/scheduled-event.html","searchKeys":["scheduledEvent","abstract val scheduledEvent: GuildScheduledEvent","dev.kord.core.event.guild.GuildScheduledEventEvent.scheduledEvent"]},{"name":"abstract val scheduledEventId: Snowflake","description":"dev.kord.core.event.guild.GuildScheduledEventUserEvent.scheduledEventId","location":"core/dev.kord.core.event.guild/-guild-scheduled-event-user-event/scheduled-event-id.html","searchKeys":["scheduledEventId","abstract val scheduledEventId: Snowflake","dev.kord.core.event.guild.GuildScheduledEventUserEvent.scheduledEventId"]},{"name":"abstract val service: InteractionService","description":"dev.kord.core.behavior.ApplicationCommandBehavior.service","location":"core/dev.kord.core.behavior/-application-command-behavior/service.html","searchKeys":["service","abstract val service: InteractionService","dev.kord.core.behavior.ApplicationCommandBehavior.service"]},{"name":"abstract val shard: Int","description":"dev.kord.core.event.Event.shard","location":"core/dev.kord.core.event/-event/shard.html","searchKeys":["shard","abstract val shard: Int","dev.kord.core.event.Event.shard"]},{"name":"abstract val slug: Optional<String>","description":"dev.kord.core.cache.data.BaseApplicationData.slug","location":"core/dev.kord.core.cache.data/-base-application-data/slug.html","searchKeys":["slug","abstract val slug: Optional<String>","dev.kord.core.cache.data.BaseApplicationData.slug"]},{"name":"abstract val supplier: EntitySupplier","description":"dev.kord.core.entity.Strategizable.supplier","location":"core/dev.kord.core.entity/-strategizable/supplier.html","searchKeys":["supplier","abstract val supplier: EntitySupplier","dev.kord.core.entity.Strategizable.supplier"]},{"name":"abstract val tags: Optional<List<String>>","description":"dev.kord.core.cache.data.BaseApplicationData.tags","location":"core/dev.kord.core.cache.data/-base-application-data/tags.html","searchKeys":["tags","abstract val tags: Optional<List<String>>","dev.kord.core.cache.data.BaseApplicationData.tags"]},{"name":"abstract val targetApplication: Optional<PartialApplicationData>","description":"dev.kord.core.cache.data.BaseInviteData.targetApplication","location":"core/dev.kord.core.cache.data/-base-invite-data/target-application.html","searchKeys":["targetApplication","abstract val targetApplication: Optional<PartialApplicationData>","dev.kord.core.cache.data.BaseInviteData.targetApplication"]},{"name":"abstract val targetType: Optional<InviteTargetType>","description":"dev.kord.core.cache.data.BaseInviteData.targetType","location":"core/dev.kord.core.cache.data/-base-invite-data/target-type.html","searchKeys":["targetType","abstract val targetType: Optional<InviteTargetType>","dev.kord.core.cache.data.BaseInviteData.targetType"]},{"name":"abstract val targetUserId: OptionalSnowflake","description":"dev.kord.core.cache.data.BaseInviteData.targetUserId","location":"core/dev.kord.core.cache.data/-base-invite-data/target-user-id.html","searchKeys":["targetUserId","abstract val targetUserId: OptionalSnowflake","dev.kord.core.cache.data.BaseInviteData.targetUserId"]},{"name":"abstract val termsOfServiceUrl: Optional<String>","description":"dev.kord.core.cache.data.BaseApplicationData.termsOfServiceUrl","location":"core/dev.kord.core.cache.data/-base-application-data/terms-of-service-url.html","searchKeys":["termsOfServiceUrl","abstract val termsOfServiceUrl: Optional<String>","dev.kord.core.cache.data.BaseApplicationData.termsOfServiceUrl"]},{"name":"abstract val threadId: Snowflake","description":"dev.kord.core.behavior.ThreadMemberBehavior.threadId","location":"core/dev.kord.core.behavior/-thread-member-behavior/thread-id.html","searchKeys":["threadId","abstract val threadId: Snowflake","dev.kord.core.behavior.ThreadMemberBehavior.threadId"]},{"name":"abstract val token: String","description":"dev.kord.core.behavior.interaction.InteractionBehavior.token","location":"core/dev.kord.core.behavior.interaction/-interaction-behavior/token.html","searchKeys":["token","abstract val token: String","dev.kord.core.behavior.interaction.InteractionBehavior.token"]},{"name":"abstract val token: String","description":"dev.kord.core.behavior.interaction.followup.FollowupMessageBehavior.token","location":"core/dev.kord.core.behavior.interaction.followup/-followup-message-behavior/token.html","searchKeys":["token","abstract val token: String","dev.kord.core.behavior.interaction.followup.FollowupMessageBehavior.token"]},{"name":"abstract val token: String","description":"dev.kord.core.behavior.interaction.response.InteractionResponseBehavior.token","location":"core/dev.kord.core.behavior.interaction.response/-interaction-response-behavior/token.html","searchKeys":["token","abstract val token: String","dev.kord.core.behavior.interaction.response.InteractionResponseBehavior.token"]},{"name":"abstract val triggerType: AutoModerationRuleTriggerType?","description":"dev.kord.core.behavior.automoderation.AutoModerationRuleBehavior.triggerType","location":"core/dev.kord.core.behavior.automoderation/-auto-moderation-rule-behavior/trigger-type.html","searchKeys":["triggerType","abstract val triggerType: AutoModerationRuleTriggerType?","dev.kord.core.behavior.automoderation.AutoModerationRuleBehavior.triggerType"]},{"name":"abstract val type: AutoModerationActionType","description":"dev.kord.core.entity.automoderation.AutoModerationAction.type","location":"core/dev.kord.core.entity.automoderation/-auto-moderation-action/type.html","searchKeys":["type","abstract val type: AutoModerationActionType","dev.kord.core.entity.automoderation.AutoModerationAction.type"]},{"name":"abstract val type: ComponentType","description":"dev.kord.core.cache.data.ComponentData.type","location":"core/dev.kord.core.cache.data/-component-data/type.html","searchKeys":["type","abstract val type: ComponentType","dev.kord.core.cache.data.ComponentData.type"]},{"name":"abstract val url: Optional<String>","description":"dev.kord.core.cache.data.ComponentData.url","location":"core/dev.kord.core.cache.data/-component-data/url.html","searchKeys":["url","abstract val url: Optional<String>","dev.kord.core.cache.data.ComponentData.url"]},{"name":"abstract val urlFormat: String","description":"dev.kord.core.entity.ReactionEmoji.urlFormat","location":"core/dev.kord.core.entity/-reaction-emoji/url-format.html","searchKeys":["urlFormat","abstract val urlFormat: String","dev.kord.core.entity.ReactionEmoji.urlFormat"]},{"name":"abstract val user: User","description":"dev.kord.core.entity.interaction.Interaction.user","location":"core/dev.kord.core.entity.interaction/-interaction/user.html","searchKeys":["user","abstract val user: User","dev.kord.core.entity.interaction.Interaction.user"]},{"name":"abstract val userId: Snowflake","description":"dev.kord.core.event.guild.GuildScheduledEventUserEvent.userId","location":"core/dev.kord.core.event.guild/-guild-scheduled-event-user-event/user-id.html","searchKeys":["userId","abstract val userId: Snowflake","dev.kord.core.event.guild.GuildScheduledEventUserEvent.userId"]},{"name":"abstract val value: Optional<String>","description":"dev.kord.core.cache.data.ComponentData.value","location":"core/dev.kord.core.cache.data/-component-data/value.html","searchKeys":["value","abstract val value: Optional<String>","dev.kord.core.cache.data.ComponentData.value"]},{"name":"abstract val value: T","description":"dev.kord.core.entity.interaction.OptionValue.value","location":"core/dev.kord.core.entity.interaction/-option-value/value.html","searchKeys":["value","abstract val value: T","dev.kord.core.entity.interaction.OptionValue.value"]},{"name":"abstract val verifyKey: String","description":"dev.kord.core.cache.data.BaseApplicationData.verifyKey","location":"core/dev.kord.core.cache.data/-base-application-data/verify-key.html","searchKeys":["verifyKey","abstract val verifyKey: String","dev.kord.core.cache.data.BaseApplicationData.verifyKey"]},{"name":"abstract var applicationId: Snowflake","description":"dev.kord.core.builder.kord.RestOnlyBuilder.applicationId","location":"core/dev.kord.core.builder.kord/-rest-only-builder/application-id.html","searchKeys":["applicationId","abstract var applicationId: Snowflake","dev.kord.core.builder.kord.RestOnlyBuilder.applicationId"]},{"name":"class ActionRowComponent(val data: ComponentData) : Component","description":"dev.kord.core.entity.component.ActionRowComponent","location":"core/dev.kord.core.entity.component/-action-row-component/index.html","searchKeys":["ActionRowComponent","class ActionRowComponent(val data: ComponentData) : Component","dev.kord.core.entity.component.ActionRowComponent"]},{"name":"class Activity(val data: ActivityData)","description":"dev.kord.core.entity.Activity","location":"core/dev.kord.core.entity/-activity/index.html","searchKeys":["Activity","class Activity(val data: ActivityData)","dev.kord.core.entity.Activity"]},{"name":"class Application(val data: ApplicationData, val kord: Kord, val supplier: EntitySupplier = kord.defaultSupplier) : BaseApplication","description":"dev.kord.core.entity.Application","location":"core/dev.kord.core.entity/-application/index.html","searchKeys":["Application","class Application(val data: ApplicationData, val kord: Kord, val supplier: EntitySupplier = kord.defaultSupplier) : BaseApplication","dev.kord.core.entity.Application"]},{"name":"class ApplicationCommandGroupData(val name: String, val description: String, val subCommands: List<ApplicationCommandSubcommandData>)","description":"dev.kord.core.cache.data.ApplicationCommandGroupData","location":"core/dev.kord.core.cache.data/-application-command-group-data/index.html","searchKeys":["ApplicationCommandGroupData","class ApplicationCommandGroupData(val name: String, val description: String, val subCommands: List<ApplicationCommandSubcommandData>)","dev.kord.core.cache.data.ApplicationCommandGroupData"]},{"name":"class ApplicationCommandParameter(val data: ApplicationCommandParameterData)","description":"dev.kord.core.entity.application.ApplicationCommandParameter","location":"core/dev.kord.core.entity.application/-application-command-parameter/index.html","searchKeys":["ApplicationCommandParameter","class ApplicationCommandParameter(val data: ApplicationCommandParameterData)","dev.kord.core.entity.application.ApplicationCommandParameter"]},{"name":"class ApplicationCommandPermissions(val data: GuildApplicationCommandPermissionsData)","description":"dev.kord.core.entity.application.ApplicationCommandPermissions","location":"core/dev.kord.core.entity.application/-application-command-permissions/index.html","searchKeys":["ApplicationCommandPermissions","class ApplicationCommandPermissions(val data: GuildApplicationCommandPermissionsData)","dev.kord.core.entity.application.ApplicationCommandPermissions"]},{"name":"class ApplicationCommandPermissionsUpdateEvent(val permissions: ApplicationCommandPermissions, val kord: Kord, val shard: Int, val customContext: Any?) : Event","description":"dev.kord.core.event.interaction.ApplicationCommandPermissionsUpdateEvent","location":"core/dev.kord.core.event.interaction/-application-command-permissions-update-event/index.html","searchKeys":["ApplicationCommandPermissionsUpdateEvent","class ApplicationCommandPermissionsUpdateEvent(val permissions: ApplicationCommandPermissions, val kord: Kord, val shard: Int, val customContext: Any?) : Event","dev.kord.core.event.interaction.ApplicationCommandPermissionsUpdateEvent"]},{"name":"class AttachmentOptionValue(val value: Snowflake, val focused: Boolean, val resolvedObject: Attachment?) : ResolvableOptionValue<Attachment> ","description":"dev.kord.core.entity.interaction.AttachmentOptionValue","location":"core/dev.kord.core.entity.interaction/-attachment-option-value/index.html","searchKeys":["AttachmentOptionValue","class AttachmentOptionValue(val value: Snowflake, val focused: Boolean, val resolvedObject: Attachment?) : ResolvableOptionValue<Attachment> ","dev.kord.core.entity.interaction.AttachmentOptionValue"]},{"name":"class AuditLog(val data: DiscordAuditLog, val guildId: Snowflake, val kord: Kord) : KordObject","description":"dev.kord.core.entity.AuditLog","location":"core/dev.kord.core.entity/-audit-log/index.html","searchKeys":["AuditLog","class AuditLog(val data: DiscordAuditLog, val guildId: Snowflake, val kord: Kord) : KordObject","dev.kord.core.entity.AuditLog"]},{"name":"class AuditLogEntry(val data: DiscordAuditLogEntry, val kord: Kord) : KordObject","description":"dev.kord.core.entity.AuditLogEntry","location":"core/dev.kord.core.entity/-audit-log-entry/index.html","searchKeys":["AuditLogEntry","class AuditLogEntry(val data: DiscordAuditLogEntry, val kord: Kord) : KordObject","dev.kord.core.entity.AuditLogEntry"]},{"name":"class AutoModerationActionExecutionEvent(val data: AutoModerationActionExecutionEventData, val kord: Kord, val shard: Int, val customContext: Any?, val supplier: EntitySupplier = kord.defaultSupplier) : AutoModerationEvent","description":"dev.kord.core.event.automoderation.AutoModerationActionExecutionEvent","location":"core/dev.kord.core.event.automoderation/-auto-moderation-action-execution-event/index.html","searchKeys":["AutoModerationActionExecutionEvent","class AutoModerationActionExecutionEvent(val data: AutoModerationActionExecutionEventData, val kord: Kord, val shard: Int, val customContext: Any?, val supplier: EntitySupplier = kord.defaultSupplier) : AutoModerationEvent","dev.kord.core.event.automoderation.AutoModerationActionExecutionEvent"]},{"name":"class AutoModerationRuleCreateEvent(val rule: AutoModerationRule, val kord: Kord, val shard: Int, val customContext: Any?, val supplier: EntitySupplier = kord.defaultSupplier) : AutoModerationRuleConfigurationEvent","description":"dev.kord.core.event.automoderation.AutoModerationRuleCreateEvent","location":"core/dev.kord.core.event.automoderation/-auto-moderation-rule-create-event/index.html","searchKeys":["AutoModerationRuleCreateEvent","class AutoModerationRuleCreateEvent(val rule: AutoModerationRule, val kord: Kord, val shard: Int, val customContext: Any?, val supplier: EntitySupplier = kord.defaultSupplier) : AutoModerationRuleConfigurationEvent","dev.kord.core.event.automoderation.AutoModerationRuleCreateEvent"]},{"name":"class AutoModerationRuleDeleteEvent(val rule: AutoModerationRule, val kord: Kord, val shard: Int, val customContext: Any?, val supplier: EntitySupplier = kord.defaultSupplier) : AutoModerationRuleConfigurationEvent","description":"dev.kord.core.event.automoderation.AutoModerationRuleDeleteEvent","location":"core/dev.kord.core.event.automoderation/-auto-moderation-rule-delete-event/index.html","searchKeys":["AutoModerationRuleDeleteEvent","class AutoModerationRuleDeleteEvent(val rule: AutoModerationRule, val kord: Kord, val shard: Int, val customContext: Any?, val supplier: EntitySupplier = kord.defaultSupplier) : AutoModerationRuleConfigurationEvent","dev.kord.core.event.automoderation.AutoModerationRuleDeleteEvent"]},{"name":"class AutoModerationRuleUpdateEvent(val rule: AutoModerationRule, val old: AutoModerationRule?, val kord: Kord, val shard: Int, val customContext: Any?, val supplier: EntitySupplier = kord.defaultSupplier) : AutoModerationRuleConfigurationEvent","description":"dev.kord.core.event.automoderation.AutoModerationRuleUpdateEvent","location":"core/dev.kord.core.event.automoderation/-auto-moderation-rule-update-event/index.html","searchKeys":["AutoModerationRuleUpdateEvent","class AutoModerationRuleUpdateEvent(val rule: AutoModerationRule, val old: AutoModerationRule?, val kord: Kord, val shard: Int, val customContext: Any?, val supplier: EntitySupplier = kord.defaultSupplier) : AutoModerationRuleConfigurationEvent","dev.kord.core.event.automoderation.AutoModerationRuleUpdateEvent"]},{"name":"class Ban(val data: BanData, val kord: Kord, val supplier: EntitySupplier = kord.defaultSupplier) : KordObject, Strategizable","description":"dev.kord.core.entity.Ban","location":"core/dev.kord.core.entity/-ban/index.html","searchKeys":["Ban","class Ban(val data: BanData, val kord: Kord, val supplier: EntitySupplier = kord.defaultSupplier) : KordObject, Strategizable","dev.kord.core.entity.Ban"]},{"name":"class BanAddEvent(val user: User, val guildId: Snowflake, val shard: Int, val customContext: Any?, val supplier: EntitySupplier = user.kord.defaultSupplier) : Event, Strategizable","description":"dev.kord.core.event.guild.BanAddEvent","location":"core/dev.kord.core.event.guild/-ban-add-event/index.html","searchKeys":["BanAddEvent","class BanAddEvent(val user: User, val guildId: Snowflake, val shard: Int, val customContext: Any?, val supplier: EntitySupplier = user.kord.defaultSupplier) : Event, Strategizable","dev.kord.core.event.guild.BanAddEvent"]},{"name":"class BanRemoveEvent(val user: User, val guildId: Snowflake, val shard: Int, val customContext: Any?, val supplier: EntitySupplier = user.kord.defaultSupplier) : Event, Strategizable","description":"dev.kord.core.event.guild.BanRemoveEvent","location":"core/dev.kord.core.event.guild/-ban-remove-event/index.html","searchKeys":["BanRemoveEvent","class BanRemoveEvent(val user: User, val guildId: Snowflake, val shard: Int, val customContext: Any?, val supplier: EntitySupplier = user.kord.defaultSupplier) : Event, Strategizable","dev.kord.core.event.guild.BanRemoveEvent"]},{"name":"class BlockMessageAutoModerationAction(val data: AutoModerationActionData, val kord: Kord) : AutoModerationAction","description":"dev.kord.core.entity.automoderation.BlockMessageAutoModerationAction","location":"core/dev.kord.core.entity.automoderation/-block-message-auto-moderation-action/index.html","searchKeys":["BlockMessageAutoModerationAction","class BlockMessageAutoModerationAction(val data: AutoModerationActionData, val kord: Kord) : AutoModerationAction","dev.kord.core.entity.automoderation.BlockMessageAutoModerationAction"]},{"name":"class BooleanOptionValue(val value: Boolean, val focused: Boolean) : OptionValue<Boolean> ","description":"dev.kord.core.entity.interaction.BooleanOptionValue","location":"core/dev.kord.core.entity.interaction/-boolean-option-value/index.html","searchKeys":["BooleanOptionValue","class BooleanOptionValue(val value: Boolean, val focused: Boolean) : OptionValue<Boolean> ","dev.kord.core.entity.interaction.BooleanOptionValue"]},{"name":"class ButtonComponent(val data: ChatComponentData) : Component","description":"dev.kord.core.entity.component.ButtonComponent","location":"core/dev.kord.core.entity.component/-button-component/index.html","searchKeys":["ButtonComponent","class ButtonComponent(val data: ChatComponentData) : Component","dev.kord.core.entity.component.ButtonComponent"]},{"name":"class CacheEntitySupplier(kord: Kord) : EntitySupplier","description":"dev.kord.core.supplier.CacheEntitySupplier","location":"core/dev.kord.core.supplier/-cache-entity-supplier/index.html","searchKeys":["CacheEntitySupplier","class CacheEntitySupplier(kord: Kord) : EntitySupplier","dev.kord.core.supplier.CacheEntitySupplier"]},{"name":"class CachingGateway(cache: DataCache, gateway: Gateway, dispatcher: CoroutineDispatcher = Dispatchers.Default) : DataCache, Gateway, CoroutineScope","description":"dev.kord.core.cache.CachingGateway","location":"core/dev.kord.core.cache/-caching-gateway/index.html","searchKeys":["CachingGateway","class CachingGateway(cache: DataCache, gateway: Gateway, dispatcher: CoroutineDispatcher = Dispatchers.Default) : DataCache, Gateway, CoroutineScope","dev.kord.core.cache.CachingGateway"]},{"name":"class Category(val data: ChannelData, val kord: Kord, val supplier: EntitySupplier = kord.defaultSupplier) : TopGuildChannel, CategoryBehavior","description":"dev.kord.core.entity.channel.Category","location":"core/dev.kord.core.entity.channel/-category/index.html","searchKeys":["Category","class Category(val data: ChannelData, val kord: Kord, val supplier: EntitySupplier = kord.defaultSupplier) : TopGuildChannel, CategoryBehavior","dev.kord.core.entity.channel.Category"]},{"name":"class CategoryCreateEvent(val channel: Category, val shard: Int, val customContext: Any?) : ChannelCreateEvent","description":"dev.kord.core.event.channel.CategoryCreateEvent","location":"core/dev.kord.core.event.channel/-category-create-event/index.html","searchKeys":["CategoryCreateEvent","class CategoryCreateEvent(val channel: Category, val shard: Int, val customContext: Any?) : ChannelCreateEvent","dev.kord.core.event.channel.CategoryCreateEvent"]},{"name":"class CategoryDeleteEvent(val channel: Category, val shard: Int, val customContext: Any?) : ChannelDeleteEvent","description":"dev.kord.core.event.channel.CategoryDeleteEvent","location":"core/dev.kord.core.event.channel/-category-delete-event/index.html","searchKeys":["CategoryDeleteEvent","class CategoryDeleteEvent(val channel: Category, val shard: Int, val customContext: Any?) : ChannelDeleteEvent","dev.kord.core.event.channel.CategoryDeleteEvent"]},{"name":"class CategoryUpdateEvent(val channel: Category, val old: Category?, val shard: Int, val customContext: Any?) : ChannelUpdateEvent","description":"dev.kord.core.event.channel.CategoryUpdateEvent","location":"core/dev.kord.core.event.channel/-category-update-event/index.html","searchKeys":["CategoryUpdateEvent","class CategoryUpdateEvent(val channel: Category, val old: Category?, val shard: Int, val customContext: Any?) : ChannelUpdateEvent","dev.kord.core.event.channel.CategoryUpdateEvent"]},{"name":"class ChannelOptionValue(val value: Snowflake, val focused: Boolean, val resolvedObject: ResolvedChannel?) : ResolvableOptionValue<ResolvedChannel> ","description":"dev.kord.core.entity.interaction.ChannelOptionValue","location":"core/dev.kord.core.entity.interaction/-channel-option-value/index.html","searchKeys":["ChannelOptionValue","class ChannelOptionValue(val value: Snowflake, val focused: Boolean, val resolvedObject: ResolvedChannel?) : ResolvableOptionValue<ResolvedChannel> ","dev.kord.core.entity.interaction.ChannelOptionValue"]},{"name":"class ChannelPinsUpdateEvent(val data: ChannelPinsUpdateEventData, val kord: Kord, val shard: Int, val customContext: Any?, val supplier: EntitySupplier = kord.defaultSupplier) : Event, Strategizable","description":"dev.kord.core.event.channel.ChannelPinsUpdateEvent","location":"core/dev.kord.core.event.channel/-channel-pins-update-event/index.html","searchKeys":["ChannelPinsUpdateEvent","class ChannelPinsUpdateEvent(val data: ChannelPinsUpdateEventData, val kord: Kord, val shard: Int, val customContext: Any?, val supplier: EntitySupplier = kord.defaultSupplier) : Event, Strategizable","dev.kord.core.event.channel.ChannelPinsUpdateEvent"]},{"name":"class ChatInputCommandCreateEvent(val command: GuildChatInputCommand, val kord: Kord, val shard: Int, val customContext: Any?) : ApplicationCommandCreateEvent","description":"dev.kord.core.event.interaction.ChatInputCommandCreateEvent","location":"core/dev.kord.core.event.interaction/-chat-input-command-create-event/index.html","searchKeys":["ChatInputCommandCreateEvent","class ChatInputCommandCreateEvent(val command: GuildChatInputCommand, val kord: Kord, val shard: Int, val customContext: Any?) : ApplicationCommandCreateEvent","dev.kord.core.event.interaction.ChatInputCommandCreateEvent"]},{"name":"class ChatInputCommandDeleteEvent(val command: GuildChatInputCommand, val kord: Kord, val shard: Int, val customContext: Any?) : ApplicationCommandDeleteEvent","description":"dev.kord.core.event.interaction.ChatInputCommandDeleteEvent","location":"core/dev.kord.core.event.interaction/-chat-input-command-delete-event/index.html","searchKeys":["ChatInputCommandDeleteEvent","class ChatInputCommandDeleteEvent(val command: GuildChatInputCommand, val kord: Kord, val shard: Int, val customContext: Any?) : ApplicationCommandDeleteEvent","dev.kord.core.event.interaction.ChatInputCommandDeleteEvent"]},{"name":"class ChatInputCommandUpdateEvent(val command: GuildChatInputCommand, val kord: Kord, val shard: Int, val customContext: Any?) : ApplicationCommandUpdateEvent","description":"dev.kord.core.event.interaction.ChatInputCommandUpdateEvent","location":"core/dev.kord.core.event.interaction/-chat-input-command-update-event/index.html","searchKeys":["ChatInputCommandUpdateEvent","class ChatInputCommandUpdateEvent(val command: GuildChatInputCommand, val kord: Kord, val shard: Int, val customContext: Any?) : ApplicationCommandUpdateEvent","dev.kord.core.event.interaction.ChatInputCommandUpdateEvent"]},{"name":"class ChatInputGroup(val data: ApplicationCommandGroupData)","description":"dev.kord.core.entity.application.ChatInputGroup","location":"core/dev.kord.core.entity.application/-chat-input-group/index.html","searchKeys":["ChatInputGroup","class ChatInputGroup(val data: ApplicationCommandGroupData)","dev.kord.core.entity.application.ChatInputGroup"]},{"name":"class ChatInputSubCommand(val data: ApplicationCommandSubcommandData)","description":"dev.kord.core.entity.application.ChatInputSubCommand","location":"core/dev.kord.core.entity.application/-chat-input-sub-command/index.html","searchKeys":["ChatInputSubCommand","class ChatInputSubCommand(val data: ApplicationCommandSubcommandData)","dev.kord.core.entity.application.ChatInputSubCommand"]},{"name":"class ClientResources(val token: String, val applicationId: Snowflake, val shards: Shards, val maxConcurrency: Int, val httpClient: HttpClient, val defaultStrategy: EntitySupplyStrategy<*>)","description":"dev.kord.core.ClientResources","location":"core/dev.kord.core/-client-resources/index.html","searchKeys":["ClientResources","class ClientResources(val token: String, val applicationId: Snowflake, val shards: Shards, val maxConcurrency: Int, val httpClient: HttpClient, val defaultStrategy: EntitySupplyStrategy<*>)","dev.kord.core.ClientResources"]},{"name":"class ClientStatus(val data: ClientStatusData)","description":"dev.kord.core.entity.ClientStatus","location":"core/dev.kord.core.entity/-client-status/index.html","searchKeys":["ClientStatus","class ClientStatus(val data: ClientStatusData)","dev.kord.core.entity.ClientStatus"]},{"name":"class ConnectEvent(val kord: Kord, val shard: Int, val customContext: Any?) : GatewayEvent","description":"dev.kord.core.event.gateway.ConnectEvent","location":"core/dev.kord.core.event.gateway/-connect-event/index.html","searchKeys":["ConnectEvent","class ConnectEvent(val kord: Kord, val shard: Int, val customContext: Any?) : GatewayEvent","dev.kord.core.event.gateway.ConnectEvent"]},{"name":"class DMChannelCreateEvent(val channel: DmChannel, val shard: Int, val customContext: Any?) : ChannelCreateEvent","description":"dev.kord.core.event.channel.DMChannelCreateEvent","location":"core/dev.kord.core.event.channel/-d-m-channel-create-event/index.html","searchKeys":["DMChannelCreateEvent","class DMChannelCreateEvent(val channel: DmChannel, val shard: Int, val customContext: Any?) : ChannelCreateEvent","dev.kord.core.event.channel.DMChannelCreateEvent"]},{"name":"class DMChannelDeleteEvent(val channel: DmChannel, val shard: Int, val customContext: Any?) : ChannelDeleteEvent","description":"dev.kord.core.event.channel.DMChannelDeleteEvent","location":"core/dev.kord.core.event.channel/-d-m-channel-delete-event/index.html","searchKeys":["DMChannelDeleteEvent","class DMChannelDeleteEvent(val channel: DmChannel, val shard: Int, val customContext: Any?) : ChannelDeleteEvent","dev.kord.core.event.channel.DMChannelDeleteEvent"]},{"name":"class DMChannelUpdateEvent(val channel: DmChannel, val old: DmChannel?, val shard: Int, val customContext: Any?) : ChannelUpdateEvent","description":"dev.kord.core.event.channel.DMChannelUpdateEvent","location":"core/dev.kord.core.event.channel/-d-m-channel-update-event/index.html","searchKeys":["DMChannelUpdateEvent","class DMChannelUpdateEvent(val channel: DmChannel, val old: DmChannel?, val shard: Int, val customContext: Any?) : ChannelUpdateEvent","dev.kord.core.event.channel.DMChannelUpdateEvent"]},{"name":"class DataCacheView(cache: DataCache) : DataCache","description":"dev.kord.core.cache.DataCacheView","location":"core/dev.kord.core.cache/-data-cache-view/index.html","searchKeys":["DataCacheView","class DataCacheView(cache: DataCache) : DataCache","dev.kord.core.cache.DataCacheView"]},{"name":"class DefaultGatewayEventInterceptor constructor(customContextCreator: CustomContextCreator?) : GatewayEventInterceptor","description":"dev.kord.core.gateway.handler.DefaultGatewayEventInterceptor","location":"core/dev.kord.core.gateway.handler/-default-gateway-event-interceptor/index.html","searchKeys":["DefaultGatewayEventInterceptor","class DefaultGatewayEventInterceptor constructor(customContextCreator: CustomContextCreator?) : GatewayEventInterceptor","dev.kord.core.gateway.handler.DefaultGatewayEventInterceptor"]},{"name":"class DefaultMasterGateway(val gateways: Map<Int, Gateway>) : MasterGateway","description":"dev.kord.core.gateway.DefaultMasterGateway","location":"core/dev.kord.core.gateway/-default-master-gateway/index.html","searchKeys":["DefaultMasterGateway","class DefaultMasterGateway(val gateways: Map<Int, Gateway>) : MasterGateway","dev.kord.core.gateway.DefaultMasterGateway"]},{"name":"class DefaultUserAvatar(discriminator: Int, val kord: Kord) : Icon","description":"dev.kord.core.entity.Icon.DefaultUserAvatar","location":"core/dev.kord.core.entity/-icon/-default-user-avatar/index.html","searchKeys":["DefaultUserAvatar","class DefaultUserAvatar(discriminator: Int, val kord: Kord) : Icon","dev.kord.core.entity.Icon.DefaultUserAvatar"]},{"name":"class DeletedThreadChannel(val data: ChannelData, val kord: Kord, val supplier: EntitySupplier = kord.defaultSupplier) : Strategizable","description":"dev.kord.core.entity.channel.thread.DeletedThreadChannel","location":"core/dev.kord.core.entity.channel.thread/-deleted-thread-channel/index.html","searchKeys":["DeletedThreadChannel","class DeletedThreadChannel(val data: ChannelData, val kord: Kord, val supplier: EntitySupplier = kord.defaultSupplier) : Strategizable","dev.kord.core.entity.channel.thread.DeletedThreadChannel"]},{"name":"class Desktop(val status: PresenceStatus) : ClientStatus.Client","description":"dev.kord.core.entity.ClientStatus.Client.Desktop","location":"core/dev.kord.core.entity/-client-status/-client/-desktop/index.html","searchKeys":["Desktop","class Desktop(val status: PresenceStatus) : ClientStatus.Client","dev.kord.core.entity.ClientStatus.Client.Desktop"]},{"name":"class DetachEvent(val kord: Kord, val shard: Int, val customContext: Any?) : DisconnectEvent","description":"dev.kord.core.event.gateway.DisconnectEvent.DetachEvent","location":"core/dev.kord.core.event.gateway/-disconnect-event/-detach-event/index.html","searchKeys":["DetachEvent","class DetachEvent(val kord: Kord, val shard: Int, val customContext: Any?) : DisconnectEvent","dev.kord.core.event.gateway.DisconnectEvent.DetachEvent"]},{"name":"class DiscordCloseEvent(val kord: Kord, val shard: Int, val closeCode: GatewayCloseCode, val recoverable: Boolean, val customContext: Any?) : DisconnectEvent","description":"dev.kord.core.event.gateway.DisconnectEvent.DiscordCloseEvent","location":"core/dev.kord.core.event.gateway/-disconnect-event/-discord-close-event/index.html","searchKeys":["DiscordCloseEvent","class DiscordCloseEvent(val kord: Kord, val shard: Int, val closeCode: GatewayCloseCode, val recoverable: Boolean, val customContext: Any?) : DisconnectEvent","dev.kord.core.event.gateway.DisconnectEvent.DiscordCloseEvent"]},{"name":"class EmojiIcon(val animated: Boolean, emojiId: Snowflake, val kord: Kord) : Icon","description":"dev.kord.core.entity.Icon.EmojiIcon","location":"core/dev.kord.core.entity/-icon/-emoji-icon/index.html","searchKeys":["EmojiIcon","class EmojiIcon(val animated: Boolean, emojiId: Snowflake, val kord: Kord) : Icon","dev.kord.core.entity.Icon.EmojiIcon"]},{"name":"class EmojisUpdateEvent(val guildId: Snowflake, val emojis: Set<GuildEmoji>, val old: Set<GuildEmoji>?, val kord: Kord, val shard: Int, val customContext: Any?, val supplier: EntitySupplier = kord.defaultSupplier) : Event, Strategizable","description":"dev.kord.core.event.guild.EmojisUpdateEvent","location":"core/dev.kord.core.event.guild/-emojis-update-event/index.html","searchKeys":["EmojisUpdateEvent","class EmojisUpdateEvent(val guildId: Snowflake, val emojis: Set<GuildEmoji>, val old: Set<GuildEmoji>?, val kord: Kord, val shard: Int, val customContext: Any?, val supplier: EntitySupplier = kord.defaultSupplier) : Event, Strategizable","dev.kord.core.event.guild.EmojisUpdateEvent"]},{"name":"class EntityNotFoundException : Exception","description":"dev.kord.core.exception.EntityNotFoundException","location":"core/dev.kord.core.exception/-entity-not-found-exception/index.html","searchKeys":["EntityNotFoundException","class EntityNotFoundException : Exception","dev.kord.core.exception.EntityNotFoundException"]},{"name":"class EphemeralFollowupMessage(val message: Message, val applicationId: Snowflake, val token: String, val kord: Kord, val supplier: EntitySupplier = kord.defaultSupplier) : FollowupMessage, EphemeralFollowupMessageBehavior","description":"dev.kord.core.entity.interaction.followup.EphemeralFollowupMessage","location":"core/dev.kord.core.entity.interaction.followup/-ephemeral-followup-message/index.html","searchKeys":["EphemeralFollowupMessage","class EphemeralFollowupMessage(val message: Message, val applicationId: Snowflake, val token: String, val kord: Kord, val supplier: EntitySupplier = kord.defaultSupplier) : FollowupMessage, EphemeralFollowupMessageBehavior","dev.kord.core.entity.interaction.followup.EphemeralFollowupMessage"]},{"name":"class EphemeralMessageInteractionResponse(val message: Message, val applicationId: Snowflake, val token: String, val kord: Kord, val supplier: EntitySupplier = kord.defaultSupplier) : MessageInteractionResponse, EphemeralMessageInteractionResponseBehavior","description":"dev.kord.core.entity.interaction.response.EphemeralMessageInteractionResponse","location":"core/dev.kord.core.entity.interaction.response/-ephemeral-message-interaction-response/index.html","searchKeys":["EphemeralMessageInteractionResponse","class EphemeralMessageInteractionResponse(val message: Message, val applicationId: Snowflake, val token: String, val kord: Kord, val supplier: EntitySupplier = kord.defaultSupplier) : MessageInteractionResponse, EphemeralMessageInteractionResponseBehavior","dev.kord.core.entity.interaction.response.EphemeralMessageInteractionResponse"]},{"name":"class GatewayNotFoundException : Exception","description":"dev.kord.core.exception.GatewayNotFoundException","location":"core/dev.kord.core.exception/-gateway-not-found-exception/index.html","searchKeys":["GatewayNotFoundException","class GatewayNotFoundException : Exception","dev.kord.core.exception.GatewayNotFoundException"]},{"name":"class GlobalAutoCompleteInteraction(val data: InteractionData, val kord: Kord, val supplier: EntitySupplier = kord.defaultSupplier) : AutoCompleteInteraction, GlobalInteraction","description":"dev.kord.core.entity.interaction.GlobalAutoCompleteInteraction","location":"core/dev.kord.core.entity.interaction/-global-auto-complete-interaction/index.html","searchKeys":["GlobalAutoCompleteInteraction","class GlobalAutoCompleteInteraction(val data: InteractionData, val kord: Kord, val supplier: EntitySupplier = kord.defaultSupplier) : AutoCompleteInteraction, GlobalInteraction","dev.kord.core.entity.interaction.GlobalAutoCompleteInteraction"]},{"name":"class GlobalAutoCompleteInteractionCreateEvent(val kord: Kord, val shard: Int, val interaction: GlobalAutoCompleteInteraction, val customContext: Any?) : AutoCompleteInteractionCreateEvent","description":"dev.kord.core.event.interaction.GlobalAutoCompleteInteractionCreateEvent","location":"core/dev.kord.core.event.interaction/-global-auto-complete-interaction-create-event/index.html","searchKeys":["GlobalAutoCompleteInteractionCreateEvent","class GlobalAutoCompleteInteractionCreateEvent(val kord: Kord, val shard: Int, val interaction: GlobalAutoCompleteInteraction, val customContext: Any?) : AutoCompleteInteractionCreateEvent","dev.kord.core.event.interaction.GlobalAutoCompleteInteractionCreateEvent"]},{"name":"class GlobalButtonInteraction(val data: InteractionData, val kord: Kord, val supplier: EntitySupplier) : ButtonInteraction, GlobalComponentInteraction","description":"dev.kord.core.entity.interaction.GlobalButtonInteraction","location":"core/dev.kord.core.entity.interaction/-global-button-interaction/index.html","searchKeys":["GlobalButtonInteraction","class GlobalButtonInteraction(val data: InteractionData, val kord: Kord, val supplier: EntitySupplier) : ButtonInteraction, GlobalComponentInteraction","dev.kord.core.entity.interaction.GlobalButtonInteraction"]},{"name":"class GlobalButtonInteractionCreateEvent(val interaction: GlobalButtonInteraction, val kord: Kord, val shard: Int, val customContext: Any?) : ButtonInteractionCreateEvent, GlobalComponentInteractionCreateEvent","description":"dev.kord.core.event.interaction.GlobalButtonInteractionCreateEvent","location":"core/dev.kord.core.event.interaction/-global-button-interaction-create-event/index.html","searchKeys":["GlobalButtonInteractionCreateEvent","class GlobalButtonInteractionCreateEvent(val interaction: GlobalButtonInteraction, val kord: Kord, val shard: Int, val customContext: Any?) : ButtonInteractionCreateEvent, GlobalComponentInteractionCreateEvent","dev.kord.core.event.interaction.GlobalButtonInteractionCreateEvent"]},{"name":"class GlobalChatInputCommand(val data: ApplicationCommandData, val service: InteractionService) : ChatInputCommandCommand, GlobalApplicationCommand, GlobalChatInputCommandBehavior","description":"dev.kord.core.entity.application.GlobalChatInputCommand","location":"core/dev.kord.core.entity.application/-global-chat-input-command/index.html","searchKeys":["GlobalChatInputCommand","class GlobalChatInputCommand(val data: ApplicationCommandData, val service: InteractionService) : ChatInputCommandCommand, GlobalApplicationCommand, GlobalChatInputCommandBehavior","dev.kord.core.entity.application.GlobalChatInputCommand"]},{"name":"class GlobalChatInputCommandInteraction(val data: InteractionData, val kord: Kord, val supplier: EntitySupplier) : ChatInputCommandInteraction, GlobalApplicationCommandInteraction","description":"dev.kord.core.entity.interaction.GlobalChatInputCommandInteraction","location":"core/dev.kord.core.entity.interaction/-global-chat-input-command-interaction/index.html","searchKeys":["GlobalChatInputCommandInteraction","class GlobalChatInputCommandInteraction(val data: InteractionData, val kord: Kord, val supplier: EntitySupplier) : ChatInputCommandInteraction, GlobalApplicationCommandInteraction","dev.kord.core.entity.interaction.GlobalChatInputCommandInteraction"]},{"name":"class GlobalChatInputCommandInteractionCreateEvent(val interaction: GlobalChatInputCommandInteraction, val kord: Kord, val shard: Int, val customContext: Any?) : GlobalApplicationCommandInteractionCreateEvent, ChatInputCommandInteractionCreateEvent","description":"dev.kord.core.event.interaction.GlobalChatInputCommandInteractionCreateEvent","location":"core/dev.kord.core.event.interaction/-global-chat-input-command-interaction-create-event/index.html","searchKeys":["GlobalChatInputCommandInteractionCreateEvent","class GlobalChatInputCommandInteractionCreateEvent(val interaction: GlobalChatInputCommandInteraction, val kord: Kord, val shard: Int, val customContext: Any?) : GlobalApplicationCommandInteractionCreateEvent, ChatInputCommandInteractionCreateEvent","dev.kord.core.event.interaction.GlobalChatInputCommandInteractionCreateEvent"]},{"name":"class GlobalMessageCommand(val data: ApplicationCommandData, val service: InteractionService) : GlobalApplicationCommand, MessageCommand, GlobalMessageCommandBehavior","description":"dev.kord.core.entity.application.GlobalMessageCommand","location":"core/dev.kord.core.entity.application/-global-message-command/index.html","searchKeys":["GlobalMessageCommand","class GlobalMessageCommand(val data: ApplicationCommandData, val service: InteractionService) : GlobalApplicationCommand, MessageCommand, GlobalMessageCommandBehavior","dev.kord.core.entity.application.GlobalMessageCommand"]},{"name":"class GlobalMessageCommandInteraction(val data: InteractionData, val kord: Kord, val supplier: EntitySupplier) : MessageCommandInteraction, GlobalApplicationCommandInteraction","description":"dev.kord.core.entity.interaction.GlobalMessageCommandInteraction","location":"core/dev.kord.core.entity.interaction/-global-message-command-interaction/index.html","searchKeys":["GlobalMessageCommandInteraction","class GlobalMessageCommandInteraction(val data: InteractionData, val kord: Kord, val supplier: EntitySupplier) : MessageCommandInteraction, GlobalApplicationCommandInteraction","dev.kord.core.entity.interaction.GlobalMessageCommandInteraction"]},{"name":"class GlobalMessageCommandInteractionCreateEvent(val interaction: GlobalMessageCommandInteraction, val kord: Kord, val shard: Int, val customContext: Any?) : GlobalApplicationCommandInteractionCreateEvent, MessageCommandInteractionCreateEvent","description":"dev.kord.core.event.interaction.GlobalMessageCommandInteractionCreateEvent","location":"core/dev.kord.core.event.interaction/-global-message-command-interaction-create-event/index.html","searchKeys":["GlobalMessageCommandInteractionCreateEvent","class GlobalMessageCommandInteractionCreateEvent(val interaction: GlobalMessageCommandInteraction, val kord: Kord, val shard: Int, val customContext: Any?) : GlobalApplicationCommandInteractionCreateEvent, MessageCommandInteractionCreateEvent","dev.kord.core.event.interaction.GlobalMessageCommandInteractionCreateEvent"]},{"name":"class GlobalModalSubmitInteraction(val data: InteractionData, val kord: Kord, val supplier: EntitySupplier = kord.defaultSupplier) : ModalSubmitInteraction, GlobalInteraction","description":"dev.kord.core.entity.interaction.GlobalModalSubmitInteraction","location":"core/dev.kord.core.entity.interaction/-global-modal-submit-interaction/index.html","searchKeys":["GlobalModalSubmitInteraction","class GlobalModalSubmitInteraction(val data: InteractionData, val kord: Kord, val supplier: EntitySupplier = kord.defaultSupplier) : ModalSubmitInteraction, GlobalInteraction","dev.kord.core.entity.interaction.GlobalModalSubmitInteraction"]},{"name":"class GlobalModalSubmitInteractionCreateEvent(val interaction: GlobalModalSubmitInteraction, val shard: Int, val kord: Kord, val customContext: Any?) : ModalSubmitInteractionCreateEvent","description":"dev.kord.core.event.interaction.GlobalModalSubmitInteractionCreateEvent","location":"core/dev.kord.core.event.interaction/-global-modal-submit-interaction-create-event/index.html","searchKeys":["GlobalModalSubmitInteractionCreateEvent","class GlobalModalSubmitInteractionCreateEvent(val interaction: GlobalModalSubmitInteraction, val shard: Int, val kord: Kord, val customContext: Any?) : ModalSubmitInteractionCreateEvent","dev.kord.core.event.interaction.GlobalModalSubmitInteractionCreateEvent"]},{"name":"class GlobalSelectMenuInteraction(val data: InteractionData, val kord: Kord, val supplier: EntitySupplier) : SelectMenuInteraction, GlobalComponentInteraction","description":"dev.kord.core.entity.interaction.GlobalSelectMenuInteraction","location":"core/dev.kord.core.entity.interaction/-global-select-menu-interaction/index.html","searchKeys":["GlobalSelectMenuInteraction","class GlobalSelectMenuInteraction(val data: InteractionData, val kord: Kord, val supplier: EntitySupplier) : SelectMenuInteraction, GlobalComponentInteraction","dev.kord.core.entity.interaction.GlobalSelectMenuInteraction"]},{"name":"class GlobalSelectMenuInteractionCreateEvent(val interaction: GlobalSelectMenuInteraction, val kord: Kord, val shard: Int, val customContext: Any?) : SelectMenuInteractionCreateEvent, GlobalComponentInteractionCreateEvent","description":"dev.kord.core.event.interaction.GlobalSelectMenuInteractionCreateEvent","location":"core/dev.kord.core.event.interaction/-global-select-menu-interaction-create-event/index.html","searchKeys":["GlobalSelectMenuInteractionCreateEvent","class GlobalSelectMenuInteractionCreateEvent(val interaction: GlobalSelectMenuInteraction, val kord: Kord, val shard: Int, val customContext: Any?) : SelectMenuInteractionCreateEvent, GlobalComponentInteractionCreateEvent","dev.kord.core.event.interaction.GlobalSelectMenuInteractionCreateEvent"]},{"name":"class GlobalUserCommand(val data: ApplicationCommandData, val service: InteractionService) : GlobalApplicationCommand, UserCommand, GlobalUserCommandBehavior","description":"dev.kord.core.entity.application.GlobalUserCommand","location":"core/dev.kord.core.entity.application/-global-user-command/index.html","searchKeys":["GlobalUserCommand","class GlobalUserCommand(val data: ApplicationCommandData, val service: InteractionService) : GlobalApplicationCommand, UserCommand, GlobalUserCommandBehavior","dev.kord.core.entity.application.GlobalUserCommand"]},{"name":"class GlobalUserCommandInteraction(val data: InteractionData, val kord: Kord, val supplier: EntitySupplier) : UserCommandInteraction, GlobalApplicationCommandInteraction","description":"dev.kord.core.entity.interaction.GlobalUserCommandInteraction","location":"core/dev.kord.core.entity.interaction/-global-user-command-interaction/index.html","searchKeys":["GlobalUserCommandInteraction","class GlobalUserCommandInteraction(val data: InteractionData, val kord: Kord, val supplier: EntitySupplier) : UserCommandInteraction, GlobalApplicationCommandInteraction","dev.kord.core.entity.interaction.GlobalUserCommandInteraction"]},{"name":"class GlobalUserCommandInteractionCreateEvent(val interaction: GlobalUserCommandInteraction, val kord: Kord, val shard: Int, val customContext: Any?) : GlobalApplicationCommandInteractionCreateEvent, UserCommandInteractionCreateEvent","description":"dev.kord.core.event.interaction.GlobalUserCommandInteractionCreateEvent","location":"core/dev.kord.core.event.interaction/-global-user-command-interaction-create-event/index.html","searchKeys":["GlobalUserCommandInteractionCreateEvent","class GlobalUserCommandInteractionCreateEvent(val interaction: GlobalUserCommandInteraction, val kord: Kord, val shard: Int, val customContext: Any?) : GlobalApplicationCommandInteractionCreateEvent, UserCommandInteractionCreateEvent","dev.kord.core.event.interaction.GlobalUserCommandInteractionCreateEvent"]},{"name":"class GroupCommand(val data: ApplicationInteractionData, val kord: Kord) : InteractionCommand","description":"dev.kord.core.entity.interaction.GroupCommand","location":"core/dev.kord.core.entity.interaction/-group-command/index.html","searchKeys":["GroupCommand","class GroupCommand(val data: ApplicationInteractionData, val kord: Kord) : InteractionCommand","dev.kord.core.entity.interaction.GroupCommand"]},{"name":"class Guild(val data: GuildData, val kord: Kord, val supplier: EntitySupplier = kord.defaultSupplier) : GuildBehavior","description":"dev.kord.core.entity.Guild","location":"core/dev.kord.core.entity/-guild/index.html","searchKeys":["Guild","class Guild(val data: GuildData, val kord: Kord, val supplier: EntitySupplier = kord.defaultSupplier) : GuildBehavior","dev.kord.core.entity.Guild"]},{"name":"class GuildApplicationCommandPermission(val data: GuildApplicationCommandPermissionData)","description":"dev.kord.core.entity.application.GuildApplicationCommandPermission","location":"core/dev.kord.core.entity.application/-guild-application-command-permission/index.html","searchKeys":["GuildApplicationCommandPermission","class GuildApplicationCommandPermission(val data: GuildApplicationCommandPermissionData)","dev.kord.core.entity.application.GuildApplicationCommandPermission"]},{"name":"class GuildAutoCompleteInteraction(val data: InteractionData, val kord: Kord, val supplier: EntitySupplier = kord.defaultSupplier) : AutoCompleteInteraction, GuildInteraction","description":"dev.kord.core.entity.interaction.GuildAutoCompleteInteraction","location":"core/dev.kord.core.entity.interaction/-guild-auto-complete-interaction/index.html","searchKeys":["GuildAutoCompleteInteraction","class GuildAutoCompleteInteraction(val data: InteractionData, val kord: Kord, val supplier: EntitySupplier = kord.defaultSupplier) : AutoCompleteInteraction, GuildInteraction","dev.kord.core.entity.interaction.GuildAutoCompleteInteraction"]},{"name":"class GuildAutoCompleteInteractionCreateEvent(val kord: Kord, val shard: Int, val interaction: GuildAutoCompleteInteraction, val customContext: Any?) : AutoCompleteInteractionCreateEvent","description":"dev.kord.core.event.interaction.GuildAutoCompleteInteractionCreateEvent","location":"core/dev.kord.core.event.interaction/-guild-auto-complete-interaction-create-event/index.html","searchKeys":["GuildAutoCompleteInteractionCreateEvent","class GuildAutoCompleteInteractionCreateEvent(val kord: Kord, val shard: Int, val interaction: GuildAutoCompleteInteraction, val customContext: Any?) : AutoCompleteInteractionCreateEvent","dev.kord.core.event.interaction.GuildAutoCompleteInteractionCreateEvent"]},{"name":"class GuildButtonInteraction(val data: InteractionData, val kord: Kord, val supplier: EntitySupplier) : ButtonInteraction, GuildComponentInteraction","description":"dev.kord.core.entity.interaction.GuildButtonInteraction","location":"core/dev.kord.core.entity.interaction/-guild-button-interaction/index.html","searchKeys":["GuildButtonInteraction","class GuildButtonInteraction(val data: InteractionData, val kord: Kord, val supplier: EntitySupplier) : ButtonInteraction, GuildComponentInteraction","dev.kord.core.entity.interaction.GuildButtonInteraction"]},{"name":"class GuildButtonInteractionCreateEvent(val interaction: GuildButtonInteraction, val kord: Kord, val shard: Int, val customContext: Any?) : ButtonInteractionCreateEvent, GuildComponentInteractionCreateEvent","description":"dev.kord.core.event.interaction.GuildButtonInteractionCreateEvent","location":"core/dev.kord.core.event.interaction/-guild-button-interaction-create-event/index.html","searchKeys":["GuildButtonInteractionCreateEvent","class GuildButtonInteractionCreateEvent(val interaction: GuildButtonInteraction, val kord: Kord, val shard: Int, val customContext: Any?) : ButtonInteractionCreateEvent, GuildComponentInteractionCreateEvent","dev.kord.core.event.interaction.GuildButtonInteractionCreateEvent"]},{"name":"class GuildChatInputCommand(val data: ApplicationCommandData, val service: InteractionService) : ChatInputCommandCommand, GuildApplicationCommand, GuildChatInputCommandBehavior","description":"dev.kord.core.entity.application.GuildChatInputCommand","location":"core/dev.kord.core.entity.application/-guild-chat-input-command/index.html","searchKeys":["GuildChatInputCommand","class GuildChatInputCommand(val data: ApplicationCommandData, val service: InteractionService) : ChatInputCommandCommand, GuildApplicationCommand, GuildChatInputCommandBehavior","dev.kord.core.entity.application.GuildChatInputCommand"]},{"name":"class GuildChatInputCommandInteraction(val data: InteractionData, val kord: Kord, val supplier: EntitySupplier) : ChatInputCommandInteraction, GuildApplicationCommandInteraction","description":"dev.kord.core.entity.interaction.GuildChatInputCommandInteraction","location":"core/dev.kord.core.entity.interaction/-guild-chat-input-command-interaction/index.html","searchKeys":["GuildChatInputCommandInteraction","class GuildChatInputCommandInteraction(val data: InteractionData, val kord: Kord, val supplier: EntitySupplier) : ChatInputCommandInteraction, GuildApplicationCommandInteraction","dev.kord.core.entity.interaction.GuildChatInputCommandInteraction"]},{"name":"class GuildChatInputCommandInteractionCreateEvent(val interaction: GuildChatInputCommandInteraction, val kord: Kord, val shard: Int, val customContext: Any?) : GuildApplicationCommandInteractionCreateEvent, ChatInputCommandInteractionCreateEvent","description":"dev.kord.core.event.interaction.GuildChatInputCommandInteractionCreateEvent","location":"core/dev.kord.core.event.interaction/-guild-chat-input-command-interaction-create-event/index.html","searchKeys":["GuildChatInputCommandInteractionCreateEvent","class GuildChatInputCommandInteractionCreateEvent(val interaction: GuildChatInputCommandInteraction, val kord: Kord, val shard: Int, val customContext: Any?) : GuildApplicationCommandInteractionCreateEvent, ChatInputCommandInteractionCreateEvent","dev.kord.core.event.interaction.GuildChatInputCommandInteractionCreateEvent"]},{"name":"class GuildCreateEvent(val guild: Guild, val shard: Int, val customContext: Any?) : Event","description":"dev.kord.core.event.guild.GuildCreateEvent","location":"core/dev.kord.core.event.guild/-guild-create-event/index.html","searchKeys":["GuildCreateEvent","class GuildCreateEvent(val guild: Guild, val shard: Int, val customContext: Any?) : Event","dev.kord.core.event.guild.GuildCreateEvent"]},{"name":"class GuildDeleteEvent(val guildId: Snowflake, val unavailable: Boolean, val guild: Guild?, val kord: Kord, val shard: Int, val customContext: Any?) : Event","description":"dev.kord.core.event.guild.GuildDeleteEvent","location":"core/dev.kord.core.event.guild/-guild-delete-event/index.html","searchKeys":["GuildDeleteEvent","class GuildDeleteEvent(val guildId: Snowflake, val unavailable: Boolean, val guild: Guild?, val kord: Kord, val shard: Int, val customContext: Any?) : Event","dev.kord.core.event.guild.GuildDeleteEvent"]},{"name":"class GuildEmoji(val data: EmojiData, val kord: Kord, val supplier: EntitySupplier = kord.defaultSupplier) : KordEntity, Strategizable","description":"dev.kord.core.entity.GuildEmoji","location":"core/dev.kord.core.entity/-guild-emoji/index.html","searchKeys":["GuildEmoji","class GuildEmoji(val data: EmojiData, val kord: Kord, val supplier: EntitySupplier = kord.defaultSupplier) : KordEntity, Strategizable","dev.kord.core.entity.GuildEmoji"]},{"name":"class GuildMessageCommand(val data: ApplicationCommandData, val service: InteractionService) : GuildApplicationCommand, MessageCommand, GuildMessageCommandBehavior","description":"dev.kord.core.entity.application.GuildMessageCommand","location":"core/dev.kord.core.entity.application/-guild-message-command/index.html","searchKeys":["GuildMessageCommand","class GuildMessageCommand(val data: ApplicationCommandData, val service: InteractionService) : GuildApplicationCommand, MessageCommand, GuildMessageCommandBehavior","dev.kord.core.entity.application.GuildMessageCommand"]},{"name":"class GuildMessageCommandInteraction(val data: InteractionData, val kord: Kord, val supplier: EntitySupplier) : MessageCommandInteraction, GuildApplicationCommandInteraction","description":"dev.kord.core.entity.interaction.GuildMessageCommandInteraction","location":"core/dev.kord.core.entity.interaction/-guild-message-command-interaction/index.html","searchKeys":["GuildMessageCommandInteraction","class GuildMessageCommandInteraction(val data: InteractionData, val kord: Kord, val supplier: EntitySupplier) : MessageCommandInteraction, GuildApplicationCommandInteraction","dev.kord.core.entity.interaction.GuildMessageCommandInteraction"]},{"name":"class GuildMessageCommandInteractionCreateEvent(val interaction: GuildMessageCommandInteraction, val kord: Kord, val shard: Int, val customContext: Any?) : GuildApplicationCommandInteractionCreateEvent, MessageCommandInteractionCreateEvent","description":"dev.kord.core.event.interaction.GuildMessageCommandInteractionCreateEvent","location":"core/dev.kord.core.event.interaction/-guild-message-command-interaction-create-event/index.html","searchKeys":["GuildMessageCommandInteractionCreateEvent","class GuildMessageCommandInteractionCreateEvent(val interaction: GuildMessageCommandInteraction, val kord: Kord, val shard: Int, val customContext: Any?) : GuildApplicationCommandInteractionCreateEvent, MessageCommandInteractionCreateEvent","dev.kord.core.event.interaction.GuildMessageCommandInteractionCreateEvent"]},{"name":"class GuildModalSubmitInteraction(val data: InteractionData, val kord: Kord, val supplier: EntitySupplier = kord.defaultSupplier) : ModalSubmitInteraction, GuildInteraction","description":"dev.kord.core.entity.interaction.GuildModalSubmitInteraction","location":"core/dev.kord.core.entity.interaction/-guild-modal-submit-interaction/index.html","searchKeys":["GuildModalSubmitInteraction","class GuildModalSubmitInteraction(val data: InteractionData, val kord: Kord, val supplier: EntitySupplier = kord.defaultSupplier) : ModalSubmitInteraction, GuildInteraction","dev.kord.core.entity.interaction.GuildModalSubmitInteraction"]},{"name":"class GuildModalSubmitInteractionCreateEvent(val interaction: GuildModalSubmitInteraction, val kord: Kord, val shard: Int, val customContext: Any?) : ModalSubmitInteractionCreateEvent","description":"dev.kord.core.event.interaction.GuildModalSubmitInteractionCreateEvent","location":"core/dev.kord.core.event.interaction/-guild-modal-submit-interaction-create-event/index.html","searchKeys":["GuildModalSubmitInteractionCreateEvent","class GuildModalSubmitInteractionCreateEvent(val interaction: GuildModalSubmitInteraction, val kord: Kord, val shard: Int, val customContext: Any?) : ModalSubmitInteractionCreateEvent","dev.kord.core.event.interaction.GuildModalSubmitInteractionCreateEvent"]},{"name":"class GuildPreview(val data: GuildPreviewData, val kord: Kord) : KordEntity","description":"dev.kord.core.entity.GuildPreview","location":"core/dev.kord.core.entity/-guild-preview/index.html","searchKeys":["GuildPreview","class GuildPreview(val data: GuildPreviewData, val kord: Kord) : KordEntity","dev.kord.core.entity.GuildPreview"]},{"name":"class GuildPreviewData(val id: Snowflake, val name: String, val icon: String? = null, val splash: String? = null, val discoverySplash: String? = null, val emojis: List<EmojiData>, val features: List<GuildFeature>, val approximateMemberCount: Int, val approximatePresenceCount: Int, val description: String? = null, val stickers: List<StickerData>)","description":"dev.kord.core.cache.data.GuildPreviewData","location":"core/dev.kord.core.cache.data/-guild-preview-data/index.html","searchKeys":["GuildPreviewData","class GuildPreviewData(val id: Snowflake, val name: String, val icon: String? = null, val splash: String? = null, val discoverySplash: String? = null, val emojis: List<EmojiData>, val features: List<GuildFeature>, val approximateMemberCount: Int, val approximatePresenceCount: Int, val description: String? = null, val stickers: List<StickerData>)","dev.kord.core.cache.data.GuildPreviewData"]},{"name":"class GuildScheduledEvent(val data: GuildScheduledEventData, val kord: Kord, val supplier: EntitySupplier = kord.defaultSupplier) : GuildScheduledEventBehavior","description":"dev.kord.core.entity.GuildScheduledEvent","location":"core/dev.kord.core.entity/-guild-scheduled-event/index.html","searchKeys":["GuildScheduledEvent","class GuildScheduledEvent(val data: GuildScheduledEventData, val kord: Kord, val supplier: EntitySupplier = kord.defaultSupplier) : GuildScheduledEventBehavior","dev.kord.core.entity.GuildScheduledEvent"]},{"name":"class GuildSelectMenuInteraction(val data: InteractionData, val kord: Kord, val supplier: EntitySupplier) : SelectMenuInteraction, GuildComponentInteraction","description":"dev.kord.core.entity.interaction.GuildSelectMenuInteraction","location":"core/dev.kord.core.entity.interaction/-guild-select-menu-interaction/index.html","searchKeys":["GuildSelectMenuInteraction","class GuildSelectMenuInteraction(val data: InteractionData, val kord: Kord, val supplier: EntitySupplier) : SelectMenuInteraction, GuildComponentInteraction","dev.kord.core.entity.interaction.GuildSelectMenuInteraction"]},{"name":"class GuildSelectMenuInteractionCreateEvent(val interaction: GuildSelectMenuInteraction, val kord: Kord, val shard: Int, val customContext: Any?) : SelectMenuInteractionCreateEvent, GuildComponentInteractionCreateEvent","description":"dev.kord.core.event.interaction.GuildSelectMenuInteractionCreateEvent","location":"core/dev.kord.core.event.interaction/-guild-select-menu-interaction-create-event/index.html","searchKeys":["GuildSelectMenuInteractionCreateEvent","class GuildSelectMenuInteractionCreateEvent(val interaction: GuildSelectMenuInteraction, val kord: Kord, val shard: Int, val customContext: Any?) : SelectMenuInteractionCreateEvent, GuildComponentInteractionCreateEvent","dev.kord.core.event.interaction.GuildSelectMenuInteractionCreateEvent"]},{"name":"class GuildSticker(val data: StickerData, val kord: Kord, val supplier: EntitySupplier = kord.defaultSupplier) : Sticker, StickerBehavior","description":"dev.kord.core.entity.GuildSticker","location":"core/dev.kord.core.entity/-guild-sticker/index.html","searchKeys":["GuildSticker","class GuildSticker(val data: StickerData, val kord: Kord, val supplier: EntitySupplier = kord.defaultSupplier) : Sticker, StickerBehavior","dev.kord.core.entity.GuildSticker"]},{"name":"class GuildUpdateEvent(val guild: Guild, val old: Guild?, val shard: Int, val customContext: Any?) : Event","description":"dev.kord.core.event.guild.GuildUpdateEvent","location":"core/dev.kord.core.event.guild/-guild-update-event/index.html","searchKeys":["GuildUpdateEvent","class GuildUpdateEvent(val guild: Guild, val old: Guild?, val shard: Int, val customContext: Any?) : Event","dev.kord.core.event.guild.GuildUpdateEvent"]},{"name":"class GuildUserCommand(val data: ApplicationCommandData, val service: InteractionService) : GuildApplicationCommand, UserCommand, GuildUserCommandBehavior","description":"dev.kord.core.entity.application.GuildUserCommand","location":"core/dev.kord.core.entity.application/-guild-user-command/index.html","searchKeys":["GuildUserCommand","class GuildUserCommand(val data: ApplicationCommandData, val service: InteractionService) : GuildApplicationCommand, UserCommand, GuildUserCommandBehavior","dev.kord.core.entity.application.GuildUserCommand"]},{"name":"class GuildUserCommandInteraction(val data: InteractionData, val kord: Kord, val supplier: EntitySupplier) : UserCommandInteraction, GuildApplicationCommandInteraction","description":"dev.kord.core.entity.interaction.GuildUserCommandInteraction","location":"core/dev.kord.core.entity.interaction/-guild-user-command-interaction/index.html","searchKeys":["GuildUserCommandInteraction","class GuildUserCommandInteraction(val data: InteractionData, val kord: Kord, val supplier: EntitySupplier) : UserCommandInteraction, GuildApplicationCommandInteraction","dev.kord.core.entity.interaction.GuildUserCommandInteraction"]},{"name":"class GuildUserCommandInteractionCreateEvent(val interaction: GuildUserCommandInteraction, val kord: Kord, val shard: Int, val customContext: Any?) : GuildApplicationCommandInteractionCreateEvent, UserCommandInteractionCreateEvent","description":"dev.kord.core.event.interaction.GuildUserCommandInteractionCreateEvent","location":"core/dev.kord.core.event.interaction/-guild-user-command-interaction-create-event/index.html","searchKeys":["GuildUserCommandInteractionCreateEvent","class GuildUserCommandInteractionCreateEvent(val interaction: GuildUserCommandInteraction, val kord: Kord, val shard: Int, val customContext: Any?) : GuildApplicationCommandInteractionCreateEvent, UserCommandInteractionCreateEvent","dev.kord.core.event.interaction.GuildUserCommandInteractionCreateEvent"]},{"name":"class GuildWidget(val data: GuildWidgetData, val guildId: Snowflake, val kord: Kord, val supplier: EntitySupplier = kord.defaultSupplier) : KordObject, Strategizable","description":"dev.kord.core.entity.GuildWidget","location":"core/dev.kord.core.entity/-guild-widget/index.html","searchKeys":["GuildWidget","class GuildWidget(val data: GuildWidgetData, val guildId: Snowflake, val kord: Kord, val supplier: EntitySupplier = kord.defaultSupplier) : KordObject, Strategizable","dev.kord.core.entity.GuildWidget"]},{"name":"class IntegerOptionValue(val value: Long, val focused: Boolean) : OptionValue<Long> ","description":"dev.kord.core.entity.interaction.IntegerOptionValue","location":"core/dev.kord.core.entity.interaction/-integer-option-value/index.html","searchKeys":["IntegerOptionValue","class IntegerOptionValue(val value: Long, val focused: Boolean) : OptionValue<Long> ","dev.kord.core.entity.interaction.IntegerOptionValue"]},{"name":"class Integration(val data: IntegrationData, val kord: Kord, val supplier: EntitySupplier = kord.defaultSupplier) : KordEntity, Strategizable","description":"dev.kord.core.entity.Integration","location":"core/dev.kord.core.entity/-integration/index.html","searchKeys":["Integration","class Integration(val data: IntegrationData, val kord: Kord, val supplier: EntitySupplier = kord.defaultSupplier) : KordEntity, Strategizable","dev.kord.core.entity.Integration"]},{"name":"class IntegrationsUpdateEvent(val guildId: Snowflake, val kord: Kord, val shard: Int, val customContext: Any?, val supplier: EntitySupplier = kord.defaultSupplier) : Event, Strategizable","description":"dev.kord.core.event.guild.IntegrationsUpdateEvent","location":"core/dev.kord.core.event.guild/-integrations-update-event/index.html","searchKeys":["IntegrationsUpdateEvent","class IntegrationsUpdateEvent(val guildId: Snowflake, val kord: Kord, val shard: Int, val customContext: Any?, val supplier: EntitySupplier = kord.defaultSupplier) : Event, Strategizable","dev.kord.core.event.guild.IntegrationsUpdateEvent"]},{"name":"class Interaction(val data: MessageInteractionData, val kord: Kord, val supplier: EntitySupplier = kord.defaultSupplier) : KordEntity, Strategizable","description":"dev.kord.core.entity.Message.Interaction","location":"core/dev.kord.core.entity/-message/-interaction/index.html","searchKeys":["Interaction","class Interaction(val data: MessageInteractionData, val kord: Kord, val supplier: EntitySupplier = kord.defaultSupplier) : KordEntity, Strategizable","dev.kord.core.entity.Message.Interaction"]},{"name":"class InviteCreateEvent(val data: InviteCreateData, val kord: Kord, val shard: Int, val customContext: Any?, val supplier: EntitySupplier = kord.defaultSupplier) : Event, Strategizable","description":"dev.kord.core.event.guild.InviteCreateEvent","location":"core/dev.kord.core.event.guild/-invite-create-event/index.html","searchKeys":["InviteCreateEvent","class InviteCreateEvent(val data: InviteCreateData, val kord: Kord, val shard: Int, val customContext: Any?, val supplier: EntitySupplier = kord.defaultSupplier) : Event, Strategizable","dev.kord.core.event.guild.InviteCreateEvent"]},{"name":"class InviteDeleteEvent(val data: InviteDeleteData, val kord: Kord, val shard: Int, val customContext: Any?, val supplier: EntitySupplier = kord.defaultSupplier) : Event, Strategizable","description":"dev.kord.core.event.guild.InviteDeleteEvent","location":"core/dev.kord.core.event.guild/-invite-delete-event/index.html","searchKeys":["InviteDeleteEvent","class InviteDeleteEvent(val data: InviteDeleteData, val kord: Kord, val shard: Int, val customContext: Any?, val supplier: EntitySupplier = kord.defaultSupplier) : Event, Strategizable","dev.kord.core.event.guild.InviteDeleteEvent"]},{"name":"class InviteWithMetadata(val data: InviteWithMetadataData, val kord: Kord, val supplier: EntitySupplier = kord.defaultSupplier) : Invite","description":"dev.kord.core.entity.InviteWithMetadata","location":"core/dev.kord.core.entity/-invite-with-metadata/index.html","searchKeys":["InviteWithMetadata","class InviteWithMetadata(val data: InviteWithMetadataData, val kord: Kord, val supplier: EntitySupplier = kord.defaultSupplier) : Invite","dev.kord.core.entity.InviteWithMetadata"]},{"name":"class KeywordAutoModerationRule(val data: AutoModerationRuleData, val kord: Kord, val supplier: EntitySupplier) : AutoModerationRule, KeywordAutoModerationRuleBehavior","description":"dev.kord.core.entity.automoderation.KeywordAutoModerationRule","location":"core/dev.kord.core.entity.automoderation/-keyword-auto-moderation-rule/index.html","searchKeys":["KeywordAutoModerationRule","class KeywordAutoModerationRule(val data: AutoModerationRuleData, val kord: Kord, val supplier: EntitySupplier) : AutoModerationRule, KeywordAutoModerationRuleBehavior","dev.kord.core.entity.automoderation.KeywordAutoModerationRule"]},{"name":"class KeywordPresetAutoModerationRule(val data: AutoModerationRuleData, val kord: Kord, val supplier: EntitySupplier) : AutoModerationRule, KeywordPresetAutoModerationRuleBehavior","description":"dev.kord.core.entity.automoderation.KeywordPresetAutoModerationRule","location":"core/dev.kord.core.entity.automoderation/-keyword-preset-auto-moderation-rule/index.html","searchKeys":["KeywordPresetAutoModerationRule","class KeywordPresetAutoModerationRule(val data: AutoModerationRuleData, val kord: Kord, val supplier: EntitySupplier) : AutoModerationRule, KeywordPresetAutoModerationRuleBehavior","dev.kord.core.entity.automoderation.KeywordPresetAutoModerationRule"]},{"name":"class Kord(val resources: ClientResources, val cache: DataCache, val gateway: MasterGateway, val rest: RestClient, val selfId: Snowflake, eventFlow: MutableSharedFlow<Event>, dispatcher: CoroutineDispatcher, interceptor: GatewayEventInterceptor) : CoroutineScope","description":"dev.kord.core.Kord","location":"core/dev.kord.core/-kord/index.html","searchKeys":["Kord","class Kord(val resources: ClientResources, val cache: DataCache, val gateway: MasterGateway, val rest: RestClient, val selfId: Snowflake, eventFlow: MutableSharedFlow<Event>, dispatcher: CoroutineDispatcher, interceptor: GatewayEventInterceptor) : CoroutineScope","dev.kord.core.Kord"]},{"name":"class KordBuilder(val token: String)","description":"dev.kord.core.builder.kord.KordBuilder","location":"core/dev.kord.core.builder.kord/-kord-builder/index.html","searchKeys":["KordBuilder","class KordBuilder(val token: String)","dev.kord.core.builder.kord.KordBuilder"]},{"name":"class KordCacheBuilder","description":"dev.kord.core.cache.KordCacheBuilder","location":"core/dev.kord.core.cache/-kord-cache-builder/index.html","searchKeys":["KordCacheBuilder","class KordCacheBuilder","dev.kord.core.cache.KordCacheBuilder"]},{"name":"class KordInitializationException : Exception","description":"dev.kord.core.exception.KordInitializationException","location":"core/dev.kord.core.exception/-kord-initialization-exception/index.html","searchKeys":["KordInitializationException","class KordInitializationException : Exception","dev.kord.core.exception.KordInitializationException"]},{"name":"class KordProxyBuilder(var applicationId: Snowflake) : RestOnlyBuilder","description":"dev.kord.core.builder.kord.KordProxyBuilder","location":"core/dev.kord.core.builder.kord/-kord-proxy-builder/index.html","searchKeys":["KordProxyBuilder","class KordProxyBuilder(var applicationId: Snowflake) : RestOnlyBuilder","dev.kord.core.builder.kord.KordProxyBuilder"]},{"name":"class KordRestOnlyBuilder(var token: String) : RestOnlyBuilder","description":"dev.kord.core.builder.kord.KordRestOnlyBuilder","location":"core/dev.kord.core.builder.kord/-kord-rest-only-builder/index.html","searchKeys":["KordRestOnlyBuilder","class KordRestOnlyBuilder(var token: String) : RestOnlyBuilder","dev.kord.core.builder.kord.KordRestOnlyBuilder"]},{"name":"class LiveCancellationException(val event: Event, message: String? = null) : CancellationException","description":"dev.kord.core.live.exception.LiveCancellationException","location":"core/dev.kord.core.live.exception/-live-cancellation-exception/index.html","searchKeys":["LiveCancellationException","class LiveCancellationException(val event: Event, message: String? = null) : CancellationException","dev.kord.core.live.exception.LiveCancellationException"]},{"name":"class LiveCategory(channel: Category, coroutineScope: CoroutineScope = channel.kord + SupervisorJob(channel.kord.coroutineContext.job)) : LiveChannel, KordEntity","description":"dev.kord.core.live.channel.LiveCategory","location":"core/dev.kord.core.live.channel/-live-category/index.html","searchKeys":["LiveCategory","class LiveCategory(channel: Category, coroutineScope: CoroutineScope = channel.kord + SupervisorJob(channel.kord.coroutineContext.job)) : LiveChannel, KordEntity","dev.kord.core.live.channel.LiveCategory"]},{"name":"class LiveDmChannel(channel: DmChannel, coroutineScope: CoroutineScope = channel.kord + SupervisorJob(channel.kord.coroutineContext.job)) : LiveChannel, KordEntity","description":"dev.kord.core.live.channel.LiveDmChannel","location":"core/dev.kord.core.live.channel/-live-dm-channel/index.html","searchKeys":["LiveDmChannel","class LiveDmChannel(channel: DmChannel, coroutineScope: CoroutineScope = channel.kord + SupervisorJob(channel.kord.coroutineContext.job)) : LiveChannel, KordEntity","dev.kord.core.live.channel.LiveDmChannel"]},{"name":"class LiveGuild(guild: Guild, coroutineScope: CoroutineScope = guild.kord + SupervisorJob(guild.kord.coroutineContext.job)) : AbstractLiveKordEntity, KordEntity","description":"dev.kord.core.live.LiveGuild","location":"core/dev.kord.core.live/-live-guild/index.html","searchKeys":["LiveGuild","class LiveGuild(guild: Guild, coroutineScope: CoroutineScope = guild.kord + SupervisorJob(guild.kord.coroutineContext.job)) : AbstractLiveKordEntity, KordEntity","dev.kord.core.live.LiveGuild"]},{"name":"class LiveGuildChannel(channel: TopGuildChannel, coroutineScope: CoroutineScope = channel.kord + SupervisorJob(channel.kord.coroutineContext.job)) : LiveChannel, KordEntity","description":"dev.kord.core.live.channel.LiveGuildChannel","location":"core/dev.kord.core.live.channel/-live-guild-channel/index.html","searchKeys":["LiveGuildChannel","class LiveGuildChannel(channel: TopGuildChannel, coroutineScope: CoroutineScope = channel.kord + SupervisorJob(channel.kord.coroutineContext.job)) : LiveChannel, KordEntity","dev.kord.core.live.channel.LiveGuildChannel"]},{"name":"class LiveGuildMessageChannel(channel: TopGuildMessageChannel, coroutineScope: CoroutineScope = channel.kord + SupervisorJob(channel.kord.coroutineContext.job)) : LiveChannel, KordEntity","description":"dev.kord.core.live.channel.LiveGuildMessageChannel","location":"core/dev.kord.core.live.channel/-live-guild-message-channel/index.html","searchKeys":["LiveGuildMessageChannel","class LiveGuildMessageChannel(channel: TopGuildMessageChannel, coroutineScope: CoroutineScope = channel.kord + SupervisorJob(channel.kord.coroutineContext.job)) : LiveChannel, KordEntity","dev.kord.core.live.channel.LiveGuildMessageChannel"]},{"name":"class LiveMember(member: Member, coroutineScope: CoroutineScope = member.kord + SupervisorJob(member.kord.coroutineContext.job)) : AbstractLiveKordEntity, KordEntity","description":"dev.kord.core.live.LiveMember","location":"core/dev.kord.core.live/-live-member/index.html","searchKeys":["LiveMember","class LiveMember(member: Member, coroutineScope: CoroutineScope = member.kord + SupervisorJob(member.kord.coroutineContext.job)) : AbstractLiveKordEntity, KordEntity","dev.kord.core.live.LiveMember"]},{"name":"class LiveMessage(message: Message, val guildId: Snowflake?, coroutineScope: CoroutineScope = message.kord + SupervisorJob(message.kord.coroutineContext.job)) : AbstractLiveKordEntity, KordEntity","description":"dev.kord.core.live.LiveMessage","location":"core/dev.kord.core.live/-live-message/index.html","searchKeys":["LiveMessage","class LiveMessage(message: Message, val guildId: Snowflake?, coroutineScope: CoroutineScope = message.kord + SupervisorJob(message.kord.coroutineContext.job)) : AbstractLiveKordEntity, KordEntity","dev.kord.core.live.LiveMessage"]},{"name":"class LiveRole(role: Role, coroutineScope: CoroutineScope = role.kord + SupervisorJob(role.kord.coroutineContext.job)) : AbstractLiveKordEntity, KordEntity","description":"dev.kord.core.live.LiveRole","location":"core/dev.kord.core.live/-live-role/index.html","searchKeys":["LiveRole","class LiveRole(role: Role, coroutineScope: CoroutineScope = role.kord + SupervisorJob(role.kord.coroutineContext.job)) : AbstractLiveKordEntity, KordEntity","dev.kord.core.live.LiveRole"]},{"name":"class LiveUser(user: User, coroutineScope: CoroutineScope = user.kord + SupervisorJob(user.kord.coroutineContext.job)) : AbstractLiveKordEntity, KordEntity","description":"dev.kord.core.live.LiveUser","location":"core/dev.kord.core.live/-live-user/index.html","searchKeys":["LiveUser","class LiveUser(user: User, coroutineScope: CoroutineScope = user.kord + SupervisorJob(user.kord.coroutineContext.job)) : AbstractLiveKordEntity, KordEntity","dev.kord.core.live.LiveUser"]},{"name":"class LiveVoiceChannel(channel: VoiceChannel, coroutineScope: CoroutineScope = channel.kord + SupervisorJob(channel.kord.coroutineContext.job)) : LiveChannel, KordEntity","description":"dev.kord.core.live.channel.LiveVoiceChannel","location":"core/dev.kord.core.live.channel/-live-voice-channel/index.html","searchKeys":["LiveVoiceChannel","class LiveVoiceChannel(channel: VoiceChannel, coroutineScope: CoroutineScope = channel.kord + SupervisorJob(channel.kord.coroutineContext.job)) : LiveChannel, KordEntity","dev.kord.core.live.channel.LiveVoiceChannel"]},{"name":"class Member(val memberData: MemberData, userData: UserData, val kord: Kord, val supplier: EntitySupplier = kord.defaultSupplier) : User, MemberBehavior","description":"dev.kord.core.entity.Member","location":"core/dev.kord.core.entity/-member/index.html","searchKeys":["Member","class Member(val memberData: MemberData, userData: UserData, val kord: Kord, val supplier: EntitySupplier = kord.defaultSupplier) : User, MemberBehavior","dev.kord.core.entity.Member"]},{"name":"class MemberAvatar(guildId: Snowflake, userId: Snowflake, avatarHash: String, val kord: Kord) : Icon","description":"dev.kord.core.entity.Icon.MemberAvatar","location":"core/dev.kord.core.entity/-icon/-member-avatar/index.html","searchKeys":["MemberAvatar","class MemberAvatar(guildId: Snowflake, userId: Snowflake, avatarHash: String, val kord: Kord) : Icon","dev.kord.core.entity.Icon.MemberAvatar"]},{"name":"class MemberJoinEvent(val member: Member, val shard: Int, val customContext: Any?, val supplier: EntitySupplier = member.kord.defaultSupplier) : Event, Strategizable","description":"dev.kord.core.event.guild.MemberJoinEvent","location":"core/dev.kord.core.event.guild/-member-join-event/index.html","searchKeys":["MemberJoinEvent","class MemberJoinEvent(val member: Member, val shard: Int, val customContext: Any?, val supplier: EntitySupplier = member.kord.defaultSupplier) : Event, Strategizable","dev.kord.core.event.guild.MemberJoinEvent"]},{"name":"class MemberLeaveEvent(val user: User, val old: Member?, val guildId: Snowflake, val shard: Int, val customContext: Any?) : Event","description":"dev.kord.core.event.guild.MemberLeaveEvent","location":"core/dev.kord.core.event.guild/-member-leave-event/index.html","searchKeys":["MemberLeaveEvent","class MemberLeaveEvent(val user: User, val old: Member?, val guildId: Snowflake, val shard: Int, val customContext: Any?) : Event","dev.kord.core.event.guild.MemberLeaveEvent"]},{"name":"class MemberOptionValue(val value: Snowflake, val focused: Boolean, val resolvedObject: Member?) : UserOptionValue","description":"dev.kord.core.entity.interaction.MemberOptionValue","location":"core/dev.kord.core.entity.interaction/-member-option-value/index.html","searchKeys":["MemberOptionValue","class MemberOptionValue(val value: Snowflake, val focused: Boolean, val resolvedObject: Member?) : UserOptionValue","dev.kord.core.entity.interaction.MemberOptionValue"]},{"name":"class MemberUpdateEvent(val member: Member, val old: Member?, val kord: Kord, val shard: Int, val customContext: Any?, val supplier: EntitySupplier = kord.defaultSupplier) : Event, Strategizable","description":"dev.kord.core.event.guild.MemberUpdateEvent","location":"core/dev.kord.core.event.guild/-member-update-event/index.html","searchKeys":["MemberUpdateEvent","class MemberUpdateEvent(val member: Member, val old: Member?, val kord: Kord, val shard: Int, val customContext: Any?, val supplier: EntitySupplier = kord.defaultSupplier) : Event, Strategizable","dev.kord.core.event.guild.MemberUpdateEvent"]},{"name":"class MembersChunkEvent(val data: MembersChunkData, val kord: Kord, val shard: Int, val customContext: Any?, val supplier: EntitySupplier = kord.defaultSupplier) : Event, Strategizable","description":"dev.kord.core.event.guild.MembersChunkEvent","location":"core/dev.kord.core.event.guild/-members-chunk-event/index.html","searchKeys":["MembersChunkEvent","class MembersChunkEvent(val data: MembersChunkData, val kord: Kord, val shard: Int, val customContext: Any?, val supplier: EntitySupplier = kord.defaultSupplier) : Event, Strategizable","dev.kord.core.event.guild.MembersChunkEvent"]},{"name":"class MentionSpamAutoModerationRule(val data: AutoModerationRuleData, val kord: Kord, val supplier: EntitySupplier) : AutoModerationRule, MentionSpamAutoModerationRuleBehavior","description":"dev.kord.core.entity.automoderation.MentionSpamAutoModerationRule","location":"core/dev.kord.core.entity.automoderation/-mention-spam-auto-moderation-rule/index.html","searchKeys":["MentionSpamAutoModerationRule","class MentionSpamAutoModerationRule(val data: AutoModerationRuleData, val kord: Kord, val supplier: EntitySupplier) : AutoModerationRule, MentionSpamAutoModerationRuleBehavior","dev.kord.core.entity.automoderation.MentionSpamAutoModerationRule"]},{"name":"class MentionableOptionValue(val value: Snowflake, val focused: Boolean, val resolvedObject: Entity?) : ResolvableOptionValue<Entity> ","description":"dev.kord.core.entity.interaction.MentionableOptionValue","location":"core/dev.kord.core.entity.interaction/-mentionable-option-value/index.html","searchKeys":["MentionableOptionValue","class MentionableOptionValue(val value: Snowflake, val focused: Boolean, val resolvedObject: Entity?) : ResolvableOptionValue<Entity> ","dev.kord.core.entity.interaction.MentionableOptionValue"]},{"name":"class Message(val data: MessageData, val kord: Kord, val supplier: EntitySupplier = kord.defaultSupplier) : MessageBehavior","description":"dev.kord.core.entity.Message","location":"core/dev.kord.core.entity/-message/index.html","searchKeys":["Message","class Message(val data: MessageData, val kord: Kord, val supplier: EntitySupplier = kord.defaultSupplier) : MessageBehavior","dev.kord.core.entity.Message"]},{"name":"class MessageBulkDeleteEvent(val messageIds: Set<Snowflake>, val messages: Set<Message>, val channelId: Snowflake, val guildId: Snowflake?, val kord: Kord, val shard: Int, val customContext: Any?, val supplier: EntitySupplier = kord.defaultSupplier) : Event, Strategizable","description":"dev.kord.core.event.message.MessageBulkDeleteEvent","location":"core/dev.kord.core.event.message/-message-bulk-delete-event/index.html","searchKeys":["MessageBulkDeleteEvent","class MessageBulkDeleteEvent(val messageIds: Set<Snowflake>, val messages: Set<Message>, val channelId: Snowflake, val guildId: Snowflake?, val kord: Kord, val shard: Int, val customContext: Any?, val supplier: EntitySupplier = kord.defaultSupplier) : Event, Strategizable","dev.kord.core.event.message.MessageBulkDeleteEvent"]},{"name":"class MessageCommandCreateEvent(val command: GuildMessageCommand, val kord: Kord, val shard: Int, val customContext: Any?) : ApplicationCommandCreateEvent","description":"dev.kord.core.event.interaction.MessageCommandCreateEvent","location":"core/dev.kord.core.event.interaction/-message-command-create-event/index.html","searchKeys":["MessageCommandCreateEvent","class MessageCommandCreateEvent(val command: GuildMessageCommand, val kord: Kord, val shard: Int, val customContext: Any?) : ApplicationCommandCreateEvent","dev.kord.core.event.interaction.MessageCommandCreateEvent"]},{"name":"class MessageCommandDeleteEvent(val command: GuildMessageCommand, val kord: Kord, val shard: Int, val customContext: Any?) : ApplicationCommandDeleteEvent","description":"dev.kord.core.event.interaction.MessageCommandDeleteEvent","location":"core/dev.kord.core.event.interaction/-message-command-delete-event/index.html","searchKeys":["MessageCommandDeleteEvent","class MessageCommandDeleteEvent(val command: GuildMessageCommand, val kord: Kord, val shard: Int, val customContext: Any?) : ApplicationCommandDeleteEvent","dev.kord.core.event.interaction.MessageCommandDeleteEvent"]},{"name":"class MessageCommandUpdateEvent(val command: GuildMessageCommand, val kord: Kord, val shard: Int, val customContext: Any?) : ApplicationCommandUpdateEvent","description":"dev.kord.core.event.interaction.MessageCommandUpdateEvent","location":"core/dev.kord.core.event.interaction/-message-command-update-event/index.html","searchKeys":["MessageCommandUpdateEvent","class MessageCommandUpdateEvent(val command: GuildMessageCommand, val kord: Kord, val shard: Int, val customContext: Any?) : ApplicationCommandUpdateEvent","dev.kord.core.event.interaction.MessageCommandUpdateEvent"]},{"name":"class MessageCreateEvent(val message: Message, val guildId: Snowflake?, val member: Member?, val shard: Int, val customContext: Any?, val supplier: EntitySupplier = message.kord.defaultSupplier) : Event, Strategizable","description":"dev.kord.core.event.message.MessageCreateEvent","location":"core/dev.kord.core.event.message/-message-create-event/index.html","searchKeys":["MessageCreateEvent","class MessageCreateEvent(val message: Message, val guildId: Snowflake?, val member: Member?, val shard: Int, val customContext: Any?, val supplier: EntitySupplier = message.kord.defaultSupplier) : Event, Strategizable","dev.kord.core.event.message.MessageCreateEvent"]},{"name":"class MessageDeleteEvent(val messageId: Snowflake, val channelId: Snowflake, val guildId: Snowflake?, val message: Message?, val kord: Kord, val shard: Int, val customContext: Any?, val supplier: EntitySupplier = kord.defaultSupplier) : Event, Strategizable","description":"dev.kord.core.event.message.MessageDeleteEvent","location":"core/dev.kord.core.event.message/-message-delete-event/index.html","searchKeys":["MessageDeleteEvent","class MessageDeleteEvent(val messageId: Snowflake, val channelId: Snowflake, val guildId: Snowflake?, val message: Message?, val kord: Kord, val shard: Int, val customContext: Any?, val supplier: EntitySupplier = kord.defaultSupplier) : Event, Strategizable","dev.kord.core.event.message.MessageDeleteEvent"]},{"name":"class MessageReference(val data: MessageReferenceData, val kord: Kord) : KordObject","description":"dev.kord.core.entity.MessageReference","location":"core/dev.kord.core.entity/-message-reference/index.html","searchKeys":["MessageReference","class MessageReference(val data: MessageReferenceData, val kord: Kord) : KordObject","dev.kord.core.entity.MessageReference"]},{"name":"class MessageUpdateEvent(val messageId: Snowflake, val channelId: Snowflake, val new: DiscordPartialMessage, val old: Message?, val kord: Kord, val shard: Int, val customContext: Any?, val supplier: EntitySupplier = kord.defaultSupplier) : Event, Strategizable","description":"dev.kord.core.event.message.MessageUpdateEvent","location":"core/dev.kord.core.event.message/-message-update-event/index.html","searchKeys":["MessageUpdateEvent","class MessageUpdateEvent(val messageId: Snowflake, val channelId: Snowflake, val new: DiscordPartialMessage, val old: Message?, val kord: Kord, val shard: Int, val customContext: Any?, val supplier: EntitySupplier = kord.defaultSupplier) : Event, Strategizable","dev.kord.core.event.message.MessageUpdateEvent"]},{"name":"class Mobile(val status: PresenceStatus) : ClientStatus.Client","description":"dev.kord.core.entity.ClientStatus.Client.Mobile","location":"core/dev.kord.core.entity/-client-status/-client/-mobile/index.html","searchKeys":["Mobile","class Mobile(val status: PresenceStatus) : ClientStatus.Client","dev.kord.core.entity.ClientStatus.Client.Mobile"]},{"name":"class NewsChannel(val data: ChannelData, val kord: Kord, val supplier: EntitySupplier = kord.defaultSupplier) : CategorizableChannel, TopGuildMessageChannel, ThreadParentChannel, NewsChannelBehavior","description":"dev.kord.core.entity.channel.NewsChannel","location":"core/dev.kord.core.entity.channel/-news-channel/index.html","searchKeys":["NewsChannel","class NewsChannel(val data: ChannelData, val kord: Kord, val supplier: EntitySupplier = kord.defaultSupplier) : CategorizableChannel, TopGuildMessageChannel, ThreadParentChannel, NewsChannelBehavior","dev.kord.core.entity.channel.NewsChannel"]},{"name":"class NewsChannelCreateEvent(val channel: NewsChannel, val shard: Int, val customContext: Any?) : ChannelCreateEvent","description":"dev.kord.core.event.channel.NewsChannelCreateEvent","location":"core/dev.kord.core.event.channel/-news-channel-create-event/index.html","searchKeys":["NewsChannelCreateEvent","class NewsChannelCreateEvent(val channel: NewsChannel, val shard: Int, val customContext: Any?) : ChannelCreateEvent","dev.kord.core.event.channel.NewsChannelCreateEvent"]},{"name":"class NewsChannelDeleteEvent(val channel: NewsChannel, val shard: Int, val customContext: Any?) : ChannelDeleteEvent","description":"dev.kord.core.event.channel.NewsChannelDeleteEvent","location":"core/dev.kord.core.event.channel/-news-channel-delete-event/index.html","searchKeys":["NewsChannelDeleteEvent","class NewsChannelDeleteEvent(val channel: NewsChannel, val shard: Int, val customContext: Any?) : ChannelDeleteEvent","dev.kord.core.event.channel.NewsChannelDeleteEvent"]},{"name":"class NewsChannelThread(val data: ChannelData, val kord: Kord, val supplier: EntitySupplier = kord.defaultSupplier) : ThreadChannel","description":"dev.kord.core.entity.channel.thread.NewsChannelThread","location":"core/dev.kord.core.entity.channel.thread/-news-channel-thread/index.html","searchKeys":["NewsChannelThread","class NewsChannelThread(val data: ChannelData, val kord: Kord, val supplier: EntitySupplier = kord.defaultSupplier) : ThreadChannel","dev.kord.core.entity.channel.thread.NewsChannelThread"]},{"name":"class NewsChannelThreadCreateEvent(val channel: NewsChannelThread, val shard: Int, val customContext: Any?) : ThreadChannelCreateEvent","description":"dev.kord.core.event.channel.thread.NewsChannelThreadCreateEvent","location":"core/dev.kord.core.event.channel.thread/-news-channel-thread-create-event/index.html","searchKeys":["NewsChannelThreadCreateEvent","class NewsChannelThreadCreateEvent(val channel: NewsChannelThread, val shard: Int, val customContext: Any?) : ThreadChannelCreateEvent","dev.kord.core.event.channel.thread.NewsChannelThreadCreateEvent"]},{"name":"class NewsChannelThreadDeleteEvent(val channel: DeletedThreadChannel, val old: NewsChannelThread?, val shard: Int, val customContext: Any?) : ThreadChannelDeleteEvent","description":"dev.kord.core.event.channel.thread.NewsChannelThreadDeleteEvent","location":"core/dev.kord.core.event.channel.thread/-news-channel-thread-delete-event/index.html","searchKeys":["NewsChannelThreadDeleteEvent","class NewsChannelThreadDeleteEvent(val channel: DeletedThreadChannel, val old: NewsChannelThread?, val shard: Int, val customContext: Any?) : ThreadChannelDeleteEvent","dev.kord.core.event.channel.thread.NewsChannelThreadDeleteEvent"]},{"name":"class NewsChannelThreadUpdateEvent(val channel: NewsChannelThread, val old: NewsChannelThread?, val shard: Int, val customContext: Any?) : ThreadUpdateEvent","description":"dev.kord.core.event.channel.thread.NewsChannelThreadUpdateEvent","location":"core/dev.kord.core.event.channel.thread/-news-channel-thread-update-event/index.html","searchKeys":["NewsChannelThreadUpdateEvent","class NewsChannelThreadUpdateEvent(val channel: NewsChannelThread, val old: NewsChannelThread?, val shard: Int, val customContext: Any?) : ThreadUpdateEvent","dev.kord.core.event.channel.thread.NewsChannelThreadUpdateEvent"]},{"name":"class NewsChannelUpdateEvent(val channel: NewsChannel, val old: NewsChannel?, val shard: Int, val customContext: Any?) : ChannelUpdateEvent","description":"dev.kord.core.event.channel.NewsChannelUpdateEvent","location":"core/dev.kord.core.event.channel/-news-channel-update-event/index.html","searchKeys":["NewsChannelUpdateEvent","class NewsChannelUpdateEvent(val channel: NewsChannel, val old: NewsChannel?, val shard: Int, val customContext: Any?) : ChannelUpdateEvent","dev.kord.core.event.channel.NewsChannelUpdateEvent"]},{"name":"class NumberOptionValue(val value: Double, val focused: Boolean) : OptionValue<Double> ","description":"dev.kord.core.entity.interaction.NumberOptionValue","location":"core/dev.kord.core.entity.interaction/-number-option-value/index.html","searchKeys":["NumberOptionValue","class NumberOptionValue(val value: Double, val focused: Boolean) : OptionValue<Double> ","dev.kord.core.entity.interaction.NumberOptionValue"]},{"name":"class PartialApplication(val data: PartialApplicationData, val kord: Kord, val supplier: EntitySupplier = kord.defaultSupplier) : BaseApplication","description":"dev.kord.core.entity.PartialApplication","location":"core/dev.kord.core.entity/-partial-application/index.html","searchKeys":["PartialApplication","class PartialApplication(val data: PartialApplicationData, val kord: Kord, val supplier: EntitySupplier = kord.defaultSupplier) : BaseApplication","dev.kord.core.entity.PartialApplication"]},{"name":"class PartialGuild(val data: PartialGuildData, val kord: Kord, val supplier: EntitySupplier = kord.defaultSupplier) : GuildBehavior","description":"dev.kord.core.entity.PartialGuild","location":"core/dev.kord.core.entity/-partial-guild/index.html","searchKeys":["PartialGuild","class PartialGuild(val data: PartialGuildData, val kord: Kord, val supplier: EntitySupplier = kord.defaultSupplier) : GuildBehavior","dev.kord.core.entity.PartialGuild"]},{"name":"class PartialGuildData(val id: Snowflake, val name: String, val icon: String? = null, val owner: OptionalBoolean = OptionalBoolean.Missing, val permissions: Optional<Permissions> = Optional.Missing(), val features: List<GuildFeature>, val welcomeScreen: Optional<WelcomeScreenData> = Optional.Missing(), val vanityUrlCode: Optional<String?> = Optional.Missing(), val description: Optional<String?> = Optional.Missing(), val banner: Optional<String?> = Optional.Missing(), val splash: Optional<String?> = Optional.Missing(), val nsfwLevel: Optional<NsfwLevel> = Optional.Missing(), val verificationLevel: Optional<VerificationLevel> = Optional.Missing(), val stageInstances: Optional<List<StageInstanceData>> = Optional.Missing(), val stickers: Optional<List<StickerData>> = Optional.Missing(), val guildScheduledEvents: Optional<List<GuildScheduledEventData>> = Optional.Missing(), val premiumProgressBarEnabled: OptionalBoolean = OptionalBoolean.Missing)","description":"dev.kord.core.cache.data.PartialGuildData","location":"core/dev.kord.core.cache.data/-partial-guild-data/index.html","searchKeys":["PartialGuildData","class PartialGuildData(val id: Snowflake, val name: String, val icon: String? = null, val owner: OptionalBoolean = OptionalBoolean.Missing, val permissions: Optional<Permissions> = Optional.Missing(), val features: List<GuildFeature>, val welcomeScreen: Optional<WelcomeScreenData> = Optional.Missing(), val vanityUrlCode: Optional<String?> = Optional.Missing(), val description: Optional<String?> = Optional.Missing(), val banner: Optional<String?> = Optional.Missing(), val splash: Optional<String?> = Optional.Missing(), val nsfwLevel: Optional<NsfwLevel> = Optional.Missing(), val verificationLevel: Optional<VerificationLevel> = Optional.Missing(), val stageInstances: Optional<List<StageInstanceData>> = Optional.Missing(), val stickers: Optional<List<StickerData>> = Optional.Missing(), val guildScheduledEvents: Optional<List<GuildScheduledEventData>> = Optional.Missing(), val premiumProgressBarEnabled: OptionalBoolean = OptionalBoolean.Missing)","dev.kord.core.cache.data.PartialGuildData"]},{"name":"class PermissionOverwriteEntity(val guildId: Snowflake, val channelId: Snowflake, val data: PermissionOverwriteData, val kord: Kord, val supplier: EntitySupplier = kord.defaultSupplier) : PermissionOverwrite, KordObject, Strategizable","description":"dev.kord.core.entity.PermissionOverwriteEntity","location":"core/dev.kord.core.entity/-permission-overwrite-entity/index.html","searchKeys":["PermissionOverwriteEntity","class PermissionOverwriteEntity(val guildId: Snowflake, val channelId: Snowflake, val data: PermissionOverwriteData, val kord: Kord, val supplier: EntitySupplier = kord.defaultSupplier) : PermissionOverwrite, KordObject, Strategizable","dev.kord.core.entity.PermissionOverwriteEntity"]},{"name":"class Presence(val data: PresenceData, val kord: Kord, val supplier: EntitySupplier = kord.defaultSupplier) : KordObject, Strategizable","description":"dev.kord.core.entity.Presence","location":"core/dev.kord.core.entity/-presence/index.html","searchKeys":["Presence","class Presence(val data: PresenceData, val kord: Kord, val supplier: EntitySupplier = kord.defaultSupplier) : KordObject, Strategizable","dev.kord.core.entity.Presence"]},{"name":"class PresenceUpdateEvent(val oldUser: User?, val user: DiscordPresenceUser, val guildId: Snowflake, val old: Presence?, val presence: Presence, val shard: Int, val customContext: Any?, val supplier: EntitySupplier = presence.kord.defaultSupplier) : Event, Strategizable","description":"dev.kord.core.event.user.PresenceUpdateEvent","location":"core/dev.kord.core.event.user/-presence-update-event/index.html","searchKeys":["PresenceUpdateEvent","class PresenceUpdateEvent(val oldUser: User?, val user: DiscordPresenceUser, val guildId: Snowflake, val old: Presence?, val presence: Presence, val shard: Int, val customContext: Any?, val supplier: EntitySupplier = presence.kord.defaultSupplier) : Event, Strategizable","dev.kord.core.event.user.PresenceUpdateEvent"]},{"name":"class PublicFollowupMessage(val message: Message, val applicationId: Snowflake, val token: String, val kord: Kord, val supplier: EntitySupplier = kord.defaultSupplier) : FollowupMessage, PublicFollowupMessageBehavior","description":"dev.kord.core.entity.interaction.followup.PublicFollowupMessage","location":"core/dev.kord.core.entity.interaction.followup/-public-followup-message/index.html","searchKeys":["PublicFollowupMessage","class PublicFollowupMessage(val message: Message, val applicationId: Snowflake, val token: String, val kord: Kord, val supplier: EntitySupplier = kord.defaultSupplier) : FollowupMessage, PublicFollowupMessageBehavior","dev.kord.core.entity.interaction.followup.PublicFollowupMessage"]},{"name":"class PublicMessageInteractionResponse(val message: Message, val applicationId: Snowflake, val token: String, val kord: Kord, val supplier: EntitySupplier = kord.defaultSupplier) : MessageInteractionResponse, PublicMessageInteractionResponseBehavior","description":"dev.kord.core.entity.interaction.response.PublicMessageInteractionResponse","location":"core/dev.kord.core.entity.interaction.response/-public-message-interaction-response/index.html","searchKeys":["PublicMessageInteractionResponse","class PublicMessageInteractionResponse(val message: Message, val applicationId: Snowflake, val token: String, val kord: Kord, val supplier: EntitySupplier = kord.defaultSupplier) : MessageInteractionResponse, PublicMessageInteractionResponseBehavior","dev.kord.core.entity.interaction.response.PublicMessageInteractionResponse"]},{"name":"class Reaction(val data: ReactionData, val kord: Kord) : KordObject","description":"dev.kord.core.entity.Reaction","location":"core/dev.kord.core.entity/-reaction/index.html","searchKeys":["Reaction","class Reaction(val data: ReactionData, val kord: Kord) : KordObject","dev.kord.core.entity.Reaction"]},{"name":"class ReactionAddEvent(val userId: Snowflake, val channelId: Snowflake, val messageId: Snowflake, val guildId: Snowflake?, val emoji: ReactionEmoji, val kord: Kord, val shard: Int, val customContext: Any?, val supplier: EntitySupplier = kord.defaultSupplier) : Event, Strategizable","description":"dev.kord.core.event.message.ReactionAddEvent","location":"core/dev.kord.core.event.message/-reaction-add-event/index.html","searchKeys":["ReactionAddEvent","class ReactionAddEvent(val userId: Snowflake, val channelId: Snowflake, val messageId: Snowflake, val guildId: Snowflake?, val emoji: ReactionEmoji, val kord: Kord, val shard: Int, val customContext: Any?, val supplier: EntitySupplier = kord.defaultSupplier) : Event, Strategizable","dev.kord.core.event.message.ReactionAddEvent"]},{"name":"class ReactionRemoveAllEvent(val channelId: Snowflake, val messageId: Snowflake, val guildId: Snowflake?, val kord: Kord, val shard: Int, val customContext: Any?, val supplier: EntitySupplier = kord.defaultSupplier) : Event, Strategizable","description":"dev.kord.core.event.message.ReactionRemoveAllEvent","location":"core/dev.kord.core.event.message/-reaction-remove-all-event/index.html","searchKeys":["ReactionRemoveAllEvent","class ReactionRemoveAllEvent(val channelId: Snowflake, val messageId: Snowflake, val guildId: Snowflake?, val kord: Kord, val shard: Int, val customContext: Any?, val supplier: EntitySupplier = kord.defaultSupplier) : Event, Strategizable","dev.kord.core.event.message.ReactionRemoveAllEvent"]},{"name":"class ReactionRemoveEmojiEvent(val data: ReactionRemoveEmojiData, val kord: Kord, val shard: Int, val customContext: Any?, val supplier: EntitySupplier = kord.defaultSupplier) : Event, Strategizable","description":"dev.kord.core.event.message.ReactionRemoveEmojiEvent","location":"core/dev.kord.core.event.message/-reaction-remove-emoji-event/index.html","searchKeys":["ReactionRemoveEmojiEvent","class ReactionRemoveEmojiEvent(val data: ReactionRemoveEmojiData, val kord: Kord, val shard: Int, val customContext: Any?, val supplier: EntitySupplier = kord.defaultSupplier) : Event, Strategizable","dev.kord.core.event.message.ReactionRemoveEmojiEvent"]},{"name":"class ReactionRemoveEvent(val userId: Snowflake, val channelId: Snowflake, val messageId: Snowflake, val guildId: Snowflake?, val emoji: ReactionEmoji, val kord: Kord, val shard: Int, val customContext: Any?, val supplier: EntitySupplier = kord.defaultSupplier) : Event, Strategizable","description":"dev.kord.core.event.message.ReactionRemoveEvent","location":"core/dev.kord.core.event.message/-reaction-remove-event/index.html","searchKeys":["ReactionRemoveEvent","class ReactionRemoveEvent(val userId: Snowflake, val channelId: Snowflake, val messageId: Snowflake, val guildId: Snowflake?, val emoji: ReactionEmoji, val kord: Kord, val shard: Int, val customContext: Any?, val supplier: EntitySupplier = kord.defaultSupplier) : Event, Strategizable","dev.kord.core.event.message.ReactionRemoveEvent"]},{"name":"class ReadyEvent(val gatewayVersion: Int, val guildIds: Set<Snowflake>, val self: User, val sessionId: String, val resumeGatewayUrl: String, val kord: Kord, val shard: Int, val customContext: Any?, val supplier: EntitySupplier = kord.defaultSupplier) : GatewayEvent, Strategizable","description":"dev.kord.core.event.gateway.ReadyEvent","location":"core/dev.kord.core.event.gateway/-ready-event/index.html","searchKeys":["ReadyEvent","class ReadyEvent(val gatewayVersion: Int, val guildIds: Set<Snowflake>, val self: User, val sessionId: String, val resumeGatewayUrl: String, val kord: Kord, val shard: Int, val customContext: Any?, val supplier: EntitySupplier = kord.defaultSupplier) : GatewayEvent, Strategizable","dev.kord.core.event.gateway.ReadyEvent"]},{"name":"class ReconnectingEvent(val kord: Kord, val shard: Int, val customContext: Any?) : DisconnectEvent","description":"dev.kord.core.event.gateway.DisconnectEvent.ReconnectingEvent","location":"core/dev.kord.core.event.gateway/-disconnect-event/-reconnecting-event/index.html","searchKeys":["ReconnectingEvent","class ReconnectingEvent(val kord: Kord, val shard: Int, val customContext: Any?) : DisconnectEvent","dev.kord.core.event.gateway.DisconnectEvent.ReconnectingEvent"]},{"name":"class Region(val data: RegionData, val kord: Kord) : KordObject","description":"dev.kord.core.entity.Region","location":"core/dev.kord.core.entity/-region/index.html","searchKeys":["Region","class Region(val data: RegionData, val kord: Kord) : KordObject","dev.kord.core.entity.Region"]},{"name":"class ResolvedChannel(val data: ChannelData, val kord: Kord, val strategy: EntitySupplyStrategy<*> = kord.resources.defaultStrategy) : Channel","description":"dev.kord.core.entity.channel.ResolvedChannel","location":"core/dev.kord.core.entity.channel/-resolved-channel/index.html","searchKeys":["ResolvedChannel","class ResolvedChannel(val data: ChannelData, val kord: Kord, val strategy: EntitySupplyStrategy<*> = kord.resources.defaultStrategy) : Channel","dev.kord.core.entity.channel.ResolvedChannel"]},{"name":"class ResolvedObjects(val data: ResolvedObjectsData, val kord: Kord, val strategy: EntitySupplyStrategy<*> = kord.resources.defaultStrategy)","description":"dev.kord.core.entity.interaction.ResolvedObjects","location":"core/dev.kord.core.entity.interaction/-resolved-objects/index.html","searchKeys":["ResolvedObjects","class ResolvedObjects(val data: ResolvedObjectsData, val kord: Kord, val strategy: EntitySupplyStrategy<*> = kord.resources.defaultStrategy)","dev.kord.core.entity.interaction.ResolvedObjects"]},{"name":"class RestEntitySupplier(val kord: Kord) : EntitySupplier","description":"dev.kord.core.supplier.RestEntitySupplier","location":"core/dev.kord.core.supplier/-rest-entity-supplier/index.html","searchKeys":["RestEntitySupplier","class RestEntitySupplier(val kord: Kord) : EntitySupplier","dev.kord.core.supplier.RestEntitySupplier"]},{"name":"class ResumedEvent(val kord: Kord, val shard: Int, val customContext: Any?) : GatewayEvent","description":"dev.kord.core.event.gateway.ResumedEvent","location":"core/dev.kord.core.event.gateway/-resumed-event/index.html","searchKeys":["ResumedEvent","class ResumedEvent(val kord: Kord, val shard: Int, val customContext: Any?) : GatewayEvent","dev.kord.core.event.gateway.ResumedEvent"]},{"name":"class RetryLimitReachedEvent(val kord: Kord, val shard: Int, val customContext: Any?) : DisconnectEvent","description":"dev.kord.core.event.gateway.DisconnectEvent.RetryLimitReachedEvent","location":"core/dev.kord.core.event.gateway/-disconnect-event/-retry-limit-reached-event/index.html","searchKeys":["RetryLimitReachedEvent","class RetryLimitReachedEvent(val kord: Kord, val shard: Int, val customContext: Any?) : DisconnectEvent","dev.kord.core.event.gateway.DisconnectEvent.RetryLimitReachedEvent"]},{"name":"class RoleCreateEvent(val role: Role, val shard: Int, val customContext: Any?, val supplier: EntitySupplier = role.kord.defaultSupplier) : Event, Strategizable","description":"dev.kord.core.event.role.RoleCreateEvent","location":"core/dev.kord.core.event.role/-role-create-event/index.html","searchKeys":["RoleCreateEvent","class RoleCreateEvent(val role: Role, val shard: Int, val customContext: Any?, val supplier: EntitySupplier = role.kord.defaultSupplier) : Event, Strategizable","dev.kord.core.event.role.RoleCreateEvent"]},{"name":"class RoleDeleteEvent(val guildId: Snowflake, val roleId: Snowflake, val role: Role?, val kord: Kord, val shard: Int, val customContext: Any?, val supplier: EntitySupplier = kord.defaultSupplier) : Event, Strategizable","description":"dev.kord.core.event.role.RoleDeleteEvent","location":"core/dev.kord.core.event.role/-role-delete-event/index.html","searchKeys":["RoleDeleteEvent","class RoleDeleteEvent(val guildId: Snowflake, val roleId: Snowflake, val role: Role?, val kord: Kord, val shard: Int, val customContext: Any?, val supplier: EntitySupplier = kord.defaultSupplier) : Event, Strategizable","dev.kord.core.event.role.RoleDeleteEvent"]},{"name":"class RoleIcon(roleId: Snowflake, iconHash: String, val kord: Kord) : Icon","description":"dev.kord.core.entity.Icon.RoleIcon","location":"core/dev.kord.core.entity/-icon/-role-icon/index.html","searchKeys":["RoleIcon","class RoleIcon(roleId: Snowflake, iconHash: String, val kord: Kord) : Icon","dev.kord.core.entity.Icon.RoleIcon"]},{"name":"class RoleOptionValue(val value: Snowflake, val focused: Boolean, val resolvedObject: Role?) : ResolvableOptionValue<Role> ","description":"dev.kord.core.entity.interaction.RoleOptionValue","location":"core/dev.kord.core.entity.interaction/-role-option-value/index.html","searchKeys":["RoleOptionValue","class RoleOptionValue(val value: Snowflake, val focused: Boolean, val resolvedObject: Role?) : ResolvableOptionValue<Role> ","dev.kord.core.entity.interaction.RoleOptionValue"]},{"name":"class RoleTags(val data: RoleTagsData, val guildId: Snowflake, val kord: Kord, val supplier: EntitySupplier = kord.defaultSupplier) : KordObject, Strategizable","description":"dev.kord.core.entity.RoleTags","location":"core/dev.kord.core.entity/-role-tags/index.html","searchKeys":["RoleTags","class RoleTags(val data: RoleTagsData, val guildId: Snowflake, val kord: Kord, val supplier: EntitySupplier = kord.defaultSupplier) : KordObject, Strategizable","dev.kord.core.entity.RoleTags"]},{"name":"class RoleUpdateEvent(val role: Role, val old: Role?, val shard: Int, val customContext: Any?, val supplier: EntitySupplier = role.kord.defaultSupplier) : Event, Strategizable","description":"dev.kord.core.event.role.RoleUpdateEvent","location":"core/dev.kord.core.event.role/-role-update-event/index.html","searchKeys":["RoleUpdateEvent","class RoleUpdateEvent(val role: Role, val old: Role?, val shard: Int, val customContext: Any?, val supplier: EntitySupplier = role.kord.defaultSupplier) : Event, Strategizable","dev.kord.core.event.role.RoleUpdateEvent"]},{"name":"class RootCommand(val data: ApplicationInteractionData, val kord: Kord) : InteractionCommand","description":"dev.kord.core.entity.interaction.RootCommand","location":"core/dev.kord.core.entity.interaction/-root-command/index.html","searchKeys":["RootCommand","class RootCommand(val data: ApplicationInteractionData, val kord: Kord) : InteractionCommand","dev.kord.core.entity.interaction.RootCommand"]},{"name":"class SelectMenuComponent(val data: ComponentData) : Component","description":"dev.kord.core.entity.component.SelectMenuComponent","location":"core/dev.kord.core.entity.component/-select-menu-component/index.html","searchKeys":["SelectMenuComponent","class SelectMenuComponent(val data: ComponentData) : Component","dev.kord.core.entity.component.SelectMenuComponent"]},{"name":"class SelectOption(val data: SelectOptionData)","description":"dev.kord.core.entity.component.SelectOption","location":"core/dev.kord.core.entity.component/-select-option/index.html","searchKeys":["SelectOption","class SelectOption(val data: SelectOptionData)","dev.kord.core.entity.component.SelectOption"]},{"name":"class SendAlertMessageAutoModerationAction(val data: AutoModerationActionData, val kord: Kord) : AutoModerationAction","description":"dev.kord.core.entity.automoderation.SendAlertMessageAutoModerationAction","location":"core/dev.kord.core.entity.automoderation/-send-alert-message-auto-moderation-action/index.html","searchKeys":["SendAlertMessageAutoModerationAction","class SendAlertMessageAutoModerationAction(val data: AutoModerationActionData, val kord: Kord) : AutoModerationAction","dev.kord.core.entity.automoderation.SendAlertMessageAutoModerationAction"]},{"name":"class SessionReset(val kord: Kord, val shard: Int, val customContext: Any?) : DisconnectEvent","description":"dev.kord.core.event.gateway.DisconnectEvent.SessionReset","location":"core/dev.kord.core.event.gateway/-disconnect-event/-session-reset/index.html","searchKeys":["SessionReset","class SessionReset(val kord: Kord, val shard: Int, val customContext: Any?) : DisconnectEvent","dev.kord.core.event.gateway.DisconnectEvent.SessionReset"]},{"name":"class SpamAutoModerationRule(val data: AutoModerationRuleData, val kord: Kord, val supplier: EntitySupplier) : AutoModerationRule, SpamAutoModerationRuleBehavior","description":"dev.kord.core.entity.automoderation.SpamAutoModerationRule","location":"core/dev.kord.core.entity.automoderation/-spam-auto-moderation-rule/index.html","searchKeys":["SpamAutoModerationRule","class SpamAutoModerationRule(val data: AutoModerationRuleData, val kord: Kord, val supplier: EntitySupplier) : AutoModerationRule, SpamAutoModerationRuleBehavior","dev.kord.core.entity.automoderation.SpamAutoModerationRule"]},{"name":"class StageChannel(val data: ChannelData, val kord: Kord, val supplier: EntitySupplier = kord.defaultSupplier) : CategorizableChannel, StageChannelBehavior","description":"dev.kord.core.entity.channel.StageChannel","location":"core/dev.kord.core.entity.channel/-stage-channel/index.html","searchKeys":["StageChannel","class StageChannel(val data: ChannelData, val kord: Kord, val supplier: EntitySupplier = kord.defaultSupplier) : CategorizableChannel, StageChannelBehavior","dev.kord.core.entity.channel.StageChannel"]},{"name":"class StageChannelCreateEvent(val channel: StageChannel, val shard: Int, val customContext: Any?) : ChannelCreateEvent","description":"dev.kord.core.event.channel.StageChannelCreateEvent","location":"core/dev.kord.core.event.channel/-stage-channel-create-event/index.html","searchKeys":["StageChannelCreateEvent","class StageChannelCreateEvent(val channel: StageChannel, val shard: Int, val customContext: Any?) : ChannelCreateEvent","dev.kord.core.event.channel.StageChannelCreateEvent"]},{"name":"class StageChannelDeleteEvent(val channel: StageChannel, val shard: Int, val customContext: Any?) : ChannelDeleteEvent","description":"dev.kord.core.event.channel.StageChannelDeleteEvent","location":"core/dev.kord.core.event.channel/-stage-channel-delete-event/index.html","searchKeys":["StageChannelDeleteEvent","class StageChannelDeleteEvent(val channel: StageChannel, val shard: Int, val customContext: Any?) : ChannelDeleteEvent","dev.kord.core.event.channel.StageChannelDeleteEvent"]},{"name":"class StageChannelUpdateEvent(val channel: StageChannel, val old: StageChannel?, val shard: Int, val customContext: Any?) : ChannelUpdateEvent","description":"dev.kord.core.event.channel.StageChannelUpdateEvent","location":"core/dev.kord.core.event.channel/-stage-channel-update-event/index.html","searchKeys":["StageChannelUpdateEvent","class StageChannelUpdateEvent(val channel: StageChannel, val old: StageChannel?, val shard: Int, val customContext: Any?) : ChannelUpdateEvent","dev.kord.core.event.channel.StageChannelUpdateEvent"]},{"name":"class StageInstance(val data: StageInstanceData, val kord: Kord, val supplier: EntitySupplier = kord.defaultSupplier) : StageInstanceBehavior","description":"dev.kord.core.entity.StageInstance","location":"core/dev.kord.core.entity/-stage-instance/index.html","searchKeys":["StageInstance","class StageInstance(val data: StageInstanceData, val kord: Kord, val supplier: EntitySupplier = kord.defaultSupplier) : StageInstanceBehavior","dev.kord.core.entity.StageInstance"]},{"name":"class StickerItem(val data: StickerItemData, val kord: Kord, val supplier: EntitySupplier = kord.defaultSupplier) : KordEntity, Strategizable","description":"dev.kord.core.entity.StickerItem","location":"core/dev.kord.core.entity/-sticker-item/index.html","searchKeys":["StickerItem","class StickerItem(val data: StickerItemData, val kord: Kord, val supplier: EntitySupplier = kord.defaultSupplier) : KordEntity, Strategizable","dev.kord.core.entity.StickerItem"]},{"name":"class StickerPack(val data: StickerPackData, val kord: Kord) : KordEntity","description":"dev.kord.core.entity.StickerPack","location":"core/dev.kord.core.entity/-sticker-pack/index.html","searchKeys":["StickerPack","class StickerPack(val data: StickerPackData, val kord: Kord) : KordEntity","dev.kord.core.entity.StickerPack"]},{"name":"class StoreEntitySupplier(supplier: EntitySupplier, cache: DataCache) : EntitySupplier","description":"dev.kord.core.supplier.StoreEntitySupplier","location":"core/dev.kord.core.supplier/-store-entity-supplier/index.html","searchKeys":["StoreEntitySupplier","class StoreEntitySupplier(supplier: EntitySupplier, cache: DataCache) : EntitySupplier","dev.kord.core.supplier.StoreEntitySupplier"]},{"name":"class StringOptionValue(val value: String, val focused: Boolean) : OptionValue<String> ","description":"dev.kord.core.entity.interaction.StringOptionValue","location":"core/dev.kord.core.entity.interaction/-string-option-value/index.html","searchKeys":["StringOptionValue","class StringOptionValue(val value: String, val focused: Boolean) : OptionValue<String> ","dev.kord.core.entity.interaction.StringOptionValue"]},{"name":"class SubCommand(val data: ApplicationInteractionData, val kord: Kord) : InteractionCommand","description":"dev.kord.core.entity.interaction.SubCommand","location":"core/dev.kord.core.entity.interaction/-sub-command/index.html","searchKeys":["SubCommand","class SubCommand(val data: ApplicationInteractionData, val kord: Kord) : InteractionCommand","dev.kord.core.entity.interaction.SubCommand"]},{"name":"class Team(val data: TeamData, val kord: Kord, val supplier: EntitySupplier = kord.defaultSupplier) : KordEntity, Strategizable","description":"dev.kord.core.entity.Team","location":"core/dev.kord.core.entity/-team/index.html","searchKeys":["Team","class Team(val data: TeamData, val kord: Kord, val supplier: EntitySupplier = kord.defaultSupplier) : KordEntity, Strategizable","dev.kord.core.entity.Team"]},{"name":"class TeamMember(val data: TeamMemberData, val kord: Kord)","description":"dev.kord.core.entity.TeamMember","location":"core/dev.kord.core.entity/-team-member/index.html","searchKeys":["TeamMember","class TeamMember(val data: TeamMemberData, val kord: Kord)","dev.kord.core.entity.TeamMember"]},{"name":"class TeamMemberData(val membershipState: TeamMembershipState, val permissions: List<String>, val teamId: Snowflake, val userId: Snowflake)","description":"dev.kord.core.cache.data.TeamMemberData","location":"core/dev.kord.core.cache.data/-team-member-data/index.html","searchKeys":["TeamMemberData","class TeamMemberData(val membershipState: TeamMembershipState, val permissions: List<String>, val teamId: Snowflake, val userId: Snowflake)","dev.kord.core.cache.data.TeamMemberData"]},{"name":"class Template(val data: TemplateData, val kord: Kord) : KordObject, TemplateBehavior","description":"dev.kord.core.entity.Template","location":"core/dev.kord.core.entity/-template/index.html","searchKeys":["Template","class Template(val data: TemplateData, val kord: Kord) : KordObject, TemplateBehavior","dev.kord.core.entity.Template"]},{"name":"class TextChannel(val data: ChannelData, val kord: Kord, val supplier: EntitySupplier = kord.defaultSupplier) : CategorizableChannel, TextChannelBehavior, ThreadParentChannel","description":"dev.kord.core.entity.channel.TextChannel","location":"core/dev.kord.core.entity.channel/-text-channel/index.html","searchKeys":["TextChannel","class TextChannel(val data: ChannelData, val kord: Kord, val supplier: EntitySupplier = kord.defaultSupplier) : CategorizableChannel, TextChannelBehavior, ThreadParentChannel","dev.kord.core.entity.channel.TextChannel"]},{"name":"class TextChannelCreateEvent(val channel: TextChannel, val shard: Int, val customContext: Any?) : ChannelCreateEvent","description":"dev.kord.core.event.channel.TextChannelCreateEvent","location":"core/dev.kord.core.event.channel/-text-channel-create-event/index.html","searchKeys":["TextChannelCreateEvent","class TextChannelCreateEvent(val channel: TextChannel, val shard: Int, val customContext: Any?) : ChannelCreateEvent","dev.kord.core.event.channel.TextChannelCreateEvent"]},{"name":"class TextChannelDeleteEvent(val channel: TextChannel, val shard: Int, val customContext: Any?) : ChannelDeleteEvent","description":"dev.kord.core.event.channel.TextChannelDeleteEvent","location":"core/dev.kord.core.event.channel/-text-channel-delete-event/index.html","searchKeys":["TextChannelDeleteEvent","class TextChannelDeleteEvent(val channel: TextChannel, val shard: Int, val customContext: Any?) : ChannelDeleteEvent","dev.kord.core.event.channel.TextChannelDeleteEvent"]},{"name":"class TextChannelThread(val data: ChannelData, val kord: Kord, val supplier: EntitySupplier = kord.defaultSupplier) : ThreadChannel","description":"dev.kord.core.entity.channel.thread.TextChannelThread","location":"core/dev.kord.core.entity.channel.thread/-text-channel-thread/index.html","searchKeys":["TextChannelThread","class TextChannelThread(val data: ChannelData, val kord: Kord, val supplier: EntitySupplier = kord.defaultSupplier) : ThreadChannel","dev.kord.core.entity.channel.thread.TextChannelThread"]},{"name":"class TextChannelThreadCreateEvent(val channel: TextChannelThread, val shard: Int, val customContext: Any?) : ThreadChannelCreateEvent","description":"dev.kord.core.event.channel.thread.TextChannelThreadCreateEvent","location":"core/dev.kord.core.event.channel.thread/-text-channel-thread-create-event/index.html","searchKeys":["TextChannelThreadCreateEvent","class TextChannelThreadCreateEvent(val channel: TextChannelThread, val shard: Int, val customContext: Any?) : ThreadChannelCreateEvent","dev.kord.core.event.channel.thread.TextChannelThreadCreateEvent"]},{"name":"class TextChannelThreadDeleteEvent(val channel: DeletedThreadChannel, val old: TextChannelThread?, val shard: Int, val customContext: Any?) : ThreadChannelDeleteEvent","description":"dev.kord.core.event.channel.thread.TextChannelThreadDeleteEvent","location":"core/dev.kord.core.event.channel.thread/-text-channel-thread-delete-event/index.html","searchKeys":["TextChannelThreadDeleteEvent","class TextChannelThreadDeleteEvent(val channel: DeletedThreadChannel, val old: TextChannelThread?, val shard: Int, val customContext: Any?) : ThreadChannelDeleteEvent","dev.kord.core.event.channel.thread.TextChannelThreadDeleteEvent"]},{"name":"class TextChannelThreadUpdateEvent(val channel: TextChannelThread, val old: TextChannelThread?, val shard: Int, val customContext: Any?) : ThreadUpdateEvent","description":"dev.kord.core.event.channel.thread.TextChannelThreadUpdateEvent","location":"core/dev.kord.core.event.channel.thread/-text-channel-thread-update-event/index.html","searchKeys":["TextChannelThreadUpdateEvent","class TextChannelThreadUpdateEvent(val channel: TextChannelThread, val old: TextChannelThread?, val shard: Int, val customContext: Any?) : ThreadUpdateEvent","dev.kord.core.event.channel.thread.TextChannelThreadUpdateEvent"]},{"name":"class TextChannelUpdateEvent(val channel: TextChannel, val old: TextChannel?, val shard: Int, val customContext: Any?) : ChannelUpdateEvent","description":"dev.kord.core.event.channel.TextChannelUpdateEvent","location":"core/dev.kord.core.event.channel/-text-channel-update-event/index.html","searchKeys":["TextChannelUpdateEvent","class TextChannelUpdateEvent(val channel: TextChannel, val old: TextChannel?, val shard: Int, val customContext: Any?) : ChannelUpdateEvent","dev.kord.core.event.channel.TextChannelUpdateEvent"]},{"name":"class TextInputComponent(val data: TextInputComponentData) : Component","description":"dev.kord.core.entity.component.TextInputComponent","location":"core/dev.kord.core.entity.component/-text-input-component/index.html","searchKeys":["TextInputComponent","class TextInputComponent(val data: TextInputComponentData) : Component","dev.kord.core.entity.component.TextInputComponent"]},{"name":"class ThreadListSyncData(val guildId: Snowflake, val channelIds: Optional<List<Snowflake>> = Optional.Missing(), val threads: List<ChannelData>, val members: List<ThreadMemberData>)","description":"dev.kord.core.cache.data.ThreadListSyncData","location":"core/dev.kord.core.cache.data/-thread-list-sync-data/index.html","searchKeys":["ThreadListSyncData","class ThreadListSyncData(val guildId: Snowflake, val channelIds: Optional<List<Snowflake>> = Optional.Missing(), val threads: List<ChannelData>, val members: List<ThreadMemberData>)","dev.kord.core.cache.data.ThreadListSyncData"]},{"name":"class ThreadListSyncEvent(val data: ThreadListSyncData, val kord: Kord, val shard: Int, val customContext: Any?, val supplier: EntitySupplier = kord.defaultSupplier) : Event, Strategizable","description":"dev.kord.core.event.channel.thread.ThreadListSyncEvent","location":"core/dev.kord.core.event.channel.thread/-thread-list-sync-event/index.html","searchKeys":["ThreadListSyncEvent","class ThreadListSyncEvent(val data: ThreadListSyncData, val kord: Kord, val shard: Int, val customContext: Any?, val supplier: EntitySupplier = kord.defaultSupplier) : Event, Strategizable","dev.kord.core.event.channel.thread.ThreadListSyncEvent"]},{"name":"class ThreadMember(val data: ThreadMemberData, val kord: Kord, val supplier: EntitySupplier = kord.defaultSupplier) : ThreadMemberBehavior","description":"dev.kord.core.entity.channel.thread.ThreadMember","location":"core/dev.kord.core.entity.channel.thread/-thread-member/index.html","searchKeys":["ThreadMember","class ThreadMember(val data: ThreadMemberData, val kord: Kord, val supplier: EntitySupplier = kord.defaultSupplier) : ThreadMemberBehavior","dev.kord.core.entity.channel.thread.ThreadMember"]},{"name":"class ThreadMemberUpdateEvent(val member: ThreadMember, val kord: Kord, val shard: Int, val customContext: Any?) : Event","description":"dev.kord.core.event.channel.thread.ThreadMemberUpdateEvent","location":"core/dev.kord.core.event.channel.thread/-thread-member-update-event/index.html","searchKeys":["ThreadMemberUpdateEvent","class ThreadMemberUpdateEvent(val member: ThreadMember, val kord: Kord, val shard: Int, val customContext: Any?) : Event","dev.kord.core.event.channel.thread.ThreadMemberUpdateEvent"]},{"name":"class ThreadMembersUpdateEvent(val data: ThreadMembersUpdateEventData, val kord: Kord, val shard: Int, val customContext: Any?) : Event","description":"dev.kord.core.event.channel.thread.ThreadMembersUpdateEvent","location":"core/dev.kord.core.event.channel.thread/-thread-members-update-event/index.html","searchKeys":["ThreadMembersUpdateEvent","class ThreadMembersUpdateEvent(val data: ThreadMembersUpdateEventData, val kord: Kord, val shard: Int, val customContext: Any?) : Event","dev.kord.core.event.channel.thread.ThreadMembersUpdateEvent"]},{"name":"class ThreadMembersUpdateEventData(val id: Snowflake, val guildId: Snowflake, val memberCount: Int, val addedMembers: Optional<List<ThreadMemberData>> = Optional.Missing(), val removedMemberIds: Optional<List<Snowflake>> = Optional.Missing())","description":"dev.kord.core.cache.data.ThreadMembersUpdateEventData","location":"core/dev.kord.core.cache.data/-thread-members-update-event-data/index.html","searchKeys":["ThreadMembersUpdateEventData","class ThreadMembersUpdateEventData(val id: Snowflake, val guildId: Snowflake, val memberCount: Int, val addedMembers: Optional<List<ThreadMemberData>> = Optional.Missing(), val removedMemberIds: Optional<List<Snowflake>> = Optional.Missing())","dev.kord.core.cache.data.ThreadMembersUpdateEventData"]},{"name":"class TimeoutAutoModerationAction(val data: AutoModerationActionData, val kord: Kord) : AutoModerationAction","description":"dev.kord.core.entity.automoderation.TimeoutAutoModerationAction","location":"core/dev.kord.core.entity.automoderation/-timeout-auto-moderation-action/index.html","searchKeys":["TimeoutAutoModerationAction","class TimeoutAutoModerationAction(val data: AutoModerationActionData, val kord: Kord) : AutoModerationAction","dev.kord.core.entity.automoderation.TimeoutAutoModerationAction"]},{"name":"class TimeoutEvent(val kord: Kord, val shard: Int, val customContext: Any?) : DisconnectEvent","description":"dev.kord.core.event.gateway.DisconnectEvent.TimeoutEvent","location":"core/dev.kord.core.event.gateway/-disconnect-event/-timeout-event/index.html","searchKeys":["TimeoutEvent","class TimeoutEvent(val kord: Kord, val shard: Int, val customContext: Any?) : DisconnectEvent","dev.kord.core.event.gateway.DisconnectEvent.TimeoutEvent"]},{"name":"class TypingStartEvent(val data: TypingStartEventData, val kord: Kord, val shard: Int, val customContext: Any?, val supplier: EntitySupplier = kord.defaultSupplier) : Event, Strategizable","description":"dev.kord.core.event.channel.TypingStartEvent","location":"core/dev.kord.core.event.channel/-typing-start-event/index.html","searchKeys":["TypingStartEvent","class TypingStartEvent(val data: TypingStartEventData, val kord: Kord, val shard: Int, val customContext: Any?, val supplier: EntitySupplier = kord.defaultSupplier) : Event, Strategizable","dev.kord.core.event.channel.TypingStartEvent"]},{"name":"class UnknownApplicationCommandCreateEvent(val command: UnknownGuildApplicationCommand, val kord: Kord, val shard: Int, val customContext: Any?) : ApplicationCommandCreateEvent","description":"dev.kord.core.event.interaction.UnknownApplicationCommandCreateEvent","location":"core/dev.kord.core.event.interaction/-unknown-application-command-create-event/index.html","searchKeys":["UnknownApplicationCommandCreateEvent","class UnknownApplicationCommandCreateEvent(val command: UnknownGuildApplicationCommand, val kord: Kord, val shard: Int, val customContext: Any?) : ApplicationCommandCreateEvent","dev.kord.core.event.interaction.UnknownApplicationCommandCreateEvent"]},{"name":"class UnknownApplicationCommandDeleteEvent(val command: UnknownGuildApplicationCommand, val kord: Kord, val shard: Int, val customContext: Any?) : ApplicationCommandDeleteEvent","description":"dev.kord.core.event.interaction.UnknownApplicationCommandDeleteEvent","location":"core/dev.kord.core.event.interaction/-unknown-application-command-delete-event/index.html","searchKeys":["UnknownApplicationCommandDeleteEvent","class UnknownApplicationCommandDeleteEvent(val command: UnknownGuildApplicationCommand, val kord: Kord, val shard: Int, val customContext: Any?) : ApplicationCommandDeleteEvent","dev.kord.core.event.interaction.UnknownApplicationCommandDeleteEvent"]},{"name":"class UnknownApplicationCommandUpdateEvent(val command: UnknownGuildApplicationCommand, val kord: Kord, val shard: Int, val customContext: Any?) : ApplicationCommandUpdateEvent","description":"dev.kord.core.event.interaction.UnknownApplicationCommandUpdateEvent","location":"core/dev.kord.core.event.interaction/-unknown-application-command-update-event/index.html","searchKeys":["UnknownApplicationCommandUpdateEvent","class UnknownApplicationCommandUpdateEvent(val command: UnknownGuildApplicationCommand, val kord: Kord, val shard: Int, val customContext: Any?) : ApplicationCommandUpdateEvent","dev.kord.core.event.interaction.UnknownApplicationCommandUpdateEvent"]},{"name":"class UnknownAutoModerationAction(val data: AutoModerationActionData, val kord: Kord) : AutoModerationAction","description":"dev.kord.core.entity.automoderation.UnknownAutoModerationAction","location":"core/dev.kord.core.entity.automoderation/-unknown-auto-moderation-action/index.html","searchKeys":["UnknownAutoModerationAction","class UnknownAutoModerationAction(val data: AutoModerationActionData, val kord: Kord) : AutoModerationAction","dev.kord.core.entity.automoderation.UnknownAutoModerationAction"]},{"name":"class UnknownAutoModerationRule(val data: AutoModerationRuleData, val kord: Kord, val supplier: EntitySupplier) : AutoModerationRule","description":"dev.kord.core.entity.automoderation.UnknownAutoModerationRule","location":"core/dev.kord.core.entity.automoderation/-unknown-auto-moderation-rule/index.html","searchKeys":["UnknownAutoModerationRule","class UnknownAutoModerationRule(val data: AutoModerationRuleData, val kord: Kord, val supplier: EntitySupplier) : AutoModerationRule","dev.kord.core.entity.automoderation.UnknownAutoModerationRule"]},{"name":"class UnknownChannelCreateEvent(val channel: Channel, val shard: Int, val customContext: Any?) : ChannelCreateEvent","description":"dev.kord.core.event.channel.UnknownChannelCreateEvent","location":"core/dev.kord.core.event.channel/-unknown-channel-create-event/index.html","searchKeys":["UnknownChannelCreateEvent","class UnknownChannelCreateEvent(val channel: Channel, val shard: Int, val customContext: Any?) : ChannelCreateEvent","dev.kord.core.event.channel.UnknownChannelCreateEvent"]},{"name":"class UnknownChannelDeleteEvent(val channel: Channel, val shard: Int, val customContext: Any?) : ChannelDeleteEvent","description":"dev.kord.core.event.channel.UnknownChannelDeleteEvent","location":"core/dev.kord.core.event.channel/-unknown-channel-delete-event/index.html","searchKeys":["UnknownChannelDeleteEvent","class UnknownChannelDeleteEvent(val channel: Channel, val shard: Int, val customContext: Any?) : ChannelDeleteEvent","dev.kord.core.event.channel.UnknownChannelDeleteEvent"]},{"name":"class UnknownChannelThreadCreateEvent(val channel: ThreadChannel, val shard: Int, val customContext: Any?) : ThreadChannelCreateEvent","description":"dev.kord.core.event.channel.thread.UnknownChannelThreadCreateEvent","location":"core/dev.kord.core.event.channel.thread/-unknown-channel-thread-create-event/index.html","searchKeys":["UnknownChannelThreadCreateEvent","class UnknownChannelThreadCreateEvent(val channel: ThreadChannel, val shard: Int, val customContext: Any?) : ThreadChannelCreateEvent","dev.kord.core.event.channel.thread.UnknownChannelThreadCreateEvent"]},{"name":"class UnknownChannelThreadDeleteEvent(val channel: DeletedThreadChannel, val old: ThreadChannel?, val shard: Int, val customContext: Any?) : ThreadChannelDeleteEvent","description":"dev.kord.core.event.channel.thread.UnknownChannelThreadDeleteEvent","location":"core/dev.kord.core.event.channel.thread/-unknown-channel-thread-delete-event/index.html","searchKeys":["UnknownChannelThreadDeleteEvent","class UnknownChannelThreadDeleteEvent(val channel: DeletedThreadChannel, val old: ThreadChannel?, val shard: Int, val customContext: Any?) : ThreadChannelDeleteEvent","dev.kord.core.event.channel.thread.UnknownChannelThreadDeleteEvent"]},{"name":"class UnknownChannelThreadUpdateEvent(val channel: ThreadChannel, val old: ThreadChannel?, val shard: Int, val customContext: Any?) : ThreadUpdateEvent","description":"dev.kord.core.event.channel.thread.UnknownChannelThreadUpdateEvent","location":"core/dev.kord.core.event.channel.thread/-unknown-channel-thread-update-event/index.html","searchKeys":["UnknownChannelThreadUpdateEvent","class UnknownChannelThreadUpdateEvent(val channel: ThreadChannel, val old: ThreadChannel?, val shard: Int, val customContext: Any?) : ThreadUpdateEvent","dev.kord.core.event.channel.thread.UnknownChannelThreadUpdateEvent"]},{"name":"class UnknownChannelUpdateEvent(val channel: Channel, val old: Channel?, val shard: Int, val customContext: Any?) : ChannelUpdateEvent","description":"dev.kord.core.event.channel.UnknownChannelUpdateEvent","location":"core/dev.kord.core.event.channel/-unknown-channel-update-event/index.html","searchKeys":["UnknownChannelUpdateEvent","class UnknownChannelUpdateEvent(val channel: Channel, val old: Channel?, val shard: Int, val customContext: Any?) : ChannelUpdateEvent","dev.kord.core.event.channel.UnknownChannelUpdateEvent"]},{"name":"class UnknownComponent(val data: ComponentData) : Component","description":"dev.kord.core.entity.component.UnknownComponent","location":"core/dev.kord.core.entity.component/-unknown-component/index.html","searchKeys":["UnknownComponent","class UnknownComponent(val data: ComponentData) : Component","dev.kord.core.entity.component.UnknownComponent"]},{"name":"class UnknownGlobalApplicationCommand(val data: ApplicationCommandData, val service: InteractionService) : GlobalApplicationCommand","description":"dev.kord.core.entity.application.UnknownGlobalApplicationCommand","location":"core/dev.kord.core.entity.application/-unknown-global-application-command/index.html","searchKeys":["UnknownGlobalApplicationCommand","class UnknownGlobalApplicationCommand(val data: ApplicationCommandData, val service: InteractionService) : GlobalApplicationCommand","dev.kord.core.entity.application.UnknownGlobalApplicationCommand"]},{"name":"class UnknownGuildApplicationCommand(val data: ApplicationCommandData, val service: InteractionService) : GuildApplicationCommand","description":"dev.kord.core.entity.application.UnknownGuildApplicationCommand","location":"core/dev.kord.core.entity.application/-unknown-guild-application-command/index.html","searchKeys":["UnknownGuildApplicationCommand","class UnknownGuildApplicationCommand(val data: ApplicationCommandData, val service: InteractionService) : GuildApplicationCommand","dev.kord.core.entity.application.UnknownGuildApplicationCommand"]},{"name":"class Unsafe(kord: Kord)","description":"dev.kord.core.Unsafe","location":"core/dev.kord.core/-unsafe/index.html","searchKeys":["Unsafe","class Unsafe(kord: Kord)","dev.kord.core.Unsafe"]},{"name":"class UserAvatar(userId: Snowflake, avatarHash: String, val kord: Kord) : Icon","description":"dev.kord.core.entity.Icon.UserAvatar","location":"core/dev.kord.core.entity/-icon/-user-avatar/index.html","searchKeys":["UserAvatar","class UserAvatar(userId: Snowflake, avatarHash: String, val kord: Kord) : Icon","dev.kord.core.entity.Icon.UserAvatar"]},{"name":"class UserCloseEvent(val kord: Kord, val shard: Int, val customContext: Any?) : DisconnectEvent","description":"dev.kord.core.event.gateway.DisconnectEvent.UserCloseEvent","location":"core/dev.kord.core.event.gateway/-disconnect-event/-user-close-event/index.html","searchKeys":["UserCloseEvent","class UserCloseEvent(val kord: Kord, val shard: Int, val customContext: Any?) : DisconnectEvent","dev.kord.core.event.gateway.DisconnectEvent.UserCloseEvent"]},{"name":"class UserCommandCreateEvent(val command: GuildUserCommand, val kord: Kord, val shard: Int, val customContext: Any?) : ApplicationCommandCreateEvent","description":"dev.kord.core.event.interaction.UserCommandCreateEvent","location":"core/dev.kord.core.event.interaction/-user-command-create-event/index.html","searchKeys":["UserCommandCreateEvent","class UserCommandCreateEvent(val command: GuildUserCommand, val kord: Kord, val shard: Int, val customContext: Any?) : ApplicationCommandCreateEvent","dev.kord.core.event.interaction.UserCommandCreateEvent"]},{"name":"class UserCommandDeleteEvent(val command: GuildUserCommand, val kord: Kord, val shard: Int, val customContext: Any?) : ApplicationCommandDeleteEvent","description":"dev.kord.core.event.interaction.UserCommandDeleteEvent","location":"core/dev.kord.core.event.interaction/-user-command-delete-event/index.html","searchKeys":["UserCommandDeleteEvent","class UserCommandDeleteEvent(val command: GuildUserCommand, val kord: Kord, val shard: Int, val customContext: Any?) : ApplicationCommandDeleteEvent","dev.kord.core.event.interaction.UserCommandDeleteEvent"]},{"name":"class UserCommandUpdateEvent(val command: GuildUserCommand, val kord: Kord, val shard: Int, val customContext: Any?) : ApplicationCommandUpdateEvent","description":"dev.kord.core.event.interaction.UserCommandUpdateEvent","location":"core/dev.kord.core.event.interaction/-user-command-update-event/index.html","searchKeys":["UserCommandUpdateEvent","class UserCommandUpdateEvent(val command: GuildUserCommand, val kord: Kord, val shard: Int, val customContext: Any?) : ApplicationCommandUpdateEvent","dev.kord.core.event.interaction.UserCommandUpdateEvent"]},{"name":"class UserUpdateEvent(val old: User?, val user: User, val shard: Int, val customContext: Any?) : Event","description":"dev.kord.core.event.user.UserUpdateEvent","location":"core/dev.kord.core.event.user/-user-update-event/index.html","searchKeys":["UserUpdateEvent","class UserUpdateEvent(val old: User?, val user: User, val shard: Int, val customContext: Any?) : Event","dev.kord.core.event.user.UserUpdateEvent"]},{"name":"class ViewKeys(keySet: MutableSet<Any> = mutableSetOf())","description":"dev.kord.core.cache.ViewKeys","location":"core/dev.kord.core.cache/-view-keys/index.html","searchKeys":["ViewKeys","class ViewKeys(keySet: MutableSet<Any> = mutableSetOf())","dev.kord.core.cache.ViewKeys"]},{"name":"class VoiceChannel(val data: ChannelData, val kord: Kord, val supplier: EntitySupplier = kord.defaultSupplier) : TopGuildMessageChannel, VoiceChannelBehavior","description":"dev.kord.core.entity.channel.VoiceChannel","location":"core/dev.kord.core.entity.channel/-voice-channel/index.html","searchKeys":["VoiceChannel","class VoiceChannel(val data: ChannelData, val kord: Kord, val supplier: EntitySupplier = kord.defaultSupplier) : TopGuildMessageChannel, VoiceChannelBehavior","dev.kord.core.entity.channel.VoiceChannel"]},{"name":"class VoiceChannelCreateEvent(val channel: VoiceChannel, val shard: Int, val customContext: Any?) : ChannelCreateEvent","description":"dev.kord.core.event.channel.VoiceChannelCreateEvent","location":"core/dev.kord.core.event.channel/-voice-channel-create-event/index.html","searchKeys":["VoiceChannelCreateEvent","class VoiceChannelCreateEvent(val channel: VoiceChannel, val shard: Int, val customContext: Any?) : ChannelCreateEvent","dev.kord.core.event.channel.VoiceChannelCreateEvent"]},{"name":"class VoiceChannelDeleteEvent(val channel: VoiceChannel, val shard: Int, val customContext: Any?) : ChannelDeleteEvent","description":"dev.kord.core.event.channel.VoiceChannelDeleteEvent","location":"core/dev.kord.core.event.channel/-voice-channel-delete-event/index.html","searchKeys":["VoiceChannelDeleteEvent","class VoiceChannelDeleteEvent(val channel: VoiceChannel, val shard: Int, val customContext: Any?) : ChannelDeleteEvent","dev.kord.core.event.channel.VoiceChannelDeleteEvent"]},{"name":"class VoiceChannelUpdateEvent(val channel: VoiceChannel, val old: VoiceChannel?, val shard: Int, val customContext: Any?) : ChannelUpdateEvent","description":"dev.kord.core.event.channel.VoiceChannelUpdateEvent","location":"core/dev.kord.core.event.channel/-voice-channel-update-event/index.html","searchKeys":["VoiceChannelUpdateEvent","class VoiceChannelUpdateEvent(val channel: VoiceChannel, val old: VoiceChannel?, val shard: Int, val customContext: Any?) : ChannelUpdateEvent","dev.kord.core.event.channel.VoiceChannelUpdateEvent"]},{"name":"class VoiceServerUpdateEvent(val token: String, val guildId: Snowflake, val endpoint: String?, val kord: Kord, val shard: Int, val customContext: Any?, val supplier: EntitySupplier = kord.defaultSupplier) : Event, Strategizable","description":"dev.kord.core.event.guild.VoiceServerUpdateEvent","location":"core/dev.kord.core.event.guild/-voice-server-update-event/index.html","searchKeys":["VoiceServerUpdateEvent","class VoiceServerUpdateEvent(val token: String, val guildId: Snowflake, val endpoint: String?, val kord: Kord, val shard: Int, val customContext: Any?, val supplier: EntitySupplier = kord.defaultSupplier) : Event, Strategizable","dev.kord.core.event.guild.VoiceServerUpdateEvent"]},{"name":"class VoiceState(val data: VoiceStateData, val kord: Kord, val supplier: EntitySupplier = kord.defaultSupplier) : KordObject, Strategizable","description":"dev.kord.core.entity.VoiceState","location":"core/dev.kord.core.entity/-voice-state/index.html","searchKeys":["VoiceState","class VoiceState(val data: VoiceStateData, val kord: Kord, val supplier: EntitySupplier = kord.defaultSupplier) : KordObject, Strategizable","dev.kord.core.entity.VoiceState"]},{"name":"class VoiceStateUpdateEvent(val old: VoiceState?, val state: VoiceState, val shard: Int, val customContext: Any?) : Event","description":"dev.kord.core.event.user.VoiceStateUpdateEvent","location":"core/dev.kord.core.event.user/-voice-state-update-event/index.html","searchKeys":["VoiceStateUpdateEvent","class VoiceStateUpdateEvent(val old: VoiceState?, val state: VoiceState, val shard: Int, val customContext: Any?) : Event","dev.kord.core.event.user.VoiceStateUpdateEvent"]},{"name":"class Web(val status: PresenceStatus) : ClientStatus.Client","description":"dev.kord.core.entity.ClientStatus.Client.Web","location":"core/dev.kord.core.entity/-client-status/-client/-web/index.html","searchKeys":["Web","class Web(val status: PresenceStatus) : ClientStatus.Client","dev.kord.core.entity.ClientStatus.Client.Web"]},{"name":"class WebhookUpdateEvent(val guildId: Snowflake, val channelId: Snowflake, val kord: Kord, val shard: Int, val customContext: Any?, val supplier: EntitySupplier = kord.defaultSupplier) : Event, Strategizable","description":"dev.kord.core.event.guild.WebhookUpdateEvent","location":"core/dev.kord.core.event.guild/-webhook-update-event/index.html","searchKeys":["WebhookUpdateEvent","class WebhookUpdateEvent(val guildId: Snowflake, val channelId: Snowflake, val kord: Kord, val shard: Int, val customContext: Any?, val supplier: EntitySupplier = kord.defaultSupplier) : Event, Strategizable","dev.kord.core.event.guild.WebhookUpdateEvent"]},{"name":"class WelcomeScreen(val data: WelcomeScreenData, val kord: Kord) : KordObject","description":"dev.kord.core.entity.WelcomeScreen","location":"core/dev.kord.core.entity/-welcome-screen/index.html","searchKeys":["WelcomeScreen","class WelcomeScreen(val data: WelcomeScreenData, val kord: Kord) : KordObject","dev.kord.core.entity.WelcomeScreen"]},{"name":"class WelcomeScreenChannel(val data: WelcomeScreenChannelData, val kord: Kord, val supplier: EntitySupplier = kord.defaultSupplier) : ChannelBehavior","description":"dev.kord.core.entity.channel.WelcomeScreenChannel","location":"core/dev.kord.core.entity.channel/-welcome-screen-channel/index.html","searchKeys":["WelcomeScreenChannel","class WelcomeScreenChannel(val data: WelcomeScreenChannelData, val kord: Kord, val supplier: EntitySupplier = kord.defaultSupplier) : ChannelBehavior","dev.kord.core.entity.channel.WelcomeScreenChannel"]},{"name":"class ZombieConnectionEvent(val kord: Kord, val shard: Int, val customContext: Any?) : DisconnectEvent","description":"dev.kord.core.event.gateway.DisconnectEvent.ZombieConnectionEvent","location":"core/dev.kord.core.event.gateway/-disconnect-event/-zombie-connection-event/index.html","searchKeys":["ZombieConnectionEvent","class ZombieConnectionEvent(val kord: Kord, val shard: Int, val customContext: Any?) : DisconnectEvent","dev.kord.core.event.gateway.DisconnectEvent.ZombieConnectionEvent"]},{"name":"data class ActivityData(val name: String, val type: ActivityType, val url: Optional<String?> = Optional.Missing(), val createdAt: Instant, val timestamps: Optional<DiscordActivityTimestamps> = Optional.Missing(), val applicationId: OptionalSnowflake = OptionalSnowflake.Missing, val details: Optional<String?> = Optional.Missing(), val state: Optional<String?> = Optional.Missing(), val emoji: Optional<DiscordActivityEmoji?> = Optional.Missing(), val party: Optional<DiscordActivityParty> = Optional.Missing(), val assets: Optional<DiscordActivityAssets> = Optional.Missing(), val secrets: Optional<DiscordActivitySecrets> = Optional.Missing(), val instance: OptionalBoolean = OptionalBoolean.Missing, val flags: Optional<ActivityFlags> = Optional.Missing(), val buttons: Optional<List<String>> = Optional.Missing())","description":"dev.kord.core.cache.data.ActivityData","location":"core/dev.kord.core.cache.data/-activity-data/index.html","searchKeys":["ActivityData","data class ActivityData(val name: String, val type: ActivityType, val url: Optional<String?> = Optional.Missing(), val createdAt: Instant, val timestamps: Optional<DiscordActivityTimestamps> = Optional.Missing(), val applicationId: OptionalSnowflake = OptionalSnowflake.Missing, val details: Optional<String?> = Optional.Missing(), val state: Optional<String?> = Optional.Missing(), val emoji: Optional<DiscordActivityEmoji?> = Optional.Missing(), val party: Optional<DiscordActivityParty> = Optional.Missing(), val assets: Optional<DiscordActivityAssets> = Optional.Missing(), val secrets: Optional<DiscordActivitySecrets> = Optional.Missing(), val instance: OptionalBoolean = OptionalBoolean.Missing, val flags: Optional<ActivityFlags> = Optional.Missing(), val buttons: Optional<List<String>> = Optional.Missing())","dev.kord.core.cache.data.ActivityData"]},{"name":"data class ApplicationCommandData(val id: Snowflake, val type: Optional<ApplicationCommandType> = Optional.Missing(), val applicationId: Snowflake, val name: String, val nameLocalizations: Optional<Map<Locale, String>?> = Optional.Missing(), val description: String?, val descriptionLocalizations: Optional<Map<Locale, String>?> = Optional.Missing(), val guildId: OptionalSnowflake = OptionalSnowflake.Missing, val options: Optional<List<ApplicationCommandOptionData>> = Optional.Missing(), val defaultMemberPermissions: Permissions?, val dmPermission: OptionalBoolean = OptionalBoolean.Missing, val defaultPermission: OptionalBoolean? = OptionalBoolean.Missing, val version: Snowflake)","description":"dev.kord.core.cache.data.ApplicationCommandData","location":"core/dev.kord.core.cache.data/-application-command-data/index.html","searchKeys":["ApplicationCommandData","data class ApplicationCommandData(val id: Snowflake, val type: Optional<ApplicationCommandType> = Optional.Missing(), val applicationId: Snowflake, val name: String, val nameLocalizations: Optional<Map<Locale, String>?> = Optional.Missing(), val description: String?, val descriptionLocalizations: Optional<Map<Locale, String>?> = Optional.Missing(), val guildId: OptionalSnowflake = OptionalSnowflake.Missing, val options: Optional<List<ApplicationCommandOptionData>> = Optional.Missing(), val defaultMemberPermissions: Permissions?, val dmPermission: OptionalBoolean = OptionalBoolean.Missing, val defaultPermission: OptionalBoolean? = OptionalBoolean.Missing, val version: Snowflake)","dev.kord.core.cache.data.ApplicationCommandData"]},{"name":"data class ApplicationCommandOptionChoiceData(val name: String, val value: String)","description":"dev.kord.core.cache.data.ApplicationCommandOptionChoiceData","location":"core/dev.kord.core.cache.data/-application-command-option-choice-data/index.html","searchKeys":["ApplicationCommandOptionChoiceData","data class ApplicationCommandOptionChoiceData(val name: String, val value: String)","dev.kord.core.cache.data.ApplicationCommandOptionChoiceData"]},{"name":"data class ApplicationCommandOptionData(val type: ApplicationCommandOptionType, val name: String, val description: String, val default: OptionalBoolean = OptionalBoolean.Missing, val required: OptionalBoolean = OptionalBoolean.Missing, val choices: Optional<List<ApplicationCommandOptionChoiceData>> = Optional.Missing(), val options: Optional<List<ApplicationCommandOptionData>> = Optional.Missing(), val channelTypes: Optional<List<ChannelType>> = Optional.Missing(), val minValue: Optional<JsonPrimitive> = Optional.Missing(), val maxValue: Optional<JsonPrimitive> = Optional.Missing(), val minLength: OptionalInt = OptionalInt.Missing, val maxLength: OptionalInt = OptionalInt.Missing)","description":"dev.kord.core.cache.data.ApplicationCommandOptionData","location":"core/dev.kord.core.cache.data/-application-command-option-data/index.html","searchKeys":["ApplicationCommandOptionData","data class ApplicationCommandOptionData(val type: ApplicationCommandOptionType, val name: String, val description: String, val default: OptionalBoolean = OptionalBoolean.Missing, val required: OptionalBoolean = OptionalBoolean.Missing, val choices: Optional<List<ApplicationCommandOptionChoiceData>> = Optional.Missing(), val options: Optional<List<ApplicationCommandOptionData>> = Optional.Missing(), val channelTypes: Optional<List<ChannelType>> = Optional.Missing(), val minValue: Optional<JsonPrimitive> = Optional.Missing(), val maxValue: Optional<JsonPrimitive> = Optional.Missing(), val minLength: OptionalInt = OptionalInt.Missing, val maxLength: OptionalInt = OptionalInt.Missing)","dev.kord.core.cache.data.ApplicationCommandOptionData"]},{"name":"data class ApplicationCommandParameterData(val name: String, val description: String, val required: OptionalBoolean, val choices: Optional<List<ApplicationCommandOptionChoiceData>>, val channelTypes: Optional<List<ChannelType>>)","description":"dev.kord.core.cache.data.ApplicationCommandParameterData","location":"core/dev.kord.core.cache.data/-application-command-parameter-data/index.html","searchKeys":["ApplicationCommandParameterData","data class ApplicationCommandParameterData(val name: String, val description: String, val required: OptionalBoolean, val choices: Optional<List<ApplicationCommandOptionChoiceData>>, val channelTypes: Optional<List<ChannelType>>)","dev.kord.core.cache.data.ApplicationCommandParameterData"]},{"name":"data class ApplicationCommandSubcommandData(val name: String, val description: String, val isDefault: OptionalBoolean, val parameters: Optional<List<ApplicationCommandParameterData>>)","description":"dev.kord.core.cache.data.ApplicationCommandSubcommandData","location":"core/dev.kord.core.cache.data/-application-command-subcommand-data/index.html","searchKeys":["ApplicationCommandSubcommandData","data class ApplicationCommandSubcommandData(val name: String, val description: String, val isDefault: OptionalBoolean, val parameters: Optional<List<ApplicationCommandParameterData>>)","dev.kord.core.cache.data.ApplicationCommandSubcommandData"]},{"name":"data class ApplicationData(val id: Snowflake, val name: String, val icon: String?, val description: String, val rpcOrigins: Optional<List<String>> = Optional.Missing(), val botPublic: Boolean, val botRequireCodeGrant: Boolean, val termsOfServiceUrl: Optional<String> = Optional.Missing(), val privacyPolicyUrl: Optional<String> = Optional.Missing(), val ownerId: OptionalSnowflake = OptionalSnowflake.Missing, val verifyKey: String, val team: TeamData?, val guildId: OptionalSnowflake = OptionalSnowflake.Missing, val primarySkuId: OptionalSnowflake = OptionalSnowflake.Missing, val slug: Optional<String> = Optional.Missing(), val coverImage: Optional<String> = Optional.Missing(), val flags: Optional<ApplicationFlags> = Optional.Missing(), val tags: Optional<List<String>> = Optional.Missing(), val installParams: Optional<InstallParams> = Optional.Missing(), val customInstallUrl: Optional<String> = Optional.Missing()) : BaseApplicationData","description":"dev.kord.core.cache.data.ApplicationData","location":"core/dev.kord.core.cache.data/-application-data/index.html","searchKeys":["ApplicationData","data class ApplicationData(val id: Snowflake, val name: String, val icon: String?, val description: String, val rpcOrigins: Optional<List<String>> = Optional.Missing(), val botPublic: Boolean, val botRequireCodeGrant: Boolean, val termsOfServiceUrl: Optional<String> = Optional.Missing(), val privacyPolicyUrl: Optional<String> = Optional.Missing(), val ownerId: OptionalSnowflake = OptionalSnowflake.Missing, val verifyKey: String, val team: TeamData?, val guildId: OptionalSnowflake = OptionalSnowflake.Missing, val primarySkuId: OptionalSnowflake = OptionalSnowflake.Missing, val slug: Optional<String> = Optional.Missing(), val coverImage: Optional<String> = Optional.Missing(), val flags: Optional<ApplicationFlags> = Optional.Missing(), val tags: Optional<List<String>> = Optional.Missing(), val installParams: Optional<InstallParams> = Optional.Missing(), val customInstallUrl: Optional<String> = Optional.Missing()) : BaseApplicationData","dev.kord.core.cache.data.ApplicationData"]},{"name":"data class ApplicationInteractionData(val id: OptionalSnowflake = OptionalSnowflake.Missing, val type: Optional<ApplicationCommandType> = Optional.Missing(), val targetId: OptionalSnowflake = OptionalSnowflake.Missing, val name: Optional<String> = Optional.Missing(), val options: Optional<List<OptionData>> = Optional.Missing(), val resolvedObjectsData: Optional<ResolvedObjectsData> = Optional.Missing(), val guildId: OptionalSnowflake = OptionalSnowflake.Missing, val customId: Optional<String> = Optional.Missing(), val componentType: Optional<ComponentType> = Optional.Missing(), val values: Optional<List<String>> = Optional.Missing(), val components: Optional<List<ComponentData>> = Optional.Missing())","description":"dev.kord.core.cache.data.ApplicationInteractionData","location":"core/dev.kord.core.cache.data/-application-interaction-data/index.html","searchKeys":["ApplicationInteractionData","data class ApplicationInteractionData(val id: OptionalSnowflake = OptionalSnowflake.Missing, val type: Optional<ApplicationCommandType> = Optional.Missing(), val targetId: OptionalSnowflake = OptionalSnowflake.Missing, val name: Optional<String> = Optional.Missing(), val options: Optional<List<OptionData>> = Optional.Missing(), val resolvedObjectsData: Optional<ResolvedObjectsData> = Optional.Missing(), val guildId: OptionalSnowflake = OptionalSnowflake.Missing, val customId: Optional<String> = Optional.Missing(), val componentType: Optional<ComponentType> = Optional.Missing(), val values: Optional<List<String>> = Optional.Missing(), val components: Optional<List<ComponentData>> = Optional.Missing())","dev.kord.core.cache.data.ApplicationInteractionData"]},{"name":"data class Assets(val largeImage: String?, val largeText: String?, val smallImage: String?, val smallText: String?)","description":"dev.kord.core.entity.Activity.Assets","location":"core/dev.kord.core.entity/-activity/-assets/index.html","searchKeys":["Assets","data class Assets(val largeImage: String?, val largeText: String?, val smallImage: String?, val smallText: String?)","dev.kord.core.entity.Activity.Assets"]},{"name":"data class Attachment(val data: AttachmentData, val kord: Kord) : KordEntity","description":"dev.kord.core.entity.Attachment","location":"core/dev.kord.core.entity/-attachment/index.html","searchKeys":["Attachment","data class Attachment(val data: AttachmentData, val kord: Kord) : KordEntity","dev.kord.core.entity.Attachment"]},{"name":"data class AttachmentData(val id: Snowflake, val filename: String, val description: Optional<String> = Optional.Missing(), val contentType: Optional<String> = Optional.Missing(), val size: Int, val url: String, val proxyUrl: String, val height: OptionalInt? = OptionalInt.Missing, val width: OptionalInt? = OptionalInt.Missing, val ephemeral: OptionalBoolean = OptionalBoolean.Missing)","description":"dev.kord.core.cache.data.AttachmentData","location":"core/dev.kord.core.cache.data/-attachment-data/index.html","searchKeys":["AttachmentData","data class AttachmentData(val id: Snowflake, val filename: String, val description: Optional<String> = Optional.Missing(), val contentType: Optional<String> = Optional.Missing(), val size: Int, val url: String, val proxyUrl: String, val height: OptionalInt? = OptionalInt.Missing, val width: OptionalInt? = OptionalInt.Missing, val ephemeral: OptionalBoolean = OptionalBoolean.Missing)","dev.kord.core.cache.data.AttachmentData"]},{"name":"data class Author(val data: EmbedAuthorData, val kord: Kord) : KordObject","description":"dev.kord.core.entity.Embed.Author","location":"core/dev.kord.core.entity/-embed/-author/index.html","searchKeys":["Author","data class Author(val data: EmbedAuthorData, val kord: Kord) : KordObject","dev.kord.core.entity.Embed.Author"]},{"name":"data class AutoModerationActionData(val type: AutoModerationActionType, val metadata: Optional<AutoModerationActionMetadataData> = Optional.Missing())","description":"dev.kord.core.cache.data.AutoModerationActionData","location":"core/dev.kord.core.cache.data/-auto-moderation-action-data/index.html","searchKeys":["AutoModerationActionData","data class AutoModerationActionData(val type: AutoModerationActionType, val metadata: Optional<AutoModerationActionMetadataData> = Optional.Missing())","dev.kord.core.cache.data.AutoModerationActionData"]},{"name":"data class AutoModerationActionExecutionEventData(val guildId: Snowflake, val action: AutoModerationActionData, val ruleId: Snowflake, val ruleTriggerType: AutoModerationRuleTriggerType, val userId: Snowflake, val channelId: OptionalSnowflake = OptionalSnowflake.Missing, val messageId: OptionalSnowflake = OptionalSnowflake.Missing, val alertSystemMessageId: OptionalSnowflake = OptionalSnowflake.Missing, val content: String, val matchedKeyword: String?, val matchedContent: String?)","description":"dev.kord.core.event.automoderation.data.AutoModerationActionExecutionEventData","location":"core/dev.kord.core.event.automoderation.data/-auto-moderation-action-execution-event-data/index.html","searchKeys":["AutoModerationActionExecutionEventData","data class AutoModerationActionExecutionEventData(val guildId: Snowflake, val action: AutoModerationActionData, val ruleId: Snowflake, val ruleTriggerType: AutoModerationRuleTriggerType, val userId: Snowflake, val channelId: OptionalSnowflake = OptionalSnowflake.Missing, val messageId: OptionalSnowflake = OptionalSnowflake.Missing, val alertSystemMessageId: OptionalSnowflake = OptionalSnowflake.Missing, val content: String, val matchedKeyword: String?, val matchedContent: String?)","dev.kord.core.event.automoderation.data.AutoModerationActionExecutionEventData"]},{"name":"data class AutoModerationActionMetadataData(val channelId: OptionalSnowflake = OptionalSnowflake.Missing, val durationSeconds: Optional<DurationInSeconds> = Optional.Missing())","description":"dev.kord.core.cache.data.AutoModerationActionMetadataData","location":"core/dev.kord.core.cache.data/-auto-moderation-action-metadata-data/index.html","searchKeys":["AutoModerationActionMetadataData","data class AutoModerationActionMetadataData(val channelId: OptionalSnowflake = OptionalSnowflake.Missing, val durationSeconds: Optional<DurationInSeconds> = Optional.Missing())","dev.kord.core.cache.data.AutoModerationActionMetadataData"]},{"name":"data class AutoModerationRuleData(val id: Snowflake, val guildId: Snowflake, val name: String, val creatorId: Snowflake, val eventType: AutoModerationRuleEventType, val triggerType: AutoModerationRuleTriggerType, val triggerMetadata: AutoModerationRuleTriggerMetadataData, val actions: List<AutoModerationActionData>, val enabled: Boolean, val exemptRoles: List<Snowflake>, val exemptChannels: List<Snowflake>)","description":"dev.kord.core.cache.data.AutoModerationRuleData","location":"core/dev.kord.core.cache.data/-auto-moderation-rule-data/index.html","searchKeys":["AutoModerationRuleData","data class AutoModerationRuleData(val id: Snowflake, val guildId: Snowflake, val name: String, val creatorId: Snowflake, val eventType: AutoModerationRuleEventType, val triggerType: AutoModerationRuleTriggerType, val triggerMetadata: AutoModerationRuleTriggerMetadataData, val actions: List<AutoModerationActionData>, val enabled: Boolean, val exemptRoles: List<Snowflake>, val exemptChannels: List<Snowflake>)","dev.kord.core.cache.data.AutoModerationRuleData"]},{"name":"data class AutoModerationRuleTriggerMetadataData(val keywordFilter: Optional<List<String>> = Optional.Missing(), val regexPatterns: Optional<List<String>> = Optional.Missing(), val presets: Optional<List<AutoModerationRuleKeywordPresetType>> = Optional.Missing(), val allowList: Optional<List<String>> = Optional.Missing(), val mentionTotalLimit: OptionalInt = OptionalInt.Missing)","description":"dev.kord.core.cache.data.AutoModerationRuleTriggerMetadataData","location":"core/dev.kord.core.cache.data/-auto-moderation-rule-trigger-metadata-data/index.html","searchKeys":["AutoModerationRuleTriggerMetadataData","data class AutoModerationRuleTriggerMetadataData(val keywordFilter: Optional<List<String>> = Optional.Missing(), val regexPatterns: Optional<List<String>> = Optional.Missing(), val presets: Optional<List<AutoModerationRuleKeywordPresetType>> = Optional.Missing(), val allowList: Optional<List<String>> = Optional.Missing(), val mentionTotalLimit: OptionalInt = OptionalInt.Missing)","dev.kord.core.cache.data.AutoModerationRuleTriggerMetadataData"]},{"name":"data class Avatar(val data: UserData, val kord: Kord) : KordObject","description":"dev.kord.core.entity.User.Avatar","location":"core/dev.kord.core.entity/-user/-avatar/index.html","searchKeys":["Avatar","data class Avatar(val data: UserData, val kord: Kord) : KordObject","dev.kord.core.entity.User.Avatar"]},{"name":"data class BanData(val reason: String? = null, val userId: Snowflake, val guildId: Snowflake)","description":"dev.kord.core.cache.data.BanData","location":"core/dev.kord.core.cache.data/-ban-data/index.html","searchKeys":["BanData","data class BanData(val reason: String? = null, val userId: Snowflake, val guildId: Snowflake)","dev.kord.core.cache.data.BanData"]},{"name":"data class ChannelData(val id: Snowflake, val type: ChannelType, val guildId: OptionalSnowflake = OptionalSnowflake.Missing, val position: OptionalInt = OptionalInt.Missing, val permissionOverwrites: Optional<List<Overwrite>> = Optional.Missing(), val name: Optional<String?> = Optional.Missing(), val topic: Optional<String?> = Optional.Missing(), val nsfw: OptionalBoolean = OptionalBoolean.Missing, val lastMessageId: OptionalSnowflake? = OptionalSnowflake.Missing, val bitrate: OptionalInt = OptionalInt.Missing, val userLimit: OptionalInt = OptionalInt.Missing, val rateLimitPerUser: Optional<DurationInSeconds> = Optional.Missing(), val recipients: Optional<List<Snowflake>> = Optional.Missing(), val icon: Optional<String?> = Optional.Missing(), val ownerId: OptionalSnowflake = OptionalSnowflake.Missing, val applicationId: OptionalSnowflake = OptionalSnowflake.Missing, val parentId: OptionalSnowflake? = OptionalSnowflake.Missing, val lastPinTimestamp: Optional<Instant?> = Optional.Missing(), val rtcRegion: Optional<String?> = Optional.Missing(), val videoQualityMode: Optional<VideoQualityMode> = Optional.Missing(), val permissions: Optional<Permissions> = Optional.Missing(), val threadMetadata: Optional<ThreadMetadataData> = Optional.Missing(), val messageCount: OptionalInt = OptionalInt.Missing, val memberCount: OptionalInt = OptionalInt.Missing, val defaultAutoArchiveDuration: Optional<ArchiveDuration> = Optional.Missing(), val member: Optional<ThreadMemberData> = Optional.Missing())","description":"dev.kord.core.cache.data.ChannelData","location":"core/dev.kord.core.cache.data/-channel-data/index.html","searchKeys":["ChannelData","data class ChannelData(val id: Snowflake, val type: ChannelType, val guildId: OptionalSnowflake = OptionalSnowflake.Missing, val position: OptionalInt = OptionalInt.Missing, val permissionOverwrites: Optional<List<Overwrite>> = Optional.Missing(), val name: Optional<String?> = Optional.Missing(), val topic: Optional<String?> = Optional.Missing(), val nsfw: OptionalBoolean = OptionalBoolean.Missing, val lastMessageId: OptionalSnowflake? = OptionalSnowflake.Missing, val bitrate: OptionalInt = OptionalInt.Missing, val userLimit: OptionalInt = OptionalInt.Missing, val rateLimitPerUser: Optional<DurationInSeconds> = Optional.Missing(), val recipients: Optional<List<Snowflake>> = Optional.Missing(), val icon: Optional<String?> = Optional.Missing(), val ownerId: OptionalSnowflake = OptionalSnowflake.Missing, val applicationId: OptionalSnowflake = OptionalSnowflake.Missing, val parentId: OptionalSnowflake? = OptionalSnowflake.Missing, val lastPinTimestamp: Optional<Instant?> = Optional.Missing(), val rtcRegion: Optional<String?> = Optional.Missing(), val videoQualityMode: Optional<VideoQualityMode> = Optional.Missing(), val permissions: Optional<Permissions> = Optional.Missing(), val threadMetadata: Optional<ThreadMetadataData> = Optional.Missing(), val messageCount: OptionalInt = OptionalInt.Missing, val memberCount: OptionalInt = OptionalInt.Missing, val defaultAutoArchiveDuration: Optional<ArchiveDuration> = Optional.Missing(), val member: Optional<ThreadMemberData> = Optional.Missing())","dev.kord.core.cache.data.ChannelData"]},{"name":"data class ChannelPinsUpdateEventData(val guildId: OptionalSnowflake = OptionalSnowflake.Missing, val channelId: Snowflake, val lastPinTimestamp: Optional<Instant?> = Optional.Missing())","description":"dev.kord.core.event.channel.data.ChannelPinsUpdateEventData","location":"core/dev.kord.core.event.channel.data/-channel-pins-update-event-data/index.html","searchKeys":["ChannelPinsUpdateEventData","data class ChannelPinsUpdateEventData(val guildId: OptionalSnowflake = OptionalSnowflake.Missing, val channelId: Snowflake, val lastPinTimestamp: Optional<Instant?> = Optional.Missing())","dev.kord.core.event.channel.data.ChannelPinsUpdateEventData"]},{"name":"data class ChatComponentData(val type: ComponentType, val style: Optional<ButtonStyle> = Optional.Missing(), val label: Optional<String> = Optional.Missing(), val emoji: Optional<DiscordPartialEmoji> = Optional.Missing(), val customId: Optional<String> = Optional.Missing(), val url: Optional<String> = Optional.Missing(), val disabled: OptionalBoolean = OptionalBoolean.Missing, val components: Optional<List<ComponentData>> = Optional.Missing(), val placeholder: Optional<String> = Optional.Missing(), val minValues: OptionalInt = OptionalInt.Missing, val maxValues: OptionalInt = OptionalInt.Missing, val options: Optional<List<SelectOptionData>> = Optional.Missing(), val minLength: OptionalInt = OptionalInt.Missing, val maxLength: OptionalInt = OptionalInt.Missing, val required: OptionalBoolean = OptionalBoolean.Missing, val value: Optional<String> = Optional.Missing()) : ComponentData","description":"dev.kord.core.cache.data.ChatComponentData","location":"core/dev.kord.core.cache.data/-chat-component-data/index.html","searchKeys":["ChatComponentData","data class ChatComponentData(val type: ComponentType, val style: Optional<ButtonStyle> = Optional.Missing(), val label: Optional<String> = Optional.Missing(), val emoji: Optional<DiscordPartialEmoji> = Optional.Missing(), val customId: Optional<String> = Optional.Missing(), val url: Optional<String> = Optional.Missing(), val disabled: OptionalBoolean = OptionalBoolean.Missing, val components: Optional<List<ComponentData>> = Optional.Missing(), val placeholder: Optional<String> = Optional.Missing(), val minValues: OptionalInt = OptionalInt.Missing, val maxValues: OptionalInt = OptionalInt.Missing, val options: Optional<List<SelectOptionData>> = Optional.Missing(), val minLength: OptionalInt = OptionalInt.Missing, val maxLength: OptionalInt = OptionalInt.Missing, val required: OptionalBoolean = OptionalBoolean.Missing, val value: Optional<String> = Optional.Missing()) : ComponentData","dev.kord.core.cache.data.ChatComponentData"]},{"name":"data class ClientStatusData(val desktop: Optional<PresenceStatus> = Optional.Missing(), val mobile: Optional<PresenceStatus> = Optional.Missing(), val web: Optional<PresenceStatus> = Optional.Missing())","description":"dev.kord.core.cache.data.ClientStatusData","location":"core/dev.kord.core.cache.data/-client-status-data/index.html","searchKeys":["ClientStatusData","data class ClientStatusData(val desktop: Optional<PresenceStatus> = Optional.Missing(), val mobile: Optional<PresenceStatus> = Optional.Missing(), val web: Optional<PresenceStatus> = Optional.Missing())","dev.kord.core.cache.data.ClientStatusData"]},{"name":"data class Custom(val id: Snowflake, val name: String, val isAnimated: Boolean) : ReactionEmoji","description":"dev.kord.core.entity.ReactionEmoji.Custom","location":"core/dev.kord.core.entity/-reaction-emoji/-custom/index.html","searchKeys":["Custom","data class Custom(val id: Snowflake, val name: String, val isAnimated: Boolean) : ReactionEmoji","dev.kord.core.entity.ReactionEmoji.Custom"]},{"name":"data class DmChannel(val data: ChannelData, val kord: Kord, val supplier: EntitySupplier = kord.defaultSupplier) : MessageChannel","description":"dev.kord.core.entity.channel.DmChannel","location":"core/dev.kord.core.entity.channel/-dm-channel/index.html","searchKeys":["DmChannel","data class DmChannel(val data: ChannelData, val kord: Kord, val supplier: EntitySupplier = kord.defaultSupplier) : MessageChannel","dev.kord.core.entity.channel.DmChannel"]},{"name":"data class Embed(val data: EmbedData, val kord: Kord) : KordObject","description":"dev.kord.core.entity.Embed","location":"core/dev.kord.core.entity/-embed/index.html","searchKeys":["Embed","data class Embed(val data: EmbedData, val kord: Kord) : KordObject","dev.kord.core.entity.Embed"]},{"name":"data class EmbedAuthorData(val name: Optional<String> = Optional.Missing(), val url: Optional<String> = Optional.Missing(), val iconUrl: Optional<String> = Optional.Missing(), val proxyIconUrl: Optional<String> = Optional.Missing())","description":"dev.kord.core.cache.data.EmbedAuthorData","location":"core/dev.kord.core.cache.data/-embed-author-data/index.html","searchKeys":["EmbedAuthorData","data class EmbedAuthorData(val name: Optional<String> = Optional.Missing(), val url: Optional<String> = Optional.Missing(), val iconUrl: Optional<String> = Optional.Missing(), val proxyIconUrl: Optional<String> = Optional.Missing())","dev.kord.core.cache.data.EmbedAuthorData"]},{"name":"data class EmbedData(val title: Optional<String> = Optional.Missing(), val type: Optional<EmbedType> = Optional.Missing(), val description: Optional<String> = Optional.Missing(), val url: Optional<String> = Optional.Missing(), val timestamp: Optional<Instant> = Optional.Missing(), val color: OptionalInt = OptionalInt.Missing, val footer: Optional<EmbedFooterData> = Optional.Missing(), val image: Optional<EmbedImageData> = Optional.Missing(), val thumbnail: Optional<EmbedThumbnailData> = Optional.Missing(), val video: Optional<EmbedVideoData> = Optional.Missing(), val provider: Optional<EmbedProviderData> = Optional.Missing(), val author: Optional<EmbedAuthorData> = Optional.Missing(), val fields: Optional<List<EmbedFieldData>> = Optional.Missing())","description":"dev.kord.core.cache.data.EmbedData","location":"core/dev.kord.core.cache.data/-embed-data/index.html","searchKeys":["EmbedData","data class EmbedData(val title: Optional<String> = Optional.Missing(), val type: Optional<EmbedType> = Optional.Missing(), val description: Optional<String> = Optional.Missing(), val url: Optional<String> = Optional.Missing(), val timestamp: Optional<Instant> = Optional.Missing(), val color: OptionalInt = OptionalInt.Missing, val footer: Optional<EmbedFooterData> = Optional.Missing(), val image: Optional<EmbedImageData> = Optional.Missing(), val thumbnail: Optional<EmbedThumbnailData> = Optional.Missing(), val video: Optional<EmbedVideoData> = Optional.Missing(), val provider: Optional<EmbedProviderData> = Optional.Missing(), val author: Optional<EmbedAuthorData> = Optional.Missing(), val fields: Optional<List<EmbedFieldData>> = Optional.Missing())","dev.kord.core.cache.data.EmbedData"]},{"name":"data class EmbedFieldData(val name: String, val value: String, val inline: OptionalBoolean = OptionalBoolean.Missing)","description":"dev.kord.core.cache.data.EmbedFieldData","location":"core/dev.kord.core.cache.data/-embed-field-data/index.html","searchKeys":["EmbedFieldData","data class EmbedFieldData(val name: String, val value: String, val inline: OptionalBoolean = OptionalBoolean.Missing)","dev.kord.core.cache.data.EmbedFieldData"]},{"name":"data class EmbedFooterData(val text: String, val iconUrl: Optional<String> = Optional.Missing(), val proxyIconUrl: Optional<String> = Optional.Missing())","description":"dev.kord.core.cache.data.EmbedFooterData","location":"core/dev.kord.core.cache.data/-embed-footer-data/index.html","searchKeys":["EmbedFooterData","data class EmbedFooterData(val text: String, val iconUrl: Optional<String> = Optional.Missing(), val proxyIconUrl: Optional<String> = Optional.Missing())","dev.kord.core.cache.data.EmbedFooterData"]},{"name":"data class EmbedImageData(val url: Optional<String> = Optional.Missing(), val proxyUrl: Optional<String> = Optional.Missing(), val height: OptionalInt = OptionalInt.Missing, val width: OptionalInt = OptionalInt.Missing)","description":"dev.kord.core.cache.data.EmbedImageData","location":"core/dev.kord.core.cache.data/-embed-image-data/index.html","searchKeys":["EmbedImageData","data class EmbedImageData(val url: Optional<String> = Optional.Missing(), val proxyUrl: Optional<String> = Optional.Missing(), val height: OptionalInt = OptionalInt.Missing, val width: OptionalInt = OptionalInt.Missing)","dev.kord.core.cache.data.EmbedImageData"]},{"name":"data class EmbedProviderData(val name: Optional<String> = Optional.Missing(), val url: Optional<String?> = Optional.Missing())","description":"dev.kord.core.cache.data.EmbedProviderData","location":"core/dev.kord.core.cache.data/-embed-provider-data/index.html","searchKeys":["EmbedProviderData","data class EmbedProviderData(val name: Optional<String> = Optional.Missing(), val url: Optional<String?> = Optional.Missing())","dev.kord.core.cache.data.EmbedProviderData"]},{"name":"data class EmbedThumbnailData(val url: Optional<String> = Optional.Missing(), val proxyUrl: Optional<String> = Optional.Missing(), val height: OptionalInt = OptionalInt.Missing, val width: OptionalInt = OptionalInt.Missing)","description":"dev.kord.core.cache.data.EmbedThumbnailData","location":"core/dev.kord.core.cache.data/-embed-thumbnail-data/index.html","searchKeys":["EmbedThumbnailData","data class EmbedThumbnailData(val url: Optional<String> = Optional.Missing(), val proxyUrl: Optional<String> = Optional.Missing(), val height: OptionalInt = OptionalInt.Missing, val width: OptionalInt = OptionalInt.Missing)","dev.kord.core.cache.data.EmbedThumbnailData"]},{"name":"data class EmbedVideoData(val url: Optional<String> = Optional.Missing(), val height: OptionalInt = OptionalInt.Missing, val width: OptionalInt = OptionalInt.Missing)","description":"dev.kord.core.cache.data.EmbedVideoData","location":"core/dev.kord.core.cache.data/-embed-video-data/index.html","searchKeys":["EmbedVideoData","data class EmbedVideoData(val url: Optional<String> = Optional.Missing(), val height: OptionalInt = OptionalInt.Missing, val width: OptionalInt = OptionalInt.Missing)","dev.kord.core.cache.data.EmbedVideoData"]},{"name":"data class EmojiData(val id: Snowflake, val guildId: Snowflake, val name: String? = null, val userId: OptionalSnowflake = OptionalSnowflake.Missing, val roles: Optional<List<Snowflake>> = Optional.Missing(), val requireColons: OptionalBoolean = OptionalBoolean.Missing, val managed: OptionalBoolean = OptionalBoolean.Missing, val animated: OptionalBoolean = OptionalBoolean.Missing, val available: OptionalBoolean = OptionalBoolean.Missing)","description":"dev.kord.core.cache.data.EmojiData","location":"core/dev.kord.core.cache.data/-emoji-data/index.html","searchKeys":["EmojiData","data class EmojiData(val id: Snowflake, val guildId: Snowflake, val name: String? = null, val userId: OptionalSnowflake = OptionalSnowflake.Missing, val roles: Optional<List<Snowflake>> = Optional.Missing(), val requireColons: OptionalBoolean = OptionalBoolean.Missing, val managed: OptionalBoolean = OptionalBoolean.Missing, val animated: OptionalBoolean = OptionalBoolean.Missing, val available: OptionalBoolean = OptionalBoolean.Missing)","dev.kord.core.cache.data.EmojiData"]},{"name":"data class Field(val data: EmbedFieldData, val kord: Kord) : KordObject","description":"dev.kord.core.entity.Embed.Field","location":"core/dev.kord.core.entity/-embed/-field/index.html","searchKeys":["Field","data class Field(val data: EmbedFieldData, val kord: Kord) : KordObject","dev.kord.core.entity.Embed.Field"]},{"name":"data class Footer(val data: EmbedFooterData, val kord: Kord) : KordObject","description":"dev.kord.core.entity.Embed.Footer","location":"core/dev.kord.core.entity/-embed/-footer/index.html","searchKeys":["Footer","data class Footer(val data: EmbedFooterData, val kord: Kord) : KordObject","dev.kord.core.entity.Embed.Footer"]},{"name":"data class GuildApplicationCommandPermissionData(val id: Snowflake, val type: ApplicationCommandPermissionType, val permission: Boolean)","description":"dev.kord.core.cache.data.GuildApplicationCommandPermissionData","location":"core/dev.kord.core.cache.data/-guild-application-command-permission-data/index.html","searchKeys":["GuildApplicationCommandPermissionData","data class GuildApplicationCommandPermissionData(val id: Snowflake, val type: ApplicationCommandPermissionType, val permission: Boolean)","dev.kord.core.cache.data.GuildApplicationCommandPermissionData"]},{"name":"data class GuildApplicationCommandPermissionsData(val id: Snowflake, val applicationId: Snowflake, val guildId: Snowflake, val permissions: List<GuildApplicationCommandPermissionData>)","description":"dev.kord.core.cache.data.GuildApplicationCommandPermissionsData","location":"core/dev.kord.core.cache.data/-guild-application-command-permissions-data/index.html","searchKeys":["GuildApplicationCommandPermissionsData","data class GuildApplicationCommandPermissionsData(val id: Snowflake, val applicationId: Snowflake, val guildId: Snowflake, val permissions: List<GuildApplicationCommandPermissionData>)","dev.kord.core.cache.data.GuildApplicationCommandPermissionsData"]},{"name":"data class GuildData(val id: Snowflake, val name: String, val icon: String? = null, val iconHash: Optional<String?> = Optional.Missing(), val splash: Optional<String?> = Optional.Missing(), val discoverySplash: Optional<String?> = Optional.Missing(), val ownerId: Snowflake, val permissions: Optional<Permissions> = Optional.Missing(), val region: String, val afkChannelId: Snowflake? = null, val afkTimeout: DurationInSeconds, val widgetEnabled: OptionalBoolean = OptionalBoolean.Missing, val widgetChannelId: OptionalSnowflake? = OptionalSnowflake.Missing, val verificationLevel: VerificationLevel, val defaultMessageNotifications: DefaultMessageNotificationLevel, val explicitContentFilter: ExplicitContentFilter, val roles: List<Snowflake>, val emojis: List<Snowflake>, val features: List<GuildFeature>, val mfaLevel: MFALevel, val applicationId: Snowflake? = null, val systemChannelId: Snowflake? = null, val systemChannelFlags: SystemChannelFlags, val rulesChannelId: Snowflake? = null, val joinedAt: Optional<Instant> = Optional.Missing(), val large: OptionalBoolean = OptionalBoolean.Missing, val memberCount: OptionalInt = OptionalInt.Missing, val channels: Optional<List<Snowflake>> = Optional.Missing(), val maxPresences: OptionalInt? = OptionalInt.Missing, val maxMembers: OptionalInt = OptionalInt.Missing, val vanityUrlCode: String? = null, val description: String? = null, val banner: String? = null, val premiumTier: PremiumTier, val premiumSubscriptionCount: OptionalInt = OptionalInt.Missing, val preferredLocale: String, val publicUpdatesChannelId: Snowflake? = null, val maxVideoChannelUsers: OptionalInt = OptionalInt.Missing, val approximateMemberCount: OptionalInt = OptionalInt.Missing, val approximatePresenceCount: OptionalInt = OptionalInt.Missing, val welcomeScreen: Optional<WelcomeScreenData> = Optional.Missing(), val nsfwLevel: NsfwLevel, val threads: Optional<List<ChannelData>> = Optional.Missing(), val stageInstances: Optional<List<StageInstanceData>> = Optional.Missing(), val stickers: Optional<List<StickerData>> = Optional.Missing(), val guildScheduledEvents: Optional<List<GuildScheduledEventData>> = Optional.Missing(), val premiumProgressBarEnabled: Boolean)","description":"dev.kord.core.cache.data.GuildData","location":"core/dev.kord.core.cache.data/-guild-data/index.html","searchKeys":["GuildData","data class GuildData(val id: Snowflake, val name: String, val icon: String? = null, val iconHash: Optional<String?> = Optional.Missing(), val splash: Optional<String?> = Optional.Missing(), val discoverySplash: Optional<String?> = Optional.Missing(), val ownerId: Snowflake, val permissions: Optional<Permissions> = Optional.Missing(), val region: String, val afkChannelId: Snowflake? = null, val afkTimeout: DurationInSeconds, val widgetEnabled: OptionalBoolean = OptionalBoolean.Missing, val widgetChannelId: OptionalSnowflake? = OptionalSnowflake.Missing, val verificationLevel: VerificationLevel, val defaultMessageNotifications: DefaultMessageNotificationLevel, val explicitContentFilter: ExplicitContentFilter, val roles: List<Snowflake>, val emojis: List<Snowflake>, val features: List<GuildFeature>, val mfaLevel: MFALevel, val applicationId: Snowflake? = null, val systemChannelId: Snowflake? = null, val systemChannelFlags: SystemChannelFlags, val rulesChannelId: Snowflake? = null, val joinedAt: Optional<Instant> = Optional.Missing(), val large: OptionalBoolean = OptionalBoolean.Missing, val memberCount: OptionalInt = OptionalInt.Missing, val channels: Optional<List<Snowflake>> = Optional.Missing(), val maxPresences: OptionalInt? = OptionalInt.Missing, val maxMembers: OptionalInt = OptionalInt.Missing, val vanityUrlCode: String? = null, val description: String? = null, val banner: String? = null, val premiumTier: PremiumTier, val premiumSubscriptionCount: OptionalInt = OptionalInt.Missing, val preferredLocale: String, val publicUpdatesChannelId: Snowflake? = null, val maxVideoChannelUsers: OptionalInt = OptionalInt.Missing, val approximateMemberCount: OptionalInt = OptionalInt.Missing, val approximatePresenceCount: OptionalInt = OptionalInt.Missing, val welcomeScreen: Optional<WelcomeScreenData> = Optional.Missing(), val nsfwLevel: NsfwLevel, val threads: Optional<List<ChannelData>> = Optional.Missing(), val stageInstances: Optional<List<StageInstanceData>> = Optional.Missing(), val stickers: Optional<List<StickerData>> = Optional.Missing(), val guildScheduledEvents: Optional<List<GuildScheduledEventData>> = Optional.Missing(), val premiumProgressBarEnabled: Boolean)","dev.kord.core.cache.data.GuildData"]},{"name":"data class GuildScheduledEventCreateEvent(val scheduledEvent: GuildScheduledEvent, val kord: Kord, val shard: Int, val customContext: Any?, val supplier: EntitySupplier = kord.defaultSupplier) : GuildScheduledEventEvent","description":"dev.kord.core.event.guild.GuildScheduledEventCreateEvent","location":"core/dev.kord.core.event.guild/-guild-scheduled-event-create-event/index.html","searchKeys":["GuildScheduledEventCreateEvent","data class GuildScheduledEventCreateEvent(val scheduledEvent: GuildScheduledEvent, val kord: Kord, val shard: Int, val customContext: Any?, val supplier: EntitySupplier = kord.defaultSupplier) : GuildScheduledEventEvent","dev.kord.core.event.guild.GuildScheduledEventCreateEvent"]},{"name":"data class GuildScheduledEventData(val id: Snowflake, val guildId: Snowflake, val channelId: Snowflake?, val creatorId: OptionalSnowflake? = OptionalSnowflake.Missing, val name: String, val description: Optional<String?> = Optional.Missing(), val scheduledStartTime: Instant, val scheduledEndTime: Instant?, val privacyLevel: GuildScheduledEventPrivacyLevel, val status: GuildScheduledEventStatus, val entityId: Snowflake?, val entityType: ScheduledEntityType, val entityMetadata: GuildScheduledEventEntityMetadata?, val creator: Optional<UserData> = Optional.Missing(), val userCount: OptionalInt = OptionalInt.Missing, val image: Optional<String?> = Optional.Missing())","description":"dev.kord.core.cache.data.GuildScheduledEventData","location":"core/dev.kord.core.cache.data/-guild-scheduled-event-data/index.html","searchKeys":["GuildScheduledEventData","data class GuildScheduledEventData(val id: Snowflake, val guildId: Snowflake, val channelId: Snowflake?, val creatorId: OptionalSnowflake? = OptionalSnowflake.Missing, val name: String, val description: Optional<String?> = Optional.Missing(), val scheduledStartTime: Instant, val scheduledEndTime: Instant?, val privacyLevel: GuildScheduledEventPrivacyLevel, val status: GuildScheduledEventStatus, val entityId: Snowflake?, val entityType: ScheduledEntityType, val entityMetadata: GuildScheduledEventEntityMetadata?, val creator: Optional<UserData> = Optional.Missing(), val userCount: OptionalInt = OptionalInt.Missing, val image: Optional<String?> = Optional.Missing())","dev.kord.core.cache.data.GuildScheduledEventData"]},{"name":"data class GuildScheduledEventDeleteEvent(val scheduledEvent: GuildScheduledEvent, val kord: Kord, val shard: Int, val customContext: Any?, val supplier: EntitySupplier = kord.defaultSupplier) : GuildScheduledEventEvent","description":"dev.kord.core.event.guild.GuildScheduledEventDeleteEvent","location":"core/dev.kord.core.event.guild/-guild-scheduled-event-delete-event/index.html","searchKeys":["GuildScheduledEventDeleteEvent","data class GuildScheduledEventDeleteEvent(val scheduledEvent: GuildScheduledEvent, val kord: Kord, val shard: Int, val customContext: Any?, val supplier: EntitySupplier = kord.defaultSupplier) : GuildScheduledEventEvent","dev.kord.core.event.guild.GuildScheduledEventDeleteEvent"]},{"name":"data class GuildScheduledEventUpdateEvent(val scheduledEvent: GuildScheduledEvent, val oldEvent: GuildScheduledEvent?, val kord: Kord, val shard: Int, val customContext: Any?, val supplier: EntitySupplier = kord.defaultSupplier) : GuildScheduledEventEvent","description":"dev.kord.core.event.guild.GuildScheduledEventUpdateEvent","location":"core/dev.kord.core.event.guild/-guild-scheduled-event-update-event/index.html","searchKeys":["GuildScheduledEventUpdateEvent","data class GuildScheduledEventUpdateEvent(val scheduledEvent: GuildScheduledEvent, val oldEvent: GuildScheduledEvent?, val kord: Kord, val shard: Int, val customContext: Any?, val supplier: EntitySupplier = kord.defaultSupplier) : GuildScheduledEventEvent","dev.kord.core.event.guild.GuildScheduledEventUpdateEvent"]},{"name":"data class GuildScheduledEventUserAddEvent(val scheduledEventId: Snowflake, val userId: Snowflake, val guildId: Snowflake, val kord: Kord, val shard: Int, val customContext: Any?, val supplier: EntitySupplier = kord.defaultSupplier) : GuildScheduledEventUserEvent","description":"dev.kord.core.event.guild.GuildScheduledEventUserAddEvent","location":"core/dev.kord.core.event.guild/-guild-scheduled-event-user-add-event/index.html","searchKeys":["GuildScheduledEventUserAddEvent","data class GuildScheduledEventUserAddEvent(val scheduledEventId: Snowflake, val userId: Snowflake, val guildId: Snowflake, val kord: Kord, val shard: Int, val customContext: Any?, val supplier: EntitySupplier = kord.defaultSupplier) : GuildScheduledEventUserEvent","dev.kord.core.event.guild.GuildScheduledEventUserAddEvent"]},{"name":"data class GuildScheduledEventUserRemoveEvent(val scheduledEventId: Snowflake, val userId: Snowflake, val guildId: Snowflake, val kord: Kord, val shard: Int, val customContext: Any?, val supplier: EntitySupplier = kord.defaultSupplier) : GuildScheduledEventUserEvent","description":"dev.kord.core.event.guild.GuildScheduledEventUserRemoveEvent","location":"core/dev.kord.core.event.guild/-guild-scheduled-event-user-remove-event/index.html","searchKeys":["GuildScheduledEventUserRemoveEvent","data class GuildScheduledEventUserRemoveEvent(val scheduledEventId: Snowflake, val userId: Snowflake, val guildId: Snowflake, val kord: Kord, val shard: Int, val customContext: Any?, val supplier: EntitySupplier = kord.defaultSupplier) : GuildScheduledEventUserEvent","dev.kord.core.event.guild.GuildScheduledEventUserRemoveEvent"]},{"name":"data class GuildWidgetData(val enabled: Boolean, val channelId: Snowflake?)","description":"dev.kord.core.cache.data.GuildWidgetData","location":"core/dev.kord.core.cache.data/-guild-widget-data/index.html","searchKeys":["GuildWidgetData","data class GuildWidgetData(val enabled: Boolean, val channelId: Snowflake?)","dev.kord.core.cache.data.GuildWidgetData"]},{"name":"data class Image(val data: EmbedImageData, val kord: Kord) : KordObject","description":"dev.kord.core.entity.Embed.Image","location":"core/dev.kord.core.entity/-embed/-image/index.html","searchKeys":["Image","data class Image(val data: EmbedImageData, val kord: Kord) : KordObject","dev.kord.core.entity.Embed.Image"]},{"name":"data class IntegrationData(val id: Snowflake, val guildId: Snowflake, val name: String, val type: String, val enabled: Boolean, val syncing: Boolean, val roleId: Snowflake, val enableEmoticons: OptionalBoolean = OptionalBoolean.Missing, val expireBehavior: IntegrationExpireBehavior, val expireGracePeriod: DurationInDays, val user: DiscordUser, val account: IntegrationsAccountData, val syncedAt: Instant, val subscriberCount: Int, val revoked: Boolean, val application: IntegrationApplication)","description":"dev.kord.core.cache.data.IntegrationData","location":"core/dev.kord.core.cache.data/-integration-data/index.html","searchKeys":["IntegrationData","data class IntegrationData(val id: Snowflake, val guildId: Snowflake, val name: String, val type: String, val enabled: Boolean, val syncing: Boolean, val roleId: Snowflake, val enableEmoticons: OptionalBoolean = OptionalBoolean.Missing, val expireBehavior: IntegrationExpireBehavior, val expireGracePeriod: DurationInDays, val user: DiscordUser, val account: IntegrationsAccountData, val syncedAt: Instant, val subscriberCount: Int, val revoked: Boolean, val application: IntegrationApplication)","dev.kord.core.cache.data.IntegrationData"]},{"name":"data class IntegrationsAccountData(val id: String, val name: String)","description":"dev.kord.core.cache.data.IntegrationsAccountData","location":"core/dev.kord.core.cache.data/-integrations-account-data/index.html","searchKeys":["IntegrationsAccountData","data class IntegrationsAccountData(val id: String, val name: String)","dev.kord.core.cache.data.IntegrationsAccountData"]},{"name":"data class InteractionData(val id: Snowflake, val applicationId: Snowflake, val type: InteractionType, val data: ApplicationInteractionData, val guildId: OptionalSnowflake = OptionalSnowflake.Missing, val channelId: Snowflake, val member: Optional<MemberData> = Optional.Missing(), val user: Optional<UserData> = Optional.Missing(), val token: String, val permissions: Optional<Permissions> = Optional.Missing(), val version: Int, val message: Optional<MessageData> = Optional.Missing(), val appPermissions: Optional<Permissions> = Optional.Missing(), val locale: Optional<Locale> = Optional.Missing(), val guildLocale: Optional<Locale> = Optional.Missing())","description":"dev.kord.core.cache.data.InteractionData","location":"core/dev.kord.core.cache.data/-interaction-data/index.html","searchKeys":["InteractionData","data class InteractionData(val id: Snowflake, val applicationId: Snowflake, val type: InteractionType, val data: ApplicationInteractionData, val guildId: OptionalSnowflake = OptionalSnowflake.Missing, val channelId: Snowflake, val member: Optional<MemberData> = Optional.Missing(), val user: Optional<UserData> = Optional.Missing(), val token: String, val permissions: Optional<Permissions> = Optional.Missing(), val version: Int, val message: Optional<MessageData> = Optional.Missing(), val appPermissions: Optional<Permissions> = Optional.Missing(), val locale: Optional<Locale> = Optional.Missing(), val guildLocale: Optional<Locale> = Optional.Missing())","dev.kord.core.cache.data.InteractionData"]},{"name":"data class InviteCreateData(val channelId: Snowflake, val code: String, val createdAt: Instant, val guildId: OptionalSnowflake = OptionalSnowflake.Missing, val inviterId: OptionalSnowflake = OptionalSnowflake.Missing, val maxAge: DurationInSeconds, val maxUses: Int, val targetType: Optional<InviteTargetType> = Optional.Missing(), val targetUserId: OptionalSnowflake = OptionalSnowflake.Missing, val targetApplication: Optional<PartialApplicationData> = Optional.Missing(), targetUserType: Optional<TargetUserType> = Optional.Missing(), val temporary: Boolean, val uses: Int)","description":"dev.kord.core.cache.data.InviteCreateData","location":"core/dev.kord.core.cache.data/-invite-create-data/index.html","searchKeys":["InviteCreateData","data class InviteCreateData(val channelId: Snowflake, val code: String, val createdAt: Instant, val guildId: OptionalSnowflake = OptionalSnowflake.Missing, val inviterId: OptionalSnowflake = OptionalSnowflake.Missing, val maxAge: DurationInSeconds, val maxUses: Int, val targetType: Optional<InviteTargetType> = Optional.Missing(), val targetUserId: OptionalSnowflake = OptionalSnowflake.Missing, val targetApplication: Optional<PartialApplicationData> = Optional.Missing(), targetUserType: Optional<TargetUserType> = Optional.Missing(), val temporary: Boolean, val uses: Int)","dev.kord.core.cache.data.InviteCreateData"]},{"name":"data class InviteData(val code: String, val guild: Optional<PartialGuildData> = Optional.Missing(), val channelId: Snowflake?, val inviterId: OptionalSnowflake = OptionalSnowflake.Missing, val targetType: Optional<InviteTargetType> = Optional.Missing(), val targetUserId: OptionalSnowflake = OptionalSnowflake.Missing, val targetApplication: Optional<PartialApplicationData> = Optional.Missing(), targetUserType: Optional<TargetUserType> = Optional.Missing(), val approximatePresenceCount: OptionalInt = OptionalInt.Missing, val approximateMemberCount: OptionalInt = OptionalInt.Missing, val expiresAt: Optional<Instant?> = Optional.Missing(), val guildScheduledEvent: Optional<GuildScheduledEventData> = Optional.Missing()) : BaseInviteData","description":"dev.kord.core.cache.data.InviteData","location":"core/dev.kord.core.cache.data/-invite-data/index.html","searchKeys":["InviteData","data class InviteData(val code: String, val guild: Optional<PartialGuildData> = Optional.Missing(), val channelId: Snowflake?, val inviterId: OptionalSnowflake = OptionalSnowflake.Missing, val targetType: Optional<InviteTargetType> = Optional.Missing(), val targetUserId: OptionalSnowflake = OptionalSnowflake.Missing, val targetApplication: Optional<PartialApplicationData> = Optional.Missing(), targetUserType: Optional<TargetUserType> = Optional.Missing(), val approximatePresenceCount: OptionalInt = OptionalInt.Missing, val approximateMemberCount: OptionalInt = OptionalInt.Missing, val expiresAt: Optional<Instant?> = Optional.Missing(), val guildScheduledEvent: Optional<GuildScheduledEventData> = Optional.Missing()) : BaseInviteData","dev.kord.core.cache.data.InviteData"]},{"name":"data class InviteDeleteData(val channelId: Snowflake, val guildId: OptionalSnowflake = OptionalSnowflake.Missing, val code: String)","description":"dev.kord.core.cache.data.InviteDeleteData","location":"core/dev.kord.core.cache.data/-invite-delete-data/index.html","searchKeys":["InviteDeleteData","data class InviteDeleteData(val channelId: Snowflake, val guildId: OptionalSnowflake = OptionalSnowflake.Missing, val code: String)","dev.kord.core.cache.data.InviteDeleteData"]},{"name":"data class InviteWithMetadataData(val code: String, val guild: Optional<PartialGuildData> = Optional.Missing(), val channelId: Snowflake?, val inviterId: OptionalSnowflake = OptionalSnowflake.Missing, val targetType: Optional<InviteTargetType> = Optional.Missing(), val targetUserId: OptionalSnowflake = OptionalSnowflake.Missing, val targetApplication: Optional<PartialApplicationData> = Optional.Missing(), val approximatePresenceCount: OptionalInt = OptionalInt.Missing, val approximateMemberCount: OptionalInt = OptionalInt.Missing, val expiresAt: Optional<Instant?> = Optional.Missing(), val guildScheduledEvent: Optional<GuildScheduledEventData> = Optional.Missing(), val uses: Int, val maxUses: Int, val maxAge: DurationInSeconds, val temporary: Boolean, val createdAt: Instant) : BaseInviteData","description":"dev.kord.core.cache.data.InviteWithMetadataData","location":"core/dev.kord.core.cache.data/-invite-with-metadata-data/index.html","searchKeys":["InviteWithMetadataData","data class InviteWithMetadataData(val code: String, val guild: Optional<PartialGuildData> = Optional.Missing(), val channelId: Snowflake?, val inviterId: OptionalSnowflake = OptionalSnowflake.Missing, val targetType: Optional<InviteTargetType> = Optional.Missing(), val targetUserId: OptionalSnowflake = OptionalSnowflake.Missing, val targetApplication: Optional<PartialApplicationData> = Optional.Missing(), val approximatePresenceCount: OptionalInt = OptionalInt.Missing, val approximateMemberCount: OptionalInt = OptionalInt.Missing, val expiresAt: Optional<Instant?> = Optional.Missing(), val guildScheduledEvent: Optional<GuildScheduledEventData> = Optional.Missing(), val uses: Int, val maxUses: Int, val maxAge: DurationInSeconds, val temporary: Boolean, val createdAt: Instant) : BaseInviteData","dev.kord.core.cache.data.InviteWithMetadataData"]},{"name":"data class MemberData(val userId: Snowflake, val guildId: Snowflake, val nick: Optional<String?> = Optional.Missing(), val roles: List<Snowflake>, val joinedAt: Instant, val premiumSince: Optional<Instant?> = Optional.Missing(), val pending: OptionalBoolean = OptionalBoolean.Missing, val avatar: Optional<String?> = Optional.Missing(), val communicationDisabledUntil: Optional<Instant?> = Optional.Missing())","description":"dev.kord.core.cache.data.MemberData","location":"core/dev.kord.core.cache.data/-member-data/index.html","searchKeys":["MemberData","data class MemberData(val userId: Snowflake, val guildId: Snowflake, val nick: Optional<String?> = Optional.Missing(), val roles: List<Snowflake>, val joinedAt: Instant, val premiumSince: Optional<Instant?> = Optional.Missing(), val pending: OptionalBoolean = OptionalBoolean.Missing, val avatar: Optional<String?> = Optional.Missing(), val communicationDisabledUntil: Optional<Instant?> = Optional.Missing())","dev.kord.core.cache.data.MemberData"]},{"name":"data class MembersChunkData(val guildId: Snowflake, val members: Set<MemberData>, val users: Set<UserData>, val chunkIndex: Int, val chunkCount: Int, val notFound: Optional<Set<Snowflake>> = Optional.Missing(), val presences: Optional<List<PresenceData>> = Optional.Missing(), val nonce: Optional<String> = Optional.Missing())","description":"dev.kord.core.cache.data.MembersChunkData","location":"core/dev.kord.core.cache.data/-members-chunk-data/index.html","searchKeys":["MembersChunkData","data class MembersChunkData(val guildId: Snowflake, val members: Set<MemberData>, val users: Set<UserData>, val chunkIndex: Int, val chunkCount: Int, val notFound: Optional<Set<Snowflake>> = Optional.Missing(), val presences: Optional<List<PresenceData>> = Optional.Missing(), val nonce: Optional<String> = Optional.Missing())","dev.kord.core.cache.data.MembersChunkData"]},{"name":"data class MessageData(val id: Snowflake, val channelId: Snowflake, val guildId: OptionalSnowflake = OptionalSnowflake.Missing, val author: UserData, val content: String, val timestamp: Instant, val editedTimestamp: Instant? = null, val tts: Boolean, val mentionEveryone: Boolean, val mentions: List<Snowflake>, val mentionRoles: List<Snowflake>, val mentionedChannels: Optional<List<Snowflake>> = Optional.Missing(), val attachments: List<AttachmentData>, val embeds: List<EmbedData>, val reactions: Optional<List<ReactionData>> = Optional.Missing(), val nonce: Optional<String> = Optional.Missing(), val pinned: Boolean, val webhookId: OptionalSnowflake = OptionalSnowflake.Missing, val type: MessageType, val activity: Optional<MessageActivity> = Optional.Missing(), val application: Optional<MessageApplication> = Optional.Missing(), val applicationId: OptionalSnowflake = OptionalSnowflake.Missing, val messageReference: Optional<MessageReferenceData> = Optional.Missing(), val flags: Optional<MessageFlags> = Optional.Missing(), val stickers: Optional<List<StickerItemData>> = Optional.Missing(), val referencedMessage: Optional<MessageData?> = Optional.Missing(), val interaction: Optional<MessageInteractionData> = Optional.Missing(), val components: Optional<List<ComponentData>> = Optional.Missing())","description":"dev.kord.core.cache.data.MessageData","location":"core/dev.kord.core.cache.data/-message-data/index.html","searchKeys":["MessageData","data class MessageData(val id: Snowflake, val channelId: Snowflake, val guildId: OptionalSnowflake = OptionalSnowflake.Missing, val author: UserData, val content: String, val timestamp: Instant, val editedTimestamp: Instant? = null, val tts: Boolean, val mentionEveryone: Boolean, val mentions: List<Snowflake>, val mentionRoles: List<Snowflake>, val mentionedChannels: Optional<List<Snowflake>> = Optional.Missing(), val attachments: List<AttachmentData>, val embeds: List<EmbedData>, val reactions: Optional<List<ReactionData>> = Optional.Missing(), val nonce: Optional<String> = Optional.Missing(), val pinned: Boolean, val webhookId: OptionalSnowflake = OptionalSnowflake.Missing, val type: MessageType, val activity: Optional<MessageActivity> = Optional.Missing(), val application: Optional<MessageApplication> = Optional.Missing(), val applicationId: OptionalSnowflake = OptionalSnowflake.Missing, val messageReference: Optional<MessageReferenceData> = Optional.Missing(), val flags: Optional<MessageFlags> = Optional.Missing(), val stickers: Optional<List<StickerItemData>> = Optional.Missing(), val referencedMessage: Optional<MessageData?> = Optional.Missing(), val interaction: Optional<MessageInteractionData> = Optional.Missing(), val components: Optional<List<ComponentData>> = Optional.Missing())","dev.kord.core.cache.data.MessageData"]},{"name":"data class MessageInteractionData(val id: Snowflake, val type: InteractionType, val name: String, val user: Snowflake)","description":"dev.kord.core.cache.data.MessageInteractionData","location":"core/dev.kord.core.cache.data/-message-interaction-data/index.html","searchKeys":["MessageInteractionData","data class MessageInteractionData(val id: Snowflake, val type: InteractionType, val name: String, val user: Snowflake)","dev.kord.core.cache.data.MessageInteractionData"]},{"name":"data class MessageReferenceData(val id: OptionalSnowflake = OptionalSnowflake.Missing, val channelId: OptionalSnowflake = OptionalSnowflake.Missing, val guildId: OptionalSnowflake = OptionalSnowflake.Missing)","description":"dev.kord.core.cache.data.MessageReferenceData","location":"core/dev.kord.core.cache.data/-message-reference-data/index.html","searchKeys":["MessageReferenceData","data class MessageReferenceData(val id: OptionalSnowflake = OptionalSnowflake.Missing, val channelId: OptionalSnowflake = OptionalSnowflake.Missing, val guildId: OptionalSnowflake = OptionalSnowflake.Missing)","dev.kord.core.cache.data.MessageReferenceData"]},{"name":"data class OptionData(val name: String, val value: Optional<CommandArgument<Any?>> = Optional.Missing(), val values: Optional<List<CommandArgument<Any?>>> = Optional.Missing(), val subCommands: Optional<List<SubCommand>> = Optional.Missing(), val focused: OptionalBoolean = OptionalBoolean.Missing)","description":"dev.kord.core.cache.data.OptionData","location":"core/dev.kord.core.cache.data/-option-data/index.html","searchKeys":["OptionData","data class OptionData(val name: String, val value: Optional<CommandArgument<Any?>> = Optional.Missing(), val values: Optional<List<CommandArgument<Any?>>> = Optional.Missing(), val subCommands: Optional<List<SubCommand>> = Optional.Missing(), val focused: OptionalBoolean = OptionalBoolean.Missing)","dev.kord.core.cache.data.OptionData"]},{"name":"data class PartialApplicationData(val id: Snowflake, val name: String, val icon: String?, val description: String, val rpcOrigins: Optional<List<String>> = Optional.Missing(), val termsOfServiceUrl: Optional<String> = Optional.Missing(), val privacyPolicyUrl: Optional<String> = Optional.Missing(), val ownerId: OptionalSnowflake = OptionalSnowflake.Missing, val verifyKey: String, val guildId: OptionalSnowflake = OptionalSnowflake.Missing, val primarySkuId: OptionalSnowflake = OptionalSnowflake.Missing, val slug: Optional<String> = Optional.Missing(), val coverImage: Optional<String> = Optional.Missing(), val flags: Optional<ApplicationFlags> = Optional.Missing(), val tags: Optional<List<String>> = Optional.Missing(), val installParams: Optional<InstallParams> = Optional.Missing(), val customInstallUrl: Optional<String> = Optional.Missing()) : BaseApplicationData","description":"dev.kord.core.cache.data.PartialApplicationData","location":"core/dev.kord.core.cache.data/-partial-application-data/index.html","searchKeys":["PartialApplicationData","data class PartialApplicationData(val id: Snowflake, val name: String, val icon: String?, val description: String, val rpcOrigins: Optional<List<String>> = Optional.Missing(), val termsOfServiceUrl: Optional<String> = Optional.Missing(), val privacyPolicyUrl: Optional<String> = Optional.Missing(), val ownerId: OptionalSnowflake = OptionalSnowflake.Missing, val verifyKey: String, val guildId: OptionalSnowflake = OptionalSnowflake.Missing, val primarySkuId: OptionalSnowflake = OptionalSnowflake.Missing, val slug: Optional<String> = Optional.Missing(), val coverImage: Optional<String> = Optional.Missing(), val flags: Optional<ApplicationFlags> = Optional.Missing(), val tags: Optional<List<String>> = Optional.Missing(), val installParams: Optional<InstallParams> = Optional.Missing(), val customInstallUrl: Optional<String> = Optional.Missing()) : BaseApplicationData","dev.kord.core.cache.data.PartialApplicationData"]},{"name":"data class Party(val id: String?, val currentSize: Int?, val maxSize: Int?)","description":"dev.kord.core.entity.Activity.Party","location":"core/dev.kord.core.entity/-activity/-party/index.html","searchKeys":["Party","data class Party(val id: String?, val currentSize: Int?, val maxSize: Int?)","dev.kord.core.entity.Activity.Party"]},{"name":"data class PermissionOverwriteData(val id: Snowflake, val type: OverwriteType, val allowed: Permissions, val denied: Permissions)","description":"dev.kord.core.cache.data.PermissionOverwriteData","location":"core/dev.kord.core.cache.data/-permission-overwrite-data/index.html","searchKeys":["PermissionOverwriteData","data class PermissionOverwriteData(val id: Snowflake, val type: OverwriteType, val allowed: Permissions, val denied: Permissions)","dev.kord.core.cache.data.PermissionOverwriteData"]},{"name":"data class PresenceData(val userId: Snowflake, val guildId: Snowflake, val status: PresenceStatus, val activities: List<ActivityData>, val clientStatus: ClientStatusData)","description":"dev.kord.core.cache.data.PresenceData","location":"core/dev.kord.core.cache.data/-presence-data/index.html","searchKeys":["PresenceData","data class PresenceData(val userId: Snowflake, val guildId: Snowflake, val status: PresenceStatus, val activities: List<ActivityData>, val clientStatus: ClientStatusData)","dev.kord.core.cache.data.PresenceData"]},{"name":"data class Provider(val data: EmbedProviderData, val kord: Kord) : KordObject","description":"dev.kord.core.entity.Embed.Provider","location":"core/dev.kord.core.entity/-embed/-provider/index.html","searchKeys":["Provider","data class Provider(val data: EmbedProviderData, val kord: Kord) : KordObject","dev.kord.core.entity.Embed.Provider"]},{"name":"data class ReactionData(val count: Int, val me: Boolean, val emojiId: Snowflake? = null, val emojiName: String? = null, val emojiAnimated: Boolean)","description":"dev.kord.core.cache.data.ReactionData","location":"core/dev.kord.core.cache.data/-reaction-data/index.html","searchKeys":["ReactionData","data class ReactionData(val count: Int, val me: Boolean, val emojiId: Snowflake? = null, val emojiName: String? = null, val emojiAnimated: Boolean)","dev.kord.core.cache.data.ReactionData"]},{"name":"data class ReactionRemoveEmojiData(val channelId: Snowflake, val guildId: Snowflake, val messageId: Snowflake, val emoji: RemovedReactionData)","description":"dev.kord.core.cache.data.ReactionRemoveEmojiData","location":"core/dev.kord.core.cache.data/-reaction-remove-emoji-data/index.html","searchKeys":["ReactionRemoveEmojiData","data class ReactionRemoveEmojiData(val channelId: Snowflake, val guildId: Snowflake, val messageId: Snowflake, val emoji: RemovedReactionData)","dev.kord.core.cache.data.ReactionRemoveEmojiData"]},{"name":"data class RegionData(val id: String, val guildId: OptionalSnowflake, val name: String, val optimal: Boolean, val deprecated: Boolean, val custom: Boolean)","description":"dev.kord.core.cache.data.RegionData","location":"core/dev.kord.core.cache.data/-region-data/index.html","searchKeys":["RegionData","data class RegionData(val id: String, val guildId: OptionalSnowflake, val name: String, val optimal: Boolean, val deprecated: Boolean, val custom: Boolean)","dev.kord.core.cache.data.RegionData"]},{"name":"data class RemovedReactionData(val id: Snowflake? = null, val name: String?)","description":"dev.kord.core.cache.data.RemovedReactionData","location":"core/dev.kord.core.cache.data/-removed-reaction-data/index.html","searchKeys":["RemovedReactionData","data class RemovedReactionData(val id: Snowflake? = null, val name: String?)","dev.kord.core.cache.data.RemovedReactionData"]},{"name":"data class ResolvedObjectsData(val members: Optional<Map<Snowflake, MemberData>> = Optional.Missing(), val users: Optional<Map<Snowflake, UserData>> = Optional.Missing(), val roles: Optional<Map<Snowflake, RoleData>> = Optional.Missing(), val channels: Optional<Map<Snowflake, ChannelData>> = Optional.Missing(), val messages: Optional<Map<Snowflake, MessageData>> = Optional.Missing(), val attachments: Optional<Map<Snowflake, AttachmentData>> = Optional.Missing())","description":"dev.kord.core.cache.data.ResolvedObjectsData","location":"core/dev.kord.core.cache.data/-resolved-objects-data/index.html","searchKeys":["ResolvedObjectsData","data class ResolvedObjectsData(val members: Optional<Map<Snowflake, MemberData>> = Optional.Missing(), val users: Optional<Map<Snowflake, UserData>> = Optional.Missing(), val roles: Optional<Map<Snowflake, RoleData>> = Optional.Missing(), val channels: Optional<Map<Snowflake, ChannelData>> = Optional.Missing(), val messages: Optional<Map<Snowflake, MessageData>> = Optional.Missing(), val attachments: Optional<Map<Snowflake, AttachmentData>> = Optional.Missing())","dev.kord.core.cache.data.ResolvedObjectsData"]},{"name":"data class Role(val data: RoleData, val kord: Kord, val supplier: EntitySupplier = kord.defaultSupplier) : RoleBehavior","description":"dev.kord.core.entity.Role","location":"core/dev.kord.core.entity/-role/index.html","searchKeys":["Role","data class Role(val data: RoleData, val kord: Kord, val supplier: EntitySupplier = kord.defaultSupplier) : RoleBehavior","dev.kord.core.entity.Role"]},{"name":"data class RoleData(val id: Snowflake, val guildId: Snowflake, val name: String, val color: Int, val hoisted: Boolean, val icon: Optional<String?>, val unicodeEmoji: Optional<String?>, val position: Int, val permissions: Permissions, val managed: Boolean, val mentionable: Boolean, val tags: Optional<RoleTagsData> = Optional.Missing())","description":"dev.kord.core.cache.data.RoleData","location":"core/dev.kord.core.cache.data/-role-data/index.html","searchKeys":["RoleData","data class RoleData(val id: Snowflake, val guildId: Snowflake, val name: String, val color: Int, val hoisted: Boolean, val icon: Optional<String?>, val unicodeEmoji: Optional<String?>, val position: Int, val permissions: Permissions, val managed: Boolean, val mentionable: Boolean, val tags: Optional<RoleTagsData> = Optional.Missing())","dev.kord.core.cache.data.RoleData"]},{"name":"data class RoleTagsData(val botId: OptionalSnowflake = OptionalSnowflake.Missing, val integrationId: OptionalSnowflake = OptionalSnowflake.Missing, val premiumSubscriber: Boolean)","description":"dev.kord.core.cache.data.RoleTagsData","location":"core/dev.kord.core.cache.data/-role-tags-data/index.html","searchKeys":["RoleTagsData","data class RoleTagsData(val botId: OptionalSnowflake = OptionalSnowflake.Missing, val integrationId: OptionalSnowflake = OptionalSnowflake.Missing, val premiumSubscriber: Boolean)","dev.kord.core.cache.data.RoleTagsData"]},{"name":"data class Secrets(val join: String?, val spectate: String?, val match: String?)","description":"dev.kord.core.entity.Activity.Secrets","location":"core/dev.kord.core.entity/-activity/-secrets/index.html","searchKeys":["Secrets","data class Secrets(val join: String?, val spectate: String?, val match: String?)","dev.kord.core.entity.Activity.Secrets"]},{"name":"data class SelectOptionData(val label: String, val value: String, val description: Optional<String> = Optional.Missing(), val emoji: Optional<DiscordPartialEmoji> = Optional.Missing(), val default: OptionalBoolean = OptionalBoolean.Missing)","description":"dev.kord.core.cache.data.SelectOptionData","location":"core/dev.kord.core.cache.data/-select-option-data/index.html","searchKeys":["SelectOptionData","data class SelectOptionData(val label: String, val value: String, val description: Optional<String> = Optional.Missing(), val emoji: Optional<DiscordPartialEmoji> = Optional.Missing(), val default: OptionalBoolean = OptionalBoolean.Missing)","dev.kord.core.cache.data.SelectOptionData"]},{"name":"data class ShardEvent(val event: Event, val gateway: Gateway, val shard: Int)","description":"dev.kord.core.gateway.ShardEvent","location":"core/dev.kord.core.gateway/-shard-event/index.html","searchKeys":["ShardEvent","data class ShardEvent(val event: Event, val gateway: Gateway, val shard: Int)","dev.kord.core.gateway.ShardEvent"]},{"name":"data class StageInstanceData(val id: Snowflake, val guildId: Snowflake, val channelId: Snowflake, val topic: String, val privacyLevel: StageInstancePrivacyLevel, val guildScheduledEventId: Snowflake?)","description":"dev.kord.core.cache.data.StageInstanceData","location":"core/dev.kord.core.cache.data/-stage-instance-data/index.html","searchKeys":["StageInstanceData","data class StageInstanceData(val id: Snowflake, val guildId: Snowflake, val channelId: Snowflake, val topic: String, val privacyLevel: StageInstancePrivacyLevel, val guildScheduledEventId: Snowflake?)","dev.kord.core.cache.data.StageInstanceData"]},{"name":"data class StickerData(val id: Snowflake, val packId: OptionalSnowflake = OptionalSnowflake.Missing, val name: String, val description: String?, val tags: Optional<String> = Optional.Missing(), val formatType: MessageStickerType, val available: OptionalBoolean = OptionalBoolean.Missing, val guildId: OptionalSnowflake = OptionalSnowflake.Missing, val user: Optional<UserData> = Optional.Missing(), val sortValue: OptionalInt = OptionalInt.Missing)","description":"dev.kord.core.cache.data.StickerData","location":"core/dev.kord.core.cache.data/-sticker-data/index.html","searchKeys":["StickerData","data class StickerData(val id: Snowflake, val packId: OptionalSnowflake = OptionalSnowflake.Missing, val name: String, val description: String?, val tags: Optional<String> = Optional.Missing(), val formatType: MessageStickerType, val available: OptionalBoolean = OptionalBoolean.Missing, val guildId: OptionalSnowflake = OptionalSnowflake.Missing, val user: Optional<UserData> = Optional.Missing(), val sortValue: OptionalInt = OptionalInt.Missing)","dev.kord.core.cache.data.StickerData"]},{"name":"data class StickerItemData(val id: Snowflake, val name: String, val formatType: MessageStickerType)","description":"dev.kord.core.cache.data.StickerItemData","location":"core/dev.kord.core.cache.data/-sticker-item-data/index.html","searchKeys":["StickerItemData","data class StickerItemData(val id: Snowflake, val name: String, val formatType: MessageStickerType)","dev.kord.core.cache.data.StickerItemData"]},{"name":"data class StickerPackData(val id: Snowflake, val stickers: List<StickerData>, val name: String, val skuId: Snowflake, val coverStickerId: OptionalSnowflake = OptionalSnowflake.Missing, val description: String, val bannerAssetId: Snowflake)","description":"dev.kord.core.cache.data.StickerPackData","location":"core/dev.kord.core.cache.data/-sticker-pack-data/index.html","searchKeys":["StickerPackData","data class StickerPackData(val id: Snowflake, val stickers: List<StickerData>, val name: String, val skuId: Snowflake, val coverStickerId: OptionalSnowflake = OptionalSnowflake.Missing, val description: String, val bannerAssetId: Snowflake)","dev.kord.core.cache.data.StickerPackData"]},{"name":"data class TeamData(val id: Snowflake, val icon: String? = null, val members: List<TeamMemberData>, val ownerUserId: Snowflake)","description":"dev.kord.core.cache.data.TeamData","location":"core/dev.kord.core.cache.data/-team-data/index.html","searchKeys":["TeamData","data class TeamData(val id: Snowflake, val icon: String? = null, val members: List<TeamMemberData>, val ownerUserId: Snowflake)","dev.kord.core.cache.data.TeamData"]},{"name":"data class TemplateData(val code: String, val name: String, val description: String?, val usageCount: Int, val creatorId: Snowflake, val creator: UserData, val createdAt: Instant, val updatedAt: Instant, val sourceGuildId: Snowflake, val serializedSourceGuild: PartialGuildData, val isDirty: Boolean?)","description":"dev.kord.core.cache.data.TemplateData","location":"core/dev.kord.core.cache.data/-template-data/index.html","searchKeys":["TemplateData","data class TemplateData(val code: String, val name: String, val description: String?, val usageCount: Int, val creatorId: Snowflake, val creator: UserData, val createdAt: Instant, val updatedAt: Instant, val sourceGuildId: Snowflake, val serializedSourceGuild: PartialGuildData, val isDirty: Boolean?)","dev.kord.core.cache.data.TemplateData"]},{"name":"data class TextInputComponentData(val type: ComponentType, val style: Optional<TextInputStyle> = Optional.Missing(), val label: Optional<String> = Optional.Missing(), val emoji: Optional<DiscordPartialEmoji> = Optional.Missing(), val customId: Optional<String> = Optional.Missing(), val url: Optional<String> = Optional.Missing(), val disabled: OptionalBoolean = OptionalBoolean.Missing, val components: Optional<List<ComponentData>> = Optional.Missing(), val placeholder: Optional<String> = Optional.Missing(), val minValues: OptionalInt = OptionalInt.Missing, val maxValues: OptionalInt = OptionalInt.Missing, val options: Optional<List<SelectOptionData>> = Optional.Missing(), val minLength: OptionalInt = OptionalInt.Missing, val maxLength: OptionalInt = OptionalInt.Missing, val required: OptionalBoolean = OptionalBoolean.Missing, val value: Optional<String> = Optional.Missing()) : ComponentData","description":"dev.kord.core.cache.data.TextInputComponentData","location":"core/dev.kord.core.cache.data/-text-input-component-data/index.html","searchKeys":["TextInputComponentData","data class TextInputComponentData(val type: ComponentType, val style: Optional<TextInputStyle> = Optional.Missing(), val label: Optional<String> = Optional.Missing(), val emoji: Optional<DiscordPartialEmoji> = Optional.Missing(), val customId: Optional<String> = Optional.Missing(), val url: Optional<String> = Optional.Missing(), val disabled: OptionalBoolean = OptionalBoolean.Missing, val components: Optional<List<ComponentData>> = Optional.Missing(), val placeholder: Optional<String> = Optional.Missing(), val minValues: OptionalInt = OptionalInt.Missing, val maxValues: OptionalInt = OptionalInt.Missing, val options: Optional<List<SelectOptionData>> = Optional.Missing(), val minLength: OptionalInt = OptionalInt.Missing, val maxLength: OptionalInt = OptionalInt.Missing, val required: OptionalBoolean = OptionalBoolean.Missing, val value: Optional<String> = Optional.Missing()) : ComponentData","dev.kord.core.cache.data.TextInputComponentData"]},{"name":"data class ThreadMemberData(val id: Snowflake, val userId: OptionalSnowflake = OptionalSnowflake.Missing, val joinTimestamp: Instant, val flags: Int)","description":"dev.kord.core.cache.data.ThreadMemberData","location":"core/dev.kord.core.cache.data/-thread-member-data/index.html","searchKeys":["ThreadMemberData","data class ThreadMemberData(val id: Snowflake, val userId: OptionalSnowflake = OptionalSnowflake.Missing, val joinTimestamp: Instant, val flags: Int)","dev.kord.core.cache.data.ThreadMemberData"]},{"name":"data class ThreadMetadataData(val archived: Boolean, val archiveTimestamp: Instant, val autoArchiveDuration: ArchiveDuration, val locked: OptionalBoolean = OptionalBoolean.Missing, val invitable: OptionalBoolean = OptionalBoolean.Missing, val createTimestamp: Optional<Instant?> = Optional.Missing())","description":"dev.kord.core.cache.data.ThreadMetadataData","location":"core/dev.kord.core.cache.data/-thread-metadata-data/index.html","searchKeys":["ThreadMetadataData","data class ThreadMetadataData(val archived: Boolean, val archiveTimestamp: Instant, val autoArchiveDuration: ArchiveDuration, val locked: OptionalBoolean = OptionalBoolean.Missing, val invitable: OptionalBoolean = OptionalBoolean.Missing, val createTimestamp: Optional<Instant?> = Optional.Missing())","dev.kord.core.cache.data.ThreadMetadataData"]},{"name":"data class Thumbnail(val data: EmbedThumbnailData, val kord: Kord) : KordObject","description":"dev.kord.core.entity.Embed.Thumbnail","location":"core/dev.kord.core.entity/-embed/-thumbnail/index.html","searchKeys":["Thumbnail","data class Thumbnail(val data: EmbedThumbnailData, val kord: Kord) : KordObject","dev.kord.core.entity.Embed.Thumbnail"]},{"name":"data class TypingStartEventData(val channelId: Snowflake, val guildId: OptionalSnowflake = OptionalSnowflake.Missing, val userId: Snowflake, val timestamp: Instant, val member: Optional<DiscordGuildMember> = Optional.Missing())","description":"dev.kord.core.event.channel.data.TypingStartEventData","location":"core/dev.kord.core.event.channel.data/-typing-start-event-data/index.html","searchKeys":["TypingStartEventData","data class TypingStartEventData(val channelId: Snowflake, val guildId: OptionalSnowflake = OptionalSnowflake.Missing, val userId: Snowflake, val timestamp: Instant, val member: Optional<DiscordGuildMember> = Optional.Missing())","dev.kord.core.event.channel.data.TypingStartEventData"]},{"name":"data class Unicode(val name: String) : ReactionEmoji","description":"dev.kord.core.entity.ReactionEmoji.Unicode","location":"core/dev.kord.core.entity/-reaction-emoji/-unicode/index.html","searchKeys":["Unicode","data class Unicode(val name: String) : ReactionEmoji","dev.kord.core.entity.ReactionEmoji.Unicode"]},{"name":"data class UserData(val id: Snowflake, val username: String, val discriminator: String, val avatar: String? = null, val bot: OptionalBoolean = OptionalBoolean.Missing, val publicFlags: Optional<UserFlags> = Optional.Missing(), val banner: String? = null, val accentColor: Int? = null)","description":"dev.kord.core.cache.data.UserData","location":"core/dev.kord.core.cache.data/-user-data/index.html","searchKeys":["UserData","data class UserData(val id: Snowflake, val username: String, val discriminator: String, val avatar: String? = null, val bot: OptionalBoolean = OptionalBoolean.Missing, val publicFlags: Optional<UserFlags> = Optional.Missing(), val banner: String? = null, val accentColor: Int? = null)","dev.kord.core.cache.data.UserData"]},{"name":"data class Video(val data: EmbedVideoData, val kord: Kord) : KordObject","description":"dev.kord.core.entity.Embed.Video","location":"core/dev.kord.core.entity/-embed/-video/index.html","searchKeys":["Video","data class Video(val data: EmbedVideoData, val kord: Kord) : KordObject","dev.kord.core.entity.Embed.Video"]},{"name":"data class VoiceStateData(val guildId: Snowflake, val channelId: Snowflake?, val userId: Snowflake, val memberId: OptionalSnowflake = OptionalSnowflake.Missing, val sessionId: String, val deaf: Boolean, val mute: Boolean, val selfDeaf: Boolean, val selfMute: Boolean, val suppress: Boolean, val selfVideo: Boolean, val selfStream: OptionalBoolean = OptionalBoolean.Missing, val requestToSpeakTimestamp: Instant?)","description":"dev.kord.core.cache.data.VoiceStateData","location":"core/dev.kord.core.cache.data/-voice-state-data/index.html","searchKeys":["VoiceStateData","data class VoiceStateData(val guildId: Snowflake, val channelId: Snowflake?, val userId: Snowflake, val memberId: OptionalSnowflake = OptionalSnowflake.Missing, val sessionId: String, val deaf: Boolean, val mute: Boolean, val selfDeaf: Boolean, val selfMute: Boolean, val suppress: Boolean, val selfVideo: Boolean, val selfStream: OptionalBoolean = OptionalBoolean.Missing, val requestToSpeakTimestamp: Instant?)","dev.kord.core.cache.data.VoiceStateData"]},{"name":"data class Webhook(val data: WebhookData, val kord: Kord, val supplier: EntitySupplier = kord.defaultSupplier) : WebhookBehavior, Strategizable","description":"dev.kord.core.entity.Webhook","location":"core/dev.kord.core.entity/-webhook/index.html","searchKeys":["Webhook","data class Webhook(val data: WebhookData, val kord: Kord, val supplier: EntitySupplier = kord.defaultSupplier) : WebhookBehavior, Strategizable","dev.kord.core.entity.Webhook"]},{"name":"data class WebhookData(val id: Snowflake, val type: WebhookType, val guildId: OptionalSnowflake = OptionalSnowflake.Missing, val channelId: Snowflake, val userId: OptionalSnowflake = OptionalSnowflake.Missing, val name: String? = null, val avatar: String? = null, val token: Optional<String> = Optional.Missing(), val applicationId: Snowflake?)","description":"dev.kord.core.cache.data.WebhookData","location":"core/dev.kord.core.cache.data/-webhook-data/index.html","searchKeys":["WebhookData","data class WebhookData(val id: Snowflake, val type: WebhookType, val guildId: OptionalSnowflake = OptionalSnowflake.Missing, val channelId: Snowflake, val userId: OptionalSnowflake = OptionalSnowflake.Missing, val name: String? = null, val avatar: String? = null, val token: Optional<String> = Optional.Missing(), val applicationId: Snowflake?)","dev.kord.core.cache.data.WebhookData"]},{"name":"data class WelcomeScreenChannelData(val channelId: Snowflake, val description: String, val emojiId: Snowflake?, val emojiName: String?)","description":"dev.kord.core.cache.data.WelcomeScreenChannelData","location":"core/dev.kord.core.cache.data/-welcome-screen-channel-data/index.html","searchKeys":["WelcomeScreenChannelData","data class WelcomeScreenChannelData(val channelId: Snowflake, val description: String, val emojiId: Snowflake?, val emojiName: String?)","dev.kord.core.cache.data.WelcomeScreenChannelData"]},{"name":"data class WelcomeScreenData(val description: String?, val welcomeChannels: List<WelcomeScreenChannelData>)","description":"dev.kord.core.cache.data.WelcomeScreenData","location":"core/dev.kord.core.cache.data/-welcome-screen-data/index.html","searchKeys":["WelcomeScreenData","data class WelcomeScreenData(val description: String?, val welcomeChannels: List<WelcomeScreenChannelData>)","dev.kord.core.cache.data.WelcomeScreenData"]},{"name":"fun <T : Any, I : Any> forDescription(description: DataDescription<T, I>, generator: Generator<T, I>?)","description":"dev.kord.core.cache.KordCacheBuilder.forDescription","location":"core/dev.kord.core.cache/-kord-cache-builder/for-description.html","searchKeys":["forDescription","fun <T : Any, I : Any> forDescription(description: DataDescription<T, I>, generator: Generator<T, I>?)","dev.kord.core.cache.KordCacheBuilder.forDescription"]},{"name":"fun <T : Any, I : Any> lruCache(size: Int = 100): Generator<T, I>","description":"dev.kord.core.cache.KordCacheBuilder.lruCache","location":"core/dev.kord.core.cache/-kord-cache-builder/lru-cache.html","searchKeys":["lruCache","fun <T : Any, I : Any> lruCache(size: Int = 100): Generator<T, I>","dev.kord.core.cache.KordCacheBuilder.lruCache"]},{"name":"fun <T : Any, I : Any> none(): Generator<T, I>","description":"dev.kord.core.cache.KordCacheBuilder.none","location":"core/dev.kord.core.cache/-kord-cache-builder/none.html","searchKeys":["none","fun <T : Any, I : Any> none(): Generator<T, I>","dev.kord.core.cache.KordCacheBuilder.none"]},{"name":"fun <T : Any> QueryBuilder<T>.idEq(property: KProperty1<T, Boolean?>, value: Boolean?)","description":"dev.kord.core.cache.idEq","location":"core/dev.kord.core.cache/id-eq.html","searchKeys":["idEq","fun <T : Any> QueryBuilder<T>.idEq(property: KProperty1<T, Boolean?>, value: Boolean?)","dev.kord.core.cache.idEq"]},{"name":"fun <T : Any> QueryBuilder<T>.idEq(property: KProperty1<T, Optional<String>>, value: String?)","description":"dev.kord.core.cache.idEq","location":"core/dev.kord.core.cache/id-eq.html","searchKeys":["idEq","fun <T : Any> QueryBuilder<T>.idEq(property: KProperty1<T, Optional<String>>, value: String?)","dev.kord.core.cache.idEq"]},{"name":"fun <T : Any> QueryBuilder<T>.idEq(property: KProperty1<T, OptionalSnowflake>, value: Snowflake?)","description":"dev.kord.core.cache.idEq","location":"core/dev.kord.core.cache/id-eq.html","searchKeys":["idEq","fun <T : Any> QueryBuilder<T>.idEq(property: KProperty1<T, OptionalSnowflake>, value: Snowflake?)","dev.kord.core.cache.idEq"]},{"name":"fun <T : Any> QueryBuilder<T>.idEq(property: KProperty1<T, OptionalSnowflake?>, value: Snowflake?)","description":"dev.kord.core.cache.idEq","location":"core/dev.kord.core.cache/id-eq.html","searchKeys":["idEq","fun <T : Any> QueryBuilder<T>.idEq(property: KProperty1<T, OptionalSnowflake?>, value: Snowflake?)","dev.kord.core.cache.idEq"]},{"name":"fun <T : Any> QueryBuilder<T>.idEq(property: KProperty1<T, Snowflake?>, value: Snowflake?)","description":"dev.kord.core.cache.idEq","location":"core/dev.kord.core.cache/id-eq.html","searchKeys":["idEq","fun <T : Any> QueryBuilder<T>.idEq(property: KProperty1<T, Snowflake?>, value: Snowflake?)","dev.kord.core.cache.idEq"]},{"name":"fun <T : Any> QueryBuilder<T>.idEq(property: KProperty1<T, String?>, value: String?)","description":"dev.kord.core.cache.idEq","location":"core/dev.kord.core.cache/id-eq.html","searchKeys":["idEq","fun <T : Any> QueryBuilder<T>.idEq(property: KProperty1<T, String?>, value: String?)","dev.kord.core.cache.idEq"]},{"name":"fun <T : Any> QueryBuilder<T>.idGt(property: KProperty1<T, Snowflake>, value: Snowflake)","description":"dev.kord.core.cache.idGt","location":"core/dev.kord.core.cache/id-gt.html","searchKeys":["idGt","fun <T : Any> QueryBuilder<T>.idGt(property: KProperty1<T, Snowflake>, value: Snowflake)","dev.kord.core.cache.idGt"]},{"name":"fun <T : Any> QueryBuilder<T>.idLt(property: KProperty1<T, Snowflake>, value: Snowflake)","description":"dev.kord.core.cache.idLt","location":"core/dev.kord.core.cache/id-lt.html","searchKeys":["idLt","fun <T : Any> QueryBuilder<T>.idLt(property: KProperty1<T, Snowflake>, value: Snowflake)","dev.kord.core.cache.idLt"]},{"name":"fun <T : EntitySupplier> with(strategy: EntitySupplyStrategy<T>): T","description":"dev.kord.core.Kord.with","location":"core/dev.kord.core/-kord/with.html","searchKeys":["with","fun <T : EntitySupplier> with(strategy: EntitySupplyStrategy<T>): T","dev.kord.core.Kord.with"]},{"name":"fun AbstractLiveKordEntity(kord: Kord, coroutineScope: CoroutineScope = kord + SupervisorJob(kord.coroutineContext.job))","description":"dev.kord.core.live.AbstractLiveKordEntity.AbstractLiveKordEntity","location":"core/dev.kord.core.live/-abstract-live-kord-entity/-abstract-live-kord-entity.html","searchKeys":["AbstractLiveKordEntity","fun AbstractLiveKordEntity(kord: Kord, coroutineScope: CoroutineScope = kord + SupervisorJob(kord.coroutineContext.job))","dev.kord.core.live.AbstractLiveKordEntity.AbstractLiveKordEntity"]},{"name":"fun ActionInteractionBehavior(id: Snowflake, channelId: Snowflake, token: String, applicationId: Snowflake, kord: Kord, strategy: EntitySupplyStrategy<*> = kord.resources.defaultStrategy): ActionInteractionBehavior","description":"dev.kord.core.behavior.interaction.ActionInteractionBehavior","location":"core/dev.kord.core.behavior.interaction/-action-interaction-behavior.html","searchKeys":["ActionInteractionBehavior","fun ActionInteractionBehavior(id: Snowflake, channelId: Snowflake, token: String, applicationId: Snowflake, kord: Kord, strategy: EntitySupplyStrategy<*> = kord.resources.defaultStrategy): ActionInteractionBehavior","dev.kord.core.behavior.interaction.ActionInteractionBehavior"]},{"name":"fun ActionRowComponent(data: ComponentData)","description":"dev.kord.core.entity.component.ActionRowComponent.ActionRowComponent","location":"core/dev.kord.core.entity.component/-action-row-component/-action-row-component.html","searchKeys":["ActionRowComponent","fun ActionRowComponent(data: ComponentData)","dev.kord.core.entity.component.ActionRowComponent.ActionRowComponent"]},{"name":"fun Activity(data: ActivityData)","description":"dev.kord.core.entity.Activity.Activity","location":"core/dev.kord.core.entity/-activity/-activity.html","searchKeys":["Activity","fun Activity(data: ActivityData)","dev.kord.core.entity.Activity.Activity"]},{"name":"fun ActivityData(name: String, type: ActivityType, url: Optional<String?> = Optional.Missing(), createdAt: Instant, timestamps: Optional<DiscordActivityTimestamps> = Optional.Missing(), applicationId: OptionalSnowflake = OptionalSnowflake.Missing, details: Optional<String?> = Optional.Missing(), state: Optional<String?> = Optional.Missing(), emoji: Optional<DiscordActivityEmoji?> = Optional.Missing(), party: Optional<DiscordActivityParty> = Optional.Missing(), assets: Optional<DiscordActivityAssets> = Optional.Missing(), secrets: Optional<DiscordActivitySecrets> = Optional.Missing(), instance: OptionalBoolean = OptionalBoolean.Missing, flags: Optional<ActivityFlags> = Optional.Missing(), buttons: Optional<List<String>> = Optional.Missing())","description":"dev.kord.core.cache.data.ActivityData.ActivityData","location":"core/dev.kord.core.cache.data/-activity-data/-activity-data.html","searchKeys":["ActivityData","fun ActivityData(name: String, type: ActivityType, url: Optional<String?> = Optional.Missing(), createdAt: Instant, timestamps: Optional<DiscordActivityTimestamps> = Optional.Missing(), applicationId: OptionalSnowflake = OptionalSnowflake.Missing, details: Optional<String?> = Optional.Missing(), state: Optional<String?> = Optional.Missing(), emoji: Optional<DiscordActivityEmoji?> = Optional.Missing(), party: Optional<DiscordActivityParty> = Optional.Missing(), assets: Optional<DiscordActivityAssets> = Optional.Missing(), secrets: Optional<DiscordActivitySecrets> = Optional.Missing(), instance: OptionalBoolean = OptionalBoolean.Missing, flags: Optional<ActivityFlags> = Optional.Missing(), buttons: Optional<List<String>> = Optional.Missing())","dev.kord.core.cache.data.ActivityData.ActivityData"]},{"name":"fun Application(data: ApplicationData, kord: Kord, supplier: EntitySupplier = kord.defaultSupplier)","description":"dev.kord.core.entity.Application.Application","location":"core/dev.kord.core.entity/-application/-application.html","searchKeys":["Application","fun Application(data: ApplicationData, kord: Kord, supplier: EntitySupplier = kord.defaultSupplier)","dev.kord.core.entity.Application.Application"]},{"name":"fun ApplicationCommandData(id: Snowflake, type: Optional<ApplicationCommandType> = Optional.Missing(), applicationId: Snowflake, name: String, nameLocalizations: Optional<Map<Locale, String>?> = Optional.Missing(), description: String?, descriptionLocalizations: Optional<Map<Locale, String>?> = Optional.Missing(), guildId: OptionalSnowflake = OptionalSnowflake.Missing, options: Optional<List<ApplicationCommandOptionData>> = Optional.Missing(), defaultMemberPermissions: Permissions?, dmPermission: OptionalBoolean = OptionalBoolean.Missing, defaultPermission: OptionalBoolean? = OptionalBoolean.Missing, version: Snowflake)","description":"dev.kord.core.cache.data.ApplicationCommandData.ApplicationCommandData","location":"core/dev.kord.core.cache.data/-application-command-data/-application-command-data.html","searchKeys":["ApplicationCommandData","fun ApplicationCommandData(id: Snowflake, type: Optional<ApplicationCommandType> = Optional.Missing(), applicationId: Snowflake, name: String, nameLocalizations: Optional<Map<Locale, String>?> = Optional.Missing(), description: String?, descriptionLocalizations: Optional<Map<Locale, String>?> = Optional.Missing(), guildId: OptionalSnowflake = OptionalSnowflake.Missing, options: Optional<List<ApplicationCommandOptionData>> = Optional.Missing(), defaultMemberPermissions: Permissions?, dmPermission: OptionalBoolean = OptionalBoolean.Missing, defaultPermission: OptionalBoolean? = OptionalBoolean.Missing, version: Snowflake)","dev.kord.core.cache.data.ApplicationCommandData.ApplicationCommandData"]},{"name":"fun ApplicationCommandGroupData(data: ApplicationCommandOptionData): ApplicationCommandGroupData","description":"dev.kord.core.cache.data.ApplicationCommandGroupData","location":"core/dev.kord.core.cache.data/-application-command-group-data.html","searchKeys":["ApplicationCommandGroupData","fun ApplicationCommandGroupData(data: ApplicationCommandOptionData): ApplicationCommandGroupData","dev.kord.core.cache.data.ApplicationCommandGroupData"]},{"name":"fun ApplicationCommandGroupData(name: String, description: String, subCommands: List<ApplicationCommandSubcommandData>)","description":"dev.kord.core.cache.data.ApplicationCommandGroupData.ApplicationCommandGroupData","location":"core/dev.kord.core.cache.data/-application-command-group-data/-application-command-group-data.html","searchKeys":["ApplicationCommandGroupData","fun ApplicationCommandGroupData(name: String, description: String, subCommands: List<ApplicationCommandSubcommandData>)","dev.kord.core.cache.data.ApplicationCommandGroupData.ApplicationCommandGroupData"]},{"name":"fun ApplicationCommandOptionChoiceData(name: String, value: String)","description":"dev.kord.core.cache.data.ApplicationCommandOptionChoiceData.ApplicationCommandOptionChoiceData","location":"core/dev.kord.core.cache.data/-application-command-option-choice-data/-application-command-option-choice-data.html","searchKeys":["ApplicationCommandOptionChoiceData","fun ApplicationCommandOptionChoiceData(name: String, value: String)","dev.kord.core.cache.data.ApplicationCommandOptionChoiceData.ApplicationCommandOptionChoiceData"]},{"name":"fun ApplicationCommandOptionData(type: ApplicationCommandOptionType, name: String, description: String, default: OptionalBoolean = OptionalBoolean.Missing, required: OptionalBoolean = OptionalBoolean.Missing, choices: Optional<List<ApplicationCommandOptionChoiceData>> = Optional.Missing(), options: Optional<List<ApplicationCommandOptionData>> = Optional.Missing(), channelTypes: Optional<List<ChannelType>> = Optional.Missing(), minValue: Optional<JsonPrimitive> = Optional.Missing(), maxValue: Optional<JsonPrimitive> = Optional.Missing(), minLength: OptionalInt = OptionalInt.Missing, maxLength: OptionalInt = OptionalInt.Missing)","description":"dev.kord.core.cache.data.ApplicationCommandOptionData.ApplicationCommandOptionData","location":"core/dev.kord.core.cache.data/-application-command-option-data/-application-command-option-data.html","searchKeys":["ApplicationCommandOptionData","fun ApplicationCommandOptionData(type: ApplicationCommandOptionType, name: String, description: String, default: OptionalBoolean = OptionalBoolean.Missing, required: OptionalBoolean = OptionalBoolean.Missing, choices: Optional<List<ApplicationCommandOptionChoiceData>> = Optional.Missing(), options: Optional<List<ApplicationCommandOptionData>> = Optional.Missing(), channelTypes: Optional<List<ChannelType>> = Optional.Missing(), minValue: Optional<JsonPrimitive> = Optional.Missing(), maxValue: Optional<JsonPrimitive> = Optional.Missing(), minLength: OptionalInt = OptionalInt.Missing, maxLength: OptionalInt = OptionalInt.Missing)","dev.kord.core.cache.data.ApplicationCommandOptionData.ApplicationCommandOptionData"]},{"name":"fun ApplicationCommandParameter(data: ApplicationCommandParameterData)","description":"dev.kord.core.entity.application.ApplicationCommandParameter.ApplicationCommandParameter","location":"core/dev.kord.core.entity.application/-application-command-parameter/-application-command-parameter.html","searchKeys":["ApplicationCommandParameter","fun ApplicationCommandParameter(data: ApplicationCommandParameterData)","dev.kord.core.entity.application.ApplicationCommandParameter.ApplicationCommandParameter"]},{"name":"fun ApplicationCommandParameterData(data: ApplicationCommandOptionData): ApplicationCommandParameterData","description":"dev.kord.core.cache.data.ApplicationCommandParameterData","location":"core/dev.kord.core.cache.data/-application-command-parameter-data.html","searchKeys":["ApplicationCommandParameterData","fun ApplicationCommandParameterData(data: ApplicationCommandOptionData): ApplicationCommandParameterData","dev.kord.core.cache.data.ApplicationCommandParameterData"]},{"name":"fun ApplicationCommandParameterData(name: String, description: String, required: OptionalBoolean, choices: Optional<List<ApplicationCommandOptionChoiceData>>, channelTypes: Optional<List<ChannelType>>)","description":"dev.kord.core.cache.data.ApplicationCommandParameterData.ApplicationCommandParameterData","location":"core/dev.kord.core.cache.data/-application-command-parameter-data/-application-command-parameter-data.html","searchKeys":["ApplicationCommandParameterData","fun ApplicationCommandParameterData(name: String, description: String, required: OptionalBoolean, choices: Optional<List<ApplicationCommandOptionChoiceData>>, channelTypes: Optional<List<ChannelType>>)","dev.kord.core.cache.data.ApplicationCommandParameterData.ApplicationCommandParameterData"]},{"name":"fun ApplicationCommandPermissions(data: GuildApplicationCommandPermissionsData)","description":"dev.kord.core.entity.application.ApplicationCommandPermissions.ApplicationCommandPermissions","location":"core/dev.kord.core.entity.application/-application-command-permissions/-application-command-permissions.html","searchKeys":["ApplicationCommandPermissions","fun ApplicationCommandPermissions(data: GuildApplicationCommandPermissionsData)","dev.kord.core.entity.application.ApplicationCommandPermissions.ApplicationCommandPermissions"]},{"name":"fun ApplicationCommandPermissionsUpdateEvent(permissions: ApplicationCommandPermissions, kord: Kord, shard: Int, customContext: Any?)","description":"dev.kord.core.event.interaction.ApplicationCommandPermissionsUpdateEvent.ApplicationCommandPermissionsUpdateEvent","location":"core/dev.kord.core.event.interaction/-application-command-permissions-update-event/-application-command-permissions-update-event.html","searchKeys":["ApplicationCommandPermissionsUpdateEvent","fun ApplicationCommandPermissionsUpdateEvent(permissions: ApplicationCommandPermissions, kord: Kord, shard: Int, customContext: Any?)","dev.kord.core.event.interaction.ApplicationCommandPermissionsUpdateEvent.ApplicationCommandPermissionsUpdateEvent"]},{"name":"fun ApplicationCommandSubCommandData(data: ApplicationCommandOptionData): ApplicationCommandSubcommandData","description":"dev.kord.core.cache.data.ApplicationCommandSubCommandData","location":"core/dev.kord.core.cache.data/-application-command-sub-command-data.html","searchKeys":["ApplicationCommandSubCommandData","fun ApplicationCommandSubCommandData(data: ApplicationCommandOptionData): ApplicationCommandSubcommandData","dev.kord.core.cache.data.ApplicationCommandSubCommandData"]},{"name":"fun ApplicationCommandSubcommandData(name: String, description: String, isDefault: OptionalBoolean, parameters: Optional<List<ApplicationCommandParameterData>>)","description":"dev.kord.core.cache.data.ApplicationCommandSubcommandData.ApplicationCommandSubcommandData","location":"core/dev.kord.core.cache.data/-application-command-subcommand-data/-application-command-subcommand-data.html","searchKeys":["ApplicationCommandSubcommandData","fun ApplicationCommandSubcommandData(name: String, description: String, isDefault: OptionalBoolean, parameters: Optional<List<ApplicationCommandParameterData>>)","dev.kord.core.cache.data.ApplicationCommandSubcommandData.ApplicationCommandSubcommandData"]},{"name":"fun ApplicationData(id: Snowflake, name: String, icon: String?, description: String, rpcOrigins: Optional<List<String>> = Optional.Missing(), botPublic: Boolean, botRequireCodeGrant: Boolean, termsOfServiceUrl: Optional<String> = Optional.Missing(), privacyPolicyUrl: Optional<String> = Optional.Missing(), ownerId: OptionalSnowflake = OptionalSnowflake.Missing, verifyKey: String, team: TeamData?, guildId: OptionalSnowflake = OptionalSnowflake.Missing, primarySkuId: OptionalSnowflake = OptionalSnowflake.Missing, slug: Optional<String> = Optional.Missing(), coverImage: Optional<String> = Optional.Missing(), flags: Optional<ApplicationFlags> = Optional.Missing(), tags: Optional<List<String>> = Optional.Missing(), installParams: Optional<InstallParams> = Optional.Missing(), customInstallUrl: Optional<String> = Optional.Missing())","description":"dev.kord.core.cache.data.ApplicationData.ApplicationData","location":"core/dev.kord.core.cache.data/-application-data/-application-data.html","searchKeys":["ApplicationData","fun ApplicationData(id: Snowflake, name: String, icon: String?, description: String, rpcOrigins: Optional<List<String>> = Optional.Missing(), botPublic: Boolean, botRequireCodeGrant: Boolean, termsOfServiceUrl: Optional<String> = Optional.Missing(), privacyPolicyUrl: Optional<String> = Optional.Missing(), ownerId: OptionalSnowflake = OptionalSnowflake.Missing, verifyKey: String, team: TeamData?, guildId: OptionalSnowflake = OptionalSnowflake.Missing, primarySkuId: OptionalSnowflake = OptionalSnowflake.Missing, slug: Optional<String> = Optional.Missing(), coverImage: Optional<String> = Optional.Missing(), flags: Optional<ApplicationFlags> = Optional.Missing(), tags: Optional<List<String>> = Optional.Missing(), installParams: Optional<InstallParams> = Optional.Missing(), customInstallUrl: Optional<String> = Optional.Missing())","dev.kord.core.cache.data.ApplicationData.ApplicationData"]},{"name":"fun ApplicationInteractionData(id: OptionalSnowflake = OptionalSnowflake.Missing, type: Optional<ApplicationCommandType> = Optional.Missing(), targetId: OptionalSnowflake = OptionalSnowflake.Missing, name: Optional<String> = Optional.Missing(), options: Optional<List<OptionData>> = Optional.Missing(), resolvedObjectsData: Optional<ResolvedObjectsData> = Optional.Missing(), guildId: OptionalSnowflake = OptionalSnowflake.Missing, customId: Optional<String> = Optional.Missing(), componentType: Optional<ComponentType> = Optional.Missing(), values: Optional<List<String>> = Optional.Missing(), components: Optional<List<ComponentData>> = Optional.Missing())","description":"dev.kord.core.cache.data.ApplicationInteractionData.ApplicationInteractionData","location":"core/dev.kord.core.cache.data/-application-interaction-data/-application-interaction-data.html","searchKeys":["ApplicationInteractionData","fun ApplicationInteractionData(id: OptionalSnowflake = OptionalSnowflake.Missing, type: Optional<ApplicationCommandType> = Optional.Missing(), targetId: OptionalSnowflake = OptionalSnowflake.Missing, name: Optional<String> = Optional.Missing(), options: Optional<List<OptionData>> = Optional.Missing(), resolvedObjectsData: Optional<ResolvedObjectsData> = Optional.Missing(), guildId: OptionalSnowflake = OptionalSnowflake.Missing, customId: Optional<String> = Optional.Missing(), componentType: Optional<ComponentType> = Optional.Missing(), values: Optional<List<String>> = Optional.Missing(), components: Optional<List<ComponentData>> = Optional.Missing())","dev.kord.core.cache.data.ApplicationInteractionData.ApplicationInteractionData"]},{"name":"fun Assets(largeImage: String?, largeText: String?, smallImage: String?, smallText: String?)","description":"dev.kord.core.entity.Activity.Assets.Assets","location":"core/dev.kord.core.entity/-activity/-assets/-assets.html","searchKeys":["Assets","fun Assets(largeImage: String?, largeText: String?, smallImage: String?, smallText: String?)","dev.kord.core.entity.Activity.Assets.Assets"]},{"name":"fun Attachment(data: AttachmentData, kord: Kord)","description":"dev.kord.core.entity.Attachment.Attachment","location":"core/dev.kord.core.entity/-attachment/-attachment.html","searchKeys":["Attachment","fun Attachment(data: AttachmentData, kord: Kord)","dev.kord.core.entity.Attachment.Attachment"]},{"name":"fun Attachment.toRawType(): DiscordAttachment","description":"dev.kord.core.entity.toRawType","location":"core/dev.kord.core.entity/to-raw-type.html","searchKeys":["toRawType","fun Attachment.toRawType(): DiscordAttachment","dev.kord.core.entity.toRawType"]},{"name":"fun AttachmentData(id: Snowflake, filename: String, description: Optional<String> = Optional.Missing(), contentType: Optional<String> = Optional.Missing(), size: Int, url: String, proxyUrl: String, height: OptionalInt? = OptionalInt.Missing, width: OptionalInt? = OptionalInt.Missing, ephemeral: OptionalBoolean = OptionalBoolean.Missing)","description":"dev.kord.core.cache.data.AttachmentData.AttachmentData","location":"core/dev.kord.core.cache.data/-attachment-data/-attachment-data.html","searchKeys":["AttachmentData","fun AttachmentData(id: Snowflake, filename: String, description: Optional<String> = Optional.Missing(), contentType: Optional<String> = Optional.Missing(), size: Int, url: String, proxyUrl: String, height: OptionalInt? = OptionalInt.Missing, width: OptionalInt? = OptionalInt.Missing, ephemeral: OptionalBoolean = OptionalBoolean.Missing)","dev.kord.core.cache.data.AttachmentData.AttachmentData"]},{"name":"fun AttachmentOptionValue(value: Snowflake, focused: Boolean, resolvedObject: Attachment?)","description":"dev.kord.core.entity.interaction.AttachmentOptionValue.AttachmentOptionValue","location":"core/dev.kord.core.entity.interaction/-attachment-option-value/-attachment-option-value.html","searchKeys":["AttachmentOptionValue","fun AttachmentOptionValue(value: Snowflake, focused: Boolean, resolvedObject: Attachment?)","dev.kord.core.entity.interaction.AttachmentOptionValue.AttachmentOptionValue"]},{"name":"fun AuditLog(data: DiscordAuditLog, guildId: Snowflake, kord: Kord)","description":"dev.kord.core.entity.AuditLog.AuditLog","location":"core/dev.kord.core.entity/-audit-log/-audit-log.html","searchKeys":["AuditLog","fun AuditLog(data: DiscordAuditLog, guildId: Snowflake, kord: Kord)","dev.kord.core.entity.AuditLog.AuditLog"]},{"name":"fun AuditLogEntry(data: DiscordAuditLogEntry, kord: Kord)","description":"dev.kord.core.entity.AuditLogEntry.AuditLogEntry","location":"core/dev.kord.core.entity/-audit-log-entry/-audit-log-entry.html","searchKeys":["AuditLogEntry","fun AuditLogEntry(data: DiscordAuditLogEntry, kord: Kord)","dev.kord.core.entity.AuditLogEntry.AuditLogEntry"]},{"name":"fun Author(data: EmbedAuthorData, kord: Kord)","description":"dev.kord.core.entity.Embed.Author.Author","location":"core/dev.kord.core.entity/-embed/-author/-author.html","searchKeys":["Author","fun Author(data: EmbedAuthorData, kord: Kord)","dev.kord.core.entity.Embed.Author.Author"]},{"name":"fun AutoModerationActionData(type: AutoModerationActionType, metadata: Optional<AutoModerationActionMetadataData> = Optional.Missing())","description":"dev.kord.core.cache.data.AutoModerationActionData.AutoModerationActionData","location":"core/dev.kord.core.cache.data/-auto-moderation-action-data/-auto-moderation-action-data.html","searchKeys":["AutoModerationActionData","fun AutoModerationActionData(type: AutoModerationActionType, metadata: Optional<AutoModerationActionMetadataData> = Optional.Missing())","dev.kord.core.cache.data.AutoModerationActionData.AutoModerationActionData"]},{"name":"fun AutoModerationActionExecutionEvent(data: AutoModerationActionExecutionEventData, kord: Kord, shard: Int, customContext: Any?, supplier: EntitySupplier = kord.defaultSupplier)","description":"dev.kord.core.event.automoderation.AutoModerationActionExecutionEvent.AutoModerationActionExecutionEvent","location":"core/dev.kord.core.event.automoderation/-auto-moderation-action-execution-event/-auto-moderation-action-execution-event.html","searchKeys":["AutoModerationActionExecutionEvent","fun AutoModerationActionExecutionEvent(data: AutoModerationActionExecutionEventData, kord: Kord, shard: Int, customContext: Any?, supplier: EntitySupplier = kord.defaultSupplier)","dev.kord.core.event.automoderation.AutoModerationActionExecutionEvent.AutoModerationActionExecutionEvent"]},{"name":"fun AutoModerationActionExecutionEventData(guildId: Snowflake, action: AutoModerationActionData, ruleId: Snowflake, ruleTriggerType: AutoModerationRuleTriggerType, userId: Snowflake, channelId: OptionalSnowflake = OptionalSnowflake.Missing, messageId: OptionalSnowflake = OptionalSnowflake.Missing, alertSystemMessageId: OptionalSnowflake = OptionalSnowflake.Missing, content: String, matchedKeyword: String?, matchedContent: String?)","description":"dev.kord.core.event.automoderation.data.AutoModerationActionExecutionEventData.AutoModerationActionExecutionEventData","location":"core/dev.kord.core.event.automoderation.data/-auto-moderation-action-execution-event-data/-auto-moderation-action-execution-event-data.html","searchKeys":["AutoModerationActionExecutionEventData","fun AutoModerationActionExecutionEventData(guildId: Snowflake, action: AutoModerationActionData, ruleId: Snowflake, ruleTriggerType: AutoModerationRuleTriggerType, userId: Snowflake, channelId: OptionalSnowflake = OptionalSnowflake.Missing, messageId: OptionalSnowflake = OptionalSnowflake.Missing, alertSystemMessageId: OptionalSnowflake = OptionalSnowflake.Missing, content: String, matchedKeyword: String?, matchedContent: String?)","dev.kord.core.event.automoderation.data.AutoModerationActionExecutionEventData.AutoModerationActionExecutionEventData"]},{"name":"fun AutoModerationActionMetadataData(channelId: OptionalSnowflake = OptionalSnowflake.Missing, durationSeconds: Optional<DurationInSeconds> = Optional.Missing())","description":"dev.kord.core.cache.data.AutoModerationActionMetadataData.AutoModerationActionMetadataData","location":"core/dev.kord.core.cache.data/-auto-moderation-action-metadata-data/-auto-moderation-action-metadata-data.html","searchKeys":["AutoModerationActionMetadataData","fun AutoModerationActionMetadataData(channelId: OptionalSnowflake = OptionalSnowflake.Missing, durationSeconds: Optional<DurationInSeconds> = Optional.Missing())","dev.kord.core.cache.data.AutoModerationActionMetadataData.AutoModerationActionMetadataData"]},{"name":"fun AutoModerationRuleCreateEvent(rule: AutoModerationRule, kord: Kord, shard: Int, customContext: Any?, supplier: EntitySupplier = kord.defaultSupplier)","description":"dev.kord.core.event.automoderation.AutoModerationRuleCreateEvent.AutoModerationRuleCreateEvent","location":"core/dev.kord.core.event.automoderation/-auto-moderation-rule-create-event/-auto-moderation-rule-create-event.html","searchKeys":["AutoModerationRuleCreateEvent","fun AutoModerationRuleCreateEvent(rule: AutoModerationRule, kord: Kord, shard: Int, customContext: Any?, supplier: EntitySupplier = kord.defaultSupplier)","dev.kord.core.event.automoderation.AutoModerationRuleCreateEvent.AutoModerationRuleCreateEvent"]},{"name":"fun AutoModerationRuleData(id: Snowflake, guildId: Snowflake, name: String, creatorId: Snowflake, eventType: AutoModerationRuleEventType, triggerType: AutoModerationRuleTriggerType, triggerMetadata: AutoModerationRuleTriggerMetadataData, actions: List<AutoModerationActionData>, enabled: Boolean, exemptRoles: List<Snowflake>, exemptChannels: List<Snowflake>)","description":"dev.kord.core.cache.data.AutoModerationRuleData.AutoModerationRuleData","location":"core/dev.kord.core.cache.data/-auto-moderation-rule-data/-auto-moderation-rule-data.html","searchKeys":["AutoModerationRuleData","fun AutoModerationRuleData(id: Snowflake, guildId: Snowflake, name: String, creatorId: Snowflake, eventType: AutoModerationRuleEventType, triggerType: AutoModerationRuleTriggerType, triggerMetadata: AutoModerationRuleTriggerMetadataData, actions: List<AutoModerationActionData>, enabled: Boolean, exemptRoles: List<Snowflake>, exemptChannels: List<Snowflake>)","dev.kord.core.cache.data.AutoModerationRuleData.AutoModerationRuleData"]},{"name":"fun AutoModerationRuleDeleteEvent(rule: AutoModerationRule, kord: Kord, shard: Int, customContext: Any?, supplier: EntitySupplier = kord.defaultSupplier)","description":"dev.kord.core.event.automoderation.AutoModerationRuleDeleteEvent.AutoModerationRuleDeleteEvent","location":"core/dev.kord.core.event.automoderation/-auto-moderation-rule-delete-event/-auto-moderation-rule-delete-event.html","searchKeys":["AutoModerationRuleDeleteEvent","fun AutoModerationRuleDeleteEvent(rule: AutoModerationRule, kord: Kord, shard: Int, customContext: Any?, supplier: EntitySupplier = kord.defaultSupplier)","dev.kord.core.event.automoderation.AutoModerationRuleDeleteEvent.AutoModerationRuleDeleteEvent"]},{"name":"fun AutoModerationRuleTriggerMetadataData(keywordFilter: Optional<List<String>> = Optional.Missing(), regexPatterns: Optional<List<String>> = Optional.Missing(), presets: Optional<List<AutoModerationRuleKeywordPresetType>> = Optional.Missing(), allowList: Optional<List<String>> = Optional.Missing(), mentionTotalLimit: OptionalInt = OptionalInt.Missing)","description":"dev.kord.core.cache.data.AutoModerationRuleTriggerMetadataData.AutoModerationRuleTriggerMetadataData","location":"core/dev.kord.core.cache.data/-auto-moderation-rule-trigger-metadata-data/-auto-moderation-rule-trigger-metadata-data.html","searchKeys":["AutoModerationRuleTriggerMetadataData","fun AutoModerationRuleTriggerMetadataData(keywordFilter: Optional<List<String>> = Optional.Missing(), regexPatterns: Optional<List<String>> = Optional.Missing(), presets: Optional<List<AutoModerationRuleKeywordPresetType>> = Optional.Missing(), allowList: Optional<List<String>> = Optional.Missing(), mentionTotalLimit: OptionalInt = OptionalInt.Missing)","dev.kord.core.cache.data.AutoModerationRuleTriggerMetadataData.AutoModerationRuleTriggerMetadataData"]},{"name":"fun AutoModerationRuleUpdateEvent(rule: AutoModerationRule, old: AutoModerationRule?, kord: Kord, shard: Int, customContext: Any?, supplier: EntitySupplier = kord.defaultSupplier)","description":"dev.kord.core.event.automoderation.AutoModerationRuleUpdateEvent.AutoModerationRuleUpdateEvent","location":"core/dev.kord.core.event.automoderation/-auto-moderation-rule-update-event/-auto-moderation-rule-update-event.html","searchKeys":["AutoModerationRuleUpdateEvent","fun AutoModerationRuleUpdateEvent(rule: AutoModerationRule, old: AutoModerationRule?, kord: Kord, shard: Int, customContext: Any?, supplier: EntitySupplier = kord.defaultSupplier)","dev.kord.core.event.automoderation.AutoModerationRuleUpdateEvent.AutoModerationRuleUpdateEvent"]},{"name":"fun Avatar(data: UserData, kord: Kord)","description":"dev.kord.core.entity.User.Avatar.Avatar","location":"core/dev.kord.core.entity/-user/-avatar/-avatar.html","searchKeys":["Avatar","fun Avatar(data: UserData, kord: Kord)","dev.kord.core.entity.User.Avatar.Avatar"]},{"name":"fun Ban(data: BanData, kord: Kord, supplier: EntitySupplier = kord.defaultSupplier)","description":"dev.kord.core.entity.Ban.Ban","location":"core/dev.kord.core.entity/-ban/-ban.html","searchKeys":["Ban","fun Ban(data: BanData, kord: Kord, supplier: EntitySupplier = kord.defaultSupplier)","dev.kord.core.entity.Ban.Ban"]},{"name":"fun BanAddEvent(user: User, guildId: Snowflake, shard: Int, customContext: Any?, supplier: EntitySupplier = user.kord.defaultSupplier)","description":"dev.kord.core.event.guild.BanAddEvent.BanAddEvent","location":"core/dev.kord.core.event.guild/-ban-add-event/-ban-add-event.html","searchKeys":["BanAddEvent","fun BanAddEvent(user: User, guildId: Snowflake, shard: Int, customContext: Any?, supplier: EntitySupplier = user.kord.defaultSupplier)","dev.kord.core.event.guild.BanAddEvent.BanAddEvent"]},{"name":"fun BanData(reason: String? = null, userId: Snowflake, guildId: Snowflake)","description":"dev.kord.core.cache.data.BanData.BanData","location":"core/dev.kord.core.cache.data/-ban-data/-ban-data.html","searchKeys":["BanData","fun BanData(reason: String? = null, userId: Snowflake, guildId: Snowflake)","dev.kord.core.cache.data.BanData.BanData"]},{"name":"fun BanRemoveEvent(user: User, guildId: Snowflake, shard: Int, customContext: Any?, supplier: EntitySupplier = user.kord.defaultSupplier)","description":"dev.kord.core.event.guild.BanRemoveEvent.BanRemoveEvent","location":"core/dev.kord.core.event.guild/-ban-remove-event/-ban-remove-event.html","searchKeys":["BanRemoveEvent","fun BanRemoveEvent(user: User, guildId: Snowflake, shard: Int, customContext: Any?, supplier: EntitySupplier = user.kord.defaultSupplier)","dev.kord.core.event.guild.BanRemoveEvent.BanRemoveEvent"]},{"name":"fun BlockMessageAutoModerationAction(data: AutoModerationActionData, kord: Kord)","description":"dev.kord.core.entity.automoderation.BlockMessageAutoModerationAction.BlockMessageAutoModerationAction","location":"core/dev.kord.core.entity.automoderation/-block-message-auto-moderation-action/-block-message-auto-moderation-action.html","searchKeys":["BlockMessageAutoModerationAction","fun BlockMessageAutoModerationAction(data: AutoModerationActionData, kord: Kord)","dev.kord.core.entity.automoderation.BlockMessageAutoModerationAction.BlockMessageAutoModerationAction"]},{"name":"fun BooleanOptionValue(value: Boolean, focused: Boolean)","description":"dev.kord.core.entity.interaction.BooleanOptionValue.BooleanOptionValue","location":"core/dev.kord.core.entity.interaction/-boolean-option-value/-boolean-option-value.html","searchKeys":["BooleanOptionValue","fun BooleanOptionValue(value: Boolean, focused: Boolean)","dev.kord.core.entity.interaction.BooleanOptionValue.BooleanOptionValue"]},{"name":"fun ButtonBuilder.emoji(emoji: GuildEmoji)","description":"dev.kord.core.builder.components.emoji","location":"core/dev.kord.core.builder.components/emoji.html","searchKeys":["emoji","fun ButtonBuilder.emoji(emoji: GuildEmoji)","dev.kord.core.builder.components.emoji"]},{"name":"fun ButtonBuilder.emoji(emoji: ReactionEmoji.Custom)","description":"dev.kord.core.builder.components.emoji","location":"core/dev.kord.core.builder.components/emoji.html","searchKeys":["emoji","fun ButtonBuilder.emoji(emoji: ReactionEmoji.Custom)","dev.kord.core.builder.components.emoji"]},{"name":"fun ButtonBuilder.emoji(emoji: ReactionEmoji.Unicode)","description":"dev.kord.core.builder.components.emoji","location":"core/dev.kord.core.builder.components/emoji.html","searchKeys":["emoji","fun ButtonBuilder.emoji(emoji: ReactionEmoji.Unicode)","dev.kord.core.builder.components.emoji"]},{"name":"fun ButtonComponent(data: ChatComponentData)","description":"dev.kord.core.entity.component.ButtonComponent.ButtonComponent","location":"core/dev.kord.core.entity.component/-button-component/-button-component.html","searchKeys":["ButtonComponent","fun ButtonComponent(data: ChatComponentData)","dev.kord.core.entity.component.ButtonComponent.ButtonComponent"]},{"name":"fun CacheEntitySupplier(kord: Kord)","description":"dev.kord.core.supplier.CacheEntitySupplier.CacheEntitySupplier","location":"core/dev.kord.core.supplier/-cache-entity-supplier/-cache-entity-supplier.html","searchKeys":["CacheEntitySupplier","fun CacheEntitySupplier(kord: Kord)","dev.kord.core.supplier.CacheEntitySupplier.CacheEntitySupplier"]},{"name":"fun CachingGateway(cache: DataCache, gateway: Gateway, dispatcher: CoroutineDispatcher = Dispatchers.Default)","description":"dev.kord.core.cache.CachingGateway.CachingGateway","location":"core/dev.kord.core.cache/-caching-gateway/-caching-gateway.html","searchKeys":["CachingGateway","fun CachingGateway(cache: DataCache, gateway: Gateway, dispatcher: CoroutineDispatcher = Dispatchers.Default)","dev.kord.core.cache.CachingGateway.CachingGateway"]},{"name":"fun Category(data: ChannelData, kord: Kord, supplier: EntitySupplier = kord.defaultSupplier)","description":"dev.kord.core.entity.channel.Category.Category","location":"core/dev.kord.core.entity.channel/-category/-category.html","searchKeys":["Category","fun Category(data: ChannelData, kord: Kord, supplier: EntitySupplier = kord.defaultSupplier)","dev.kord.core.entity.channel.Category.Category"]},{"name":"fun Category.live(coroutineScope: CoroutineScope = kord + SupervisorJob(kord.coroutineContext.job)): LiveCategory","description":"dev.kord.core.live.channel.live","location":"core/dev.kord.core.live.channel/live.html","searchKeys":["live","fun Category.live(coroutineScope: CoroutineScope = kord + SupervisorJob(kord.coroutineContext.job)): LiveCategory","dev.kord.core.live.channel.live"]},{"name":"fun CategoryBehavior(guildId: Snowflake, id: Snowflake, kord: Kord, strategy: EntitySupplyStrategy<*> = kord.resources.defaultStrategy): CategoryBehavior","description":"dev.kord.core.behavior.channel.CategoryBehavior","location":"core/dev.kord.core.behavior.channel/-category-behavior.html","searchKeys":["CategoryBehavior","fun CategoryBehavior(guildId: Snowflake, id: Snowflake, kord: Kord, strategy: EntitySupplyStrategy<*> = kord.resources.defaultStrategy): CategoryBehavior","dev.kord.core.behavior.channel.CategoryBehavior"]},{"name":"fun CategoryCreateEvent(channel: Category, shard: Int, customContext: Any?)","description":"dev.kord.core.event.channel.CategoryCreateEvent.CategoryCreateEvent","location":"core/dev.kord.core.event.channel/-category-create-event/-category-create-event.html","searchKeys":["CategoryCreateEvent","fun CategoryCreateEvent(channel: Category, shard: Int, customContext: Any?)","dev.kord.core.event.channel.CategoryCreateEvent.CategoryCreateEvent"]},{"name":"fun CategoryDeleteEvent(channel: Category, shard: Int, customContext: Any?)","description":"dev.kord.core.event.channel.CategoryDeleteEvent.CategoryDeleteEvent","location":"core/dev.kord.core.event.channel/-category-delete-event/-category-delete-event.html","searchKeys":["CategoryDeleteEvent","fun CategoryDeleteEvent(channel: Category, shard: Int, customContext: Any?)","dev.kord.core.event.channel.CategoryDeleteEvent.CategoryDeleteEvent"]},{"name":"fun CategoryUpdateEvent(channel: Category, old: Category?, shard: Int, customContext: Any?)","description":"dev.kord.core.event.channel.CategoryUpdateEvent.CategoryUpdateEvent","location":"core/dev.kord.core.event.channel/-category-update-event/-category-update-event.html","searchKeys":["CategoryUpdateEvent","fun CategoryUpdateEvent(channel: Category, old: Category?, shard: Int, customContext: Any?)","dev.kord.core.event.channel.CategoryUpdateEvent.CategoryUpdateEvent"]},{"name":"fun Channel.live(coroutineScope: CoroutineScope = kord + SupervisorJob(kord.coroutineContext.job)): LiveChannel","description":"dev.kord.core.live.channel.live","location":"core/dev.kord.core.live.channel/live.html","searchKeys":["live","fun Channel.live(coroutineScope: CoroutineScope = kord + SupervisorJob(kord.coroutineContext.job)): LiveChannel","dev.kord.core.live.channel.live"]},{"name":"fun ChannelBehavior(id: Snowflake, kord: Kord, strategy: EntitySupplyStrategy<*> = kord.resources.defaultStrategy): ChannelBehavior","description":"dev.kord.core.behavior.channel.ChannelBehavior","location":"core/dev.kord.core.behavior.channel/-channel-behavior.html","searchKeys":["ChannelBehavior","fun ChannelBehavior(id: Snowflake, kord: Kord, strategy: EntitySupplyStrategy<*> = kord.resources.defaultStrategy): ChannelBehavior","dev.kord.core.behavior.channel.ChannelBehavior"]},{"name":"fun ChannelData(id: Snowflake, type: ChannelType, guildId: OptionalSnowflake = OptionalSnowflake.Missing, position: OptionalInt = OptionalInt.Missing, permissionOverwrites: Optional<List<Overwrite>> = Optional.Missing(), name: Optional<String?> = Optional.Missing(), topic: Optional<String?> = Optional.Missing(), nsfw: OptionalBoolean = OptionalBoolean.Missing, lastMessageId: OptionalSnowflake? = OptionalSnowflake.Missing, bitrate: OptionalInt = OptionalInt.Missing, userLimit: OptionalInt = OptionalInt.Missing, rateLimitPerUser: Optional<DurationInSeconds> = Optional.Missing(), recipients: Optional<List<Snowflake>> = Optional.Missing(), icon: Optional<String?> = Optional.Missing(), ownerId: OptionalSnowflake = OptionalSnowflake.Missing, applicationId: OptionalSnowflake = OptionalSnowflake.Missing, parentId: OptionalSnowflake? = OptionalSnowflake.Missing, lastPinTimestamp: Optional<Instant?> = Optional.Missing(), rtcRegion: Optional<String?> = Optional.Missing(), videoQualityMode: Optional<VideoQualityMode> = Optional.Missing(), permissions: Optional<Permissions> = Optional.Missing(), threadMetadata: Optional<ThreadMetadataData> = Optional.Missing(), messageCount: OptionalInt = OptionalInt.Missing, memberCount: OptionalInt = OptionalInt.Missing, defaultAutoArchiveDuration: Optional<ArchiveDuration> = Optional.Missing(), member: Optional<ThreadMemberData> = Optional.Missing())","description":"dev.kord.core.cache.data.ChannelData.ChannelData","location":"core/dev.kord.core.cache.data/-channel-data/-channel-data.html","searchKeys":["ChannelData","fun ChannelData(id: Snowflake, type: ChannelType, guildId: OptionalSnowflake = OptionalSnowflake.Missing, position: OptionalInt = OptionalInt.Missing, permissionOverwrites: Optional<List<Overwrite>> = Optional.Missing(), name: Optional<String?> = Optional.Missing(), topic: Optional<String?> = Optional.Missing(), nsfw: OptionalBoolean = OptionalBoolean.Missing, lastMessageId: OptionalSnowflake? = OptionalSnowflake.Missing, bitrate: OptionalInt = OptionalInt.Missing, userLimit: OptionalInt = OptionalInt.Missing, rateLimitPerUser: Optional<DurationInSeconds> = Optional.Missing(), recipients: Optional<List<Snowflake>> = Optional.Missing(), icon: Optional<String?> = Optional.Missing(), ownerId: OptionalSnowflake = OptionalSnowflake.Missing, applicationId: OptionalSnowflake = OptionalSnowflake.Missing, parentId: OptionalSnowflake? = OptionalSnowflake.Missing, lastPinTimestamp: Optional<Instant?> = Optional.Missing(), rtcRegion: Optional<String?> = Optional.Missing(), videoQualityMode: Optional<VideoQualityMode> = Optional.Missing(), permissions: Optional<Permissions> = Optional.Missing(), threadMetadata: Optional<ThreadMetadataData> = Optional.Missing(), messageCount: OptionalInt = OptionalInt.Missing, memberCount: OptionalInt = OptionalInt.Missing, defaultAutoArchiveDuration: Optional<ArchiveDuration> = Optional.Missing(), member: Optional<ThreadMemberData> = Optional.Missing())","dev.kord.core.cache.data.ChannelData.ChannelData"]},{"name":"fun ChannelOptionValue(value: Snowflake, focused: Boolean, resolvedObject: ResolvedChannel?)","description":"dev.kord.core.entity.interaction.ChannelOptionValue.ChannelOptionValue","location":"core/dev.kord.core.entity.interaction/-channel-option-value/-channel-option-value.html","searchKeys":["ChannelOptionValue","fun ChannelOptionValue(value: Snowflake, focused: Boolean, resolvedObject: ResolvedChannel?)","dev.kord.core.entity.interaction.ChannelOptionValue.ChannelOptionValue"]},{"name":"fun ChannelPinsUpdateEvent(data: ChannelPinsUpdateEventData, kord: Kord, shard: Int, customContext: Any?, supplier: EntitySupplier = kord.defaultSupplier)","description":"dev.kord.core.event.channel.ChannelPinsUpdateEvent.ChannelPinsUpdateEvent","location":"core/dev.kord.core.event.channel/-channel-pins-update-event/-channel-pins-update-event.html","searchKeys":["ChannelPinsUpdateEvent","fun ChannelPinsUpdateEvent(data: ChannelPinsUpdateEventData, kord: Kord, shard: Int, customContext: Any?, supplier: EntitySupplier = kord.defaultSupplier)","dev.kord.core.event.channel.ChannelPinsUpdateEvent.ChannelPinsUpdateEvent"]},{"name":"fun ChannelPinsUpdateEventData(guildId: OptionalSnowflake = OptionalSnowflake.Missing, channelId: Snowflake, lastPinTimestamp: Optional<Instant?> = Optional.Missing())","description":"dev.kord.core.event.channel.data.ChannelPinsUpdateEventData.ChannelPinsUpdateEventData","location":"core/dev.kord.core.event.channel.data/-channel-pins-update-event-data/-channel-pins-update-event-data.html","searchKeys":["ChannelPinsUpdateEventData","fun ChannelPinsUpdateEventData(guildId: OptionalSnowflake = OptionalSnowflake.Missing, channelId: Snowflake, lastPinTimestamp: Optional<Instant?> = Optional.Missing())","dev.kord.core.event.channel.data.ChannelPinsUpdateEventData.ChannelPinsUpdateEventData"]},{"name":"fun ChatComponentData(type: ComponentType, style: Optional<ButtonStyle> = Optional.Missing(), label: Optional<String> = Optional.Missing(), emoji: Optional<DiscordPartialEmoji> = Optional.Missing(), customId: Optional<String> = Optional.Missing(), url: Optional<String> = Optional.Missing(), disabled: OptionalBoolean = OptionalBoolean.Missing, components: Optional<List<ComponentData>> = Optional.Missing(), placeholder: Optional<String> = Optional.Missing(), minValues: OptionalInt = OptionalInt.Missing, maxValues: OptionalInt = OptionalInt.Missing, options: Optional<List<SelectOptionData>> = Optional.Missing(), minLength: OptionalInt = OptionalInt.Missing, maxLength: OptionalInt = OptionalInt.Missing, required: OptionalBoolean = OptionalBoolean.Missing, value: Optional<String> = Optional.Missing())","description":"dev.kord.core.cache.data.ChatComponentData.ChatComponentData","location":"core/dev.kord.core.cache.data/-chat-component-data/-chat-component-data.html","searchKeys":["ChatComponentData","fun ChatComponentData(type: ComponentType, style: Optional<ButtonStyle> = Optional.Missing(), label: Optional<String> = Optional.Missing(), emoji: Optional<DiscordPartialEmoji> = Optional.Missing(), customId: Optional<String> = Optional.Missing(), url: Optional<String> = Optional.Missing(), disabled: OptionalBoolean = OptionalBoolean.Missing, components: Optional<List<ComponentData>> = Optional.Missing(), placeholder: Optional<String> = Optional.Missing(), minValues: OptionalInt = OptionalInt.Missing, maxValues: OptionalInt = OptionalInt.Missing, options: Optional<List<SelectOptionData>> = Optional.Missing(), minLength: OptionalInt = OptionalInt.Missing, maxLength: OptionalInt = OptionalInt.Missing, required: OptionalBoolean = OptionalBoolean.Missing, value: Optional<String> = Optional.Missing())","dev.kord.core.cache.data.ChatComponentData.ChatComponentData"]},{"name":"fun ChatInputCommandCreateEvent(command: GuildChatInputCommand, kord: Kord, shard: Int, customContext: Any?)","description":"dev.kord.core.event.interaction.ChatInputCommandCreateEvent.ChatInputCommandCreateEvent","location":"core/dev.kord.core.event.interaction/-chat-input-command-create-event/-chat-input-command-create-event.html","searchKeys":["ChatInputCommandCreateEvent","fun ChatInputCommandCreateEvent(command: GuildChatInputCommand, kord: Kord, shard: Int, customContext: Any?)","dev.kord.core.event.interaction.ChatInputCommandCreateEvent.ChatInputCommandCreateEvent"]},{"name":"fun ChatInputCommandDeleteEvent(command: GuildChatInputCommand, kord: Kord, shard: Int, customContext: Any?)","description":"dev.kord.core.event.interaction.ChatInputCommandDeleteEvent.ChatInputCommandDeleteEvent","location":"core/dev.kord.core.event.interaction/-chat-input-command-delete-event/-chat-input-command-delete-event.html","searchKeys":["ChatInputCommandDeleteEvent","fun ChatInputCommandDeleteEvent(command: GuildChatInputCommand, kord: Kord, shard: Int, customContext: Any?)","dev.kord.core.event.interaction.ChatInputCommandDeleteEvent.ChatInputCommandDeleteEvent"]},{"name":"fun ChatInputCommandUpdateEvent(command: GuildChatInputCommand, kord: Kord, shard: Int, customContext: Any?)","description":"dev.kord.core.event.interaction.ChatInputCommandUpdateEvent.ChatInputCommandUpdateEvent","location":"core/dev.kord.core.event.interaction/-chat-input-command-update-event/-chat-input-command-update-event.html","searchKeys":["ChatInputCommandUpdateEvent","fun ChatInputCommandUpdateEvent(command: GuildChatInputCommand, kord: Kord, shard: Int, customContext: Any?)","dev.kord.core.event.interaction.ChatInputCommandUpdateEvent.ChatInputCommandUpdateEvent"]},{"name":"fun ChatInputGroup(data: ApplicationCommandGroupData)","description":"dev.kord.core.entity.application.ChatInputGroup.ChatInputGroup","location":"core/dev.kord.core.entity.application/-chat-input-group/-chat-input-group.html","searchKeys":["ChatInputGroup","fun ChatInputGroup(data: ApplicationCommandGroupData)","dev.kord.core.entity.application.ChatInputGroup.ChatInputGroup"]},{"name":"fun ChatInputSubCommand(data: ApplicationCommandSubcommandData)","description":"dev.kord.core.entity.application.ChatInputSubCommand.ChatInputSubCommand","location":"core/dev.kord.core.entity.application/-chat-input-sub-command/-chat-input-sub-command.html","searchKeys":["ChatInputSubCommand","fun ChatInputSubCommand(data: ApplicationCommandSubcommandData)","dev.kord.core.entity.application.ChatInputSubCommand.ChatInputSubCommand"]},{"name":"fun ClientResources(token: String, applicationId: Snowflake, shards: Shards, httpClient: HttpClient, defaultStrategy: EntitySupplyStrategy<*>)","description":"dev.kord.core.ClientResources.ClientResources","location":"core/dev.kord.core/-client-resources/-client-resources.html","searchKeys":["ClientResources","fun ClientResources(token: String, applicationId: Snowflake, shards: Shards, httpClient: HttpClient, defaultStrategy: EntitySupplyStrategy<*>)","dev.kord.core.ClientResources.ClientResources"]},{"name":"fun ClientResources(token: String, applicationId: Snowflake, shards: Shards, maxConcurrency: Int, httpClient: HttpClient, defaultStrategy: EntitySupplyStrategy<*>)","description":"dev.kord.core.ClientResources.ClientResources","location":"core/dev.kord.core/-client-resources/-client-resources.html","searchKeys":["ClientResources","fun ClientResources(token: String, applicationId: Snowflake, shards: Shards, maxConcurrency: Int, httpClient: HttpClient, defaultStrategy: EntitySupplyStrategy<*>)","dev.kord.core.ClientResources.ClientResources"]},{"name":"fun ClientStatus(data: ClientStatusData)","description":"dev.kord.core.entity.ClientStatus.ClientStatus","location":"core/dev.kord.core.entity/-client-status/-client-status.html","searchKeys":["ClientStatus","fun ClientStatus(data: ClientStatusData)","dev.kord.core.entity.ClientStatus.ClientStatus"]},{"name":"fun ClientStatusData(desktop: Optional<PresenceStatus> = Optional.Missing(), mobile: Optional<PresenceStatus> = Optional.Missing(), web: Optional<PresenceStatus> = Optional.Missing())","description":"dev.kord.core.cache.data.ClientStatusData.ClientStatusData","location":"core/dev.kord.core.cache.data/-client-status-data/-client-status-data.html","searchKeys":["ClientStatusData","fun ClientStatusData(desktop: Optional<PresenceStatus> = Optional.Missing(), mobile: Optional<PresenceStatus> = Optional.Missing(), web: Optional<PresenceStatus> = Optional.Missing())","dev.kord.core.cache.data.ClientStatusData.ClientStatusData"]},{"name":"fun Component(data: ComponentData): Component","description":"dev.kord.core.entity.component.Component","location":"core/dev.kord.core.entity.component/-component.html","searchKeys":["Component","fun Component(data: ComponentData): Component","dev.kord.core.entity.component.Component"]},{"name":"fun ComponentInteraction(data: InteractionData, kord: Kord, supplier: EntitySupplier = kord.defaultSupplier): ComponentInteraction","description":"dev.kord.core.entity.interaction.ComponentInteraction","location":"core/dev.kord.core.entity.interaction/-component-interaction.html","searchKeys":["ComponentInteraction","fun ComponentInteraction(data: InteractionData, kord: Kord, supplier: EntitySupplier = kord.defaultSupplier): ComponentInteraction","dev.kord.core.entity.interaction.ComponentInteraction"]},{"name":"fun ComponentInteractionBehavior(id: Snowflake, channelId: Snowflake, token: String, applicationId: Snowflake, kord: Kord, strategy: EntitySupplyStrategy<*> = kord.resources.defaultStrategy): ComponentInteractionBehavior","description":"dev.kord.core.behavior.interaction.ComponentInteractionBehavior","location":"core/dev.kord.core.behavior.interaction/-component-interaction-behavior.html","searchKeys":["ComponentInteractionBehavior","fun ComponentInteractionBehavior(id: Snowflake, channelId: Snowflake, token: String, applicationId: Snowflake, kord: Kord, strategy: EntitySupplyStrategy<*> = kord.resources.defaultStrategy): ComponentInteractionBehavior","dev.kord.core.behavior.interaction.ComponentInteractionBehavior"]},{"name":"fun ConnectEvent(kord: Kord, shard: Int, customContext: Any?)","description":"dev.kord.core.event.gateway.ConnectEvent.ConnectEvent","location":"core/dev.kord.core.event.gateway/-connect-event/-connect-event.html","searchKeys":["ConnectEvent","fun ConnectEvent(kord: Kord, shard: Int, customContext: Any?)","dev.kord.core.event.gateway.ConnectEvent.ConnectEvent"]},{"name":"fun Custom(id: Snowflake, name: String, isAnimated: Boolean)","description":"dev.kord.core.entity.ReactionEmoji.Custom.Custom","location":"core/dev.kord.core.entity/-reaction-emoji/-custom/-custom.html","searchKeys":["Custom","fun Custom(id: Snowflake, name: String, isAnimated: Boolean)","dev.kord.core.entity.ReactionEmoji.Custom.Custom"]},{"name":"fun DMChannelCreateEvent(channel: DmChannel, shard: Int, customContext: Any?)","description":"dev.kord.core.event.channel.DMChannelCreateEvent.DMChannelCreateEvent","location":"core/dev.kord.core.event.channel/-d-m-channel-create-event/-d-m-channel-create-event.html","searchKeys":["DMChannelCreateEvent","fun DMChannelCreateEvent(channel: DmChannel, shard: Int, customContext: Any?)","dev.kord.core.event.channel.DMChannelCreateEvent.DMChannelCreateEvent"]},{"name":"fun DMChannelDeleteEvent(channel: DmChannel, shard: Int, customContext: Any?)","description":"dev.kord.core.event.channel.DMChannelDeleteEvent.DMChannelDeleteEvent","location":"core/dev.kord.core.event.channel/-d-m-channel-delete-event/-d-m-channel-delete-event.html","searchKeys":["DMChannelDeleteEvent","fun DMChannelDeleteEvent(channel: DmChannel, shard: Int, customContext: Any?)","dev.kord.core.event.channel.DMChannelDeleteEvent.DMChannelDeleteEvent"]},{"name":"fun DMChannelUpdateEvent(channel: DmChannel, old: DmChannel?, shard: Int, customContext: Any?)","description":"dev.kord.core.event.channel.DMChannelUpdateEvent.DMChannelUpdateEvent","location":"core/dev.kord.core.event.channel/-d-m-channel-update-event/-d-m-channel-update-event.html","searchKeys":["DMChannelUpdateEvent","fun DMChannelUpdateEvent(channel: DmChannel, old: DmChannel?, shard: Int, customContext: Any?)","dev.kord.core.event.channel.DMChannelUpdateEvent.DMChannelUpdateEvent"]},{"name":"fun DataCacheView(cache: DataCache)","description":"dev.kord.core.cache.DataCacheView.DataCacheView","location":"core/dev.kord.core.cache/-data-cache-view/-data-cache-view.html","searchKeys":["DataCacheView","fun DataCacheView(cache: DataCache)","dev.kord.core.cache.DataCacheView.DataCacheView"]},{"name":"fun DefaultGatewayEventInterceptor()","description":"dev.kord.core.gateway.handler.DefaultGatewayEventInterceptor.DefaultGatewayEventInterceptor","location":"core/dev.kord.core.gateway.handler/-default-gateway-event-interceptor/-default-gateway-event-interceptor.html","searchKeys":["DefaultGatewayEventInterceptor","fun DefaultGatewayEventInterceptor()","dev.kord.core.gateway.handler.DefaultGatewayEventInterceptor.DefaultGatewayEventInterceptor"]},{"name":"fun DefaultGatewayEventInterceptor(customContextCreator: CustomContextCreator?)","description":"dev.kord.core.gateway.handler.DefaultGatewayEventInterceptor.DefaultGatewayEventInterceptor","location":"core/dev.kord.core.gateway.handler/-default-gateway-event-interceptor/-default-gateway-event-interceptor.html","searchKeys":["DefaultGatewayEventInterceptor","fun DefaultGatewayEventInterceptor(customContextCreator: CustomContextCreator?)","dev.kord.core.gateway.handler.DefaultGatewayEventInterceptor.DefaultGatewayEventInterceptor"]},{"name":"fun DefaultMasterGateway(gateways: Map<Int, Gateway>)","description":"dev.kord.core.gateway.DefaultMasterGateway.DefaultMasterGateway","location":"core/dev.kord.core.gateway/-default-master-gateway/-default-master-gateway.html","searchKeys":["DefaultMasterGateway","fun DefaultMasterGateway(gateways: Map<Int, Gateway>)","dev.kord.core.gateway.DefaultMasterGateway.DefaultMasterGateway"]},{"name":"fun DefaultUserAvatar(discriminator: Int, kord: Kord)","description":"dev.kord.core.entity.Icon.DefaultUserAvatar.DefaultUserAvatar","location":"core/dev.kord.core.entity/-icon/-default-user-avatar/-default-user-avatar.html","searchKeys":["DefaultUserAvatar","fun DefaultUserAvatar(discriminator: Int, kord: Kord)","dev.kord.core.entity.Icon.DefaultUserAvatar.DefaultUserAvatar"]},{"name":"fun DeferredEphemeralMessageInteractionResponseBehavior(applicationId: Snowflake, token: String, kord: Kord, supplier: EntitySupplier = kord.defaultSupplier): DeferredEphemeralMessageInteractionResponseBehavior","description":"dev.kord.core.behavior.interaction.response.DeferredEphemeralMessageInteractionResponseBehavior","location":"core/dev.kord.core.behavior.interaction.response/-deferred-ephemeral-message-interaction-response-behavior.html","searchKeys":["DeferredEphemeralMessageInteractionResponseBehavior","fun DeferredEphemeralMessageInteractionResponseBehavior(applicationId: Snowflake, token: String, kord: Kord, supplier: EntitySupplier = kord.defaultSupplier): DeferredEphemeralMessageInteractionResponseBehavior","dev.kord.core.behavior.interaction.response.DeferredEphemeralMessageInteractionResponseBehavior"]},{"name":"fun DeferredPublicMessageInteractionResponseBehavior(applicationId: Snowflake, token: String, kord: Kord, supplier: EntitySupplier = kord.defaultSupplier): DeferredPublicMessageInteractionResponseBehavior","description":"dev.kord.core.behavior.interaction.response.DeferredPublicMessageInteractionResponseBehavior","location":"core/dev.kord.core.behavior.interaction.response/-deferred-public-message-interaction-response-behavior.html","searchKeys":["DeferredPublicMessageInteractionResponseBehavior","fun DeferredPublicMessageInteractionResponseBehavior(applicationId: Snowflake, token: String, kord: Kord, supplier: EntitySupplier = kord.defaultSupplier): DeferredPublicMessageInteractionResponseBehavior","dev.kord.core.behavior.interaction.response.DeferredPublicMessageInteractionResponseBehavior"]},{"name":"fun DeletedThreadChannel(data: ChannelData, kord: Kord, supplier: EntitySupplier = kord.defaultSupplier)","description":"dev.kord.core.entity.channel.thread.DeletedThreadChannel.DeletedThreadChannel","location":"core/dev.kord.core.entity.channel.thread/-deleted-thread-channel/-deleted-thread-channel.html","searchKeys":["DeletedThreadChannel","fun DeletedThreadChannel(data: ChannelData, kord: Kord, supplier: EntitySupplier = kord.defaultSupplier)","dev.kord.core.entity.channel.thread.DeletedThreadChannel.DeletedThreadChannel"]},{"name":"fun Desktop(status: PresenceStatus)","description":"dev.kord.core.entity.ClientStatus.Client.Desktop.Desktop","location":"core/dev.kord.core.entity/-client-status/-client/-desktop/-desktop.html","searchKeys":["Desktop","fun Desktop(status: PresenceStatus)","dev.kord.core.entity.ClientStatus.Client.Desktop.Desktop"]},{"name":"fun DetachEvent(kord: Kord, shard: Int, customContext: Any?)","description":"dev.kord.core.event.gateway.DisconnectEvent.DetachEvent.DetachEvent","location":"core/dev.kord.core.event.gateway/-disconnect-event/-detach-event/-detach-event.html","searchKeys":["DetachEvent","fun DetachEvent(kord: Kord, shard: Int, customContext: Any?)","dev.kord.core.event.gateway.DisconnectEvent.DetachEvent.DetachEvent"]},{"name":"fun DiscordChannel.toData(): ChannelData","description":"dev.kord.core.cache.data.toData","location":"core/dev.kord.core.cache.data/to-data.html","searchKeys":["toData","fun DiscordChannel.toData(): ChannelData","dev.kord.core.cache.data.toData"]},{"name":"fun DiscordCloseEvent(kord: Kord, shard: Int, closeCode: GatewayCloseCode, recoverable: Boolean, customContext: Any?)","description":"dev.kord.core.event.gateway.DisconnectEvent.DiscordCloseEvent.DiscordCloseEvent","location":"core/dev.kord.core.event.gateway/-disconnect-event/-discord-close-event/-discord-close-event.html","searchKeys":["DiscordCloseEvent","fun DiscordCloseEvent(kord: Kord, shard: Int, closeCode: GatewayCloseCode, recoverable: Boolean, customContext: Any?)","dev.kord.core.event.gateway.DisconnectEvent.DiscordCloseEvent.DiscordCloseEvent"]},{"name":"fun DiscordEmoji.toData(guildId: Snowflake, id: Snowflake): EmojiData","description":"dev.kord.core.cache.data.toData","location":"core/dev.kord.core.cache.data/to-data.html","searchKeys":["toData","fun DiscordEmoji.toData(guildId: Snowflake, id: Snowflake): EmojiData","dev.kord.core.cache.data.toData"]},{"name":"fun DiscordGuild.toData(): GuildData","description":"dev.kord.core.cache.data.toData","location":"core/dev.kord.core.cache.data/to-data.html","searchKeys":["toData","fun DiscordGuild.toData(): GuildData","dev.kord.core.cache.data.toData"]},{"name":"fun DiscordGuildMember.toData(userId: Snowflake, guildId: Snowflake): MemberData","description":"dev.kord.core.cache.data.toData","location":"core/dev.kord.core.cache.data/to-data.html","searchKeys":["toData","fun DiscordGuildMember.toData(userId: Snowflake, guildId: Snowflake): MemberData","dev.kord.core.cache.data.toData"]},{"name":"fun DiscordInteractionGuildMember.toData(userId: Snowflake, guildId: Snowflake): MemberData","description":"dev.kord.core.cache.data.toData","location":"core/dev.kord.core.cache.data/to-data.html","searchKeys":["toData","fun DiscordInteractionGuildMember.toData(userId: Snowflake, guildId: Snowflake): MemberData","dev.kord.core.cache.data.toData"]},{"name":"fun DiscordMessage.toData(): MessageData","description":"dev.kord.core.cache.data.toData","location":"core/dev.kord.core.cache.data/to-data.html","searchKeys":["toData","fun DiscordMessage.toData(): MessageData","dev.kord.core.cache.data.toData"]},{"name":"fun DiscordRole.toData(guildId: Snowflake): RoleData","description":"dev.kord.core.cache.data.toData","location":"core/dev.kord.core.cache.data/to-data.html","searchKeys":["toData","fun DiscordRole.toData(guildId: Snowflake): RoleData","dev.kord.core.cache.data.toData"]},{"name":"fun DiscordStageInstance.toData(): StageInstanceData","description":"dev.kord.core.cache.data.toData","location":"core/dev.kord.core.cache.data/to-data.html","searchKeys":["toData","fun DiscordStageInstance.toData(): StageInstanceData","dev.kord.core.cache.data.toData"]},{"name":"fun DiscordTemplate.toData(): TemplateData","description":"dev.kord.core.cache.data.toData","location":"core/dev.kord.core.cache.data/to-data.html","searchKeys":["toData","fun DiscordTemplate.toData(): TemplateData","dev.kord.core.cache.data.toData"]},{"name":"fun DiscordThreadMember.toData(threadId: Snowflake?): ThreadMemberData","description":"dev.kord.core.cache.data.toData","location":"core/dev.kord.core.cache.data/to-data.html","searchKeys":["toData","fun DiscordThreadMember.toData(threadId: Snowflake?): ThreadMemberData","dev.kord.core.cache.data.toData"]},{"name":"fun DiscordUser.toData(): UserData","description":"dev.kord.core.cache.data.toData","location":"core/dev.kord.core.cache.data/to-data.html","searchKeys":["toData","fun DiscordUser.toData(): UserData","dev.kord.core.cache.data.toData"]},{"name":"fun DmChannel(data: ChannelData, kord: Kord, supplier: EntitySupplier = kord.defaultSupplier)","description":"dev.kord.core.entity.channel.DmChannel.DmChannel","location":"core/dev.kord.core.entity.channel/-dm-channel/-dm-channel.html","searchKeys":["DmChannel","fun DmChannel(data: ChannelData, kord: Kord, supplier: EntitySupplier = kord.defaultSupplier)","dev.kord.core.entity.channel.DmChannel.DmChannel"]},{"name":"fun DmChannel.live(coroutineScope: CoroutineScope = kord + SupervisorJob(kord.coroutineContext.job)): LiveDmChannel","description":"dev.kord.core.live.channel.live","location":"core/dev.kord.core.live.channel/live.html","searchKeys":["live","fun DmChannel.live(coroutineScope: CoroutineScope = kord + SupervisorJob(kord.coroutineContext.job)): LiveDmChannel","dev.kord.core.live.channel.live"]},{"name":"fun Embed(data: EmbedData, kord: Kord)","description":"dev.kord.core.entity.Embed.Embed","location":"core/dev.kord.core.entity/-embed/-embed.html","searchKeys":["Embed","fun Embed(data: EmbedData, kord: Kord)","dev.kord.core.entity.Embed.Embed"]},{"name":"fun EmbedAuthorData(name: Optional<String> = Optional.Missing(), url: Optional<String> = Optional.Missing(), iconUrl: Optional<String> = Optional.Missing(), proxyIconUrl: Optional<String> = Optional.Missing())","description":"dev.kord.core.cache.data.EmbedAuthorData.EmbedAuthorData","location":"core/dev.kord.core.cache.data/-embed-author-data/-embed-author-data.html","searchKeys":["EmbedAuthorData","fun EmbedAuthorData(name: Optional<String> = Optional.Missing(), url: Optional<String> = Optional.Missing(), iconUrl: Optional<String> = Optional.Missing(), proxyIconUrl: Optional<String> = Optional.Missing())","dev.kord.core.cache.data.EmbedAuthorData.EmbedAuthorData"]},{"name":"fun EmbedData(title: Optional<String> = Optional.Missing(), type: Optional<EmbedType> = Optional.Missing(), description: Optional<String> = Optional.Missing(), url: Optional<String> = Optional.Missing(), timestamp: Optional<Instant> = Optional.Missing(), color: OptionalInt = OptionalInt.Missing, footer: Optional<EmbedFooterData> = Optional.Missing(), image: Optional<EmbedImageData> = Optional.Missing(), thumbnail: Optional<EmbedThumbnailData> = Optional.Missing(), video: Optional<EmbedVideoData> = Optional.Missing(), provider: Optional<EmbedProviderData> = Optional.Missing(), author: Optional<EmbedAuthorData> = Optional.Missing(), fields: Optional<List<EmbedFieldData>> = Optional.Missing())","description":"dev.kord.core.cache.data.EmbedData.EmbedData","location":"core/dev.kord.core.cache.data/-embed-data/-embed-data.html","searchKeys":["EmbedData","fun EmbedData(title: Optional<String> = Optional.Missing(), type: Optional<EmbedType> = Optional.Missing(), description: Optional<String> = Optional.Missing(), url: Optional<String> = Optional.Missing(), timestamp: Optional<Instant> = Optional.Missing(), color: OptionalInt = OptionalInt.Missing, footer: Optional<EmbedFooterData> = Optional.Missing(), image: Optional<EmbedImageData> = Optional.Missing(), thumbnail: Optional<EmbedThumbnailData> = Optional.Missing(), video: Optional<EmbedVideoData> = Optional.Missing(), provider: Optional<EmbedProviderData> = Optional.Missing(), author: Optional<EmbedAuthorData> = Optional.Missing(), fields: Optional<List<EmbedFieldData>> = Optional.Missing())","dev.kord.core.cache.data.EmbedData.EmbedData"]},{"name":"fun EmbedFieldData(name: String, value: String, inline: OptionalBoolean = OptionalBoolean.Missing)","description":"dev.kord.core.cache.data.EmbedFieldData.EmbedFieldData","location":"core/dev.kord.core.cache.data/-embed-field-data/-embed-field-data.html","searchKeys":["EmbedFieldData","fun EmbedFieldData(name: String, value: String, inline: OptionalBoolean = OptionalBoolean.Missing)","dev.kord.core.cache.data.EmbedFieldData.EmbedFieldData"]},{"name":"fun EmbedFooterData(text: String, iconUrl: Optional<String> = Optional.Missing(), proxyIconUrl: Optional<String> = Optional.Missing())","description":"dev.kord.core.cache.data.EmbedFooterData.EmbedFooterData","location":"core/dev.kord.core.cache.data/-embed-footer-data/-embed-footer-data.html","searchKeys":["EmbedFooterData","fun EmbedFooterData(text: String, iconUrl: Optional<String> = Optional.Missing(), proxyIconUrl: Optional<String> = Optional.Missing())","dev.kord.core.cache.data.EmbedFooterData.EmbedFooterData"]},{"name":"fun EmbedImageData(url: Optional<String> = Optional.Missing(), proxyUrl: Optional<String> = Optional.Missing(), height: OptionalInt = OptionalInt.Missing, width: OptionalInt = OptionalInt.Missing)","description":"dev.kord.core.cache.data.EmbedImageData.EmbedImageData","location":"core/dev.kord.core.cache.data/-embed-image-data/-embed-image-data.html","searchKeys":["EmbedImageData","fun EmbedImageData(url: Optional<String> = Optional.Missing(), proxyUrl: Optional<String> = Optional.Missing(), height: OptionalInt = OptionalInt.Missing, width: OptionalInt = OptionalInt.Missing)","dev.kord.core.cache.data.EmbedImageData.EmbedImageData"]},{"name":"fun EmbedProviderData(name: Optional<String> = Optional.Missing(), url: Optional<String?> = Optional.Missing())","description":"dev.kord.core.cache.data.EmbedProviderData.EmbedProviderData","location":"core/dev.kord.core.cache.data/-embed-provider-data/-embed-provider-data.html","searchKeys":["EmbedProviderData","fun EmbedProviderData(name: Optional<String> = Optional.Missing(), url: Optional<String?> = Optional.Missing())","dev.kord.core.cache.data.EmbedProviderData.EmbedProviderData"]},{"name":"fun EmbedThumbnailData(url: Optional<String> = Optional.Missing(), proxyUrl: Optional<String> = Optional.Missing(), height: OptionalInt = OptionalInt.Missing, width: OptionalInt = OptionalInt.Missing)","description":"dev.kord.core.cache.data.EmbedThumbnailData.EmbedThumbnailData","location":"core/dev.kord.core.cache.data/-embed-thumbnail-data/-embed-thumbnail-data.html","searchKeys":["EmbedThumbnailData","fun EmbedThumbnailData(url: Optional<String> = Optional.Missing(), proxyUrl: Optional<String> = Optional.Missing(), height: OptionalInt = OptionalInt.Missing, width: OptionalInt = OptionalInt.Missing)","dev.kord.core.cache.data.EmbedThumbnailData.EmbedThumbnailData"]},{"name":"fun EmbedVideoData(url: Optional<String> = Optional.Missing(), height: OptionalInt = OptionalInt.Missing, width: OptionalInt = OptionalInt.Missing)","description":"dev.kord.core.cache.data.EmbedVideoData.EmbedVideoData","location":"core/dev.kord.core.cache.data/-embed-video-data/-embed-video-data.html","searchKeys":["EmbedVideoData","fun EmbedVideoData(url: Optional<String> = Optional.Missing(), height: OptionalInt = OptionalInt.Missing, width: OptionalInt = OptionalInt.Missing)","dev.kord.core.cache.data.EmbedVideoData.EmbedVideoData"]},{"name":"fun EmojiData(id: Snowflake, guildId: Snowflake, name: String? = null, userId: OptionalSnowflake = OptionalSnowflake.Missing, roles: Optional<List<Snowflake>> = Optional.Missing(), requireColons: OptionalBoolean = OptionalBoolean.Missing, managed: OptionalBoolean = OptionalBoolean.Missing, animated: OptionalBoolean = OptionalBoolean.Missing, available: OptionalBoolean = OptionalBoolean.Missing)","description":"dev.kord.core.cache.data.EmojiData.EmojiData","location":"core/dev.kord.core.cache.data/-emoji-data/-emoji-data.html","searchKeys":["EmojiData","fun EmojiData(id: Snowflake, guildId: Snowflake, name: String? = null, userId: OptionalSnowflake = OptionalSnowflake.Missing, roles: Optional<List<Snowflake>> = Optional.Missing(), requireColons: OptionalBoolean = OptionalBoolean.Missing, managed: OptionalBoolean = OptionalBoolean.Missing, animated: OptionalBoolean = OptionalBoolean.Missing, available: OptionalBoolean = OptionalBoolean.Missing)","dev.kord.core.cache.data.EmojiData.EmojiData"]},{"name":"fun EmojiIcon(animated: Boolean, emojiId: Snowflake, kord: Kord)","description":"dev.kord.core.entity.Icon.EmojiIcon.EmojiIcon","location":"core/dev.kord.core.entity/-icon/-emoji-icon/-emoji-icon.html","searchKeys":["EmojiIcon","fun EmojiIcon(animated: Boolean, emojiId: Snowflake, kord: Kord)","dev.kord.core.entity.Icon.EmojiIcon.EmojiIcon"]},{"name":"fun EmojisUpdateEvent(guildId: Snowflake, emojis: Set<GuildEmoji>, old: Set<GuildEmoji>?, kord: Kord, shard: Int, customContext: Any?, supplier: EntitySupplier = kord.defaultSupplier)","description":"dev.kord.core.event.guild.EmojisUpdateEvent.EmojisUpdateEvent","location":"core/dev.kord.core.event.guild/-emojis-update-event/-emojis-update-event.html","searchKeys":["EmojisUpdateEvent","fun EmojisUpdateEvent(guildId: Snowflake, emojis: Set<GuildEmoji>, old: Set<GuildEmoji>?, kord: Kord, shard: Int, customContext: Any?, supplier: EntitySupplier = kord.defaultSupplier)","dev.kord.core.event.guild.EmojisUpdateEvent.EmojisUpdateEvent"]},{"name":"fun EntityNotFoundException(cause: Throwable)","description":"dev.kord.core.exception.EntityNotFoundException.EntityNotFoundException","location":"core/dev.kord.core.exception/-entity-not-found-exception/-entity-not-found-exception.html","searchKeys":["EntityNotFoundException","fun EntityNotFoundException(cause: Throwable)","dev.kord.core.exception.EntityNotFoundException.EntityNotFoundException"]},{"name":"fun EntityNotFoundException(message: String)","description":"dev.kord.core.exception.EntityNotFoundException.EntityNotFoundException","location":"core/dev.kord.core.exception/-entity-not-found-exception/-entity-not-found-exception.html","searchKeys":["EntityNotFoundException","fun EntityNotFoundException(message: String)","dev.kord.core.exception.EntityNotFoundException.EntityNotFoundException"]},{"name":"fun EntityNotFoundException(message: String, cause: Throwable)","description":"dev.kord.core.exception.EntityNotFoundException.EntityNotFoundException","location":"core/dev.kord.core.exception/-entity-not-found-exception/-entity-not-found-exception.html","searchKeys":["EntityNotFoundException","fun EntityNotFoundException(message: String, cause: Throwable)","dev.kord.core.exception.EntityNotFoundException.EntityNotFoundException"]},{"name":"fun EphemeralFollowupMessage(message: Message, applicationId: Snowflake, token: String, kord: Kord, supplier: EntitySupplier = kord.defaultSupplier)","description":"dev.kord.core.entity.interaction.followup.EphemeralFollowupMessage.EphemeralFollowupMessage","location":"core/dev.kord.core.entity.interaction.followup/-ephemeral-followup-message/-ephemeral-followup-message.html","searchKeys":["EphemeralFollowupMessage","fun EphemeralFollowupMessage(message: Message, applicationId: Snowflake, token: String, kord: Kord, supplier: EntitySupplier = kord.defaultSupplier)","dev.kord.core.entity.interaction.followup.EphemeralFollowupMessage.EphemeralFollowupMessage"]},{"name":"fun EphemeralFollowupMessageBehavior(id: Snowflake, applicationId: Snowflake, token: String, channelId: Snowflake, kord: Kord, supplier: EntitySupplier): EphemeralFollowupMessageBehavior","description":"dev.kord.core.behavior.interaction.followup.EphemeralFollowupMessageBehavior","location":"core/dev.kord.core.behavior.interaction.followup/-ephemeral-followup-message-behavior.html","searchKeys":["EphemeralFollowupMessageBehavior","fun EphemeralFollowupMessageBehavior(id: Snowflake, applicationId: Snowflake, token: String, channelId: Snowflake, kord: Kord, supplier: EntitySupplier): EphemeralFollowupMessageBehavior","dev.kord.core.behavior.interaction.followup.EphemeralFollowupMessageBehavior"]},{"name":"fun EphemeralMessageInteractionResponse(message: Message, applicationId: Snowflake, token: String, kord: Kord, supplier: EntitySupplier = kord.defaultSupplier)","description":"dev.kord.core.entity.interaction.response.EphemeralMessageInteractionResponse.EphemeralMessageInteractionResponse","location":"core/dev.kord.core.entity.interaction.response/-ephemeral-message-interaction-response/-ephemeral-message-interaction-response.html","searchKeys":["EphemeralMessageInteractionResponse","fun EphemeralMessageInteractionResponse(message: Message, applicationId: Snowflake, token: String, kord: Kord, supplier: EntitySupplier = kord.defaultSupplier)","dev.kord.core.entity.interaction.response.EphemeralMessageInteractionResponse.EphemeralMessageInteractionResponse"]},{"name":"fun EphemeralMessageInteractionResponseBehavior(applicationId: Snowflake, token: String, kord: Kord, supplier: EntitySupplier = kord.defaultSupplier): EphemeralMessageInteractionResponseBehavior","description":"dev.kord.core.behavior.interaction.response.EphemeralMessageInteractionResponseBehavior","location":"core/dev.kord.core.behavior.interaction.response/-ephemeral-message-interaction-response-behavior.html","searchKeys":["EphemeralMessageInteractionResponseBehavior","fun EphemeralMessageInteractionResponseBehavior(applicationId: Snowflake, token: String, kord: Kord, supplier: EntitySupplier = kord.defaultSupplier): EphemeralMessageInteractionResponseBehavior","dev.kord.core.behavior.interaction.response.EphemeralMessageInteractionResponseBehavior"]},{"name":"fun Field(data: EmbedFieldData, kord: Kord)","description":"dev.kord.core.entity.Embed.Field.Field","location":"core/dev.kord.core.entity/-embed/-field/-field.html","searchKeys":["Field","fun Field(data: EmbedFieldData, kord: Kord)","dev.kord.core.entity.Embed.Field.Field"]},{"name":"fun FollowupPermittingInteractionResponseBehavior(applicationId: Snowflake, token: String, kord: Kord, supplier: EntitySupplier = kord.defaultSupplier): FollowupPermittingInteractionResponseBehavior","description":"dev.kord.core.behavior.interaction.response.FollowupPermittingInteractionResponseBehavior","location":"core/dev.kord.core.behavior.interaction.response/-followup-permitting-interaction-response-behavior.html","searchKeys":["FollowupPermittingInteractionResponseBehavior","fun FollowupPermittingInteractionResponseBehavior(applicationId: Snowflake, token: String, kord: Kord, supplier: EntitySupplier = kord.defaultSupplier): FollowupPermittingInteractionResponseBehavior","dev.kord.core.behavior.interaction.response.FollowupPermittingInteractionResponseBehavior"]},{"name":"fun Footer(data: EmbedFooterData, kord: Kord)","description":"dev.kord.core.entity.Embed.Footer.Footer","location":"core/dev.kord.core.entity/-embed/-footer/-footer.html","searchKeys":["Footer","fun Footer(data: EmbedFooterData, kord: Kord)","dev.kord.core.entity.Embed.Footer.Footer"]},{"name":"fun GatewayNotFoundException(cause: Throwable)","description":"dev.kord.core.exception.GatewayNotFoundException.GatewayNotFoundException","location":"core/dev.kord.core.exception/-gateway-not-found-exception/-gateway-not-found-exception.html","searchKeys":["GatewayNotFoundException","fun GatewayNotFoundException(cause: Throwable)","dev.kord.core.exception.GatewayNotFoundException.GatewayNotFoundException"]},{"name":"fun GatewayNotFoundException(message: String)","description":"dev.kord.core.exception.GatewayNotFoundException.GatewayNotFoundException","location":"core/dev.kord.core.exception/-gateway-not-found-exception/-gateway-not-found-exception.html","searchKeys":["GatewayNotFoundException","fun GatewayNotFoundException(message: String)","dev.kord.core.exception.GatewayNotFoundException.GatewayNotFoundException"]},{"name":"fun GatewayNotFoundException(message: String, cause: Throwable)","description":"dev.kord.core.exception.GatewayNotFoundException.GatewayNotFoundException","location":"core/dev.kord.core.exception/-gateway-not-found-exception/-gateway-not-found-exception.html","searchKeys":["GatewayNotFoundException","fun GatewayNotFoundException(message: String, cause: Throwable)","dev.kord.core.exception.GatewayNotFoundException.GatewayNotFoundException"]},{"name":"fun GlobalApplicationCommand(data: ApplicationCommandData, service: InteractionService): GlobalApplicationCommand","description":"dev.kord.core.entity.application.GlobalApplicationCommand","location":"core/dev.kord.core.entity.application/-global-application-command.html","searchKeys":["GlobalApplicationCommand","fun GlobalApplicationCommand(data: ApplicationCommandData, service: InteractionService): GlobalApplicationCommand","dev.kord.core.entity.application.GlobalApplicationCommand"]},{"name":"fun GlobalApplicationCommandBehavior(applicationId: Snowflake, id: Snowflake, service: InteractionService): GlobalApplicationCommandBehavior","description":"dev.kord.core.behavior.GlobalApplicationCommandBehavior","location":"core/dev.kord.core.behavior/-global-application-command-behavior.html","searchKeys":["GlobalApplicationCommandBehavior","fun GlobalApplicationCommandBehavior(applicationId: Snowflake, id: Snowflake, service: InteractionService): GlobalApplicationCommandBehavior","dev.kord.core.behavior.GlobalApplicationCommandBehavior"]},{"name":"fun GlobalApplicationCommandInteraction(data: InteractionData, kord: Kord, supplier: EntitySupplier = kord.defaultSupplier): GlobalApplicationCommandInteraction","description":"dev.kord.core.entity.interaction.GlobalApplicationCommandInteraction","location":"core/dev.kord.core.entity.interaction/-global-application-command-interaction.html","searchKeys":["GlobalApplicationCommandInteraction","fun GlobalApplicationCommandInteraction(data: InteractionData, kord: Kord, supplier: EntitySupplier = kord.defaultSupplier): GlobalApplicationCommandInteraction","dev.kord.core.entity.interaction.GlobalApplicationCommandInteraction"]},{"name":"fun GlobalAutoCompleteInteraction(data: InteractionData, kord: Kord, supplier: EntitySupplier = kord.defaultSupplier)","description":"dev.kord.core.entity.interaction.GlobalAutoCompleteInteraction.GlobalAutoCompleteInteraction","location":"core/dev.kord.core.entity.interaction/-global-auto-complete-interaction/-global-auto-complete-interaction.html","searchKeys":["GlobalAutoCompleteInteraction","fun GlobalAutoCompleteInteraction(data: InteractionData, kord: Kord, supplier: EntitySupplier = kord.defaultSupplier)","dev.kord.core.entity.interaction.GlobalAutoCompleteInteraction.GlobalAutoCompleteInteraction"]},{"name":"fun GlobalAutoCompleteInteractionCreateEvent(kord: Kord, shard: Int, interaction: GlobalAutoCompleteInteraction, customContext: Any?)","description":"dev.kord.core.event.interaction.GlobalAutoCompleteInteractionCreateEvent.GlobalAutoCompleteInteractionCreateEvent","location":"core/dev.kord.core.event.interaction/-global-auto-complete-interaction-create-event/-global-auto-complete-interaction-create-event.html","searchKeys":["GlobalAutoCompleteInteractionCreateEvent","fun GlobalAutoCompleteInteractionCreateEvent(kord: Kord, shard: Int, interaction: GlobalAutoCompleteInteraction, customContext: Any?)","dev.kord.core.event.interaction.GlobalAutoCompleteInteractionCreateEvent.GlobalAutoCompleteInteractionCreateEvent"]},{"name":"fun GlobalButtonInteraction(data: InteractionData, kord: Kord, supplier: EntitySupplier)","description":"dev.kord.core.entity.interaction.GlobalButtonInteraction.GlobalButtonInteraction","location":"core/dev.kord.core.entity.interaction/-global-button-interaction/-global-button-interaction.html","searchKeys":["GlobalButtonInteraction","fun GlobalButtonInteraction(data: InteractionData, kord: Kord, supplier: EntitySupplier)","dev.kord.core.entity.interaction.GlobalButtonInteraction.GlobalButtonInteraction"]},{"name":"fun GlobalButtonInteractionCreateEvent(interaction: GlobalButtonInteraction, kord: Kord, shard: Int, customContext: Any?)","description":"dev.kord.core.event.interaction.GlobalButtonInteractionCreateEvent.GlobalButtonInteractionCreateEvent","location":"core/dev.kord.core.event.interaction/-global-button-interaction-create-event/-global-button-interaction-create-event.html","searchKeys":["GlobalButtonInteractionCreateEvent","fun GlobalButtonInteractionCreateEvent(interaction: GlobalButtonInteraction, kord: Kord, shard: Int, customContext: Any?)","dev.kord.core.event.interaction.GlobalButtonInteractionCreateEvent.GlobalButtonInteractionCreateEvent"]},{"name":"fun GlobalChatInputCommand(data: ApplicationCommandData, service: InteractionService)","description":"dev.kord.core.entity.application.GlobalChatInputCommand.GlobalChatInputCommand","location":"core/dev.kord.core.entity.application/-global-chat-input-command/-global-chat-input-command.html","searchKeys":["GlobalChatInputCommand","fun GlobalChatInputCommand(data: ApplicationCommandData, service: InteractionService)","dev.kord.core.entity.application.GlobalChatInputCommand.GlobalChatInputCommand"]},{"name":"fun GlobalChatInputCommandInteraction(data: InteractionData, kord: Kord, supplier: EntitySupplier)","description":"dev.kord.core.entity.interaction.GlobalChatInputCommandInteraction.GlobalChatInputCommandInteraction","location":"core/dev.kord.core.entity.interaction/-global-chat-input-command-interaction/-global-chat-input-command-interaction.html","searchKeys":["GlobalChatInputCommandInteraction","fun GlobalChatInputCommandInteraction(data: InteractionData, kord: Kord, supplier: EntitySupplier)","dev.kord.core.entity.interaction.GlobalChatInputCommandInteraction.GlobalChatInputCommandInteraction"]},{"name":"fun GlobalChatInputCommandInteractionCreateEvent(interaction: GlobalChatInputCommandInteraction, kord: Kord, shard: Int, customContext: Any?)","description":"dev.kord.core.event.interaction.GlobalChatInputCommandInteractionCreateEvent.GlobalChatInputCommandInteractionCreateEvent","location":"core/dev.kord.core.event.interaction/-global-chat-input-command-interaction-create-event/-global-chat-input-command-interaction-create-event.html","searchKeys":["GlobalChatInputCommandInteractionCreateEvent","fun GlobalChatInputCommandInteractionCreateEvent(interaction: GlobalChatInputCommandInteraction, kord: Kord, shard: Int, customContext: Any?)","dev.kord.core.event.interaction.GlobalChatInputCommandInteractionCreateEvent.GlobalChatInputCommandInteractionCreateEvent"]},{"name":"fun GlobalMessageCommand(data: ApplicationCommandData, service: InteractionService)","description":"dev.kord.core.entity.application.GlobalMessageCommand.GlobalMessageCommand","location":"core/dev.kord.core.entity.application/-global-message-command/-global-message-command.html","searchKeys":["GlobalMessageCommand","fun GlobalMessageCommand(data: ApplicationCommandData, service: InteractionService)","dev.kord.core.entity.application.GlobalMessageCommand.GlobalMessageCommand"]},{"name":"fun GlobalMessageCommandInteraction(data: InteractionData, kord: Kord, supplier: EntitySupplier)","description":"dev.kord.core.entity.interaction.GlobalMessageCommandInteraction.GlobalMessageCommandInteraction","location":"core/dev.kord.core.entity.interaction/-global-message-command-interaction/-global-message-command-interaction.html","searchKeys":["GlobalMessageCommandInteraction","fun GlobalMessageCommandInteraction(data: InteractionData, kord: Kord, supplier: EntitySupplier)","dev.kord.core.entity.interaction.GlobalMessageCommandInteraction.GlobalMessageCommandInteraction"]},{"name":"fun GlobalMessageCommandInteractionCreateEvent(interaction: GlobalMessageCommandInteraction, kord: Kord, shard: Int, customContext: Any?)","description":"dev.kord.core.event.interaction.GlobalMessageCommandInteractionCreateEvent.GlobalMessageCommandInteractionCreateEvent","location":"core/dev.kord.core.event.interaction/-global-message-command-interaction-create-event/-global-message-command-interaction-create-event.html","searchKeys":["GlobalMessageCommandInteractionCreateEvent","fun GlobalMessageCommandInteractionCreateEvent(interaction: GlobalMessageCommandInteraction, kord: Kord, shard: Int, customContext: Any?)","dev.kord.core.event.interaction.GlobalMessageCommandInteractionCreateEvent.GlobalMessageCommandInteractionCreateEvent"]},{"name":"fun GlobalModalSubmitInteraction(data: InteractionData, kord: Kord, supplier: EntitySupplier = kord.defaultSupplier)","description":"dev.kord.core.entity.interaction.GlobalModalSubmitInteraction.GlobalModalSubmitInteraction","location":"core/dev.kord.core.entity.interaction/-global-modal-submit-interaction/-global-modal-submit-interaction.html","searchKeys":["GlobalModalSubmitInteraction","fun GlobalModalSubmitInteraction(data: InteractionData, kord: Kord, supplier: EntitySupplier = kord.defaultSupplier)","dev.kord.core.entity.interaction.GlobalModalSubmitInteraction.GlobalModalSubmitInteraction"]},{"name":"fun GlobalModalSubmitInteractionCreateEvent(interaction: GlobalModalSubmitInteraction, shard: Int, kord: Kord, customContext: Any?)","description":"dev.kord.core.event.interaction.GlobalModalSubmitInteractionCreateEvent.GlobalModalSubmitInteractionCreateEvent","location":"core/dev.kord.core.event.interaction/-global-modal-submit-interaction-create-event/-global-modal-submit-interaction-create-event.html","searchKeys":["GlobalModalSubmitInteractionCreateEvent","fun GlobalModalSubmitInteractionCreateEvent(interaction: GlobalModalSubmitInteraction, shard: Int, kord: Kord, customContext: Any?)","dev.kord.core.event.interaction.GlobalModalSubmitInteractionCreateEvent.GlobalModalSubmitInteractionCreateEvent"]},{"name":"fun GlobalSelectMenuInteraction(data: InteractionData, kord: Kord, supplier: EntitySupplier)","description":"dev.kord.core.entity.interaction.GlobalSelectMenuInteraction.GlobalSelectMenuInteraction","location":"core/dev.kord.core.entity.interaction/-global-select-menu-interaction/-global-select-menu-interaction.html","searchKeys":["GlobalSelectMenuInteraction","fun GlobalSelectMenuInteraction(data: InteractionData, kord: Kord, supplier: EntitySupplier)","dev.kord.core.entity.interaction.GlobalSelectMenuInteraction.GlobalSelectMenuInteraction"]},{"name":"fun GlobalSelectMenuInteractionCreateEvent(interaction: GlobalSelectMenuInteraction, kord: Kord, shard: Int, customContext: Any?)","description":"dev.kord.core.event.interaction.GlobalSelectMenuInteractionCreateEvent.GlobalSelectMenuInteractionCreateEvent","location":"core/dev.kord.core.event.interaction/-global-select-menu-interaction-create-event/-global-select-menu-interaction-create-event.html","searchKeys":["GlobalSelectMenuInteractionCreateEvent","fun GlobalSelectMenuInteractionCreateEvent(interaction: GlobalSelectMenuInteraction, kord: Kord, shard: Int, customContext: Any?)","dev.kord.core.event.interaction.GlobalSelectMenuInteractionCreateEvent.GlobalSelectMenuInteractionCreateEvent"]},{"name":"fun GlobalUserCommand(data: ApplicationCommandData, service: InteractionService)","description":"dev.kord.core.entity.application.GlobalUserCommand.GlobalUserCommand","location":"core/dev.kord.core.entity.application/-global-user-command/-global-user-command.html","searchKeys":["GlobalUserCommand","fun GlobalUserCommand(data: ApplicationCommandData, service: InteractionService)","dev.kord.core.entity.application.GlobalUserCommand.GlobalUserCommand"]},{"name":"fun GlobalUserCommandInteraction(data: InteractionData, kord: Kord, supplier: EntitySupplier)","description":"dev.kord.core.entity.interaction.GlobalUserCommandInteraction.GlobalUserCommandInteraction","location":"core/dev.kord.core.entity.interaction/-global-user-command-interaction/-global-user-command-interaction.html","searchKeys":["GlobalUserCommandInteraction","fun GlobalUserCommandInteraction(data: InteractionData, kord: Kord, supplier: EntitySupplier)","dev.kord.core.entity.interaction.GlobalUserCommandInteraction.GlobalUserCommandInteraction"]},{"name":"fun GlobalUserCommandInteractionCreateEvent(interaction: GlobalUserCommandInteraction, kord: Kord, shard: Int, customContext: Any?)","description":"dev.kord.core.event.interaction.GlobalUserCommandInteractionCreateEvent.GlobalUserCommandInteractionCreateEvent","location":"core/dev.kord.core.event.interaction/-global-user-command-interaction-create-event/-global-user-command-interaction-create-event.html","searchKeys":["GlobalUserCommandInteractionCreateEvent","fun GlobalUserCommandInteractionCreateEvent(interaction: GlobalUserCommandInteraction, kord: Kord, shard: Int, customContext: Any?)","dev.kord.core.event.interaction.GlobalUserCommandInteractionCreateEvent.GlobalUserCommandInteractionCreateEvent"]},{"name":"fun GroupCommand(data: ApplicationInteractionData, kord: Kord)","description":"dev.kord.core.entity.interaction.GroupCommand.GroupCommand","location":"core/dev.kord.core.entity.interaction/-group-command/-group-command.html","searchKeys":["GroupCommand","fun GroupCommand(data: ApplicationInteractionData, kord: Kord)","dev.kord.core.entity.interaction.GroupCommand.GroupCommand"]},{"name":"fun Guild(data: GuildData, kord: Kord, supplier: EntitySupplier = kord.defaultSupplier)","description":"dev.kord.core.entity.Guild.Guild","location":"core/dev.kord.core.entity/-guild/-guild.html","searchKeys":["Guild","fun Guild(data: GuildData, kord: Kord, supplier: EntitySupplier = kord.defaultSupplier)","dev.kord.core.entity.Guild.Guild"]},{"name":"fun Guild.live(coroutineScope: CoroutineScope = kord + SupervisorJob(kord.coroutineContext.job)): LiveGuild","description":"dev.kord.core.live.live","location":"core/dev.kord.core.live/live.html","searchKeys":["live","fun Guild.live(coroutineScope: CoroutineScope = kord + SupervisorJob(kord.coroutineContext.job)): LiveGuild","dev.kord.core.live.live"]},{"name":"fun GuildApplicationCommand(data: ApplicationCommandData, service: InteractionService): GuildApplicationCommand","description":"dev.kord.core.entity.application.GuildApplicationCommand","location":"core/dev.kord.core.entity.application/-guild-application-command.html","searchKeys":["GuildApplicationCommand","fun GuildApplicationCommand(data: ApplicationCommandData, service: InteractionService): GuildApplicationCommand","dev.kord.core.entity.application.GuildApplicationCommand"]},{"name":"fun GuildApplicationCommandBehavior(guildId: Snowflake, applicationId: Snowflake, id: Snowflake, service: InteractionService): GuildApplicationCommandBehavior","description":"dev.kord.core.behavior.GuildApplicationCommandBehavior","location":"core/dev.kord.core.behavior/-guild-application-command-behavior.html","searchKeys":["GuildApplicationCommandBehavior","fun GuildApplicationCommandBehavior(guildId: Snowflake, applicationId: Snowflake, id: Snowflake, service: InteractionService): GuildApplicationCommandBehavior","dev.kord.core.behavior.GuildApplicationCommandBehavior"]},{"name":"fun GuildApplicationCommandInteraction(data: InteractionData, kord: Kord, supplier: EntitySupplier = kord.defaultSupplier): GuildApplicationCommandInteraction","description":"dev.kord.core.entity.interaction.GuildApplicationCommandInteraction","location":"core/dev.kord.core.entity.interaction/-guild-application-command-interaction.html","searchKeys":["GuildApplicationCommandInteraction","fun GuildApplicationCommandInteraction(data: InteractionData, kord: Kord, supplier: EntitySupplier = kord.defaultSupplier): GuildApplicationCommandInteraction","dev.kord.core.entity.interaction.GuildApplicationCommandInteraction"]},{"name":"fun GuildApplicationCommandPermission(data: GuildApplicationCommandPermissionData)","description":"dev.kord.core.entity.application.GuildApplicationCommandPermission.GuildApplicationCommandPermission","location":"core/dev.kord.core.entity.application/-guild-application-command-permission/-guild-application-command-permission.html","searchKeys":["GuildApplicationCommandPermission","fun GuildApplicationCommandPermission(data: GuildApplicationCommandPermissionData)","dev.kord.core.entity.application.GuildApplicationCommandPermission.GuildApplicationCommandPermission"]},{"name":"fun GuildApplicationCommandPermissionData(id: Snowflake, type: ApplicationCommandPermissionType, permission: Boolean)","description":"dev.kord.core.cache.data.GuildApplicationCommandPermissionData.GuildApplicationCommandPermissionData","location":"core/dev.kord.core.cache.data/-guild-application-command-permission-data/-guild-application-command-permission-data.html","searchKeys":["GuildApplicationCommandPermissionData","fun GuildApplicationCommandPermissionData(id: Snowflake, type: ApplicationCommandPermissionType, permission: Boolean)","dev.kord.core.cache.data.GuildApplicationCommandPermissionData.GuildApplicationCommandPermissionData"]},{"name":"fun GuildApplicationCommandPermissionData(id: Snowflake, type: DiscordGuildApplicationCommandPermission.Type, permission: Boolean)","description":"dev.kord.core.cache.data.GuildApplicationCommandPermissionData.GuildApplicationCommandPermissionData","location":"core/dev.kord.core.cache.data/-guild-application-command-permission-data/-guild-application-command-permission-data.html","searchKeys":["GuildApplicationCommandPermissionData","fun GuildApplicationCommandPermissionData(id: Snowflake, type: DiscordGuildApplicationCommandPermission.Type, permission: Boolean)","dev.kord.core.cache.data.GuildApplicationCommandPermissionData.GuildApplicationCommandPermissionData"]},{"name":"fun GuildApplicationCommandPermissionsData(id: Snowflake, applicationId: Snowflake, guildId: Snowflake, permissions: List<GuildApplicationCommandPermissionData>)","description":"dev.kord.core.cache.data.GuildApplicationCommandPermissionsData.GuildApplicationCommandPermissionsData","location":"core/dev.kord.core.cache.data/-guild-application-command-permissions-data/-guild-application-command-permissions-data.html","searchKeys":["GuildApplicationCommandPermissionsData","fun GuildApplicationCommandPermissionsData(id: Snowflake, applicationId: Snowflake, guildId: Snowflake, permissions: List<GuildApplicationCommandPermissionData>)","dev.kord.core.cache.data.GuildApplicationCommandPermissionsData.GuildApplicationCommandPermissionsData"]},{"name":"fun GuildAutoCompleteInteraction(data: InteractionData, kord: Kord, supplier: EntitySupplier = kord.defaultSupplier)","description":"dev.kord.core.entity.interaction.GuildAutoCompleteInteraction.GuildAutoCompleteInteraction","location":"core/dev.kord.core.entity.interaction/-guild-auto-complete-interaction/-guild-auto-complete-interaction.html","searchKeys":["GuildAutoCompleteInteraction","fun GuildAutoCompleteInteraction(data: InteractionData, kord: Kord, supplier: EntitySupplier = kord.defaultSupplier)","dev.kord.core.entity.interaction.GuildAutoCompleteInteraction.GuildAutoCompleteInteraction"]},{"name":"fun GuildAutoCompleteInteractionCreateEvent(kord: Kord, shard: Int, interaction: GuildAutoCompleteInteraction, customContext: Any?)","description":"dev.kord.core.event.interaction.GuildAutoCompleteInteractionCreateEvent.GuildAutoCompleteInteractionCreateEvent","location":"core/dev.kord.core.event.interaction/-guild-auto-complete-interaction-create-event/-guild-auto-complete-interaction-create-event.html","searchKeys":["GuildAutoCompleteInteractionCreateEvent","fun GuildAutoCompleteInteractionCreateEvent(kord: Kord, shard: Int, interaction: GuildAutoCompleteInteraction, customContext: Any?)","dev.kord.core.event.interaction.GuildAutoCompleteInteractionCreateEvent.GuildAutoCompleteInteractionCreateEvent"]},{"name":"fun GuildBehavior(id: Snowflake, kord: Kord, strategy: EntitySupplyStrategy<*> = kord.resources.defaultStrategy): GuildBehavior","description":"dev.kord.core.behavior.GuildBehavior","location":"core/dev.kord.core.behavior/-guild-behavior.html","searchKeys":["GuildBehavior","fun GuildBehavior(id: Snowflake, kord: Kord, strategy: EntitySupplyStrategy<*> = kord.resources.defaultStrategy): GuildBehavior","dev.kord.core.behavior.GuildBehavior"]},{"name":"fun GuildButtonInteraction(data: InteractionData, kord: Kord, supplier: EntitySupplier)","description":"dev.kord.core.entity.interaction.GuildButtonInteraction.GuildButtonInteraction","location":"core/dev.kord.core.entity.interaction/-guild-button-interaction/-guild-button-interaction.html","searchKeys":["GuildButtonInteraction","fun GuildButtonInteraction(data: InteractionData, kord: Kord, supplier: EntitySupplier)","dev.kord.core.entity.interaction.GuildButtonInteraction.GuildButtonInteraction"]},{"name":"fun GuildButtonInteractionCreateEvent(interaction: GuildButtonInteraction, kord: Kord, shard: Int, customContext: Any?)","description":"dev.kord.core.event.interaction.GuildButtonInteractionCreateEvent.GuildButtonInteractionCreateEvent","location":"core/dev.kord.core.event.interaction/-guild-button-interaction-create-event/-guild-button-interaction-create-event.html","searchKeys":["GuildButtonInteractionCreateEvent","fun GuildButtonInteractionCreateEvent(interaction: GuildButtonInteraction, kord: Kord, shard: Int, customContext: Any?)","dev.kord.core.event.interaction.GuildButtonInteractionCreateEvent.GuildButtonInteractionCreateEvent"]},{"name":"fun GuildChannelBehavior(guildId: Snowflake, id: Snowflake, kord: Kord, strategy: EntitySupplyStrategy<*> = kord.resources.defaultStrategy): GuildChannelBehavior","description":"dev.kord.core.behavior.channel.GuildChannelBehavior","location":"core/dev.kord.core.behavior.channel/-guild-channel-behavior.html","searchKeys":["GuildChannelBehavior","fun GuildChannelBehavior(guildId: Snowflake, id: Snowflake, kord: Kord, strategy: EntitySupplyStrategy<*> = kord.resources.defaultStrategy): GuildChannelBehavior","dev.kord.core.behavior.channel.GuildChannelBehavior"]},{"name":"fun GuildChatInputCommand(data: ApplicationCommandData, service: InteractionService)","description":"dev.kord.core.entity.application.GuildChatInputCommand.GuildChatInputCommand","location":"core/dev.kord.core.entity.application/-guild-chat-input-command/-guild-chat-input-command.html","searchKeys":["GuildChatInputCommand","fun GuildChatInputCommand(data: ApplicationCommandData, service: InteractionService)","dev.kord.core.entity.application.GuildChatInputCommand.GuildChatInputCommand"]},{"name":"fun GuildChatInputCommandInteraction(data: InteractionData, kord: Kord, supplier: EntitySupplier)","description":"dev.kord.core.entity.interaction.GuildChatInputCommandInteraction.GuildChatInputCommandInteraction","location":"core/dev.kord.core.entity.interaction/-guild-chat-input-command-interaction/-guild-chat-input-command-interaction.html","searchKeys":["GuildChatInputCommandInteraction","fun GuildChatInputCommandInteraction(data: InteractionData, kord: Kord, supplier: EntitySupplier)","dev.kord.core.entity.interaction.GuildChatInputCommandInteraction.GuildChatInputCommandInteraction"]},{"name":"fun GuildChatInputCommandInteractionCreateEvent(interaction: GuildChatInputCommandInteraction, kord: Kord, shard: Int, customContext: Any?)","description":"dev.kord.core.event.interaction.GuildChatInputCommandInteractionCreateEvent.GuildChatInputCommandInteractionCreateEvent","location":"core/dev.kord.core.event.interaction/-guild-chat-input-command-interaction-create-event/-guild-chat-input-command-interaction-create-event.html","searchKeys":["GuildChatInputCommandInteractionCreateEvent","fun GuildChatInputCommandInteractionCreateEvent(interaction: GuildChatInputCommandInteraction, kord: Kord, shard: Int, customContext: Any?)","dev.kord.core.event.interaction.GuildChatInputCommandInteractionCreateEvent.GuildChatInputCommandInteractionCreateEvent"]},{"name":"fun GuildCreateEvent(guild: Guild, shard: Int, customContext: Any?)","description":"dev.kord.core.event.guild.GuildCreateEvent.GuildCreateEvent","location":"core/dev.kord.core.event.guild/-guild-create-event/-guild-create-event.html","searchKeys":["GuildCreateEvent","fun GuildCreateEvent(guild: Guild, shard: Int, customContext: Any?)","dev.kord.core.event.guild.GuildCreateEvent.GuildCreateEvent"]},{"name":"fun GuildData(id: Snowflake, name: String, icon: String? = null, iconHash: Optional<String?> = Optional.Missing(), splash: Optional<String?> = Optional.Missing(), discoverySplash: Optional<String?> = Optional.Missing(), ownerId: Snowflake, permissions: Optional<Permissions> = Optional.Missing(), region: String, afkChannelId: Snowflake? = null, afkTimeout: DurationInSeconds, widgetEnabled: OptionalBoolean = OptionalBoolean.Missing, widgetChannelId: OptionalSnowflake? = OptionalSnowflake.Missing, verificationLevel: VerificationLevel, defaultMessageNotifications: DefaultMessageNotificationLevel, explicitContentFilter: ExplicitContentFilter, roles: List<Snowflake>, emojis: List<Snowflake>, features: List<GuildFeature>, mfaLevel: MFALevel, applicationId: Snowflake? = null, systemChannelId: Snowflake? = null, systemChannelFlags: SystemChannelFlags, rulesChannelId: Snowflake? = null, joinedAt: Optional<Instant> = Optional.Missing(), large: OptionalBoolean = OptionalBoolean.Missing, memberCount: OptionalInt = OptionalInt.Missing, channels: Optional<List<Snowflake>> = Optional.Missing(), maxPresences: OptionalInt? = OptionalInt.Missing, maxMembers: OptionalInt = OptionalInt.Missing, vanityUrlCode: String? = null, description: String? = null, banner: String? = null, premiumTier: PremiumTier, premiumSubscriptionCount: OptionalInt = OptionalInt.Missing, preferredLocale: String, publicUpdatesChannelId: Snowflake? = null, maxVideoChannelUsers: OptionalInt = OptionalInt.Missing, approximateMemberCount: OptionalInt = OptionalInt.Missing, approximatePresenceCount: OptionalInt = OptionalInt.Missing, welcomeScreen: Optional<WelcomeScreenData> = Optional.Missing(), nsfwLevel: NsfwLevel, threads: Optional<List<ChannelData>> = Optional.Missing(), stageInstances: Optional<List<StageInstanceData>> = Optional.Missing(), stickers: Optional<List<StickerData>> = Optional.Missing(), guildScheduledEvents: Optional<List<GuildScheduledEventData>> = Optional.Missing(), premiumProgressBarEnabled: Boolean)","description":"dev.kord.core.cache.data.GuildData.GuildData","location":"core/dev.kord.core.cache.data/-guild-data/-guild-data.html","searchKeys":["GuildData","fun GuildData(id: Snowflake, name: String, icon: String? = null, iconHash: Optional<String?> = Optional.Missing(), splash: Optional<String?> = Optional.Missing(), discoverySplash: Optional<String?> = Optional.Missing(), ownerId: Snowflake, permissions: Optional<Permissions> = Optional.Missing(), region: String, afkChannelId: Snowflake? = null, afkTimeout: DurationInSeconds, widgetEnabled: OptionalBoolean = OptionalBoolean.Missing, widgetChannelId: OptionalSnowflake? = OptionalSnowflake.Missing, verificationLevel: VerificationLevel, defaultMessageNotifications: DefaultMessageNotificationLevel, explicitContentFilter: ExplicitContentFilter, roles: List<Snowflake>, emojis: List<Snowflake>, features: List<GuildFeature>, mfaLevel: MFALevel, applicationId: Snowflake? = null, systemChannelId: Snowflake? = null, systemChannelFlags: SystemChannelFlags, rulesChannelId: Snowflake? = null, joinedAt: Optional<Instant> = Optional.Missing(), large: OptionalBoolean = OptionalBoolean.Missing, memberCount: OptionalInt = OptionalInt.Missing, channels: Optional<List<Snowflake>> = Optional.Missing(), maxPresences: OptionalInt? = OptionalInt.Missing, maxMembers: OptionalInt = OptionalInt.Missing, vanityUrlCode: String? = null, description: String? = null, banner: String? = null, premiumTier: PremiumTier, premiumSubscriptionCount: OptionalInt = OptionalInt.Missing, preferredLocale: String, publicUpdatesChannelId: Snowflake? = null, maxVideoChannelUsers: OptionalInt = OptionalInt.Missing, approximateMemberCount: OptionalInt = OptionalInt.Missing, approximatePresenceCount: OptionalInt = OptionalInt.Missing, welcomeScreen: Optional<WelcomeScreenData> = Optional.Missing(), nsfwLevel: NsfwLevel, threads: Optional<List<ChannelData>> = Optional.Missing(), stageInstances: Optional<List<StageInstanceData>> = Optional.Missing(), stickers: Optional<List<StickerData>> = Optional.Missing(), guildScheduledEvents: Optional<List<GuildScheduledEventData>> = Optional.Missing(), premiumProgressBarEnabled: Boolean)","dev.kord.core.cache.data.GuildData.GuildData"]},{"name":"fun GuildDeleteEvent(guildId: Snowflake, unavailable: Boolean, guild: Guild?, kord: Kord, shard: Int, customContext: Any?)","description":"dev.kord.core.event.guild.GuildDeleteEvent.GuildDeleteEvent","location":"core/dev.kord.core.event.guild/-guild-delete-event/-guild-delete-event.html","searchKeys":["GuildDeleteEvent","fun GuildDeleteEvent(guildId: Snowflake, unavailable: Boolean, guild: Guild?, kord: Kord, shard: Int, customContext: Any?)","dev.kord.core.event.guild.GuildDeleteEvent.GuildDeleteEvent"]},{"name":"fun GuildEmoji(data: EmojiData, kord: Kord, supplier: EntitySupplier = kord.defaultSupplier)","description":"dev.kord.core.entity.GuildEmoji.GuildEmoji","location":"core/dev.kord.core.entity/-guild-emoji/-guild-emoji.html","searchKeys":["GuildEmoji","fun GuildEmoji(data: EmojiData, kord: Kord, supplier: EntitySupplier = kord.defaultSupplier)","dev.kord.core.entity.GuildEmoji.GuildEmoji"]},{"name":"fun GuildInteractionBehavior(guildId: Snowflake, id: Snowflake, channelId: Snowflake, applicationId: Snowflake, token: String, kord: Kord, supplier: EntitySupplier = kord.defaultSupplier): GuildInteractionBehavior","description":"dev.kord.core.behavior.interaction.GuildInteractionBehavior","location":"core/dev.kord.core.behavior.interaction/-guild-interaction-behavior.html","searchKeys":["GuildInteractionBehavior","fun GuildInteractionBehavior(guildId: Snowflake, id: Snowflake, channelId: Snowflake, applicationId: Snowflake, token: String, kord: Kord, supplier: EntitySupplier = kord.defaultSupplier): GuildInteractionBehavior","dev.kord.core.behavior.interaction.GuildInteractionBehavior"]},{"name":"fun GuildMessageCommand(data: ApplicationCommandData, service: InteractionService)","description":"dev.kord.core.entity.application.GuildMessageCommand.GuildMessageCommand","location":"core/dev.kord.core.entity.application/-guild-message-command/-guild-message-command.html","searchKeys":["GuildMessageCommand","fun GuildMessageCommand(data: ApplicationCommandData, service: InteractionService)","dev.kord.core.entity.application.GuildMessageCommand.GuildMessageCommand"]},{"name":"fun GuildMessageCommandInteraction(data: InteractionData, kord: Kord, supplier: EntitySupplier)","description":"dev.kord.core.entity.interaction.GuildMessageCommandInteraction.GuildMessageCommandInteraction","location":"core/dev.kord.core.entity.interaction/-guild-message-command-interaction/-guild-message-command-interaction.html","searchKeys":["GuildMessageCommandInteraction","fun GuildMessageCommandInteraction(data: InteractionData, kord: Kord, supplier: EntitySupplier)","dev.kord.core.entity.interaction.GuildMessageCommandInteraction.GuildMessageCommandInteraction"]},{"name":"fun GuildMessageCommandInteractionCreateEvent(interaction: GuildMessageCommandInteraction, kord: Kord, shard: Int, customContext: Any?)","description":"dev.kord.core.event.interaction.GuildMessageCommandInteractionCreateEvent.GuildMessageCommandInteractionCreateEvent","location":"core/dev.kord.core.event.interaction/-guild-message-command-interaction-create-event/-guild-message-command-interaction-create-event.html","searchKeys":["GuildMessageCommandInteractionCreateEvent","fun GuildMessageCommandInteractionCreateEvent(interaction: GuildMessageCommandInteraction, kord: Kord, shard: Int, customContext: Any?)","dev.kord.core.event.interaction.GuildMessageCommandInteractionCreateEvent.GuildMessageCommandInteractionCreateEvent"]},{"name":"fun GuildModalSubmitInteraction(data: InteractionData, kord: Kord, supplier: EntitySupplier = kord.defaultSupplier)","description":"dev.kord.core.entity.interaction.GuildModalSubmitInteraction.GuildModalSubmitInteraction","location":"core/dev.kord.core.entity.interaction/-guild-modal-submit-interaction/-guild-modal-submit-interaction.html","searchKeys":["GuildModalSubmitInteraction","fun GuildModalSubmitInteraction(data: InteractionData, kord: Kord, supplier: EntitySupplier = kord.defaultSupplier)","dev.kord.core.entity.interaction.GuildModalSubmitInteraction.GuildModalSubmitInteraction"]},{"name":"fun GuildModalSubmitInteractionCreateEvent(interaction: GuildModalSubmitInteraction, kord: Kord, shard: Int, customContext: Any?)","description":"dev.kord.core.event.interaction.GuildModalSubmitInteractionCreateEvent.GuildModalSubmitInteractionCreateEvent","location":"core/dev.kord.core.event.interaction/-guild-modal-submit-interaction-create-event/-guild-modal-submit-interaction-create-event.html","searchKeys":["GuildModalSubmitInteractionCreateEvent","fun GuildModalSubmitInteractionCreateEvent(interaction: GuildModalSubmitInteraction, kord: Kord, shard: Int, customContext: Any?)","dev.kord.core.event.interaction.GuildModalSubmitInteractionCreateEvent.GuildModalSubmitInteractionCreateEvent"]},{"name":"fun GuildPreview(data: GuildPreviewData, kord: Kord)","description":"dev.kord.core.entity.GuildPreview.GuildPreview","location":"core/dev.kord.core.entity/-guild-preview/-guild-preview.html","searchKeys":["GuildPreview","fun GuildPreview(data: GuildPreviewData, kord: Kord)","dev.kord.core.entity.GuildPreview.GuildPreview"]},{"name":"fun GuildPreviewData(id: Snowflake, name: String, icon: String? = null, splash: String? = null, discoverySplash: String? = null, emojis: List<EmojiData>, features: List<GuildFeature>, approximateMemberCount: Int, approximatePresenceCount: Int, description: String? = null, stickers: List<StickerData>)","description":"dev.kord.core.cache.data.GuildPreviewData.GuildPreviewData","location":"core/dev.kord.core.cache.data/-guild-preview-data/-guild-preview-data.html","searchKeys":["GuildPreviewData","fun GuildPreviewData(id: Snowflake, name: String, icon: String? = null, splash: String? = null, discoverySplash: String? = null, emojis: List<EmojiData>, features: List<GuildFeature>, approximateMemberCount: Int, approximatePresenceCount: Int, description: String? = null, stickers: List<StickerData>)","dev.kord.core.cache.data.GuildPreviewData.GuildPreviewData"]},{"name":"fun GuildScheduledEvent(data: GuildScheduledEventData, kord: Kord, supplier: EntitySupplier = kord.defaultSupplier)","description":"dev.kord.core.entity.GuildScheduledEvent.GuildScheduledEvent","location":"core/dev.kord.core.entity/-guild-scheduled-event/-guild-scheduled-event.html","searchKeys":["GuildScheduledEvent","fun GuildScheduledEvent(data: GuildScheduledEventData, kord: Kord, supplier: EntitySupplier = kord.defaultSupplier)","dev.kord.core.entity.GuildScheduledEvent.GuildScheduledEvent"]},{"name":"fun GuildScheduledEventCreateEvent(scheduledEvent: GuildScheduledEvent, kord: Kord, shard: Int, customContext: Any?, supplier: EntitySupplier = kord.defaultSupplier)","description":"dev.kord.core.event.guild.GuildScheduledEventCreateEvent.GuildScheduledEventCreateEvent","location":"core/dev.kord.core.event.guild/-guild-scheduled-event-create-event/-guild-scheduled-event-create-event.html","searchKeys":["GuildScheduledEventCreateEvent","fun GuildScheduledEventCreateEvent(scheduledEvent: GuildScheduledEvent, kord: Kord, shard: Int, customContext: Any?, supplier: EntitySupplier = kord.defaultSupplier)","dev.kord.core.event.guild.GuildScheduledEventCreateEvent.GuildScheduledEventCreateEvent"]},{"name":"fun GuildScheduledEventData(id: Snowflake, guildId: Snowflake, channelId: Snowflake?, creatorId: OptionalSnowflake? = OptionalSnowflake.Missing, name: String, description: Optional<String?> = Optional.Missing(), scheduledStartTime: Instant, scheduledEndTime: Instant?, privacyLevel: GuildScheduledEventPrivacyLevel, status: GuildScheduledEventStatus, entityId: Snowflake?, entityType: ScheduledEntityType, entityMetadata: GuildScheduledEventEntityMetadata?, creator: Optional<UserData> = Optional.Missing(), userCount: OptionalInt = OptionalInt.Missing, image: Optional<String?> = Optional.Missing())","description":"dev.kord.core.cache.data.GuildScheduledEventData.GuildScheduledEventData","location":"core/dev.kord.core.cache.data/-guild-scheduled-event-data/-guild-scheduled-event-data.html","searchKeys":["GuildScheduledEventData","fun GuildScheduledEventData(id: Snowflake, guildId: Snowflake, channelId: Snowflake?, creatorId: OptionalSnowflake? = OptionalSnowflake.Missing, name: String, description: Optional<String?> = Optional.Missing(), scheduledStartTime: Instant, scheduledEndTime: Instant?, privacyLevel: GuildScheduledEventPrivacyLevel, status: GuildScheduledEventStatus, entityId: Snowflake?, entityType: ScheduledEntityType, entityMetadata: GuildScheduledEventEntityMetadata?, creator: Optional<UserData> = Optional.Missing(), userCount: OptionalInt = OptionalInt.Missing, image: Optional<String?> = Optional.Missing())","dev.kord.core.cache.data.GuildScheduledEventData.GuildScheduledEventData"]},{"name":"fun GuildScheduledEventDeleteEvent(scheduledEvent: GuildScheduledEvent, kord: Kord, shard: Int, customContext: Any?, supplier: EntitySupplier = kord.defaultSupplier)","description":"dev.kord.core.event.guild.GuildScheduledEventDeleteEvent.GuildScheduledEventDeleteEvent","location":"core/dev.kord.core.event.guild/-guild-scheduled-event-delete-event/-guild-scheduled-event-delete-event.html","searchKeys":["GuildScheduledEventDeleteEvent","fun GuildScheduledEventDeleteEvent(scheduledEvent: GuildScheduledEvent, kord: Kord, shard: Int, customContext: Any?, supplier: EntitySupplier = kord.defaultSupplier)","dev.kord.core.event.guild.GuildScheduledEventDeleteEvent.GuildScheduledEventDeleteEvent"]},{"name":"fun GuildScheduledEventUpdateEvent(scheduledEvent: GuildScheduledEvent, oldEvent: GuildScheduledEvent?, kord: Kord, shard: Int, customContext: Any?, supplier: EntitySupplier = kord.defaultSupplier)","description":"dev.kord.core.event.guild.GuildScheduledEventUpdateEvent.GuildScheduledEventUpdateEvent","location":"core/dev.kord.core.event.guild/-guild-scheduled-event-update-event/-guild-scheduled-event-update-event.html","searchKeys":["GuildScheduledEventUpdateEvent","fun GuildScheduledEventUpdateEvent(scheduledEvent: GuildScheduledEvent, oldEvent: GuildScheduledEvent?, kord: Kord, shard: Int, customContext: Any?, supplier: EntitySupplier = kord.defaultSupplier)","dev.kord.core.event.guild.GuildScheduledEventUpdateEvent.GuildScheduledEventUpdateEvent"]},{"name":"fun GuildScheduledEventUserAddEvent(scheduledEventId: Snowflake, userId: Snowflake, guildId: Snowflake, kord: Kord, shard: Int, customContext: Any?, supplier: EntitySupplier = kord.defaultSupplier)","description":"dev.kord.core.event.guild.GuildScheduledEventUserAddEvent.GuildScheduledEventUserAddEvent","location":"core/dev.kord.core.event.guild/-guild-scheduled-event-user-add-event/-guild-scheduled-event-user-add-event.html","searchKeys":["GuildScheduledEventUserAddEvent","fun GuildScheduledEventUserAddEvent(scheduledEventId: Snowflake, userId: Snowflake, guildId: Snowflake, kord: Kord, shard: Int, customContext: Any?, supplier: EntitySupplier = kord.defaultSupplier)","dev.kord.core.event.guild.GuildScheduledEventUserAddEvent.GuildScheduledEventUserAddEvent"]},{"name":"fun GuildScheduledEventUserRemoveEvent(scheduledEventId: Snowflake, userId: Snowflake, guildId: Snowflake, kord: Kord, shard: Int, customContext: Any?, supplier: EntitySupplier = kord.defaultSupplier)","description":"dev.kord.core.event.guild.GuildScheduledEventUserRemoveEvent.GuildScheduledEventUserRemoveEvent","location":"core/dev.kord.core.event.guild/-guild-scheduled-event-user-remove-event/-guild-scheduled-event-user-remove-event.html","searchKeys":["GuildScheduledEventUserRemoveEvent","fun GuildScheduledEventUserRemoveEvent(scheduledEventId: Snowflake, userId: Snowflake, guildId: Snowflake, kord: Kord, shard: Int, customContext: Any?, supplier: EntitySupplier = kord.defaultSupplier)","dev.kord.core.event.guild.GuildScheduledEventUserRemoveEvent.GuildScheduledEventUserRemoveEvent"]},{"name":"fun GuildSelectMenuInteraction(data: InteractionData, kord: Kord, supplier: EntitySupplier)","description":"dev.kord.core.entity.interaction.GuildSelectMenuInteraction.GuildSelectMenuInteraction","location":"core/dev.kord.core.entity.interaction/-guild-select-menu-interaction/-guild-select-menu-interaction.html","searchKeys":["GuildSelectMenuInteraction","fun GuildSelectMenuInteraction(data: InteractionData, kord: Kord, supplier: EntitySupplier)","dev.kord.core.entity.interaction.GuildSelectMenuInteraction.GuildSelectMenuInteraction"]},{"name":"fun GuildSelectMenuInteractionCreateEvent(interaction: GuildSelectMenuInteraction, kord: Kord, shard: Int, customContext: Any?)","description":"dev.kord.core.event.interaction.GuildSelectMenuInteractionCreateEvent.GuildSelectMenuInteractionCreateEvent","location":"core/dev.kord.core.event.interaction/-guild-select-menu-interaction-create-event/-guild-select-menu-interaction-create-event.html","searchKeys":["GuildSelectMenuInteractionCreateEvent","fun GuildSelectMenuInteractionCreateEvent(interaction: GuildSelectMenuInteraction, kord: Kord, shard: Int, customContext: Any?)","dev.kord.core.event.interaction.GuildSelectMenuInteractionCreateEvent.GuildSelectMenuInteractionCreateEvent"]},{"name":"fun GuildSticker(data: StickerData, kord: Kord, supplier: EntitySupplier = kord.defaultSupplier)","description":"dev.kord.core.entity.GuildSticker.GuildSticker","location":"core/dev.kord.core.entity/-guild-sticker/-guild-sticker.html","searchKeys":["GuildSticker","fun GuildSticker(data: StickerData, kord: Kord, supplier: EntitySupplier = kord.defaultSupplier)","dev.kord.core.entity.GuildSticker.GuildSticker"]},{"name":"fun GuildUpdateEvent(guild: Guild, old: Guild?, shard: Int, customContext: Any?)","description":"dev.kord.core.event.guild.GuildUpdateEvent.GuildUpdateEvent","location":"core/dev.kord.core.event.guild/-guild-update-event/-guild-update-event.html","searchKeys":["GuildUpdateEvent","fun GuildUpdateEvent(guild: Guild, old: Guild?, shard: Int, customContext: Any?)","dev.kord.core.event.guild.GuildUpdateEvent.GuildUpdateEvent"]},{"name":"fun GuildUserCommand(data: ApplicationCommandData, service: InteractionService)","description":"dev.kord.core.entity.application.GuildUserCommand.GuildUserCommand","location":"core/dev.kord.core.entity.application/-guild-user-command/-guild-user-command.html","searchKeys":["GuildUserCommand","fun GuildUserCommand(data: ApplicationCommandData, service: InteractionService)","dev.kord.core.entity.application.GuildUserCommand.GuildUserCommand"]},{"name":"fun GuildUserCommandInteraction(data: InteractionData, kord: Kord, supplier: EntitySupplier)","description":"dev.kord.core.entity.interaction.GuildUserCommandInteraction.GuildUserCommandInteraction","location":"core/dev.kord.core.entity.interaction/-guild-user-command-interaction/-guild-user-command-interaction.html","searchKeys":["GuildUserCommandInteraction","fun GuildUserCommandInteraction(data: InteractionData, kord: Kord, supplier: EntitySupplier)","dev.kord.core.entity.interaction.GuildUserCommandInteraction.GuildUserCommandInteraction"]},{"name":"fun GuildUserCommandInteractionCreateEvent(interaction: GuildUserCommandInteraction, kord: Kord, shard: Int, customContext: Any?)","description":"dev.kord.core.event.interaction.GuildUserCommandInteractionCreateEvent.GuildUserCommandInteractionCreateEvent","location":"core/dev.kord.core.event.interaction/-guild-user-command-interaction-create-event/-guild-user-command-interaction-create-event.html","searchKeys":["GuildUserCommandInteractionCreateEvent","fun GuildUserCommandInteractionCreateEvent(interaction: GuildUserCommandInteraction, kord: Kord, shard: Int, customContext: Any?)","dev.kord.core.event.interaction.GuildUserCommandInteractionCreateEvent.GuildUserCommandInteractionCreateEvent"]},{"name":"fun GuildWidget(data: GuildWidgetData, guildId: Snowflake, kord: Kord, supplier: EntitySupplier = kord.defaultSupplier)","description":"dev.kord.core.entity.GuildWidget.GuildWidget","location":"core/dev.kord.core.entity/-guild-widget/-guild-widget.html","searchKeys":["GuildWidget","fun GuildWidget(data: GuildWidgetData, guildId: Snowflake, kord: Kord, supplier: EntitySupplier = kord.defaultSupplier)","dev.kord.core.entity.GuildWidget.GuildWidget"]},{"name":"fun GuildWidgetData(enabled: Boolean, channelId: Snowflake?)","description":"dev.kord.core.cache.data.GuildWidgetData.GuildWidgetData","location":"core/dev.kord.core.cache.data/-guild-widget-data/-guild-widget-data.html","searchKeys":["GuildWidgetData","fun GuildWidgetData(enabled: Boolean, channelId: Snowflake?)","dev.kord.core.cache.data.GuildWidgetData.GuildWidgetData"]},{"name":"fun Image(data: EmbedImageData, kord: Kord)","description":"dev.kord.core.entity.Embed.Image.Image","location":"core/dev.kord.core.entity/-embed/-image/-image.html","searchKeys":["Image","fun Image(data: EmbedImageData, kord: Kord)","dev.kord.core.entity.Embed.Image.Image"]},{"name":"fun IntegerOptionValue(value: Long, focused: Boolean)","description":"dev.kord.core.entity.interaction.IntegerOptionValue.IntegerOptionValue","location":"core/dev.kord.core.entity.interaction/-integer-option-value/-integer-option-value.html","searchKeys":["IntegerOptionValue","fun IntegerOptionValue(value: Long, focused: Boolean)","dev.kord.core.entity.interaction.IntegerOptionValue.IntegerOptionValue"]},{"name":"fun Integration(data: IntegrationData, kord: Kord, supplier: EntitySupplier = kord.defaultSupplier)","description":"dev.kord.core.entity.Integration.Integration","location":"core/dev.kord.core.entity/-integration/-integration.html","searchKeys":["Integration","fun Integration(data: IntegrationData, kord: Kord, supplier: EntitySupplier = kord.defaultSupplier)","dev.kord.core.entity.Integration.Integration"]},{"name":"fun IntegrationData(id: Snowflake, guildId: Snowflake, name: String, type: String, enabled: Boolean, syncing: Boolean, roleId: Snowflake, enableEmoticons: OptionalBoolean = OptionalBoolean.Missing, expireBehavior: IntegrationExpireBehavior, expireGracePeriod: DurationInDays, user: DiscordUser, account: IntegrationsAccountData, syncedAt: Instant, subscriberCount: Int, revoked: Boolean, application: IntegrationApplication)","description":"dev.kord.core.cache.data.IntegrationData.IntegrationData","location":"core/dev.kord.core.cache.data/-integration-data/-integration-data.html","searchKeys":["IntegrationData","fun IntegrationData(id: Snowflake, guildId: Snowflake, name: String, type: String, enabled: Boolean, syncing: Boolean, roleId: Snowflake, enableEmoticons: OptionalBoolean = OptionalBoolean.Missing, expireBehavior: IntegrationExpireBehavior, expireGracePeriod: DurationInDays, user: DiscordUser, account: IntegrationsAccountData, syncedAt: Instant, subscriberCount: Int, revoked: Boolean, application: IntegrationApplication)","dev.kord.core.cache.data.IntegrationData.IntegrationData"]},{"name":"fun IntegrationsAccountData(id: String, name: String)","description":"dev.kord.core.cache.data.IntegrationsAccountData.IntegrationsAccountData","location":"core/dev.kord.core.cache.data/-integrations-account-data/-integrations-account-data.html","searchKeys":["IntegrationsAccountData","fun IntegrationsAccountData(id: String, name: String)","dev.kord.core.cache.data.IntegrationsAccountData.IntegrationsAccountData"]},{"name":"fun IntegrationsUpdateEvent(guildId: Snowflake, kord: Kord, shard: Int, customContext: Any?, supplier: EntitySupplier = kord.defaultSupplier)","description":"dev.kord.core.event.guild.IntegrationsUpdateEvent.IntegrationsUpdateEvent","location":"core/dev.kord.core.event.guild/-integrations-update-event/-integrations-update-event.html","searchKeys":["IntegrationsUpdateEvent","fun IntegrationsUpdateEvent(guildId: Snowflake, kord: Kord, shard: Int, customContext: Any?, supplier: EntitySupplier = kord.defaultSupplier)","dev.kord.core.event.guild.IntegrationsUpdateEvent.IntegrationsUpdateEvent"]},{"name":"fun Intents.IntentsBuilder.enableEvent(event: KClass<out Event>)","description":"dev.kord.core.enableEvent","location":"core/dev.kord.core/enable-event.html","searchKeys":["enableEvent","fun Intents.IntentsBuilder.enableEvent(event: KClass<out Event>)","dev.kord.core.enableEvent"]},{"name":"fun Intents.IntentsBuilder.enableEvents(events: Iterable<KClass<out Event>>)","description":"dev.kord.core.enableEvents","location":"core/dev.kord.core/enable-events.html","searchKeys":["enableEvents","fun Intents.IntentsBuilder.enableEvents(events: Iterable<KClass<out Event>>)","dev.kord.core.enableEvents"]},{"name":"fun Intents.IntentsBuilder.enableEvents(vararg events: KClass<out Event>)","description":"dev.kord.core.enableEvents","location":"core/dev.kord.core/enable-events.html","searchKeys":["enableEvents","fun Intents.IntentsBuilder.enableEvents(vararg events: KClass<out Event>)","dev.kord.core.enableEvents"]},{"name":"fun Interaction(data: MessageInteractionData, kord: Kord, supplier: EntitySupplier = kord.defaultSupplier)","description":"dev.kord.core.entity.Message.Interaction.Interaction","location":"core/dev.kord.core.entity/-message/-interaction/-interaction.html","searchKeys":["Interaction","fun Interaction(data: MessageInteractionData, kord: Kord, supplier: EntitySupplier = kord.defaultSupplier)","dev.kord.core.entity.Message.Interaction.Interaction"]},{"name":"fun InteractionCommand(data: ApplicationInteractionData, kord: Kord): InteractionCommand","description":"dev.kord.core.entity.interaction.InteractionCommand","location":"core/dev.kord.core.entity.interaction/-interaction-command.html","searchKeys":["InteractionCommand","fun InteractionCommand(data: ApplicationInteractionData, kord: Kord): InteractionCommand","dev.kord.core.entity.interaction.InteractionCommand"]},{"name":"fun InteractionData(id: Snowflake, applicationId: Snowflake, type: InteractionType, data: ApplicationInteractionData, guildId: OptionalSnowflake = OptionalSnowflake.Missing, channelId: Snowflake, member: Optional<MemberData> = Optional.Missing(), user: Optional<UserData> = Optional.Missing(), token: String, permissions: Optional<Permissions> = Optional.Missing(), version: Int, message: Optional<MessageData> = Optional.Missing(), appPermissions: Optional<Permissions> = Optional.Missing(), locale: Optional<Locale> = Optional.Missing(), guildLocale: Optional<Locale> = Optional.Missing())","description":"dev.kord.core.cache.data.InteractionData.InteractionData","location":"core/dev.kord.core.cache.data/-interaction-data/-interaction-data.html","searchKeys":["InteractionData","fun InteractionData(id: Snowflake, applicationId: Snowflake, type: InteractionType, data: ApplicationInteractionData, guildId: OptionalSnowflake = OptionalSnowflake.Missing, channelId: Snowflake, member: Optional<MemberData> = Optional.Missing(), user: Optional<UserData> = Optional.Missing(), token: String, permissions: Optional<Permissions> = Optional.Missing(), version: Int, message: Optional<MessageData> = Optional.Missing(), appPermissions: Optional<Permissions> = Optional.Missing(), locale: Optional<Locale> = Optional.Missing(), guildLocale: Optional<Locale> = Optional.Missing())","dev.kord.core.cache.data.InteractionData.InteractionData"]},{"name":"fun Invite(data: BaseInviteData, kord: Kord, supplier: EntitySupplier = kord.defaultSupplier)","description":"dev.kord.core.entity.Invite.Invite","location":"core/dev.kord.core.entity/-invite/-invite.html","searchKeys":["Invite","fun Invite(data: BaseInviteData, kord: Kord, supplier: EntitySupplier = kord.defaultSupplier)","dev.kord.core.entity.Invite.Invite"]},{"name":"fun InviteCreateData(channelId: Snowflake, code: String, createdAt: Instant, guildId: OptionalSnowflake = OptionalSnowflake.Missing, inviterId: OptionalSnowflake = OptionalSnowflake.Missing, maxAge: DurationInSeconds, maxUses: Int, targetType: Optional<InviteTargetType> = Optional.Missing(), targetUserId: OptionalSnowflake = OptionalSnowflake.Missing, targetApplication: Optional<PartialApplicationData> = Optional.Missing(), targetUserType: Optional<TargetUserType> = Optional.Missing(), temporary: Boolean, uses: Int)","description":"dev.kord.core.cache.data.InviteCreateData.InviteCreateData","location":"core/dev.kord.core.cache.data/-invite-create-data/-invite-create-data.html","searchKeys":["InviteCreateData","fun InviteCreateData(channelId: Snowflake, code: String, createdAt: Instant, guildId: OptionalSnowflake = OptionalSnowflake.Missing, inviterId: OptionalSnowflake = OptionalSnowflake.Missing, maxAge: DurationInSeconds, maxUses: Int, targetType: Optional<InviteTargetType> = Optional.Missing(), targetUserId: OptionalSnowflake = OptionalSnowflake.Missing, targetApplication: Optional<PartialApplicationData> = Optional.Missing(), targetUserType: Optional<TargetUserType> = Optional.Missing(), temporary: Boolean, uses: Int)","dev.kord.core.cache.data.InviteCreateData.InviteCreateData"]},{"name":"fun InviteCreateEvent(data: InviteCreateData, kord: Kord, shard: Int, customContext: Any?, supplier: EntitySupplier = kord.defaultSupplier)","description":"dev.kord.core.event.guild.InviteCreateEvent.InviteCreateEvent","location":"core/dev.kord.core.event.guild/-invite-create-event/-invite-create-event.html","searchKeys":["InviteCreateEvent","fun InviteCreateEvent(data: InviteCreateData, kord: Kord, shard: Int, customContext: Any?, supplier: EntitySupplier = kord.defaultSupplier)","dev.kord.core.event.guild.InviteCreateEvent.InviteCreateEvent"]},{"name":"fun InviteData(code: String, guild: Optional<PartialGuildData> = Optional.Missing(), channelId: Snowflake?, inviterId: OptionalSnowflake = OptionalSnowflake.Missing, targetType: Optional<InviteTargetType> = Optional.Missing(), targetUserId: OptionalSnowflake = OptionalSnowflake.Missing, targetApplication: Optional<PartialApplicationData> = Optional.Missing(), targetUserType: Optional<TargetUserType> = Optional.Missing(), approximatePresenceCount: OptionalInt = OptionalInt.Missing, approximateMemberCount: OptionalInt = OptionalInt.Missing, expiresAt: Optional<Instant?> = Optional.Missing(), guildScheduledEvent: Optional<GuildScheduledEventData> = Optional.Missing())","description":"dev.kord.core.cache.data.InviteData.InviteData","location":"core/dev.kord.core.cache.data/-invite-data/-invite-data.html","searchKeys":["InviteData","fun InviteData(code: String, guild: Optional<PartialGuildData> = Optional.Missing(), channelId: Snowflake?, inviterId: OptionalSnowflake = OptionalSnowflake.Missing, targetType: Optional<InviteTargetType> = Optional.Missing(), targetUserId: OptionalSnowflake = OptionalSnowflake.Missing, targetApplication: Optional<PartialApplicationData> = Optional.Missing(), targetUserType: Optional<TargetUserType> = Optional.Missing(), approximatePresenceCount: OptionalInt = OptionalInt.Missing, approximateMemberCount: OptionalInt = OptionalInt.Missing, expiresAt: Optional<Instant?> = Optional.Missing(), guildScheduledEvent: Optional<GuildScheduledEventData> = Optional.Missing())","dev.kord.core.cache.data.InviteData.InviteData"]},{"name":"fun InviteDeleteData(channelId: Snowflake, guildId: OptionalSnowflake = OptionalSnowflake.Missing, code: String)","description":"dev.kord.core.cache.data.InviteDeleteData.InviteDeleteData","location":"core/dev.kord.core.cache.data/-invite-delete-data/-invite-delete-data.html","searchKeys":["InviteDeleteData","fun InviteDeleteData(channelId: Snowflake, guildId: OptionalSnowflake = OptionalSnowflake.Missing, code: String)","dev.kord.core.cache.data.InviteDeleteData.InviteDeleteData"]},{"name":"fun InviteDeleteEvent(data: InviteDeleteData, kord: Kord, shard: Int, customContext: Any?, supplier: EntitySupplier = kord.defaultSupplier)","description":"dev.kord.core.event.guild.InviteDeleteEvent.InviteDeleteEvent","location":"core/dev.kord.core.event.guild/-invite-delete-event/-invite-delete-event.html","searchKeys":["InviteDeleteEvent","fun InviteDeleteEvent(data: InviteDeleteData, kord: Kord, shard: Int, customContext: Any?, supplier: EntitySupplier = kord.defaultSupplier)","dev.kord.core.event.guild.InviteDeleteEvent.InviteDeleteEvent"]},{"name":"fun InviteWithMetadata(data: InviteWithMetadataData, kord: Kord, supplier: EntitySupplier = kord.defaultSupplier)","description":"dev.kord.core.entity.InviteWithMetadata.InviteWithMetadata","location":"core/dev.kord.core.entity/-invite-with-metadata/-invite-with-metadata.html","searchKeys":["InviteWithMetadata","fun InviteWithMetadata(data: InviteWithMetadataData, kord: Kord, supplier: EntitySupplier = kord.defaultSupplier)","dev.kord.core.entity.InviteWithMetadata.InviteWithMetadata"]},{"name":"fun InviteWithMetadataData(code: String, guild: Optional<PartialGuildData> = Optional.Missing(), channelId: Snowflake?, inviterId: OptionalSnowflake = OptionalSnowflake.Missing, targetType: Optional<InviteTargetType> = Optional.Missing(), targetUserId: OptionalSnowflake = OptionalSnowflake.Missing, targetApplication: Optional<PartialApplicationData> = Optional.Missing(), approximatePresenceCount: OptionalInt = OptionalInt.Missing, approximateMemberCount: OptionalInt = OptionalInt.Missing, expiresAt: Optional<Instant?> = Optional.Missing(), guildScheduledEvent: Optional<GuildScheduledEventData> = Optional.Missing(), uses: Int, maxUses: Int, maxAge: DurationInSeconds, temporary: Boolean, createdAt: Instant)","description":"dev.kord.core.cache.data.InviteWithMetadataData.InviteWithMetadataData","location":"core/dev.kord.core.cache.data/-invite-with-metadata-data/-invite-with-metadata-data.html","searchKeys":["InviteWithMetadataData","fun InviteWithMetadataData(code: String, guild: Optional<PartialGuildData> = Optional.Missing(), channelId: Snowflake?, inviterId: OptionalSnowflake = OptionalSnowflake.Missing, targetType: Optional<InviteTargetType> = Optional.Missing(), targetUserId: OptionalSnowflake = OptionalSnowflake.Missing, targetApplication: Optional<PartialApplicationData> = Optional.Missing(), approximatePresenceCount: OptionalInt = OptionalInt.Missing, approximateMemberCount: OptionalInt = OptionalInt.Missing, expiresAt: Optional<Instant?> = Optional.Missing(), guildScheduledEvent: Optional<GuildScheduledEventData> = Optional.Missing(), uses: Int, maxUses: Int, maxAge: DurationInSeconds, temporary: Boolean, createdAt: Instant)","dev.kord.core.cache.data.InviteWithMetadataData.InviteWithMetadataData"]},{"name":"fun KeywordAutoModerationRule(data: AutoModerationRuleData, kord: Kord, supplier: EntitySupplier)","description":"dev.kord.core.entity.automoderation.KeywordAutoModerationRule.KeywordAutoModerationRule","location":"core/dev.kord.core.entity.automoderation/-keyword-auto-moderation-rule/-keyword-auto-moderation-rule.html","searchKeys":["KeywordAutoModerationRule","fun KeywordAutoModerationRule(data: AutoModerationRuleData, kord: Kord, supplier: EntitySupplier)","dev.kord.core.entity.automoderation.KeywordAutoModerationRule.KeywordAutoModerationRule"]},{"name":"fun KeywordPresetAutoModerationRule(data: AutoModerationRuleData, kord: Kord, supplier: EntitySupplier)","description":"dev.kord.core.entity.automoderation.KeywordPresetAutoModerationRule.KeywordPresetAutoModerationRule","location":"core/dev.kord.core.entity.automoderation/-keyword-preset-auto-moderation-rule/-keyword-preset-auto-moderation-rule.html","searchKeys":["KeywordPresetAutoModerationRule","fun KeywordPresetAutoModerationRule(data: AutoModerationRuleData, kord: Kord, supplier: EntitySupplier)","dev.kord.core.entity.automoderation.KeywordPresetAutoModerationRule.KeywordPresetAutoModerationRule"]},{"name":"fun Kord(resources: ClientResources, cache: DataCache, gateway: MasterGateway, rest: RestClient, selfId: Snowflake, eventFlow: MutableSharedFlow<Event>, dispatcher: CoroutineDispatcher, interceptor: GatewayEventInterceptor)","description":"dev.kord.core.Kord.Kord","location":"core/dev.kord.core/-kord/-kord.html","searchKeys":["Kord","fun Kord(resources: ClientResources, cache: DataCache, gateway: MasterGateway, rest: RestClient, selfId: Snowflake, eventFlow: MutableSharedFlow<Event>, dispatcher: CoroutineDispatcher, interceptor: GatewayEventInterceptor)","dev.kord.core.Kord.Kord"]},{"name":"fun KordBuilder(token: String)","description":"dev.kord.core.builder.kord.KordBuilder.KordBuilder","location":"core/dev.kord.core.builder.kord/-kord-builder/-kord-builder.html","searchKeys":["KordBuilder","fun KordBuilder(token: String)","dev.kord.core.builder.kord.KordBuilder.KordBuilder"]},{"name":"fun KordCacheBuilder()","description":"dev.kord.core.cache.KordCacheBuilder.KordCacheBuilder","location":"core/dev.kord.core.cache/-kord-cache-builder/-kord-cache-builder.html","searchKeys":["KordCacheBuilder","fun KordCacheBuilder()","dev.kord.core.cache.KordCacheBuilder.KordCacheBuilder"]},{"name":"fun KordInitializationException(cause: Throwable)","description":"dev.kord.core.exception.KordInitializationException.KordInitializationException","location":"core/dev.kord.core.exception/-kord-initialization-exception/-kord-initialization-exception.html","searchKeys":["KordInitializationException","fun KordInitializationException(cause: Throwable)","dev.kord.core.exception.KordInitializationException.KordInitializationException"]},{"name":"fun KordInitializationException(message: String)","description":"dev.kord.core.exception.KordInitializationException.KordInitializationException","location":"core/dev.kord.core.exception/-kord-initialization-exception/-kord-initialization-exception.html","searchKeys":["KordInitializationException","fun KordInitializationException(message: String)","dev.kord.core.exception.KordInitializationException.KordInitializationException"]},{"name":"fun KordInitializationException(message: String, cause: Throwable)","description":"dev.kord.core.exception.KordInitializationException.KordInitializationException","location":"core/dev.kord.core.exception/-kord-initialization-exception/-kord-initialization-exception.html","searchKeys":["KordInitializationException","fun KordInitializationException(message: String, cause: Throwable)","dev.kord.core.exception.KordInitializationException.KordInitializationException"]},{"name":"fun KordProxyBuilder(applicationId: Snowflake)","description":"dev.kord.core.builder.kord.KordProxyBuilder.KordProxyBuilder","location":"core/dev.kord.core.builder.kord/-kord-proxy-builder/-kord-proxy-builder.html","searchKeys":["KordProxyBuilder","fun KordProxyBuilder(applicationId: Snowflake)","dev.kord.core.builder.kord.KordProxyBuilder.KordProxyBuilder"]},{"name":"fun KordRestOnlyBuilder(token: String)","description":"dev.kord.core.builder.kord.KordRestOnlyBuilder.KordRestOnlyBuilder","location":"core/dev.kord.core.builder.kord/-kord-rest-only-builder/-kord-rest-only-builder.html","searchKeys":["KordRestOnlyBuilder","fun KordRestOnlyBuilder(token: String)","dev.kord.core.builder.kord.KordRestOnlyBuilder.KordRestOnlyBuilder"]},{"name":"fun LiveCancellationException(event: Event, message: String? = null)","description":"dev.kord.core.live.exception.LiveCancellationException.LiveCancellationException","location":"core/dev.kord.core.live.exception/-live-cancellation-exception/-live-cancellation-exception.html","searchKeys":["LiveCancellationException","fun LiveCancellationException(event: Event, message: String? = null)","dev.kord.core.live.exception.LiveCancellationException.LiveCancellationException"]},{"name":"fun LiveCategory(channel: Category, coroutineScope: CoroutineScope = channel.kord + SupervisorJob(channel.kord.coroutineContext.job))","description":"dev.kord.core.live.channel.LiveCategory.LiveCategory","location":"core/dev.kord.core.live.channel/-live-category/-live-category.html","searchKeys":["LiveCategory","fun LiveCategory(channel: Category, coroutineScope: CoroutineScope = channel.kord + SupervisorJob(channel.kord.coroutineContext.job))","dev.kord.core.live.channel.LiveCategory.LiveCategory"]},{"name":"fun LiveCategory.onUpdate(scope: CoroutineScope = this, block: suspend (CategoryUpdateEvent) -> Unit): Job","description":"dev.kord.core.live.channel.onUpdate","location":"core/dev.kord.core.live.channel/on-update.html","searchKeys":["onUpdate","fun LiveCategory.onUpdate(scope: CoroutineScope = this, block: suspend (CategoryUpdateEvent) -> Unit): Job","dev.kord.core.live.channel.onUpdate"]},{"name":"fun LiveChannel(kord: Kord, coroutineScope: CoroutineScope = kord + SupervisorJob(kord.coroutineContext.job))","description":"dev.kord.core.live.channel.LiveChannel.LiveChannel","location":"core/dev.kord.core.live.channel/-live-channel/-live-channel.html","searchKeys":["LiveChannel","fun LiveChannel(kord: Kord, coroutineScope: CoroutineScope = kord + SupervisorJob(kord.coroutineContext.job))","dev.kord.core.live.channel.LiveChannel.LiveChannel"]},{"name":"fun LiveChannel.onChannelUpdate(scope: CoroutineScope = this, block: suspend (ChannelUpdateEvent) -> Unit): Job","description":"dev.kord.core.live.channel.onChannelUpdate","location":"core/dev.kord.core.live.channel/on-channel-update.html","searchKeys":["onChannelUpdate","fun LiveChannel.onChannelUpdate(scope: CoroutineScope = this, block: suspend (ChannelUpdateEvent) -> Unit): Job","dev.kord.core.live.channel.onChannelUpdate"]},{"name":"fun LiveChannel.onGuildUpdate(scope: CoroutineScope = this, block: suspend (GuildUpdateEvent) -> Unit): Job","description":"dev.kord.core.live.channel.onGuildUpdate","location":"core/dev.kord.core.live.channel/on-guild-update.html","searchKeys":["onGuildUpdate","fun LiveChannel.onGuildUpdate(scope: CoroutineScope = this, block: suspend (GuildUpdateEvent) -> Unit): Job","dev.kord.core.live.channel.onGuildUpdate"]},{"name":"fun LiveChannel.onMessageCreate(scope: CoroutineScope = this, block: suspend (MessageCreateEvent) -> Unit): Job","description":"dev.kord.core.live.channel.onMessageCreate","location":"core/dev.kord.core.live.channel/on-message-create.html","searchKeys":["onMessageCreate","fun LiveChannel.onMessageCreate(scope: CoroutineScope = this, block: suspend (MessageCreateEvent) -> Unit): Job","dev.kord.core.live.channel.onMessageCreate"]},{"name":"fun LiveChannel.onMessageDelete(scope: CoroutineScope = this, block: suspend (MessageDeleteEvent) -> Unit): Job","description":"dev.kord.core.live.channel.onMessageDelete","location":"core/dev.kord.core.live.channel/on-message-delete.html","searchKeys":["onMessageDelete","fun LiveChannel.onMessageDelete(scope: CoroutineScope = this, block: suspend (MessageDeleteEvent) -> Unit): Job","dev.kord.core.live.channel.onMessageDelete"]},{"name":"fun LiveChannel.onMessageUpdate(scope: CoroutineScope = this, block: suspend (MessageUpdateEvent) -> Unit): Job","description":"dev.kord.core.live.channel.onMessageUpdate","location":"core/dev.kord.core.live.channel/on-message-update.html","searchKeys":["onMessageUpdate","fun LiveChannel.onMessageUpdate(scope: CoroutineScope = this, block: suspend (MessageUpdateEvent) -> Unit): Job","dev.kord.core.live.channel.onMessageUpdate"]},{"name":"fun LiveChannel.onReactionAdd(scope: CoroutineScope = this, block: suspend (ReactionAddEvent) -> Unit): Job","description":"dev.kord.core.live.channel.onReactionAdd","location":"core/dev.kord.core.live.channel/on-reaction-add.html","searchKeys":["onReactionAdd","fun LiveChannel.onReactionAdd(scope: CoroutineScope = this, block: suspend (ReactionAddEvent) -> Unit): Job","dev.kord.core.live.channel.onReactionAdd"]},{"name":"fun LiveChannel.onReactionRemove(scope: CoroutineScope = this, block: suspend (ReactionRemoveEvent) -> Unit): Job","description":"dev.kord.core.live.channel.onReactionRemove","location":"core/dev.kord.core.live.channel/on-reaction-remove.html","searchKeys":["onReactionRemove","fun LiveChannel.onReactionRemove(scope: CoroutineScope = this, block: suspend (ReactionRemoveEvent) -> Unit): Job","dev.kord.core.live.channel.onReactionRemove"]},{"name":"fun LiveChannel.onReactionRemoveAll(scope: CoroutineScope = this, block: suspend (ReactionRemoveAllEvent) -> Unit): Job","description":"dev.kord.core.live.channel.onReactionRemoveAll","location":"core/dev.kord.core.live.channel/on-reaction-remove-all.html","searchKeys":["onReactionRemoveAll","fun LiveChannel.onReactionRemoveAll(scope: CoroutineScope = this, block: suspend (ReactionRemoveAllEvent) -> Unit): Job","dev.kord.core.live.channel.onReactionRemoveAll"]},{"name":"fun LiveChannel.onVoiceStateUpdate(scope: CoroutineScope = this, block: suspend (VoiceStateUpdateEvent) -> Unit): Job","description":"dev.kord.core.live.channel.onVoiceStateUpdate","location":"core/dev.kord.core.live.channel/on-voice-state-update.html","searchKeys":["onVoiceStateUpdate","fun LiveChannel.onVoiceStateUpdate(scope: CoroutineScope = this, block: suspend (VoiceStateUpdateEvent) -> Unit): Job","dev.kord.core.live.channel.onVoiceStateUpdate"]},{"name":"fun LiveDmChannel(channel: DmChannel, coroutineScope: CoroutineScope = channel.kord + SupervisorJob(channel.kord.coroutineContext.job))","description":"dev.kord.core.live.channel.LiveDmChannel.LiveDmChannel","location":"core/dev.kord.core.live.channel/-live-dm-channel/-live-dm-channel.html","searchKeys":["LiveDmChannel","fun LiveDmChannel(channel: DmChannel, coroutineScope: CoroutineScope = channel.kord + SupervisorJob(channel.kord.coroutineContext.job))","dev.kord.core.live.channel.LiveDmChannel.LiveDmChannel"]},{"name":"fun LiveDmChannel.onUpdate(scope: CoroutineScope = this, block: suspend (DMChannelUpdateEvent) -> Unit): Job","description":"dev.kord.core.live.channel.onUpdate","location":"core/dev.kord.core.live.channel/on-update.html","searchKeys":["onUpdate","fun LiveDmChannel.onUpdate(scope: CoroutineScope = this, block: suspend (DMChannelUpdateEvent) -> Unit): Job","dev.kord.core.live.channel.onUpdate"]},{"name":"fun LiveGuild(guild: Guild, coroutineScope: CoroutineScope = guild.kord + SupervisorJob(guild.kord.coroutineContext.job))","description":"dev.kord.core.live.LiveGuild.LiveGuild","location":"core/dev.kord.core.live/-live-guild/-live-guild.html","searchKeys":["LiveGuild","fun LiveGuild(guild: Guild, coroutineScope: CoroutineScope = guild.kord + SupervisorJob(guild.kord.coroutineContext.job))","dev.kord.core.live.LiveGuild.LiveGuild"]},{"name":"fun LiveGuild.onBanAdd(scope: CoroutineScope = this, block: suspend (BanAddEvent) -> Unit): Job","description":"dev.kord.core.live.onBanAdd","location":"core/dev.kord.core.live/on-ban-add.html","searchKeys":["onBanAdd","fun LiveGuild.onBanAdd(scope: CoroutineScope = this, block: suspend (BanAddEvent) -> Unit): Job","dev.kord.core.live.onBanAdd"]},{"name":"fun LiveGuild.onBanRemove(scope: CoroutineScope = this, block: suspend (BanRemoveEvent) -> Unit): Job","description":"dev.kord.core.live.onBanRemove","location":"core/dev.kord.core.live/on-ban-remove.html","searchKeys":["onBanRemove","fun LiveGuild.onBanRemove(scope: CoroutineScope = this, block: suspend (BanRemoveEvent) -> Unit): Job","dev.kord.core.live.onBanRemove"]},{"name":"fun LiveGuild.onChannelCreate(scope: CoroutineScope = this, block: suspend (ChannelCreateEvent) -> Unit): Job","description":"dev.kord.core.live.onChannelCreate","location":"core/dev.kord.core.live/on-channel-create.html","searchKeys":["onChannelCreate","fun LiveGuild.onChannelCreate(scope: CoroutineScope = this, block: suspend (ChannelCreateEvent) -> Unit): Job","dev.kord.core.live.onChannelCreate"]},{"name":"fun LiveGuild.onChannelDelete(scope: CoroutineScope = this, block: suspend (ChannelDeleteEvent) -> Unit): Job","description":"dev.kord.core.live.onChannelDelete","location":"core/dev.kord.core.live/on-channel-delete.html","searchKeys":["onChannelDelete","fun LiveGuild.onChannelDelete(scope: CoroutineScope = this, block: suspend (ChannelDeleteEvent) -> Unit): Job","dev.kord.core.live.onChannelDelete"]},{"name":"fun LiveGuild.onChannelUpdate(scope: CoroutineScope = this, block: suspend (ChannelUpdateEvent) -> Unit): Job","description":"dev.kord.core.live.onChannelUpdate","location":"core/dev.kord.core.live/on-channel-update.html","searchKeys":["onChannelUpdate","fun LiveGuild.onChannelUpdate(scope: CoroutineScope = this, block: suspend (ChannelUpdateEvent) -> Unit): Job","dev.kord.core.live.onChannelUpdate"]},{"name":"fun LiveGuild.onEmojisUpdate(scope: CoroutineScope = this, block: suspend (EmojisUpdateEvent) -> Unit): Job","description":"dev.kord.core.live.onEmojisUpdate","location":"core/dev.kord.core.live/on-emojis-update.html","searchKeys":["onEmojisUpdate","fun LiveGuild.onEmojisUpdate(scope: CoroutineScope = this, block: suspend (EmojisUpdateEvent) -> Unit): Job","dev.kord.core.live.onEmojisUpdate"]},{"name":"fun LiveGuild.onGuildCreate(scope: CoroutineScope = this, block: suspend (GuildCreateEvent) -> Unit): Job","description":"dev.kord.core.live.onGuildCreate","location":"core/dev.kord.core.live/on-guild-create.html","searchKeys":["onGuildCreate","fun LiveGuild.onGuildCreate(scope: CoroutineScope = this, block: suspend (GuildCreateEvent) -> Unit): Job","dev.kord.core.live.onGuildCreate"]},{"name":"fun LiveGuild.onGuildUpdate(scope: CoroutineScope = this, block: suspend (GuildUpdateEvent) -> Unit): Job","description":"dev.kord.core.live.onGuildUpdate","location":"core/dev.kord.core.live/on-guild-update.html","searchKeys":["onGuildUpdate","fun LiveGuild.onGuildUpdate(scope: CoroutineScope = this, block: suspend (GuildUpdateEvent) -> Unit): Job","dev.kord.core.live.onGuildUpdate"]},{"name":"fun LiveGuild.onIntegrationsUpdate(scope: CoroutineScope = this, block: suspend (IntegrationsUpdateEvent) -> Unit): Job","description":"dev.kord.core.live.onIntegrationsUpdate","location":"core/dev.kord.core.live/on-integrations-update.html","searchKeys":["onIntegrationsUpdate","fun LiveGuild.onIntegrationsUpdate(scope: CoroutineScope = this, block: suspend (IntegrationsUpdateEvent) -> Unit): Job","dev.kord.core.live.onIntegrationsUpdate"]},{"name":"fun LiveGuild.onMemberJoin(scope: CoroutineScope = this, block: suspend (MemberJoinEvent) -> Unit): Job","description":"dev.kord.core.live.onMemberJoin","location":"core/dev.kord.core.live/on-member-join.html","searchKeys":["onMemberJoin","fun LiveGuild.onMemberJoin(scope: CoroutineScope = this, block: suspend (MemberJoinEvent) -> Unit): Job","dev.kord.core.live.onMemberJoin"]},{"name":"fun LiveGuild.onMemberLeave(scope: CoroutineScope = this, block: suspend (MemberLeaveEvent) -> Unit): Job","description":"dev.kord.core.live.onMemberLeave","location":"core/dev.kord.core.live/on-member-leave.html","searchKeys":["onMemberLeave","fun LiveGuild.onMemberLeave(scope: CoroutineScope = this, block: suspend (MemberLeaveEvent) -> Unit): Job","dev.kord.core.live.onMemberLeave"]},{"name":"fun LiveGuild.onMemberUpdate(scope: CoroutineScope = this, block: suspend (MemberUpdateEvent) -> Unit): Job","description":"dev.kord.core.live.onMemberUpdate","location":"core/dev.kord.core.live/on-member-update.html","searchKeys":["onMemberUpdate","fun LiveGuild.onMemberUpdate(scope: CoroutineScope = this, block: suspend (MemberUpdateEvent) -> Unit): Job","dev.kord.core.live.onMemberUpdate"]},{"name":"fun LiveGuild.onMessageCreate(scope: CoroutineScope = this, block: suspend (MessageCreateEvent) -> Unit): Job","description":"dev.kord.core.live.onMessageCreate","location":"core/dev.kord.core.live/on-message-create.html","searchKeys":["onMessageCreate","fun LiveGuild.onMessageCreate(scope: CoroutineScope = this, block: suspend (MessageCreateEvent) -> Unit): Job","dev.kord.core.live.onMessageCreate"]},{"name":"fun LiveGuild.onMessageDelete(scope: CoroutineScope = this, block: suspend (MessageDeleteEvent) -> Unit): Job","description":"dev.kord.core.live.onMessageDelete","location":"core/dev.kord.core.live/on-message-delete.html","searchKeys":["onMessageDelete","fun LiveGuild.onMessageDelete(scope: CoroutineScope = this, block: suspend (MessageDeleteEvent) -> Unit): Job","dev.kord.core.live.onMessageDelete"]},{"name":"fun LiveGuild.onMessageUpdate(scope: CoroutineScope = this, block: suspend (MessageUpdateEvent) -> Unit): Job","description":"dev.kord.core.live.onMessageUpdate","location":"core/dev.kord.core.live/on-message-update.html","searchKeys":["onMessageUpdate","fun LiveGuild.onMessageUpdate(scope: CoroutineScope = this, block: suspend (MessageUpdateEvent) -> Unit): Job","dev.kord.core.live.onMessageUpdate"]},{"name":"fun LiveGuild.onPresenceUpdate(scope: CoroutineScope = this, block: suspend (PresenceUpdateEvent) -> Unit): Job","description":"dev.kord.core.live.onPresenceUpdate","location":"core/dev.kord.core.live/on-presence-update.html","searchKeys":["onPresenceUpdate","fun LiveGuild.onPresenceUpdate(scope: CoroutineScope = this, block: suspend (PresenceUpdateEvent) -> Unit): Job","dev.kord.core.live.onPresenceUpdate"]},{"name":"fun LiveGuild.onReactionAdd(scope: CoroutineScope = this, block: suspend (ReactionAddEvent) -> Unit): Job","description":"dev.kord.core.live.onReactionAdd","location":"core/dev.kord.core.live/on-reaction-add.html","searchKeys":["onReactionAdd","fun LiveGuild.onReactionAdd(scope: CoroutineScope = this, block: suspend (ReactionAddEvent) -> Unit): Job","dev.kord.core.live.onReactionAdd"]},{"name":"fun LiveGuild.onReactionRemove(scope: CoroutineScope = this, block: suspend (ReactionRemoveEvent) -> Unit): Job","description":"dev.kord.core.live.onReactionRemove","location":"core/dev.kord.core.live/on-reaction-remove.html","searchKeys":["onReactionRemove","fun LiveGuild.onReactionRemove(scope: CoroutineScope = this, block: suspend (ReactionRemoveEvent) -> Unit): Job","dev.kord.core.live.onReactionRemove"]},{"name":"fun LiveGuild.onReactionRemoveAll(scope: CoroutineScope = this, block: suspend (ReactionRemoveAllEvent) -> Unit): Job","description":"dev.kord.core.live.onReactionRemoveAll","location":"core/dev.kord.core.live/on-reaction-remove-all.html","searchKeys":["onReactionRemoveAll","fun LiveGuild.onReactionRemoveAll(scope: CoroutineScope = this, block: suspend (ReactionRemoveAllEvent) -> Unit): Job","dev.kord.core.live.onReactionRemoveAll"]},{"name":"fun LiveGuild.onRoleCreate(scope: CoroutineScope = this, block: suspend (RoleCreateEvent) -> Unit): Job","description":"dev.kord.core.live.onRoleCreate","location":"core/dev.kord.core.live/on-role-create.html","searchKeys":["onRoleCreate","fun LiveGuild.onRoleCreate(scope: CoroutineScope = this, block: suspend (RoleCreateEvent) -> Unit): Job","dev.kord.core.live.onRoleCreate"]},{"name":"fun LiveGuild.onRoleDelete(scope: CoroutineScope = this, block: suspend (RoleDeleteEvent) -> Unit): Job","description":"dev.kord.core.live.onRoleDelete","location":"core/dev.kord.core.live/on-role-delete.html","searchKeys":["onRoleDelete","fun LiveGuild.onRoleDelete(scope: CoroutineScope = this, block: suspend (RoleDeleteEvent) -> Unit): Job","dev.kord.core.live.onRoleDelete"]},{"name":"fun LiveGuild.onRoleUpdate(scope: CoroutineScope = this, block: suspend (RoleUpdateEvent) -> Unit): Job","description":"dev.kord.core.live.onRoleUpdate","location":"core/dev.kord.core.live/on-role-update.html","searchKeys":["onRoleUpdate","fun LiveGuild.onRoleUpdate(scope: CoroutineScope = this, block: suspend (RoleUpdateEvent) -> Unit): Job","dev.kord.core.live.onRoleUpdate"]},{"name":"fun LiveGuild.onVoiceServerUpdate(scope: CoroutineScope = this, block: suspend (VoiceServerUpdateEvent) -> Unit): Job","description":"dev.kord.core.live.onVoiceServerUpdate","location":"core/dev.kord.core.live/on-voice-server-update.html","searchKeys":["onVoiceServerUpdate","fun LiveGuild.onVoiceServerUpdate(scope: CoroutineScope = this, block: suspend (VoiceServerUpdateEvent) -> Unit): Job","dev.kord.core.live.onVoiceServerUpdate"]},{"name":"fun LiveGuild.onVoiceStateUpdate(scope: CoroutineScope = this, block: suspend (VoiceStateUpdateEvent) -> Unit): Job","description":"dev.kord.core.live.onVoiceStateUpdate","location":"core/dev.kord.core.live/on-voice-state-update.html","searchKeys":["onVoiceStateUpdate","fun LiveGuild.onVoiceStateUpdate(scope: CoroutineScope = this, block: suspend (VoiceStateUpdateEvent) -> Unit): Job","dev.kord.core.live.onVoiceStateUpdate"]},{"name":"fun LiveGuild.onWebhookUpdate(scope: CoroutineScope = this, block: suspend (WebhookUpdateEvent) -> Unit): Job","description":"dev.kord.core.live.onWebhookUpdate","location":"core/dev.kord.core.live/on-webhook-update.html","searchKeys":["onWebhookUpdate","fun LiveGuild.onWebhookUpdate(scope: CoroutineScope = this, block: suspend (WebhookUpdateEvent) -> Unit): Job","dev.kord.core.live.onWebhookUpdate"]},{"name":"fun LiveGuildChannel(channel: TopGuildChannel, coroutineScope: CoroutineScope = channel.kord + SupervisorJob(channel.kord.coroutineContext.job))","description":"dev.kord.core.live.channel.LiveGuildChannel.LiveGuildChannel","location":"core/dev.kord.core.live.channel/-live-guild-channel/-live-guild-channel.html","searchKeys":["LiveGuildChannel","fun LiveGuildChannel(channel: TopGuildChannel, coroutineScope: CoroutineScope = channel.kord + SupervisorJob(channel.kord.coroutineContext.job))","dev.kord.core.live.channel.LiveGuildChannel.LiveGuildChannel"]},{"name":"fun LiveGuildChannel.onUpdate(scope: CoroutineScope = this, block: suspend (ChannelUpdateEvent) -> Unit): Job","description":"dev.kord.core.live.channel.onUpdate","location":"core/dev.kord.core.live.channel/on-update.html","searchKeys":["onUpdate","fun LiveGuildChannel.onUpdate(scope: CoroutineScope = this, block: suspend (ChannelUpdateEvent) -> Unit): Job","dev.kord.core.live.channel.onUpdate"]},{"name":"fun LiveGuildMessageChannel(channel: TopGuildMessageChannel, coroutineScope: CoroutineScope = channel.kord + SupervisorJob(channel.kord.coroutineContext.job))","description":"dev.kord.core.live.channel.LiveGuildMessageChannel.LiveGuildMessageChannel","location":"core/dev.kord.core.live.channel/-live-guild-message-channel/-live-guild-message-channel.html","searchKeys":["LiveGuildMessageChannel","fun LiveGuildMessageChannel(channel: TopGuildMessageChannel, coroutineScope: CoroutineScope = channel.kord + SupervisorJob(channel.kord.coroutineContext.job))","dev.kord.core.live.channel.LiveGuildMessageChannel.LiveGuildMessageChannel"]},{"name":"fun LiveGuildMessageChannel.onUpdate(scope: CoroutineScope = this, block: suspend (ChannelUpdateEvent) -> Unit): Job","description":"dev.kord.core.live.channel.onUpdate","location":"core/dev.kord.core.live.channel/on-update.html","searchKeys":["onUpdate","fun LiveGuildMessageChannel.onUpdate(scope: CoroutineScope = this, block: suspend (ChannelUpdateEvent) -> Unit): Job","dev.kord.core.live.channel.onUpdate"]},{"name":"fun LiveMember(member: Member, coroutineScope: CoroutineScope = member.kord + SupervisorJob(member.kord.coroutineContext.job))","description":"dev.kord.core.live.LiveMember.LiveMember","location":"core/dev.kord.core.live/-live-member/-live-member.html","searchKeys":["LiveMember","fun LiveMember(member: Member, coroutineScope: CoroutineScope = member.kord + SupervisorJob(member.kord.coroutineContext.job))","dev.kord.core.live.LiveMember.LiveMember"]},{"name":"fun LiveMember.onUpdate(scope: CoroutineScope = this, block: suspend (MemberUpdateEvent) -> Unit): Job","description":"dev.kord.core.live.onUpdate","location":"core/dev.kord.core.live/on-update.html","searchKeys":["onUpdate","fun LiveMember.onUpdate(scope: CoroutineScope = this, block: suspend (MemberUpdateEvent) -> Unit): Job","dev.kord.core.live.onUpdate"]},{"name":"fun LiveMessage(message: Message, guildId: Snowflake?, coroutineScope: CoroutineScope = message.kord + SupervisorJob(message.kord.coroutineContext.job))","description":"dev.kord.core.live.LiveMessage.LiveMessage","location":"core/dev.kord.core.live/-live-message/-live-message.html","searchKeys":["LiveMessage","fun LiveMessage(message: Message, guildId: Snowflake?, coroutineScope: CoroutineScope = message.kord + SupervisorJob(message.kord.coroutineContext.job))","dev.kord.core.live.LiveMessage.LiveMessage"]},{"name":"fun LiveMessage.onReactionAdd(scope: CoroutineScope = this, block: suspend (ReactionAddEvent) -> Unit): Job","description":"dev.kord.core.live.onReactionAdd","location":"core/dev.kord.core.live/on-reaction-add.html","searchKeys":["onReactionAdd","fun LiveMessage.onReactionAdd(scope: CoroutineScope = this, block: suspend (ReactionAddEvent) -> Unit): Job","dev.kord.core.live.onReactionAdd"]},{"name":"fun LiveMessage.onReactionRemove(scope: CoroutineScope = this, block: suspend (ReactionRemoveEvent) -> Unit): Job","description":"dev.kord.core.live.onReactionRemove","location":"core/dev.kord.core.live/on-reaction-remove.html","searchKeys":["onReactionRemove","fun LiveMessage.onReactionRemove(scope: CoroutineScope = this, block: suspend (ReactionRemoveEvent) -> Unit): Job","dev.kord.core.live.onReactionRemove"]},{"name":"fun LiveMessage.onReactionRemoveAll(scope: CoroutineScope = this, block: suspend (ReactionRemoveAllEvent) -> Unit): Job","description":"dev.kord.core.live.onReactionRemoveAll","location":"core/dev.kord.core.live/on-reaction-remove-all.html","searchKeys":["onReactionRemoveAll","fun LiveMessage.onReactionRemoveAll(scope: CoroutineScope = this, block: suspend (ReactionRemoveAllEvent) -> Unit): Job","dev.kord.core.live.onReactionRemoveAll"]},{"name":"fun LiveMessage.onUpdate(scope: CoroutineScope = this, block: suspend (MessageUpdateEvent) -> Unit): Job","description":"dev.kord.core.live.onUpdate","location":"core/dev.kord.core.live/on-update.html","searchKeys":["onUpdate","fun LiveMessage.onUpdate(scope: CoroutineScope = this, block: suspend (MessageUpdateEvent) -> Unit): Job","dev.kord.core.live.onUpdate"]},{"name":"fun LiveRole(role: Role, coroutineScope: CoroutineScope = role.kord + SupervisorJob(role.kord.coroutineContext.job))","description":"dev.kord.core.live.LiveRole.LiveRole","location":"core/dev.kord.core.live/-live-role/-live-role.html","searchKeys":["LiveRole","fun LiveRole(role: Role, coroutineScope: CoroutineScope = role.kord + SupervisorJob(role.kord.coroutineContext.job))","dev.kord.core.live.LiveRole.LiveRole"]},{"name":"fun LiveRole.onUpdate(scope: CoroutineScope = this, block: suspend (RoleUpdateEvent) -> Unit): Job","description":"dev.kord.core.live.onUpdate","location":"core/dev.kord.core.live/on-update.html","searchKeys":["onUpdate","fun LiveRole.onUpdate(scope: CoroutineScope = this, block: suspend (RoleUpdateEvent) -> Unit): Job","dev.kord.core.live.onUpdate"]},{"name":"fun LiveUser(user: User, coroutineScope: CoroutineScope = user.kord + SupervisorJob(user.kord.coroutineContext.job))","description":"dev.kord.core.live.LiveUser.LiveUser","location":"core/dev.kord.core.live/-live-user/-live-user.html","searchKeys":["LiveUser","fun LiveUser(user: User, coroutineScope: CoroutineScope = user.kord + SupervisorJob(user.kord.coroutineContext.job))","dev.kord.core.live.LiveUser.LiveUser"]},{"name":"fun LiveUser.onUpdate(scope: CoroutineScope = this, block: suspend (UserUpdateEvent) -> Unit): Job","description":"dev.kord.core.live.onUpdate","location":"core/dev.kord.core.live/on-update.html","searchKeys":["onUpdate","fun LiveUser.onUpdate(scope: CoroutineScope = this, block: suspend (UserUpdateEvent) -> Unit): Job","dev.kord.core.live.onUpdate"]},{"name":"fun LiveVoiceChannel(channel: VoiceChannel, coroutineScope: CoroutineScope = channel.kord + SupervisorJob(channel.kord.coroutineContext.job))","description":"dev.kord.core.live.channel.LiveVoiceChannel.LiveVoiceChannel","location":"core/dev.kord.core.live.channel/-live-voice-channel/-live-voice-channel.html","searchKeys":["LiveVoiceChannel","fun LiveVoiceChannel(channel: VoiceChannel, coroutineScope: CoroutineScope = channel.kord + SupervisorJob(channel.kord.coroutineContext.job))","dev.kord.core.live.channel.LiveVoiceChannel.LiveVoiceChannel"]},{"name":"fun LiveVoiceChannel.onUpdate(scope: CoroutineScope = this, block: suspend (VoiceChannelUpdateEvent) -> Unit): Job","description":"dev.kord.core.live.channel.onUpdate","location":"core/dev.kord.core.live.channel/on-update.html","searchKeys":["onUpdate","fun LiveVoiceChannel.onUpdate(scope: CoroutineScope = this, block: suspend (VoiceChannelUpdateEvent) -> Unit): Job","dev.kord.core.live.channel.onUpdate"]},{"name":"fun Member(memberData: MemberData, userData: UserData, kord: Kord, supplier: EntitySupplier = kord.defaultSupplier)","description":"dev.kord.core.entity.Member.Member","location":"core/dev.kord.core.entity/-member/-member.html","searchKeys":["Member","fun Member(memberData: MemberData, userData: UserData, kord: Kord, supplier: EntitySupplier = kord.defaultSupplier)","dev.kord.core.entity.Member.Member"]},{"name":"fun Member.live(coroutineScope: CoroutineScope = kord + SupervisorJob(kord.coroutineContext.job)): LiveMember","description":"dev.kord.core.live.live","location":"core/dev.kord.core.live/live.html","searchKeys":["live","fun Member.live(coroutineScope: CoroutineScope = kord + SupervisorJob(kord.coroutineContext.job)): LiveMember","dev.kord.core.live.live"]},{"name":"fun MemberAvatar(guildId: Snowflake, userId: Snowflake, avatarHash: String, kord: Kord)","description":"dev.kord.core.entity.Icon.MemberAvatar.MemberAvatar","location":"core/dev.kord.core.entity/-icon/-member-avatar/-member-avatar.html","searchKeys":["MemberAvatar","fun MemberAvatar(guildId: Snowflake, userId: Snowflake, avatarHash: String, kord: Kord)","dev.kord.core.entity.Icon.MemberAvatar.MemberAvatar"]},{"name":"fun MemberBehavior(guildId: Snowflake, id: Snowflake, kord: Kord, strategy: EntitySupplyStrategy<*> = kord.resources.defaultStrategy): MemberBehavior","description":"dev.kord.core.behavior.MemberBehavior","location":"core/dev.kord.core.behavior/-member-behavior.html","searchKeys":["MemberBehavior","fun MemberBehavior(guildId: Snowflake, id: Snowflake, kord: Kord, strategy: EntitySupplyStrategy<*> = kord.resources.defaultStrategy): MemberBehavior","dev.kord.core.behavior.MemberBehavior"]},{"name":"fun MemberData(userId: Snowflake, guildId: Snowflake, nick: Optional<String?> = Optional.Missing(), roles: List<Snowflake>, joinedAt: Instant, premiumSince: Optional<Instant?> = Optional.Missing(), pending: OptionalBoolean = OptionalBoolean.Missing, avatar: Optional<String?> = Optional.Missing(), communicationDisabledUntil: Optional<Instant?> = Optional.Missing())","description":"dev.kord.core.cache.data.MemberData.MemberData","location":"core/dev.kord.core.cache.data/-member-data/-member-data.html","searchKeys":["MemberData","fun MemberData(userId: Snowflake, guildId: Snowflake, nick: Optional<String?> = Optional.Missing(), roles: List<Snowflake>, joinedAt: Instant, premiumSince: Optional<Instant?> = Optional.Missing(), pending: OptionalBoolean = OptionalBoolean.Missing, avatar: Optional<String?> = Optional.Missing(), communicationDisabledUntil: Optional<Instant?> = Optional.Missing())","dev.kord.core.cache.data.MemberData.MemberData"]},{"name":"fun MemberJoinEvent(member: Member, shard: Int, customContext: Any?, supplier: EntitySupplier = member.kord.defaultSupplier)","description":"dev.kord.core.event.guild.MemberJoinEvent.MemberJoinEvent","location":"core/dev.kord.core.event.guild/-member-join-event/-member-join-event.html","searchKeys":["MemberJoinEvent","fun MemberJoinEvent(member: Member, shard: Int, customContext: Any?, supplier: EntitySupplier = member.kord.defaultSupplier)","dev.kord.core.event.guild.MemberJoinEvent.MemberJoinEvent"]},{"name":"fun MemberLeaveEvent(user: User, old: Member?, guildId: Snowflake, shard: Int, customContext: Any?)","description":"dev.kord.core.event.guild.MemberLeaveEvent.MemberLeaveEvent","location":"core/dev.kord.core.event.guild/-member-leave-event/-member-leave-event.html","searchKeys":["MemberLeaveEvent","fun MemberLeaveEvent(user: User, old: Member?, guildId: Snowflake, shard: Int, customContext: Any?)","dev.kord.core.event.guild.MemberLeaveEvent.MemberLeaveEvent"]},{"name":"fun MemberOptionValue(value: Snowflake, focused: Boolean, resolvedObject: Member?)","description":"dev.kord.core.entity.interaction.MemberOptionValue.MemberOptionValue","location":"core/dev.kord.core.entity.interaction/-member-option-value/-member-option-value.html","searchKeys":["MemberOptionValue","fun MemberOptionValue(value: Snowflake, focused: Boolean, resolvedObject: Member?)","dev.kord.core.entity.interaction.MemberOptionValue.MemberOptionValue"]},{"name":"fun MemberUpdateEvent(member: Member, old: Member?, kord: Kord, shard: Int, customContext: Any?, supplier: EntitySupplier = kord.defaultSupplier)","description":"dev.kord.core.event.guild.MemberUpdateEvent.MemberUpdateEvent","location":"core/dev.kord.core.event.guild/-member-update-event/-member-update-event.html","searchKeys":["MemberUpdateEvent","fun MemberUpdateEvent(member: Member, old: Member?, kord: Kord, shard: Int, customContext: Any?, supplier: EntitySupplier = kord.defaultSupplier)","dev.kord.core.event.guild.MemberUpdateEvent.MemberUpdateEvent"]},{"name":"fun MembersChunkData(guildId: Snowflake, members: Set<MemberData>, users: Set<UserData>, chunkIndex: Int, chunkCount: Int, notFound: Optional<Set<Snowflake>> = Optional.Missing(), presences: Optional<List<PresenceData>> = Optional.Missing(), nonce: Optional<String> = Optional.Missing())","description":"dev.kord.core.cache.data.MembersChunkData.MembersChunkData","location":"core/dev.kord.core.cache.data/-members-chunk-data/-members-chunk-data.html","searchKeys":["MembersChunkData","fun MembersChunkData(guildId: Snowflake, members: Set<MemberData>, users: Set<UserData>, chunkIndex: Int, chunkCount: Int, notFound: Optional<Set<Snowflake>> = Optional.Missing(), presences: Optional<List<PresenceData>> = Optional.Missing(), nonce: Optional<String> = Optional.Missing())","dev.kord.core.cache.data.MembersChunkData.MembersChunkData"]},{"name":"fun MembersChunkEvent(data: MembersChunkData, kord: Kord, shard: Int, customContext: Any?, supplier: EntitySupplier = kord.defaultSupplier)","description":"dev.kord.core.event.guild.MembersChunkEvent.MembersChunkEvent","location":"core/dev.kord.core.event.guild/-members-chunk-event/-members-chunk-event.html","searchKeys":["MembersChunkEvent","fun MembersChunkEvent(data: MembersChunkData, kord: Kord, shard: Int, customContext: Any?, supplier: EntitySupplier = kord.defaultSupplier)","dev.kord.core.event.guild.MembersChunkEvent.MembersChunkEvent"]},{"name":"fun MentionSpamAutoModerationRule(data: AutoModerationRuleData, kord: Kord, supplier: EntitySupplier)","description":"dev.kord.core.entity.automoderation.MentionSpamAutoModerationRule.MentionSpamAutoModerationRule","location":"core/dev.kord.core.entity.automoderation/-mention-spam-auto-moderation-rule/-mention-spam-auto-moderation-rule.html","searchKeys":["MentionSpamAutoModerationRule","fun MentionSpamAutoModerationRule(data: AutoModerationRuleData, kord: Kord, supplier: EntitySupplier)","dev.kord.core.entity.automoderation.MentionSpamAutoModerationRule.MentionSpamAutoModerationRule"]},{"name":"fun MentionableOptionValue(value: Snowflake, focused: Boolean, resolvedObject: Entity?)","description":"dev.kord.core.entity.interaction.MentionableOptionValue.MentionableOptionValue","location":"core/dev.kord.core.entity.interaction/-mentionable-option-value/-mentionable-option-value.html","searchKeys":["MentionableOptionValue","fun MentionableOptionValue(value: Snowflake, focused: Boolean, resolvedObject: Entity?)","dev.kord.core.entity.interaction.MentionableOptionValue.MentionableOptionValue"]},{"name":"fun Message(data: MessageData, kord: Kord, supplier: EntitySupplier = kord.defaultSupplier)","description":"dev.kord.core.entity.Message.Message","location":"core/dev.kord.core.entity/-message/-message.html","searchKeys":["Message","fun Message(data: MessageData, kord: Kord, supplier: EntitySupplier = kord.defaultSupplier)","dev.kord.core.entity.Message.Message"]},{"name":"fun MessageBehavior(channelId: Snowflake, messageId: Snowflake, kord: Kord, strategy: EntitySupplyStrategy<*> = kord.resources.defaultStrategy): MessageBehavior","description":"dev.kord.core.behavior.MessageBehavior","location":"core/dev.kord.core.behavior/-message-behavior.html","searchKeys":["MessageBehavior","fun MessageBehavior(channelId: Snowflake, messageId: Snowflake, kord: Kord, strategy: EntitySupplyStrategy<*> = kord.resources.defaultStrategy): MessageBehavior","dev.kord.core.behavior.MessageBehavior"]},{"name":"fun MessageBulkDeleteEvent(messageIds: Set<Snowflake>, messages: Set<Message>, channelId: Snowflake, guildId: Snowflake?, kord: Kord, shard: Int, customContext: Any?, supplier: EntitySupplier = kord.defaultSupplier)","description":"dev.kord.core.event.message.MessageBulkDeleteEvent.MessageBulkDeleteEvent","location":"core/dev.kord.core.event.message/-message-bulk-delete-event/-message-bulk-delete-event.html","searchKeys":["MessageBulkDeleteEvent","fun MessageBulkDeleteEvent(messageIds: Set<Snowflake>, messages: Set<Message>, channelId: Snowflake, guildId: Snowflake?, kord: Kord, shard: Int, customContext: Any?, supplier: EntitySupplier = kord.defaultSupplier)","dev.kord.core.event.message.MessageBulkDeleteEvent.MessageBulkDeleteEvent"]},{"name":"fun MessageChannelBehavior(id: Snowflake, kord: Kord, strategy: EntitySupplyStrategy<*> = kord.resources.defaultStrategy): MessageChannelBehavior","description":"dev.kord.core.behavior.channel.MessageChannelBehavior","location":"core/dev.kord.core.behavior.channel/-message-channel-behavior.html","searchKeys":["MessageChannelBehavior","fun MessageChannelBehavior(id: Snowflake, kord: Kord, strategy: EntitySupplyStrategy<*> = kord.resources.defaultStrategy): MessageChannelBehavior","dev.kord.core.behavior.channel.MessageChannelBehavior"]},{"name":"fun MessageCommandCreateEvent(command: GuildMessageCommand, kord: Kord, shard: Int, customContext: Any?)","description":"dev.kord.core.event.interaction.MessageCommandCreateEvent.MessageCommandCreateEvent","location":"core/dev.kord.core.event.interaction/-message-command-create-event/-message-command-create-event.html","searchKeys":["MessageCommandCreateEvent","fun MessageCommandCreateEvent(command: GuildMessageCommand, kord: Kord, shard: Int, customContext: Any?)","dev.kord.core.event.interaction.MessageCommandCreateEvent.MessageCommandCreateEvent"]},{"name":"fun MessageCommandDeleteEvent(command: GuildMessageCommand, kord: Kord, shard: Int, customContext: Any?)","description":"dev.kord.core.event.interaction.MessageCommandDeleteEvent.MessageCommandDeleteEvent","location":"core/dev.kord.core.event.interaction/-message-command-delete-event/-message-command-delete-event.html","searchKeys":["MessageCommandDeleteEvent","fun MessageCommandDeleteEvent(command: GuildMessageCommand, kord: Kord, shard: Int, customContext: Any?)","dev.kord.core.event.interaction.MessageCommandDeleteEvent.MessageCommandDeleteEvent"]},{"name":"fun MessageCommandUpdateEvent(command: GuildMessageCommand, kord: Kord, shard: Int, customContext: Any?)","description":"dev.kord.core.event.interaction.MessageCommandUpdateEvent.MessageCommandUpdateEvent","location":"core/dev.kord.core.event.interaction/-message-command-update-event/-message-command-update-event.html","searchKeys":["MessageCommandUpdateEvent","fun MessageCommandUpdateEvent(command: GuildMessageCommand, kord: Kord, shard: Int, customContext: Any?)","dev.kord.core.event.interaction.MessageCommandUpdateEvent.MessageCommandUpdateEvent"]},{"name":"fun MessageCreateEvent(message: Message, guildId: Snowflake?, member: Member?, shard: Int, customContext: Any?, supplier: EntitySupplier = message.kord.defaultSupplier)","description":"dev.kord.core.event.message.MessageCreateEvent.MessageCreateEvent","location":"core/dev.kord.core.event.message/-message-create-event/-message-create-event.html","searchKeys":["MessageCreateEvent","fun MessageCreateEvent(message: Message, guildId: Snowflake?, member: Member?, shard: Int, customContext: Any?, supplier: EntitySupplier = message.kord.defaultSupplier)","dev.kord.core.event.message.MessageCreateEvent.MessageCreateEvent"]},{"name":"fun MessageData(id: Snowflake, channelId: Snowflake, guildId: OptionalSnowflake = OptionalSnowflake.Missing, author: UserData, content: String, timestamp: Instant, editedTimestamp: Instant? = null, tts: Boolean, mentionEveryone: Boolean, mentions: List<Snowflake>, mentionRoles: List<Snowflake>, mentionedChannels: Optional<List<Snowflake>> = Optional.Missing(), attachments: List<AttachmentData>, embeds: List<EmbedData>, reactions: Optional<List<ReactionData>> = Optional.Missing(), nonce: Optional<String> = Optional.Missing(), pinned: Boolean, webhookId: OptionalSnowflake = OptionalSnowflake.Missing, type: MessageType, activity: Optional<MessageActivity> = Optional.Missing(), application: Optional<MessageApplication> = Optional.Missing(), applicationId: OptionalSnowflake = OptionalSnowflake.Missing, messageReference: Optional<MessageReferenceData> = Optional.Missing(), flags: Optional<MessageFlags> = Optional.Missing(), stickers: Optional<List<StickerItemData>> = Optional.Missing(), referencedMessage: Optional<MessageData?> = Optional.Missing(), interaction: Optional<MessageInteractionData> = Optional.Missing(), components: Optional<List<ComponentData>> = Optional.Missing())","description":"dev.kord.core.cache.data.MessageData.MessageData","location":"core/dev.kord.core.cache.data/-message-data/-message-data.html","searchKeys":["MessageData","fun MessageData(id: Snowflake, channelId: Snowflake, guildId: OptionalSnowflake = OptionalSnowflake.Missing, author: UserData, content: String, timestamp: Instant, editedTimestamp: Instant? = null, tts: Boolean, mentionEveryone: Boolean, mentions: List<Snowflake>, mentionRoles: List<Snowflake>, mentionedChannels: Optional<List<Snowflake>> = Optional.Missing(), attachments: List<AttachmentData>, embeds: List<EmbedData>, reactions: Optional<List<ReactionData>> = Optional.Missing(), nonce: Optional<String> = Optional.Missing(), pinned: Boolean, webhookId: OptionalSnowflake = OptionalSnowflake.Missing, type: MessageType, activity: Optional<MessageActivity> = Optional.Missing(), application: Optional<MessageApplication> = Optional.Missing(), applicationId: OptionalSnowflake = OptionalSnowflake.Missing, messageReference: Optional<MessageReferenceData> = Optional.Missing(), flags: Optional<MessageFlags> = Optional.Missing(), stickers: Optional<List<StickerItemData>> = Optional.Missing(), referencedMessage: Optional<MessageData?> = Optional.Missing(), interaction: Optional<MessageInteractionData> = Optional.Missing(), components: Optional<List<ComponentData>> = Optional.Missing())","dev.kord.core.cache.data.MessageData.MessageData"]},{"name":"fun MessageDeleteEvent(messageId: Snowflake, channelId: Snowflake, guildId: Snowflake?, message: Message?, kord: Kord, shard: Int, customContext: Any?, supplier: EntitySupplier = kord.defaultSupplier)","description":"dev.kord.core.event.message.MessageDeleteEvent.MessageDeleteEvent","location":"core/dev.kord.core.event.message/-message-delete-event/-message-delete-event.html","searchKeys":["MessageDeleteEvent","fun MessageDeleteEvent(messageId: Snowflake, channelId: Snowflake, guildId: Snowflake?, message: Message?, kord: Kord, shard: Int, customContext: Any?, supplier: EntitySupplier = kord.defaultSupplier)","dev.kord.core.event.message.MessageDeleteEvent.MessageDeleteEvent"]},{"name":"fun MessageInteractionData(id: Snowflake, type: InteractionType, name: String, user: Snowflake)","description":"dev.kord.core.cache.data.MessageInteractionData.MessageInteractionData","location":"core/dev.kord.core.cache.data/-message-interaction-data/-message-interaction-data.html","searchKeys":["MessageInteractionData","fun MessageInteractionData(id: Snowflake, type: InteractionType, name: String, user: Snowflake)","dev.kord.core.cache.data.MessageInteractionData.MessageInteractionData"]},{"name":"fun MessageReference(data: MessageReferenceData, kord: Kord)","description":"dev.kord.core.entity.MessageReference.MessageReference","location":"core/dev.kord.core.entity/-message-reference/-message-reference.html","searchKeys":["MessageReference","fun MessageReference(data: MessageReferenceData, kord: Kord)","dev.kord.core.entity.MessageReference.MessageReference"]},{"name":"fun MessageReferenceData(id: OptionalSnowflake = OptionalSnowflake.Missing, channelId: OptionalSnowflake = OptionalSnowflake.Missing, guildId: OptionalSnowflake = OptionalSnowflake.Missing)","description":"dev.kord.core.cache.data.MessageReferenceData.MessageReferenceData","location":"core/dev.kord.core.cache.data/-message-reference-data/-message-reference-data.html","searchKeys":["MessageReferenceData","fun MessageReferenceData(id: OptionalSnowflake = OptionalSnowflake.Missing, channelId: OptionalSnowflake = OptionalSnowflake.Missing, guildId: OptionalSnowflake = OptionalSnowflake.Missing)","dev.kord.core.cache.data.MessageReferenceData.MessageReferenceData"]},{"name":"fun MessageUpdateEvent(messageId: Snowflake, channelId: Snowflake, new: DiscordPartialMessage, old: Message?, kord: Kord, shard: Int, customContext: Any?, supplier: EntitySupplier = kord.defaultSupplier)","description":"dev.kord.core.event.message.MessageUpdateEvent.MessageUpdateEvent","location":"core/dev.kord.core.event.message/-message-update-event/-message-update-event.html","searchKeys":["MessageUpdateEvent","fun MessageUpdateEvent(messageId: Snowflake, channelId: Snowflake, new: DiscordPartialMessage, old: Message?, kord: Kord, shard: Int, customContext: Any?, supplier: EntitySupplier = kord.defaultSupplier)","dev.kord.core.event.message.MessageUpdateEvent.MessageUpdateEvent"]},{"name":"fun Mobile(status: PresenceStatus)","description":"dev.kord.core.entity.ClientStatus.Client.Mobile.Mobile","location":"core/dev.kord.core.entity/-client-status/-client/-mobile/-mobile.html","searchKeys":["Mobile","fun Mobile(status: PresenceStatus)","dev.kord.core.entity.ClientStatus.Client.Mobile.Mobile"]},{"name":"fun ModalSubmitInteraction(data: InteractionData, kord: Kord, supplier: EntitySupplier = kord.defaultSupplier): ModalSubmitInteraction","description":"dev.kord.core.entity.interaction.ModalSubmitInteraction","location":"core/dev.kord.core.entity.interaction/-modal-submit-interaction.html","searchKeys":["ModalSubmitInteraction","fun ModalSubmitInteraction(data: InteractionData, kord: Kord, supplier: EntitySupplier = kord.defaultSupplier): ModalSubmitInteraction","dev.kord.core.entity.interaction.ModalSubmitInteraction"]},{"name":"fun NewsChannel(data: ChannelData, kord: Kord, supplier: EntitySupplier = kord.defaultSupplier)","description":"dev.kord.core.entity.channel.NewsChannel.NewsChannel","location":"core/dev.kord.core.entity.channel/-news-channel/-news-channel.html","searchKeys":["NewsChannel","fun NewsChannel(data: ChannelData, kord: Kord, supplier: EntitySupplier = kord.defaultSupplier)","dev.kord.core.entity.channel.NewsChannel.NewsChannel"]},{"name":"fun NewsChannelBehavior(guildId: Snowflake, id: Snowflake, kord: Kord, strategy: EntitySupplyStrategy<*> = kord.resources.defaultStrategy): NewsChannelBehavior","description":"dev.kord.core.behavior.channel.NewsChannelBehavior","location":"core/dev.kord.core.behavior.channel/-news-channel-behavior.html","searchKeys":["NewsChannelBehavior","fun NewsChannelBehavior(guildId: Snowflake, id: Snowflake, kord: Kord, strategy: EntitySupplyStrategy<*> = kord.resources.defaultStrategy): NewsChannelBehavior","dev.kord.core.behavior.channel.NewsChannelBehavior"]},{"name":"fun NewsChannelCreateEvent(channel: NewsChannel, shard: Int, customContext: Any?)","description":"dev.kord.core.event.channel.NewsChannelCreateEvent.NewsChannelCreateEvent","location":"core/dev.kord.core.event.channel/-news-channel-create-event/-news-channel-create-event.html","searchKeys":["NewsChannelCreateEvent","fun NewsChannelCreateEvent(channel: NewsChannel, shard: Int, customContext: Any?)","dev.kord.core.event.channel.NewsChannelCreateEvent.NewsChannelCreateEvent"]},{"name":"fun NewsChannelDeleteEvent(channel: NewsChannel, shard: Int, customContext: Any?)","description":"dev.kord.core.event.channel.NewsChannelDeleteEvent.NewsChannelDeleteEvent","location":"core/dev.kord.core.event.channel/-news-channel-delete-event/-news-channel-delete-event.html","searchKeys":["NewsChannelDeleteEvent","fun NewsChannelDeleteEvent(channel: NewsChannel, shard: Int, customContext: Any?)","dev.kord.core.event.channel.NewsChannelDeleteEvent.NewsChannelDeleteEvent"]},{"name":"fun NewsChannelThread(data: ChannelData, kord: Kord, supplier: EntitySupplier = kord.defaultSupplier)","description":"dev.kord.core.entity.channel.thread.NewsChannelThread.NewsChannelThread","location":"core/dev.kord.core.entity.channel.thread/-news-channel-thread/-news-channel-thread.html","searchKeys":["NewsChannelThread","fun NewsChannelThread(data: ChannelData, kord: Kord, supplier: EntitySupplier = kord.defaultSupplier)","dev.kord.core.entity.channel.thread.NewsChannelThread.NewsChannelThread"]},{"name":"fun NewsChannelThreadCreateEvent(channel: NewsChannelThread, shard: Int, customContext: Any?)","description":"dev.kord.core.event.channel.thread.NewsChannelThreadCreateEvent.NewsChannelThreadCreateEvent","location":"core/dev.kord.core.event.channel.thread/-news-channel-thread-create-event/-news-channel-thread-create-event.html","searchKeys":["NewsChannelThreadCreateEvent","fun NewsChannelThreadCreateEvent(channel: NewsChannelThread, shard: Int, customContext: Any?)","dev.kord.core.event.channel.thread.NewsChannelThreadCreateEvent.NewsChannelThreadCreateEvent"]},{"name":"fun NewsChannelThreadDeleteEvent(channel: DeletedThreadChannel, old: NewsChannelThread?, shard: Int, customContext: Any?)","description":"dev.kord.core.event.channel.thread.NewsChannelThreadDeleteEvent.NewsChannelThreadDeleteEvent","location":"core/dev.kord.core.event.channel.thread/-news-channel-thread-delete-event/-news-channel-thread-delete-event.html","searchKeys":["NewsChannelThreadDeleteEvent","fun NewsChannelThreadDeleteEvent(channel: DeletedThreadChannel, old: NewsChannelThread?, shard: Int, customContext: Any?)","dev.kord.core.event.channel.thread.NewsChannelThreadDeleteEvent.NewsChannelThreadDeleteEvent"]},{"name":"fun NewsChannelThreadUpdateEvent(channel: NewsChannelThread, old: NewsChannelThread?, shard: Int, customContext: Any?)","description":"dev.kord.core.event.channel.thread.NewsChannelThreadUpdateEvent.NewsChannelThreadUpdateEvent","location":"core/dev.kord.core.event.channel.thread/-news-channel-thread-update-event/-news-channel-thread-update-event.html","searchKeys":["NewsChannelThreadUpdateEvent","fun NewsChannelThreadUpdateEvent(channel: NewsChannelThread, old: NewsChannelThread?, shard: Int, customContext: Any?)","dev.kord.core.event.channel.thread.NewsChannelThreadUpdateEvent.NewsChannelThreadUpdateEvent"]},{"name":"fun NewsChannelUpdateEvent(channel: NewsChannel, old: NewsChannel?, shard: Int, customContext: Any?)","description":"dev.kord.core.event.channel.NewsChannelUpdateEvent.NewsChannelUpdateEvent","location":"core/dev.kord.core.event.channel/-news-channel-update-event/-news-channel-update-event.html","searchKeys":["NewsChannelUpdateEvent","fun NewsChannelUpdateEvent(channel: NewsChannel, old: NewsChannel?, shard: Int, customContext: Any?)","dev.kord.core.event.channel.NewsChannelUpdateEvent.NewsChannelUpdateEvent"]},{"name":"fun NumberOptionValue(value: Double, focused: Boolean)","description":"dev.kord.core.entity.interaction.NumberOptionValue.NumberOptionValue","location":"core/dev.kord.core.entity.interaction/-number-option-value/-number-option-value.html","searchKeys":["NumberOptionValue","fun NumberOptionValue(value: Double, focused: Boolean)","dev.kord.core.entity.interaction.NumberOptionValue.NumberOptionValue"]},{"name":"fun OptionData(name: String, value: Optional<CommandArgument<Any?>> = Optional.Missing(), values: Optional<List<CommandArgument<Any?>>> = Optional.Missing(), subCommands: Optional<List<SubCommand>> = Optional.Missing(), focused: OptionalBoolean = OptionalBoolean.Missing)","description":"dev.kord.core.cache.data.OptionData.OptionData","location":"core/dev.kord.core.cache.data/-option-data/-option-data.html","searchKeys":["OptionData","fun OptionData(name: String, value: Optional<CommandArgument<Any?>> = Optional.Missing(), values: Optional<List<CommandArgument<Any?>>> = Optional.Missing(), subCommands: Optional<List<SubCommand>> = Optional.Missing(), focused: OptionalBoolean = OptionalBoolean.Missing)","dev.kord.core.cache.data.OptionData.OptionData"]},{"name":"fun OptionValue(value: CommandArgument<*>, resolvedObjects: ResolvedObjects?): OptionValue<*>","description":"dev.kord.core.entity.interaction.OptionValue","location":"core/dev.kord.core.entity.interaction/-option-value.html","searchKeys":["OptionValue","fun OptionValue(value: CommandArgument<*>, resolvedObjects: ResolvedObjects?): OptionValue<*>","dev.kord.core.entity.interaction.OptionValue"]},{"name":"fun PartialApplication(data: PartialApplicationData, kord: Kord, supplier: EntitySupplier = kord.defaultSupplier)","description":"dev.kord.core.entity.PartialApplication.PartialApplication","location":"core/dev.kord.core.entity/-partial-application/-partial-application.html","searchKeys":["PartialApplication","fun PartialApplication(data: PartialApplicationData, kord: Kord, supplier: EntitySupplier = kord.defaultSupplier)","dev.kord.core.entity.PartialApplication.PartialApplication"]},{"name":"fun PartialApplicationData(id: Snowflake, name: String, icon: String?, description: String, rpcOrigins: Optional<List<String>> = Optional.Missing(), termsOfServiceUrl: Optional<String> = Optional.Missing(), privacyPolicyUrl: Optional<String> = Optional.Missing(), ownerId: OptionalSnowflake = OptionalSnowflake.Missing, verifyKey: String, guildId: OptionalSnowflake = OptionalSnowflake.Missing, primarySkuId: OptionalSnowflake = OptionalSnowflake.Missing, slug: Optional<String> = Optional.Missing(), coverImage: Optional<String> = Optional.Missing(), flags: Optional<ApplicationFlags> = Optional.Missing(), tags: Optional<List<String>> = Optional.Missing(), installParams: Optional<InstallParams> = Optional.Missing(), customInstallUrl: Optional<String> = Optional.Missing())","description":"dev.kord.core.cache.data.PartialApplicationData.PartialApplicationData","location":"core/dev.kord.core.cache.data/-partial-application-data/-partial-application-data.html","searchKeys":["PartialApplicationData","fun PartialApplicationData(id: Snowflake, name: String, icon: String?, description: String, rpcOrigins: Optional<List<String>> = Optional.Missing(), termsOfServiceUrl: Optional<String> = Optional.Missing(), privacyPolicyUrl: Optional<String> = Optional.Missing(), ownerId: OptionalSnowflake = OptionalSnowflake.Missing, verifyKey: String, guildId: OptionalSnowflake = OptionalSnowflake.Missing, primarySkuId: OptionalSnowflake = OptionalSnowflake.Missing, slug: Optional<String> = Optional.Missing(), coverImage: Optional<String> = Optional.Missing(), flags: Optional<ApplicationFlags> = Optional.Missing(), tags: Optional<List<String>> = Optional.Missing(), installParams: Optional<InstallParams> = Optional.Missing(), customInstallUrl: Optional<String> = Optional.Missing())","dev.kord.core.cache.data.PartialApplicationData.PartialApplicationData"]},{"name":"fun PartialGuild(data: PartialGuildData, kord: Kord, supplier: EntitySupplier = kord.defaultSupplier)","description":"dev.kord.core.entity.PartialGuild.PartialGuild","location":"core/dev.kord.core.entity/-partial-guild/-partial-guild.html","searchKeys":["PartialGuild","fun PartialGuild(data: PartialGuildData, kord: Kord, supplier: EntitySupplier = kord.defaultSupplier)","dev.kord.core.entity.PartialGuild.PartialGuild"]},{"name":"fun PartialGuildData(id: Snowflake, name: String, icon: String? = null, owner: OptionalBoolean = OptionalBoolean.Missing, permissions: Optional<Permissions> = Optional.Missing(), features: List<GuildFeature>, welcomeScreen: Optional<WelcomeScreenData> = Optional.Missing(), vanityUrlCode: Optional<String?> = Optional.Missing(), description: Optional<String?> = Optional.Missing(), banner: Optional<String?> = Optional.Missing(), splash: Optional<String?> = Optional.Missing(), nsfwLevel: Optional<NsfwLevel> = Optional.Missing(), verificationLevel: Optional<VerificationLevel> = Optional.Missing(), stageInstances: Optional<List<StageInstanceData>> = Optional.Missing(), stickers: Optional<List<StickerData>> = Optional.Missing(), guildScheduledEvents: Optional<List<GuildScheduledEventData>> = Optional.Missing(), premiumProgressBarEnabled: OptionalBoolean = OptionalBoolean.Missing)","description":"dev.kord.core.cache.data.PartialGuildData.PartialGuildData","location":"core/dev.kord.core.cache.data/-partial-guild-data/-partial-guild-data.html","searchKeys":["PartialGuildData","fun PartialGuildData(id: Snowflake, name: String, icon: String? = null, owner: OptionalBoolean = OptionalBoolean.Missing, permissions: Optional<Permissions> = Optional.Missing(), features: List<GuildFeature>, welcomeScreen: Optional<WelcomeScreenData> = Optional.Missing(), vanityUrlCode: Optional<String?> = Optional.Missing(), description: Optional<String?> = Optional.Missing(), banner: Optional<String?> = Optional.Missing(), splash: Optional<String?> = Optional.Missing(), nsfwLevel: Optional<NsfwLevel> = Optional.Missing(), verificationLevel: Optional<VerificationLevel> = Optional.Missing(), stageInstances: Optional<List<StageInstanceData>> = Optional.Missing(), stickers: Optional<List<StickerData>> = Optional.Missing(), guildScheduledEvents: Optional<List<GuildScheduledEventData>> = Optional.Missing(), premiumProgressBarEnabled: OptionalBoolean = OptionalBoolean.Missing)","dev.kord.core.cache.data.PartialGuildData.PartialGuildData"]},{"name":"fun Party(id: String?, currentSize: Int?, maxSize: Int?)","description":"dev.kord.core.entity.Activity.Party.Party","location":"core/dev.kord.core.entity/-activity/-party/-party.html","searchKeys":["Party","fun Party(id: String?, currentSize: Int?, maxSize: Int?)","dev.kord.core.entity.Activity.Party.Party"]},{"name":"fun PermissionOverwrite(data: PermissionOverwriteData)","description":"dev.kord.core.entity.PermissionOverwrite.PermissionOverwrite","location":"core/dev.kord.core.entity/-permission-overwrite/-permission-overwrite.html","searchKeys":["PermissionOverwrite","fun PermissionOverwrite(data: PermissionOverwriteData)","dev.kord.core.entity.PermissionOverwrite.PermissionOverwrite"]},{"name":"fun PermissionOverwriteData(id: Snowflake, type: OverwriteType, allowed: Permissions, denied: Permissions)","description":"dev.kord.core.cache.data.PermissionOverwriteData.PermissionOverwriteData","location":"core/dev.kord.core.cache.data/-permission-overwrite-data/-permission-overwrite-data.html","searchKeys":["PermissionOverwriteData","fun PermissionOverwriteData(id: Snowflake, type: OverwriteType, allowed: Permissions, denied: Permissions)","dev.kord.core.cache.data.PermissionOverwriteData.PermissionOverwriteData"]},{"name":"fun PermissionOverwriteEntity(guildId: Snowflake, channelId: Snowflake, data: PermissionOverwriteData, kord: Kord, supplier: EntitySupplier = kord.defaultSupplier)","description":"dev.kord.core.entity.PermissionOverwriteEntity.PermissionOverwriteEntity","location":"core/dev.kord.core.entity/-permission-overwrite-entity/-permission-overwrite-entity.html","searchKeys":["PermissionOverwriteEntity","fun PermissionOverwriteEntity(guildId: Snowflake, channelId: Snowflake, data: PermissionOverwriteData, kord: Kord, supplier: EntitySupplier = kord.defaultSupplier)","dev.kord.core.entity.PermissionOverwriteEntity.PermissionOverwriteEntity"]},{"name":"fun PopupInteractionResponseBehavior(applicationId: Snowflake, token: String, kord: Kord, supplier: EntitySupplier = kord.defaultSupplier): PopupInteractionResponseBehavior","description":"dev.kord.core.behavior.interaction.response.PopupInteractionResponseBehavior","location":"core/dev.kord.core.behavior.interaction.response/-popup-interaction-response-behavior.html","searchKeys":["PopupInteractionResponseBehavior","fun PopupInteractionResponseBehavior(applicationId: Snowflake, token: String, kord: Kord, supplier: EntitySupplier = kord.defaultSupplier): PopupInteractionResponseBehavior","dev.kord.core.behavior.interaction.response.PopupInteractionResponseBehavior"]},{"name":"fun Presence(data: PresenceData, kord: Kord, supplier: EntitySupplier = kord.defaultSupplier)","description":"dev.kord.core.entity.Presence.Presence","location":"core/dev.kord.core.entity/-presence/-presence.html","searchKeys":["Presence","fun Presence(data: PresenceData, kord: Kord, supplier: EntitySupplier = kord.defaultSupplier)","dev.kord.core.entity.Presence.Presence"]},{"name":"fun PresenceData(userId: Snowflake, guildId: Snowflake, status: PresenceStatus, activities: List<ActivityData>, clientStatus: ClientStatusData)","description":"dev.kord.core.cache.data.PresenceData.PresenceData","location":"core/dev.kord.core.cache.data/-presence-data/-presence-data.html","searchKeys":["PresenceData","fun PresenceData(userId: Snowflake, guildId: Snowflake, status: PresenceStatus, activities: List<ActivityData>, clientStatus: ClientStatusData)","dev.kord.core.cache.data.PresenceData.PresenceData"]},{"name":"fun PresenceUpdateEvent(oldUser: User?, user: DiscordPresenceUser, guildId: Snowflake, old: Presence?, presence: Presence, shard: Int, customContext: Any?, supplier: EntitySupplier = presence.kord.defaultSupplier)","description":"dev.kord.core.event.user.PresenceUpdateEvent.PresenceUpdateEvent","location":"core/dev.kord.core.event.user/-presence-update-event/-presence-update-event.html","searchKeys":["PresenceUpdateEvent","fun PresenceUpdateEvent(oldUser: User?, user: DiscordPresenceUser, guildId: Snowflake, old: Presence?, presence: Presence, shard: Int, customContext: Any?, supplier: EntitySupplier = presence.kord.defaultSupplier)","dev.kord.core.event.user.PresenceUpdateEvent.PresenceUpdateEvent"]},{"name":"fun Provider(data: EmbedProviderData, kord: Kord)","description":"dev.kord.core.entity.Embed.Provider.Provider","location":"core/dev.kord.core.entity/-embed/-provider/-provider.html","searchKeys":["Provider","fun Provider(data: EmbedProviderData, kord: Kord)","dev.kord.core.entity.Embed.Provider.Provider"]},{"name":"fun PublicFollowupMessage(message: Message, applicationId: Snowflake, token: String, kord: Kord, supplier: EntitySupplier = kord.defaultSupplier)","description":"dev.kord.core.entity.interaction.followup.PublicFollowupMessage.PublicFollowupMessage","location":"core/dev.kord.core.entity.interaction.followup/-public-followup-message/-public-followup-message.html","searchKeys":["PublicFollowupMessage","fun PublicFollowupMessage(message: Message, applicationId: Snowflake, token: String, kord: Kord, supplier: EntitySupplier = kord.defaultSupplier)","dev.kord.core.entity.interaction.followup.PublicFollowupMessage.PublicFollowupMessage"]},{"name":"fun PublicFollowupMessageBehavior(id: Snowflake, applicationId: Snowflake, token: String, channelId: Snowflake, kord: Kord, supplier: EntitySupplier): PublicFollowupMessageBehavior","description":"dev.kord.core.behavior.interaction.followup.PublicFollowupMessageBehavior","location":"core/dev.kord.core.behavior.interaction.followup/-public-followup-message-behavior.html","searchKeys":["PublicFollowupMessageBehavior","fun PublicFollowupMessageBehavior(id: Snowflake, applicationId: Snowflake, token: String, channelId: Snowflake, kord: Kord, supplier: EntitySupplier): PublicFollowupMessageBehavior","dev.kord.core.behavior.interaction.followup.PublicFollowupMessageBehavior"]},{"name":"fun PublicMessageInteractionResponse(message: Message, applicationId: Snowflake, token: String, kord: Kord, supplier: EntitySupplier = kord.defaultSupplier)","description":"dev.kord.core.entity.interaction.response.PublicMessageInteractionResponse.PublicMessageInteractionResponse","location":"core/dev.kord.core.entity.interaction.response/-public-message-interaction-response/-public-message-interaction-response.html","searchKeys":["PublicMessageInteractionResponse","fun PublicMessageInteractionResponse(message: Message, applicationId: Snowflake, token: String, kord: Kord, supplier: EntitySupplier = kord.defaultSupplier)","dev.kord.core.entity.interaction.response.PublicMessageInteractionResponse.PublicMessageInteractionResponse"]},{"name":"fun PublicMessageInteractionResponseBehavior(applicationId: Snowflake, token: String, kord: Kord, supplier: EntitySupplier = kord.defaultSupplier): PublicMessageInteractionResponseBehavior","description":"dev.kord.core.behavior.interaction.response.PublicMessageInteractionResponseBehavior","location":"core/dev.kord.core.behavior.interaction.response/-public-message-interaction-response-behavior.html","searchKeys":["PublicMessageInteractionResponseBehavior","fun PublicMessageInteractionResponseBehavior(applicationId: Snowflake, token: String, kord: Kord, supplier: EntitySupplier = kord.defaultSupplier): PublicMessageInteractionResponseBehavior","dev.kord.core.behavior.interaction.response.PublicMessageInteractionResponseBehavior"]},{"name":"fun Reaction(data: ReactionData, kord: Kord)","description":"dev.kord.core.entity.Reaction.Reaction","location":"core/dev.kord.core.entity/-reaction/-reaction.html","searchKeys":["Reaction","fun Reaction(data: ReactionData, kord: Kord)","dev.kord.core.entity.Reaction.Reaction"]},{"name":"fun ReactionAddEvent(userId: Snowflake, channelId: Snowflake, messageId: Snowflake, guildId: Snowflake?, emoji: ReactionEmoji, kord: Kord, shard: Int, customContext: Any?, supplier: EntitySupplier = kord.defaultSupplier)","description":"dev.kord.core.event.message.ReactionAddEvent.ReactionAddEvent","location":"core/dev.kord.core.event.message/-reaction-add-event/-reaction-add-event.html","searchKeys":["ReactionAddEvent","fun ReactionAddEvent(userId: Snowflake, channelId: Snowflake, messageId: Snowflake, guildId: Snowflake?, emoji: ReactionEmoji, kord: Kord, shard: Int, customContext: Any?, supplier: EntitySupplier = kord.defaultSupplier)","dev.kord.core.event.message.ReactionAddEvent.ReactionAddEvent"]},{"name":"fun ReactionData(count: Int, me: Boolean, emojiId: Snowflake? = null, emojiName: String? = null, emojiAnimated: Boolean)","description":"dev.kord.core.cache.data.ReactionData.ReactionData","location":"core/dev.kord.core.cache.data/-reaction-data/-reaction-data.html","searchKeys":["ReactionData","fun ReactionData(count: Int, me: Boolean, emojiId: Snowflake? = null, emojiName: String? = null, emojiAnimated: Boolean)","dev.kord.core.cache.data.ReactionData.ReactionData"]},{"name":"fun ReactionRemoveAllEvent(channelId: Snowflake, messageId: Snowflake, guildId: Snowflake?, kord: Kord, shard: Int, customContext: Any?, supplier: EntitySupplier = kord.defaultSupplier)","description":"dev.kord.core.event.message.ReactionRemoveAllEvent.ReactionRemoveAllEvent","location":"core/dev.kord.core.event.message/-reaction-remove-all-event/-reaction-remove-all-event.html","searchKeys":["ReactionRemoveAllEvent","fun ReactionRemoveAllEvent(channelId: Snowflake, messageId: Snowflake, guildId: Snowflake?, kord: Kord, shard: Int, customContext: Any?, supplier: EntitySupplier = kord.defaultSupplier)","dev.kord.core.event.message.ReactionRemoveAllEvent.ReactionRemoveAllEvent"]},{"name":"fun ReactionRemoveEmojiData(channelId: Snowflake, guildId: Snowflake, messageId: Snowflake, emoji: RemovedReactionData)","description":"dev.kord.core.cache.data.ReactionRemoveEmojiData.ReactionRemoveEmojiData","location":"core/dev.kord.core.cache.data/-reaction-remove-emoji-data/-reaction-remove-emoji-data.html","searchKeys":["ReactionRemoveEmojiData","fun ReactionRemoveEmojiData(channelId: Snowflake, guildId: Snowflake, messageId: Snowflake, emoji: RemovedReactionData)","dev.kord.core.cache.data.ReactionRemoveEmojiData.ReactionRemoveEmojiData"]},{"name":"fun ReactionRemoveEmojiEvent(data: ReactionRemoveEmojiData, kord: Kord, shard: Int, customContext: Any?, supplier: EntitySupplier = kord.defaultSupplier)","description":"dev.kord.core.event.message.ReactionRemoveEmojiEvent.ReactionRemoveEmojiEvent","location":"core/dev.kord.core.event.message/-reaction-remove-emoji-event/-reaction-remove-emoji-event.html","searchKeys":["ReactionRemoveEmojiEvent","fun ReactionRemoveEmojiEvent(data: ReactionRemoveEmojiData, kord: Kord, shard: Int, customContext: Any?, supplier: EntitySupplier = kord.defaultSupplier)","dev.kord.core.event.message.ReactionRemoveEmojiEvent.ReactionRemoveEmojiEvent"]},{"name":"fun ReactionRemoveEvent(userId: Snowflake, channelId: Snowflake, messageId: Snowflake, guildId: Snowflake?, emoji: ReactionEmoji, kord: Kord, shard: Int, customContext: Any?, supplier: EntitySupplier = kord.defaultSupplier)","description":"dev.kord.core.event.message.ReactionRemoveEvent.ReactionRemoveEvent","location":"core/dev.kord.core.event.message/-reaction-remove-event/-reaction-remove-event.html","searchKeys":["ReactionRemoveEvent","fun ReactionRemoveEvent(userId: Snowflake, channelId: Snowflake, messageId: Snowflake, guildId: Snowflake?, emoji: ReactionEmoji, kord: Kord, shard: Int, customContext: Any?, supplier: EntitySupplier = kord.defaultSupplier)","dev.kord.core.event.message.ReactionRemoveEvent.ReactionRemoveEvent"]},{"name":"fun ReadyEvent(gatewayVersion: Int, guildIds: Set<Snowflake>, self: User, sessionId: String, resumeGatewayUrl: String, kord: Kord, shard: Int, customContext: Any?, supplier: EntitySupplier = kord.defaultSupplier)","description":"dev.kord.core.event.gateway.ReadyEvent.ReadyEvent","location":"core/dev.kord.core.event.gateway/-ready-event/-ready-event.html","searchKeys":["ReadyEvent","fun ReadyEvent(gatewayVersion: Int, guildIds: Set<Snowflake>, self: User, sessionId: String, resumeGatewayUrl: String, kord: Kord, shard: Int, customContext: Any?, supplier: EntitySupplier = kord.defaultSupplier)","dev.kord.core.event.gateway.ReadyEvent.ReadyEvent"]},{"name":"fun ReconnectingEvent(kord: Kord, shard: Int, customContext: Any?)","description":"dev.kord.core.event.gateway.DisconnectEvent.ReconnectingEvent.ReconnectingEvent","location":"core/dev.kord.core.event.gateway/-disconnect-event/-reconnecting-event/-reconnecting-event.html","searchKeys":["ReconnectingEvent","fun ReconnectingEvent(kord: Kord, shard: Int, customContext: Any?)","dev.kord.core.event.gateway.DisconnectEvent.ReconnectingEvent.ReconnectingEvent"]},{"name":"fun Region(data: RegionData, kord: Kord)","description":"dev.kord.core.entity.Region.Region","location":"core/dev.kord.core.entity/-region/-region.html","searchKeys":["Region","fun Region(data: RegionData, kord: Kord)","dev.kord.core.entity.Region.Region"]},{"name":"fun RegionData(id: String, guildId: OptionalSnowflake, name: String, optimal: Boolean, deprecated: Boolean, custom: Boolean)","description":"dev.kord.core.cache.data.RegionData.RegionData","location":"core/dev.kord.core.cache.data/-region-data/-region-data.html","searchKeys":["RegionData","fun RegionData(id: String, guildId: OptionalSnowflake, name: String, optimal: Boolean, deprecated: Boolean, custom: Boolean)","dev.kord.core.cache.data.RegionData.RegionData"]},{"name":"fun RemovedReactionData(id: Snowflake? = null, name: String?)","description":"dev.kord.core.cache.data.RemovedReactionData.RemovedReactionData","location":"core/dev.kord.core.cache.data/-removed-reaction-data/-removed-reaction-data.html","searchKeys":["RemovedReactionData","fun RemovedReactionData(id: Snowflake? = null, name: String?)","dev.kord.core.cache.data.RemovedReactionData.RemovedReactionData"]},{"name":"fun ResolvedChannel(data: ChannelData, kord: Kord, strategy: EntitySupplyStrategy<*> = kord.resources.defaultStrategy)","description":"dev.kord.core.entity.channel.ResolvedChannel.ResolvedChannel","location":"core/dev.kord.core.entity.channel/-resolved-channel/-resolved-channel.html","searchKeys":["ResolvedChannel","fun ResolvedChannel(data: ChannelData, kord: Kord, strategy: EntitySupplyStrategy<*> = kord.resources.defaultStrategy)","dev.kord.core.entity.channel.ResolvedChannel.ResolvedChannel"]},{"name":"fun ResolvedObjects(data: ResolvedObjectsData, kord: Kord, strategy: EntitySupplyStrategy<*> = kord.resources.defaultStrategy)","description":"dev.kord.core.entity.interaction.ResolvedObjects.ResolvedObjects","location":"core/dev.kord.core.entity.interaction/-resolved-objects/-resolved-objects.html","searchKeys":["ResolvedObjects","fun ResolvedObjects(data: ResolvedObjectsData, kord: Kord, strategy: EntitySupplyStrategy<*> = kord.resources.defaultStrategy)","dev.kord.core.entity.interaction.ResolvedObjects.ResolvedObjects"]},{"name":"fun ResolvedObjectsData(members: Optional<Map<Snowflake, MemberData>> = Optional.Missing(), users: Optional<Map<Snowflake, UserData>> = Optional.Missing(), roles: Optional<Map<Snowflake, RoleData>> = Optional.Missing(), channels: Optional<Map<Snowflake, ChannelData>> = Optional.Missing(), messages: Optional<Map<Snowflake, MessageData>> = Optional.Missing(), attachments: Optional<Map<Snowflake, AttachmentData>> = Optional.Missing())","description":"dev.kord.core.cache.data.ResolvedObjectsData.ResolvedObjectsData","location":"core/dev.kord.core.cache.data/-resolved-objects-data/-resolved-objects-data.html","searchKeys":["ResolvedObjectsData","fun ResolvedObjectsData(members: Optional<Map<Snowflake, MemberData>> = Optional.Missing(), users: Optional<Map<Snowflake, UserData>> = Optional.Missing(), roles: Optional<Map<Snowflake, RoleData>> = Optional.Missing(), channels: Optional<Map<Snowflake, ChannelData>> = Optional.Missing(), messages: Optional<Map<Snowflake, MessageData>> = Optional.Missing(), attachments: Optional<Map<Snowflake, AttachmentData>> = Optional.Missing())","dev.kord.core.cache.data.ResolvedObjectsData.ResolvedObjectsData"]},{"name":"fun RestEntitySupplier(kord: Kord)","description":"dev.kord.core.supplier.RestEntitySupplier.RestEntitySupplier","location":"core/dev.kord.core.supplier/-rest-entity-supplier/-rest-entity-supplier.html","searchKeys":["RestEntitySupplier","fun RestEntitySupplier(kord: Kord)","dev.kord.core.supplier.RestEntitySupplier.RestEntitySupplier"]},{"name":"fun RestOnlyBuilder()","description":"dev.kord.core.builder.kord.RestOnlyBuilder.RestOnlyBuilder","location":"core/dev.kord.core.builder.kord/-rest-only-builder/-rest-only-builder.html","searchKeys":["RestOnlyBuilder","fun RestOnlyBuilder()","dev.kord.core.builder.kord.RestOnlyBuilder.RestOnlyBuilder"]},{"name":"fun ResumedEvent(kord: Kord, shard: Int, customContext: Any?)","description":"dev.kord.core.event.gateway.ResumedEvent.ResumedEvent","location":"core/dev.kord.core.event.gateway/-resumed-event/-resumed-event.html","searchKeys":["ResumedEvent","fun ResumedEvent(kord: Kord, shard: Int, customContext: Any?)","dev.kord.core.event.gateway.ResumedEvent.ResumedEvent"]},{"name":"fun RetryLimitReachedEvent(kord: Kord, shard: Int, customContext: Any?)","description":"dev.kord.core.event.gateway.DisconnectEvent.RetryLimitReachedEvent.RetryLimitReachedEvent","location":"core/dev.kord.core.event.gateway/-disconnect-event/-retry-limit-reached-event/-retry-limit-reached-event.html","searchKeys":["RetryLimitReachedEvent","fun RetryLimitReachedEvent(kord: Kord, shard: Int, customContext: Any?)","dev.kord.core.event.gateway.DisconnectEvent.RetryLimitReachedEvent.RetryLimitReachedEvent"]},{"name":"fun Role(data: RoleData, kord: Kord, supplier: EntitySupplier = kord.defaultSupplier)","description":"dev.kord.core.entity.Role.Role","location":"core/dev.kord.core.entity/-role/-role.html","searchKeys":["Role","fun Role(data: RoleData, kord: Kord, supplier: EntitySupplier = kord.defaultSupplier)","dev.kord.core.entity.Role.Role"]},{"name":"fun Role.live(coroutineScope: CoroutineScope = kord + SupervisorJob(kord.coroutineContext.job)): LiveRole","description":"dev.kord.core.live.live","location":"core/dev.kord.core.live/live.html","searchKeys":["live","fun Role.live(coroutineScope: CoroutineScope = kord + SupervisorJob(kord.coroutineContext.job)): LiveRole","dev.kord.core.live.live"]},{"name":"fun RoleBehavior(guildId: Snowflake, id: Snowflake, kord: Kord, strategy: EntitySupplyStrategy<*> = kord.resources.defaultStrategy): RoleBehavior","description":"dev.kord.core.behavior.RoleBehavior","location":"core/dev.kord.core.behavior/-role-behavior.html","searchKeys":["RoleBehavior","fun RoleBehavior(guildId: Snowflake, id: Snowflake, kord: Kord, strategy: EntitySupplyStrategy<*> = kord.resources.defaultStrategy): RoleBehavior","dev.kord.core.behavior.RoleBehavior"]},{"name":"fun RoleCreateEvent(role: Role, shard: Int, customContext: Any?, supplier: EntitySupplier = role.kord.defaultSupplier)","description":"dev.kord.core.event.role.RoleCreateEvent.RoleCreateEvent","location":"core/dev.kord.core.event.role/-role-create-event/-role-create-event.html","searchKeys":["RoleCreateEvent","fun RoleCreateEvent(role: Role, shard: Int, customContext: Any?, supplier: EntitySupplier = role.kord.defaultSupplier)","dev.kord.core.event.role.RoleCreateEvent.RoleCreateEvent"]},{"name":"fun RoleData(id: Snowflake, guildId: Snowflake, name: String, color: Int, hoisted: Boolean, icon: Optional<String?>, unicodeEmoji: Optional<String?>, position: Int, permissions: Permissions, managed: Boolean, mentionable: Boolean, tags: Optional<RoleTagsData> = Optional.Missing())","description":"dev.kord.core.cache.data.RoleData.RoleData","location":"core/dev.kord.core.cache.data/-role-data/-role-data.html","searchKeys":["RoleData","fun RoleData(id: Snowflake, guildId: Snowflake, name: String, color: Int, hoisted: Boolean, icon: Optional<String?>, unicodeEmoji: Optional<String?>, position: Int, permissions: Permissions, managed: Boolean, mentionable: Boolean, tags: Optional<RoleTagsData> = Optional.Missing())","dev.kord.core.cache.data.RoleData.RoleData"]},{"name":"fun RoleDeleteEvent(guildId: Snowflake, roleId: Snowflake, role: Role?, kord: Kord, shard: Int, customContext: Any?, supplier: EntitySupplier = kord.defaultSupplier)","description":"dev.kord.core.event.role.RoleDeleteEvent.RoleDeleteEvent","location":"core/dev.kord.core.event.role/-role-delete-event/-role-delete-event.html","searchKeys":["RoleDeleteEvent","fun RoleDeleteEvent(guildId: Snowflake, roleId: Snowflake, role: Role?, kord: Kord, shard: Int, customContext: Any?, supplier: EntitySupplier = kord.defaultSupplier)","dev.kord.core.event.role.RoleDeleteEvent.RoleDeleteEvent"]},{"name":"fun RoleIcon(roleId: Snowflake, iconHash: String, kord: Kord)","description":"dev.kord.core.entity.Icon.RoleIcon.RoleIcon","location":"core/dev.kord.core.entity/-icon/-role-icon/-role-icon.html","searchKeys":["RoleIcon","fun RoleIcon(roleId: Snowflake, iconHash: String, kord: Kord)","dev.kord.core.entity.Icon.RoleIcon.RoleIcon"]},{"name":"fun RoleOptionValue(value: Snowflake, focused: Boolean, resolvedObject: Role?)","description":"dev.kord.core.entity.interaction.RoleOptionValue.RoleOptionValue","location":"core/dev.kord.core.entity.interaction/-role-option-value/-role-option-value.html","searchKeys":["RoleOptionValue","fun RoleOptionValue(value: Snowflake, focused: Boolean, resolvedObject: Role?)","dev.kord.core.entity.interaction.RoleOptionValue.RoleOptionValue"]},{"name":"fun RoleTags(data: RoleTagsData, guildId: Snowflake, kord: Kord, supplier: EntitySupplier = kord.defaultSupplier)","description":"dev.kord.core.entity.RoleTags.RoleTags","location":"core/dev.kord.core.entity/-role-tags/-role-tags.html","searchKeys":["RoleTags","fun RoleTags(data: RoleTagsData, guildId: Snowflake, kord: Kord, supplier: EntitySupplier = kord.defaultSupplier)","dev.kord.core.entity.RoleTags.RoleTags"]},{"name":"fun RoleTagsData(botId: OptionalSnowflake = OptionalSnowflake.Missing, integrationId: OptionalSnowflake = OptionalSnowflake.Missing, premiumSubscriber: Boolean)","description":"dev.kord.core.cache.data.RoleTagsData.RoleTagsData","location":"core/dev.kord.core.cache.data/-role-tags-data/-role-tags-data.html","searchKeys":["RoleTagsData","fun RoleTagsData(botId: OptionalSnowflake = OptionalSnowflake.Missing, integrationId: OptionalSnowflake = OptionalSnowflake.Missing, premiumSubscriber: Boolean)","dev.kord.core.cache.data.RoleTagsData.RoleTagsData"]},{"name":"fun RoleUpdateEvent(role: Role, old: Role?, shard: Int, customContext: Any?, supplier: EntitySupplier = role.kord.defaultSupplier)","description":"dev.kord.core.event.role.RoleUpdateEvent.RoleUpdateEvent","location":"core/dev.kord.core.event.role/-role-update-event/-role-update-event.html","searchKeys":["RoleUpdateEvent","fun RoleUpdateEvent(role: Role, old: Role?, shard: Int, customContext: Any?, supplier: EntitySupplier = role.kord.defaultSupplier)","dev.kord.core.event.role.RoleUpdateEvent.RoleUpdateEvent"]},{"name":"fun RootCommand(data: ApplicationInteractionData, kord: Kord)","description":"dev.kord.core.entity.interaction.RootCommand.RootCommand","location":"core/dev.kord.core.entity.interaction/-root-command/-root-command.html","searchKeys":["RootCommand","fun RootCommand(data: ApplicationInteractionData, kord: Kord)","dev.kord.core.entity.interaction.RootCommand.RootCommand"]},{"name":"fun Secrets(join: String?, spectate: String?, match: String?)","description":"dev.kord.core.entity.Activity.Secrets.Secrets","location":"core/dev.kord.core.entity/-activity/-secrets/-secrets.html","searchKeys":["Secrets","fun Secrets(join: String?, spectate: String?, match: String?)","dev.kord.core.entity.Activity.Secrets.Secrets"]},{"name":"fun SelectMenuComponent(data: ComponentData)","description":"dev.kord.core.entity.component.SelectMenuComponent.SelectMenuComponent","location":"core/dev.kord.core.entity.component/-select-menu-component/-select-menu-component.html","searchKeys":["SelectMenuComponent","fun SelectMenuComponent(data: ComponentData)","dev.kord.core.entity.component.SelectMenuComponent.SelectMenuComponent"]},{"name":"fun SelectOption(data: SelectOptionData)","description":"dev.kord.core.entity.component.SelectOption.SelectOption","location":"core/dev.kord.core.entity.component/-select-option/-select-option.html","searchKeys":["SelectOption","fun SelectOption(data: SelectOptionData)","dev.kord.core.entity.component.SelectOption.SelectOption"]},{"name":"fun SelectOptionData(label: String, value: String, description: Optional<String> = Optional.Missing(), emoji: Optional<DiscordPartialEmoji> = Optional.Missing(), default: OptionalBoolean = OptionalBoolean.Missing)","description":"dev.kord.core.cache.data.SelectOptionData.SelectOptionData","location":"core/dev.kord.core.cache.data/-select-option-data/-select-option-data.html","searchKeys":["SelectOptionData","fun SelectOptionData(label: String, value: String, description: Optional<String> = Optional.Missing(), emoji: Optional<DiscordPartialEmoji> = Optional.Missing(), default: OptionalBoolean = OptionalBoolean.Missing)","dev.kord.core.cache.data.SelectOptionData.SelectOptionData"]},{"name":"fun SendAlertMessageAutoModerationAction(data: AutoModerationActionData, kord: Kord)","description":"dev.kord.core.entity.automoderation.SendAlertMessageAutoModerationAction.SendAlertMessageAutoModerationAction","location":"core/dev.kord.core.entity.automoderation/-send-alert-message-auto-moderation-action/-send-alert-message-auto-moderation-action.html","searchKeys":["SendAlertMessageAutoModerationAction","fun SendAlertMessageAutoModerationAction(data: AutoModerationActionData, kord: Kord)","dev.kord.core.entity.automoderation.SendAlertMessageAutoModerationAction.SendAlertMessageAutoModerationAction"]},{"name":"fun SessionReset(kord: Kord, shard: Int, customContext: Any?)","description":"dev.kord.core.event.gateway.DisconnectEvent.SessionReset.SessionReset","location":"core/dev.kord.core.event.gateway/-disconnect-event/-session-reset/-session-reset.html","searchKeys":["SessionReset","fun SessionReset(kord: Kord, shard: Int, customContext: Any?)","dev.kord.core.event.gateway.DisconnectEvent.SessionReset.SessionReset"]},{"name":"fun ShardEvent(event: Event, gateway: Gateway, shard: Int)","description":"dev.kord.core.gateway.ShardEvent.ShardEvent","location":"core/dev.kord.core.gateway/-shard-event/-shard-event.html","searchKeys":["ShardEvent","fun ShardEvent(event: Event, gateway: Gateway, shard: Int)","dev.kord.core.gateway.ShardEvent.ShardEvent"]},{"name":"fun SpamAutoModerationRule(data: AutoModerationRuleData, kord: Kord, supplier: EntitySupplier)","description":"dev.kord.core.entity.automoderation.SpamAutoModerationRule.SpamAutoModerationRule","location":"core/dev.kord.core.entity.automoderation/-spam-auto-moderation-rule/-spam-auto-moderation-rule.html","searchKeys":["SpamAutoModerationRule","fun SpamAutoModerationRule(data: AutoModerationRuleData, kord: Kord, supplier: EntitySupplier)","dev.kord.core.entity.automoderation.SpamAutoModerationRule.SpamAutoModerationRule"]},{"name":"fun StageChannel(data: ChannelData, kord: Kord, supplier: EntitySupplier = kord.defaultSupplier)","description":"dev.kord.core.entity.channel.StageChannel.StageChannel","location":"core/dev.kord.core.entity.channel/-stage-channel/-stage-channel.html","searchKeys":["StageChannel","fun StageChannel(data: ChannelData, kord: Kord, supplier: EntitySupplier = kord.defaultSupplier)","dev.kord.core.entity.channel.StageChannel.StageChannel"]},{"name":"fun StageChannelBehavior(id: Snowflake, guildId: Snowflake, kord: Kord, supplier: EntitySupplier = kord.defaultSupplier): StageChannelBehavior","description":"dev.kord.core.behavior.channel.StageChannelBehavior","location":"core/dev.kord.core.behavior.channel/-stage-channel-behavior.html","searchKeys":["StageChannelBehavior","fun StageChannelBehavior(id: Snowflake, guildId: Snowflake, kord: Kord, supplier: EntitySupplier = kord.defaultSupplier): StageChannelBehavior","dev.kord.core.behavior.channel.StageChannelBehavior"]},{"name":"fun StageChannelCreateEvent(channel: StageChannel, shard: Int, customContext: Any?)","description":"dev.kord.core.event.channel.StageChannelCreateEvent.StageChannelCreateEvent","location":"core/dev.kord.core.event.channel/-stage-channel-create-event/-stage-channel-create-event.html","searchKeys":["StageChannelCreateEvent","fun StageChannelCreateEvent(channel: StageChannel, shard: Int, customContext: Any?)","dev.kord.core.event.channel.StageChannelCreateEvent.StageChannelCreateEvent"]},{"name":"fun StageChannelDeleteEvent(channel: StageChannel, shard: Int, customContext: Any?)","description":"dev.kord.core.event.channel.StageChannelDeleteEvent.StageChannelDeleteEvent","location":"core/dev.kord.core.event.channel/-stage-channel-delete-event/-stage-channel-delete-event.html","searchKeys":["StageChannelDeleteEvent","fun StageChannelDeleteEvent(channel: StageChannel, shard: Int, customContext: Any?)","dev.kord.core.event.channel.StageChannelDeleteEvent.StageChannelDeleteEvent"]},{"name":"fun StageChannelUpdateEvent(channel: StageChannel, old: StageChannel?, shard: Int, customContext: Any?)","description":"dev.kord.core.event.channel.StageChannelUpdateEvent.StageChannelUpdateEvent","location":"core/dev.kord.core.event.channel/-stage-channel-update-event/-stage-channel-update-event.html","searchKeys":["StageChannelUpdateEvent","fun StageChannelUpdateEvent(channel: StageChannel, old: StageChannel?, shard: Int, customContext: Any?)","dev.kord.core.event.channel.StageChannelUpdateEvent.StageChannelUpdateEvent"]},{"name":"fun StageInstance(data: StageInstanceData, kord: Kord, supplier: EntitySupplier = kord.defaultSupplier)","description":"dev.kord.core.entity.StageInstance.StageInstance","location":"core/dev.kord.core.entity/-stage-instance/-stage-instance.html","searchKeys":["StageInstance","fun StageInstance(data: StageInstanceData, kord: Kord, supplier: EntitySupplier = kord.defaultSupplier)","dev.kord.core.entity.StageInstance.StageInstance"]},{"name":"fun StageInstanceData(id: Snowflake, guildId: Snowflake, channelId: Snowflake, topic: String, privacyLevel: StageInstancePrivacyLevel, guildScheduledEventId: Snowflake?)","description":"dev.kord.core.cache.data.StageInstanceData.StageInstanceData","location":"core/dev.kord.core.cache.data/-stage-instance-data/-stage-instance-data.html","searchKeys":["StageInstanceData","fun StageInstanceData(id: Snowflake, guildId: Snowflake, channelId: Snowflake, topic: String, privacyLevel: StageInstancePrivacyLevel, guildScheduledEventId: Snowflake?)","dev.kord.core.cache.data.StageInstanceData.StageInstanceData"]},{"name":"fun Sticker(data: StickerData, kord: Kord)","description":"dev.kord.core.entity.Sticker.Sticker","location":"core/dev.kord.core.entity/-sticker/-sticker.html","searchKeys":["Sticker","fun Sticker(data: StickerData, kord: Kord)","dev.kord.core.entity.Sticker.Sticker"]},{"name":"fun StickerBehavior(guildId: Snowflake, id: Snowflake, kord: Kord, supplier: EntitySupplier): StickerBehavior","description":"dev.kord.core.behavior.StickerBehavior","location":"core/dev.kord.core.behavior/-sticker-behavior.html","searchKeys":["StickerBehavior","fun StickerBehavior(guildId: Snowflake, id: Snowflake, kord: Kord, supplier: EntitySupplier): StickerBehavior","dev.kord.core.behavior.StickerBehavior"]},{"name":"fun StickerData(id: Snowflake, packId: OptionalSnowflake = OptionalSnowflake.Missing, name: String, description: String?, tags: Optional<String> = Optional.Missing(), formatType: MessageStickerType, available: OptionalBoolean = OptionalBoolean.Missing, guildId: OptionalSnowflake = OptionalSnowflake.Missing, user: Optional<UserData> = Optional.Missing(), sortValue: OptionalInt = OptionalInt.Missing)","description":"dev.kord.core.cache.data.StickerData.StickerData","location":"core/dev.kord.core.cache.data/-sticker-data/-sticker-data.html","searchKeys":["StickerData","fun StickerData(id: Snowflake, packId: OptionalSnowflake = OptionalSnowflake.Missing, name: String, description: String?, tags: Optional<String> = Optional.Missing(), formatType: MessageStickerType, available: OptionalBoolean = OptionalBoolean.Missing, guildId: OptionalSnowflake = OptionalSnowflake.Missing, user: Optional<UserData> = Optional.Missing(), sortValue: OptionalInt = OptionalInt.Missing)","dev.kord.core.cache.data.StickerData.StickerData"]},{"name":"fun StickerItem(data: StickerItemData, kord: Kord, supplier: EntitySupplier = kord.defaultSupplier)","description":"dev.kord.core.entity.StickerItem.StickerItem","location":"core/dev.kord.core.entity/-sticker-item/-sticker-item.html","searchKeys":["StickerItem","fun StickerItem(data: StickerItemData, kord: Kord, supplier: EntitySupplier = kord.defaultSupplier)","dev.kord.core.entity.StickerItem.StickerItem"]},{"name":"fun StickerItemData(id: Snowflake, name: String, formatType: MessageStickerType)","description":"dev.kord.core.cache.data.StickerItemData.StickerItemData","location":"core/dev.kord.core.cache.data/-sticker-item-data/-sticker-item-data.html","searchKeys":["StickerItemData","fun StickerItemData(id: Snowflake, name: String, formatType: MessageStickerType)","dev.kord.core.cache.data.StickerItemData.StickerItemData"]},{"name":"fun StickerPack(data: StickerPackData, kord: Kord)","description":"dev.kord.core.entity.StickerPack.StickerPack","location":"core/dev.kord.core.entity/-sticker-pack/-sticker-pack.html","searchKeys":["StickerPack","fun StickerPack(data: StickerPackData, kord: Kord)","dev.kord.core.entity.StickerPack.StickerPack"]},{"name":"fun StickerPackData(id: Snowflake, stickers: List<StickerData>, name: String, skuId: Snowflake, coverStickerId: OptionalSnowflake = OptionalSnowflake.Missing, description: String, bannerAssetId: Snowflake)","description":"dev.kord.core.cache.data.StickerPackData.StickerPackData","location":"core/dev.kord.core.cache.data/-sticker-pack-data/-sticker-pack-data.html","searchKeys":["StickerPackData","fun StickerPackData(id: Snowflake, stickers: List<StickerData>, name: String, skuId: Snowflake, coverStickerId: OptionalSnowflake = OptionalSnowflake.Missing, description: String, bannerAssetId: Snowflake)","dev.kord.core.cache.data.StickerPackData.StickerPackData"]},{"name":"fun StoreEntitySupplier(supplier: EntitySupplier, cache: DataCache)","description":"dev.kord.core.supplier.StoreEntitySupplier.StoreEntitySupplier","location":"core/dev.kord.core.supplier/-store-entity-supplier/-store-entity-supplier.html","searchKeys":["StoreEntitySupplier","fun StoreEntitySupplier(supplier: EntitySupplier, cache: DataCache)","dev.kord.core.supplier.StoreEntitySupplier.StoreEntitySupplier"]},{"name":"fun StringOptionValue(value: String, focused: Boolean)","description":"dev.kord.core.entity.interaction.StringOptionValue.StringOptionValue","location":"core/dev.kord.core.entity.interaction/-string-option-value/-string-option-value.html","searchKeys":["StringOptionValue","fun StringOptionValue(value: String, focused: Boolean)","dev.kord.core.entity.interaction.StringOptionValue.StringOptionValue"]},{"name":"fun SubCommand(data: ApplicationInteractionData, kord: Kord)","description":"dev.kord.core.entity.interaction.SubCommand.SubCommand","location":"core/dev.kord.core.entity.interaction/-sub-command/-sub-command.html","searchKeys":["SubCommand","fun SubCommand(data: ApplicationInteractionData, kord: Kord)","dev.kord.core.entity.interaction.SubCommand.SubCommand"]},{"name":"fun Team(data: TeamData, kord: Kord, supplier: EntitySupplier = kord.defaultSupplier)","description":"dev.kord.core.entity.Team.Team","location":"core/dev.kord.core.entity/-team/-team.html","searchKeys":["Team","fun Team(data: TeamData, kord: Kord, supplier: EntitySupplier = kord.defaultSupplier)","dev.kord.core.entity.Team.Team"]},{"name":"fun TeamData(id: Snowflake, icon: String? = null, members: List<TeamMemberData>, ownerUserId: Snowflake)","description":"dev.kord.core.cache.data.TeamData.TeamData","location":"core/dev.kord.core.cache.data/-team-data/-team-data.html","searchKeys":["TeamData","fun TeamData(id: Snowflake, icon: String? = null, members: List<TeamMemberData>, ownerUserId: Snowflake)","dev.kord.core.cache.data.TeamData.TeamData"]},{"name":"fun TeamMember(data: TeamMemberData, kord: Kord)","description":"dev.kord.core.entity.TeamMember.TeamMember","location":"core/dev.kord.core.entity/-team-member/-team-member.html","searchKeys":["TeamMember","fun TeamMember(data: TeamMemberData, kord: Kord)","dev.kord.core.entity.TeamMember.TeamMember"]},{"name":"fun TeamMemberData(membershipState: TeamMembershipState, permissions: List<String>, teamId: Snowflake, userId: Snowflake)","description":"dev.kord.core.cache.data.TeamMemberData.TeamMemberData","location":"core/dev.kord.core.cache.data/-team-member-data/-team-member-data.html","searchKeys":["TeamMemberData","fun TeamMemberData(membershipState: TeamMembershipState, permissions: List<String>, teamId: Snowflake, userId: Snowflake)","dev.kord.core.cache.data.TeamMemberData.TeamMemberData"]},{"name":"fun Template(data: TemplateData, kord: Kord)","description":"dev.kord.core.entity.Template.Template","location":"core/dev.kord.core.entity/-template/-template.html","searchKeys":["Template","fun Template(data: TemplateData, kord: Kord)","dev.kord.core.entity.Template.Template"]},{"name":"fun TemplateBehavior(guildId: Snowflake, code: String, kord: Kord): TemplateBehavior","description":"dev.kord.core.behavior.TemplateBehavior","location":"core/dev.kord.core.behavior/-template-behavior.html","searchKeys":["TemplateBehavior","fun TemplateBehavior(guildId: Snowflake, code: String, kord: Kord): TemplateBehavior","dev.kord.core.behavior.TemplateBehavior"]},{"name":"fun TemplateData(code: String, name: String, description: String?, usageCount: Int, creatorId: Snowflake, creator: UserData, createdAt: Instant, updatedAt: Instant, sourceGuildId: Snowflake, serializedSourceGuild: PartialGuildData, isDirty: Boolean?)","description":"dev.kord.core.cache.data.TemplateData.TemplateData","location":"core/dev.kord.core.cache.data/-template-data/-template-data.html","searchKeys":["TemplateData","fun TemplateData(code: String, name: String, description: String?, usageCount: Int, creatorId: Snowflake, creator: UserData, createdAt: Instant, updatedAt: Instant, sourceGuildId: Snowflake, serializedSourceGuild: PartialGuildData, isDirty: Boolean?)","dev.kord.core.cache.data.TemplateData.TemplateData"]},{"name":"fun TextChannel(data: ChannelData, kord: Kord, supplier: EntitySupplier = kord.defaultSupplier)","description":"dev.kord.core.entity.channel.TextChannel.TextChannel","location":"core/dev.kord.core.entity.channel/-text-channel/-text-channel.html","searchKeys":["TextChannel","fun TextChannel(data: ChannelData, kord: Kord, supplier: EntitySupplier = kord.defaultSupplier)","dev.kord.core.entity.channel.TextChannel.TextChannel"]},{"name":"fun TextChannelBehavior(guildId: Snowflake, id: Snowflake, kord: Kord, strategy: EntitySupplyStrategy<*> = kord.resources.defaultStrategy): TextChannelBehavior","description":"dev.kord.core.behavior.channel.TextChannelBehavior","location":"core/dev.kord.core.behavior.channel/-text-channel-behavior.html","searchKeys":["TextChannelBehavior","fun TextChannelBehavior(guildId: Snowflake, id: Snowflake, kord: Kord, strategy: EntitySupplyStrategy<*> = kord.resources.defaultStrategy): TextChannelBehavior","dev.kord.core.behavior.channel.TextChannelBehavior"]},{"name":"fun TextChannelCreateEvent(channel: TextChannel, shard: Int, customContext: Any?)","description":"dev.kord.core.event.channel.TextChannelCreateEvent.TextChannelCreateEvent","location":"core/dev.kord.core.event.channel/-text-channel-create-event/-text-channel-create-event.html","searchKeys":["TextChannelCreateEvent","fun TextChannelCreateEvent(channel: TextChannel, shard: Int, customContext: Any?)","dev.kord.core.event.channel.TextChannelCreateEvent.TextChannelCreateEvent"]},{"name":"fun TextChannelDeleteEvent(channel: TextChannel, shard: Int, customContext: Any?)","description":"dev.kord.core.event.channel.TextChannelDeleteEvent.TextChannelDeleteEvent","location":"core/dev.kord.core.event.channel/-text-channel-delete-event/-text-channel-delete-event.html","searchKeys":["TextChannelDeleteEvent","fun TextChannelDeleteEvent(channel: TextChannel, shard: Int, customContext: Any?)","dev.kord.core.event.channel.TextChannelDeleteEvent.TextChannelDeleteEvent"]},{"name":"fun TextChannelThread(data: ChannelData, kord: Kord, supplier: EntitySupplier = kord.defaultSupplier)","description":"dev.kord.core.entity.channel.thread.TextChannelThread.TextChannelThread","location":"core/dev.kord.core.entity.channel.thread/-text-channel-thread/-text-channel-thread.html","searchKeys":["TextChannelThread","fun TextChannelThread(data: ChannelData, kord: Kord, supplier: EntitySupplier = kord.defaultSupplier)","dev.kord.core.entity.channel.thread.TextChannelThread.TextChannelThread"]},{"name":"fun TextChannelThreadCreateEvent(channel: TextChannelThread, shard: Int, customContext: Any?)","description":"dev.kord.core.event.channel.thread.TextChannelThreadCreateEvent.TextChannelThreadCreateEvent","location":"core/dev.kord.core.event.channel.thread/-text-channel-thread-create-event/-text-channel-thread-create-event.html","searchKeys":["TextChannelThreadCreateEvent","fun TextChannelThreadCreateEvent(channel: TextChannelThread, shard: Int, customContext: Any?)","dev.kord.core.event.channel.thread.TextChannelThreadCreateEvent.TextChannelThreadCreateEvent"]},{"name":"fun TextChannelThreadDeleteEvent(channel: DeletedThreadChannel, old: TextChannelThread?, shard: Int, customContext: Any?)","description":"dev.kord.core.event.channel.thread.TextChannelThreadDeleteEvent.TextChannelThreadDeleteEvent","location":"core/dev.kord.core.event.channel.thread/-text-channel-thread-delete-event/-text-channel-thread-delete-event.html","searchKeys":["TextChannelThreadDeleteEvent","fun TextChannelThreadDeleteEvent(channel: DeletedThreadChannel, old: TextChannelThread?, shard: Int, customContext: Any?)","dev.kord.core.event.channel.thread.TextChannelThreadDeleteEvent.TextChannelThreadDeleteEvent"]},{"name":"fun TextChannelThreadUpdateEvent(channel: TextChannelThread, old: TextChannelThread?, shard: Int, customContext: Any?)","description":"dev.kord.core.event.channel.thread.TextChannelThreadUpdateEvent.TextChannelThreadUpdateEvent","location":"core/dev.kord.core.event.channel.thread/-text-channel-thread-update-event/-text-channel-thread-update-event.html","searchKeys":["TextChannelThreadUpdateEvent","fun TextChannelThreadUpdateEvent(channel: TextChannelThread, old: TextChannelThread?, shard: Int, customContext: Any?)","dev.kord.core.event.channel.thread.TextChannelThreadUpdateEvent.TextChannelThreadUpdateEvent"]},{"name":"fun TextChannelUpdateEvent(channel: TextChannel, old: TextChannel?, shard: Int, customContext: Any?)","description":"dev.kord.core.event.channel.TextChannelUpdateEvent.TextChannelUpdateEvent","location":"core/dev.kord.core.event.channel/-text-channel-update-event/-text-channel-update-event.html","searchKeys":["TextChannelUpdateEvent","fun TextChannelUpdateEvent(channel: TextChannel, old: TextChannel?, shard: Int, customContext: Any?)","dev.kord.core.event.channel.TextChannelUpdateEvent.TextChannelUpdateEvent"]},{"name":"fun TextInputComponent(data: TextInputComponentData)","description":"dev.kord.core.entity.component.TextInputComponent.TextInputComponent","location":"core/dev.kord.core.entity.component/-text-input-component/-text-input-component.html","searchKeys":["TextInputComponent","fun TextInputComponent(data: TextInputComponentData)","dev.kord.core.entity.component.TextInputComponent.TextInputComponent"]},{"name":"fun TextInputComponentData(type: ComponentType, style: Optional<TextInputStyle> = Optional.Missing(), label: Optional<String> = Optional.Missing(), emoji: Optional<DiscordPartialEmoji> = Optional.Missing(), customId: Optional<String> = Optional.Missing(), url: Optional<String> = Optional.Missing(), disabled: OptionalBoolean = OptionalBoolean.Missing, components: Optional<List<ComponentData>> = Optional.Missing(), placeholder: Optional<String> = Optional.Missing(), minValues: OptionalInt = OptionalInt.Missing, maxValues: OptionalInt = OptionalInt.Missing, options: Optional<List<SelectOptionData>> = Optional.Missing(), minLength: OptionalInt = OptionalInt.Missing, maxLength: OptionalInt = OptionalInt.Missing, required: OptionalBoolean = OptionalBoolean.Missing, value: Optional<String> = Optional.Missing())","description":"dev.kord.core.cache.data.TextInputComponentData.TextInputComponentData","location":"core/dev.kord.core.cache.data/-text-input-component-data/-text-input-component-data.html","searchKeys":["TextInputComponentData","fun TextInputComponentData(type: ComponentType, style: Optional<TextInputStyle> = Optional.Missing(), label: Optional<String> = Optional.Missing(), emoji: Optional<DiscordPartialEmoji> = Optional.Missing(), customId: Optional<String> = Optional.Missing(), url: Optional<String> = Optional.Missing(), disabled: OptionalBoolean = OptionalBoolean.Missing, components: Optional<List<ComponentData>> = Optional.Missing(), placeholder: Optional<String> = Optional.Missing(), minValues: OptionalInt = OptionalInt.Missing, maxValues: OptionalInt = OptionalInt.Missing, options: Optional<List<SelectOptionData>> = Optional.Missing(), minLength: OptionalInt = OptionalInt.Missing, maxLength: OptionalInt = OptionalInt.Missing, required: OptionalBoolean = OptionalBoolean.Missing, value: Optional<String> = Optional.Missing())","dev.kord.core.cache.data.TextInputComponentData.TextInputComponentData"]},{"name":"fun ThreadListSyncData(guildId: Snowflake, channelIds: Optional<List<Snowflake>> = Optional.Missing(), threads: List<ChannelData>, members: List<ThreadMemberData>)","description":"dev.kord.core.cache.data.ThreadListSyncData.ThreadListSyncData","location":"core/dev.kord.core.cache.data/-thread-list-sync-data/-thread-list-sync-data.html","searchKeys":["ThreadListSyncData","fun ThreadListSyncData(guildId: Snowflake, channelIds: Optional<List<Snowflake>> = Optional.Missing(), threads: List<ChannelData>, members: List<ThreadMemberData>)","dev.kord.core.cache.data.ThreadListSyncData.ThreadListSyncData"]},{"name":"fun ThreadListSyncEvent(data: ThreadListSyncData, kord: Kord, shard: Int, customContext: Any?, supplier: EntitySupplier = kord.defaultSupplier)","description":"dev.kord.core.event.channel.thread.ThreadListSyncEvent.ThreadListSyncEvent","location":"core/dev.kord.core.event.channel.thread/-thread-list-sync-event/-thread-list-sync-event.html","searchKeys":["ThreadListSyncEvent","fun ThreadListSyncEvent(data: ThreadListSyncData, kord: Kord, shard: Int, customContext: Any?, supplier: EntitySupplier = kord.defaultSupplier)","dev.kord.core.event.channel.thread.ThreadListSyncEvent.ThreadListSyncEvent"]},{"name":"fun ThreadMember(data: ThreadMemberData, kord: Kord, supplier: EntitySupplier = kord.defaultSupplier)","description":"dev.kord.core.entity.channel.thread.ThreadMember.ThreadMember","location":"core/dev.kord.core.entity.channel.thread/-thread-member/-thread-member.html","searchKeys":["ThreadMember","fun ThreadMember(data: ThreadMemberData, kord: Kord, supplier: EntitySupplier = kord.defaultSupplier)","dev.kord.core.entity.channel.thread.ThreadMember.ThreadMember"]},{"name":"fun ThreadMemberBehavior(id: Snowflake, threadId: Snowflake, kord: Kord, supplier: EntitySupplier = kord.defaultSupplier): ThreadMemberBehavior","description":"dev.kord.core.behavior.ThreadMemberBehavior","location":"core/dev.kord.core.behavior/-thread-member-behavior.html","searchKeys":["ThreadMemberBehavior","fun ThreadMemberBehavior(id: Snowflake, threadId: Snowflake, kord: Kord, supplier: EntitySupplier = kord.defaultSupplier): ThreadMemberBehavior","dev.kord.core.behavior.ThreadMemberBehavior"]},{"name":"fun ThreadMemberData(id: Snowflake, userId: OptionalSnowflake = OptionalSnowflake.Missing, joinTimestamp: Instant, flags: Int)","description":"dev.kord.core.cache.data.ThreadMemberData.ThreadMemberData","location":"core/dev.kord.core.cache.data/-thread-member-data/-thread-member-data.html","searchKeys":["ThreadMemberData","fun ThreadMemberData(id: Snowflake, userId: OptionalSnowflake = OptionalSnowflake.Missing, joinTimestamp: Instant, flags: Int)","dev.kord.core.cache.data.ThreadMemberData.ThreadMemberData"]},{"name":"fun ThreadMemberUpdateEvent(member: ThreadMember, kord: Kord, shard: Int, customContext: Any?)","description":"dev.kord.core.event.channel.thread.ThreadMemberUpdateEvent.ThreadMemberUpdateEvent","location":"core/dev.kord.core.event.channel.thread/-thread-member-update-event/-thread-member-update-event.html","searchKeys":["ThreadMemberUpdateEvent","fun ThreadMemberUpdateEvent(member: ThreadMember, kord: Kord, shard: Int, customContext: Any?)","dev.kord.core.event.channel.thread.ThreadMemberUpdateEvent.ThreadMemberUpdateEvent"]},{"name":"fun ThreadMembersUpdateEvent(data: ThreadMembersUpdateEventData, kord: Kord, shard: Int, customContext: Any?)","description":"dev.kord.core.event.channel.thread.ThreadMembersUpdateEvent.ThreadMembersUpdateEvent","location":"core/dev.kord.core.event.channel.thread/-thread-members-update-event/-thread-members-update-event.html","searchKeys":["ThreadMembersUpdateEvent","fun ThreadMembersUpdateEvent(data: ThreadMembersUpdateEventData, kord: Kord, shard: Int, customContext: Any?)","dev.kord.core.event.channel.thread.ThreadMembersUpdateEvent.ThreadMembersUpdateEvent"]},{"name":"fun ThreadMembersUpdateEventData(id: Snowflake, guildId: Snowflake, memberCount: Int, addedMembers: Optional<List<ThreadMemberData>> = Optional.Missing(), removedMemberIds: Optional<List<Snowflake>> = Optional.Missing())","description":"dev.kord.core.cache.data.ThreadMembersUpdateEventData.ThreadMembersUpdateEventData","location":"core/dev.kord.core.cache.data/-thread-members-update-event-data/-thread-members-update-event-data.html","searchKeys":["ThreadMembersUpdateEventData","fun ThreadMembersUpdateEventData(id: Snowflake, guildId: Snowflake, memberCount: Int, addedMembers: Optional<List<ThreadMemberData>> = Optional.Missing(), removedMemberIds: Optional<List<Snowflake>> = Optional.Missing())","dev.kord.core.cache.data.ThreadMembersUpdateEventData.ThreadMembersUpdateEventData"]},{"name":"fun ThreadMetadataData(archived: Boolean, archiveTimestamp: Instant, autoArchiveDuration: ArchiveDuration, locked: OptionalBoolean = OptionalBoolean.Missing, invitable: OptionalBoolean = OptionalBoolean.Missing, createTimestamp: Optional<Instant?> = Optional.Missing())","description":"dev.kord.core.cache.data.ThreadMetadataData.ThreadMetadataData","location":"core/dev.kord.core.cache.data/-thread-metadata-data/-thread-metadata-data.html","searchKeys":["ThreadMetadataData","fun ThreadMetadataData(archived: Boolean, archiveTimestamp: Instant, autoArchiveDuration: ArchiveDuration, locked: OptionalBoolean = OptionalBoolean.Missing, invitable: OptionalBoolean = OptionalBoolean.Missing, createTimestamp: Optional<Instant?> = Optional.Missing())","dev.kord.core.cache.data.ThreadMetadataData.ThreadMetadataData"]},{"name":"fun Thumbnail(data: EmbedThumbnailData, kord: Kord)","description":"dev.kord.core.entity.Embed.Thumbnail.Thumbnail","location":"core/dev.kord.core.entity/-embed/-thumbnail/-thumbnail.html","searchKeys":["Thumbnail","fun Thumbnail(data: EmbedThumbnailData, kord: Kord)","dev.kord.core.entity.Embed.Thumbnail.Thumbnail"]},{"name":"fun TimeoutAutoModerationAction(data: AutoModerationActionData, kord: Kord)","description":"dev.kord.core.entity.automoderation.TimeoutAutoModerationAction.TimeoutAutoModerationAction","location":"core/dev.kord.core.entity.automoderation/-timeout-auto-moderation-action/-timeout-auto-moderation-action.html","searchKeys":["TimeoutAutoModerationAction","fun TimeoutAutoModerationAction(data: AutoModerationActionData, kord: Kord)","dev.kord.core.entity.automoderation.TimeoutAutoModerationAction.TimeoutAutoModerationAction"]},{"name":"fun TimeoutEvent(kord: Kord, shard: Int, customContext: Any?)","description":"dev.kord.core.event.gateway.DisconnectEvent.TimeoutEvent.TimeoutEvent","location":"core/dev.kord.core.event.gateway/-disconnect-event/-timeout-event/-timeout-event.html","searchKeys":["TimeoutEvent","fun TimeoutEvent(kord: Kord, shard: Int, customContext: Any?)","dev.kord.core.event.gateway.DisconnectEvent.TimeoutEvent.TimeoutEvent"]},{"name":"fun TopGuildChannel.live(coroutineScope: CoroutineScope = kord + SupervisorJob(kord.coroutineContext.job)): LiveGuildChannel","description":"dev.kord.core.live.channel.live","location":"core/dev.kord.core.live.channel/live.html","searchKeys":["live","fun TopGuildChannel.live(coroutineScope: CoroutineScope = kord + SupervisorJob(kord.coroutineContext.job)): LiveGuildChannel","dev.kord.core.live.channel.live"]},{"name":"fun TopGuildMessageChannel.live(coroutineScope: CoroutineScope = kord + SupervisorJob(kord.coroutineContext.job)): LiveGuildMessageChannel","description":"dev.kord.core.live.channel.live","location":"core/dev.kord.core.live.channel/live.html","searchKeys":["live","fun TopGuildMessageChannel.live(coroutineScope: CoroutineScope = kord + SupervisorJob(kord.coroutineContext.job)): LiveGuildMessageChannel","dev.kord.core.live.channel.live"]},{"name":"fun TypingStartEvent(data: TypingStartEventData, kord: Kord, shard: Int, customContext: Any?, supplier: EntitySupplier = kord.defaultSupplier)","description":"dev.kord.core.event.channel.TypingStartEvent.TypingStartEvent","location":"core/dev.kord.core.event.channel/-typing-start-event/-typing-start-event.html","searchKeys":["TypingStartEvent","fun TypingStartEvent(data: TypingStartEventData, kord: Kord, shard: Int, customContext: Any?, supplier: EntitySupplier = kord.defaultSupplier)","dev.kord.core.event.channel.TypingStartEvent.TypingStartEvent"]},{"name":"fun TypingStartEventData(channelId: Snowflake, guildId: OptionalSnowflake = OptionalSnowflake.Missing, userId: Snowflake, timestamp: Instant, member: Optional<DiscordGuildMember> = Optional.Missing())","description":"dev.kord.core.event.channel.data.TypingStartEventData.TypingStartEventData","location":"core/dev.kord.core.event.channel.data/-typing-start-event-data/-typing-start-event-data.html","searchKeys":["TypingStartEventData","fun TypingStartEventData(channelId: Snowflake, guildId: OptionalSnowflake = OptionalSnowflake.Missing, userId: Snowflake, timestamp: Instant, member: Optional<DiscordGuildMember> = Optional.Missing())","dev.kord.core.event.channel.data.TypingStartEventData.TypingStartEventData"]},{"name":"fun Unicode(name: String)","description":"dev.kord.core.entity.ReactionEmoji.Unicode.Unicode","location":"core/dev.kord.core.entity/-reaction-emoji/-unicode/-unicode.html","searchKeys":["Unicode","fun Unicode(name: String)","dev.kord.core.entity.ReactionEmoji.Unicode.Unicode"]},{"name":"fun UnknownApplicationCommandCreateEvent(command: UnknownGuildApplicationCommand, kord: Kord, shard: Int, customContext: Any?)","description":"dev.kord.core.event.interaction.UnknownApplicationCommandCreateEvent.UnknownApplicationCommandCreateEvent","location":"core/dev.kord.core.event.interaction/-unknown-application-command-create-event/-unknown-application-command-create-event.html","searchKeys":["UnknownApplicationCommandCreateEvent","fun UnknownApplicationCommandCreateEvent(command: UnknownGuildApplicationCommand, kord: Kord, shard: Int, customContext: Any?)","dev.kord.core.event.interaction.UnknownApplicationCommandCreateEvent.UnknownApplicationCommandCreateEvent"]},{"name":"fun UnknownApplicationCommandDeleteEvent(command: UnknownGuildApplicationCommand, kord: Kord, shard: Int, customContext: Any?)","description":"dev.kord.core.event.interaction.UnknownApplicationCommandDeleteEvent.UnknownApplicationCommandDeleteEvent","location":"core/dev.kord.core.event.interaction/-unknown-application-command-delete-event/-unknown-application-command-delete-event.html","searchKeys":["UnknownApplicationCommandDeleteEvent","fun UnknownApplicationCommandDeleteEvent(command: UnknownGuildApplicationCommand, kord: Kord, shard: Int, customContext: Any?)","dev.kord.core.event.interaction.UnknownApplicationCommandDeleteEvent.UnknownApplicationCommandDeleteEvent"]},{"name":"fun UnknownApplicationCommandUpdateEvent(command: UnknownGuildApplicationCommand, kord: Kord, shard: Int, customContext: Any?)","description":"dev.kord.core.event.interaction.UnknownApplicationCommandUpdateEvent.UnknownApplicationCommandUpdateEvent","location":"core/dev.kord.core.event.interaction/-unknown-application-command-update-event/-unknown-application-command-update-event.html","searchKeys":["UnknownApplicationCommandUpdateEvent","fun UnknownApplicationCommandUpdateEvent(command: UnknownGuildApplicationCommand, kord: Kord, shard: Int, customContext: Any?)","dev.kord.core.event.interaction.UnknownApplicationCommandUpdateEvent.UnknownApplicationCommandUpdateEvent"]},{"name":"fun UnknownAutoModerationAction(data: AutoModerationActionData, kord: Kord)","description":"dev.kord.core.entity.automoderation.UnknownAutoModerationAction.UnknownAutoModerationAction","location":"core/dev.kord.core.entity.automoderation/-unknown-auto-moderation-action/-unknown-auto-moderation-action.html","searchKeys":["UnknownAutoModerationAction","fun UnknownAutoModerationAction(data: AutoModerationActionData, kord: Kord)","dev.kord.core.entity.automoderation.UnknownAutoModerationAction.UnknownAutoModerationAction"]},{"name":"fun UnknownAutoModerationRule(data: AutoModerationRuleData, kord: Kord, supplier: EntitySupplier)","description":"dev.kord.core.entity.automoderation.UnknownAutoModerationRule.UnknownAutoModerationRule","location":"core/dev.kord.core.entity.automoderation/-unknown-auto-moderation-rule/-unknown-auto-moderation-rule.html","searchKeys":["UnknownAutoModerationRule","fun UnknownAutoModerationRule(data: AutoModerationRuleData, kord: Kord, supplier: EntitySupplier)","dev.kord.core.entity.automoderation.UnknownAutoModerationRule.UnknownAutoModerationRule"]},{"name":"fun UnknownChannelCreateEvent(channel: Channel, shard: Int, customContext: Any?)","description":"dev.kord.core.event.channel.UnknownChannelCreateEvent.UnknownChannelCreateEvent","location":"core/dev.kord.core.event.channel/-unknown-channel-create-event/-unknown-channel-create-event.html","searchKeys":["UnknownChannelCreateEvent","fun UnknownChannelCreateEvent(channel: Channel, shard: Int, customContext: Any?)","dev.kord.core.event.channel.UnknownChannelCreateEvent.UnknownChannelCreateEvent"]},{"name":"fun UnknownChannelDeleteEvent(channel: Channel, shard: Int, customContext: Any?)","description":"dev.kord.core.event.channel.UnknownChannelDeleteEvent.UnknownChannelDeleteEvent","location":"core/dev.kord.core.event.channel/-unknown-channel-delete-event/-unknown-channel-delete-event.html","searchKeys":["UnknownChannelDeleteEvent","fun UnknownChannelDeleteEvent(channel: Channel, shard: Int, customContext: Any?)","dev.kord.core.event.channel.UnknownChannelDeleteEvent.UnknownChannelDeleteEvent"]},{"name":"fun UnknownChannelThreadCreateEvent(channel: ThreadChannel, shard: Int, customContext: Any?)","description":"dev.kord.core.event.channel.thread.UnknownChannelThreadCreateEvent.UnknownChannelThreadCreateEvent","location":"core/dev.kord.core.event.channel.thread/-unknown-channel-thread-create-event/-unknown-channel-thread-create-event.html","searchKeys":["UnknownChannelThreadCreateEvent","fun UnknownChannelThreadCreateEvent(channel: ThreadChannel, shard: Int, customContext: Any?)","dev.kord.core.event.channel.thread.UnknownChannelThreadCreateEvent.UnknownChannelThreadCreateEvent"]},{"name":"fun UnknownChannelThreadDeleteEvent(channel: DeletedThreadChannel, old: ThreadChannel?, shard: Int, customContext: Any?)","description":"dev.kord.core.event.channel.thread.UnknownChannelThreadDeleteEvent.UnknownChannelThreadDeleteEvent","location":"core/dev.kord.core.event.channel.thread/-unknown-channel-thread-delete-event/-unknown-channel-thread-delete-event.html","searchKeys":["UnknownChannelThreadDeleteEvent","fun UnknownChannelThreadDeleteEvent(channel: DeletedThreadChannel, old: ThreadChannel?, shard: Int, customContext: Any?)","dev.kord.core.event.channel.thread.UnknownChannelThreadDeleteEvent.UnknownChannelThreadDeleteEvent"]},{"name":"fun UnknownChannelThreadUpdateEvent(channel: ThreadChannel, old: ThreadChannel?, shard: Int, customContext: Any?)","description":"dev.kord.core.event.channel.thread.UnknownChannelThreadUpdateEvent.UnknownChannelThreadUpdateEvent","location":"core/dev.kord.core.event.channel.thread/-unknown-channel-thread-update-event/-unknown-channel-thread-update-event.html","searchKeys":["UnknownChannelThreadUpdateEvent","fun UnknownChannelThreadUpdateEvent(channel: ThreadChannel, old: ThreadChannel?, shard: Int, customContext: Any?)","dev.kord.core.event.channel.thread.UnknownChannelThreadUpdateEvent.UnknownChannelThreadUpdateEvent"]},{"name":"fun UnknownChannelUpdateEvent(channel: Channel, old: Channel?, shard: Int, customContext: Any?)","description":"dev.kord.core.event.channel.UnknownChannelUpdateEvent.UnknownChannelUpdateEvent","location":"core/dev.kord.core.event.channel/-unknown-channel-update-event/-unknown-channel-update-event.html","searchKeys":["UnknownChannelUpdateEvent","fun UnknownChannelUpdateEvent(channel: Channel, old: Channel?, shard: Int, customContext: Any?)","dev.kord.core.event.channel.UnknownChannelUpdateEvent.UnknownChannelUpdateEvent"]},{"name":"fun UnknownComponent(data: ComponentData)","description":"dev.kord.core.entity.component.UnknownComponent.UnknownComponent","location":"core/dev.kord.core.entity.component/-unknown-component/-unknown-component.html","searchKeys":["UnknownComponent","fun UnknownComponent(data: ComponentData)","dev.kord.core.entity.component.UnknownComponent.UnknownComponent"]},{"name":"fun UnknownGlobalApplicationCommand(data: ApplicationCommandData, service: InteractionService)","description":"dev.kord.core.entity.application.UnknownGlobalApplicationCommand.UnknownGlobalApplicationCommand","location":"core/dev.kord.core.entity.application/-unknown-global-application-command/-unknown-global-application-command.html","searchKeys":["UnknownGlobalApplicationCommand","fun UnknownGlobalApplicationCommand(data: ApplicationCommandData, service: InteractionService)","dev.kord.core.entity.application.UnknownGlobalApplicationCommand.UnknownGlobalApplicationCommand"]},{"name":"fun UnknownGuildApplicationCommand(data: ApplicationCommandData, service: InteractionService)","description":"dev.kord.core.entity.application.UnknownGuildApplicationCommand.UnknownGuildApplicationCommand","location":"core/dev.kord.core.entity.application/-unknown-guild-application-command/-unknown-guild-application-command.html","searchKeys":["UnknownGuildApplicationCommand","fun UnknownGuildApplicationCommand(data: ApplicationCommandData, service: InteractionService)","dev.kord.core.entity.application.UnknownGuildApplicationCommand.UnknownGuildApplicationCommand"]},{"name":"fun Unsafe(kord: Kord)","description":"dev.kord.core.Unsafe.Unsafe","location":"core/dev.kord.core/-unsafe/-unsafe.html","searchKeys":["Unsafe","fun Unsafe(kord: Kord)","dev.kord.core.Unsafe.Unsafe"]},{"name":"fun User(data: UserData, kord: Kord, supplier: EntitySupplier = kord.defaultSupplier)","description":"dev.kord.core.entity.User.User","location":"core/dev.kord.core.entity/-user/-user.html","searchKeys":["User","fun User(data: UserData, kord: Kord, supplier: EntitySupplier = kord.defaultSupplier)","dev.kord.core.entity.User.User"]},{"name":"fun User.live(coroutineScope: CoroutineScope = kord + SupervisorJob(kord.coroutineContext.job)): LiveUser","description":"dev.kord.core.live.live","location":"core/dev.kord.core.live/live.html","searchKeys":["live","fun User.live(coroutineScope: CoroutineScope = kord + SupervisorJob(kord.coroutineContext.job)): LiveUser","dev.kord.core.live.live"]},{"name":"fun UserAvatar(userId: Snowflake, avatarHash: String, kord: Kord)","description":"dev.kord.core.entity.Icon.UserAvatar.UserAvatar","location":"core/dev.kord.core.entity/-icon/-user-avatar/-user-avatar.html","searchKeys":["UserAvatar","fun UserAvatar(userId: Snowflake, avatarHash: String, kord: Kord)","dev.kord.core.entity.Icon.UserAvatar.UserAvatar"]},{"name":"fun UserBehavior(id: Snowflake, kord: Kord, strategy: EntitySupplyStrategy<*> = kord.resources.defaultStrategy): UserBehavior","description":"dev.kord.core.behavior.UserBehavior","location":"core/dev.kord.core.behavior/-user-behavior.html","searchKeys":["UserBehavior","fun UserBehavior(id: Snowflake, kord: Kord, strategy: EntitySupplyStrategy<*> = kord.resources.defaultStrategy): UserBehavior","dev.kord.core.behavior.UserBehavior"]},{"name":"fun UserCloseEvent(kord: Kord, shard: Int, customContext: Any?)","description":"dev.kord.core.event.gateway.DisconnectEvent.UserCloseEvent.UserCloseEvent","location":"core/dev.kord.core.event.gateway/-disconnect-event/-user-close-event/-user-close-event.html","searchKeys":["UserCloseEvent","fun UserCloseEvent(kord: Kord, shard: Int, customContext: Any?)","dev.kord.core.event.gateway.DisconnectEvent.UserCloseEvent.UserCloseEvent"]},{"name":"fun UserCommandCreateEvent(command: GuildUserCommand, kord: Kord, shard: Int, customContext: Any?)","description":"dev.kord.core.event.interaction.UserCommandCreateEvent.UserCommandCreateEvent","location":"core/dev.kord.core.event.interaction/-user-command-create-event/-user-command-create-event.html","searchKeys":["UserCommandCreateEvent","fun UserCommandCreateEvent(command: GuildUserCommand, kord: Kord, shard: Int, customContext: Any?)","dev.kord.core.event.interaction.UserCommandCreateEvent.UserCommandCreateEvent"]},{"name":"fun UserCommandDeleteEvent(command: GuildUserCommand, kord: Kord, shard: Int, customContext: Any?)","description":"dev.kord.core.event.interaction.UserCommandDeleteEvent.UserCommandDeleteEvent","location":"core/dev.kord.core.event.interaction/-user-command-delete-event/-user-command-delete-event.html","searchKeys":["UserCommandDeleteEvent","fun UserCommandDeleteEvent(command: GuildUserCommand, kord: Kord, shard: Int, customContext: Any?)","dev.kord.core.event.interaction.UserCommandDeleteEvent.UserCommandDeleteEvent"]},{"name":"fun UserCommandUpdateEvent(command: GuildUserCommand, kord: Kord, shard: Int, customContext: Any?)","description":"dev.kord.core.event.interaction.UserCommandUpdateEvent.UserCommandUpdateEvent","location":"core/dev.kord.core.event.interaction/-user-command-update-event/-user-command-update-event.html","searchKeys":["UserCommandUpdateEvent","fun UserCommandUpdateEvent(command: GuildUserCommand, kord: Kord, shard: Int, customContext: Any?)","dev.kord.core.event.interaction.UserCommandUpdateEvent.UserCommandUpdateEvent"]},{"name":"fun UserData(id: Snowflake, username: String, discriminator: String, avatar: String? = null, bot: OptionalBoolean = OptionalBoolean.Missing, publicFlags: Optional<UserFlags> = Optional.Missing(), banner: String? = null, accentColor: Int? = null)","description":"dev.kord.core.cache.data.UserData.UserData","location":"core/dev.kord.core.cache.data/-user-data/-user-data.html","searchKeys":["UserData","fun UserData(id: Snowflake, username: String, discriminator: String, avatar: String? = null, bot: OptionalBoolean = OptionalBoolean.Missing, publicFlags: Optional<UserFlags> = Optional.Missing(), banner: String? = null, accentColor: Int? = null)","dev.kord.core.cache.data.UserData.UserData"]},{"name":"fun UserOptionValue(value: Snowflake, focused: Boolean, resolvedObject: User?)","description":"dev.kord.core.entity.interaction.UserOptionValue.UserOptionValue","location":"core/dev.kord.core.entity.interaction/-user-option-value/-user-option-value.html","searchKeys":["UserOptionValue","fun UserOptionValue(value: Snowflake, focused: Boolean, resolvedObject: User?)","dev.kord.core.entity.interaction.UserOptionValue.UserOptionValue"]},{"name":"fun UserUpdateEvent(old: User?, user: User, shard: Int, customContext: Any?)","description":"dev.kord.core.event.user.UserUpdateEvent.UserUpdateEvent","location":"core/dev.kord.core.event.user/-user-update-event/-user-update-event.html","searchKeys":["UserUpdateEvent","fun UserUpdateEvent(old: User?, user: User, shard: Int, customContext: Any?)","dev.kord.core.event.user.UserUpdateEvent.UserUpdateEvent"]},{"name":"fun Video(data: EmbedVideoData, kord: Kord)","description":"dev.kord.core.entity.Embed.Video.Video","location":"core/dev.kord.core.entity/-embed/-video/-video.html","searchKeys":["Video","fun Video(data: EmbedVideoData, kord: Kord)","dev.kord.core.entity.Embed.Video.Video"]},{"name":"fun ViewKeys(keySet: MutableSet<Any> = mutableSetOf())","description":"dev.kord.core.cache.ViewKeys.ViewKeys","location":"core/dev.kord.core.cache/-view-keys/-view-keys.html","searchKeys":["ViewKeys","fun ViewKeys(keySet: MutableSet<Any> = mutableSetOf())","dev.kord.core.cache.ViewKeys.ViewKeys"]},{"name":"fun VoiceChannel(data: ChannelData, kord: Kord, supplier: EntitySupplier = kord.defaultSupplier)","description":"dev.kord.core.entity.channel.VoiceChannel.VoiceChannel","location":"core/dev.kord.core.entity.channel/-voice-channel/-voice-channel.html","searchKeys":["VoiceChannel","fun VoiceChannel(data: ChannelData, kord: Kord, supplier: EntitySupplier = kord.defaultSupplier)","dev.kord.core.entity.channel.VoiceChannel.VoiceChannel"]},{"name":"fun VoiceChannel.live(coroutineScope: CoroutineScope = kord + SupervisorJob(kord.coroutineContext.job)): LiveVoiceChannel","description":"dev.kord.core.live.channel.live","location":"core/dev.kord.core.live.channel/live.html","searchKeys":["live","fun VoiceChannel.live(coroutineScope: CoroutineScope = kord + SupervisorJob(kord.coroutineContext.job)): LiveVoiceChannel","dev.kord.core.live.channel.live"]},{"name":"fun VoiceChannelBehavior(guildId: Snowflake, id: Snowflake, kord: Kord, strategy: EntitySupplyStrategy<*> = kord.resources.defaultStrategy): VoiceChannelBehavior","description":"dev.kord.core.behavior.channel.VoiceChannelBehavior","location":"core/dev.kord.core.behavior.channel/-voice-channel-behavior.html","searchKeys":["VoiceChannelBehavior","fun VoiceChannelBehavior(guildId: Snowflake, id: Snowflake, kord: Kord, strategy: EntitySupplyStrategy<*> = kord.resources.defaultStrategy): VoiceChannelBehavior","dev.kord.core.behavior.channel.VoiceChannelBehavior"]},{"name":"fun VoiceChannelCreateEvent(channel: VoiceChannel, shard: Int, customContext: Any?)","description":"dev.kord.core.event.channel.VoiceChannelCreateEvent.VoiceChannelCreateEvent","location":"core/dev.kord.core.event.channel/-voice-channel-create-event/-voice-channel-create-event.html","searchKeys":["VoiceChannelCreateEvent","fun VoiceChannelCreateEvent(channel: VoiceChannel, shard: Int, customContext: Any?)","dev.kord.core.event.channel.VoiceChannelCreateEvent.VoiceChannelCreateEvent"]},{"name":"fun VoiceChannelDeleteEvent(channel: VoiceChannel, shard: Int, customContext: Any?)","description":"dev.kord.core.event.channel.VoiceChannelDeleteEvent.VoiceChannelDeleteEvent","location":"core/dev.kord.core.event.channel/-voice-channel-delete-event/-voice-channel-delete-event.html","searchKeys":["VoiceChannelDeleteEvent","fun VoiceChannelDeleteEvent(channel: VoiceChannel, shard: Int, customContext: Any?)","dev.kord.core.event.channel.VoiceChannelDeleteEvent.VoiceChannelDeleteEvent"]},{"name":"fun VoiceChannelUpdateEvent(channel: VoiceChannel, old: VoiceChannel?, shard: Int, customContext: Any?)","description":"dev.kord.core.event.channel.VoiceChannelUpdateEvent.VoiceChannelUpdateEvent","location":"core/dev.kord.core.event.channel/-voice-channel-update-event/-voice-channel-update-event.html","searchKeys":["VoiceChannelUpdateEvent","fun VoiceChannelUpdateEvent(channel: VoiceChannel, old: VoiceChannel?, shard: Int, customContext: Any?)","dev.kord.core.event.channel.VoiceChannelUpdateEvent.VoiceChannelUpdateEvent"]},{"name":"fun VoiceServerUpdateEvent(token: String, guildId: Snowflake, endpoint: String?, kord: Kord, shard: Int, customContext: Any?, supplier: EntitySupplier = kord.defaultSupplier)","description":"dev.kord.core.event.guild.VoiceServerUpdateEvent.VoiceServerUpdateEvent","location":"core/dev.kord.core.event.guild/-voice-server-update-event/-voice-server-update-event.html","searchKeys":["VoiceServerUpdateEvent","fun VoiceServerUpdateEvent(token: String, guildId: Snowflake, endpoint: String?, kord: Kord, shard: Int, customContext: Any?, supplier: EntitySupplier = kord.defaultSupplier)","dev.kord.core.event.guild.VoiceServerUpdateEvent.VoiceServerUpdateEvent"]},{"name":"fun VoiceState(data: VoiceStateData, kord: Kord, supplier: EntitySupplier = kord.defaultSupplier)","description":"dev.kord.core.entity.VoiceState.VoiceState","location":"core/dev.kord.core.entity/-voice-state/-voice-state.html","searchKeys":["VoiceState","fun VoiceState(data: VoiceStateData, kord: Kord, supplier: EntitySupplier = kord.defaultSupplier)","dev.kord.core.entity.VoiceState.VoiceState"]},{"name":"fun VoiceStateData(guildId: Snowflake, channelId: Snowflake?, userId: Snowflake, memberId: OptionalSnowflake = OptionalSnowflake.Missing, sessionId: String, deaf: Boolean, mute: Boolean, selfDeaf: Boolean, selfMute: Boolean, suppress: Boolean, selfVideo: Boolean, selfStream: OptionalBoolean = OptionalBoolean.Missing, requestToSpeakTimestamp: Instant?)","description":"dev.kord.core.cache.data.VoiceStateData.VoiceStateData","location":"core/dev.kord.core.cache.data/-voice-state-data/-voice-state-data.html","searchKeys":["VoiceStateData","fun VoiceStateData(guildId: Snowflake, channelId: Snowflake?, userId: Snowflake, memberId: OptionalSnowflake = OptionalSnowflake.Missing, sessionId: String, deaf: Boolean, mute: Boolean, selfDeaf: Boolean, selfMute: Boolean, suppress: Boolean, selfVideo: Boolean, selfStream: OptionalBoolean = OptionalBoolean.Missing, requestToSpeakTimestamp: Instant?)","dev.kord.core.cache.data.VoiceStateData.VoiceStateData"]},{"name":"fun VoiceStateUpdateEvent(old: VoiceState?, state: VoiceState, shard: Int, customContext: Any?)","description":"dev.kord.core.event.user.VoiceStateUpdateEvent.VoiceStateUpdateEvent","location":"core/dev.kord.core.event.user/-voice-state-update-event/-voice-state-update-event.html","searchKeys":["VoiceStateUpdateEvent","fun VoiceStateUpdateEvent(old: VoiceState?, state: VoiceState, shard: Int, customContext: Any?)","dev.kord.core.event.user.VoiceStateUpdateEvent.VoiceStateUpdateEvent"]},{"name":"fun Web(status: PresenceStatus)","description":"dev.kord.core.entity.ClientStatus.Client.Web.Web","location":"core/dev.kord.core.entity/-client-status/-client/-web/-web.html","searchKeys":["Web","fun Web(status: PresenceStatus)","dev.kord.core.entity.ClientStatus.Client.Web.Web"]},{"name":"fun Webhook(data: WebhookData, kord: Kord, supplier: EntitySupplier = kord.defaultSupplier)","description":"dev.kord.core.entity.Webhook.Webhook","location":"core/dev.kord.core.entity/-webhook/-webhook.html","searchKeys":["Webhook","fun Webhook(data: WebhookData, kord: Kord, supplier: EntitySupplier = kord.defaultSupplier)","dev.kord.core.entity.Webhook.Webhook"]},{"name":"fun WebhookData(id: Snowflake, type: WebhookType, guildId: OptionalSnowflake = OptionalSnowflake.Missing, channelId: Snowflake, userId: OptionalSnowflake = OptionalSnowflake.Missing, name: String? = null, avatar: String? = null, token: Optional<String> = Optional.Missing(), applicationId: Snowflake?)","description":"dev.kord.core.cache.data.WebhookData.WebhookData","location":"core/dev.kord.core.cache.data/-webhook-data/-webhook-data.html","searchKeys":["WebhookData","fun WebhookData(id: Snowflake, type: WebhookType, guildId: OptionalSnowflake = OptionalSnowflake.Missing, channelId: Snowflake, userId: OptionalSnowflake = OptionalSnowflake.Missing, name: String? = null, avatar: String? = null, token: Optional<String> = Optional.Missing(), applicationId: Snowflake?)","dev.kord.core.cache.data.WebhookData.WebhookData"]},{"name":"fun WebhookUpdateEvent(guildId: Snowflake, channelId: Snowflake, kord: Kord, shard: Int, customContext: Any?, supplier: EntitySupplier = kord.defaultSupplier)","description":"dev.kord.core.event.guild.WebhookUpdateEvent.WebhookUpdateEvent","location":"core/dev.kord.core.event.guild/-webhook-update-event/-webhook-update-event.html","searchKeys":["WebhookUpdateEvent","fun WebhookUpdateEvent(guildId: Snowflake, channelId: Snowflake, kord: Kord, shard: Int, customContext: Any?, supplier: EntitySupplier = kord.defaultSupplier)","dev.kord.core.event.guild.WebhookUpdateEvent.WebhookUpdateEvent"]},{"name":"fun WelcomeScreen(data: WelcomeScreenData, kord: Kord)","description":"dev.kord.core.entity.WelcomeScreen.WelcomeScreen","location":"core/dev.kord.core.entity/-welcome-screen/-welcome-screen.html","searchKeys":["WelcomeScreen","fun WelcomeScreen(data: WelcomeScreenData, kord: Kord)","dev.kord.core.entity.WelcomeScreen.WelcomeScreen"]},{"name":"fun WelcomeScreenChannel(data: WelcomeScreenChannelData, kord: Kord, supplier: EntitySupplier = kord.defaultSupplier)","description":"dev.kord.core.entity.channel.WelcomeScreenChannel.WelcomeScreenChannel","location":"core/dev.kord.core.entity.channel/-welcome-screen-channel/-welcome-screen-channel.html","searchKeys":["WelcomeScreenChannel","fun WelcomeScreenChannel(data: WelcomeScreenChannelData, kord: Kord, supplier: EntitySupplier = kord.defaultSupplier)","dev.kord.core.entity.channel.WelcomeScreenChannel.WelcomeScreenChannel"]},{"name":"fun WelcomeScreenChannelData(channelId: Snowflake, description: String, emojiId: Snowflake?, emojiName: String?)","description":"dev.kord.core.cache.data.WelcomeScreenChannelData.WelcomeScreenChannelData","location":"core/dev.kord.core.cache.data/-welcome-screen-channel-data/-welcome-screen-channel-data.html","searchKeys":["WelcomeScreenChannelData","fun WelcomeScreenChannelData(channelId: Snowflake, description: String, emojiId: Snowflake?, emojiName: String?)","dev.kord.core.cache.data.WelcomeScreenChannelData.WelcomeScreenChannelData"]},{"name":"fun WelcomeScreenData(description: String?, welcomeChannels: List<WelcomeScreenChannelData>)","description":"dev.kord.core.cache.data.WelcomeScreenData.WelcomeScreenData","location":"core/dev.kord.core.cache.data/-welcome-screen-data/-welcome-screen-data.html","searchKeys":["WelcomeScreenData","fun WelcomeScreenData(description: String?, welcomeChannels: List<WelcomeScreenChannelData>)","dev.kord.core.cache.data.WelcomeScreenData.WelcomeScreenData"]},{"name":"fun ZombieConnectionEvent(kord: Kord, shard: Int, customContext: Any?)","description":"dev.kord.core.event.gateway.DisconnectEvent.ZombieConnectionEvent.ZombieConnectionEvent","location":"core/dev.kord.core.event.gateway/-disconnect-event/-zombie-connection-event/-zombie-connection-event.html","searchKeys":["ZombieConnectionEvent","fun ZombieConnectionEvent(kord: Kord, shard: Int, customContext: Any?)","dev.kord.core.event.gateway.DisconnectEvent.ZombieConnectionEvent.ZombieConnectionEvent"]},{"name":"fun add(key: Any)","description":"dev.kord.core.cache.ViewKeys.add","location":"core/dev.kord.core.cache/-view-keys/add.html","searchKeys":["add","fun add(key: Any)","dev.kord.core.cache.ViewKeys.add"]},{"name":"fun applicationCommandInteraction(id: Snowflake, channelId: Snowflake, token: String, applicationId: Snowflake): ApplicationCommandInteractionBehavior","description":"dev.kord.core.Unsafe.applicationCommandInteraction","location":"core/dev.kord.core/-unsafe/application-command-interaction.html","searchKeys":["applicationCommandInteraction","fun applicationCommandInteraction(id: Snowflake, channelId: Snowflake, token: String, applicationId: Snowflake): ApplicationCommandInteractionBehavior","dev.kord.core.Unsafe.applicationCommandInteraction"]},{"name":"fun apply(builder: EmbedBuilder)","description":"dev.kord.core.entity.Embed.apply","location":"core/dev.kord.core.entity/-embed/apply.html","searchKeys":["apply","fun apply(builder: EmbedBuilder)","dev.kord.core.entity.Embed.apply"]},{"name":"fun autoModerationRule(guildId: Snowflake, ruleId: Snowflake): AutoModerationRuleBehavior","description":"dev.kord.core.Unsafe.autoModerationRule","location":"core/dev.kord.core/-unsafe/auto-moderation-rule.html","searchKeys":["autoModerationRule","fun autoModerationRule(guildId: Snowflake, ruleId: Snowflake): AutoModerationRuleBehavior","dev.kord.core.Unsafe.autoModerationRule"]},{"name":"fun autoModerationRules(generator: Generator<AutoModerationRuleData, Snowflake>)","description":"dev.kord.core.cache.KordCacheBuilder.autoModerationRules","location":"core/dev.kord.core.cache/-kord-cache-builder/auto-moderation-rules.html","searchKeys":["autoModerationRules","fun autoModerationRules(generator: Generator<AutoModerationRuleData, Snowflake>)","dev.kord.core.cache.KordCacheBuilder.autoModerationRules"]},{"name":"fun build(): DataCache","description":"dev.kord.core.cache.KordCacheBuilder.build","location":"core/dev.kord.core.cache/-kord-cache-builder/build.html","searchKeys":["build","fun build(): DataCache","dev.kord.core.cache.KordCacheBuilder.build"]},{"name":"fun build(): Kord","description":"dev.kord.core.builder.kord.RestOnlyBuilder.build","location":"core/dev.kord.core.builder.kord/-rest-only-builder/build.html","searchKeys":["build","fun build(): Kord","dev.kord.core.builder.kord.RestOnlyBuilder.build"]},{"name":"fun cache(builder: KordCacheBuilder.(resources: ClientResources) -> Unit)","description":"dev.kord.core.builder.kord.KordBuilder.cache","location":"core/dev.kord.core.builder.kord/-kord-builder/cache.html","searchKeys":["cache","fun cache(builder: KordCacheBuilder.(resources: ClientResources) -> Unit)","dev.kord.core.builder.kord.KordBuilder.cache"]},{"name":"fun categorizableChannel(guildId: Snowflake, id: Snowflake): CategorizableChannelBehavior","description":"dev.kord.core.Unsafe.categorizableChannel","location":"core/dev.kord.core/-unsafe/categorizable-channel.html","searchKeys":["categorizableChannel","fun categorizableChannel(guildId: Snowflake, id: Snowflake): CategorizableChannelBehavior","dev.kord.core.Unsafe.categorizableChannel"]},{"name":"fun channel(id: Snowflake): ChannelBehavior","description":"dev.kord.core.Unsafe.channel","location":"core/dev.kord.core/-unsafe/channel.html","searchKeys":["channel","fun channel(id: Snowflake): ChannelBehavior","dev.kord.core.Unsafe.channel"]},{"name":"fun channels(generator: Generator<ChannelData, Snowflake>)","description":"dev.kord.core.cache.KordCacheBuilder.channels","location":"core/dev.kord.core.cache/-kord-cache-builder/channels.html","searchKeys":["channels","fun channels(generator: Generator<ChannelData, Snowflake>)","dev.kord.core.cache.KordCacheBuilder.channels"]},{"name":"fun componentInteraction(id: Snowflake, channelId: Snowflake, token: String, applicationId: Snowflake = kord.selfId): ComponentInteractionBehavior","description":"dev.kord.core.Unsafe.componentInteraction","location":"core/dev.kord.core/-unsafe/component-interaction.html","searchKeys":["componentInteraction","fun componentInteraction(id: Snowflake, channelId: Snowflake, token: String, applicationId: Snowflake = kord.selfId): ComponentInteractionBehavior","dev.kord.core.Unsafe.componentInteraction"]},{"name":"fun copy(id: Snowflake = this.id, type: DiscordGuildApplicationCommandPermission.Type = this.type.toDeprecatedType(), permission: Boolean = this.permission): GuildApplicationCommandPermissionData","description":"dev.kord.core.cache.data.GuildApplicationCommandPermissionData.copy","location":"core/dev.kord.core.cache.data/-guild-application-command-permission-data/copy.html","searchKeys":["copy","fun copy(id: Snowflake = this.id, type: DiscordGuildApplicationCommandPermission.Type = this.type.toDeprecatedType(), permission: Boolean = this.permission): GuildApplicationCommandPermissionData","dev.kord.core.cache.data.GuildApplicationCommandPermissionData.copy"]},{"name":"fun disableAll()","description":"dev.kord.core.cache.KordCacheBuilder.disableAll","location":"core/dev.kord.core.cache/-kord-cache-builder/disable-all.html","searchKeys":["disableAll","fun disableAll()","dev.kord.core.cache.KordCacheBuilder.disableAll"]},{"name":"fun emojis(generator: Generator<EmojiData, Snowflake>)","description":"dev.kord.core.cache.KordCacheBuilder.emojis","location":"core/dev.kord.core.cache/-kord-cache-builder/emojis.html","searchKeys":["emojis","fun emojis(generator: Generator<EmojiData, Snowflake>)","dev.kord.core.cache.KordCacheBuilder.emojis"]},{"name":"fun forEveryone(guildId: Snowflake, allowed: Permissions = Permissions(), denied: Permissions = Permissions()): PermissionOverwrite","description":"dev.kord.core.entity.PermissionOverwrite.Companion.forEveryone","location":"core/dev.kord.core.entity/-permission-overwrite/-companion/for-everyone.html","searchKeys":["forEveryone","fun forEveryone(guildId: Snowflake, allowed: Permissions = Permissions(), denied: Permissions = Permissions()): PermissionOverwrite","dev.kord.core.entity.PermissionOverwrite.Companion.forEveryone"]},{"name":"fun forMember(memberId: Snowflake, allowed: Permissions = Permissions(), denied: Permissions = Permissions()): PermissionOverwrite","description":"dev.kord.core.entity.PermissionOverwrite.Companion.forMember","location":"core/dev.kord.core.entity/-permission-overwrite/-companion/for-member.html","searchKeys":["forMember","fun forMember(memberId: Snowflake, allowed: Permissions = Permissions(), denied: Permissions = Permissions()): PermissionOverwrite","dev.kord.core.entity.PermissionOverwrite.Companion.forMember"]},{"name":"fun forRole(roleId: Snowflake, allowed: Permissions = Permissions(), denied: Permissions = Permissions()): PermissionOverwrite","description":"dev.kord.core.entity.PermissionOverwrite.Companion.forRole","location":"core/dev.kord.core.entity/-permission-overwrite/-companion/for-role.html","searchKeys":["forRole","fun forRole(roleId: Snowflake, allowed: Permissions = Permissions(), denied: Permissions = Permissions()): PermissionOverwrite","dev.kord.core.entity.PermissionOverwrite.Companion.forRole"]},{"name":"fun from(action: DiscordAutoModerationAction): AutoModerationActionData","description":"dev.kord.core.cache.data.AutoModerationActionData.Companion.from","location":"core/dev.kord.core.cache.data/-auto-moderation-action-data/-companion/from.html","searchKeys":["from","fun from(action: DiscordAutoModerationAction): AutoModerationActionData","dev.kord.core.cache.data.AutoModerationActionData.Companion.from"]},{"name":"fun from(choice: Choice<*>): ApplicationCommandOptionChoiceData","description":"dev.kord.core.cache.data.ApplicationCommandOptionChoiceData.Companion.from","location":"core/dev.kord.core.cache.data/-application-command-option-choice-data/-companion/from.html","searchKeys":["from","fun from(choice: Choice<*>): ApplicationCommandOptionChoiceData","dev.kord.core.cache.data.ApplicationCommandOptionChoiceData.Companion.from"]},{"name":"fun from(command: DiscordApplicationCommand): ApplicationCommandData","description":"dev.kord.core.cache.data.ApplicationCommandData.Companion.from","location":"core/dev.kord.core.cache.data/-application-command-data/-companion/from.html","searchKeys":["from","fun from(command: DiscordApplicationCommand): ApplicationCommandData","dev.kord.core.cache.data.ApplicationCommandData.Companion.from"]},{"name":"fun from(count: Int, me: Boolean, entity: DiscordPartialEmoji): ReactionData","description":"dev.kord.core.cache.data.ReactionData.Companion.from","location":"core/dev.kord.core.cache.data/-reaction-data/-companion/from.html","searchKeys":["from","fun from(count: Int, me: Boolean, entity: DiscordPartialEmoji): ReactionData","dev.kord.core.cache.data.ReactionData.Companion.from"]},{"name":"fun from(data: ApplicationCommandOption): ApplicationCommandOptionData","description":"dev.kord.core.cache.data.ApplicationCommandOptionData.Companion.from","location":"core/dev.kord.core.cache.data/-application-command-option-data/-companion/from.html","searchKeys":["from","fun from(data: ApplicationCommandOption): ApplicationCommandOptionData","dev.kord.core.cache.data.ApplicationCommandOptionData.Companion.from"]},{"name":"fun from(data: ChannelData, kord: Kord, strategy: EntitySupplyStrategy<*> = kord.resources.defaultStrategy): Channel","description":"dev.kord.core.entity.channel.Channel.Companion.from","location":"core/dev.kord.core.entity.channel/-channel/-companion/from.html","searchKeys":["from","fun from(data: ChannelData, kord: Kord, strategy: EntitySupplyStrategy<*> = kord.resources.defaultStrategy): Channel","dev.kord.core.entity.channel.Channel.Companion.from"]},{"name":"fun from(data: DiscordThreadMember, thread: Snowflake? = null): ThreadMemberData","description":"dev.kord.core.cache.data.ThreadMemberData.Companion.from","location":"core/dev.kord.core.cache.data/-thread-member-data/-companion/from.html","searchKeys":["from","fun from(data: DiscordThreadMember, thread: Snowflake? = null): ThreadMemberData","dev.kord.core.cache.data.ThreadMemberData.Companion.from"]},{"name":"fun from(data: DiscordWelcomeScreen): WelcomeScreenData","description":"dev.kord.core.cache.data.WelcomeScreenData.Companion.from","location":"core/dev.kord.core.cache.data/-welcome-screen-data/-companion/from.html","searchKeys":["from","fun from(data: DiscordWelcomeScreen): WelcomeScreenData","dev.kord.core.cache.data.WelcomeScreenData.Companion.from"]},{"name":"fun from(data: DiscordWelcomeScreenChannel): WelcomeScreenChannelData","description":"dev.kord.core.cache.data.WelcomeScreenChannelData.Companion.from","location":"core/dev.kord.core.cache.data/-welcome-screen-channel-data/-companion/from.html","searchKeys":["from","fun from(data: DiscordWelcomeScreenChannel): WelcomeScreenChannelData","dev.kord.core.cache.data.WelcomeScreenChannelData.Companion.from"]},{"name":"fun from(data: InteractionCallbackData, interactionGuildId: Snowflake?): ApplicationInteractionData","description":"dev.kord.core.cache.data.ApplicationInteractionData.Companion.from","location":"core/dev.kord.core.cache.data/-application-interaction-data/-companion/from.html","searchKeys":["from","fun from(data: InteractionCallbackData, interactionGuildId: Snowflake?): ApplicationInteractionData","dev.kord.core.cache.data.ApplicationInteractionData.Companion.from"]},{"name":"fun from(data: InteractionData, kord: Kord, strategy: EntitySupplyStrategy<*> = kord.resources.defaultStrategy): Interaction","description":"dev.kord.core.entity.interaction.Interaction.Companion.from","location":"core/dev.kord.core.entity.interaction/-interaction/-companion/from.html","searchKeys":["from","fun from(data: InteractionData, kord: Kord, strategy: EntitySupplyStrategy<*> = kord.resources.defaultStrategy): Interaction","dev.kord.core.entity.interaction.Interaction.Companion.from"]},{"name":"fun from(data: Option): OptionData","description":"dev.kord.core.cache.data.OptionData.Companion.from","location":"core/dev.kord.core.cache.data/-option-data/-companion/from.html","searchKeys":["from","fun from(data: Option): OptionData","dev.kord.core.cache.data.OptionData.Companion.from"]},{"name":"fun from(data: ResolvedObjects, guildId: Snowflake?): ResolvedObjectsData","description":"dev.kord.core.cache.data.ResolvedObjectsData.Companion.from","location":"core/dev.kord.core.cache.data/-resolved-objects-data/-companion/from.html","searchKeys":["from","fun from(data: ResolvedObjects, guildId: Snowflake?): ResolvedObjectsData","dev.kord.core.cache.data.ResolvedObjectsData.Companion.from"]},{"name":"fun from(entity: DiscordActivity): ActivityData","description":"dev.kord.core.cache.data.ActivityData.Companion.from","location":"core/dev.kord.core.cache.data/-activity-data/-companion/from.html","searchKeys":["from","fun from(entity: DiscordActivity): ActivityData","dev.kord.core.cache.data.ActivityData.Companion.from"]},{"name":"fun from(entity: DiscordApplication): ApplicationData","description":"dev.kord.core.cache.data.ApplicationData.Companion.from","location":"core/dev.kord.core.cache.data/-application-data/-companion/from.html","searchKeys":["from","fun from(entity: DiscordApplication): ApplicationData","dev.kord.core.cache.data.ApplicationData.Companion.from"]},{"name":"fun from(entity: DiscordAttachment): AttachmentData","description":"dev.kord.core.cache.data.AttachmentData.Companion.from","location":"core/dev.kord.core.cache.data/-attachment-data/-companion/from.html","searchKeys":["from","fun from(entity: DiscordAttachment): AttachmentData","dev.kord.core.cache.data.AttachmentData.Companion.from"]},{"name":"fun from(entity: DiscordAutoModerationActionExecution): AutoModerationActionExecutionEventData","description":"dev.kord.core.event.automoderation.data.AutoModerationActionExecutionEventData.Companion.from","location":"core/dev.kord.core.event.automoderation.data/-auto-moderation-action-execution-event-data/-companion/from.html","searchKeys":["from","fun from(entity: DiscordAutoModerationActionExecution): AutoModerationActionExecutionEventData","dev.kord.core.event.automoderation.data.AutoModerationActionExecutionEventData.Companion.from"]},{"name":"fun from(entity: DiscordChannel): ChannelData","description":"dev.kord.core.cache.data.ChannelData.Companion.from","location":"core/dev.kord.core.cache.data/-channel-data/-companion/from.html","searchKeys":["from","fun from(entity: DiscordChannel): ChannelData","dev.kord.core.cache.data.ChannelData.Companion.from"]},{"name":"fun from(entity: DiscordClientStatus): ClientStatusData","description":"dev.kord.core.cache.data.ClientStatusData.Companion.from","location":"core/dev.kord.core.cache.data/-client-status-data/-companion/from.html","searchKeys":["from","fun from(entity: DiscordClientStatus): ClientStatusData","dev.kord.core.cache.data.ClientStatusData.Companion.from"]},{"name":"fun from(entity: DiscordComponent): ComponentData","description":"dev.kord.core.cache.data.ComponentData.Companion.from","location":"core/dev.kord.core.cache.data/-component-data/-companion/from.html","searchKeys":["from","fun from(entity: DiscordComponent): ComponentData","dev.kord.core.cache.data.ComponentData.Companion.from"]},{"name":"fun from(entity: DiscordCreatedInvite): InviteCreateData","description":"dev.kord.core.cache.data.InviteCreateData.Companion.from","location":"core/dev.kord.core.cache.data/-invite-create-data/-companion/from.html","searchKeys":["from","fun from(entity: DiscordCreatedInvite): InviteCreateData","dev.kord.core.cache.data.InviteCreateData.Companion.from"]},{"name":"fun from(entity: DiscordDeletedInvite): InviteDeleteData","description":"dev.kord.core.cache.data.InviteDeleteData.Companion.from","location":"core/dev.kord.core.cache.data/-invite-delete-data/-companion/from.html","searchKeys":["from","fun from(entity: DiscordDeletedInvite): InviteDeleteData","dev.kord.core.cache.data.InviteDeleteData.Companion.from"]},{"name":"fun from(entity: DiscordEmbed): EmbedData","description":"dev.kord.core.cache.data.EmbedData.Companion.from","location":"core/dev.kord.core.cache.data/-embed-data/-companion/from.html","searchKeys":["from","fun from(entity: DiscordEmbed): EmbedData","dev.kord.core.cache.data.EmbedData.Companion.from"]},{"name":"fun from(entity: DiscordEmbed.Author): EmbedAuthorData","description":"dev.kord.core.cache.data.EmbedAuthorData.Companion.from","location":"core/dev.kord.core.cache.data/-embed-author-data/-companion/from.html","searchKeys":["from","fun from(entity: DiscordEmbed.Author): EmbedAuthorData","dev.kord.core.cache.data.EmbedAuthorData.Companion.from"]},{"name":"fun from(entity: DiscordEmbed.Field): EmbedFieldData","description":"dev.kord.core.cache.data.EmbedFieldData.Companion.from","location":"core/dev.kord.core.cache.data/-embed-field-data/-companion/from.html","searchKeys":["from","fun from(entity: DiscordEmbed.Field): EmbedFieldData","dev.kord.core.cache.data.EmbedFieldData.Companion.from"]},{"name":"fun from(entity: DiscordEmbed.Footer): EmbedFooterData","description":"dev.kord.core.cache.data.EmbedFooterData.Companion.from","location":"core/dev.kord.core.cache.data/-embed-footer-data/-companion/from.html","searchKeys":["from","fun from(entity: DiscordEmbed.Footer): EmbedFooterData","dev.kord.core.cache.data.EmbedFooterData.Companion.from"]},{"name":"fun from(entity: DiscordEmbed.Image): EmbedImageData","description":"dev.kord.core.cache.data.EmbedImageData.Companion.from","location":"core/dev.kord.core.cache.data/-embed-image-data/-companion/from.html","searchKeys":["from","fun from(entity: DiscordEmbed.Image): EmbedImageData","dev.kord.core.cache.data.EmbedImageData.Companion.from"]},{"name":"fun from(entity: DiscordEmbed.Provider): EmbedProviderData","description":"dev.kord.core.cache.data.EmbedProviderData.Companion.from","location":"core/dev.kord.core.cache.data/-embed-provider-data/-companion/from.html","searchKeys":["from","fun from(entity: DiscordEmbed.Provider): EmbedProviderData","dev.kord.core.cache.data.EmbedProviderData.Companion.from"]},{"name":"fun from(entity: DiscordEmbed.Thumbnail): EmbedThumbnailData","description":"dev.kord.core.cache.data.EmbedThumbnailData.Companion.from","location":"core/dev.kord.core.cache.data/-embed-thumbnail-data/-companion/from.html","searchKeys":["from","fun from(entity: DiscordEmbed.Thumbnail): EmbedThumbnailData","dev.kord.core.cache.data.EmbedThumbnailData.Companion.from"]},{"name":"fun from(entity: DiscordEmbed.Video): EmbedVideoData","description":"dev.kord.core.cache.data.EmbedVideoData.Companion.from","location":"core/dev.kord.core.cache.data/-embed-video-data/-companion/from.html","searchKeys":["from","fun from(entity: DiscordEmbed.Video): EmbedVideoData","dev.kord.core.cache.data.EmbedVideoData.Companion.from"]},{"name":"fun from(entity: DiscordGuild): GuildData","description":"dev.kord.core.cache.data.GuildData.Companion.from","location":"core/dev.kord.core.cache.data/-guild-data/-companion/from.html","searchKeys":["from","fun from(entity: DiscordGuild): GuildData","dev.kord.core.cache.data.GuildData.Companion.from"]},{"name":"fun from(entity: DiscordGuildPreview): GuildPreviewData","description":"dev.kord.core.cache.data.GuildPreviewData.Companion.from","location":"core/dev.kord.core.cache.data/-guild-preview-data/-companion/from.html","searchKeys":["from","fun from(entity: DiscordGuildPreview): GuildPreviewData","dev.kord.core.cache.data.GuildPreviewData.Companion.from"]},{"name":"fun from(entity: DiscordGuildRole): RoleData","description":"dev.kord.core.cache.data.RoleData.Companion.from","location":"core/dev.kord.core.cache.data/-role-data/-companion/from.html","searchKeys":["from","fun from(entity: DiscordGuildRole): RoleData","dev.kord.core.cache.data.RoleData.Companion.from"]},{"name":"fun from(entity: DiscordGuildWidget): GuildWidgetData","description":"dev.kord.core.cache.data.GuildWidgetData.Companion.from","location":"core/dev.kord.core.cache.data/-guild-widget-data/-companion/from.html","searchKeys":["from","fun from(entity: DiscordGuildWidget): GuildWidgetData","dev.kord.core.cache.data.GuildWidgetData.Companion.from"]},{"name":"fun from(entity: DiscordIntegrationsAccount): IntegrationsAccountData","description":"dev.kord.core.cache.data.IntegrationsAccountData.Companion.from","location":"core/dev.kord.core.cache.data/-integrations-account-data/-companion/from.html","searchKeys":["from","fun from(entity: DiscordIntegrationsAccount): IntegrationsAccountData","dev.kord.core.cache.data.IntegrationsAccountData.Companion.from"]},{"name":"fun from(entity: DiscordInvite): InviteData","description":"dev.kord.core.cache.data.InviteData.Companion.from","location":"core/dev.kord.core.cache.data/-invite-data/-companion/from.html","searchKeys":["from","fun from(entity: DiscordInvite): InviteData","dev.kord.core.cache.data.InviteData.Companion.from"]},{"name":"fun from(entity: DiscordInviteWithMetadata): InviteWithMetadataData","description":"dev.kord.core.cache.data.InviteWithMetadataData.Companion.from","location":"core/dev.kord.core.cache.data/-invite-with-metadata-data/-companion/from.html","searchKeys":["from","fun from(entity: DiscordInviteWithMetadata): InviteWithMetadataData","dev.kord.core.cache.data.InviteWithMetadataData.Companion.from"]},{"name":"fun from(entity: DiscordMessage): MessageData","description":"dev.kord.core.cache.data.MessageData.Companion.from","location":"core/dev.kord.core.cache.data/-message-data/-companion/from.html","searchKeys":["from","fun from(entity: DiscordMessage): MessageData","dev.kord.core.cache.data.MessageData.Companion.from"]},{"name":"fun from(entity: DiscordMessageInteraction): MessageInteractionData","description":"dev.kord.core.cache.data.MessageInteractionData.Companion.from","location":"core/dev.kord.core.cache.data/-message-interaction-data/-companion/from.html","searchKeys":["from","fun from(entity: DiscordMessageInteraction): MessageInteractionData","dev.kord.core.cache.data.MessageInteractionData.Companion.from"]},{"name":"fun from(entity: DiscordMessageReference): MessageReferenceData","description":"dev.kord.core.cache.data.MessageReferenceData.Companion.from","location":"core/dev.kord.core.cache.data/-message-reference-data/-companion/from.html","searchKeys":["from","fun from(entity: DiscordMessageReference): MessageReferenceData","dev.kord.core.cache.data.MessageReferenceData.Companion.from"]},{"name":"fun from(entity: DiscordMessageSticker): StickerData","description":"dev.kord.core.cache.data.StickerData.Companion.from","location":"core/dev.kord.core.cache.data/-sticker-data/-companion/from.html","searchKeys":["from","fun from(entity: DiscordMessageSticker): StickerData","dev.kord.core.cache.data.StickerData.Companion.from"]},{"name":"fun from(entity: DiscordOptionallyMemberUser): UserData","description":"dev.kord.core.cache.data.UserData.Companion.from","location":"core/dev.kord.core.cache.data/-user-data/-companion/from.html","searchKeys":["from","fun from(entity: DiscordOptionallyMemberUser): UserData","dev.kord.core.cache.data.UserData.Companion.from"]},{"name":"fun from(entity: DiscordPartialApplication): PartialApplicationData","description":"dev.kord.core.cache.data.PartialApplicationData.Companion.from","location":"core/dev.kord.core.cache.data/-partial-application-data/-companion/from.html","searchKeys":["from","fun from(entity: DiscordPartialApplication): PartialApplicationData","dev.kord.core.cache.data.PartialApplicationData.Companion.from"]},{"name":"fun from(entity: DiscordPinsUpdateData): ChannelPinsUpdateEventData","description":"dev.kord.core.event.channel.data.ChannelPinsUpdateEventData.Companion.from","location":"core/dev.kord.core.event.channel.data/-channel-pins-update-event-data/-companion/from.html","searchKeys":["from","fun from(entity: DiscordPinsUpdateData): ChannelPinsUpdateEventData","dev.kord.core.event.channel.data.ChannelPinsUpdateEventData.Companion.from"]},{"name":"fun from(entity: DiscordRemovedEmoji): ReactionRemoveEmojiData","description":"dev.kord.core.cache.data.ReactionRemoveEmojiData.Companion.from","location":"core/dev.kord.core.cache.data/-reaction-remove-emoji-data/-companion/from.html","searchKeys":["from","fun from(entity: DiscordRemovedEmoji): ReactionRemoveEmojiData","dev.kord.core.cache.data.ReactionRemoveEmojiData.Companion.from"]},{"name":"fun from(entity: DiscordRemovedReactionEmoji): RemovedReactionData","description":"dev.kord.core.cache.data.RemovedReactionData.Companion.from","location":"core/dev.kord.core.cache.data/-removed-reaction-data/-companion/from.html","searchKeys":["from","fun from(entity: DiscordRemovedReactionEmoji): RemovedReactionData","dev.kord.core.cache.data.RemovedReactionData.Companion.from"]},{"name":"fun from(entity: DiscordRoleTags): RoleTagsData","description":"dev.kord.core.cache.data.RoleTagsData.Companion.from","location":"core/dev.kord.core.cache.data/-role-tags-data/-companion/from.html","searchKeys":["from","fun from(entity: DiscordRoleTags): RoleTagsData","dev.kord.core.cache.data.RoleTagsData.Companion.from"]},{"name":"fun from(entity: DiscordSelectOption): SelectOptionData","description":"dev.kord.core.cache.data.SelectOptionData.Companion.from","location":"core/dev.kord.core.cache.data/-select-option-data/-companion/from.html","searchKeys":["from","fun from(entity: DiscordSelectOption): SelectOptionData","dev.kord.core.cache.data.SelectOptionData.Companion.from"]},{"name":"fun from(entity: DiscordStickerItem): StickerItemData","description":"dev.kord.core.cache.data.StickerItemData.Companion.from","location":"core/dev.kord.core.cache.data/-sticker-item-data/-companion/from.html","searchKeys":["from","fun from(entity: DiscordStickerItem): StickerItemData","dev.kord.core.cache.data.StickerItemData.Companion.from"]},{"name":"fun from(entity: DiscordStickerPack): StickerPackData","description":"dev.kord.core.cache.data.StickerPackData.Companion.from","location":"core/dev.kord.core.cache.data/-sticker-pack-data/-companion/from.html","searchKeys":["from","fun from(entity: DiscordStickerPack): StickerPackData","dev.kord.core.cache.data.StickerPackData.Companion.from"]},{"name":"fun from(entity: DiscordTeam): TeamData","description":"dev.kord.core.cache.data.TeamData.Companion.from","location":"core/dev.kord.core.cache.data/-team-data/-companion/from.html","searchKeys":["from","fun from(entity: DiscordTeam): TeamData","dev.kord.core.cache.data.TeamData.Companion.from"]},{"name":"fun from(entity: DiscordTeamMember): TeamMemberData","description":"dev.kord.core.cache.data.TeamMemberData.Companion.from","location":"core/dev.kord.core.cache.data/-team-member-data/-companion/from.html","searchKeys":["from","fun from(entity: DiscordTeamMember): TeamMemberData","dev.kord.core.cache.data.TeamMemberData.Companion.from"]},{"name":"fun from(entity: DiscordTyping): TypingStartEventData","description":"dev.kord.core.event.channel.data.TypingStartEventData.Companion.from","location":"core/dev.kord.core.event.channel.data/-typing-start-event-data/-companion/from.html","searchKeys":["from","fun from(entity: DiscordTyping): TypingStartEventData","dev.kord.core.event.channel.data.TypingStartEventData.Companion.from"]},{"name":"fun from(entity: DiscordUpdatedGuildMember): MemberData","description":"dev.kord.core.cache.data.MemberData.Companion.from","location":"core/dev.kord.core.cache.data/-member-data/-companion/from.html","searchKeys":["from","fun from(entity: DiscordUpdatedGuildMember): MemberData","dev.kord.core.cache.data.MemberData.Companion.from"]},{"name":"fun from(entity: DiscordUser): UserData","description":"dev.kord.core.cache.data.UserData.Companion.from","location":"core/dev.kord.core.cache.data/-user-data/-companion/from.html","searchKeys":["from","fun from(entity: DiscordUser): UserData","dev.kord.core.cache.data.UserData.Companion.from"]},{"name":"fun from(entity: DiscordWebhook): WebhookData","description":"dev.kord.core.cache.data.WebhookData.Companion.from","location":"core/dev.kord.core.cache.data/-webhook-data/-companion/from.html","searchKeys":["from","fun from(entity: DiscordWebhook): WebhookData","dev.kord.core.cache.data.WebhookData.Companion.from"]},{"name":"fun from(entity: GuildMembersChunkData): MembersChunkData","description":"dev.kord.core.cache.data.MembersChunkData.Companion.from","location":"core/dev.kord.core.cache.data/-members-chunk-data/-companion/from.html","searchKeys":["from","fun from(entity: GuildMembersChunkData): MembersChunkData","dev.kord.core.cache.data.MembersChunkData.Companion.from"]},{"name":"fun from(entity: Overwrite): PermissionOverwriteData","description":"dev.kord.core.cache.data.PermissionOverwriteData.Companion.from","location":"core/dev.kord.core.cache.data/-permission-overwrite-data/-companion/from.html","searchKeys":["from","fun from(entity: Overwrite): PermissionOverwriteData","dev.kord.core.cache.data.PermissionOverwriteData.Companion.from"]},{"name":"fun from(entity: Reaction): ReactionData","description":"dev.kord.core.cache.data.ReactionData.Companion.from","location":"core/dev.kord.core.cache.data/-reaction-data/-companion/from.html","searchKeys":["from","fun from(entity: Reaction): ReactionData","dev.kord.core.cache.data.ReactionData.Companion.from"]},{"name":"fun from(event: DiscordGuildScheduledEvent): GuildScheduledEventData","description":"dev.kord.core.cache.data.GuildScheduledEventData.Companion.from","location":"core/dev.kord.core.cache.data/-guild-scheduled-event-data/-companion/from.html","searchKeys":["from","fun from(event: DiscordGuildScheduledEvent): GuildScheduledEventData","dev.kord.core.cache.data.GuildScheduledEventData.Companion.from"]},{"name":"fun from(event: ThreadListSync): ThreadListSyncData","description":"dev.kord.core.cache.data.ThreadListSyncData.Companion.from","location":"core/dev.kord.core.cache.data/-thread-list-sync-data/-companion/from.html","searchKeys":["from","fun from(event: ThreadListSync): ThreadListSyncData","dev.kord.core.cache.data.ThreadListSyncData.Companion.from"]},{"name":"fun from(event: ThreadMembersUpdate): ThreadMembersUpdateEventData","description":"dev.kord.core.cache.data.ThreadMembersUpdateEventData.Companion.from","location":"core/dev.kord.core.cache.data/-thread-members-update-event-data/-companion/from.html","searchKeys":["from","fun from(event: ThreadMembersUpdate): ThreadMembersUpdateEventData","dev.kord.core.cache.data.ThreadMembersUpdateEventData.Companion.from"]},{"name":"fun from(guildEmoji: GuildEmoji): ReactionEmoji.Custom","description":"dev.kord.core.entity.ReactionEmoji.Companion.from","location":"core/dev.kord.core.entity/-reaction-emoji/-companion/from.html","searchKeys":["from","fun from(guildEmoji: GuildEmoji): ReactionEmoji.Custom","dev.kord.core.entity.ReactionEmoji.Companion.from"]},{"name":"fun from(guildEmoji: RemovedReactionData): ReactionEmoji","description":"dev.kord.core.entity.ReactionEmoji.Companion.from","location":"core/dev.kord.core.entity/-reaction-emoji/-companion/from.html","searchKeys":["from","fun from(guildEmoji: RemovedReactionData): ReactionEmoji","dev.kord.core.entity.ReactionEmoji.Companion.from"]},{"name":"fun from(guildId: OptionalSnowflake, region: DiscordVoiceRegion): RegionData","description":"dev.kord.core.cache.data.RegionData.Companion.from","location":"core/dev.kord.core.cache.data/-region-data/-companion/from.html","searchKeys":["from","fun from(guildId: OptionalSnowflake, region: DiscordVoiceRegion): RegionData","dev.kord.core.cache.data.RegionData.Companion.from"]},{"name":"fun from(guildId: Snowflake, entity: BanResponse): BanData","description":"dev.kord.core.cache.data.BanData.Companion.from","location":"core/dev.kord.core.cache.data/-ban-data/-companion/from.html","searchKeys":["from","fun from(guildId: Snowflake, entity: BanResponse): BanData","dev.kord.core.cache.data.BanData.Companion.from"]},{"name":"fun from(guildId: Snowflake, entity: DiscordPresenceUpdate): PresenceData","description":"dev.kord.core.cache.data.PresenceData.Companion.from","location":"core/dev.kord.core.cache.data/-presence-data/-companion/from.html","searchKeys":["from","fun from(guildId: Snowflake, entity: DiscordPresenceUpdate): PresenceData","dev.kord.core.cache.data.PresenceData.Companion.from"]},{"name":"fun from(guildId: Snowflake, entity: DiscordRole): RoleData","description":"dev.kord.core.cache.data.RoleData.Companion.from","location":"core/dev.kord.core.cache.data/-role-data/-companion/from.html","searchKeys":["from","fun from(guildId: Snowflake, entity: DiscordRole): RoleData","dev.kord.core.cache.data.RoleData.Companion.from"]},{"name":"fun from(guildId: Snowflake, entity: DiscordVoiceState): VoiceStateData","description":"dev.kord.core.cache.data.VoiceStateData.Companion.from","location":"core/dev.kord.core.cache.data/-voice-state-data/-companion/from.html","searchKeys":["from","fun from(guildId: Snowflake, entity: DiscordVoiceState): VoiceStateData","dev.kord.core.cache.data.VoiceStateData.Companion.from"]},{"name":"fun from(guildId: Snowflake, id: Snowflake, entity: DiscordEmoji): EmojiData","description":"dev.kord.core.cache.data.EmojiData.Companion.from","location":"core/dev.kord.core.cache.data/-emoji-data/-companion/from.html","searchKeys":["from","fun from(guildId: Snowflake, id: Snowflake, entity: DiscordEmoji): EmojiData","dev.kord.core.cache.data.EmojiData.Companion.from"]},{"name":"fun from(guildId: Snowflake, response: DiscordIntegration): IntegrationData","description":"dev.kord.core.cache.data.IntegrationData.Companion.from","location":"core/dev.kord.core.cache.data/-integration-data/-companion/from.html","searchKeys":["from","fun from(guildId: Snowflake, response: DiscordIntegration): IntegrationData","dev.kord.core.cache.data.IntegrationData.Companion.from"]},{"name":"fun from(interaction: DiscordInteraction): InteractionData","description":"dev.kord.core.cache.data.InteractionData.Companion.from","location":"core/dev.kord.core.cache.data/-interaction-data/-companion/from.html","searchKeys":["from","fun from(interaction: DiscordInteraction): InteractionData","dev.kord.core.cache.data.InteractionData.Companion.from"]},{"name":"fun from(metadata: DiscordAutoModerationActionMetadata): AutoModerationActionMetadataData","description":"dev.kord.core.cache.data.AutoModerationActionMetadataData.Companion.from","location":"core/dev.kord.core.cache.data/-auto-moderation-action-metadata-data/-companion/from.html","searchKeys":["from","fun from(metadata: DiscordAutoModerationActionMetadata): AutoModerationActionMetadataData","dev.kord.core.cache.data.AutoModerationActionMetadataData.Companion.from"]},{"name":"fun from(metadata: DiscordAutoModerationRuleTriggerMetadata): AutoModerationRuleTriggerMetadataData","description":"dev.kord.core.cache.data.AutoModerationRuleTriggerMetadataData.Companion.from","location":"core/dev.kord.core.cache.data/-auto-moderation-rule-trigger-metadata-data/-companion/from.html","searchKeys":["from","fun from(metadata: DiscordAutoModerationRuleTriggerMetadata): AutoModerationRuleTriggerMetadataData","dev.kord.core.cache.data.AutoModerationRuleTriggerMetadataData.Companion.from"]},{"name":"fun from(partialGuild: DiscordPartialGuild): PartialGuildData","description":"dev.kord.core.cache.data.PartialGuildData.Companion.from","location":"core/dev.kord.core.cache.data/-partial-guild-data/-companion/from.html","searchKeys":["from","fun from(partialGuild: DiscordPartialGuild): PartialGuildData","dev.kord.core.cache.data.PartialGuildData.Companion.from"]},{"name":"fun from(permission: DiscordGuildApplicationCommandPermission): GuildApplicationCommandPermissionData","description":"dev.kord.core.cache.data.GuildApplicationCommandPermissionData.Companion.from","location":"core/dev.kord.core.cache.data/-guild-application-command-permission-data/-companion/from.html","searchKeys":["from","fun from(permission: DiscordGuildApplicationCommandPermission): GuildApplicationCommandPermissionData","dev.kord.core.cache.data.GuildApplicationCommandPermissionData.Companion.from"]},{"name":"fun from(permissions: DiscordGuildApplicationCommandPermissions): GuildApplicationCommandPermissionsData","description":"dev.kord.core.cache.data.GuildApplicationCommandPermissionsData.Companion.from","location":"core/dev.kord.core.cache.data/-guild-application-command-permissions-data/-companion/from.html","searchKeys":["from","fun from(permissions: DiscordGuildApplicationCommandPermissions): GuildApplicationCommandPermissionsData","dev.kord.core.cache.data.GuildApplicationCommandPermissionsData.Companion.from"]},{"name":"fun from(rule: DiscordAutoModerationRule): AutoModerationRuleData","description":"dev.kord.core.cache.data.AutoModerationRuleData.Companion.from","location":"core/dev.kord.core.cache.data/-auto-moderation-rule-data/-companion/from.html","searchKeys":["from","fun from(rule: DiscordAutoModerationRule): AutoModerationRuleData","dev.kord.core.cache.data.AutoModerationRuleData.Companion.from"]},{"name":"fun from(stageInstance: DiscordStageInstance): StageInstanceData","description":"dev.kord.core.cache.data.StageInstanceData.Companion.from","location":"core/dev.kord.core.cache.data/-stage-instance-data/-companion/from.html","searchKeys":["from","fun from(stageInstance: DiscordStageInstance): StageInstanceData","dev.kord.core.cache.data.StageInstanceData.Companion.from"]},{"name":"fun from(template: DiscordTemplate): TemplateData","description":"dev.kord.core.cache.data.TemplateData.Companion.from","location":"core/dev.kord.core.cache.data/-template-data/-companion/from.html","searchKeys":["from","fun from(template: DiscordTemplate): TemplateData","dev.kord.core.cache.data.TemplateData.Companion.from"]},{"name":"fun from(threadMetadata: DiscordThreadMetadata): ThreadMetadataData","description":"dev.kord.core.cache.data.ThreadMetadataData.Companion.from","location":"core/dev.kord.core.cache.data/-thread-metadata-data/-companion/from.html","searchKeys":["from","fun from(threadMetadata: DiscordThreadMetadata): ThreadMetadataData","dev.kord.core.cache.data.ThreadMetadataData.Companion.from"]},{"name":"fun from(userId: Snowflake, entity: DiscordAddedGuildMember): MemberData","description":"dev.kord.core.cache.data.MemberData.Companion.from","location":"core/dev.kord.core.cache.data/-member-data/-companion/from.html","searchKeys":["from","fun from(userId: Snowflake, entity: DiscordAddedGuildMember): MemberData","dev.kord.core.cache.data.MemberData.Companion.from"]},{"name":"fun from(userId: Snowflake, guildId: Snowflake, entity: DiscordGuildMember): MemberData","description":"dev.kord.core.cache.data.MemberData.Companion.from","location":"core/dev.kord.core.cache.data/-member-data/-companion/from.html","searchKeys":["from","fun from(userId: Snowflake, guildId: Snowflake, entity: DiscordGuildMember): MemberData","dev.kord.core.cache.data.MemberData.Companion.from"]},{"name":"fun from(userId: Snowflake, guildId: Snowflake, entity: DiscordInteractionGuildMember): MemberData","description":"dev.kord.core.cache.data.MemberData.Companion.from","location":"core/dev.kord.core.cache.data/-member-data/-companion/from.html","searchKeys":["from","fun from(userId: Snowflake, guildId: Snowflake, entity: DiscordInteractionGuildMember): MemberData","dev.kord.core.cache.data.MemberData.Companion.from"]},{"name":"fun gateways(gatewayBuilder: (resources: ClientResources, shards: List<Int>) -> List<Gateway>)","description":"dev.kord.core.builder.kord.KordBuilder.gateways","location":"core/dev.kord.core.builder.kord/-kord-builder/gateways.html","searchKeys":["gateways","fun gateways(gatewayBuilder: (resources: ClientResources, shards: List<Int>) -> List<Gateway>)","dev.kord.core.builder.kord.KordBuilder.gateways"]},{"name":"fun getAuditLogEntries(guildId: Snowflake, request: AuditLogGetRequest = AuditLogGetRequest()): Flow<DiscordAuditLogEntry>","description":"dev.kord.core.supplier.RestEntitySupplier.getAuditLogEntries","location":"core/dev.kord.core.supplier/-rest-entity-supplier/get-audit-log-entries.html","searchKeys":["getAuditLogEntries","fun getAuditLogEntries(guildId: Snowflake, request: AuditLogGetRequest = AuditLogGetRequest()): Flow<DiscordAuditLogEntry>","dev.kord.core.supplier.RestEntitySupplier.getAuditLogEntries"]},{"name":"fun getBannerUrl(format: Image.Format): String?","description":"dev.kord.core.entity.Guild.getBannerUrl","location":"core/dev.kord.core.entity/-guild/get-banner-url.html","searchKeys":["getBannerUrl","fun getBannerUrl(format: Image.Format): String?","dev.kord.core.entity.Guild.getBannerUrl"]},{"name":"fun getBannerUrl(format: Image.Format): String?","description":"dev.kord.core.entity.PartialGuild.getBannerUrl","location":"core/dev.kord.core.entity/-partial-guild/get-banner-url.html","searchKeys":["getBannerUrl","fun getBannerUrl(format: Image.Format): String?","dev.kord.core.entity.PartialGuild.getBannerUrl"]},{"name":"fun getBannerUrl(format: Image.Format): String?","description":"dev.kord.core.entity.User.getBannerUrl","location":"core/dev.kord.core.entity/-user/get-banner-url.html","searchKeys":["getBannerUrl","fun getBannerUrl(format: Image.Format): String?","dev.kord.core.entity.User.getBannerUrl"]},{"name":"fun getDiscoverySplashUrl(format: Image.Format): String?","description":"dev.kord.core.entity.Guild.getDiscoverySplashUrl","location":"core/dev.kord.core.entity/-guild/get-discovery-splash-url.html","searchKeys":["getDiscoverySplashUrl","fun getDiscoverySplashUrl(format: Image.Format): String?","dev.kord.core.entity.Guild.getDiscoverySplashUrl"]},{"name":"fun getDiscoverySplashUrl(format: Image.Format): String?","description":"dev.kord.core.entity.PartialGuild.getDiscoverySplashUrl","location":"core/dev.kord.core.entity/-partial-guild/get-discovery-splash-url.html","searchKeys":["getDiscoverySplashUrl","fun getDiscoverySplashUrl(format: Image.Format): String?","dev.kord.core.entity.PartialGuild.getDiscoverySplashUrl"]},{"name":"fun getGlobalApplicationCommands(withLocalizations: Boolean? = null): Flow<GlobalApplicationCommand>","description":"dev.kord.core.Kord.getGlobalApplicationCommands","location":"core/dev.kord.core/-kord/get-global-application-commands.html","searchKeys":["getGlobalApplicationCommands","fun getGlobalApplicationCommands(withLocalizations: Boolean? = null): Flow<GlobalApplicationCommand>","dev.kord.core.Kord.getGlobalApplicationCommands"]},{"name":"fun getGuildApplicationCommands(guildId: Snowflake, withLocalizations: Boolean? = null): Flow<GuildApplicationCommand>","description":"dev.kord.core.Kord.getGuildApplicationCommands","location":"core/dev.kord.core/-kord/get-guild-application-commands.html","searchKeys":["getGuildApplicationCommands","fun getGuildApplicationCommands(guildId: Snowflake, withLocalizations: Boolean? = null): Flow<GuildApplicationCommand>","dev.kord.core.Kord.getGuildApplicationCommands"]},{"name":"fun getIconUrl(format: Image.Format): String?","description":"dev.kord.core.entity.Guild.getIconUrl","location":"core/dev.kord.core.entity/-guild/get-icon-url.html","searchKeys":["getIconUrl","fun getIconUrl(format: Image.Format): String?","dev.kord.core.entity.Guild.getIconUrl"]},{"name":"fun getIconUrl(format: Image.Format): String?","description":"dev.kord.core.entity.PartialGuild.getIconUrl","location":"core/dev.kord.core.entity/-partial-guild/get-icon-url.html","searchKeys":["getIconUrl","fun getIconUrl(format: Image.Format): String?","dev.kord.core.entity.PartialGuild.getIconUrl"]},{"name":"fun getReactors(channelId: Snowflake, messageId: Snowflake, emoji: ReactionEmoji): Flow<User>","description":"dev.kord.core.supplier.RestEntitySupplier.getReactors","location":"core/dev.kord.core.supplier/-rest-entity-supplier/get-reactors.html","searchKeys":["getReactors","fun getReactors(channelId: Snowflake, messageId: Snowflake, emoji: ReactionEmoji): Flow<User>","dev.kord.core.supplier.RestEntitySupplier.getReactors"]},{"name":"fun getSplashUrl(format: Image.Format): String?","description":"dev.kord.core.entity.Guild.getSplashUrl","location":"core/dev.kord.core.entity/-guild/get-splash-url.html","searchKeys":["getSplashUrl","fun getSplashUrl(format: Image.Format): String?","dev.kord.core.entity.Guild.getSplashUrl"]},{"name":"fun getUrl(format: Image.Format): String?","description":"dev.kord.core.entity.User.Avatar.getUrl","location":"core/dev.kord.core.entity/-user/-avatar/get-url.html","searchKeys":["getUrl","fun getUrl(format: Image.Format): String?","dev.kord.core.entity.User.Avatar.getUrl"]},{"name":"fun getUrl(format: Image.Format, size: Image.Size): String?","description":"dev.kord.core.entity.User.Avatar.getUrl","location":"core/dev.kord.core.entity/-user/-avatar/get-url.html","searchKeys":["getUrl","fun getUrl(format: Image.Format, size: Image.Size): String?","dev.kord.core.entity.User.Avatar.getUrl"]},{"name":"fun getUrl(size: Image.Size): String","description":"dev.kord.core.entity.User.Avatar.getUrl","location":"core/dev.kord.core.entity/-user/-avatar/get-url.html","searchKeys":["getUrl","fun getUrl(size: Image.Size): String","dev.kord.core.entity.User.Avatar.getUrl"]},{"name":"fun globalApplicationCommand(applicationId: Snowflake, commandId: Snowflake, service: InteractionService = kord.rest.interaction): GlobalApplicationCommandBehavior","description":"dev.kord.core.Unsafe.globalApplicationCommand","location":"core/dev.kord.core/-unsafe/global-application-command.html","searchKeys":["globalApplicationCommand","fun globalApplicationCommand(applicationId: Snowflake, commandId: Snowflake, service: InteractionService = kord.rest.interaction): GlobalApplicationCommandBehavior","dev.kord.core.Unsafe.globalApplicationCommand"]},{"name":"fun globalApplicationCommand(applicationId: Snowflake, guildId: Snowflake, id: Snowflake): GuildApplicationCommandBehavior","description":"dev.kord.core.Unsafe.globalApplicationCommand","location":"core/dev.kord.core/-unsafe/global-application-command.html","searchKeys":["globalApplicationCommand","fun globalApplicationCommand(applicationId: Snowflake, guildId: Snowflake, id: Snowflake): GuildApplicationCommandBehavior","dev.kord.core.Unsafe.globalApplicationCommand"]},{"name":"fun globalApplicationCommand(applicationId: Snowflake, id: Snowflake): GlobalApplicationCommandBehavior","description":"dev.kord.core.Unsafe.globalApplicationCommand","location":"core/dev.kord.core/-unsafe/global-application-command.html","searchKeys":["globalApplicationCommand","fun globalApplicationCommand(applicationId: Snowflake, id: Snowflake): GlobalApplicationCommandBehavior","dev.kord.core.Unsafe.globalApplicationCommand"]},{"name":"fun guild(id: Snowflake): GuildBehavior","description":"dev.kord.core.Unsafe.guild","location":"core/dev.kord.core/-unsafe/guild.html","searchKeys":["guild","fun guild(id: Snowflake): GuildBehavior","dev.kord.core.Unsafe.guild"]},{"name":"fun guildApplicationCommand(guildId: Snowflake, applicationId: Snowflake, commandId: Snowflake, service: InteractionService = kord.rest.interaction): GuildApplicationCommandBehavior","description":"dev.kord.core.Unsafe.guildApplicationCommand","location":"core/dev.kord.core/-unsafe/guild-application-command.html","searchKeys":["guildApplicationCommand","fun guildApplicationCommand(guildId: Snowflake, applicationId: Snowflake, commandId: Snowflake, service: InteractionService = kord.rest.interaction): GuildApplicationCommandBehavior","dev.kord.core.Unsafe.guildApplicationCommand"]},{"name":"fun guildChannel(guildId: Snowflake, id: Snowflake): GuildChannelBehavior","description":"dev.kord.core.Unsafe.guildChannel","location":"core/dev.kord.core/-unsafe/guild-channel.html","searchKeys":["guildChannel","fun guildChannel(guildId: Snowflake, id: Snowflake): GuildChannelBehavior","dev.kord.core.Unsafe.guildChannel"]},{"name":"fun guildEmoji(guildId: Snowflake, id: Snowflake, kord: Kord): GuildEmojiBehavior","description":"dev.kord.core.Unsafe.guildEmoji","location":"core/dev.kord.core/-unsafe/guild-emoji.html","searchKeys":["guildEmoji","fun guildEmoji(guildId: Snowflake, id: Snowflake, kord: Kord): GuildEmojiBehavior","dev.kord.core.Unsafe.guildEmoji"]},{"name":"fun guildMessageChannel(guildId: Snowflake, id: Snowflake): GuildMessageChannelBehavior","description":"dev.kord.core.Unsafe.guildMessageChannel","location":"core/dev.kord.core/-unsafe/guild-message-channel.html","searchKeys":["guildMessageChannel","fun guildMessageChannel(guildId: Snowflake, id: Snowflake): GuildMessageChannelBehavior","dev.kord.core.Unsafe.guildMessageChannel"]},{"name":"fun guildScheduledEvent(id: Snowflake, guildId: Snowflake): GuildScheduledEventBehavior","description":"dev.kord.core.Unsafe.guildScheduledEvent","location":"core/dev.kord.core/-unsafe/guild-scheduled-event.html","searchKeys":["guildScheduledEvent","fun guildScheduledEvent(id: Snowflake, guildId: Snowflake): GuildScheduledEventBehavior","dev.kord.core.Unsafe.guildScheduledEvent"]},{"name":"fun guilds(generator: Generator<GuildData, Snowflake>)","description":"dev.kord.core.cache.KordCacheBuilder.guilds","location":"core/dev.kord.core.cache/-kord-cache-builder/guilds.html","searchKeys":["guilds","fun guilds(generator: Generator<GuildData, Snowflake>)","dev.kord.core.cache.KordCacheBuilder.guilds"]},{"name":"fun keywordAutoModerationRule(guildId: Snowflake, ruleId: Snowflake): KeywordAutoModerationRuleBehavior","description":"dev.kord.core.Unsafe.keywordAutoModerationRule","location":"core/dev.kord.core/-unsafe/keyword-auto-moderation-rule.html","searchKeys":["keywordAutoModerationRule","fun keywordAutoModerationRule(guildId: Snowflake, ruleId: Snowflake): KeywordAutoModerationRuleBehavior","dev.kord.core.Unsafe.keywordAutoModerationRule"]},{"name":"fun keywordPresetAutoModerationRule(guildId: Snowflake, ruleId: Snowflake): KeywordPresetAutoModerationRuleBehavior","description":"dev.kord.core.Unsafe.keywordPresetAutoModerationRule","location":"core/dev.kord.core/-unsafe/keyword-preset-auto-moderation-rule.html","searchKeys":["keywordPresetAutoModerationRule","fun keywordPresetAutoModerationRule(guildId: Snowflake, ruleId: Snowflake): KeywordPresetAutoModerationRuleBehavior","dev.kord.core.Unsafe.keywordPresetAutoModerationRule"]},{"name":"fun member(guildId: Snowflake, id: Snowflake): MemberBehavior","description":"dev.kord.core.Unsafe.member","location":"core/dev.kord.core/-unsafe/member.html","searchKeys":["member","fun member(guildId: Snowflake, id: Snowflake): MemberBehavior","dev.kord.core.Unsafe.member"]},{"name":"fun members(generator: Generator<MemberData, String>)","description":"dev.kord.core.cache.KordCacheBuilder.members","location":"core/dev.kord.core.cache/-kord-cache-builder/members.html","searchKeys":["members","fun members(generator: Generator<MemberData, String>)","dev.kord.core.cache.KordCacheBuilder.members"]},{"name":"fun mentionSpamAutoModerationRule(guildId: Snowflake, ruleId: Snowflake): MentionSpamAutoModerationRuleBehavior","description":"dev.kord.core.Unsafe.mentionSpamAutoModerationRule","location":"core/dev.kord.core/-unsafe/mention-spam-auto-moderation-rule.html","searchKeys":["mentionSpamAutoModerationRule","fun mentionSpamAutoModerationRule(guildId: Snowflake, ruleId: Snowflake): MentionSpamAutoModerationRuleBehavior","dev.kord.core.Unsafe.mentionSpamAutoModerationRule"]},{"name":"fun message(channelId: Snowflake, messageId: Snowflake): MessageBehavior","description":"dev.kord.core.Unsafe.message","location":"core/dev.kord.core/-unsafe/message.html","searchKeys":["message","fun message(channelId: Snowflake, messageId: Snowflake): MessageBehavior","dev.kord.core.Unsafe.message"]},{"name":"fun messageChannel(id: Snowflake): MessageChannelBehavior","description":"dev.kord.core.Unsafe.messageChannel","location":"core/dev.kord.core/-unsafe/message-channel.html","searchKeys":["messageChannel","fun messageChannel(id: Snowflake): MessageChannelBehavior","dev.kord.core.Unsafe.messageChannel"]},{"name":"fun messages(generator: Generator<MessageData, Snowflake>)","description":"dev.kord.core.cache.KordCacheBuilder.messages","location":"core/dev.kord.core.cache/-kord-cache-builder/messages.html","searchKeys":["messages","fun messages(generator: Generator<MessageData, Snowflake>)","dev.kord.core.cache.KordCacheBuilder.messages"]},{"name":"fun newsChannel(guildId: Snowflake, id: Snowflake): NewsChannelBehavior","description":"dev.kord.core.Unsafe.newsChannel","location":"core/dev.kord.core/-unsafe/news-channel.html","searchKeys":["newsChannel","fun newsChannel(guildId: Snowflake, id: Snowflake): NewsChannelBehavior","dev.kord.core.Unsafe.newsChannel"]},{"name":"fun none(): GatewayEventInterceptor","description":"dev.kord.core.gateway.handler.GatewayEventInterceptor.Companion.none","location":"core/dev.kord.core.gateway.handler/-gateway-event-interceptor/-companion/none.html","searchKeys":["none","fun none(): GatewayEventInterceptor","dev.kord.core.gateway.handler.GatewayEventInterceptor.Companion.none"]},{"name":"fun plus(selfId: Snowflake, reaction: MessageReactionAddData): MessageData","description":"dev.kord.core.cache.data.MessageData.plus","location":"core/dev.kord.core.cache.data/-message-data/plus.html","searchKeys":["plus","fun plus(selfId: Snowflake, reaction: MessageReactionAddData): MessageData","dev.kord.core.cache.data.MessageData.plus"]},{"name":"fun presences(generator: Generator<PresenceData, String>)","description":"dev.kord.core.cache.KordCacheBuilder.presences","location":"core/dev.kord.core.cache/-kord-cache-builder/presences.html","searchKeys":["presences","fun presences(generator: Generator<PresenceData, String>)","dev.kord.core.cache.KordCacheBuilder.presences"]},{"name":"fun privateThreadParent(guildId: Snowflake, id: Snowflake): PrivateThreadParentChannelBehavior","description":"dev.kord.core.Unsafe.privateThreadParent","location":"core/dev.kord.core/-unsafe/private-thread-parent.html","searchKeys":["privateThreadParent","fun privateThreadParent(guildId: Snowflake, id: Snowflake): PrivateThreadParentChannelBehavior","dev.kord.core.Unsafe.privateThreadParent"]},{"name":"fun publicThreadParent(guildId: Snowflake, id: Snowflake): ThreadParentChannelBehavior","description":"dev.kord.core.Unsafe.publicThreadParent","location":"core/dev.kord.core/-unsafe/public-thread-parent.html","searchKeys":["publicThreadParent","fun publicThreadParent(guildId: Snowflake, id: Snowflake): ThreadParentChannelBehavior","dev.kord.core.Unsafe.publicThreadParent"]},{"name":"fun requestHandler(handlerBuilder: (resources: ClientResources) -> RequestHandler)","description":"dev.kord.core.builder.kord.KordBuilder.requestHandler","location":"core/dev.kord.core.builder.kord/-kord-builder/request-handler.html","searchKeys":["requestHandler","fun requestHandler(handlerBuilder: (resources: ClientResources) -> RequestHandler)","dev.kord.core.builder.kord.KordBuilder.requestHandler"]},{"name":"fun requestHandler(handlerBuilder: (resources: ClientResources) -> RequestHandler)","description":"dev.kord.core.builder.kord.RestOnlyBuilder.requestHandler","location":"core/dev.kord.core.builder.kord/-rest-only-builder/request-handler.html","searchKeys":["requestHandler","fun requestHandler(handlerBuilder: (resources: ClientResources) -> RequestHandler)","dev.kord.core.builder.kord.RestOnlyBuilder.requestHandler"]},{"name":"fun role(guildId: Snowflake, id: Snowflake): RoleBehavior","description":"dev.kord.core.Unsafe.role","location":"core/dev.kord.core/-unsafe/role.html","searchKeys":["role","fun role(guildId: Snowflake, id: Snowflake): RoleBehavior","dev.kord.core.Unsafe.role"]},{"name":"fun roles(generator: Generator<RoleData, Snowflake>)","description":"dev.kord.core.cache.KordCacheBuilder.roles","location":"core/dev.kord.core.cache/-kord-cache-builder/roles.html","searchKeys":["roles","fun roles(generator: Generator<RoleData, Snowflake>)","dev.kord.core.cache.KordCacheBuilder.roles"]},{"name":"fun sharding(shards: (recommended: Int) -> Shards)","description":"dev.kord.core.builder.kord.KordBuilder.sharding","location":"core/dev.kord.core.builder.kord/-kord-builder/sharding.html","searchKeys":["sharding","fun sharding(shards: (recommended: Int) -> Shards)","dev.kord.core.builder.kord.KordBuilder.sharding"]},{"name":"fun spamAutoModerationRule(guildId: Snowflake, ruleId: Snowflake): SpamAutoModerationRuleBehavior","description":"dev.kord.core.Unsafe.spamAutoModerationRule","location":"core/dev.kord.core/-unsafe/spam-auto-moderation-rule.html","searchKeys":["spamAutoModerationRule","fun spamAutoModerationRule(guildId: Snowflake, ruleId: Snowflake): SpamAutoModerationRuleBehavior","dev.kord.core.Unsafe.spamAutoModerationRule"]},{"name":"fun stageInstance(id: Snowflake, channelId: Snowflake): StageInstanceBehavior","description":"dev.kord.core.Unsafe.stageInstance","location":"core/dev.kord.core/-unsafe/stage-instance.html","searchKeys":["stageInstance","fun stageInstance(id: Snowflake, channelId: Snowflake): StageInstanceBehavior","dev.kord.core.Unsafe.stageInstance"]},{"name":"fun stickers(generator: Generator<StickerData, Snowflake>)","description":"dev.kord.core.cache.KordCacheBuilder.stickers","location":"core/dev.kord.core.cache/-kord-cache-builder/stickers.html","searchKeys":["stickers","fun stickers(generator: Generator<StickerData, Snowflake>)","dev.kord.core.cache.KordCacheBuilder.stickers"]},{"name":"fun textChannel(guildId: Snowflake, id: Snowflake): TextChannelBehavior","description":"dev.kord.core.Unsafe.textChannel","location":"core/dev.kord.core/-unsafe/text-channel.html","searchKeys":["textChannel","fun textChannel(guildId: Snowflake, id: Snowflake): TextChannelBehavior","dev.kord.core.Unsafe.textChannel"]},{"name":"fun thread(guildId: Snowflake, parentId: Snowflake, id: Snowflake): ThreadChannelBehavior","description":"dev.kord.core.Unsafe.thread","location":"core/dev.kord.core/-unsafe/thread.html","searchKeys":["thread","fun thread(guildId: Snowflake, parentId: Snowflake, id: Snowflake): ThreadChannelBehavior","dev.kord.core.Unsafe.thread"]},{"name":"fun threadMember(id: Snowflake, threadId: Snowflake): ThreadMemberBehavior","description":"dev.kord.core.Unsafe.threadMember","location":"core/dev.kord.core/-unsafe/thread-member.html","searchKeys":["threadMember","fun threadMember(id: Snowflake, threadId: Snowflake): ThreadMemberBehavior","dev.kord.core.Unsafe.threadMember"]},{"name":"fun topGuildChannel(guildId: Snowflake, id: Snowflake): TopGuildChannelBehavior","description":"dev.kord.core.Unsafe.topGuildChannel","location":"core/dev.kord.core/-unsafe/top-guild-channel.html","searchKeys":["topGuildChannel","fun topGuildChannel(guildId: Snowflake, id: Snowflake): TopGuildChannelBehavior","dev.kord.core.Unsafe.topGuildChannel"]},{"name":"fun topGuildMessageChannel(guildId: Snowflake, id: Snowflake): TopGuildMessageChannelBehavior","description":"dev.kord.core.Unsafe.topGuildMessageChannel","location":"core/dev.kord.core/-unsafe/top-guild-message-channel.html","searchKeys":["topGuildMessageChannel","fun topGuildMessageChannel(guildId: Snowflake, id: Snowflake): TopGuildMessageChannelBehavior","dev.kord.core.Unsafe.topGuildMessageChannel"]},{"name":"fun user(id: Snowflake): UserBehavior","description":"dev.kord.core.Unsafe.user","location":"core/dev.kord.core/-unsafe/user.html","searchKeys":["user","fun user(id: Snowflake): UserBehavior","dev.kord.core.Unsafe.user"]},{"name":"fun users(generator: Generator<UserData, Snowflake>)","description":"dev.kord.core.cache.KordCacheBuilder.users","location":"core/dev.kord.core.cache/-kord-cache-builder/users.html","searchKeys":["users","fun users(generator: Generator<UserData, Snowflake>)","dev.kord.core.cache.KordCacheBuilder.users"]},{"name":"fun voiceChannel(guildId: Snowflake, id: Snowflake): VoiceChannelBehavior","description":"dev.kord.core.Unsafe.voiceChannel","location":"core/dev.kord.core/-unsafe/voice-channel.html","searchKeys":["voiceChannel","fun voiceChannel(guildId: Snowflake, id: Snowflake): VoiceChannelBehavior","dev.kord.core.Unsafe.voiceChannel"]},{"name":"fun voiceState(generator: Generator<VoiceStateData, String>)","description":"dev.kord.core.cache.KordCacheBuilder.voiceState","location":"core/dev.kord.core.cache/-kord-cache-builder/voice-state.html","searchKeys":["voiceState","fun voiceState(generator: Generator<VoiceStateData, String>)","dev.kord.core.cache.KordCacheBuilder.voiceState"]},{"name":"fun webhook(id: Snowflake): WebhookBehavior","description":"dev.kord.core.Unsafe.webhook","location":"core/dev.kord.core/-unsafe/webhook.html","searchKeys":["webhook","fun webhook(id: Snowflake): WebhookBehavior","dev.kord.core.Unsafe.webhook"]},{"name":"fun webhooks(generator: Generator<WebhookData, Snowflake>)","description":"dev.kord.core.cache.KordCacheBuilder.webhooks","location":"core/dev.kord.core.cache/-kord-cache-builder/webhooks.html","searchKeys":["webhooks","fun webhooks(generator: Generator<WebhookData, Snowflake>)","dev.kord.core.cache.KordCacheBuilder.webhooks"]},{"name":"infix fun EntitySupplier.withFallback(other: EntitySupplier): EntitySupplier","description":"dev.kord.core.supplier.withFallback","location":"core/dev.kord.core.supplier/with-fallback.html","searchKeys":["withFallback","infix fun EntitySupplier.withFallback(other: EntitySupplier): EntitySupplier","dev.kord.core.supplier.withFallback"]},{"name":"inline fun <T : ApplicationCommand> applicationCommandNotFound(commandId: Snowflake): Nothing","description":"dev.kord.core.exception.EntityNotFoundException.Companion.applicationCommandNotFound","location":"core/dev.kord.core.exception/-entity-not-found-exception/-companion/application-command-not-found.html","searchKeys":["applicationCommandNotFound","inline fun <T : ApplicationCommand> applicationCommandNotFound(commandId: Snowflake): Nothing","dev.kord.core.exception.EntityNotFoundException.Companion.applicationCommandNotFound"]},{"name":"inline fun <T : Channel> channelNotFound(channelId: Snowflake): Nothing","description":"dev.kord.core.exception.EntityNotFoundException.Companion.channelNotFound","location":"core/dev.kord.core.exception/-entity-not-found-exception/-companion/channel-not-found.html","searchKeys":["channelNotFound","inline fun <T : Channel> channelNotFound(channelId: Snowflake): Nothing","dev.kord.core.exception.EntityNotFoundException.Companion.channelNotFound"]},{"name":"inline fun <T : Event> Intents.IntentsBuilder.enableEvent()","description":"dev.kord.core.enableEvent","location":"core/dev.kord.core/enable-event.html","searchKeys":["enableEvent","inline fun <T : Event> Intents.IntentsBuilder.enableEvent()","dev.kord.core.enableEvent"]},{"name":"inline fun <T : Event> Kord.on(scope: CoroutineScope = this, noinline consumer: suspend T.() -> Unit): Job","description":"dev.kord.core.on","location":"core/dev.kord.core/on.html","searchKeys":["on","inline fun <T : Event> Kord.on(scope: CoroutineScope = this, noinline consumer: suspend T.() -> Unit): Job","dev.kord.core.on"]},{"name":"inline fun <T : Event> LiveKordEntity.on(scope: CoroutineScope = this, noinline consumer: suspend (T) -> Unit): Job","description":"dev.kord.core.live.on","location":"core/dev.kord.core.live/on.html","searchKeys":["on","inline fun <T : Event> LiveKordEntity.on(scope: CoroutineScope = this, noinline consumer: suspend (T) -> Unit): Job","dev.kord.core.live.on"]},{"name":"inline fun Category.live(coroutineScope: CoroutineScope = kord + SupervisorJob(kord.coroutineContext.job), block: LiveCategory.() -> Unit): LiveCategory","description":"dev.kord.core.live.channel.live","location":"core/dev.kord.core.live.channel/live.html","searchKeys":["live","inline fun Category.live(coroutineScope: CoroutineScope = kord + SupervisorJob(kord.coroutineContext.job), block: LiveCategory.() -> Unit): LiveCategory","dev.kord.core.live.channel.live"]},{"name":"inline fun Channel.live(coroutineScope: CoroutineScope = kord + SupervisorJob(kord.coroutineContext.job), block: LiveChannel.() -> Unit): LiveChannel","description":"dev.kord.core.live.channel.live","location":"core/dev.kord.core.live.channel/live.html","searchKeys":["live","inline fun Channel.live(coroutineScope: CoroutineScope = kord + SupervisorJob(kord.coroutineContext.job), block: LiveChannel.() -> Unit): LiveChannel","dev.kord.core.live.channel.live"]},{"name":"inline fun DmChannel.live(coroutineScope: CoroutineScope = kord + SupervisorJob(kord.coroutineContext.job), block: LiveDmChannel.() -> Unit): LiveDmChannel","description":"dev.kord.core.live.channel.live","location":"core/dev.kord.core.live.channel/live.html","searchKeys":["live","inline fun DmChannel.live(coroutineScope: CoroutineScope = kord + SupervisorJob(kord.coroutineContext.job), block: LiveDmChannel.() -> Unit): LiveDmChannel","dev.kord.core.live.channel.live"]},{"name":"inline fun Guild.live(coroutineScope: CoroutineScope = kord + SupervisorJob(kord.coroutineContext.job), block: LiveGuild.() -> Unit): LiveGuild","description":"dev.kord.core.live.live","location":"core/dev.kord.core.live/live.html","searchKeys":["live","inline fun Guild.live(coroutineScope: CoroutineScope = kord + SupervisorJob(kord.coroutineContext.job), block: LiveGuild.() -> Unit): LiveGuild","dev.kord.core.live.live"]},{"name":"inline fun GuildBehavior.getAuditLogEntries(builder: AuditLogGetRequestBuilder.() -> Unit = {}): Flow<AuditLogEntry>","description":"dev.kord.core.behavior.getAuditLogEntries","location":"core/dev.kord.core.behavior/get-audit-log-entries.html","searchKeys":["getAuditLogEntries","inline fun GuildBehavior.getAuditLogEntries(builder: AuditLogGetRequestBuilder.() -> Unit = {}): Flow<AuditLogEntry>","dev.kord.core.behavior.getAuditLogEntries"]},{"name":"inline fun GuildBehavior.requestMembers(builder: RequestGuildMembersBuilder.() -> Unit = { requestAllMembers() }): Flow<MembersChunkEvent>","description":"dev.kord.core.behavior.requestMembers","location":"core/dev.kord.core.behavior/request-members.html","searchKeys":["requestMembers","inline fun GuildBehavior.requestMembers(builder: RequestGuildMembersBuilder.() -> Unit = { requestAllMembers() }): Flow<MembersChunkEvent>","dev.kord.core.behavior.requestMembers"]},{"name":"inline fun LiveChannel.onReactionAdd(reaction: ReactionEmoji, scope: CoroutineScope = this, crossinline block: suspend (ReactionAddEvent) -> Unit): Job","description":"dev.kord.core.live.channel.onReactionAdd","location":"core/dev.kord.core.live.channel/on-reaction-add.html","searchKeys":["onReactionAdd","inline fun LiveChannel.onReactionAdd(reaction: ReactionEmoji, scope: CoroutineScope = this, crossinline block: suspend (ReactionAddEvent) -> Unit): Job","dev.kord.core.live.channel.onReactionAdd"]},{"name":"inline fun LiveChannel.onReactionRemove(reaction: ReactionEmoji, scope: CoroutineScope = this, crossinline block: suspend (ReactionRemoveEvent) -> Unit): Job","description":"dev.kord.core.live.channel.onReactionRemove","location":"core/dev.kord.core.live.channel/on-reaction-remove.html","searchKeys":["onReactionRemove","inline fun LiveChannel.onReactionRemove(reaction: ReactionEmoji, scope: CoroutineScope = this, crossinline block: suspend (ReactionRemoveEvent) -> Unit): Job","dev.kord.core.live.channel.onReactionRemove"]},{"name":"inline fun LiveGuild.onReactionAdd(reaction: ReactionEmoji, scope: CoroutineScope = this, crossinline block: suspend (ReactionAddEvent) -> Unit): Job","description":"dev.kord.core.live.onReactionAdd","location":"core/dev.kord.core.live/on-reaction-add.html","searchKeys":["onReactionAdd","inline fun LiveGuild.onReactionAdd(reaction: ReactionEmoji, scope: CoroutineScope = this, crossinline block: suspend (ReactionAddEvent) -> Unit): Job","dev.kord.core.live.onReactionAdd"]},{"name":"inline fun LiveGuild.onReactionRemove(reaction: ReactionEmoji, scope: CoroutineScope = this, crossinline block: suspend (ReactionRemoveEvent) -> Unit): Job","description":"dev.kord.core.live.onReactionRemove","location":"core/dev.kord.core.live/on-reaction-remove.html","searchKeys":["onReactionRemove","inline fun LiveGuild.onReactionRemove(reaction: ReactionEmoji, scope: CoroutineScope = this, crossinline block: suspend (ReactionRemoveEvent) -> Unit): Job","dev.kord.core.live.onReactionRemove"]},{"name":"inline fun LiveMessage.onReactionAdd(reaction: ReactionEmoji, scope: CoroutineScope = this, crossinline block: suspend (ReactionAddEvent) -> Unit): Job","description":"dev.kord.core.live.onReactionAdd","location":"core/dev.kord.core.live/on-reaction-add.html","searchKeys":["onReactionAdd","inline fun LiveMessage.onReactionAdd(reaction: ReactionEmoji, scope: CoroutineScope = this, crossinline block: suspend (ReactionAddEvent) -> Unit): Job","dev.kord.core.live.onReactionAdd"]},{"name":"inline fun LiveMessage.onReactionRemove(reaction: ReactionEmoji, scope: CoroutineScope = this, crossinline block: suspend (ReactionRemoveEvent) -> Unit): Job","description":"dev.kord.core.live.onReactionRemove","location":"core/dev.kord.core.live/on-reaction-remove.html","searchKeys":["onReactionRemove","inline fun LiveMessage.onReactionRemove(reaction: ReactionEmoji, scope: CoroutineScope = this, crossinline block: suspend (ReactionRemoveEvent) -> Unit): Job","dev.kord.core.live.onReactionRemove"]},{"name":"inline fun Member.live(coroutineScope: CoroutineScope = kord + SupervisorJob(kord.coroutineContext.job), block: LiveMember.() -> Unit): LiveMember","description":"dev.kord.core.live.live","location":"core/dev.kord.core.live/live.html","searchKeys":["live","inline fun Member.live(coroutineScope: CoroutineScope = kord + SupervisorJob(kord.coroutineContext.job), block: LiveMember.() -> Unit): LiveMember","dev.kord.core.live.live"]},{"name":"inline fun Role.live(coroutineScope: CoroutineScope = kord + SupervisorJob(kord.coroutineContext.job), block: LiveRole.() -> Unit): LiveRole","description":"dev.kord.core.live.live","location":"core/dev.kord.core.live/live.html","searchKeys":["live","inline fun Role.live(coroutineScope: CoroutineScope = kord + SupervisorJob(kord.coroutineContext.job), block: LiveRole.() -> Unit): LiveRole","dev.kord.core.live.live"]},{"name":"inline fun TopGuildChannel.live(coroutineScope: CoroutineScope = kord + SupervisorJob(kord.coroutineContext.job), block: LiveGuildChannel.() -> Unit): LiveGuildChannel","description":"dev.kord.core.live.channel.live","location":"core/dev.kord.core.live.channel/live.html","searchKeys":["live","inline fun TopGuildChannel.live(coroutineScope: CoroutineScope = kord + SupervisorJob(kord.coroutineContext.job), block: LiveGuildChannel.() -> Unit): LiveGuildChannel","dev.kord.core.live.channel.live"]},{"name":"inline fun TopGuildMessageChannel.live(coroutineScope: CoroutineScope = kord + SupervisorJob(kord.coroutineContext.job), block: LiveGuildMessageChannel.() -> Unit): LiveGuildMessageChannel","description":"dev.kord.core.live.channel.live","location":"core/dev.kord.core.live.channel/live.html","searchKeys":["live","inline fun TopGuildMessageChannel.live(coroutineScope: CoroutineScope = kord + SupervisorJob(kord.coroutineContext.job), block: LiveGuildMessageChannel.() -> Unit): LiveGuildMessageChannel","dev.kord.core.live.channel.live"]},{"name":"inline fun User.live(coroutineScope: CoroutineScope = kord + SupervisorJob(kord.coroutineContext.job), block: LiveUser.() -> Unit): LiveUser","description":"dev.kord.core.live.live","location":"core/dev.kord.core.live/live.html","searchKeys":["live","inline fun User.live(coroutineScope: CoroutineScope = kord + SupervisorJob(kord.coroutineContext.job), block: LiveUser.() -> Unit): LiveUser","dev.kord.core.live.live"]},{"name":"inline fun VoiceChannel.live(coroutineScope: CoroutineScope = kord + SupervisorJob(kord.coroutineContext.job), block: LiveVoiceChannel.() -> Unit): LiveVoiceChannel","description":"dev.kord.core.live.channel.live","location":"core/dev.kord.core.live.channel/live.html","searchKeys":["live","inline fun VoiceChannel.live(coroutineScope: CoroutineScope = kord + SupervisorJob(kord.coroutineContext.job), block: LiveVoiceChannel.() -> Unit): LiveVoiceChannel","dev.kord.core.live.channel.live"]},{"name":"inline fun applicationCommandPermissionsNotFound(commandId: Snowflake): Nothing","description":"dev.kord.core.exception.EntityNotFoundException.Companion.applicationCommandPermissionsNotFound","location":"core/dev.kord.core.exception/-entity-not-found-exception/-companion/application-command-permissions-not-found.html","searchKeys":["applicationCommandPermissionsNotFound","inline fun applicationCommandPermissionsNotFound(commandId: Snowflake): Nothing","dev.kord.core.exception.EntityNotFoundException.Companion.applicationCommandPermissionsNotFound"]},{"name":"inline fun autoModerationRuleNotFound(guildId: Snowflake, ruleId: Snowflake): Nothing","description":"dev.kord.core.exception.EntityNotFoundException.Companion.autoModerationRuleNotFound","location":"core/dev.kord.core.exception/-entity-not-found-exception/-companion/auto-moderation-rule-not-found.html","searchKeys":["autoModerationRuleNotFound","inline fun autoModerationRuleNotFound(guildId: Snowflake, ruleId: Snowflake): Nothing","dev.kord.core.exception.EntityNotFoundException.Companion.autoModerationRuleNotFound"]},{"name":"inline fun banNotFound(guildId: Snowflake, userId: Snowflake): Nothing","description":"dev.kord.core.exception.EntityNotFoundException.Companion.banNotFound","location":"core/dev.kord.core.exception/-entity-not-found-exception/-companion/ban-not-found.html","searchKeys":["banNotFound","inline fun banNotFound(guildId: Snowflake, userId: Snowflake): Nothing","dev.kord.core.exception.EntityNotFoundException.Companion.banNotFound"]},{"name":"inline fun emojiNotFound(guildId: Snowflake, emojiId: Snowflake): Nothing","description":"dev.kord.core.exception.EntityNotFoundException.Companion.emojiNotFound","location":"core/dev.kord.core.exception/-entity-not-found-exception/-companion/emoji-not-found.html","searchKeys":["emojiNotFound","inline fun emojiNotFound(guildId: Snowflake, emojiId: Snowflake): Nothing","dev.kord.core.exception.EntityNotFoundException.Companion.emojiNotFound"]},{"name":"inline fun followupMessageNotFound(token: String, messageId: Snowflake): Nothing","description":"dev.kord.core.exception.EntityNotFoundException.Companion.followupMessageNotFound","location":"core/dev.kord.core.exception/-entity-not-found-exception/-companion/followup-message-not-found.html","searchKeys":["followupMessageNotFound","inline fun followupMessageNotFound(token: String, messageId: Snowflake): Nothing","dev.kord.core.exception.EntityNotFoundException.Companion.followupMessageNotFound"]},{"name":"inline fun getAuditLogEntries(guildId: Snowflake, builder: AuditLogGetRequestBuilder.() -> Unit): Flow<DiscordAuditLogEntry>","description":"dev.kord.core.supplier.RestEntitySupplier.getAuditLogEntries","location":"core/dev.kord.core.supplier/-rest-entity-supplier/get-audit-log-entries.html","searchKeys":["getAuditLogEntries","inline fun getAuditLogEntries(guildId: Snowflake, builder: AuditLogGetRequestBuilder.() -> Unit): Flow<DiscordAuditLogEntry>","dev.kord.core.supplier.RestEntitySupplier.getAuditLogEntries"]},{"name":"inline fun guildNotFound(guildId: Snowflake): Nothing","description":"dev.kord.core.exception.EntityNotFoundException.Companion.guildNotFound","location":"core/dev.kord.core.exception/-entity-not-found-exception/-companion/guild-not-found.html","searchKeys":["guildNotFound","inline fun guildNotFound(guildId: Snowflake): Nothing","dev.kord.core.exception.EntityNotFoundException.Companion.guildNotFound"]},{"name":"inline fun guildScheduledEventNotFound(eventId: Snowflake): Nothing","description":"dev.kord.core.exception.EntityNotFoundException.Companion.guildScheduledEventNotFound","location":"core/dev.kord.core.exception/-entity-not-found-exception/-companion/guild-scheduled-event-not-found.html","searchKeys":["guildScheduledEventNotFound","inline fun guildScheduledEventNotFound(eventId: Snowflake): Nothing","dev.kord.core.exception.EntityNotFoundException.Companion.guildScheduledEventNotFound"]},{"name":"inline fun interactionNotFound(token: String): Nothing","description":"dev.kord.core.exception.EntityNotFoundException.Companion.interactionNotFound","location":"core/dev.kord.core.exception/-entity-not-found-exception/-companion/interaction-not-found.html","searchKeys":["interactionNotFound","inline fun interactionNotFound(token: String): Nothing","dev.kord.core.exception.EntityNotFoundException.Companion.interactionNotFound"]},{"name":"inline fun inviteNotFound(code: String): Nothing","description":"dev.kord.core.exception.EntityNotFoundException.Companion.inviteNotFound","location":"core/dev.kord.core.exception/-entity-not-found-exception/-companion/invite-not-found.html","searchKeys":["inviteNotFound","inline fun inviteNotFound(code: String): Nothing","dev.kord.core.exception.EntityNotFoundException.Companion.inviteNotFound"]},{"name":"inline fun memberNotFound(guildId: Snowflake, userId: Snowflake): Nothing","description":"dev.kord.core.exception.EntityNotFoundException.Companion.memberNotFound","location":"core/dev.kord.core.exception/-entity-not-found-exception/-companion/member-not-found.html","searchKeys":["memberNotFound","inline fun memberNotFound(guildId: Snowflake, userId: Snowflake): Nothing","dev.kord.core.exception.EntityNotFoundException.Companion.memberNotFound"]},{"name":"inline fun messageNotFound(channelId: Snowflake, messageId: Snowflake): Nothing","description":"dev.kord.core.exception.EntityNotFoundException.Companion.messageNotFound","location":"core/dev.kord.core.exception/-entity-not-found-exception/-companion/message-not-found.html","searchKeys":["messageNotFound","inline fun messageNotFound(channelId: Snowflake, messageId: Snowflake): Nothing","dev.kord.core.exception.EntityNotFoundException.Companion.messageNotFound"]},{"name":"inline fun proxy(applicationId: Snowflake, builder: KordProxyBuilder.() -> Unit = {}): Kord","description":"dev.kord.core.Kord.Companion.proxy","location":"core/dev.kord.core/-kord/-companion/proxy.html","searchKeys":["proxy","inline fun proxy(applicationId: Snowflake, builder: KordProxyBuilder.() -> Unit = {}): Kord","dev.kord.core.Kord.Companion.proxy"]},{"name":"inline fun restOnly(token: String, builder: KordRestOnlyBuilder.() -> Unit = {}): Kord","description":"dev.kord.core.Kord.Companion.restOnly","location":"core/dev.kord.core/-kord/-companion/rest-only.html","searchKeys":["restOnly","inline fun restOnly(token: String, builder: KordRestOnlyBuilder.() -> Unit = {}): Kord","dev.kord.core.Kord.Companion.restOnly"]},{"name":"inline fun roleNotFound(guildId: Snowflake, roleId: Snowflake): Nothing","description":"dev.kord.core.exception.EntityNotFoundException.Companion.roleNotFound","location":"core/dev.kord.core.exception/-entity-not-found-exception/-companion/role-not-found.html","searchKeys":["roleNotFound","inline fun roleNotFound(guildId: Snowflake, roleId: Snowflake): Nothing","dev.kord.core.exception.EntityNotFoundException.Companion.roleNotFound"]},{"name":"inline fun selfNotFound(): Nothing","description":"dev.kord.core.exception.EntityNotFoundException.Companion.selfNotFound","location":"core/dev.kord.core.exception/-entity-not-found-exception/-companion/self-not-found.html","searchKeys":["selfNotFound","inline fun selfNotFound(): Nothing","dev.kord.core.exception.EntityNotFoundException.Companion.selfNotFound"]},{"name":"inline fun stageInstanceNotFound(channelId: Snowflake): Nothing","description":"dev.kord.core.exception.EntityNotFoundException.Companion.stageInstanceNotFound","location":"core/dev.kord.core.exception/-entity-not-found-exception/-companion/stage-instance-not-found.html","searchKeys":["stageInstanceNotFound","inline fun stageInstanceNotFound(channelId: Snowflake): Nothing","dev.kord.core.exception.EntityNotFoundException.Companion.stageInstanceNotFound"]},{"name":"inline fun stickerNotFound(stickerId: Snowflake): Nothing","description":"dev.kord.core.exception.EntityNotFoundException.Companion.stickerNotFound","location":"core/dev.kord.core.exception/-entity-not-found-exception/-companion/sticker-not-found.html","searchKeys":["stickerNotFound","inline fun stickerNotFound(stickerId: Snowflake): Nothing","dev.kord.core.exception.EntityNotFoundException.Companion.stickerNotFound"]},{"name":"inline fun templateNotFound(code: String): Nothing","description":"dev.kord.core.exception.EntityNotFoundException.Companion.templateNotFound","location":"core/dev.kord.core.exception/-entity-not-found-exception/-companion/template-not-found.html","searchKeys":["templateNotFound","inline fun templateNotFound(code: String): Nothing","dev.kord.core.exception.EntityNotFoundException.Companion.templateNotFound"]},{"name":"inline fun userNotFound(userId: Snowflake): Nothing","description":"dev.kord.core.exception.EntityNotFoundException.Companion.userNotFound","location":"core/dev.kord.core.exception/-entity-not-found-exception/-companion/user-not-found.html","searchKeys":["userNotFound","inline fun userNotFound(userId: Snowflake): Nothing","dev.kord.core.exception.EntityNotFoundException.Companion.userNotFound"]},{"name":"inline fun voiceConnectionGatewayNotFound(guildId: Snowflake): Nothing","description":"dev.kord.core.exception.GatewayNotFoundException.Companion.voiceConnectionGatewayNotFound","location":"core/dev.kord.core.exception/-gateway-not-found-exception/-companion/voice-connection-gateway-not-found.html","searchKeys":["voiceConnectionGatewayNotFound","inline fun voiceConnectionGatewayNotFound(guildId: Snowflake): Nothing","dev.kord.core.exception.GatewayNotFoundException.Companion.voiceConnectionGatewayNotFound"]},{"name":"inline fun webhookMessageNotFound(webhookId: Snowflake, token: String, messageId: Snowflake, threadId: Snowflake? = null): Nothing","description":"dev.kord.core.exception.EntityNotFoundException.Companion.webhookMessageNotFound","location":"core/dev.kord.core.exception/-entity-not-found-exception/-companion/webhook-message-not-found.html","searchKeys":["webhookMessageNotFound","inline fun webhookMessageNotFound(webhookId: Snowflake, token: String, messageId: Snowflake, threadId: Snowflake? = null): Nothing","dev.kord.core.exception.EntityNotFoundException.Companion.webhookMessageNotFound"]},{"name":"inline fun webhookNotFound(webhookId: Snowflake): Nothing","description":"dev.kord.core.exception.EntityNotFoundException.Companion.webhookNotFound","location":"core/dev.kord.core.exception/-entity-not-found-exception/-companion/webhook-not-found.html","searchKeys":["webhookNotFound","inline fun webhookNotFound(webhookId: Snowflake): Nothing","dev.kord.core.exception.EntityNotFoundException.Companion.webhookNotFound"]},{"name":"inline fun welcomeScreenNotFound(guildId: Snowflake): Nothing","description":"dev.kord.core.exception.EntityNotFoundException.Companion.welcomeScreenNotFound","location":"core/dev.kord.core.exception/-entity-not-found-exception/-companion/welcome-screen-not-found.html","searchKeys":["welcomeScreenNotFound","inline fun welcomeScreenNotFound(guildId: Snowflake): Nothing","dev.kord.core.exception.EntityNotFoundException.Companion.welcomeScreenNotFound"]},{"name":"inline fun widgetNotFound(id: Snowflake): Nothing","description":"dev.kord.core.exception.EntityNotFoundException.Companion.widgetNotFound","location":"core/dev.kord.core.exception/-entity-not-found-exception/-companion/widget-not-found.html","searchKeys":["widgetNotFound","inline fun widgetNotFound(id: Snowflake): Nothing","dev.kord.core.exception.EntityNotFoundException.Companion.widgetNotFound"]},{"name":"inline suspend fun <T : Channel> ChannelBehavior.asChannelOf(): T","description":"dev.kord.core.behavior.channel.asChannelOf","location":"core/dev.kord.core.behavior.channel/as-channel-of.html","searchKeys":["asChannelOf","inline suspend fun <T : Channel> ChannelBehavior.asChannelOf(): T","dev.kord.core.behavior.channel.asChannelOf"]},{"name":"inline suspend fun <T : Channel> ChannelBehavior.asChannelOfOrNull(): T?","description":"dev.kord.core.behavior.channel.asChannelOfOrNull","location":"core/dev.kord.core.behavior.channel/as-channel-of-or-null.html","searchKeys":["asChannelOfOrNull","inline suspend fun <T : Channel> ChannelBehavior.asChannelOfOrNull(): T?","dev.kord.core.behavior.channel.asChannelOfOrNull"]},{"name":"inline suspend fun <T : Channel> EntitySupplier.getChannelOf(id: Snowflake): T","description":"dev.kord.core.supplier.getChannelOf","location":"core/dev.kord.core.supplier/get-channel-of.html","searchKeys":["getChannelOf","inline suspend fun <T : Channel> EntitySupplier.getChannelOf(id: Snowflake): T","dev.kord.core.supplier.getChannelOf"]},{"name":"inline suspend fun <T : Channel> EntitySupplier.getChannelOfOrNull(id: Snowflake): T?","description":"dev.kord.core.supplier.getChannelOfOrNull","location":"core/dev.kord.core.supplier/get-channel-of-or-null.html","searchKeys":["getChannelOfOrNull","inline suspend fun <T : Channel> EntitySupplier.getChannelOfOrNull(id: Snowflake): T?","dev.kord.core.supplier.getChannelOfOrNull"]},{"name":"inline suspend fun <T : Channel> getChannelOf(id: Snowflake, strategy: EntitySupplyStrategy<*> = resources.defaultStrategy): T?","description":"dev.kord.core.Kord.getChannelOf","location":"core/dev.kord.core/-kord/get-channel-of.html","searchKeys":["getChannelOf","inline suspend fun <T : Channel> getChannelOf(id: Snowflake, strategy: EntitySupplyStrategy<*> = resources.defaultStrategy): T?","dev.kord.core.Kord.getChannelOf"]},{"name":"inline suspend fun <T : Channel> getChannelOfOrNull(): T?","description":"dev.kord.core.entity.GuildWidget.getChannelOfOrNull","location":"core/dev.kord.core.entity/-guild-widget/get-channel-of-or-null.html","searchKeys":["getChannelOfOrNull","inline suspend fun <T : Channel> getChannelOfOrNull(): T?","dev.kord.core.entity.GuildWidget.getChannelOfOrNull"]},{"name":"inline suspend fun <T : GlobalApplicationCommand> EntitySupplier.getGlobalApplicationCommandOf(applicationId: Snowflake, id: Snowflake): T","description":"dev.kord.core.supplier.getGlobalApplicationCommandOf","location":"core/dev.kord.core.supplier/get-global-application-command-of.html","searchKeys":["getGlobalApplicationCommandOf","inline suspend fun <T : GlobalApplicationCommand> EntitySupplier.getGlobalApplicationCommandOf(applicationId: Snowflake, id: Snowflake): T","dev.kord.core.supplier.getGlobalApplicationCommandOf"]},{"name":"inline suspend fun <T : GlobalApplicationCommand> EntitySupplier.getGlobalApplicationCommandOfOrNull(applicationId: Snowflake, id: Snowflake): T?","description":"dev.kord.core.supplier.getGlobalApplicationCommandOfOrNull","location":"core/dev.kord.core.supplier/get-global-application-command-of-or-null.html","searchKeys":["getGlobalApplicationCommandOfOrNull","inline suspend fun <T : GlobalApplicationCommand> EntitySupplier.getGlobalApplicationCommandOfOrNull(applicationId: Snowflake, id: Snowflake): T?","dev.kord.core.supplier.getGlobalApplicationCommandOfOrNull"]},{"name":"inline suspend fun <T : GlobalApplicationCommand> EntitySupplier.getGlobalApplicationOf(applicationId: Snowflake, id: Snowflake): T","description":"dev.kord.core.supplier.getGlobalApplicationOf","location":"core/dev.kord.core.supplier/get-global-application-of.html","searchKeys":["getGlobalApplicationOf","inline suspend fun <T : GlobalApplicationCommand> EntitySupplier.getGlobalApplicationOf(applicationId: Snowflake, id: Snowflake): T","dev.kord.core.supplier.getGlobalApplicationOf"]},{"name":"inline suspend fun <T : GlobalApplicationCommand> EntitySupplier.getGlobalApplicationOfOrNull(applicationId: Snowflake, id: Snowflake): T?","description":"dev.kord.core.supplier.getGlobalApplicationOfOrNull","location":"core/dev.kord.core.supplier/get-global-application-of-or-null.html","searchKeys":["getGlobalApplicationOfOrNull","inline suspend fun <T : GlobalApplicationCommand> EntitySupplier.getGlobalApplicationOfOrNull(applicationId: Snowflake, id: Snowflake): T?","dev.kord.core.supplier.getGlobalApplicationOfOrNull"]},{"name":"inline suspend fun <T : GuildApplicationCommand> EntitySupplier.getGuildApplicationCommandOf(applicationId: Snowflake, guildId: Snowflake, id: Snowflake): T","description":"dev.kord.core.supplier.getGuildApplicationCommandOf","location":"core/dev.kord.core.supplier/get-guild-application-command-of.html","searchKeys":["getGuildApplicationCommandOf","inline suspend fun <T : GuildApplicationCommand> EntitySupplier.getGuildApplicationCommandOf(applicationId: Snowflake, guildId: Snowflake, id: Snowflake): T","dev.kord.core.supplier.getGuildApplicationCommandOf"]},{"name":"inline suspend fun <T : GuildApplicationCommand> EntitySupplier.getGuildApplicationCommandOfOrNull(applicationId: Snowflake, guildId: Snowflake, id: Snowflake): T?","description":"dev.kord.core.supplier.getGuildApplicationCommandOfOrNull","location":"core/dev.kord.core.supplier/get-guild-application-command-of-or-null.html","searchKeys":["getGuildApplicationCommandOfOrNull","inline suspend fun <T : GuildApplicationCommand> EntitySupplier.getGuildApplicationCommandOfOrNull(applicationId: Snowflake, guildId: Snowflake, id: Snowflake): T?","dev.kord.core.supplier.getGuildApplicationCommandOfOrNull"]},{"name":"inline suspend fun <T : GuildApplicationCommand> GuildBehavior.getApplicationCommandOf(commandId: Snowflake): T","description":"dev.kord.core.behavior.getApplicationCommandOf","location":"core/dev.kord.core.behavior/get-application-command-of.html","searchKeys":["getApplicationCommandOf","inline suspend fun <T : GuildApplicationCommand> GuildBehavior.getApplicationCommandOf(commandId: Snowflake): T","dev.kord.core.behavior.getApplicationCommandOf"]},{"name":"inline suspend fun <T : GuildApplicationCommand> GuildBehavior.getApplicationCommandOfOrNull(commandId: Snowflake): T?","description":"dev.kord.core.behavior.getApplicationCommandOfOrNull","location":"core/dev.kord.core.behavior/get-application-command-of-or-null.html","searchKeys":["getApplicationCommandOfOrNull","inline suspend fun <T : GuildApplicationCommand> GuildBehavior.getApplicationCommandOfOrNull(commandId: Snowflake): T?","dev.kord.core.behavior.getApplicationCommandOfOrNull"]},{"name":"inline suspend fun <T : GuildApplicationCommand> getGuildApplicationCommandOf(guildId: Snowflake, commandId: Snowflake): T","description":"dev.kord.core.Kord.getGuildApplicationCommandOf","location":"core/dev.kord.core/-kord/get-guild-application-command-of.html","searchKeys":["getGuildApplicationCommandOf","inline suspend fun <T : GuildApplicationCommand> getGuildApplicationCommandOf(guildId: Snowflake, commandId: Snowflake): T","dev.kord.core.Kord.getGuildApplicationCommandOf"]},{"name":"inline suspend fun <T : GuildApplicationCommand> getGuildApplicationCommandOfOrNull(guildId: Snowflake, commandId: Snowflake): T?","description":"dev.kord.core.Kord.getGuildApplicationCommandOfOrNull","location":"core/dev.kord.core/-kord/get-guild-application-command-of-or-null.html","searchKeys":["getGuildApplicationCommandOfOrNull","inline suspend fun <T : GuildApplicationCommand> getGuildApplicationCommandOfOrNull(guildId: Snowflake, commandId: Snowflake): T?","dev.kord.core.Kord.getGuildApplicationCommandOfOrNull"]},{"name":"inline suspend fun <T : GuildChannel> GuildBehavior.getChannelOf(channelId: Snowflake): T","description":"dev.kord.core.behavior.getChannelOf","location":"core/dev.kord.core.behavior/get-channel-of.html","searchKeys":["getChannelOf","inline suspend fun <T : GuildChannel> GuildBehavior.getChannelOf(channelId: Snowflake): T","dev.kord.core.behavior.getChannelOf"]},{"name":"inline suspend fun <T : GuildChannel> GuildBehavior.getChannelOfOrNull(channelId: Snowflake): T?","description":"dev.kord.core.behavior.getChannelOfOrNull","location":"core/dev.kord.core.behavior/get-channel-of-or-null.html","searchKeys":["getChannelOfOrNull","inline suspend fun <T : GuildChannel> GuildBehavior.getChannelOfOrNull(channelId: Snowflake): T?","dev.kord.core.behavior.getChannelOfOrNull"]},{"name":"inline suspend fun <T : TopGuildChannel> getChannelOfOrNull(): T?","description":"dev.kord.core.entity.GuildScheduledEvent.getChannelOfOrNull","location":"core/dev.kord.core.entity/-guild-scheduled-event/get-channel-of-or-null.html","searchKeys":["getChannelOfOrNull","inline suspend fun <T : TopGuildChannel> getChannelOfOrNull(): T?","dev.kord.core.entity.GuildScheduledEvent.getChannelOfOrNull"]},{"name":"inline suspend fun <T> AutoCompleteInteractionBehavior.suggest(choices: List<Choice<T>>)","description":"dev.kord.core.behavior.interaction.suggest","location":"core/dev.kord.core.behavior.interaction/suggest.html","searchKeys":["suggest","inline suspend fun <T> AutoCompleteInteractionBehavior.suggest(choices: List<Choice<T>>)","dev.kord.core.behavior.interaction.suggest"]},{"name":"inline suspend fun ActionInteractionBehavior.respondEphemeral(builder: InteractionResponseCreateBuilder.() -> Unit): EphemeralMessageInteractionResponseBehavior","description":"dev.kord.core.behavior.interaction.respondEphemeral","location":"core/dev.kord.core.behavior.interaction/respond-ephemeral.html","searchKeys":["respondEphemeral","inline suspend fun ActionInteractionBehavior.respondEphemeral(builder: InteractionResponseCreateBuilder.() -> Unit): EphemeralMessageInteractionResponseBehavior","dev.kord.core.behavior.interaction.respondEphemeral"]},{"name":"inline suspend fun ActionInteractionBehavior.respondPublic(builder: InteractionResponseCreateBuilder.() -> Unit): PublicMessageInteractionResponseBehavior","description":"dev.kord.core.behavior.interaction.respondPublic","location":"core/dev.kord.core.behavior.interaction/respond-public.html","searchKeys":["respondPublic","inline suspend fun ActionInteractionBehavior.respondPublic(builder: InteractionResponseCreateBuilder.() -> Unit): PublicMessageInteractionResponseBehavior","dev.kord.core.behavior.interaction.respondPublic"]},{"name":"inline suspend fun AutoCompleteInteractionBehavior.suggestInt(builder: IntegerOptionBuilder.() -> Unit)","description":"dev.kord.core.behavior.interaction.suggestInt","location":"core/dev.kord.core.behavior.interaction/suggest-int.html","searchKeys":["suggestInt","inline suspend fun AutoCompleteInteractionBehavior.suggestInt(builder: IntegerOptionBuilder.() -> Unit)","dev.kord.core.behavior.interaction.suggestInt"]},{"name":"inline suspend fun AutoCompleteInteractionBehavior.suggestNumber(builder: NumberOptionBuilder.() -> Unit)","description":"dev.kord.core.behavior.interaction.suggestNumber","location":"core/dev.kord.core.behavior.interaction/suggest-number.html","searchKeys":["suggestNumber","inline suspend fun AutoCompleteInteractionBehavior.suggestNumber(builder: NumberOptionBuilder.() -> Unit)","dev.kord.core.behavior.interaction.suggestNumber"]},{"name":"inline suspend fun AutoCompleteInteractionBehavior.suggestString(builder: StringChoiceBuilder.() -> Unit)","description":"dev.kord.core.behavior.interaction.suggestString","location":"core/dev.kord.core.behavior.interaction/suggest-string.html","searchKeys":["suggestString","inline suspend fun AutoCompleteInteractionBehavior.suggestString(builder: StringChoiceBuilder.() -> Unit)","dev.kord.core.behavior.interaction.suggestString"]},{"name":"inline suspend fun AutoModerationRuleBehavior.edit(builder: UntypedAutoModerationRuleModifyBuilder.() -> Unit): AutoModerationRule","description":"dev.kord.core.behavior.automoderation.edit","location":"core/dev.kord.core.behavior.automoderation/edit.html","searchKeys":["edit","inline suspend fun AutoModerationRuleBehavior.edit(builder: UntypedAutoModerationRuleModifyBuilder.() -> Unit): AutoModerationRule","dev.kord.core.behavior.automoderation.edit"]},{"name":"inline suspend fun CategorizableChannelBehavior.createInvite(builder: InviteCreateBuilder.() -> Unit = {}): InviteWithMetadata","description":"dev.kord.core.behavior.channel.createInvite","location":"core/dev.kord.core.behavior.channel/create-invite.html","searchKeys":["createInvite","inline suspend fun CategorizableChannelBehavior.createInvite(builder: InviteCreateBuilder.() -> Unit = {}): InviteWithMetadata","dev.kord.core.behavior.channel.createInvite"]},{"name":"inline suspend fun CategoryBehavior.createNewsChannel(name: String, builder: NewsChannelCreateBuilder.() -> Unit = {}): NewsChannel","description":"dev.kord.core.behavior.channel.createNewsChannel","location":"core/dev.kord.core.behavior.channel/create-news-channel.html","searchKeys":["createNewsChannel","inline suspend fun CategoryBehavior.createNewsChannel(name: String, builder: NewsChannelCreateBuilder.() -> Unit = {}): NewsChannel","dev.kord.core.behavior.channel.createNewsChannel"]},{"name":"inline suspend fun CategoryBehavior.createTextChannel(name: String, builder: TextChannelCreateBuilder.() -> Unit = {}): TextChannel","description":"dev.kord.core.behavior.channel.createTextChannel","location":"core/dev.kord.core.behavior.channel/create-text-channel.html","searchKeys":["createTextChannel","inline suspend fun CategoryBehavior.createTextChannel(name: String, builder: TextChannelCreateBuilder.() -> Unit = {}): TextChannel","dev.kord.core.behavior.channel.createTextChannel"]},{"name":"inline suspend fun CategoryBehavior.createVoiceChannel(name: String, builder: VoiceChannelCreateBuilder.() -> Unit = {}): VoiceChannel","description":"dev.kord.core.behavior.channel.createVoiceChannel","location":"core/dev.kord.core.behavior.channel/create-voice-channel.html","searchKeys":["createVoiceChannel","inline suspend fun CategoryBehavior.createVoiceChannel(name: String, builder: VoiceChannelCreateBuilder.() -> Unit = {}): VoiceChannel","dev.kord.core.behavior.channel.createVoiceChannel"]},{"name":"inline suspend fun ComponentInteractionBehavior.updateEphemeralMessage(builder: UpdateMessageInteractionResponseCreateBuilder.() -> Unit): EphemeralMessageInteractionResponseBehavior","description":"dev.kord.core.behavior.interaction.updateEphemeralMessage","location":"core/dev.kord.core.behavior.interaction/update-ephemeral-message.html","searchKeys":["updateEphemeralMessage","inline suspend fun ComponentInteractionBehavior.updateEphemeralMessage(builder: UpdateMessageInteractionResponseCreateBuilder.() -> Unit): EphemeralMessageInteractionResponseBehavior","dev.kord.core.behavior.interaction.updateEphemeralMessage"]},{"name":"inline suspend fun ComponentInteractionBehavior.updatePublicMessage(builder: UpdateMessageInteractionResponseCreateBuilder.() -> Unit): PublicMessageInteractionResponseBehavior","description":"dev.kord.core.behavior.interaction.updatePublicMessage","location":"core/dev.kord.core.behavior.interaction/update-public-message.html","searchKeys":["updatePublicMessage","inline suspend fun ComponentInteractionBehavior.updatePublicMessage(builder: UpdateMessageInteractionResponseCreateBuilder.() -> Unit): PublicMessageInteractionResponseBehavior","dev.kord.core.behavior.interaction.updatePublicMessage"]},{"name":"inline suspend fun DeferredEphemeralMessageInteractionResponseBehavior.respond(builder: InteractionResponseModifyBuilder.() -> Unit): EphemeralMessageInteractionResponse","description":"dev.kord.core.behavior.interaction.response.respond","location":"core/dev.kord.core.behavior.interaction.response/respond.html","searchKeys":["respond","inline suspend fun DeferredEphemeralMessageInteractionResponseBehavior.respond(builder: InteractionResponseModifyBuilder.() -> Unit): EphemeralMessageInteractionResponse","dev.kord.core.behavior.interaction.response.respond"]},{"name":"inline suspend fun DeferredMessageInteractionResponseBehavior.respond(builder: InteractionResponseModifyBuilder.() -> Unit): MessageInteractionResponse","description":"dev.kord.core.behavior.interaction.response.respond","location":"core/dev.kord.core.behavior.interaction.response/respond.html","searchKeys":["respond","inline suspend fun DeferredMessageInteractionResponseBehavior.respond(builder: InteractionResponseModifyBuilder.() -> Unit): MessageInteractionResponse","dev.kord.core.behavior.interaction.response.respond"]},{"name":"inline suspend fun DeferredPublicMessageInteractionResponseBehavior.respond(builder: InteractionResponseModifyBuilder.() -> Unit): PublicMessageInteractionResponse","description":"dev.kord.core.behavior.interaction.response.respond","location":"core/dev.kord.core.behavior.interaction.response/respond.html","searchKeys":["respond","inline suspend fun DeferredPublicMessageInteractionResponseBehavior.respond(builder: InteractionResponseModifyBuilder.() -> Unit): PublicMessageInteractionResponse","dev.kord.core.behavior.interaction.response.respond"]},{"name":"inline suspend fun EphemeralFollowupMessageBehavior.edit(builder: FollowupMessageModifyBuilder.() -> Unit): EphemeralFollowupMessage","description":"dev.kord.core.behavior.interaction.followup.edit","location":"core/dev.kord.core.behavior.interaction.followup/edit.html","searchKeys":["edit","inline suspend fun EphemeralFollowupMessageBehavior.edit(builder: FollowupMessageModifyBuilder.() -> Unit): EphemeralFollowupMessage","dev.kord.core.behavior.interaction.followup.edit"]},{"name":"inline suspend fun EphemeralMessageInteractionResponseBehavior.edit(builder: InteractionResponseModifyBuilder.() -> Unit): EphemeralMessageInteractionResponse","description":"dev.kord.core.behavior.interaction.response.edit","location":"core/dev.kord.core.behavior.interaction.response/edit.html","searchKeys":["edit","inline suspend fun EphemeralMessageInteractionResponseBehavior.edit(builder: InteractionResponseModifyBuilder.() -> Unit): EphemeralMessageInteractionResponse","dev.kord.core.behavior.interaction.response.edit"]},{"name":"inline suspend fun FollowupMessageBehavior.edit(builder: FollowupMessageModifyBuilder.() -> Unit): FollowupMessage","description":"dev.kord.core.behavior.interaction.followup.edit","location":"core/dev.kord.core.behavior.interaction.followup/edit.html","searchKeys":["edit","inline suspend fun FollowupMessageBehavior.edit(builder: FollowupMessageModifyBuilder.() -> Unit): FollowupMessage","dev.kord.core.behavior.interaction.followup.edit"]},{"name":"inline suspend fun FollowupPermittingInteractionResponseBehavior.createEphemeralFollowup(builder: FollowupMessageCreateBuilder.() -> Unit): EphemeralFollowupMessage","description":"dev.kord.core.behavior.interaction.response.createEphemeralFollowup","location":"core/dev.kord.core.behavior.interaction.response/create-ephemeral-followup.html","searchKeys":["createEphemeralFollowup","inline suspend fun FollowupPermittingInteractionResponseBehavior.createEphemeralFollowup(builder: FollowupMessageCreateBuilder.() -> Unit): EphemeralFollowupMessage","dev.kord.core.behavior.interaction.response.createEphemeralFollowup"]},{"name":"inline suspend fun FollowupPermittingInteractionResponseBehavior.createPublicFollowup(builder: FollowupMessageCreateBuilder.() -> Unit): PublicFollowupMessage","description":"dev.kord.core.behavior.interaction.response.createPublicFollowup","location":"core/dev.kord.core.behavior.interaction.response/create-public-followup.html","searchKeys":["createPublicFollowup","inline suspend fun FollowupPermittingInteractionResponseBehavior.createPublicFollowup(builder: FollowupMessageCreateBuilder.() -> Unit): PublicFollowupMessage","dev.kord.core.behavior.interaction.response.createPublicFollowup"]},{"name":"inline suspend fun GuildBehavior.ban(userId: Snowflake, builder: BanCreateBuilder.() -> Unit)","description":"dev.kord.core.behavior.ban","location":"core/dev.kord.core.behavior/ban.html","searchKeys":["ban","inline suspend fun GuildBehavior.ban(userId: Snowflake, builder: BanCreateBuilder.() -> Unit)","dev.kord.core.behavior.ban"]},{"name":"inline suspend fun GuildBehavior.createApplicationCommands(builder: GuildMultiApplicationCommandBuilder.() -> Unit): Flow<GuildApplicationCommand>","description":"dev.kord.core.behavior.createApplicationCommands","location":"core/dev.kord.core.behavior/create-application-commands.html","searchKeys":["createApplicationCommands","inline suspend fun GuildBehavior.createApplicationCommands(builder: GuildMultiApplicationCommandBuilder.() -> Unit): Flow<GuildApplicationCommand>","dev.kord.core.behavior.createApplicationCommands"]},{"name":"inline suspend fun GuildBehavior.createCategory(name: String, builder: CategoryCreateBuilder.() -> Unit = {}): Category","description":"dev.kord.core.behavior.createCategory","location":"core/dev.kord.core.behavior/create-category.html","searchKeys":["createCategory","inline suspend fun GuildBehavior.createCategory(name: String, builder: CategoryCreateBuilder.() -> Unit = {}): Category","dev.kord.core.behavior.createCategory"]},{"name":"inline suspend fun GuildBehavior.createChatInputCommand(name: String, description: String, builder: ChatInputCreateBuilder.() -> Unit = {}): GuildChatInputCommand","description":"dev.kord.core.behavior.createChatInputCommand","location":"core/dev.kord.core.behavior/create-chat-input-command.html","searchKeys":["createChatInputCommand","inline suspend fun GuildBehavior.createChatInputCommand(name: String, description: String, builder: ChatInputCreateBuilder.() -> Unit = {}): GuildChatInputCommand","dev.kord.core.behavior.createChatInputCommand"]},{"name":"inline suspend fun GuildBehavior.createEmoji(name: String, image: Image, builder: EmojiCreateBuilder.() -> Unit = {}): GuildEmoji","description":"dev.kord.core.behavior.createEmoji","location":"core/dev.kord.core.behavior/create-emoji.html","searchKeys":["createEmoji","inline suspend fun GuildBehavior.createEmoji(name: String, image: Image, builder: EmojiCreateBuilder.() -> Unit = {}): GuildEmoji","dev.kord.core.behavior.createEmoji"]},{"name":"inline suspend fun GuildBehavior.createKeywordAutoModerationRule(name: String, eventType: AutoModerationRuleEventType = MessageSend, builder: KeywordAutoModerationRuleCreateBuilder.() -> Unit): KeywordAutoModerationRule","description":"dev.kord.core.behavior.createKeywordAutoModerationRule","location":"core/dev.kord.core.behavior/create-keyword-auto-moderation-rule.html","searchKeys":["createKeywordAutoModerationRule","inline suspend fun GuildBehavior.createKeywordAutoModerationRule(name: String, eventType: AutoModerationRuleEventType = MessageSend, builder: KeywordAutoModerationRuleCreateBuilder.() -> Unit): KeywordAutoModerationRule","dev.kord.core.behavior.createKeywordAutoModerationRule"]},{"name":"inline suspend fun GuildBehavior.createKeywordPresetAutoModerationRule(name: String, eventType: AutoModerationRuleEventType = MessageSend, builder: KeywordPresetAutoModerationRuleCreateBuilder.() -> Unit): KeywordPresetAutoModerationRule","description":"dev.kord.core.behavior.createKeywordPresetAutoModerationRule","location":"core/dev.kord.core.behavior/create-keyword-preset-auto-moderation-rule.html","searchKeys":["createKeywordPresetAutoModerationRule","inline suspend fun GuildBehavior.createKeywordPresetAutoModerationRule(name: String, eventType: AutoModerationRuleEventType = MessageSend, builder: KeywordPresetAutoModerationRuleCreateBuilder.() -> Unit): KeywordPresetAutoModerationRule","dev.kord.core.behavior.createKeywordPresetAutoModerationRule"]},{"name":"inline suspend fun GuildBehavior.createMentionSpamAutoModerationRule(name: String, eventType: AutoModerationRuleEventType = MessageSend, mentionLimit: Int, builder: MentionSpamAutoModerationRuleCreateBuilder.() -> Unit): MentionSpamAutoModerationRule","description":"dev.kord.core.behavior.createMentionSpamAutoModerationRule","location":"core/dev.kord.core.behavior/create-mention-spam-auto-moderation-rule.html","searchKeys":["createMentionSpamAutoModerationRule","inline suspend fun GuildBehavior.createMentionSpamAutoModerationRule(name: String, eventType: AutoModerationRuleEventType = MessageSend, mentionLimit: Int, builder: MentionSpamAutoModerationRuleCreateBuilder.() -> Unit): MentionSpamAutoModerationRule","dev.kord.core.behavior.createMentionSpamAutoModerationRule"]},{"name":"inline suspend fun GuildBehavior.createMessageCommand(name: String, builder: MessageCommandCreateBuilder.() -> Unit = {}): GuildMessageCommand","description":"dev.kord.core.behavior.createMessageCommand","location":"core/dev.kord.core.behavior/create-message-command.html","searchKeys":["createMessageCommand","inline suspend fun GuildBehavior.createMessageCommand(name: String, builder: MessageCommandCreateBuilder.() -> Unit = {}): GuildMessageCommand","dev.kord.core.behavior.createMessageCommand"]},{"name":"inline suspend fun GuildBehavior.createNewsChannel(name: String, builder: NewsChannelCreateBuilder.() -> Unit = {}): NewsChannel","description":"dev.kord.core.behavior.createNewsChannel","location":"core/dev.kord.core.behavior/create-news-channel.html","searchKeys":["createNewsChannel","inline suspend fun GuildBehavior.createNewsChannel(name: String, builder: NewsChannelCreateBuilder.() -> Unit = {}): NewsChannel","dev.kord.core.behavior.createNewsChannel"]},{"name":"inline suspend fun GuildBehavior.createRole(builder: RoleCreateBuilder.() -> Unit = {}): Role","description":"dev.kord.core.behavior.createRole","location":"core/dev.kord.core.behavior/create-role.html","searchKeys":["createRole","inline suspend fun GuildBehavior.createRole(builder: RoleCreateBuilder.() -> Unit = {}): Role","dev.kord.core.behavior.createRole"]},{"name":"inline suspend fun GuildBehavior.createSpamAutoModerationRule(name: String, eventType: AutoModerationRuleEventType = MessageSend, builder: SpamAutoModerationRuleCreateBuilder.() -> Unit): SpamAutoModerationRule","description":"dev.kord.core.behavior.createSpamAutoModerationRule","location":"core/dev.kord.core.behavior/create-spam-auto-moderation-rule.html","searchKeys":["createSpamAutoModerationRule","inline suspend fun GuildBehavior.createSpamAutoModerationRule(name: String, eventType: AutoModerationRuleEventType = MessageSend, builder: SpamAutoModerationRuleCreateBuilder.() -> Unit): SpamAutoModerationRule","dev.kord.core.behavior.createSpamAutoModerationRule"]},{"name":"inline suspend fun GuildBehavior.createTextChannel(name: String, builder: TextChannelCreateBuilder.() -> Unit = {}): TextChannel","description":"dev.kord.core.behavior.createTextChannel","location":"core/dev.kord.core.behavior/create-text-channel.html","searchKeys":["createTextChannel","inline suspend fun GuildBehavior.createTextChannel(name: String, builder: TextChannelCreateBuilder.() -> Unit = {}): TextChannel","dev.kord.core.behavior.createTextChannel"]},{"name":"inline suspend fun GuildBehavior.createUserCommand(name: String, builder: UserCommandCreateBuilder.() -> Unit = {}): GuildUserCommand","description":"dev.kord.core.behavior.createUserCommand","location":"core/dev.kord.core.behavior/create-user-command.html","searchKeys":["createUserCommand","inline suspend fun GuildBehavior.createUserCommand(name: String, builder: UserCommandCreateBuilder.() -> Unit = {}): GuildUserCommand","dev.kord.core.behavior.createUserCommand"]},{"name":"inline suspend fun GuildBehavior.createVoiceChannel(name: String, builder: VoiceChannelCreateBuilder.() -> Unit = {}): VoiceChannel","description":"dev.kord.core.behavior.createVoiceChannel","location":"core/dev.kord.core.behavior/create-voice-channel.html","searchKeys":["createVoiceChannel","inline suspend fun GuildBehavior.createVoiceChannel(name: String, builder: VoiceChannelCreateBuilder.() -> Unit = {}): VoiceChannel","dev.kord.core.behavior.createVoiceChannel"]},{"name":"inline suspend fun GuildBehavior.edit(builder: GuildModifyBuilder.() -> Unit): Guild","description":"dev.kord.core.behavior.edit","location":"core/dev.kord.core.behavior/edit.html","searchKeys":["edit","inline suspend fun GuildBehavior.edit(builder: GuildModifyBuilder.() -> Unit): Guild","dev.kord.core.behavior.edit"]},{"name":"inline suspend fun GuildBehavior.editWidget(builder: GuildWidgetModifyBuilder.() -> Unit): GuildWidget","description":"dev.kord.core.behavior.editWidget","location":"core/dev.kord.core.behavior/edit-widget.html","searchKeys":["editWidget","inline suspend fun GuildBehavior.editWidget(builder: GuildWidgetModifyBuilder.() -> Unit): GuildWidget","dev.kord.core.behavior.editWidget"]},{"name":"inline suspend fun GuildBehavior.swapChannelPositions(builder: GuildChannelPositionModifyBuilder.() -> Unit)","description":"dev.kord.core.behavior.swapChannelPositions","location":"core/dev.kord.core.behavior/swap-channel-positions.html","searchKeys":["swapChannelPositions","inline suspend fun GuildBehavior.swapChannelPositions(builder: GuildChannelPositionModifyBuilder.() -> Unit)","dev.kord.core.behavior.swapChannelPositions"]},{"name":"inline suspend fun GuildBehavior.swapRolePositions(builder: RolePositionsModifyBuilder.() -> Unit): Flow<Role>","description":"dev.kord.core.behavior.swapRolePositions","location":"core/dev.kord.core.behavior/swap-role-positions.html","searchKeys":["swapRolePositions","inline suspend fun GuildBehavior.swapRolePositions(builder: RolePositionsModifyBuilder.() -> Unit): Flow<Role>","dev.kord.core.behavior.swapRolePositions"]},{"name":"inline suspend fun GuildEmojiBehavior.edit(builder: EmojiModifyBuilder.() -> Unit): GuildEmoji","description":"dev.kord.core.behavior.edit","location":"core/dev.kord.core.behavior/edit.html","searchKeys":["edit","inline suspend fun GuildEmojiBehavior.edit(builder: EmojiModifyBuilder.() -> Unit): GuildEmoji","dev.kord.core.behavior.edit"]},{"name":"inline suspend fun GuildScheduledEventBehavior.edit(builder: ScheduledEventModifyBuilder.() -> Unit): GuildScheduledEvent","description":"dev.kord.core.behavior.edit","location":"core/dev.kord.core.behavior/edit.html","searchKeys":["edit","inline suspend fun GuildScheduledEventBehavior.edit(builder: ScheduledEventModifyBuilder.() -> Unit): GuildScheduledEvent","dev.kord.core.behavior.edit"]},{"name":"inline suspend fun Integration.edit(builder: IntegrationModifyBuilder.() -> Unit)","description":"dev.kord.core.entity.edit","location":"core/dev.kord.core.entity/edit.html","searchKeys":["edit","inline suspend fun Integration.edit(builder: IntegrationModifyBuilder.() -> Unit)","dev.kord.core.entity.edit"]},{"name":"inline suspend fun KeywordAutoModerationRuleBehavior.edit(builder: KeywordAutoModerationRuleModifyBuilder.() -> Unit): KeywordAutoModerationRule","description":"dev.kord.core.behavior.automoderation.edit","location":"core/dev.kord.core.behavior.automoderation/edit.html","searchKeys":["edit","inline suspend fun KeywordAutoModerationRuleBehavior.edit(builder: KeywordAutoModerationRuleModifyBuilder.() -> Unit): KeywordAutoModerationRule","dev.kord.core.behavior.automoderation.edit"]},{"name":"inline suspend fun KeywordPresetAutoModerationRuleBehavior.edit(builder: KeywordPresetAutoModerationRuleModifyBuilder.() -> Unit): KeywordPresetAutoModerationRule","description":"dev.kord.core.behavior.automoderation.edit","location":"core/dev.kord.core.behavior.automoderation/edit.html","searchKeys":["edit","inline suspend fun KeywordPresetAutoModerationRuleBehavior.edit(builder: KeywordPresetAutoModerationRuleModifyBuilder.() -> Unit): KeywordPresetAutoModerationRule","dev.kord.core.behavior.automoderation.edit"]},{"name":"inline suspend fun Kord(token: String, builder: KordBuilder.() -> Unit = {}): Kord","description":"dev.kord.core.Kord","location":"core/dev.kord.core/-kord.html","searchKeys":["Kord","inline suspend fun Kord(token: String, builder: KordBuilder.() -> Unit = {}): Kord","dev.kord.core.Kord"]},{"name":"inline suspend fun MasterGateway.start(token: String, config: GatewayConfigurationBuilder.() -> Unit = {})","description":"dev.kord.core.gateway.start","location":"core/dev.kord.core.gateway/start.html","searchKeys":["start","inline suspend fun MasterGateway.start(token: String, config: GatewayConfigurationBuilder.() -> Unit = {})","dev.kord.core.gateway.start"]},{"name":"inline suspend fun MemberBehavior.ban(builder: BanCreateBuilder.() -> Unit = {})","description":"dev.kord.core.behavior.ban","location":"core/dev.kord.core.behavior/ban.html","searchKeys":["ban","inline suspend fun MemberBehavior.ban(builder: BanCreateBuilder.() -> Unit = {})","dev.kord.core.behavior.ban"]},{"name":"inline suspend fun MemberBehavior.edit(builder: MemberModifyBuilder.() -> Unit): Member","description":"dev.kord.core.behavior.edit","location":"core/dev.kord.core.behavior/edit.html","searchKeys":["edit","inline suspend fun MemberBehavior.edit(builder: MemberModifyBuilder.() -> Unit): Member","dev.kord.core.behavior.edit"]},{"name":"inline suspend fun MentionSpamAutoModerationRuleBehavior.edit(builder: MentionSpamAutoModerationRuleModifyBuilder.() -> Unit): MentionSpamAutoModerationRule","description":"dev.kord.core.behavior.automoderation.edit","location":"core/dev.kord.core.behavior.automoderation/edit.html","searchKeys":["edit","inline suspend fun MentionSpamAutoModerationRuleBehavior.edit(builder: MentionSpamAutoModerationRuleModifyBuilder.() -> Unit): MentionSpamAutoModerationRule","dev.kord.core.behavior.automoderation.edit"]},{"name":"inline suspend fun MessageBehavior.edit(builder: UserMessageModifyBuilder.() -> Unit): Message","description":"dev.kord.core.behavior.edit","location":"core/dev.kord.core.behavior/edit.html","searchKeys":["edit","inline suspend fun MessageBehavior.edit(builder: UserMessageModifyBuilder.() -> Unit): Message","dev.kord.core.behavior.edit"]},{"name":"inline suspend fun MessageBehavior.edit(webhookId: Snowflake, token: String, threadId: Snowflake? = null, builder: WebhookMessageModifyBuilder.() -> Unit): Message","description":"dev.kord.core.behavior.edit","location":"core/dev.kord.core.behavior/edit.html","searchKeys":["edit","inline suspend fun MessageBehavior.edit(webhookId: Snowflake, token: String, threadId: Snowflake? = null, builder: WebhookMessageModifyBuilder.() -> Unit): Message","dev.kord.core.behavior.edit"]},{"name":"inline suspend fun MessageBehavior.reply(builder: UserMessageCreateBuilder.() -> Unit): Message","description":"dev.kord.core.behavior.reply","location":"core/dev.kord.core.behavior/reply.html","searchKeys":["reply","inline suspend fun MessageBehavior.reply(builder: UserMessageCreateBuilder.() -> Unit): Message","dev.kord.core.behavior.reply"]},{"name":"inline suspend fun MessageChannelBehavior.createEmbed(block: EmbedBuilder.() -> Unit): Message","description":"dev.kord.core.behavior.channel.createEmbed","location":"core/dev.kord.core.behavior.channel/create-embed.html","searchKeys":["createEmbed","inline suspend fun MessageChannelBehavior.createEmbed(block: EmbedBuilder.() -> Unit): Message","dev.kord.core.behavior.channel.createEmbed"]},{"name":"inline suspend fun MessageChannelBehavior.createMessage(builder: UserMessageCreateBuilder.() -> Unit): Message","description":"dev.kord.core.behavior.channel.createMessage","location":"core/dev.kord.core.behavior.channel/create-message.html","searchKeys":["createMessage","inline suspend fun MessageChannelBehavior.createMessage(builder: UserMessageCreateBuilder.() -> Unit): Message","dev.kord.core.behavior.channel.createMessage"]},{"name":"inline suspend fun MessageInteractionResponseBehavior.edit(builder: InteractionResponseModifyBuilder.() -> Unit): MessageInteractionResponse","description":"dev.kord.core.behavior.interaction.response.edit","location":"core/dev.kord.core.behavior.interaction.response/edit.html","searchKeys":["edit","inline suspend fun MessageInteractionResponseBehavior.edit(builder: InteractionResponseModifyBuilder.() -> Unit): MessageInteractionResponse","dev.kord.core.behavior.interaction.response.edit"]},{"name":"inline suspend fun ModalParentInteractionBehavior.modal(title: String, customId: String, builder: ModalBuilder.() -> Unit): PopupInteractionResponseBehavior","description":"dev.kord.core.behavior.interaction.modal","location":"core/dev.kord.core.behavior.interaction/modal.html","searchKeys":["modal","inline suspend fun ModalParentInteractionBehavior.modal(title: String, customId: String, builder: ModalBuilder.() -> Unit): PopupInteractionResponseBehavior","dev.kord.core.behavior.interaction.modal"]},{"name":"inline suspend fun NewsChannelBehavior.edit(builder: NewsChannelModifyBuilder.() -> Unit): NewsChannel","description":"dev.kord.core.behavior.channel.edit","location":"core/dev.kord.core.behavior.channel/edit.html","searchKeys":["edit","inline suspend fun NewsChannelBehavior.edit(builder: NewsChannelModifyBuilder.() -> Unit): NewsChannel","dev.kord.core.behavior.channel.edit"]},{"name":"inline suspend fun PublicFollowupMessageBehavior.edit(builder: FollowupMessageModifyBuilder.() -> Unit): PublicFollowupMessage","description":"dev.kord.core.behavior.interaction.followup.edit","location":"core/dev.kord.core.behavior.interaction.followup/edit.html","searchKeys":["edit","inline suspend fun PublicFollowupMessageBehavior.edit(builder: FollowupMessageModifyBuilder.() -> Unit): PublicFollowupMessage","dev.kord.core.behavior.interaction.followup.edit"]},{"name":"inline suspend fun PublicMessageInteractionResponseBehavior.edit(builder: InteractionResponseModifyBuilder.() -> Unit): PublicMessageInteractionResponse","description":"dev.kord.core.behavior.interaction.response.edit","location":"core/dev.kord.core.behavior.interaction.response/edit.html","searchKeys":["edit","inline suspend fun PublicMessageInteractionResponseBehavior.edit(builder: InteractionResponseModifyBuilder.() -> Unit): PublicMessageInteractionResponse","dev.kord.core.behavior.interaction.response.edit"]},{"name":"inline suspend fun RoleBehavior.edit(builder: RoleModifyBuilder.() -> Unit): Role","description":"dev.kord.core.behavior.edit","location":"core/dev.kord.core.behavior/edit.html","searchKeys":["edit","inline suspend fun RoleBehavior.edit(builder: RoleModifyBuilder.() -> Unit): Role","dev.kord.core.behavior.edit"]},{"name":"inline suspend fun SpamAutoModerationRuleBehavior.edit(builder: SpamAutoModerationRuleModifyBuilder.() -> Unit): SpamAutoModerationRule","description":"dev.kord.core.behavior.automoderation.edit","location":"core/dev.kord.core.behavior.automoderation/edit.html","searchKeys":["edit","inline suspend fun SpamAutoModerationRuleBehavior.edit(builder: SpamAutoModerationRuleModifyBuilder.() -> Unit): SpamAutoModerationRule","dev.kord.core.behavior.automoderation.edit"]},{"name":"inline suspend fun StageChannelBehavior.createStageInstance(topic: String, builder: StageInstanceCreateBuilder.() -> Unit = {}): StageInstance","description":"dev.kord.core.behavior.channel.createStageInstance","location":"core/dev.kord.core.behavior.channel/create-stage-instance.html","searchKeys":["createStageInstance","inline suspend fun StageChannelBehavior.createStageInstance(topic: String, builder: StageInstanceCreateBuilder.() -> Unit = {}): StageInstance","dev.kord.core.behavior.channel.createStageInstance"]},{"name":"inline suspend fun StageChannelBehavior.editCurrentVoiceState(builder: CurrentVoiceStateModifyBuilder.() -> Unit)","description":"dev.kord.core.behavior.channel.editCurrentVoiceState","location":"core/dev.kord.core.behavior.channel/edit-current-voice-state.html","searchKeys":["editCurrentVoiceState","inline suspend fun StageChannelBehavior.editCurrentVoiceState(builder: CurrentVoiceStateModifyBuilder.() -> Unit)","dev.kord.core.behavior.channel.editCurrentVoiceState"]},{"name":"inline suspend fun StageChannelBehavior.editVoiceState(userId: Snowflake, builder: VoiceStateModifyBuilder.() -> Unit)","description":"dev.kord.core.behavior.channel.editVoiceState","location":"core/dev.kord.core.behavior.channel/edit-voice-state.html","searchKeys":["editVoiceState","inline suspend fun StageChannelBehavior.editVoiceState(userId: Snowflake, builder: VoiceStateModifyBuilder.() -> Unit)","dev.kord.core.behavior.channel.editVoiceState"]},{"name":"inline suspend fun StageInstanceBehavior.edit(builder: StageInstanceModifyBuilder.() -> Unit): StageInstance","description":"dev.kord.core.behavior.edit","location":"core/dev.kord.core.behavior/edit.html","searchKeys":["edit","inline suspend fun StageInstanceBehavior.edit(builder: StageInstanceModifyBuilder.() -> Unit): StageInstance","dev.kord.core.behavior.edit"]},{"name":"inline suspend fun StickerBehavior.edit(builder: StickerModifyBuilder.() -> Unit): Sticker","description":"dev.kord.core.behavior.edit","location":"core/dev.kord.core.behavior/edit.html","searchKeys":["edit","inline suspend fun StickerBehavior.edit(builder: StickerModifyBuilder.() -> Unit): Sticker","dev.kord.core.behavior.edit"]},{"name":"inline suspend fun TextChannelBehavior.edit(builder: TextChannelModifyBuilder.() -> Unit): TextChannel","description":"dev.kord.core.behavior.channel.edit","location":"core/dev.kord.core.behavior.channel/edit.html","searchKeys":["edit","inline suspend fun TextChannelBehavior.edit(builder: TextChannelModifyBuilder.() -> Unit): TextChannel","dev.kord.core.behavior.channel.edit"]},{"name":"inline suspend fun ThreadChannelBehavior.edit(builder: ThreadModifyBuilder.() -> Unit): ThreadChannel","description":"dev.kord.core.behavior.channel.threads.edit","location":"core/dev.kord.core.behavior.channel.threads/edit.html","searchKeys":["edit","inline suspend fun ThreadChannelBehavior.edit(builder: ThreadModifyBuilder.() -> Unit): ThreadChannel","dev.kord.core.behavior.channel.threads.edit"]},{"name":"inline suspend fun TopGuildChannelBehavior.editMemberPermission(memberId: Snowflake, builder: ChannelPermissionModifyBuilder.() -> Unit)","description":"dev.kord.core.behavior.channel.editMemberPermission","location":"core/dev.kord.core.behavior.channel/edit-member-permission.html","searchKeys":["editMemberPermission","inline suspend fun TopGuildChannelBehavior.editMemberPermission(memberId: Snowflake, builder: ChannelPermissionModifyBuilder.() -> Unit)","dev.kord.core.behavior.channel.editMemberPermission"]},{"name":"inline suspend fun TopGuildChannelBehavior.editRolePermission(roleId: Snowflake, builder: ChannelPermissionModifyBuilder.() -> Unit)","description":"dev.kord.core.behavior.channel.editRolePermission","location":"core/dev.kord.core.behavior.channel/edit-role-permission.html","searchKeys":["editRolePermission","inline suspend fun TopGuildChannelBehavior.editRolePermission(roleId: Snowflake, builder: ChannelPermissionModifyBuilder.() -> Unit)","dev.kord.core.behavior.channel.editRolePermission"]},{"name":"inline suspend fun TopGuildMessageChannelBehavior.createWebhook(name: String, builder: WebhookCreateBuilder.() -> Unit = {}): Webhook","description":"dev.kord.core.behavior.channel.createWebhook","location":"core/dev.kord.core.behavior.channel/create-webhook.html","searchKeys":["createWebhook","inline suspend fun TopGuildMessageChannelBehavior.createWebhook(name: String, builder: WebhookCreateBuilder.() -> Unit = {}): Webhook","dev.kord.core.behavior.channel.createWebhook"]},{"name":"inline suspend fun VoiceChannelBehavior.edit(builder: VoiceChannelModifyBuilder.() -> Unit): VoiceChannel","description":"dev.kord.core.behavior.channel.edit","location":"core/dev.kord.core.behavior.channel/edit.html","searchKeys":["edit","inline suspend fun VoiceChannelBehavior.edit(builder: VoiceChannelModifyBuilder.() -> Unit): VoiceChannel","dev.kord.core.behavior.channel.edit"]},{"name":"inline suspend fun WebhookBehavior.edit(builder: WebhookModifyBuilder.() -> Unit): Webhook","description":"dev.kord.core.behavior.edit","location":"core/dev.kord.core.behavior/edit.html","searchKeys":["edit","inline suspend fun WebhookBehavior.edit(builder: WebhookModifyBuilder.() -> Unit): Webhook","dev.kord.core.behavior.edit"]},{"name":"inline suspend fun WebhookBehavior.edit(token: String, builder: WebhookModifyBuilder.() -> Unit): Webhook","description":"dev.kord.core.behavior.edit","location":"core/dev.kord.core.behavior/edit.html","searchKeys":["edit","inline suspend fun WebhookBehavior.edit(token: String, builder: WebhookModifyBuilder.() -> Unit): Webhook","dev.kord.core.behavior.edit"]},{"name":"inline suspend fun WebhookBehavior.execute(token: String, threadId: Snowflake? = null, builder: WebhookMessageCreateBuilder.() -> Unit): Message","description":"dev.kord.core.behavior.execute","location":"core/dev.kord.core.behavior/execute.html","searchKeys":["execute","inline suspend fun WebhookBehavior.execute(token: String, threadId: Snowflake? = null, builder: WebhookMessageCreateBuilder.() -> Unit): Message","dev.kord.core.behavior.execute"]},{"name":"inline suspend fun WebhookBehavior.executeIgnored(token: String, threadId: Snowflake? = null, builder: WebhookMessageCreateBuilder.() -> Unit)","description":"dev.kord.core.behavior.executeIgnored","location":"core/dev.kord.core.behavior/execute-ignored.html","searchKeys":["executeIgnored","inline suspend fun WebhookBehavior.executeIgnored(token: String, threadId: Snowflake? = null, builder: WebhookMessageCreateBuilder.() -> Unit)","dev.kord.core.behavior.executeIgnored"]},{"name":"inline suspend fun createGlobalApplicationCommands(builder: GlobalMultiApplicationCommandBuilder.() -> Unit): Flow<GlobalApplicationCommand>","description":"dev.kord.core.Kord.createGlobalApplicationCommands","location":"core/dev.kord.core/-kord/create-global-application-commands.html","searchKeys":["createGlobalApplicationCommands","inline suspend fun createGlobalApplicationCommands(builder: GlobalMultiApplicationCommandBuilder.() -> Unit): Flow<GlobalApplicationCommand>","dev.kord.core.Kord.createGlobalApplicationCommands"]},{"name":"inline suspend fun createGlobalChatInputCommand(name: String, description: String, builder: GlobalChatInputCreateBuilder.() -> Unit = {}): GlobalChatInputCommand","description":"dev.kord.core.Kord.createGlobalChatInputCommand","location":"core/dev.kord.core/-kord/create-global-chat-input-command.html","searchKeys":["createGlobalChatInputCommand","inline suspend fun createGlobalChatInputCommand(name: String, description: String, builder: GlobalChatInputCreateBuilder.() -> Unit = {}): GlobalChatInputCommand","dev.kord.core.Kord.createGlobalChatInputCommand"]},{"name":"inline suspend fun createGlobalMessageCommand(name: String, builder: GlobalMessageCommandCreateBuilder.() -> Unit = {}): GlobalMessageCommand","description":"dev.kord.core.Kord.createGlobalMessageCommand","location":"core/dev.kord.core/-kord/create-global-message-command.html","searchKeys":["createGlobalMessageCommand","inline suspend fun createGlobalMessageCommand(name: String, builder: GlobalMessageCommandCreateBuilder.() -> Unit = {}): GlobalMessageCommand","dev.kord.core.Kord.createGlobalMessageCommand"]},{"name":"inline suspend fun createGlobalUserCommand(name: String, builder: GlobalUserCommandCreateBuilder.() -> Unit = {}): GlobalUserCommand","description":"dev.kord.core.Kord.createGlobalUserCommand","location":"core/dev.kord.core/-kord/create-global-user-command.html","searchKeys":["createGlobalUserCommand","inline suspend fun createGlobalUserCommand(name: String, builder: GlobalUserCommandCreateBuilder.() -> Unit = {}): GlobalUserCommand","dev.kord.core.Kord.createGlobalUserCommand"]},{"name":"inline suspend fun createGuild(name: String, builder: GuildCreateBuilder.() -> Unit): Guild","description":"dev.kord.core.Kord.createGuild","location":"core/dev.kord.core/-kord/create-guild.html","searchKeys":["createGuild","inline suspend fun createGuild(name: String, builder: GuildCreateBuilder.() -> Unit): Guild","dev.kord.core.Kord.createGuild"]},{"name":"inline suspend fun createGuildApplicationCommands(guildId: Snowflake, builder: GuildMultiApplicationCommandBuilder.() -> Unit): Flow<GuildApplicationCommand>","description":"dev.kord.core.Kord.createGuildApplicationCommands","location":"core/dev.kord.core/-kord/create-guild-application-commands.html","searchKeys":["createGuildApplicationCommands","inline suspend fun createGuildApplicationCommands(guildId: Snowflake, builder: GuildMultiApplicationCommandBuilder.() -> Unit): Flow<GuildApplicationCommand>","dev.kord.core.Kord.createGuildApplicationCommands"]},{"name":"inline suspend fun createGuildChatInputCommand(guildId: Snowflake, name: String, description: String, builder: ChatInputCreateBuilder.() -> Unit = {}): GuildChatInputCommand","description":"dev.kord.core.Kord.createGuildChatInputCommand","location":"core/dev.kord.core/-kord/create-guild-chat-input-command.html","searchKeys":["createGuildChatInputCommand","inline suspend fun createGuildChatInputCommand(guildId: Snowflake, name: String, description: String, builder: ChatInputCreateBuilder.() -> Unit = {}): GuildChatInputCommand","dev.kord.core.Kord.createGuildChatInputCommand"]},{"name":"inline suspend fun createGuildMessageCommand(guildId: Snowflake, name: String, builder: MessageCommandCreateBuilder.() -> Unit = {}): GuildMessageCommand","description":"dev.kord.core.Kord.createGuildMessageCommand","location":"core/dev.kord.core/-kord/create-guild-message-command.html","searchKeys":["createGuildMessageCommand","inline suspend fun createGuildMessageCommand(guildId: Snowflake, name: String, builder: MessageCommandCreateBuilder.() -> Unit = {}): GuildMessageCommand","dev.kord.core.Kord.createGuildMessageCommand"]},{"name":"inline suspend fun createGuildUserCommand(guildId: Snowflake, name: String, builder: UserCommandCreateBuilder.() -> Unit = {}): GuildUserCommand","description":"dev.kord.core.Kord.createGuildUserCommand","location":"core/dev.kord.core/-kord/create-guild-user-command.html","searchKeys":["createGuildUserCommand","inline suspend fun createGuildUserCommand(guildId: Snowflake, name: String, builder: UserCommandCreateBuilder.() -> Unit = {}): GuildUserCommand","dev.kord.core.Kord.createGuildUserCommand"]},{"name":"inline suspend fun edit(builder: EmojiModifyBuilder.() -> Unit)","description":"dev.kord.core.entity.GuildEmoji.edit","location":"core/dev.kord.core.entity/-guild-emoji/edit.html","searchKeys":["edit","inline suspend fun edit(builder: EmojiModifyBuilder.() -> Unit)","dev.kord.core.entity.GuildEmoji.edit"]},{"name":"inline suspend fun edit(builder: GuildWidgetModifyBuilder.() -> Unit): GuildWidget","description":"dev.kord.core.entity.GuildWidget.edit","location":"core/dev.kord.core.entity/-guild-widget/edit.html","searchKeys":["edit","inline suspend fun edit(builder: GuildWidgetModifyBuilder.() -> Unit): GuildWidget","dev.kord.core.entity.GuildWidget.edit"]},{"name":"inline suspend fun editPresence(builder: PresenceBuilder.() -> Unit)","description":"dev.kord.core.Kord.editPresence","location":"core/dev.kord.core/-kord/edit-presence.html","searchKeys":["editPresence","inline suspend fun editPresence(builder: PresenceBuilder.() -> Unit)","dev.kord.core.Kord.editPresence"]},{"name":"inline suspend fun login(builder: LoginBuilder.() -> Unit = {})","description":"dev.kord.core.Kord.login","location":"core/dev.kord.core/-kord/login.html","searchKeys":["login","inline suspend fun login(builder: LoginBuilder.() -> Unit = {})","dev.kord.core.Kord.login"]},{"name":"interface ActionInteraction : Interaction, ActionInteractionBehavior","description":"dev.kord.core.entity.interaction.ActionInteraction","location":"core/dev.kord.core.entity.interaction/-action-interaction/index.html","searchKeys":["ActionInteraction","interface ActionInteraction : Interaction, ActionInteractionBehavior","dev.kord.core.entity.interaction.ActionInteraction"]},{"name":"interface ActionInteractionBehavior : InteractionBehavior","description":"dev.kord.core.behavior.interaction.ActionInteractionBehavior","location":"core/dev.kord.core.behavior.interaction/-action-interaction-behavior/index.html","searchKeys":["ActionInteractionBehavior","interface ActionInteractionBehavior : InteractionBehavior","dev.kord.core.behavior.interaction.ActionInteractionBehavior"]},{"name":"interface ActionInteractionCreateEvent : InteractionCreateEvent","description":"dev.kord.core.event.interaction.ActionInteractionCreateEvent","location":"core/dev.kord.core.event.interaction/-action-interaction-create-event/index.html","searchKeys":["ActionInteractionCreateEvent","interface ActionInteractionCreateEvent : InteractionCreateEvent","dev.kord.core.event.interaction.ActionInteractionCreateEvent"]},{"name":"interface ApplicationCommand : ApplicationCommandBehavior","description":"dev.kord.core.entity.application.ApplicationCommand","location":"core/dev.kord.core.entity.application/-application-command/index.html","searchKeys":["ApplicationCommand","interface ApplicationCommand : ApplicationCommandBehavior","dev.kord.core.entity.application.ApplicationCommand"]},{"name":"interface ApplicationCommandBehavior : Entity","description":"dev.kord.core.behavior.ApplicationCommandBehavior","location":"core/dev.kord.core.behavior/-application-command-behavior/index.html","searchKeys":["ApplicationCommandBehavior","interface ApplicationCommandBehavior : Entity","dev.kord.core.behavior.ApplicationCommandBehavior"]},{"name":"interface ApplicationCommandCreateEvent : Event","description":"dev.kord.core.event.interaction.ApplicationCommandCreateEvent","location":"core/dev.kord.core.event.interaction/-application-command-create-event/index.html","searchKeys":["ApplicationCommandCreateEvent","interface ApplicationCommandCreateEvent : Event","dev.kord.core.event.interaction.ApplicationCommandCreateEvent"]},{"name":"interface ApplicationCommandDeleteEvent : Event","description":"dev.kord.core.event.interaction.ApplicationCommandDeleteEvent","location":"core/dev.kord.core.event.interaction/-application-command-delete-event/index.html","searchKeys":["ApplicationCommandDeleteEvent","interface ApplicationCommandDeleteEvent : Event","dev.kord.core.event.interaction.ApplicationCommandDeleteEvent"]},{"name":"interface ApplicationCommandInteraction : ActionInteraction, ApplicationCommandInteractionBehavior","description":"dev.kord.core.entity.interaction.ApplicationCommandInteraction","location":"core/dev.kord.core.entity.interaction/-application-command-interaction/index.html","searchKeys":["ApplicationCommandInteraction","interface ApplicationCommandInteraction : ActionInteraction, ApplicationCommandInteractionBehavior","dev.kord.core.entity.interaction.ApplicationCommandInteraction"]},{"name":"interface ApplicationCommandInteractionBehavior : ModalParentInteractionBehavior","description":"dev.kord.core.behavior.interaction.ApplicationCommandInteractionBehavior","location":"core/dev.kord.core.behavior.interaction/-application-command-interaction-behavior/index.html","searchKeys":["ApplicationCommandInteractionBehavior","interface ApplicationCommandInteractionBehavior : ModalParentInteractionBehavior","dev.kord.core.behavior.interaction.ApplicationCommandInteractionBehavior"]},{"name":"interface ApplicationCommandInteractionCreateEvent : ActionInteractionCreateEvent","description":"dev.kord.core.event.interaction.ApplicationCommandInteractionCreateEvent","location":"core/dev.kord.core.event.interaction/-application-command-interaction-create-event/index.html","searchKeys":["ApplicationCommandInteractionCreateEvent","interface ApplicationCommandInteractionCreateEvent : ActionInteractionCreateEvent","dev.kord.core.event.interaction.ApplicationCommandInteractionCreateEvent"]},{"name":"interface ApplicationCommandUpdateEvent : Event","description":"dev.kord.core.event.interaction.ApplicationCommandUpdateEvent","location":"core/dev.kord.core.event.interaction/-application-command-update-event/index.html","searchKeys":["ApplicationCommandUpdateEvent","interface ApplicationCommandUpdateEvent : Event","dev.kord.core.event.interaction.ApplicationCommandUpdateEvent"]},{"name":"interface AutoCompleteInteraction : DataInteraction, AutoCompleteInteractionBehavior","description":"dev.kord.core.entity.interaction.AutoCompleteInteraction","location":"core/dev.kord.core.entity.interaction/-auto-complete-interaction/index.html","searchKeys":["AutoCompleteInteraction","interface AutoCompleteInteraction : DataInteraction, AutoCompleteInteractionBehavior","dev.kord.core.entity.interaction.AutoCompleteInteraction"]},{"name":"interface AutoCompleteInteractionBehavior : DataInteractionBehavior","description":"dev.kord.core.behavior.interaction.AutoCompleteInteractionBehavior","location":"core/dev.kord.core.behavior.interaction/-auto-complete-interaction-behavior/index.html","searchKeys":["AutoCompleteInteractionBehavior","interface AutoCompleteInteractionBehavior : DataInteractionBehavior","dev.kord.core.behavior.interaction.AutoCompleteInteractionBehavior"]},{"name":"interface AutoCompleteInteractionCreateEvent : DataInteractionCreateEvent","description":"dev.kord.core.event.interaction.AutoCompleteInteractionCreateEvent","location":"core/dev.kord.core.event.interaction/-auto-complete-interaction-create-event/index.html","searchKeys":["AutoCompleteInteractionCreateEvent","interface AutoCompleteInteractionCreateEvent : DataInteractionCreateEvent","dev.kord.core.event.interaction.AutoCompleteInteractionCreateEvent"]},{"name":"interface AutoModerationEvent : Event, Strategizable","description":"dev.kord.core.event.automoderation.AutoModerationEvent","location":"core/dev.kord.core.event.automoderation/-auto-moderation-event/index.html","searchKeys":["AutoModerationEvent","interface AutoModerationEvent : Event, Strategizable","dev.kord.core.event.automoderation.AutoModerationEvent"]},{"name":"interface AutoModerationRuleBehavior : KordEntity, Strategizable","description":"dev.kord.core.behavior.automoderation.AutoModerationRuleBehavior","location":"core/dev.kord.core.behavior.automoderation/-auto-moderation-rule-behavior/index.html","searchKeys":["AutoModerationRuleBehavior","interface AutoModerationRuleBehavior : KordEntity, Strategizable","dev.kord.core.behavior.automoderation.AutoModerationRuleBehavior"]},{"name":"interface AutoModerationRuleConfigurationEvent : AutoModerationEvent","description":"dev.kord.core.event.automoderation.AutoModerationRuleConfigurationEvent","location":"core/dev.kord.core.event.automoderation/-auto-moderation-rule-configuration-event/index.html","searchKeys":["AutoModerationRuleConfigurationEvent","interface AutoModerationRuleConfigurationEvent : AutoModerationEvent","dev.kord.core.event.automoderation.AutoModerationRuleConfigurationEvent"]},{"name":"interface BaseApplicationData","description":"dev.kord.core.cache.data.BaseApplicationData","location":"core/dev.kord.core.cache.data/-base-application-data/index.html","searchKeys":["BaseApplicationData","interface BaseApplicationData","dev.kord.core.cache.data.BaseApplicationData"]},{"name":"interface BaseInviteData","description":"dev.kord.core.cache.data.BaseInviteData","location":"core/dev.kord.core.cache.data/-base-invite-data/index.html","searchKeys":["BaseInviteData","interface BaseInviteData","dev.kord.core.cache.data.BaseInviteData"]},{"name":"interface BaseVoiceChannelBehavior : CategorizableChannelBehavior","description":"dev.kord.core.behavior.channel.BaseVoiceChannelBehavior","location":"core/dev.kord.core.behavior.channel/-base-voice-channel-behavior/index.html","searchKeys":["BaseVoiceChannelBehavior","interface BaseVoiceChannelBehavior : CategorizableChannelBehavior","dev.kord.core.behavior.channel.BaseVoiceChannelBehavior"]},{"name":"interface ButtonInteraction : ComponentInteraction","description":"dev.kord.core.entity.interaction.ButtonInteraction","location":"core/dev.kord.core.entity.interaction/-button-interaction/index.html","searchKeys":["ButtonInteraction","interface ButtonInteraction : ComponentInteraction","dev.kord.core.entity.interaction.ButtonInteraction"]},{"name":"interface ButtonInteractionCreateEvent : ComponentInteractionCreateEvent","description":"dev.kord.core.event.interaction.ButtonInteractionCreateEvent","location":"core/dev.kord.core.event.interaction/-button-interaction-create-event/index.html","searchKeys":["ButtonInteractionCreateEvent","interface ButtonInteractionCreateEvent : ComponentInteractionCreateEvent","dev.kord.core.event.interaction.ButtonInteractionCreateEvent"]},{"name":"interface CategorizableChannel : TopGuildChannel, CategorizableChannelBehavior","description":"dev.kord.core.entity.channel.CategorizableChannel","location":"core/dev.kord.core.entity.channel/-categorizable-channel/index.html","searchKeys":["CategorizableChannel","interface CategorizableChannel : TopGuildChannel, CategorizableChannelBehavior","dev.kord.core.entity.channel.CategorizableChannel"]},{"name":"interface CategorizableChannelBehavior : TopGuildChannelBehavior","description":"dev.kord.core.behavior.channel.CategorizableChannelBehavior","location":"core/dev.kord.core.behavior.channel/-categorizable-channel-behavior/index.html","searchKeys":["CategorizableChannelBehavior","interface CategorizableChannelBehavior : TopGuildChannelBehavior","dev.kord.core.behavior.channel.CategorizableChannelBehavior"]},{"name":"interface CategoryBehavior : TopGuildChannelBehavior","description":"dev.kord.core.behavior.channel.CategoryBehavior","location":"core/dev.kord.core.behavior.channel/-category-behavior/index.html","searchKeys":["CategoryBehavior","interface CategoryBehavior : TopGuildChannelBehavior","dev.kord.core.behavior.channel.CategoryBehavior"]},{"name":"interface Channel : ChannelBehavior","description":"dev.kord.core.entity.channel.Channel","location":"core/dev.kord.core.entity.channel/-channel/index.html","searchKeys":["Channel","interface Channel : ChannelBehavior","dev.kord.core.entity.channel.Channel"]},{"name":"interface ChannelBehavior : KordEntity, Strategizable","description":"dev.kord.core.behavior.channel.ChannelBehavior","location":"core/dev.kord.core.behavior.channel/-channel-behavior/index.html","searchKeys":["ChannelBehavior","interface ChannelBehavior : KordEntity, Strategizable","dev.kord.core.behavior.channel.ChannelBehavior"]},{"name":"interface ChannelCreateEvent : Event","description":"dev.kord.core.event.channel.ChannelCreateEvent","location":"core/dev.kord.core.event.channel/-channel-create-event/index.html","searchKeys":["ChannelCreateEvent","interface ChannelCreateEvent : Event","dev.kord.core.event.channel.ChannelCreateEvent"]},{"name":"interface ChannelDeleteEvent : Event","description":"dev.kord.core.event.channel.ChannelDeleteEvent","location":"core/dev.kord.core.event.channel/-channel-delete-event/index.html","searchKeys":["ChannelDeleteEvent","interface ChannelDeleteEvent : Event","dev.kord.core.event.channel.ChannelDeleteEvent"]},{"name":"interface ChannelUpdateEvent : Event","description":"dev.kord.core.event.channel.ChannelUpdateEvent","location":"core/dev.kord.core.event.channel/-channel-update-event/index.html","searchKeys":["ChannelUpdateEvent","interface ChannelUpdateEvent : Event","dev.kord.core.event.channel.ChannelUpdateEvent"]},{"name":"interface ChatInputCommandBehavior : ApplicationCommandBehavior","description":"dev.kord.core.behavior.ChatInputCommandBehavior","location":"core/dev.kord.core.behavior/-chat-input-command-behavior/index.html","searchKeys":["ChatInputCommandBehavior","interface ChatInputCommandBehavior : ApplicationCommandBehavior","dev.kord.core.behavior.ChatInputCommandBehavior"]},{"name":"interface ChatInputCommandCommand : ApplicationCommand, ChatInputCommandBehavior","description":"dev.kord.core.entity.application.ChatInputCommandCommand","location":"core/dev.kord.core.entity.application/-chat-input-command-command/index.html","searchKeys":["ChatInputCommandCommand","interface ChatInputCommandCommand : ApplicationCommand, ChatInputCommandBehavior","dev.kord.core.entity.application.ChatInputCommandCommand"]},{"name":"interface ChatInputCommandInteraction : ApplicationCommandInteraction","description":"dev.kord.core.entity.interaction.ChatInputCommandInteraction","location":"core/dev.kord.core.entity.interaction/-chat-input-command-interaction/index.html","searchKeys":["ChatInputCommandInteraction","interface ChatInputCommandInteraction : ApplicationCommandInteraction","dev.kord.core.entity.interaction.ChatInputCommandInteraction"]},{"name":"interface ChatInputCommandInteractionCreateEvent : ApplicationCommandInteractionCreateEvent","description":"dev.kord.core.event.interaction.ChatInputCommandInteractionCreateEvent","location":"core/dev.kord.core.event.interaction/-chat-input-command-interaction-create-event/index.html","searchKeys":["ChatInputCommandInteractionCreateEvent","interface ChatInputCommandInteractionCreateEvent : ApplicationCommandInteractionCreateEvent","dev.kord.core.event.interaction.ChatInputCommandInteractionCreateEvent"]},{"name":"interface Component","description":"dev.kord.core.entity.component.Component","location":"core/dev.kord.core.entity.component/-component/index.html","searchKeys":["Component","interface Component","dev.kord.core.entity.component.Component"]},{"name":"interface ComponentInteraction : ActionInteraction, ComponentInteractionBehavior, ModalParentInteractionBehavior","description":"dev.kord.core.entity.interaction.ComponentInteraction","location":"core/dev.kord.core.entity.interaction/-component-interaction/index.html","searchKeys":["ComponentInteraction","interface ComponentInteraction : ActionInteraction, ComponentInteractionBehavior, ModalParentInteractionBehavior","dev.kord.core.entity.interaction.ComponentInteraction"]},{"name":"interface ComponentInteractionBehavior : ActionInteractionBehavior","description":"dev.kord.core.behavior.interaction.ComponentInteractionBehavior","location":"core/dev.kord.core.behavior.interaction/-component-interaction-behavior/index.html","searchKeys":["ComponentInteractionBehavior","interface ComponentInteractionBehavior : ActionInteractionBehavior","dev.kord.core.behavior.interaction.ComponentInteractionBehavior"]},{"name":"interface ComponentInteractionCreateEvent : ActionInteractionCreateEvent","description":"dev.kord.core.event.interaction.ComponentInteractionCreateEvent","location":"core/dev.kord.core.event.interaction/-component-interaction-create-event/index.html","searchKeys":["ComponentInteractionCreateEvent","interface ComponentInteractionCreateEvent : ActionInteractionCreateEvent","dev.kord.core.event.interaction.ComponentInteractionCreateEvent"]},{"name":"interface DataInteraction : Interaction, DataInteractionBehavior","description":"dev.kord.core.entity.interaction.DataInteraction","location":"core/dev.kord.core.entity.interaction/-data-interaction/index.html","searchKeys":["DataInteraction","interface DataInteraction : Interaction, DataInteractionBehavior","dev.kord.core.entity.interaction.DataInteraction"]},{"name":"interface DataInteractionBehavior : InteractionBehavior","description":"dev.kord.core.behavior.interaction.DataInteractionBehavior","location":"core/dev.kord.core.behavior.interaction/-data-interaction-behavior/index.html","searchKeys":["DataInteractionBehavior","interface DataInteractionBehavior : InteractionBehavior","dev.kord.core.behavior.interaction.DataInteractionBehavior"]},{"name":"interface DataInteractionCreateEvent : InteractionCreateEvent","description":"dev.kord.core.event.interaction.DataInteractionCreateEvent","location":"core/dev.kord.core.event.interaction/-data-interaction-create-event/index.html","searchKeys":["DataInteractionCreateEvent","interface DataInteractionCreateEvent : InteractionCreateEvent","dev.kord.core.event.interaction.DataInteractionCreateEvent"]},{"name":"interface DeferredEphemeralMessageInteractionResponseBehavior : EphemeralInteractionResponseBehavior, DeferredMessageInteractionResponseBehavior","description":"dev.kord.core.behavior.interaction.response.DeferredEphemeralMessageInteractionResponseBehavior","location":"core/dev.kord.core.behavior.interaction.response/-deferred-ephemeral-message-interaction-response-behavior/index.html","searchKeys":["DeferredEphemeralMessageInteractionResponseBehavior","interface DeferredEphemeralMessageInteractionResponseBehavior : EphemeralInteractionResponseBehavior, DeferredMessageInteractionResponseBehavior","dev.kord.core.behavior.interaction.response.DeferredEphemeralMessageInteractionResponseBehavior"]},{"name":"interface DeferredMessageInteractionResponseBehavior : InteractionResponseBehavior","description":"dev.kord.core.behavior.interaction.response.DeferredMessageInteractionResponseBehavior","location":"core/dev.kord.core.behavior.interaction.response/-deferred-message-interaction-response-behavior/index.html","searchKeys":["DeferredMessageInteractionResponseBehavior","interface DeferredMessageInteractionResponseBehavior : InteractionResponseBehavior","dev.kord.core.behavior.interaction.response.DeferredMessageInteractionResponseBehavior"]},{"name":"interface DeferredPublicMessageInteractionResponseBehavior : PublicInteractionResponseBehavior, DeferredMessageInteractionResponseBehavior","description":"dev.kord.core.behavior.interaction.response.DeferredPublicMessageInteractionResponseBehavior","location":"core/dev.kord.core.behavior.interaction.response/-deferred-public-message-interaction-response-behavior/index.html","searchKeys":["DeferredPublicMessageInteractionResponseBehavior","interface DeferredPublicMessageInteractionResponseBehavior : PublicInteractionResponseBehavior, DeferredMessageInteractionResponseBehavior","dev.kord.core.behavior.interaction.response.DeferredPublicMessageInteractionResponseBehavior"]},{"name":"interface Entity : Comparable<Entity> ","description":"dev.kord.core.entity.Entity","location":"core/dev.kord.core.entity/-entity/index.html","searchKeys":["Entity","interface Entity : Comparable<Entity> ","dev.kord.core.entity.Entity"]},{"name":"interface EntitySupplier","description":"dev.kord.core.supplier.EntitySupplier","location":"core/dev.kord.core.supplier/-entity-supplier/index.html","searchKeys":["EntitySupplier","interface EntitySupplier","dev.kord.core.supplier.EntitySupplier"]},{"name":"interface EntitySupplyStrategy<T : EntitySupplier>","description":"dev.kord.core.supplier.EntitySupplyStrategy","location":"core/dev.kord.core.supplier/-entity-supply-strategy/index.html","searchKeys":["EntitySupplyStrategy","interface EntitySupplyStrategy<T : EntitySupplier>","dev.kord.core.supplier.EntitySupplyStrategy"]},{"name":"interface EphemeralFollowupMessageBehavior : FollowupMessageBehavior","description":"dev.kord.core.behavior.interaction.followup.EphemeralFollowupMessageBehavior","location":"core/dev.kord.core.behavior.interaction.followup/-ephemeral-followup-message-behavior/index.html","searchKeys":["EphemeralFollowupMessageBehavior","interface EphemeralFollowupMessageBehavior : FollowupMessageBehavior","dev.kord.core.behavior.interaction.followup.EphemeralFollowupMessageBehavior"]},{"name":"interface EphemeralInteractionResponseBehavior : InteractionResponseBehavior","description":"dev.kord.core.behavior.interaction.response.EphemeralInteractionResponseBehavior","location":"core/dev.kord.core.behavior.interaction.response/-ephemeral-interaction-response-behavior/index.html","searchKeys":["EphemeralInteractionResponseBehavior","interface EphemeralInteractionResponseBehavior : InteractionResponseBehavior","dev.kord.core.behavior.interaction.response.EphemeralInteractionResponseBehavior"]},{"name":"interface EphemeralMessageInteractionResponseBehavior : EphemeralInteractionResponseBehavior, MessageInteractionResponseBehavior","description":"dev.kord.core.behavior.interaction.response.EphemeralMessageInteractionResponseBehavior","location":"core/dev.kord.core.behavior.interaction.response/-ephemeral-message-interaction-response-behavior/index.html","searchKeys":["EphemeralMessageInteractionResponseBehavior","interface EphemeralMessageInteractionResponseBehavior : EphemeralInteractionResponseBehavior, MessageInteractionResponseBehavior","dev.kord.core.behavior.interaction.response.EphemeralMessageInteractionResponseBehavior"]},{"name":"interface Event : KordObject","description":"dev.kord.core.event.Event","location":"core/dev.kord.core.event/-event/index.html","searchKeys":["Event","interface Event : KordObject","dev.kord.core.event.Event"]},{"name":"interface FollowupMessageBehavior : KordEntity, Strategizable","description":"dev.kord.core.behavior.interaction.followup.FollowupMessageBehavior","location":"core/dev.kord.core.behavior.interaction.followup/-followup-message-behavior/index.html","searchKeys":["FollowupMessageBehavior","interface FollowupMessageBehavior : KordEntity, Strategizable","dev.kord.core.behavior.interaction.followup.FollowupMessageBehavior"]},{"name":"interface FollowupPermittingInteractionResponseBehavior : InteractionResponseBehavior","description":"dev.kord.core.behavior.interaction.response.FollowupPermittingInteractionResponseBehavior","location":"core/dev.kord.core.behavior.interaction.response/-followup-permitting-interaction-response-behavior/index.html","searchKeys":["FollowupPermittingInteractionResponseBehavior","interface FollowupPermittingInteractionResponseBehavior : InteractionResponseBehavior","dev.kord.core.behavior.interaction.response.FollowupPermittingInteractionResponseBehavior"]},{"name":"interface GatewayEventInterceptor","description":"dev.kord.core.gateway.handler.GatewayEventInterceptor","location":"core/dev.kord.core.gateway.handler/-gateway-event-interceptor/index.html","searchKeys":["GatewayEventInterceptor","interface GatewayEventInterceptor","dev.kord.core.gateway.handler.GatewayEventInterceptor"]},{"name":"interface GlobalApplicationCommand : ApplicationCommand, GlobalApplicationCommandBehavior","description":"dev.kord.core.entity.application.GlobalApplicationCommand","location":"core/dev.kord.core.entity.application/-global-application-command/index.html","searchKeys":["GlobalApplicationCommand","interface GlobalApplicationCommand : ApplicationCommand, GlobalApplicationCommandBehavior","dev.kord.core.entity.application.GlobalApplicationCommand"]},{"name":"interface GlobalApplicationCommandBehavior : ApplicationCommandBehavior","description":"dev.kord.core.behavior.GlobalApplicationCommandBehavior","location":"core/dev.kord.core.behavior/-global-application-command-behavior/index.html","searchKeys":["GlobalApplicationCommandBehavior","interface GlobalApplicationCommandBehavior : ApplicationCommandBehavior","dev.kord.core.behavior.GlobalApplicationCommandBehavior"]},{"name":"interface GlobalApplicationCommandInteraction : ApplicationCommandInteraction, GlobalInteraction","description":"dev.kord.core.entity.interaction.GlobalApplicationCommandInteraction","location":"core/dev.kord.core.entity.interaction/-global-application-command-interaction/index.html","searchKeys":["GlobalApplicationCommandInteraction","interface GlobalApplicationCommandInteraction : ApplicationCommandInteraction, GlobalInteraction","dev.kord.core.entity.interaction.GlobalApplicationCommandInteraction"]},{"name":"interface GlobalApplicationCommandInteractionCreateEvent : ApplicationCommandInteractionCreateEvent","description":"dev.kord.core.event.interaction.GlobalApplicationCommandInteractionCreateEvent","location":"core/dev.kord.core.event.interaction/-global-application-command-interaction-create-event/index.html","searchKeys":["GlobalApplicationCommandInteractionCreateEvent","interface GlobalApplicationCommandInteractionCreateEvent : ApplicationCommandInteractionCreateEvent","dev.kord.core.event.interaction.GlobalApplicationCommandInteractionCreateEvent"]},{"name":"interface GlobalChatInputCommandBehavior : ChatInputCommandBehavior, GlobalApplicationCommandBehavior","description":"dev.kord.core.behavior.GlobalChatInputCommandBehavior","location":"core/dev.kord.core.behavior/-global-chat-input-command-behavior/index.html","searchKeys":["GlobalChatInputCommandBehavior","interface GlobalChatInputCommandBehavior : ChatInputCommandBehavior, GlobalApplicationCommandBehavior","dev.kord.core.behavior.GlobalChatInputCommandBehavior"]},{"name":"interface GlobalComponentInteraction : ComponentInteraction, GlobalInteraction","description":"dev.kord.core.entity.interaction.GlobalComponentInteraction","location":"core/dev.kord.core.entity.interaction/-global-component-interaction/index.html","searchKeys":["GlobalComponentInteraction","interface GlobalComponentInteraction : ComponentInteraction, GlobalInteraction","dev.kord.core.entity.interaction.GlobalComponentInteraction"]},{"name":"interface GlobalComponentInteractionCreateEvent : ComponentInteractionCreateEvent","description":"dev.kord.core.event.interaction.GlobalComponentInteractionCreateEvent","location":"core/dev.kord.core.event.interaction/-global-component-interaction-create-event/index.html","searchKeys":["GlobalComponentInteractionCreateEvent","interface GlobalComponentInteractionCreateEvent : ComponentInteractionCreateEvent","dev.kord.core.event.interaction.GlobalComponentInteractionCreateEvent"]},{"name":"interface GlobalInteraction : Interaction, GlobalInteractionBehavior","description":"dev.kord.core.entity.interaction.GlobalInteraction","location":"core/dev.kord.core.entity.interaction/-global-interaction/index.html","searchKeys":["GlobalInteraction","interface GlobalInteraction : Interaction, GlobalInteractionBehavior","dev.kord.core.entity.interaction.GlobalInteraction"]},{"name":"interface GlobalInteractionBehavior : InteractionBehavior","description":"dev.kord.core.behavior.interaction.GlobalInteractionBehavior","location":"core/dev.kord.core.behavior.interaction/-global-interaction-behavior/index.html","searchKeys":["GlobalInteractionBehavior","interface GlobalInteractionBehavior : InteractionBehavior","dev.kord.core.behavior.interaction.GlobalInteractionBehavior"]},{"name":"interface GlobalMessageCommandBehavior : MessageCommandBehavior, GlobalApplicationCommandBehavior","description":"dev.kord.core.behavior.GlobalMessageCommandBehavior","location":"core/dev.kord.core.behavior/-global-message-command-behavior/index.html","searchKeys":["GlobalMessageCommandBehavior","interface GlobalMessageCommandBehavior : MessageCommandBehavior, GlobalApplicationCommandBehavior","dev.kord.core.behavior.GlobalMessageCommandBehavior"]},{"name":"interface GlobalUserCommandBehavior : UserCommandBehavior, GlobalApplicationCommandBehavior","description":"dev.kord.core.behavior.GlobalUserCommandBehavior","location":"core/dev.kord.core.behavior/-global-user-command-behavior/index.html","searchKeys":["GlobalUserCommandBehavior","interface GlobalUserCommandBehavior : UserCommandBehavior, GlobalApplicationCommandBehavior","dev.kord.core.behavior.GlobalUserCommandBehavior"]},{"name":"interface GuildApplicationCommand : ApplicationCommand, GuildApplicationCommandBehavior","description":"dev.kord.core.entity.application.GuildApplicationCommand","location":"core/dev.kord.core.entity.application/-guild-application-command/index.html","searchKeys":["GuildApplicationCommand","interface GuildApplicationCommand : ApplicationCommand, GuildApplicationCommandBehavior","dev.kord.core.entity.application.GuildApplicationCommand"]},{"name":"interface GuildApplicationCommandBehavior : ApplicationCommandBehavior","description":"dev.kord.core.behavior.GuildApplicationCommandBehavior","location":"core/dev.kord.core.behavior/-guild-application-command-behavior/index.html","searchKeys":["GuildApplicationCommandBehavior","interface GuildApplicationCommandBehavior : ApplicationCommandBehavior","dev.kord.core.behavior.GuildApplicationCommandBehavior"]},{"name":"interface GuildApplicationCommandInteraction : ApplicationCommandInteraction, GuildInteraction","description":"dev.kord.core.entity.interaction.GuildApplicationCommandInteraction","location":"core/dev.kord.core.entity.interaction/-guild-application-command-interaction/index.html","searchKeys":["GuildApplicationCommandInteraction","interface GuildApplicationCommandInteraction : ApplicationCommandInteraction, GuildInteraction","dev.kord.core.entity.interaction.GuildApplicationCommandInteraction"]},{"name":"interface GuildApplicationCommandInteractionCreateEvent : ApplicationCommandInteractionCreateEvent","description":"dev.kord.core.event.interaction.GuildApplicationCommandInteractionCreateEvent","location":"core/dev.kord.core.event.interaction/-guild-application-command-interaction-create-event/index.html","searchKeys":["GuildApplicationCommandInteractionCreateEvent","interface GuildApplicationCommandInteractionCreateEvent : ApplicationCommandInteractionCreateEvent","dev.kord.core.event.interaction.GuildApplicationCommandInteractionCreateEvent"]},{"name":"interface GuildBehavior : KordEntity, Strategizable","description":"dev.kord.core.behavior.GuildBehavior","location":"core/dev.kord.core.behavior/-guild-behavior/index.html","searchKeys":["GuildBehavior","interface GuildBehavior : KordEntity, Strategizable","dev.kord.core.behavior.GuildBehavior"]},{"name":"interface GuildChannel : Channel, GuildChannelBehavior","description":"dev.kord.core.entity.channel.GuildChannel","location":"core/dev.kord.core.entity.channel/-guild-channel/index.html","searchKeys":["GuildChannel","interface GuildChannel : Channel, GuildChannelBehavior","dev.kord.core.entity.channel.GuildChannel"]},{"name":"interface GuildChannelBehavior : ChannelBehavior, Strategizable","description":"dev.kord.core.behavior.channel.GuildChannelBehavior","location":"core/dev.kord.core.behavior.channel/-guild-channel-behavior/index.html","searchKeys":["GuildChannelBehavior","interface GuildChannelBehavior : ChannelBehavior, Strategizable","dev.kord.core.behavior.channel.GuildChannelBehavior"]},{"name":"interface GuildChatInputCommandBehavior : ChatInputCommandBehavior, GuildApplicationCommandBehavior","description":"dev.kord.core.behavior.GuildChatInputCommandBehavior","location":"core/dev.kord.core.behavior/-guild-chat-input-command-behavior/index.html","searchKeys":["GuildChatInputCommandBehavior","interface GuildChatInputCommandBehavior : ChatInputCommandBehavior, GuildApplicationCommandBehavior","dev.kord.core.behavior.GuildChatInputCommandBehavior"]},{"name":"interface GuildComponentInteraction : ComponentInteraction, GuildInteraction","description":"dev.kord.core.entity.interaction.GuildComponentInteraction","location":"core/dev.kord.core.entity.interaction/-guild-component-interaction/index.html","searchKeys":["GuildComponentInteraction","interface GuildComponentInteraction : ComponentInteraction, GuildInteraction","dev.kord.core.entity.interaction.GuildComponentInteraction"]},{"name":"interface GuildComponentInteractionCreateEvent : ComponentInteractionCreateEvent","description":"dev.kord.core.event.interaction.GuildComponentInteractionCreateEvent","location":"core/dev.kord.core.event.interaction/-guild-component-interaction-create-event/index.html","searchKeys":["GuildComponentInteractionCreateEvent","interface GuildComponentInteractionCreateEvent : ComponentInteractionCreateEvent","dev.kord.core.event.interaction.GuildComponentInteractionCreateEvent"]},{"name":"interface GuildEmojiBehavior : KordEntity, Strategizable","description":"dev.kord.core.behavior.GuildEmojiBehavior","location":"core/dev.kord.core.behavior/-guild-emoji-behavior/index.html","searchKeys":["GuildEmojiBehavior","interface GuildEmojiBehavior : KordEntity, Strategizable","dev.kord.core.behavior.GuildEmojiBehavior"]},{"name":"interface GuildInteraction : Interaction, GuildInteractionBehavior","description":"dev.kord.core.entity.interaction.GuildInteraction","location":"core/dev.kord.core.entity.interaction/-guild-interaction/index.html","searchKeys":["GuildInteraction","interface GuildInteraction : Interaction, GuildInteractionBehavior","dev.kord.core.entity.interaction.GuildInteraction"]},{"name":"interface GuildInteractionBehavior : InteractionBehavior","description":"dev.kord.core.behavior.interaction.GuildInteractionBehavior","location":"core/dev.kord.core.behavior.interaction/-guild-interaction-behavior/index.html","searchKeys":["GuildInteractionBehavior","interface GuildInteractionBehavior : InteractionBehavior","dev.kord.core.behavior.interaction.GuildInteractionBehavior"]},{"name":"interface GuildMessageChannel : GuildChannel, MessageChannel, GuildMessageChannelBehavior","description":"dev.kord.core.entity.channel.GuildMessageChannel","location":"core/dev.kord.core.entity.channel/-guild-message-channel/index.html","searchKeys":["GuildMessageChannel","interface GuildMessageChannel : GuildChannel, MessageChannel, GuildMessageChannelBehavior","dev.kord.core.entity.channel.GuildMessageChannel"]},{"name":"interface GuildMessageChannelBehavior : GuildChannelBehavior, MessageChannelBehavior","description":"dev.kord.core.behavior.channel.GuildMessageChannelBehavior","location":"core/dev.kord.core.behavior.channel/-guild-message-channel-behavior/index.html","searchKeys":["GuildMessageChannelBehavior","interface GuildMessageChannelBehavior : GuildChannelBehavior, MessageChannelBehavior","dev.kord.core.behavior.channel.GuildMessageChannelBehavior"]},{"name":"interface GuildMessageCommandBehavior : MessageCommandBehavior, GuildApplicationCommandBehavior","description":"dev.kord.core.behavior.GuildMessageCommandBehavior","location":"core/dev.kord.core.behavior/-guild-message-command-behavior/index.html","searchKeys":["GuildMessageCommandBehavior","interface GuildMessageCommandBehavior : MessageCommandBehavior, GuildApplicationCommandBehavior","dev.kord.core.behavior.GuildMessageCommandBehavior"]},{"name":"interface GuildScheduledEventBehavior : KordEntity, Strategizable","description":"dev.kord.core.behavior.GuildScheduledEventBehavior","location":"core/dev.kord.core.behavior/-guild-scheduled-event-behavior/index.html","searchKeys":["GuildScheduledEventBehavior","interface GuildScheduledEventBehavior : KordEntity, Strategizable","dev.kord.core.behavior.GuildScheduledEventBehavior"]},{"name":"interface GuildScheduledEventEvent : Event, Strategizable","description":"dev.kord.core.event.guild.GuildScheduledEventEvent","location":"core/dev.kord.core.event.guild/-guild-scheduled-event-event/index.html","searchKeys":["GuildScheduledEventEvent","interface GuildScheduledEventEvent : Event, Strategizable","dev.kord.core.event.guild.GuildScheduledEventEvent"]},{"name":"interface GuildScheduledEventUserEvent : Event, Strategizable","description":"dev.kord.core.event.guild.GuildScheduledEventUserEvent","location":"core/dev.kord.core.event.guild/-guild-scheduled-event-user-event/index.html","searchKeys":["GuildScheduledEventUserEvent","interface GuildScheduledEventUserEvent : Event, Strategizable","dev.kord.core.event.guild.GuildScheduledEventUserEvent"]},{"name":"interface GuildUserCommandBehavior : UserCommandBehavior, GuildApplicationCommandBehavior","description":"dev.kord.core.behavior.GuildUserCommandBehavior","location":"core/dev.kord.core.behavior/-guild-user-command-behavior/index.html","searchKeys":["GuildUserCommandBehavior","interface GuildUserCommandBehavior : UserCommandBehavior, GuildApplicationCommandBehavior","dev.kord.core.behavior.GuildUserCommandBehavior"]},{"name":"interface Interaction : InteractionBehavior","description":"dev.kord.core.entity.interaction.Interaction","location":"core/dev.kord.core.entity.interaction/-interaction/index.html","searchKeys":["Interaction","interface Interaction : InteractionBehavior","dev.kord.core.entity.interaction.Interaction"]},{"name":"interface InteractionBehavior : KordEntity, Strategizable","description":"dev.kord.core.behavior.interaction.InteractionBehavior","location":"core/dev.kord.core.behavior.interaction/-interaction-behavior/index.html","searchKeys":["InteractionBehavior","interface InteractionBehavior : KordEntity, Strategizable","dev.kord.core.behavior.interaction.InteractionBehavior"]},{"name":"interface InteractionCommand : KordObject","description":"dev.kord.core.entity.interaction.InteractionCommand","location":"core/dev.kord.core.entity.interaction/-interaction-command/index.html","searchKeys":["InteractionCommand","interface InteractionCommand : KordObject","dev.kord.core.entity.interaction.InteractionCommand"]},{"name":"interface InteractionCreateEvent : Event","description":"dev.kord.core.event.interaction.InteractionCreateEvent","location":"core/dev.kord.core.event.interaction/-interaction-create-event/index.html","searchKeys":["InteractionCreateEvent","interface InteractionCreateEvent : Event","dev.kord.core.event.interaction.InteractionCreateEvent"]},{"name":"interface InteractionResponseBehavior : KordObject, Strategizable","description":"dev.kord.core.behavior.interaction.response.InteractionResponseBehavior","location":"core/dev.kord.core.behavior.interaction.response/-interaction-response-behavior/index.html","searchKeys":["InteractionResponseBehavior","interface InteractionResponseBehavior : KordObject, Strategizable","dev.kord.core.behavior.interaction.response.InteractionResponseBehavior"]},{"name":"interface KeywordAutoModerationRuleBehavior : TypedAutoModerationRuleBehavior","description":"dev.kord.core.behavior.automoderation.KeywordAutoModerationRuleBehavior","location":"core/dev.kord.core.behavior.automoderation/-keyword-auto-moderation-rule-behavior/index.html","searchKeys":["KeywordAutoModerationRuleBehavior","interface KeywordAutoModerationRuleBehavior : TypedAutoModerationRuleBehavior","dev.kord.core.behavior.automoderation.KeywordAutoModerationRuleBehavior"]},{"name":"interface KeywordPresetAutoModerationRuleBehavior : TypedAutoModerationRuleBehavior","description":"dev.kord.core.behavior.automoderation.KeywordPresetAutoModerationRuleBehavior","location":"core/dev.kord.core.behavior.automoderation/-keyword-preset-auto-moderation-rule-behavior/index.html","searchKeys":["KeywordPresetAutoModerationRuleBehavior","interface KeywordPresetAutoModerationRuleBehavior : TypedAutoModerationRuleBehavior","dev.kord.core.behavior.automoderation.KeywordPresetAutoModerationRuleBehavior"]},{"name":"interface KordEntity : KordObject, Entity","description":"dev.kord.core.entity.KordEntity","location":"core/dev.kord.core.entity/-kord-entity/index.html","searchKeys":["KordEntity","interface KordEntity : KordObject, Entity","dev.kord.core.entity.KordEntity"]},{"name":"interface KordObject","description":"dev.kord.core.KordObject","location":"core/dev.kord.core/-kord-object/index.html","searchKeys":["KordObject","interface KordObject","dev.kord.core.KordObject"]},{"name":"interface LiveKordEntity : KordEntity, CoroutineScope","description":"dev.kord.core.live.LiveKordEntity","location":"core/dev.kord.core.live/-live-kord-entity/index.html","searchKeys":["LiveKordEntity","interface LiveKordEntity : KordEntity, CoroutineScope","dev.kord.core.live.LiveKordEntity"]},{"name":"interface MasterGateway","description":"dev.kord.core.gateway.MasterGateway","location":"core/dev.kord.core.gateway/-master-gateway/index.html","searchKeys":["MasterGateway","interface MasterGateway","dev.kord.core.gateway.MasterGateway"]},{"name":"interface MemberBehavior : KordEntity, UserBehavior","description":"dev.kord.core.behavior.MemberBehavior","location":"core/dev.kord.core.behavior/-member-behavior/index.html","searchKeys":["MemberBehavior","interface MemberBehavior : KordEntity, UserBehavior","dev.kord.core.behavior.MemberBehavior"]},{"name":"interface MentionSpamAutoModerationRuleBehavior : TypedAutoModerationRuleBehavior","description":"dev.kord.core.behavior.automoderation.MentionSpamAutoModerationRuleBehavior","location":"core/dev.kord.core.behavior.automoderation/-mention-spam-auto-moderation-rule-behavior/index.html","searchKeys":["MentionSpamAutoModerationRuleBehavior","interface MentionSpamAutoModerationRuleBehavior : TypedAutoModerationRuleBehavior","dev.kord.core.behavior.automoderation.MentionSpamAutoModerationRuleBehavior"]},{"name":"interface MessageBehavior : KordEntity, Strategizable","description":"dev.kord.core.behavior.MessageBehavior","location":"core/dev.kord.core.behavior/-message-behavior/index.html","searchKeys":["MessageBehavior","interface MessageBehavior : KordEntity, Strategizable","dev.kord.core.behavior.MessageBehavior"]},{"name":"interface MessageChannel : Channel, MessageChannelBehavior","description":"dev.kord.core.entity.channel.MessageChannel","location":"core/dev.kord.core.entity.channel/-message-channel/index.html","searchKeys":["MessageChannel","interface MessageChannel : Channel, MessageChannelBehavior","dev.kord.core.entity.channel.MessageChannel"]},{"name":"interface MessageChannelBehavior : ChannelBehavior, Strategizable","description":"dev.kord.core.behavior.channel.MessageChannelBehavior","location":"core/dev.kord.core.behavior.channel/-message-channel-behavior/index.html","searchKeys":["MessageChannelBehavior","interface MessageChannelBehavior : ChannelBehavior, Strategizable","dev.kord.core.behavior.channel.MessageChannelBehavior"]},{"name":"interface MessageCommand : ApplicationCommand, MessageCommandBehavior","description":"dev.kord.core.entity.application.MessageCommand","location":"core/dev.kord.core.entity.application/-message-command/index.html","searchKeys":["MessageCommand","interface MessageCommand : ApplicationCommand, MessageCommandBehavior","dev.kord.core.entity.application.MessageCommand"]},{"name":"interface MessageCommandBehavior : ApplicationCommandBehavior","description":"dev.kord.core.behavior.MessageCommandBehavior","location":"core/dev.kord.core.behavior/-message-command-behavior/index.html","searchKeys":["MessageCommandBehavior","interface MessageCommandBehavior : ApplicationCommandBehavior","dev.kord.core.behavior.MessageCommandBehavior"]},{"name":"interface MessageCommandInteraction : ApplicationCommandInteraction","description":"dev.kord.core.entity.interaction.MessageCommandInteraction","location":"core/dev.kord.core.entity.interaction/-message-command-interaction/index.html","searchKeys":["MessageCommandInteraction","interface MessageCommandInteraction : ApplicationCommandInteraction","dev.kord.core.entity.interaction.MessageCommandInteraction"]},{"name":"interface MessageCommandInteractionCreateEvent : ApplicationCommandInteractionCreateEvent","description":"dev.kord.core.event.interaction.MessageCommandInteractionCreateEvent","location":"core/dev.kord.core.event.interaction/-message-command-interaction-create-event/index.html","searchKeys":["MessageCommandInteractionCreateEvent","interface MessageCommandInteractionCreateEvent : ApplicationCommandInteractionCreateEvent","dev.kord.core.event.interaction.MessageCommandInteractionCreateEvent"]},{"name":"interface MessageInteractionResponseBehavior : FollowupPermittingInteractionResponseBehavior","description":"dev.kord.core.behavior.interaction.response.MessageInteractionResponseBehavior","location":"core/dev.kord.core.behavior.interaction.response/-message-interaction-response-behavior/index.html","searchKeys":["MessageInteractionResponseBehavior","interface MessageInteractionResponseBehavior : FollowupPermittingInteractionResponseBehavior","dev.kord.core.behavior.interaction.response.MessageInteractionResponseBehavior"]},{"name":"interface ModalParentInteractionBehavior : ActionInteractionBehavior","description":"dev.kord.core.behavior.interaction.ModalParentInteractionBehavior","location":"core/dev.kord.core.behavior.interaction/-modal-parent-interaction-behavior/index.html","searchKeys":["ModalParentInteractionBehavior","interface ModalParentInteractionBehavior : ActionInteractionBehavior","dev.kord.core.behavior.interaction.ModalParentInteractionBehavior"]},{"name":"interface ModalSubmitInteraction : ActionInteraction, ComponentInteractionBehavior","description":"dev.kord.core.entity.interaction.ModalSubmitInteraction","location":"core/dev.kord.core.entity.interaction/-modal-submit-interaction/index.html","searchKeys":["ModalSubmitInteraction","interface ModalSubmitInteraction : ActionInteraction, ComponentInteractionBehavior","dev.kord.core.entity.interaction.ModalSubmitInteraction"]},{"name":"interface ModalSubmitInteractionCreateEvent : ActionInteractionCreateEvent","description":"dev.kord.core.event.interaction.ModalSubmitInteractionCreateEvent","location":"core/dev.kord.core.event.interaction/-modal-submit-interaction-create-event/index.html","searchKeys":["ModalSubmitInteractionCreateEvent","interface ModalSubmitInteractionCreateEvent : ActionInteractionCreateEvent","dev.kord.core.event.interaction.ModalSubmitInteractionCreateEvent"]},{"name":"interface NewsChannelBehavior : ThreadParentChannelBehavior","description":"dev.kord.core.behavior.channel.NewsChannelBehavior","location":"core/dev.kord.core.behavior.channel/-news-channel-behavior/index.html","searchKeys":["NewsChannelBehavior","interface NewsChannelBehavior : ThreadParentChannelBehavior","dev.kord.core.behavior.channel.NewsChannelBehavior"]},{"name":"interface OptionValue<out T>","description":"dev.kord.core.entity.interaction.OptionValue","location":"core/dev.kord.core.entity.interaction/-option-value/index.html","searchKeys":["OptionValue","interface OptionValue<out T>","dev.kord.core.entity.interaction.OptionValue"]},{"name":"interface PopupInteractionResponseBehavior : FollowupPermittingInteractionResponseBehavior","description":"dev.kord.core.behavior.interaction.response.PopupInteractionResponseBehavior","location":"core/dev.kord.core.behavior.interaction.response/-popup-interaction-response-behavior/index.html","searchKeys":["PopupInteractionResponseBehavior","interface PopupInteractionResponseBehavior : FollowupPermittingInteractionResponseBehavior","dev.kord.core.behavior.interaction.response.PopupInteractionResponseBehavior"]},{"name":"interface PrivateThreadParentChannelBehavior : ThreadParentChannelBehavior","description":"dev.kord.core.behavior.channel.threads.PrivateThreadParentChannelBehavior","location":"core/dev.kord.core.behavior.channel.threads/-private-thread-parent-channel-behavior/index.html","searchKeys":["PrivateThreadParentChannelBehavior","interface PrivateThreadParentChannelBehavior : ThreadParentChannelBehavior","dev.kord.core.behavior.channel.threads.PrivateThreadParentChannelBehavior"]},{"name":"interface PublicFollowupMessageBehavior : FollowupMessageBehavior","description":"dev.kord.core.behavior.interaction.followup.PublicFollowupMessageBehavior","location":"core/dev.kord.core.behavior.interaction.followup/-public-followup-message-behavior/index.html","searchKeys":["PublicFollowupMessageBehavior","interface PublicFollowupMessageBehavior : FollowupMessageBehavior","dev.kord.core.behavior.interaction.followup.PublicFollowupMessageBehavior"]},{"name":"interface PublicInteractionResponseBehavior : InteractionResponseBehavior","description":"dev.kord.core.behavior.interaction.response.PublicInteractionResponseBehavior","location":"core/dev.kord.core.behavior.interaction.response/-public-interaction-response-behavior/index.html","searchKeys":["PublicInteractionResponseBehavior","interface PublicInteractionResponseBehavior : InteractionResponseBehavior","dev.kord.core.behavior.interaction.response.PublicInteractionResponseBehavior"]},{"name":"interface PublicMessageInteractionResponseBehavior : PublicInteractionResponseBehavior, MessageInteractionResponseBehavior","description":"dev.kord.core.behavior.interaction.response.PublicMessageInteractionResponseBehavior","location":"core/dev.kord.core.behavior.interaction.response/-public-message-interaction-response-behavior/index.html","searchKeys":["PublicMessageInteractionResponseBehavior","interface PublicMessageInteractionResponseBehavior : PublicInteractionResponseBehavior, MessageInteractionResponseBehavior","dev.kord.core.behavior.interaction.response.PublicMessageInteractionResponseBehavior"]},{"name":"interface ResolvableOptionValue<out T : Entity> : OptionValue<Snowflake> ","description":"dev.kord.core.entity.interaction.ResolvableOptionValue","location":"core/dev.kord.core.entity.interaction/-resolvable-option-value/index.html","searchKeys":["ResolvableOptionValue","interface ResolvableOptionValue<out T : Entity> : OptionValue<Snowflake> ","dev.kord.core.entity.interaction.ResolvableOptionValue"]},{"name":"interface RoleBehavior : KordEntity, Strategizable","description":"dev.kord.core.behavior.RoleBehavior","location":"core/dev.kord.core.behavior/-role-behavior/index.html","searchKeys":["RoleBehavior","interface RoleBehavior : KordEntity, Strategizable","dev.kord.core.behavior.RoleBehavior"]},{"name":"interface SelectMenuInteraction : ComponentInteraction","description":"dev.kord.core.entity.interaction.SelectMenuInteraction","location":"core/dev.kord.core.entity.interaction/-select-menu-interaction/index.html","searchKeys":["SelectMenuInteraction","interface SelectMenuInteraction : ComponentInteraction","dev.kord.core.entity.interaction.SelectMenuInteraction"]},{"name":"interface SelectMenuInteractionCreateEvent : ComponentInteractionCreateEvent","description":"dev.kord.core.event.interaction.SelectMenuInteractionCreateEvent","location":"core/dev.kord.core.event.interaction/-select-menu-interaction-create-event/index.html","searchKeys":["SelectMenuInteractionCreateEvent","interface SelectMenuInteractionCreateEvent : ComponentInteractionCreateEvent","dev.kord.core.event.interaction.SelectMenuInteractionCreateEvent"]},{"name":"interface SpamAutoModerationRuleBehavior : TypedAutoModerationRuleBehavior","description":"dev.kord.core.behavior.automoderation.SpamAutoModerationRuleBehavior","location":"core/dev.kord.core.behavior.automoderation/-spam-auto-moderation-rule-behavior/index.html","searchKeys":["SpamAutoModerationRuleBehavior","interface SpamAutoModerationRuleBehavior : TypedAutoModerationRuleBehavior","dev.kord.core.behavior.automoderation.SpamAutoModerationRuleBehavior"]},{"name":"interface StageChannelBehavior : BaseVoiceChannelBehavior","description":"dev.kord.core.behavior.channel.StageChannelBehavior","location":"core/dev.kord.core.behavior.channel/-stage-channel-behavior/index.html","searchKeys":["StageChannelBehavior","interface StageChannelBehavior : BaseVoiceChannelBehavior","dev.kord.core.behavior.channel.StageChannelBehavior"]},{"name":"interface StageInstanceBehavior : KordEntity, Strategizable","description":"dev.kord.core.behavior.StageInstanceBehavior","location":"core/dev.kord.core.behavior/-stage-instance-behavior/index.html","searchKeys":["StageInstanceBehavior","interface StageInstanceBehavior : KordEntity, Strategizable","dev.kord.core.behavior.StageInstanceBehavior"]},{"name":"interface StickerBehavior : KordEntity, Strategizable","description":"dev.kord.core.behavior.StickerBehavior","location":"core/dev.kord.core.behavior/-sticker-behavior/index.html","searchKeys":["StickerBehavior","interface StickerBehavior : KordEntity, Strategizable","dev.kord.core.behavior.StickerBehavior"]},{"name":"interface Strategizable","description":"dev.kord.core.entity.Strategizable","location":"core/dev.kord.core.entity/-strategizable/index.html","searchKeys":["Strategizable","interface Strategizable","dev.kord.core.entity.Strategizable"]},{"name":"interface TemplateBehavior : KordObject","description":"dev.kord.core.behavior.TemplateBehavior","location":"core/dev.kord.core.behavior/-template-behavior/index.html","searchKeys":["TemplateBehavior","interface TemplateBehavior : KordObject","dev.kord.core.behavior.TemplateBehavior"]},{"name":"interface TextChannelBehavior : PrivateThreadParentChannelBehavior","description":"dev.kord.core.behavior.channel.TextChannelBehavior","location":"core/dev.kord.core.behavior.channel/-text-channel-behavior/index.html","searchKeys":["TextChannelBehavior","interface TextChannelBehavior : PrivateThreadParentChannelBehavior","dev.kord.core.behavior.channel.TextChannelBehavior"]},{"name":"interface ThreadChannel : GuildMessageChannel, ThreadChannelBehavior","description":"dev.kord.core.entity.channel.thread.ThreadChannel","location":"core/dev.kord.core.entity.channel.thread/-thread-channel/index.html","searchKeys":["ThreadChannel","interface ThreadChannel : GuildMessageChannel, ThreadChannelBehavior","dev.kord.core.entity.channel.thread.ThreadChannel"]},{"name":"interface ThreadChannelBehavior : GuildMessageChannelBehavior","description":"dev.kord.core.behavior.channel.threads.ThreadChannelBehavior","location":"core/dev.kord.core.behavior.channel.threads/-thread-channel-behavior/index.html","searchKeys":["ThreadChannelBehavior","interface ThreadChannelBehavior : GuildMessageChannelBehavior","dev.kord.core.behavior.channel.threads.ThreadChannelBehavior"]},{"name":"interface ThreadChannelCreateEvent : ChannelCreateEvent","description":"dev.kord.core.event.channel.thread.ThreadChannelCreateEvent","location":"core/dev.kord.core.event.channel.thread/-thread-channel-create-event/index.html","searchKeys":["ThreadChannelCreateEvent","interface ThreadChannelCreateEvent : ChannelCreateEvent","dev.kord.core.event.channel.thread.ThreadChannelCreateEvent"]},{"name":"interface ThreadChannelDeleteEvent : Event","description":"dev.kord.core.event.channel.thread.ThreadChannelDeleteEvent","location":"core/dev.kord.core.event.channel.thread/-thread-channel-delete-event/index.html","searchKeys":["ThreadChannelDeleteEvent","interface ThreadChannelDeleteEvent : Event","dev.kord.core.event.channel.thread.ThreadChannelDeleteEvent"]},{"name":"interface ThreadMemberBehavior : UserBehavior","description":"dev.kord.core.behavior.ThreadMemberBehavior","location":"core/dev.kord.core.behavior/-thread-member-behavior/index.html","searchKeys":["ThreadMemberBehavior","interface ThreadMemberBehavior : UserBehavior","dev.kord.core.behavior.ThreadMemberBehavior"]},{"name":"interface ThreadParentChannel : ThreadParentChannelBehavior, TopGuildMessageChannel","description":"dev.kord.core.entity.channel.ThreadParentChannel","location":"core/dev.kord.core.entity.channel/-thread-parent-channel/index.html","searchKeys":["ThreadParentChannel","interface ThreadParentChannel : ThreadParentChannelBehavior, TopGuildMessageChannel","dev.kord.core.entity.channel.ThreadParentChannel"]},{"name":"interface ThreadParentChannelBehavior : TopGuildMessageChannelBehavior","description":"dev.kord.core.behavior.channel.threads.ThreadParentChannelBehavior","location":"core/dev.kord.core.behavior.channel.threads/-thread-parent-channel-behavior/index.html","searchKeys":["ThreadParentChannelBehavior","interface ThreadParentChannelBehavior : TopGuildMessageChannelBehavior","dev.kord.core.behavior.channel.threads.ThreadParentChannelBehavior"]},{"name":"interface ThreadUpdateEvent : ChannelUpdateEvent","description":"dev.kord.core.event.channel.thread.ThreadUpdateEvent","location":"core/dev.kord.core.event.channel.thread/-thread-update-event/index.html","searchKeys":["ThreadUpdateEvent","interface ThreadUpdateEvent : ChannelUpdateEvent","dev.kord.core.event.channel.thread.ThreadUpdateEvent"]},{"name":"interface TopGuildChannel : GuildChannel, TopGuildChannelBehavior","description":"dev.kord.core.entity.channel.TopGuildChannel","location":"core/dev.kord.core.entity.channel/-top-guild-channel/index.html","searchKeys":["TopGuildChannel","interface TopGuildChannel : GuildChannel, TopGuildChannelBehavior","dev.kord.core.entity.channel.TopGuildChannel"]},{"name":"interface TopGuildChannelBehavior : GuildChannelBehavior","description":"dev.kord.core.behavior.channel.TopGuildChannelBehavior","location":"core/dev.kord.core.behavior.channel/-top-guild-channel-behavior/index.html","searchKeys":["TopGuildChannelBehavior","interface TopGuildChannelBehavior : GuildChannelBehavior","dev.kord.core.behavior.channel.TopGuildChannelBehavior"]},{"name":"interface TopGuildMessageChannel : CategorizableChannel, GuildMessageChannel, TopGuildMessageChannelBehavior","description":"dev.kord.core.entity.channel.TopGuildMessageChannel","location":"core/dev.kord.core.entity.channel/-top-guild-message-channel/index.html","searchKeys":["TopGuildMessageChannel","interface TopGuildMessageChannel : CategorizableChannel, GuildMessageChannel, TopGuildMessageChannelBehavior","dev.kord.core.entity.channel.TopGuildMessageChannel"]},{"name":"interface TopGuildMessageChannelBehavior : CategorizableChannelBehavior, GuildMessageChannelBehavior","description":"dev.kord.core.behavior.channel.TopGuildMessageChannelBehavior","location":"core/dev.kord.core.behavior.channel/-top-guild-message-channel-behavior/index.html","searchKeys":["TopGuildMessageChannelBehavior","interface TopGuildMessageChannelBehavior : CategorizableChannelBehavior, GuildMessageChannelBehavior","dev.kord.core.behavior.channel.TopGuildMessageChannelBehavior"]},{"name":"interface TypedAutoModerationRuleBehavior : AutoModerationRuleBehavior","description":"dev.kord.core.behavior.automoderation.TypedAutoModerationRuleBehavior","location":"core/dev.kord.core.behavior.automoderation/-typed-auto-moderation-rule-behavior/index.html","searchKeys":["TypedAutoModerationRuleBehavior","interface TypedAutoModerationRuleBehavior : AutoModerationRuleBehavior","dev.kord.core.behavior.automoderation.TypedAutoModerationRuleBehavior"]},{"name":"interface UserBehavior : KordEntity, Strategizable","description":"dev.kord.core.behavior.UserBehavior","location":"core/dev.kord.core.behavior/-user-behavior/index.html","searchKeys":["UserBehavior","interface UserBehavior : KordEntity, Strategizable","dev.kord.core.behavior.UserBehavior"]},{"name":"interface UserCommand : ApplicationCommand, UserCommandBehavior","description":"dev.kord.core.entity.application.UserCommand","location":"core/dev.kord.core.entity.application/-user-command/index.html","searchKeys":["UserCommand","interface UserCommand : ApplicationCommand, UserCommandBehavior","dev.kord.core.entity.application.UserCommand"]},{"name":"interface UserCommandBehavior : ApplicationCommandBehavior","description":"dev.kord.core.behavior.UserCommandBehavior","location":"core/dev.kord.core.behavior/-user-command-behavior/index.html","searchKeys":["UserCommandBehavior","interface UserCommandBehavior : ApplicationCommandBehavior","dev.kord.core.behavior.UserCommandBehavior"]},{"name":"interface UserCommandInteraction : ApplicationCommandInteraction","description":"dev.kord.core.entity.interaction.UserCommandInteraction","location":"core/dev.kord.core.entity.interaction/-user-command-interaction/index.html","searchKeys":["UserCommandInteraction","interface UserCommandInteraction : ApplicationCommandInteraction","dev.kord.core.entity.interaction.UserCommandInteraction"]},{"name":"interface UserCommandInteractionCreateEvent : ApplicationCommandInteractionCreateEvent","description":"dev.kord.core.event.interaction.UserCommandInteractionCreateEvent","location":"core/dev.kord.core.event.interaction/-user-command-interaction-create-event/index.html","searchKeys":["UserCommandInteractionCreateEvent","interface UserCommandInteractionCreateEvent : ApplicationCommandInteractionCreateEvent","dev.kord.core.event.interaction.UserCommandInteractionCreateEvent"]},{"name":"interface VoiceChannelBehavior : TopGuildMessageChannelBehavior, BaseVoiceChannelBehavior","description":"dev.kord.core.behavior.channel.VoiceChannelBehavior","location":"core/dev.kord.core.behavior.channel/-voice-channel-behavior/index.html","searchKeys":["VoiceChannelBehavior","interface VoiceChannelBehavior : TopGuildMessageChannelBehavior, BaseVoiceChannelBehavior","dev.kord.core.behavior.channel.VoiceChannelBehavior"]},{"name":"interface WebhookBehavior : KordEntity, Strategizable","description":"dev.kord.core.behavior.WebhookBehavior","location":"core/dev.kord.core.behavior/-webhook-behavior/index.html","searchKeys":["WebhookBehavior","interface WebhookBehavior : KordEntity, Strategizable","dev.kord.core.behavior.WebhookBehavior"]},{"name":"object Companion","description":"dev.kord.core.Kord.Companion","location":"core/dev.kord.core/-kord/-companion/index.html","searchKeys":["Companion","object Companion","dev.kord.core.Kord.Companion"]},{"name":"object Companion","description":"dev.kord.core.cache.data.ActivityData.Companion","location":"core/dev.kord.core.cache.data/-activity-data/-companion/index.html","searchKeys":["Companion","object Companion","dev.kord.core.cache.data.ActivityData.Companion"]},{"name":"object Companion","description":"dev.kord.core.cache.data.ApplicationCommandData.Companion","location":"core/dev.kord.core.cache.data/-application-command-data/-companion/index.html","searchKeys":["Companion","object Companion","dev.kord.core.cache.data.ApplicationCommandData.Companion"]},{"name":"object Companion","description":"dev.kord.core.cache.data.ApplicationCommandOptionChoiceData.Companion","location":"core/dev.kord.core.cache.data/-application-command-option-choice-data/-companion/index.html","searchKeys":["Companion","object Companion","dev.kord.core.cache.data.ApplicationCommandOptionChoiceData.Companion"]},{"name":"object Companion","description":"dev.kord.core.cache.data.ApplicationCommandOptionData.Companion","location":"core/dev.kord.core.cache.data/-application-command-option-data/-companion/index.html","searchKeys":["Companion","object Companion","dev.kord.core.cache.data.ApplicationCommandOptionData.Companion"]},{"name":"object Companion","description":"dev.kord.core.cache.data.ApplicationData.Companion","location":"core/dev.kord.core.cache.data/-application-data/-companion/index.html","searchKeys":["Companion","object Companion","dev.kord.core.cache.data.ApplicationData.Companion"]},{"name":"object Companion","description":"dev.kord.core.cache.data.ApplicationInteractionData.Companion","location":"core/dev.kord.core.cache.data/-application-interaction-data/-companion/index.html","searchKeys":["Companion","object Companion","dev.kord.core.cache.data.ApplicationInteractionData.Companion"]},{"name":"object Companion","description":"dev.kord.core.cache.data.AttachmentData.Companion","location":"core/dev.kord.core.cache.data/-attachment-data/-companion/index.html","searchKeys":["Companion","object Companion","dev.kord.core.cache.data.AttachmentData.Companion"]},{"name":"object Companion","description":"dev.kord.core.cache.data.AutoModerationActionData.Companion","location":"core/dev.kord.core.cache.data/-auto-moderation-action-data/-companion/index.html","searchKeys":["Companion","object Companion","dev.kord.core.cache.data.AutoModerationActionData.Companion"]},{"name":"object Companion","description":"dev.kord.core.cache.data.AutoModerationActionMetadataData.Companion","location":"core/dev.kord.core.cache.data/-auto-moderation-action-metadata-data/-companion/index.html","searchKeys":["Companion","object Companion","dev.kord.core.cache.data.AutoModerationActionMetadataData.Companion"]},{"name":"object Companion","description":"dev.kord.core.cache.data.AutoModerationRuleData.Companion","location":"core/dev.kord.core.cache.data/-auto-moderation-rule-data/-companion/index.html","searchKeys":["Companion","object Companion","dev.kord.core.cache.data.AutoModerationRuleData.Companion"]},{"name":"object Companion","description":"dev.kord.core.cache.data.AutoModerationRuleTriggerMetadataData.Companion","location":"core/dev.kord.core.cache.data/-auto-moderation-rule-trigger-metadata-data/-companion/index.html","searchKeys":["Companion","object Companion","dev.kord.core.cache.data.AutoModerationRuleTriggerMetadataData.Companion"]},{"name":"object Companion","description":"dev.kord.core.cache.data.BanData.Companion","location":"core/dev.kord.core.cache.data/-ban-data/-companion/index.html","searchKeys":["Companion","object Companion","dev.kord.core.cache.data.BanData.Companion"]},{"name":"object Companion","description":"dev.kord.core.cache.data.ChannelData.Companion","location":"core/dev.kord.core.cache.data/-channel-data/-companion/index.html","searchKeys":["Companion","object Companion","dev.kord.core.cache.data.ChannelData.Companion"]},{"name":"object Companion","description":"dev.kord.core.cache.data.ClientStatusData.Companion","location":"core/dev.kord.core.cache.data/-client-status-data/-companion/index.html","searchKeys":["Companion","object Companion","dev.kord.core.cache.data.ClientStatusData.Companion"]},{"name":"object Companion","description":"dev.kord.core.cache.data.ComponentData.Companion","location":"core/dev.kord.core.cache.data/-component-data/-companion/index.html","searchKeys":["Companion","object Companion","dev.kord.core.cache.data.ComponentData.Companion"]},{"name":"object Companion","description":"dev.kord.core.cache.data.EmbedAuthorData.Companion","location":"core/dev.kord.core.cache.data/-embed-author-data/-companion/index.html","searchKeys":["Companion","object Companion","dev.kord.core.cache.data.EmbedAuthorData.Companion"]},{"name":"object Companion","description":"dev.kord.core.cache.data.EmbedData.Companion","location":"core/dev.kord.core.cache.data/-embed-data/-companion/index.html","searchKeys":["Companion","object Companion","dev.kord.core.cache.data.EmbedData.Companion"]},{"name":"object Companion","description":"dev.kord.core.cache.data.EmbedFieldData.Companion","location":"core/dev.kord.core.cache.data/-embed-field-data/-companion/index.html","searchKeys":["Companion","object Companion","dev.kord.core.cache.data.EmbedFieldData.Companion"]},{"name":"object Companion","description":"dev.kord.core.cache.data.EmbedFooterData.Companion","location":"core/dev.kord.core.cache.data/-embed-footer-data/-companion/index.html","searchKeys":["Companion","object Companion","dev.kord.core.cache.data.EmbedFooterData.Companion"]},{"name":"object Companion","description":"dev.kord.core.cache.data.EmbedImageData.Companion","location":"core/dev.kord.core.cache.data/-embed-image-data/-companion/index.html","searchKeys":["Companion","object Companion","dev.kord.core.cache.data.EmbedImageData.Companion"]},{"name":"object Companion","description":"dev.kord.core.cache.data.EmbedProviderData.Companion","location":"core/dev.kord.core.cache.data/-embed-provider-data/-companion/index.html","searchKeys":["Companion","object Companion","dev.kord.core.cache.data.EmbedProviderData.Companion"]},{"name":"object Companion","description":"dev.kord.core.cache.data.EmbedThumbnailData.Companion","location":"core/dev.kord.core.cache.data/-embed-thumbnail-data/-companion/index.html","searchKeys":["Companion","object Companion","dev.kord.core.cache.data.EmbedThumbnailData.Companion"]},{"name":"object Companion","description":"dev.kord.core.cache.data.EmbedVideoData.Companion","location":"core/dev.kord.core.cache.data/-embed-video-data/-companion/index.html","searchKeys":["Companion","object Companion","dev.kord.core.cache.data.EmbedVideoData.Companion"]},{"name":"object Companion","description":"dev.kord.core.cache.data.EmojiData.Companion","location":"core/dev.kord.core.cache.data/-emoji-data/-companion/index.html","searchKeys":["Companion","object Companion","dev.kord.core.cache.data.EmojiData.Companion"]},{"name":"object Companion","description":"dev.kord.core.cache.data.GuildApplicationCommandPermissionData.Companion","location":"core/dev.kord.core.cache.data/-guild-application-command-permission-data/-companion/index.html","searchKeys":["Companion","object Companion","dev.kord.core.cache.data.GuildApplicationCommandPermissionData.Companion"]},{"name":"object Companion","description":"dev.kord.core.cache.data.GuildApplicationCommandPermissionsData.Companion","location":"core/dev.kord.core.cache.data/-guild-application-command-permissions-data/-companion/index.html","searchKeys":["Companion","object Companion","dev.kord.core.cache.data.GuildApplicationCommandPermissionsData.Companion"]},{"name":"object Companion","description":"dev.kord.core.cache.data.GuildData.Companion","location":"core/dev.kord.core.cache.data/-guild-data/-companion/index.html","searchKeys":["Companion","object Companion","dev.kord.core.cache.data.GuildData.Companion"]},{"name":"object Companion","description":"dev.kord.core.cache.data.GuildPreviewData.Companion","location":"core/dev.kord.core.cache.data/-guild-preview-data/-companion/index.html","searchKeys":["Companion","object Companion","dev.kord.core.cache.data.GuildPreviewData.Companion"]},{"name":"object Companion","description":"dev.kord.core.cache.data.GuildScheduledEventData.Companion","location":"core/dev.kord.core.cache.data/-guild-scheduled-event-data/-companion/index.html","searchKeys":["Companion","object Companion","dev.kord.core.cache.data.GuildScheduledEventData.Companion"]},{"name":"object Companion","description":"dev.kord.core.cache.data.GuildWidgetData.Companion","location":"core/dev.kord.core.cache.data/-guild-widget-data/-companion/index.html","searchKeys":["Companion","object Companion","dev.kord.core.cache.data.GuildWidgetData.Companion"]},{"name":"object Companion","description":"dev.kord.core.cache.data.IntegrationData.Companion","location":"core/dev.kord.core.cache.data/-integration-data/-companion/index.html","searchKeys":["Companion","object Companion","dev.kord.core.cache.data.IntegrationData.Companion"]},{"name":"object Companion","description":"dev.kord.core.cache.data.IntegrationsAccountData.Companion","location":"core/dev.kord.core.cache.data/-integrations-account-data/-companion/index.html","searchKeys":["Companion","object Companion","dev.kord.core.cache.data.IntegrationsAccountData.Companion"]},{"name":"object Companion","description":"dev.kord.core.cache.data.InteractionData.Companion","location":"core/dev.kord.core.cache.data/-interaction-data/-companion/index.html","searchKeys":["Companion","object Companion","dev.kord.core.cache.data.InteractionData.Companion"]},{"name":"object Companion","description":"dev.kord.core.cache.data.InviteCreateData.Companion","location":"core/dev.kord.core.cache.data/-invite-create-data/-companion/index.html","searchKeys":["Companion","object Companion","dev.kord.core.cache.data.InviteCreateData.Companion"]},{"name":"object Companion","description":"dev.kord.core.cache.data.InviteData.Companion","location":"core/dev.kord.core.cache.data/-invite-data/-companion/index.html","searchKeys":["Companion","object Companion","dev.kord.core.cache.data.InviteData.Companion"]},{"name":"object Companion","description":"dev.kord.core.cache.data.InviteDeleteData.Companion","location":"core/dev.kord.core.cache.data/-invite-delete-data/-companion/index.html","searchKeys":["Companion","object Companion","dev.kord.core.cache.data.InviteDeleteData.Companion"]},{"name":"object Companion","description":"dev.kord.core.cache.data.InviteWithMetadataData.Companion","location":"core/dev.kord.core.cache.data/-invite-with-metadata-data/-companion/index.html","searchKeys":["Companion","object Companion","dev.kord.core.cache.data.InviteWithMetadataData.Companion"]},{"name":"object Companion","description":"dev.kord.core.cache.data.MemberData.Companion","location":"core/dev.kord.core.cache.data/-member-data/-companion/index.html","searchKeys":["Companion","object Companion","dev.kord.core.cache.data.MemberData.Companion"]},{"name":"object Companion","description":"dev.kord.core.cache.data.MembersChunkData.Companion","location":"core/dev.kord.core.cache.data/-members-chunk-data/-companion/index.html","searchKeys":["Companion","object Companion","dev.kord.core.cache.data.MembersChunkData.Companion"]},{"name":"object Companion","description":"dev.kord.core.cache.data.MessageData.Companion","location":"core/dev.kord.core.cache.data/-message-data/-companion/index.html","searchKeys":["Companion","object Companion","dev.kord.core.cache.data.MessageData.Companion"]},{"name":"object Companion","description":"dev.kord.core.cache.data.MessageInteractionData.Companion","location":"core/dev.kord.core.cache.data/-message-interaction-data/-companion/index.html","searchKeys":["Companion","object Companion","dev.kord.core.cache.data.MessageInteractionData.Companion"]},{"name":"object Companion","description":"dev.kord.core.cache.data.MessageReferenceData.Companion","location":"core/dev.kord.core.cache.data/-message-reference-data/-companion/index.html","searchKeys":["Companion","object Companion","dev.kord.core.cache.data.MessageReferenceData.Companion"]},{"name":"object Companion","description":"dev.kord.core.cache.data.OptionData.Companion","location":"core/dev.kord.core.cache.data/-option-data/-companion/index.html","searchKeys":["Companion","object Companion","dev.kord.core.cache.data.OptionData.Companion"]},{"name":"object Companion","description":"dev.kord.core.cache.data.PartialApplicationData.Companion","location":"core/dev.kord.core.cache.data/-partial-application-data/-companion/index.html","searchKeys":["Companion","object Companion","dev.kord.core.cache.data.PartialApplicationData.Companion"]},{"name":"object Companion","description":"dev.kord.core.cache.data.PartialGuildData.Companion","location":"core/dev.kord.core.cache.data/-partial-guild-data/-companion/index.html","searchKeys":["Companion","object Companion","dev.kord.core.cache.data.PartialGuildData.Companion"]},{"name":"object Companion","description":"dev.kord.core.cache.data.PermissionOverwriteData.Companion","location":"core/dev.kord.core.cache.data/-permission-overwrite-data/-companion/index.html","searchKeys":["Companion","object Companion","dev.kord.core.cache.data.PermissionOverwriteData.Companion"]},{"name":"object Companion","description":"dev.kord.core.cache.data.PresenceData.Companion","location":"core/dev.kord.core.cache.data/-presence-data/-companion/index.html","searchKeys":["Companion","object Companion","dev.kord.core.cache.data.PresenceData.Companion"]},{"name":"object Companion","description":"dev.kord.core.cache.data.ReactionData.Companion","location":"core/dev.kord.core.cache.data/-reaction-data/-companion/index.html","searchKeys":["Companion","object Companion","dev.kord.core.cache.data.ReactionData.Companion"]},{"name":"object Companion","description":"dev.kord.core.cache.data.ReactionRemoveEmojiData.Companion","location":"core/dev.kord.core.cache.data/-reaction-remove-emoji-data/-companion/index.html","searchKeys":["Companion","object Companion","dev.kord.core.cache.data.ReactionRemoveEmojiData.Companion"]},{"name":"object Companion","description":"dev.kord.core.cache.data.RegionData.Companion","location":"core/dev.kord.core.cache.data/-region-data/-companion/index.html","searchKeys":["Companion","object Companion","dev.kord.core.cache.data.RegionData.Companion"]},{"name":"object Companion","description":"dev.kord.core.cache.data.RemovedReactionData.Companion","location":"core/dev.kord.core.cache.data/-removed-reaction-data/-companion/index.html","searchKeys":["Companion","object Companion","dev.kord.core.cache.data.RemovedReactionData.Companion"]},{"name":"object Companion","description":"dev.kord.core.cache.data.ResolvedObjectsData.Companion","location":"core/dev.kord.core.cache.data/-resolved-objects-data/-companion/index.html","searchKeys":["Companion","object Companion","dev.kord.core.cache.data.ResolvedObjectsData.Companion"]},{"name":"object Companion","description":"dev.kord.core.cache.data.RoleData.Companion","location":"core/dev.kord.core.cache.data/-role-data/-companion/index.html","searchKeys":["Companion","object Companion","dev.kord.core.cache.data.RoleData.Companion"]},{"name":"object Companion","description":"dev.kord.core.cache.data.RoleTagsData.Companion","location":"core/dev.kord.core.cache.data/-role-tags-data/-companion/index.html","searchKeys":["Companion","object Companion","dev.kord.core.cache.data.RoleTagsData.Companion"]},{"name":"object Companion","description":"dev.kord.core.cache.data.SelectOptionData.Companion","location":"core/dev.kord.core.cache.data/-select-option-data/-companion/index.html","searchKeys":["Companion","object Companion","dev.kord.core.cache.data.SelectOptionData.Companion"]},{"name":"object Companion","description":"dev.kord.core.cache.data.StageInstanceData.Companion","location":"core/dev.kord.core.cache.data/-stage-instance-data/-companion/index.html","searchKeys":["Companion","object Companion","dev.kord.core.cache.data.StageInstanceData.Companion"]},{"name":"object Companion","description":"dev.kord.core.cache.data.StickerData.Companion","location":"core/dev.kord.core.cache.data/-sticker-data/-companion/index.html","searchKeys":["Companion","object Companion","dev.kord.core.cache.data.StickerData.Companion"]},{"name":"object Companion","description":"dev.kord.core.cache.data.StickerItemData.Companion","location":"core/dev.kord.core.cache.data/-sticker-item-data/-companion/index.html","searchKeys":["Companion","object Companion","dev.kord.core.cache.data.StickerItemData.Companion"]},{"name":"object Companion","description":"dev.kord.core.cache.data.StickerPackData.Companion","location":"core/dev.kord.core.cache.data/-sticker-pack-data/-companion/index.html","searchKeys":["Companion","object Companion","dev.kord.core.cache.data.StickerPackData.Companion"]},{"name":"object Companion","description":"dev.kord.core.cache.data.TeamData.Companion","location":"core/dev.kord.core.cache.data/-team-data/-companion/index.html","searchKeys":["Companion","object Companion","dev.kord.core.cache.data.TeamData.Companion"]},{"name":"object Companion","description":"dev.kord.core.cache.data.TeamMemberData.Companion","location":"core/dev.kord.core.cache.data/-team-member-data/-companion/index.html","searchKeys":["Companion","object Companion","dev.kord.core.cache.data.TeamMemberData.Companion"]},{"name":"object Companion","description":"dev.kord.core.cache.data.TemplateData.Companion","location":"core/dev.kord.core.cache.data/-template-data/-companion/index.html","searchKeys":["Companion","object Companion","dev.kord.core.cache.data.TemplateData.Companion"]},{"name":"object Companion","description":"dev.kord.core.cache.data.ThreadListSyncData.Companion","location":"core/dev.kord.core.cache.data/-thread-list-sync-data/-companion/index.html","searchKeys":["Companion","object Companion","dev.kord.core.cache.data.ThreadListSyncData.Companion"]},{"name":"object Companion","description":"dev.kord.core.cache.data.ThreadMemberData.Companion","location":"core/dev.kord.core.cache.data/-thread-member-data/-companion/index.html","searchKeys":["Companion","object Companion","dev.kord.core.cache.data.ThreadMemberData.Companion"]},{"name":"object Companion","description":"dev.kord.core.cache.data.ThreadMembersUpdateEventData.Companion","location":"core/dev.kord.core.cache.data/-thread-members-update-event-data/-companion/index.html","searchKeys":["Companion","object Companion","dev.kord.core.cache.data.ThreadMembersUpdateEventData.Companion"]},{"name":"object Companion","description":"dev.kord.core.cache.data.ThreadMetadataData.Companion","location":"core/dev.kord.core.cache.data/-thread-metadata-data/-companion/index.html","searchKeys":["Companion","object Companion","dev.kord.core.cache.data.ThreadMetadataData.Companion"]},{"name":"object Companion","description":"dev.kord.core.cache.data.UserData.Companion","location":"core/dev.kord.core.cache.data/-user-data/-companion/index.html","searchKeys":["Companion","object Companion","dev.kord.core.cache.data.UserData.Companion"]},{"name":"object Companion","description":"dev.kord.core.cache.data.VoiceStateData.Companion","location":"core/dev.kord.core.cache.data/-voice-state-data/-companion/index.html","searchKeys":["Companion","object Companion","dev.kord.core.cache.data.VoiceStateData.Companion"]},{"name":"object Companion","description":"dev.kord.core.cache.data.WebhookData.Companion","location":"core/dev.kord.core.cache.data/-webhook-data/-companion/index.html","searchKeys":["Companion","object Companion","dev.kord.core.cache.data.WebhookData.Companion"]},{"name":"object Companion","description":"dev.kord.core.cache.data.WelcomeScreenChannelData.Companion","location":"core/dev.kord.core.cache.data/-welcome-screen-channel-data/-companion/index.html","searchKeys":["Companion","object Companion","dev.kord.core.cache.data.WelcomeScreenChannelData.Companion"]},{"name":"object Companion","description":"dev.kord.core.cache.data.WelcomeScreenData.Companion","location":"core/dev.kord.core.cache.data/-welcome-screen-data/-companion/index.html","searchKeys":["Companion","object Companion","dev.kord.core.cache.data.WelcomeScreenData.Companion"]},{"name":"object Companion","description":"dev.kord.core.entity.Entity.Companion","location":"core/dev.kord.core.entity/-entity/-companion/index.html","searchKeys":["Companion","object Companion","dev.kord.core.entity.Entity.Companion"]},{"name":"object Companion","description":"dev.kord.core.entity.PermissionOverwrite.Companion","location":"core/dev.kord.core.entity/-permission-overwrite/-companion/index.html","searchKeys":["Companion","object Companion","dev.kord.core.entity.PermissionOverwrite.Companion"]},{"name":"object Companion","description":"dev.kord.core.entity.ReactionEmoji.Companion","location":"core/dev.kord.core.entity/-reaction-emoji/-companion/index.html","searchKeys":["Companion","object Companion","dev.kord.core.entity.ReactionEmoji.Companion"]},{"name":"object Companion","description":"dev.kord.core.entity.channel.Channel.Companion","location":"core/dev.kord.core.entity.channel/-channel/-companion/index.html","searchKeys":["Companion","object Companion","dev.kord.core.entity.channel.Channel.Companion"]},{"name":"object Companion","description":"dev.kord.core.entity.interaction.Interaction.Companion","location":"core/dev.kord.core.entity.interaction/-interaction/-companion/index.html","searchKeys":["Companion","object Companion","dev.kord.core.entity.interaction.Interaction.Companion"]},{"name":"object Companion","description":"dev.kord.core.event.automoderation.data.AutoModerationActionExecutionEventData.Companion","location":"core/dev.kord.core.event.automoderation.data/-auto-moderation-action-execution-event-data/-companion/index.html","searchKeys":["Companion","object Companion","dev.kord.core.event.automoderation.data.AutoModerationActionExecutionEventData.Companion"]},{"name":"object Companion","description":"dev.kord.core.event.channel.data.ChannelPinsUpdateEventData.Companion","location":"core/dev.kord.core.event.channel.data/-channel-pins-update-event-data/-companion/index.html","searchKeys":["Companion","object Companion","dev.kord.core.event.channel.data.ChannelPinsUpdateEventData.Companion"]},{"name":"object Companion","description":"dev.kord.core.event.channel.data.TypingStartEventData.Companion","location":"core/dev.kord.core.event.channel.data/-typing-start-event-data/-companion/index.html","searchKeys":["Companion","object Companion","dev.kord.core.event.channel.data.TypingStartEventData.Companion"]},{"name":"object Companion","description":"dev.kord.core.exception.EntityNotFoundException.Companion","location":"core/dev.kord.core.exception/-entity-not-found-exception/-companion/index.html","searchKeys":["Companion","object Companion","dev.kord.core.exception.EntityNotFoundException.Companion"]},{"name":"object Companion","description":"dev.kord.core.exception.GatewayNotFoundException.Companion","location":"core/dev.kord.core.exception/-gateway-not-found-exception/-companion/index.html","searchKeys":["Companion","object Companion","dev.kord.core.exception.GatewayNotFoundException.Companion"]},{"name":"object Companion","description":"dev.kord.core.gateway.handler.GatewayEventInterceptor.Companion","location":"core/dev.kord.core.gateway.handler/-gateway-event-interceptor/-companion/index.html","searchKeys":["Companion","object Companion","dev.kord.core.gateway.handler.GatewayEventInterceptor.Companion"]},{"name":"object Companion","description":"dev.kord.core.supplier.EntitySupplyStrategy.Companion","location":"core/dev.kord.core.supplier/-entity-supply-strategy/-companion/index.html","searchKeys":["Companion","object Companion","dev.kord.core.supplier.EntitySupplyStrategy.Companion"]},{"name":"object NotSerializable : KSerializer<Any?> ","description":"dev.kord.core.cache.data.NotSerializable","location":"core/dev.kord.core.cache.data/-not-serializable/index.html","searchKeys":["NotSerializable","object NotSerializable : KSerializer<Any?> ","dev.kord.core.cache.data.NotSerializable"]},{"name":"open class Invite(val data: BaseInviteData, val kord: Kord, val supplier: EntitySupplier = kord.defaultSupplier) : KordObject, Strategizable","description":"dev.kord.core.entity.Invite","location":"core/dev.kord.core.entity/-invite/index.html","searchKeys":["Invite","open class Invite(val data: BaseInviteData, val kord: Kord, val supplier: EntitySupplier = kord.defaultSupplier) : KordObject, Strategizable","dev.kord.core.entity.Invite"]},{"name":"open class PermissionOverwrite(val data: PermissionOverwriteData)","description":"dev.kord.core.entity.PermissionOverwrite","location":"core/dev.kord.core.entity/-permission-overwrite/index.html","searchKeys":["PermissionOverwrite","open class PermissionOverwrite(val data: PermissionOverwriteData)","dev.kord.core.entity.PermissionOverwrite"]},{"name":"open class Sticker(val data: StickerData, val kord: Kord) : KordEntity","description":"dev.kord.core.entity.Sticker","location":"core/dev.kord.core.entity/-sticker/index.html","searchKeys":["Sticker","open class Sticker(val data: StickerData, val kord: Kord) : KordEntity","dev.kord.core.entity.Sticker"]},{"name":"open class User(val data: UserData, val kord: Kord, val supplier: EntitySupplier = kord.defaultSupplier) : UserBehavior","description":"dev.kord.core.entity.User","location":"core/dev.kord.core.entity/-user/index.html","searchKeys":["User","open class User(val data: UserData, val kord: Kord, val supplier: EntitySupplier = kord.defaultSupplier) : UserBehavior","dev.kord.core.entity.User"]},{"name":"open class UserOptionValue(val value: Snowflake, val focused: Boolean, val resolvedObject: User?) : ResolvableOptionValue<User> ","description":"dev.kord.core.entity.interaction.UserOptionValue","location":"core/dev.kord.core.entity.interaction/-user-option-value/index.html","searchKeys":["UserOptionValue","open class UserOptionValue(val value: Snowflake, val focused: Boolean, val resolvedObject: User?) : ResolvableOptionValue<User> ","dev.kord.core.entity.interaction.UserOptionValue"]},{"name":"open fun getApplicationCommands(withLocalizations: Boolean? = null): Flow<GuildApplicationCommand>","description":"dev.kord.core.behavior.GuildBehavior.getApplicationCommands","location":"core/dev.kord.core.behavior/-guild-behavior/get-application-commands.html","searchKeys":["getApplicationCommands","open fun getApplicationCommands(withLocalizations: Boolean? = null): Flow<GuildApplicationCommand>","dev.kord.core.behavior.GuildBehavior.getApplicationCommands"]},{"name":"open fun getGuildScheduledEventMembers(guildId: Snowflake, eventId: Snowflake, limit: Int? = null): Flow<Member>","description":"dev.kord.core.supplier.EntitySupplier.getGuildScheduledEventMembers","location":"core/dev.kord.core.supplier/-entity-supplier/get-guild-scheduled-event-members.html","searchKeys":["getGuildScheduledEventMembers","open fun getGuildScheduledEventMembers(guildId: Snowflake, eventId: Snowflake, limit: Int? = null): Flow<Member>","dev.kord.core.supplier.EntitySupplier.getGuildScheduledEventMembers"]},{"name":"open fun getGuildScheduledEventUsers(guildId: Snowflake, eventId: Snowflake, limit: Int? = null): Flow<User>","description":"dev.kord.core.supplier.EntitySupplier.getGuildScheduledEventUsers","location":"core/dev.kord.core.supplier/-entity-supplier/get-guild-scheduled-event-users.html","searchKeys":["getGuildScheduledEventUsers","open fun getGuildScheduledEventUsers(guildId: Snowflake, eventId: Snowflake, limit: Int? = null): Flow<User>","dev.kord.core.supplier.EntitySupplier.getGuildScheduledEventUsers"]},{"name":"open fun getJoinedPrivateArchivedThreads(before: Snowflake? = null, limit: Int? = null): Flow<ThreadChannel>","description":"dev.kord.core.behavior.channel.threads.PrivateThreadParentChannelBehavior.getJoinedPrivateArchivedThreads","location":"core/dev.kord.core.behavior.channel.threads/-private-thread-parent-channel-behavior/get-joined-private-archived-threads.html","searchKeys":["getJoinedPrivateArchivedThreads","open fun getJoinedPrivateArchivedThreads(before: Snowflake? = null, limit: Int? = null): Flow<ThreadChannel>","dev.kord.core.behavior.channel.threads.PrivateThreadParentChannelBehavior.getJoinedPrivateArchivedThreads"]},{"name":"open fun getMembers(query: String, limit: Int = 1000): Flow<Member>","description":"dev.kord.core.behavior.GuildBehavior.getMembers","location":"core/dev.kord.core.behavior/-guild-behavior/get-members.html","searchKeys":["getMembers","open fun getMembers(query: String, limit: Int = 1000): Flow<Member>","dev.kord.core.behavior.GuildBehavior.getMembers"]},{"name":"open fun getMembersAfter(after: Snowflake, limit: Int? = null): Flow<Member>","description":"dev.kord.core.behavior.GuildScheduledEventBehavior.getMembersAfter","location":"core/dev.kord.core.behavior/-guild-scheduled-event-behavior/get-members-after.html","searchKeys":["getMembersAfter","open fun getMembersAfter(after: Snowflake, limit: Int? = null): Flow<Member>","dev.kord.core.behavior.GuildScheduledEventBehavior.getMembersAfter"]},{"name":"open fun getMembersBefore(before: Snowflake, limit: Int? = null): Flow<Member>","description":"dev.kord.core.behavior.GuildScheduledEventBehavior.getMembersBefore","location":"core/dev.kord.core.behavior/-guild-scheduled-event-behavior/get-members-before.html","searchKeys":["getMembersBefore","open fun getMembersBefore(before: Snowflake, limit: Int? = null): Flow<Member>","dev.kord.core.behavior.GuildScheduledEventBehavior.getMembersBefore"]},{"name":"open fun getMessagesAfter(messageId: Snowflake, limit: Int? = null): Flow<Message>","description":"dev.kord.core.behavior.channel.MessageChannelBehavior.getMessagesAfter","location":"core/dev.kord.core.behavior.channel/-message-channel-behavior/get-messages-after.html","searchKeys":["getMessagesAfter","open fun getMessagesAfter(messageId: Snowflake, limit: Int? = null): Flow<Message>","dev.kord.core.behavior.channel.MessageChannelBehavior.getMessagesAfter"]},{"name":"open fun getMessagesAround(messageId: Snowflake, limit: Int = 100): Flow<Message>","description":"dev.kord.core.behavior.channel.MessageChannelBehavior.getMessagesAround","location":"core/dev.kord.core.behavior.channel/-message-channel-behavior/get-messages-around.html","searchKeys":["getMessagesAround","open fun getMessagesAround(messageId: Snowflake, limit: Int = 100): Flow<Message>","dev.kord.core.behavior.channel.MessageChannelBehavior.getMessagesAround"]},{"name":"open fun getMessagesBefore(messageId: Snowflake, limit: Int? = null): Flow<Message>","description":"dev.kord.core.behavior.channel.MessageChannelBehavior.getMessagesBefore","location":"core/dev.kord.core.behavior.channel/-message-channel-behavior/get-messages-before.html","searchKeys":["getMessagesBefore","open fun getMessagesBefore(messageId: Snowflake, limit: Int? = null): Flow<Message>","dev.kord.core.behavior.channel.MessageChannelBehavior.getMessagesBefore"]},{"name":"open fun getPermissionOverwritesForMember(memberId: Snowflake): PermissionOverwriteEntity?","description":"dev.kord.core.entity.channel.TopGuildChannel.getPermissionOverwritesForMember","location":"core/dev.kord.core.entity.channel/-top-guild-channel/get-permission-overwrites-for-member.html","searchKeys":["getPermissionOverwritesForMember","open fun getPermissionOverwritesForMember(memberId: Snowflake): PermissionOverwriteEntity?","dev.kord.core.entity.channel.TopGuildChannel.getPermissionOverwritesForMember"]},{"name":"open fun getPermissionOverwritesForRole(roleId: Snowflake): PermissionOverwriteEntity?","description":"dev.kord.core.entity.channel.TopGuildChannel.getPermissionOverwritesForRole","location":"core/dev.kord.core.entity.channel/-top-guild-channel/get-permission-overwrites-for-role.html","searchKeys":["getPermissionOverwritesForRole","open fun getPermissionOverwritesForRole(roleId: Snowflake): PermissionOverwriteEntity?","dev.kord.core.entity.channel.TopGuildChannel.getPermissionOverwritesForRole"]},{"name":"open fun getPrivateArchivedThreads(before: Instant? = null, limit: Int? = null): Flow<ThreadChannel>","description":"dev.kord.core.behavior.channel.threads.PrivateThreadParentChannelBehavior.getPrivateArchivedThreads","location":"core/dev.kord.core.behavior.channel.threads/-private-thread-parent-channel-behavior/get-private-archived-threads.html","searchKeys":["getPrivateArchivedThreads","open fun getPrivateArchivedThreads(before: Instant? = null, limit: Int? = null): Flow<ThreadChannel>","dev.kord.core.behavior.channel.threads.PrivateThreadParentChannelBehavior.getPrivateArchivedThreads"]},{"name":"open fun getPublicArchivedThreads(before: Instant? = null, limit: Int? = null): Flow<ThreadChannel>","description":"dev.kord.core.behavior.channel.threads.ThreadParentChannelBehavior.getPublicArchivedThreads","location":"core/dev.kord.core.behavior.channel.threads/-thread-parent-channel-behavior/get-public-archived-threads.html","searchKeys":["getPublicArchivedThreads","open fun getPublicArchivedThreads(before: Instant? = null, limit: Int? = null): Flow<ThreadChannel>","dev.kord.core.behavior.channel.threads.ThreadParentChannelBehavior.getPublicArchivedThreads"]},{"name":"open fun getReactors(emoji: ReactionEmoji): Flow<User>","description":"dev.kord.core.behavior.MessageBehavior.getReactors","location":"core/dev.kord.core.behavior/-message-behavior/get-reactors.html","searchKeys":["getReactors","open fun getReactors(emoji: ReactionEmoji): Flow<User>","dev.kord.core.behavior.MessageBehavior.getReactors"]},{"name":"open fun getUsersAfter(after: Snowflake, limit: Int? = null): Flow<User>","description":"dev.kord.core.behavior.GuildScheduledEventBehavior.getUsersAfter","location":"core/dev.kord.core.behavior/-guild-scheduled-event-behavior/get-users-after.html","searchKeys":["getUsersAfter","open fun getUsersAfter(after: Snowflake, limit: Int? = null): Flow<User>","dev.kord.core.behavior.GuildScheduledEventBehavior.getUsersAfter"]},{"name":"open fun getUsersBefore(before: Snowflake, limit: Int? = null): Flow<User>","description":"dev.kord.core.behavior.GuildScheduledEventBehavior.getUsersBefore","location":"core/dev.kord.core.behavior/-guild-scheduled-event-behavior/get-users-before.html","searchKeys":["getUsersBefore","open fun getUsersBefore(before: Snowflake, limit: Int? = null): Flow<User>","dev.kord.core.behavior.GuildScheduledEventBehavior.getUsersBefore"]},{"name":"open fun requestMembers(request: RequestGuildMembers): Flow<MembersChunkEvent>","description":"dev.kord.core.behavior.GuildBehavior.requestMembers","location":"core/dev.kord.core.behavior/-guild-behavior/request-members.html","searchKeys":["requestMembers","open fun requestMembers(request: RequestGuildMembers): Flow<MembersChunkEvent>","dev.kord.core.behavior.GuildBehavior.requestMembers"]},{"name":"open operator override fun compareTo(other: Entity): Int","description":"dev.kord.core.behavior.channel.GuildChannelBehavior.compareTo","location":"core/dev.kord.core.behavior.channel/-guild-channel-behavior/compare-to.html","searchKeys":["compareTo","open operator override fun compareTo(other: Entity): Int","dev.kord.core.behavior.channel.GuildChannelBehavior.compareTo"]},{"name":"open operator override fun compareTo(other: Entity): Int","description":"dev.kord.core.entity.Entity.compareTo","location":"core/dev.kord.core.entity/-entity/compare-to.html","searchKeys":["compareTo","open operator override fun compareTo(other: Entity): Int","dev.kord.core.entity.Entity.compareTo"]},{"name":"open operator override fun compareTo(other: Entity): Int","description":"dev.kord.core.entity.Role.compareTo","location":"core/dev.kord.core.entity/-role/compare-to.html","searchKeys":["compareTo","open operator override fun compareTo(other: Entity): Int","dev.kord.core.entity.Role.compareTo"]},{"name":"open operator override fun compareTo(other: Entity): Int","description":"dev.kord.core.entity.channel.Category.compareTo","location":"core/dev.kord.core.entity.channel/-category/compare-to.html","searchKeys":["compareTo","open operator override fun compareTo(other: Entity): Int","dev.kord.core.entity.channel.Category.compareTo"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"dev.kord.core.Kord.equals","location":"core/dev.kord.core/-kord/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","dev.kord.core.Kord.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"dev.kord.core.entity.Attachment.equals","location":"core/dev.kord.core.entity/-attachment/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","dev.kord.core.entity.Attachment.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"dev.kord.core.entity.Guild.equals","location":"core/dev.kord.core.entity/-guild/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","dev.kord.core.entity.Guild.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"dev.kord.core.entity.GuildEmoji.equals","location":"core/dev.kord.core.entity/-guild-emoji/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","dev.kord.core.entity.GuildEmoji.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"dev.kord.core.entity.Integration.equals","location":"core/dev.kord.core.entity/-integration/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","dev.kord.core.entity.Integration.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"dev.kord.core.entity.Member.equals","location":"core/dev.kord.core.entity/-member/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","dev.kord.core.entity.Member.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"dev.kord.core.entity.Message.equals","location":"core/dev.kord.core.entity/-message/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","dev.kord.core.entity.Message.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"dev.kord.core.entity.PartialGuild.equals","location":"core/dev.kord.core.entity/-partial-guild/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","dev.kord.core.entity.PartialGuild.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"dev.kord.core.entity.PermissionOverwrite.equals","location":"core/dev.kord.core.entity/-permission-overwrite/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","dev.kord.core.entity.PermissionOverwrite.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"dev.kord.core.entity.Region.equals","location":"core/dev.kord.core.entity/-region/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","dev.kord.core.entity.Region.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"dev.kord.core.entity.Role.equals","location":"core/dev.kord.core.entity/-role/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","dev.kord.core.entity.Role.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"dev.kord.core.entity.User.equals","location":"core/dev.kord.core.entity/-user/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","dev.kord.core.entity.User.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"dev.kord.core.entity.Webhook.equals","location":"core/dev.kord.core.entity/-webhook/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","dev.kord.core.entity.Webhook.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"dev.kord.core.entity.channel.Category.equals","location":"core/dev.kord.core.entity.channel/-category/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","dev.kord.core.entity.channel.Category.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"dev.kord.core.entity.channel.DmChannel.equals","location":"core/dev.kord.core.entity.channel/-dm-channel/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","dev.kord.core.entity.channel.DmChannel.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"dev.kord.core.entity.channel.NewsChannel.equals","location":"core/dev.kord.core.entity.channel/-news-channel/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","dev.kord.core.entity.channel.NewsChannel.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"dev.kord.core.entity.channel.StageChannel.equals","location":"core/dev.kord.core.entity.channel/-stage-channel/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","dev.kord.core.entity.channel.StageChannel.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"dev.kord.core.entity.channel.TextChannel.equals","location":"core/dev.kord.core.entity.channel/-text-channel/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","dev.kord.core.entity.channel.TextChannel.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"dev.kord.core.entity.channel.VoiceChannel.equals","location":"core/dev.kord.core.entity.channel/-voice-channel/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","dev.kord.core.entity.channel.VoiceChannel.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"dev.kord.core.entity.component.SelectMenuComponent.equals","location":"core/dev.kord.core.entity.component/-select-menu-component/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","dev.kord.core.entity.component.SelectMenuComponent.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"dev.kord.core.entity.component.SelectOption.equals","location":"core/dev.kord.core.entity.component/-select-option/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","dev.kord.core.entity.component.SelectOption.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"dev.kord.core.entity.interaction.GlobalAutoCompleteInteraction.equals","location":"core/dev.kord.core.entity.interaction/-global-auto-complete-interaction/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","dev.kord.core.entity.interaction.GlobalAutoCompleteInteraction.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"dev.kord.core.entity.interaction.GlobalButtonInteraction.equals","location":"core/dev.kord.core.entity.interaction/-global-button-interaction/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","dev.kord.core.entity.interaction.GlobalButtonInteraction.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"dev.kord.core.entity.interaction.GlobalChatInputCommandInteraction.equals","location":"core/dev.kord.core.entity.interaction/-global-chat-input-command-interaction/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","dev.kord.core.entity.interaction.GlobalChatInputCommandInteraction.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"dev.kord.core.entity.interaction.GlobalMessageCommandInteraction.equals","location":"core/dev.kord.core.entity.interaction/-global-message-command-interaction/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","dev.kord.core.entity.interaction.GlobalMessageCommandInteraction.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"dev.kord.core.entity.interaction.GlobalModalSubmitInteraction.equals","location":"core/dev.kord.core.entity.interaction/-global-modal-submit-interaction/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","dev.kord.core.entity.interaction.GlobalModalSubmitInteraction.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"dev.kord.core.entity.interaction.GlobalSelectMenuInteraction.equals","location":"core/dev.kord.core.entity.interaction/-global-select-menu-interaction/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","dev.kord.core.entity.interaction.GlobalSelectMenuInteraction.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"dev.kord.core.entity.interaction.GlobalUserCommandInteraction.equals","location":"core/dev.kord.core.entity.interaction/-global-user-command-interaction/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","dev.kord.core.entity.interaction.GlobalUserCommandInteraction.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"dev.kord.core.entity.interaction.GuildAutoCompleteInteraction.equals","location":"core/dev.kord.core.entity.interaction/-guild-auto-complete-interaction/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","dev.kord.core.entity.interaction.GuildAutoCompleteInteraction.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"dev.kord.core.entity.interaction.GuildButtonInteraction.equals","location":"core/dev.kord.core.entity.interaction/-guild-button-interaction/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","dev.kord.core.entity.interaction.GuildButtonInteraction.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"dev.kord.core.entity.interaction.GuildChatInputCommandInteraction.equals","location":"core/dev.kord.core.entity.interaction/-guild-chat-input-command-interaction/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","dev.kord.core.entity.interaction.GuildChatInputCommandInteraction.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"dev.kord.core.entity.interaction.GuildMessageCommandInteraction.equals","location":"core/dev.kord.core.entity.interaction/-guild-message-command-interaction/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","dev.kord.core.entity.interaction.GuildMessageCommandInteraction.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"dev.kord.core.entity.interaction.GuildModalSubmitInteraction.equals","location":"core/dev.kord.core.entity.interaction/-guild-modal-submit-interaction/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","dev.kord.core.entity.interaction.GuildModalSubmitInteraction.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"dev.kord.core.entity.interaction.GuildSelectMenuInteraction.equals","location":"core/dev.kord.core.entity.interaction/-guild-select-menu-interaction/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","dev.kord.core.entity.interaction.GuildSelectMenuInteraction.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"dev.kord.core.entity.interaction.GuildUserCommandInteraction.equals","location":"core/dev.kord.core.entity.interaction/-guild-user-command-interaction/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","dev.kord.core.entity.interaction.GuildUserCommandInteraction.equals"]},{"name":"open override fun <T : Any> getEntry(type: KType): DataEntryCache<T>?","description":"dev.kord.core.cache.DataCacheView.getEntry","location":"core/dev.kord.core.cache/-data-cache-view/get-entry.html","searchKeys":["getEntry","open override fun <T : Any> getEntry(type: KType): DataEntryCache<T>?","dev.kord.core.cache.DataCacheView.getEntry"]},{"name":"open override fun deserialize(decoder: Decoder): Nothing","description":"dev.kord.core.cache.data.NotSerializable.deserialize","location":"core/dev.kord.core.cache.data/-not-serializable/deserialize.html","searchKeys":["deserialize","open override fun deserialize(decoder: Decoder): Nothing","dev.kord.core.cache.data.NotSerializable.deserialize"]},{"name":"open override fun getActiveThreads(guildId: Snowflake): Flow<ThreadChannel>","description":"dev.kord.core.supplier.CacheEntitySupplier.getActiveThreads","location":"core/dev.kord.core.supplier/-cache-entity-supplier/get-active-threads.html","searchKeys":["getActiveThreads","open override fun getActiveThreads(guildId: Snowflake): Flow<ThreadChannel>","dev.kord.core.supplier.CacheEntitySupplier.getActiveThreads"]},{"name":"open override fun getActiveThreads(guildId: Snowflake): Flow<ThreadChannel>","description":"dev.kord.core.supplier.RestEntitySupplier.getActiveThreads","location":"core/dev.kord.core.supplier/-rest-entity-supplier/get-active-threads.html","searchKeys":["getActiveThreads","open override fun getActiveThreads(guildId: Snowflake): Flow<ThreadChannel>","dev.kord.core.supplier.RestEntitySupplier.getActiveThreads"]},{"name":"open override fun getActiveThreads(guildId: Snowflake): Flow<ThreadChannel>","description":"dev.kord.core.supplier.StoreEntitySupplier.getActiveThreads","location":"core/dev.kord.core.supplier/-store-entity-supplier/get-active-threads.html","searchKeys":["getActiveThreads","open override fun getActiveThreads(guildId: Snowflake): Flow<ThreadChannel>","dev.kord.core.supplier.StoreEntitySupplier.getActiveThreads"]},{"name":"open override fun getAutoModerationRules(guildId: Snowflake): Flow<AutoModerationRule>","description":"dev.kord.core.supplier.CacheEntitySupplier.getAutoModerationRules","location":"core/dev.kord.core.supplier/-cache-entity-supplier/get-auto-moderation-rules.html","searchKeys":["getAutoModerationRules","open override fun getAutoModerationRules(guildId: Snowflake): Flow<AutoModerationRule>","dev.kord.core.supplier.CacheEntitySupplier.getAutoModerationRules"]},{"name":"open override fun getAutoModerationRules(guildId: Snowflake): Flow<AutoModerationRule>","description":"dev.kord.core.supplier.RestEntitySupplier.getAutoModerationRules","location":"core/dev.kord.core.supplier/-rest-entity-supplier/get-auto-moderation-rules.html","searchKeys":["getAutoModerationRules","open override fun getAutoModerationRules(guildId: Snowflake): Flow<AutoModerationRule>","dev.kord.core.supplier.RestEntitySupplier.getAutoModerationRules"]},{"name":"open override fun getAutoModerationRules(guildId: Snowflake): Flow<AutoModerationRule>","description":"dev.kord.core.supplier.StoreEntitySupplier.getAutoModerationRules","location":"core/dev.kord.core.supplier/-store-entity-supplier/get-auto-moderation-rules.html","searchKeys":["getAutoModerationRules","open override fun getAutoModerationRules(guildId: Snowflake): Flow<AutoModerationRule>","dev.kord.core.supplier.StoreEntitySupplier.getAutoModerationRules"]},{"name":"open override fun getChannelPins(channelId: Snowflake): Flow<Message>","description":"dev.kord.core.supplier.CacheEntitySupplier.getChannelPins","location":"core/dev.kord.core.supplier/-cache-entity-supplier/get-channel-pins.html","searchKeys":["getChannelPins","open override fun getChannelPins(channelId: Snowflake): Flow<Message>","dev.kord.core.supplier.CacheEntitySupplier.getChannelPins"]},{"name":"open override fun getChannelPins(channelId: Snowflake): Flow<Message>","description":"dev.kord.core.supplier.RestEntitySupplier.getChannelPins","location":"core/dev.kord.core.supplier/-rest-entity-supplier/get-channel-pins.html","searchKeys":["getChannelPins","open override fun getChannelPins(channelId: Snowflake): Flow<Message>","dev.kord.core.supplier.RestEntitySupplier.getChannelPins"]},{"name":"open override fun getChannelPins(channelId: Snowflake): Flow<Message>","description":"dev.kord.core.supplier.StoreEntitySupplier.getChannelPins","location":"core/dev.kord.core.supplier/-store-entity-supplier/get-channel-pins.html","searchKeys":["getChannelPins","open override fun getChannelPins(channelId: Snowflake): Flow<Message>","dev.kord.core.supplier.StoreEntitySupplier.getChannelPins"]},{"name":"open override fun getChannelWebhooks(channelId: Snowflake): Flow<Webhook>","description":"dev.kord.core.supplier.CacheEntitySupplier.getChannelWebhooks","location":"core/dev.kord.core.supplier/-cache-entity-supplier/get-channel-webhooks.html","searchKeys":["getChannelWebhooks","open override fun getChannelWebhooks(channelId: Snowflake): Flow<Webhook>","dev.kord.core.supplier.CacheEntitySupplier.getChannelWebhooks"]},{"name":"open override fun getChannelWebhooks(channelId: Snowflake): Flow<Webhook>","description":"dev.kord.core.supplier.RestEntitySupplier.getChannelWebhooks","location":"core/dev.kord.core.supplier/-rest-entity-supplier/get-channel-webhooks.html","searchKeys":["getChannelWebhooks","open override fun getChannelWebhooks(channelId: Snowflake): Flow<Webhook>","dev.kord.core.supplier.RestEntitySupplier.getChannelWebhooks"]},{"name":"open override fun getChannelWebhooks(channelId: Snowflake): Flow<Webhook>","description":"dev.kord.core.supplier.StoreEntitySupplier.getChannelWebhooks","location":"core/dev.kord.core.supplier/-store-entity-supplier/get-channel-webhooks.html","searchKeys":["getChannelWebhooks","open override fun getChannelWebhooks(channelId: Snowflake): Flow<Webhook>","dev.kord.core.supplier.StoreEntitySupplier.getChannelWebhooks"]},{"name":"open override fun getCurrentUserGuilds(limit: Int?): Flow<Guild>","description":"dev.kord.core.supplier.CacheEntitySupplier.getCurrentUserGuilds","location":"core/dev.kord.core.supplier/-cache-entity-supplier/get-current-user-guilds.html","searchKeys":["getCurrentUserGuilds","open override fun getCurrentUserGuilds(limit: Int?): Flow<Guild>","dev.kord.core.supplier.CacheEntitySupplier.getCurrentUserGuilds"]},{"name":"open override fun getCurrentUserGuilds(limit: Int?): Flow<Guild>","description":"dev.kord.core.supplier.RestEntitySupplier.getCurrentUserGuilds","location":"core/dev.kord.core.supplier/-rest-entity-supplier/get-current-user-guilds.html","searchKeys":["getCurrentUserGuilds","open override fun getCurrentUserGuilds(limit: Int?): Flow<Guild>","dev.kord.core.supplier.RestEntitySupplier.getCurrentUserGuilds"]},{"name":"open override fun getCurrentUserGuilds(limit: Int?): Flow<Guild>","description":"dev.kord.core.supplier.StoreEntitySupplier.getCurrentUserGuilds","location":"core/dev.kord.core.supplier/-store-entity-supplier/get-current-user-guilds.html","searchKeys":["getCurrentUserGuilds","open override fun getCurrentUserGuilds(limit: Int?): Flow<Guild>","dev.kord.core.supplier.StoreEntitySupplier.getCurrentUserGuilds"]},{"name":"open override fun getEmojis(guildId: Snowflake): Flow<GuildEmoji>","description":"dev.kord.core.supplier.CacheEntitySupplier.getEmojis","location":"core/dev.kord.core.supplier/-cache-entity-supplier/get-emojis.html","searchKeys":["getEmojis","open override fun getEmojis(guildId: Snowflake): Flow<GuildEmoji>","dev.kord.core.supplier.CacheEntitySupplier.getEmojis"]},{"name":"open override fun getEmojis(guildId: Snowflake): Flow<GuildEmoji>","description":"dev.kord.core.supplier.RestEntitySupplier.getEmojis","location":"core/dev.kord.core.supplier/-rest-entity-supplier/get-emojis.html","searchKeys":["getEmojis","open override fun getEmojis(guildId: Snowflake): Flow<GuildEmoji>","dev.kord.core.supplier.RestEntitySupplier.getEmojis"]},{"name":"open override fun getEmojis(guildId: Snowflake): Flow<GuildEmoji>","description":"dev.kord.core.supplier.StoreEntitySupplier.getEmojis","location":"core/dev.kord.core.supplier/-store-entity-supplier/get-emojis.html","searchKeys":["getEmojis","open override fun getEmojis(guildId: Snowflake): Flow<GuildEmoji>","dev.kord.core.supplier.StoreEntitySupplier.getEmojis"]},{"name":"open override fun getGlobalApplicationCommands(applicationId: Snowflake, withLocalizations: Boolean?): Flow<GlobalApplicationCommand>","description":"dev.kord.core.supplier.CacheEntitySupplier.getGlobalApplicationCommands","location":"core/dev.kord.core.supplier/-cache-entity-supplier/get-global-application-commands.html","searchKeys":["getGlobalApplicationCommands","open override fun getGlobalApplicationCommands(applicationId: Snowflake, withLocalizations: Boolean?): Flow<GlobalApplicationCommand>","dev.kord.core.supplier.CacheEntitySupplier.getGlobalApplicationCommands"]},{"name":"open override fun getGlobalApplicationCommands(applicationId: Snowflake, withLocalizations: Boolean?): Flow<GlobalApplicationCommand>","description":"dev.kord.core.supplier.RestEntitySupplier.getGlobalApplicationCommands","location":"core/dev.kord.core.supplier/-rest-entity-supplier/get-global-application-commands.html","searchKeys":["getGlobalApplicationCommands","open override fun getGlobalApplicationCommands(applicationId: Snowflake, withLocalizations: Boolean?): Flow<GlobalApplicationCommand>","dev.kord.core.supplier.RestEntitySupplier.getGlobalApplicationCommands"]},{"name":"open override fun getGlobalApplicationCommands(applicationId: Snowflake, withLocalizations: Boolean?): Flow<GlobalApplicationCommand>","description":"dev.kord.core.supplier.StoreEntitySupplier.getGlobalApplicationCommands","location":"core/dev.kord.core.supplier/-store-entity-supplier/get-global-application-commands.html","searchKeys":["getGlobalApplicationCommands","open override fun getGlobalApplicationCommands(applicationId: Snowflake, withLocalizations: Boolean?): Flow<GlobalApplicationCommand>","dev.kord.core.supplier.StoreEntitySupplier.getGlobalApplicationCommands"]},{"name":"open override fun getGuildApplicationCommandPermissions(applicationId: Snowflake, guildId: Snowflake): Flow<ApplicationCommandPermissions>","description":"dev.kord.core.supplier.CacheEntitySupplier.getGuildApplicationCommandPermissions","location":"core/dev.kord.core.supplier/-cache-entity-supplier/get-guild-application-command-permissions.html","searchKeys":["getGuildApplicationCommandPermissions","open override fun getGuildApplicationCommandPermissions(applicationId: Snowflake, guildId: Snowflake): Flow<ApplicationCommandPermissions>","dev.kord.core.supplier.CacheEntitySupplier.getGuildApplicationCommandPermissions"]},{"name":"open override fun getGuildApplicationCommandPermissions(applicationId: Snowflake, guildId: Snowflake): Flow<ApplicationCommandPermissions>","description":"dev.kord.core.supplier.RestEntitySupplier.getGuildApplicationCommandPermissions","location":"core/dev.kord.core.supplier/-rest-entity-supplier/get-guild-application-command-permissions.html","searchKeys":["getGuildApplicationCommandPermissions","open override fun getGuildApplicationCommandPermissions(applicationId: Snowflake, guildId: Snowflake): Flow<ApplicationCommandPermissions>","dev.kord.core.supplier.RestEntitySupplier.getGuildApplicationCommandPermissions"]},{"name":"open override fun getGuildApplicationCommandPermissions(applicationId: Snowflake, guildId: Snowflake): Flow<ApplicationCommandPermissions>","description":"dev.kord.core.supplier.StoreEntitySupplier.getGuildApplicationCommandPermissions","location":"core/dev.kord.core.supplier/-store-entity-supplier/get-guild-application-command-permissions.html","searchKeys":["getGuildApplicationCommandPermissions","open override fun getGuildApplicationCommandPermissions(applicationId: Snowflake, guildId: Snowflake): Flow<ApplicationCommandPermissions>","dev.kord.core.supplier.StoreEntitySupplier.getGuildApplicationCommandPermissions"]},{"name":"open override fun getGuildApplicationCommands(applicationId: Snowflake, guildId: Snowflake, withLocalizations: Boolean?): Flow<GuildApplicationCommand>","description":"dev.kord.core.supplier.CacheEntitySupplier.getGuildApplicationCommands","location":"core/dev.kord.core.supplier/-cache-entity-supplier/get-guild-application-commands.html","searchKeys":["getGuildApplicationCommands","open override fun getGuildApplicationCommands(applicationId: Snowflake, guildId: Snowflake, withLocalizations: Boolean?): Flow<GuildApplicationCommand>","dev.kord.core.supplier.CacheEntitySupplier.getGuildApplicationCommands"]},{"name":"open override fun getGuildApplicationCommands(applicationId: Snowflake, guildId: Snowflake, withLocalizations: Boolean?): Flow<GuildApplicationCommand>","description":"dev.kord.core.supplier.RestEntitySupplier.getGuildApplicationCommands","location":"core/dev.kord.core.supplier/-rest-entity-supplier/get-guild-application-commands.html","searchKeys":["getGuildApplicationCommands","open override fun getGuildApplicationCommands(applicationId: Snowflake, guildId: Snowflake, withLocalizations: Boolean?): Flow<GuildApplicationCommand>","dev.kord.core.supplier.RestEntitySupplier.getGuildApplicationCommands"]},{"name":"open override fun getGuildApplicationCommands(applicationId: Snowflake, guildId: Snowflake, withLocalizations: Boolean?): Flow<GuildApplicationCommand>","description":"dev.kord.core.supplier.StoreEntitySupplier.getGuildApplicationCommands","location":"core/dev.kord.core.supplier/-store-entity-supplier/get-guild-application-commands.html","searchKeys":["getGuildApplicationCommands","open override fun getGuildApplicationCommands(applicationId: Snowflake, guildId: Snowflake, withLocalizations: Boolean?): Flow<GuildApplicationCommand>","dev.kord.core.supplier.StoreEntitySupplier.getGuildApplicationCommands"]},{"name":"open override fun getGuildBans(guildId: Snowflake, limit: Int?): Flow<Ban>","description":"dev.kord.core.supplier.CacheEntitySupplier.getGuildBans","location":"core/dev.kord.core.supplier/-cache-entity-supplier/get-guild-bans.html","searchKeys":["getGuildBans","open override fun getGuildBans(guildId: Snowflake, limit: Int?): Flow<Ban>","dev.kord.core.supplier.CacheEntitySupplier.getGuildBans"]},{"name":"open override fun getGuildBans(guildId: Snowflake, limit: Int?): Flow<Ban>","description":"dev.kord.core.supplier.RestEntitySupplier.getGuildBans","location":"core/dev.kord.core.supplier/-rest-entity-supplier/get-guild-bans.html","searchKeys":["getGuildBans","open override fun getGuildBans(guildId: Snowflake, limit: Int?): Flow<Ban>","dev.kord.core.supplier.RestEntitySupplier.getGuildBans"]},{"name":"open override fun getGuildBans(guildId: Snowflake, limit: Int?): Flow<Ban>","description":"dev.kord.core.supplier.StoreEntitySupplier.getGuildBans","location":"core/dev.kord.core.supplier/-store-entity-supplier/get-guild-bans.html","searchKeys":["getGuildBans","open override fun getGuildBans(guildId: Snowflake, limit: Int?): Flow<Ban>","dev.kord.core.supplier.StoreEntitySupplier.getGuildBans"]},{"name":"open override fun getGuildChannels(guildId: Snowflake): Flow<TopGuildChannel>","description":"dev.kord.core.supplier.CacheEntitySupplier.getGuildChannels","location":"core/dev.kord.core.supplier/-cache-entity-supplier/get-guild-channels.html","searchKeys":["getGuildChannels","open override fun getGuildChannels(guildId: Snowflake): Flow<TopGuildChannel>","dev.kord.core.supplier.CacheEntitySupplier.getGuildChannels"]},{"name":"open override fun getGuildChannels(guildId: Snowflake): Flow<TopGuildChannel>","description":"dev.kord.core.supplier.RestEntitySupplier.getGuildChannels","location":"core/dev.kord.core.supplier/-rest-entity-supplier/get-guild-channels.html","searchKeys":["getGuildChannels","open override fun getGuildChannels(guildId: Snowflake): Flow<TopGuildChannel>","dev.kord.core.supplier.RestEntitySupplier.getGuildChannels"]},{"name":"open override fun getGuildChannels(guildId: Snowflake): Flow<TopGuildChannel>","description":"dev.kord.core.supplier.StoreEntitySupplier.getGuildChannels","location":"core/dev.kord.core.supplier/-store-entity-supplier/get-guild-channels.html","searchKeys":["getGuildChannels","open override fun getGuildChannels(guildId: Snowflake): Flow<TopGuildChannel>","dev.kord.core.supplier.StoreEntitySupplier.getGuildChannels"]},{"name":"open override fun getGuildMembers(guildId: Snowflake, limit: Int?): Flow<Member>","description":"dev.kord.core.supplier.CacheEntitySupplier.getGuildMembers","location":"core/dev.kord.core.supplier/-cache-entity-supplier/get-guild-members.html","searchKeys":["getGuildMembers","open override fun getGuildMembers(guildId: Snowflake, limit: Int?): Flow<Member>","dev.kord.core.supplier.CacheEntitySupplier.getGuildMembers"]},{"name":"open override fun getGuildMembers(guildId: Snowflake, limit: Int?): Flow<Member>","description":"dev.kord.core.supplier.RestEntitySupplier.getGuildMembers","location":"core/dev.kord.core.supplier/-rest-entity-supplier/get-guild-members.html","searchKeys":["getGuildMembers","open override fun getGuildMembers(guildId: Snowflake, limit: Int?): Flow<Member>","dev.kord.core.supplier.RestEntitySupplier.getGuildMembers"]},{"name":"open override fun getGuildMembers(guildId: Snowflake, limit: Int?): Flow<Member>","description":"dev.kord.core.supplier.StoreEntitySupplier.getGuildMembers","location":"core/dev.kord.core.supplier/-store-entity-supplier/get-guild-members.html","searchKeys":["getGuildMembers","open override fun getGuildMembers(guildId: Snowflake, limit: Int?): Flow<Member>","dev.kord.core.supplier.StoreEntitySupplier.getGuildMembers"]},{"name":"open override fun getGuildRoles(guildId: Snowflake): Flow<Role>","description":"dev.kord.core.supplier.CacheEntitySupplier.getGuildRoles","location":"core/dev.kord.core.supplier/-cache-entity-supplier/get-guild-roles.html","searchKeys":["getGuildRoles","open override fun getGuildRoles(guildId: Snowflake): Flow<Role>","dev.kord.core.supplier.CacheEntitySupplier.getGuildRoles"]},{"name":"open override fun getGuildRoles(guildId: Snowflake): Flow<Role>","description":"dev.kord.core.supplier.RestEntitySupplier.getGuildRoles","location":"core/dev.kord.core.supplier/-rest-entity-supplier/get-guild-roles.html","searchKeys":["getGuildRoles","open override fun getGuildRoles(guildId: Snowflake): Flow<Role>","dev.kord.core.supplier.RestEntitySupplier.getGuildRoles"]},{"name":"open override fun getGuildRoles(guildId: Snowflake): Flow<Role>","description":"dev.kord.core.supplier.StoreEntitySupplier.getGuildRoles","location":"core/dev.kord.core.supplier/-store-entity-supplier/get-guild-roles.html","searchKeys":["getGuildRoles","open override fun getGuildRoles(guildId: Snowflake): Flow<Role>","dev.kord.core.supplier.StoreEntitySupplier.getGuildRoles"]},{"name":"open override fun getGuildScheduledEventMembersAfter(guildId: Snowflake, eventId: Snowflake, after: Snowflake, limit: Int?): Flow<Member>","description":"dev.kord.core.supplier.CacheEntitySupplier.getGuildScheduledEventMembersAfter","location":"core/dev.kord.core.supplier/-cache-entity-supplier/get-guild-scheduled-event-members-after.html","searchKeys":["getGuildScheduledEventMembersAfter","open override fun getGuildScheduledEventMembersAfter(guildId: Snowflake, eventId: Snowflake, after: Snowflake, limit: Int?): Flow<Member>","dev.kord.core.supplier.CacheEntitySupplier.getGuildScheduledEventMembersAfter"]},{"name":"open override fun getGuildScheduledEventMembersAfter(guildId: Snowflake, eventId: Snowflake, after: Snowflake, limit: Int?): Flow<Member>","description":"dev.kord.core.supplier.RestEntitySupplier.getGuildScheduledEventMembersAfter","location":"core/dev.kord.core.supplier/-rest-entity-supplier/get-guild-scheduled-event-members-after.html","searchKeys":["getGuildScheduledEventMembersAfter","open override fun getGuildScheduledEventMembersAfter(guildId: Snowflake, eventId: Snowflake, after: Snowflake, limit: Int?): Flow<Member>","dev.kord.core.supplier.RestEntitySupplier.getGuildScheduledEventMembersAfter"]},{"name":"open override fun getGuildScheduledEventMembersAfter(guildId: Snowflake, eventId: Snowflake, after: Snowflake, limit: Int?): Flow<Member>","description":"dev.kord.core.supplier.StoreEntitySupplier.getGuildScheduledEventMembersAfter","location":"core/dev.kord.core.supplier/-store-entity-supplier/get-guild-scheduled-event-members-after.html","searchKeys":["getGuildScheduledEventMembersAfter","open override fun getGuildScheduledEventMembersAfter(guildId: Snowflake, eventId: Snowflake, after: Snowflake, limit: Int?): Flow<Member>","dev.kord.core.supplier.StoreEntitySupplier.getGuildScheduledEventMembersAfter"]},{"name":"open override fun getGuildScheduledEventMembersBefore(guildId: Snowflake, eventId: Snowflake, before: Snowflake, limit: Int?): Flow<Member>","description":"dev.kord.core.supplier.CacheEntitySupplier.getGuildScheduledEventMembersBefore","location":"core/dev.kord.core.supplier/-cache-entity-supplier/get-guild-scheduled-event-members-before.html","searchKeys":["getGuildScheduledEventMembersBefore","open override fun getGuildScheduledEventMembersBefore(guildId: Snowflake, eventId: Snowflake, before: Snowflake, limit: Int?): Flow<Member>","dev.kord.core.supplier.CacheEntitySupplier.getGuildScheduledEventMembersBefore"]},{"name":"open override fun getGuildScheduledEventMembersBefore(guildId: Snowflake, eventId: Snowflake, before: Snowflake, limit: Int?): Flow<Member>","description":"dev.kord.core.supplier.RestEntitySupplier.getGuildScheduledEventMembersBefore","location":"core/dev.kord.core.supplier/-rest-entity-supplier/get-guild-scheduled-event-members-before.html","searchKeys":["getGuildScheduledEventMembersBefore","open override fun getGuildScheduledEventMembersBefore(guildId: Snowflake, eventId: Snowflake, before: Snowflake, limit: Int?): Flow<Member>","dev.kord.core.supplier.RestEntitySupplier.getGuildScheduledEventMembersBefore"]},{"name":"open override fun getGuildScheduledEventMembersBefore(guildId: Snowflake, eventId: Snowflake, before: Snowflake, limit: Int?): Flow<Member>","description":"dev.kord.core.supplier.StoreEntitySupplier.getGuildScheduledEventMembersBefore","location":"core/dev.kord.core.supplier/-store-entity-supplier/get-guild-scheduled-event-members-before.html","searchKeys":["getGuildScheduledEventMembersBefore","open override fun getGuildScheduledEventMembersBefore(guildId: Snowflake, eventId: Snowflake, before: Snowflake, limit: Int?): Flow<Member>","dev.kord.core.supplier.StoreEntitySupplier.getGuildScheduledEventMembersBefore"]},{"name":"open override fun getGuildScheduledEventUsersAfter(guildId: Snowflake, eventId: Snowflake, after: Snowflake, limit: Int?): Flow<User>","description":"dev.kord.core.supplier.CacheEntitySupplier.getGuildScheduledEventUsersAfter","location":"core/dev.kord.core.supplier/-cache-entity-supplier/get-guild-scheduled-event-users-after.html","searchKeys":["getGuildScheduledEventUsersAfter","open override fun getGuildScheduledEventUsersAfter(guildId: Snowflake, eventId: Snowflake, after: Snowflake, limit: Int?): Flow<User>","dev.kord.core.supplier.CacheEntitySupplier.getGuildScheduledEventUsersAfter"]},{"name":"open override fun getGuildScheduledEventUsersAfter(guildId: Snowflake, eventId: Snowflake, after: Snowflake, limit: Int?): Flow<User>","description":"dev.kord.core.supplier.RestEntitySupplier.getGuildScheduledEventUsersAfter","location":"core/dev.kord.core.supplier/-rest-entity-supplier/get-guild-scheduled-event-users-after.html","searchKeys":["getGuildScheduledEventUsersAfter","open override fun getGuildScheduledEventUsersAfter(guildId: Snowflake, eventId: Snowflake, after: Snowflake, limit: Int?): Flow<User>","dev.kord.core.supplier.RestEntitySupplier.getGuildScheduledEventUsersAfter"]},{"name":"open override fun getGuildScheduledEventUsersAfter(guildId: Snowflake, eventId: Snowflake, after: Snowflake, limit: Int?): Flow<User>","description":"dev.kord.core.supplier.StoreEntitySupplier.getGuildScheduledEventUsersAfter","location":"core/dev.kord.core.supplier/-store-entity-supplier/get-guild-scheduled-event-users-after.html","searchKeys":["getGuildScheduledEventUsersAfter","open override fun getGuildScheduledEventUsersAfter(guildId: Snowflake, eventId: Snowflake, after: Snowflake, limit: Int?): Flow<User>","dev.kord.core.supplier.StoreEntitySupplier.getGuildScheduledEventUsersAfter"]},{"name":"open override fun getGuildScheduledEventUsersBefore(guildId: Snowflake, eventId: Snowflake, before: Snowflake, limit: Int?): Flow<User>","description":"dev.kord.core.supplier.CacheEntitySupplier.getGuildScheduledEventUsersBefore","location":"core/dev.kord.core.supplier/-cache-entity-supplier/get-guild-scheduled-event-users-before.html","searchKeys":["getGuildScheduledEventUsersBefore","open override fun getGuildScheduledEventUsersBefore(guildId: Snowflake, eventId: Snowflake, before: Snowflake, limit: Int?): Flow<User>","dev.kord.core.supplier.CacheEntitySupplier.getGuildScheduledEventUsersBefore"]},{"name":"open override fun getGuildScheduledEventUsersBefore(guildId: Snowflake, eventId: Snowflake, before: Snowflake, limit: Int?): Flow<User>","description":"dev.kord.core.supplier.RestEntitySupplier.getGuildScheduledEventUsersBefore","location":"core/dev.kord.core.supplier/-rest-entity-supplier/get-guild-scheduled-event-users-before.html","searchKeys":["getGuildScheduledEventUsersBefore","open override fun getGuildScheduledEventUsersBefore(guildId: Snowflake, eventId: Snowflake, before: Snowflake, limit: Int?): Flow<User>","dev.kord.core.supplier.RestEntitySupplier.getGuildScheduledEventUsersBefore"]},{"name":"open override fun getGuildScheduledEventUsersBefore(guildId: Snowflake, eventId: Snowflake, before: Snowflake, limit: Int?): Flow<User>","description":"dev.kord.core.supplier.StoreEntitySupplier.getGuildScheduledEventUsersBefore","location":"core/dev.kord.core.supplier/-store-entity-supplier/get-guild-scheduled-event-users-before.html","searchKeys":["getGuildScheduledEventUsersBefore","open override fun getGuildScheduledEventUsersBefore(guildId: Snowflake, eventId: Snowflake, before: Snowflake, limit: Int?): Flow<User>","dev.kord.core.supplier.StoreEntitySupplier.getGuildScheduledEventUsersBefore"]},{"name":"open override fun getGuildScheduledEvents(guildId: Snowflake): Flow<GuildScheduledEvent>","description":"dev.kord.core.supplier.CacheEntitySupplier.getGuildScheduledEvents","location":"core/dev.kord.core.supplier/-cache-entity-supplier/get-guild-scheduled-events.html","searchKeys":["getGuildScheduledEvents","open override fun getGuildScheduledEvents(guildId: Snowflake): Flow<GuildScheduledEvent>","dev.kord.core.supplier.CacheEntitySupplier.getGuildScheduledEvents"]},{"name":"open override fun getGuildScheduledEvents(guildId: Snowflake): Flow<GuildScheduledEvent>","description":"dev.kord.core.supplier.RestEntitySupplier.getGuildScheduledEvents","location":"core/dev.kord.core.supplier/-rest-entity-supplier/get-guild-scheduled-events.html","searchKeys":["getGuildScheduledEvents","open override fun getGuildScheduledEvents(guildId: Snowflake): Flow<GuildScheduledEvent>","dev.kord.core.supplier.RestEntitySupplier.getGuildScheduledEvents"]},{"name":"open override fun getGuildScheduledEvents(guildId: Snowflake): Flow<GuildScheduledEvent>","description":"dev.kord.core.supplier.StoreEntitySupplier.getGuildScheduledEvents","location":"core/dev.kord.core.supplier/-store-entity-supplier/get-guild-scheduled-events.html","searchKeys":["getGuildScheduledEvents","open override fun getGuildScheduledEvents(guildId: Snowflake): Flow<GuildScheduledEvent>","dev.kord.core.supplier.StoreEntitySupplier.getGuildScheduledEvents"]},{"name":"open override fun getGuildStickers(guildId: Snowflake): Flow<GuildSticker>","description":"dev.kord.core.supplier.CacheEntitySupplier.getGuildStickers","location":"core/dev.kord.core.supplier/-cache-entity-supplier/get-guild-stickers.html","searchKeys":["getGuildStickers","open override fun getGuildStickers(guildId: Snowflake): Flow<GuildSticker>","dev.kord.core.supplier.CacheEntitySupplier.getGuildStickers"]},{"name":"open override fun getGuildStickers(guildId: Snowflake): Flow<GuildSticker>","description":"dev.kord.core.supplier.RestEntitySupplier.getGuildStickers","location":"core/dev.kord.core.supplier/-rest-entity-supplier/get-guild-stickers.html","searchKeys":["getGuildStickers","open override fun getGuildStickers(guildId: Snowflake): Flow<GuildSticker>","dev.kord.core.supplier.RestEntitySupplier.getGuildStickers"]},{"name":"open override fun getGuildStickers(guildId: Snowflake): Flow<GuildSticker>","description":"dev.kord.core.supplier.StoreEntitySupplier.getGuildStickers","location":"core/dev.kord.core.supplier/-store-entity-supplier/get-guild-stickers.html","searchKeys":["getGuildStickers","open override fun getGuildStickers(guildId: Snowflake): Flow<GuildSticker>","dev.kord.core.supplier.StoreEntitySupplier.getGuildStickers"]},{"name":"open override fun getGuildVoiceRegions(guildId: Snowflake): Flow<Region>","description":"dev.kord.core.supplier.CacheEntitySupplier.getGuildVoiceRegions","location":"core/dev.kord.core.supplier/-cache-entity-supplier/get-guild-voice-regions.html","searchKeys":["getGuildVoiceRegions","open override fun getGuildVoiceRegions(guildId: Snowflake): Flow<Region>","dev.kord.core.supplier.CacheEntitySupplier.getGuildVoiceRegions"]},{"name":"open override fun getGuildVoiceRegions(guildId: Snowflake): Flow<Region>","description":"dev.kord.core.supplier.RestEntitySupplier.getGuildVoiceRegions","location":"core/dev.kord.core.supplier/-rest-entity-supplier/get-guild-voice-regions.html","searchKeys":["getGuildVoiceRegions","open override fun getGuildVoiceRegions(guildId: Snowflake): Flow<Region>","dev.kord.core.supplier.RestEntitySupplier.getGuildVoiceRegions"]},{"name":"open override fun getGuildVoiceRegions(guildId: Snowflake): Flow<Region>","description":"dev.kord.core.supplier.StoreEntitySupplier.getGuildVoiceRegions","location":"core/dev.kord.core.supplier/-store-entity-supplier/get-guild-voice-regions.html","searchKeys":["getGuildVoiceRegions","open override fun getGuildVoiceRegions(guildId: Snowflake): Flow<Region>","dev.kord.core.supplier.StoreEntitySupplier.getGuildVoiceRegions"]},{"name":"open override fun getGuildWebhooks(guildId: Snowflake): Flow<Webhook>","description":"dev.kord.core.supplier.CacheEntitySupplier.getGuildWebhooks","location":"core/dev.kord.core.supplier/-cache-entity-supplier/get-guild-webhooks.html","searchKeys":["getGuildWebhooks","open override fun getGuildWebhooks(guildId: Snowflake): Flow<Webhook>","dev.kord.core.supplier.CacheEntitySupplier.getGuildWebhooks"]},{"name":"open override fun getGuildWebhooks(guildId: Snowflake): Flow<Webhook>","description":"dev.kord.core.supplier.RestEntitySupplier.getGuildWebhooks","location":"core/dev.kord.core.supplier/-rest-entity-supplier/get-guild-webhooks.html","searchKeys":["getGuildWebhooks","open override fun getGuildWebhooks(guildId: Snowflake): Flow<Webhook>","dev.kord.core.supplier.RestEntitySupplier.getGuildWebhooks"]},{"name":"open override fun getGuildWebhooks(guildId: Snowflake): Flow<Webhook>","description":"dev.kord.core.supplier.StoreEntitySupplier.getGuildWebhooks","location":"core/dev.kord.core.supplier/-store-entity-supplier/get-guild-webhooks.html","searchKeys":["getGuildWebhooks","open override fun getGuildWebhooks(guildId: Snowflake): Flow<Webhook>","dev.kord.core.supplier.StoreEntitySupplier.getGuildWebhooks"]},{"name":"open override fun getJoinedPrivateArchivedThreads(before: Snowflake?, limit: Int?): Flow<TextChannelThread>","description":"dev.kord.core.behavior.channel.TextChannelBehavior.getJoinedPrivateArchivedThreads","location":"core/dev.kord.core.behavior.channel/-text-channel-behavior/get-joined-private-archived-threads.html","searchKeys":["getJoinedPrivateArchivedThreads","open override fun getJoinedPrivateArchivedThreads(before: Snowflake?, limit: Int?): Flow<TextChannelThread>","dev.kord.core.behavior.channel.TextChannelBehavior.getJoinedPrivateArchivedThreads"]},{"name":"open override fun getJoinedPrivateArchivedThreads(channelId: Snowflake, before: Snowflake?, limit: Int?): Flow<ThreadChannel>","description":"dev.kord.core.supplier.CacheEntitySupplier.getJoinedPrivateArchivedThreads","location":"core/dev.kord.core.supplier/-cache-entity-supplier/get-joined-private-archived-threads.html","searchKeys":["getJoinedPrivateArchivedThreads","open override fun getJoinedPrivateArchivedThreads(channelId: Snowflake, before: Snowflake?, limit: Int?): Flow<ThreadChannel>","dev.kord.core.supplier.CacheEntitySupplier.getJoinedPrivateArchivedThreads"]},{"name":"open override fun getJoinedPrivateArchivedThreads(channelId: Snowflake, before: Snowflake?, limit: Int?): Flow<ThreadChannel>","description":"dev.kord.core.supplier.RestEntitySupplier.getJoinedPrivateArchivedThreads","location":"core/dev.kord.core.supplier/-rest-entity-supplier/get-joined-private-archived-threads.html","searchKeys":["getJoinedPrivateArchivedThreads","open override fun getJoinedPrivateArchivedThreads(channelId: Snowflake, before: Snowflake?, limit: Int?): Flow<ThreadChannel>","dev.kord.core.supplier.RestEntitySupplier.getJoinedPrivateArchivedThreads"]},{"name":"open override fun getJoinedPrivateArchivedThreads(channelId: Snowflake, before: Snowflake?, limit: Int?): Flow<ThreadChannel>","description":"dev.kord.core.supplier.StoreEntitySupplier.getJoinedPrivateArchivedThreads","location":"core/dev.kord.core.supplier/-store-entity-supplier/get-joined-private-archived-threads.html","searchKeys":["getJoinedPrivateArchivedThreads","open override fun getJoinedPrivateArchivedThreads(channelId: Snowflake, before: Snowflake?, limit: Int?): Flow<ThreadChannel>","dev.kord.core.supplier.StoreEntitySupplier.getJoinedPrivateArchivedThreads"]},{"name":"open override fun getMessagesAfter(messageId: Snowflake, channelId: Snowflake, limit: Int?): Flow<Message>","description":"dev.kord.core.supplier.CacheEntitySupplier.getMessagesAfter","location":"core/dev.kord.core.supplier/-cache-entity-supplier/get-messages-after.html","searchKeys":["getMessagesAfter","open override fun getMessagesAfter(messageId: Snowflake, channelId: Snowflake, limit: Int?): Flow<Message>","dev.kord.core.supplier.CacheEntitySupplier.getMessagesAfter"]},{"name":"open override fun getMessagesAfter(messageId: Snowflake, channelId: Snowflake, limit: Int?): Flow<Message>","description":"dev.kord.core.supplier.RestEntitySupplier.getMessagesAfter","location":"core/dev.kord.core.supplier/-rest-entity-supplier/get-messages-after.html","searchKeys":["getMessagesAfter","open override fun getMessagesAfter(messageId: Snowflake, channelId: Snowflake, limit: Int?): Flow<Message>","dev.kord.core.supplier.RestEntitySupplier.getMessagesAfter"]},{"name":"open override fun getMessagesAfter(messageId: Snowflake, channelId: Snowflake, limit: Int?): Flow<Message>","description":"dev.kord.core.supplier.StoreEntitySupplier.getMessagesAfter","location":"core/dev.kord.core.supplier/-store-entity-supplier/get-messages-after.html","searchKeys":["getMessagesAfter","open override fun getMessagesAfter(messageId: Snowflake, channelId: Snowflake, limit: Int?): Flow<Message>","dev.kord.core.supplier.StoreEntitySupplier.getMessagesAfter"]},{"name":"open override fun getMessagesAround(messageId: Snowflake, channelId: Snowflake, limit: Int): Flow<Message>","description":"dev.kord.core.supplier.CacheEntitySupplier.getMessagesAround","location":"core/dev.kord.core.supplier/-cache-entity-supplier/get-messages-around.html","searchKeys":["getMessagesAround","open override fun getMessagesAround(messageId: Snowflake, channelId: Snowflake, limit: Int): Flow<Message>","dev.kord.core.supplier.CacheEntitySupplier.getMessagesAround"]},{"name":"open override fun getMessagesAround(messageId: Snowflake, channelId: Snowflake, limit: Int): Flow<Message>","description":"dev.kord.core.supplier.RestEntitySupplier.getMessagesAround","location":"core/dev.kord.core.supplier/-rest-entity-supplier/get-messages-around.html","searchKeys":["getMessagesAround","open override fun getMessagesAround(messageId: Snowflake, channelId: Snowflake, limit: Int): Flow<Message>","dev.kord.core.supplier.RestEntitySupplier.getMessagesAround"]},{"name":"open override fun getMessagesAround(messageId: Snowflake, channelId: Snowflake, limit: Int): Flow<Message>","description":"dev.kord.core.supplier.StoreEntitySupplier.getMessagesAround","location":"core/dev.kord.core.supplier/-store-entity-supplier/get-messages-around.html","searchKeys":["getMessagesAround","open override fun getMessagesAround(messageId: Snowflake, channelId: Snowflake, limit: Int): Flow<Message>","dev.kord.core.supplier.StoreEntitySupplier.getMessagesAround"]},{"name":"open override fun getMessagesBefore(messageId: Snowflake, channelId: Snowflake, limit: Int?): Flow<Message>","description":"dev.kord.core.supplier.CacheEntitySupplier.getMessagesBefore","location":"core/dev.kord.core.supplier/-cache-entity-supplier/get-messages-before.html","searchKeys":["getMessagesBefore","open override fun getMessagesBefore(messageId: Snowflake, channelId: Snowflake, limit: Int?): Flow<Message>","dev.kord.core.supplier.CacheEntitySupplier.getMessagesBefore"]},{"name":"open override fun getMessagesBefore(messageId: Snowflake, channelId: Snowflake, limit: Int?): Flow<Message>","description":"dev.kord.core.supplier.RestEntitySupplier.getMessagesBefore","location":"core/dev.kord.core.supplier/-rest-entity-supplier/get-messages-before.html","searchKeys":["getMessagesBefore","open override fun getMessagesBefore(messageId: Snowflake, channelId: Snowflake, limit: Int?): Flow<Message>","dev.kord.core.supplier.RestEntitySupplier.getMessagesBefore"]},{"name":"open override fun getMessagesBefore(messageId: Snowflake, channelId: Snowflake, limit: Int?): Flow<Message>","description":"dev.kord.core.supplier.StoreEntitySupplier.getMessagesBefore","location":"core/dev.kord.core.supplier/-store-entity-supplier/get-messages-before.html","searchKeys":["getMessagesBefore","open override fun getMessagesBefore(messageId: Snowflake, channelId: Snowflake, limit: Int?): Flow<Message>","dev.kord.core.supplier.StoreEntitySupplier.getMessagesBefore"]},{"name":"open override fun getNitroStickerPacks(): Flow<StickerPack>","description":"dev.kord.core.supplier.CacheEntitySupplier.getNitroStickerPacks","location":"core/dev.kord.core.supplier/-cache-entity-supplier/get-nitro-sticker-packs.html","searchKeys":["getNitroStickerPacks","open override fun getNitroStickerPacks(): Flow<StickerPack>","dev.kord.core.supplier.CacheEntitySupplier.getNitroStickerPacks"]},{"name":"open override fun getNitroStickerPacks(): Flow<StickerPack>","description":"dev.kord.core.supplier.RestEntitySupplier.getNitroStickerPacks","location":"core/dev.kord.core.supplier/-rest-entity-supplier/get-nitro-sticker-packs.html","searchKeys":["getNitroStickerPacks","open override fun getNitroStickerPacks(): Flow<StickerPack>","dev.kord.core.supplier.RestEntitySupplier.getNitroStickerPacks"]},{"name":"open override fun getNitroStickerPacks(): Flow<StickerPack>","description":"dev.kord.core.supplier.StoreEntitySupplier.getNitroStickerPacks","location":"core/dev.kord.core.supplier/-store-entity-supplier/get-nitro-sticker-packs.html","searchKeys":["getNitroStickerPacks","open override fun getNitroStickerPacks(): Flow<StickerPack>","dev.kord.core.supplier.StoreEntitySupplier.getNitroStickerPacks"]},{"name":"open override fun getPrivateArchivedThreads(before: Instant?, limit: Int?): Flow<TextChannelThread>","description":"dev.kord.core.behavior.channel.TextChannelBehavior.getPrivateArchivedThreads","location":"core/dev.kord.core.behavior.channel/-text-channel-behavior/get-private-archived-threads.html","searchKeys":["getPrivateArchivedThreads","open override fun getPrivateArchivedThreads(before: Instant?, limit: Int?): Flow<TextChannelThread>","dev.kord.core.behavior.channel.TextChannelBehavior.getPrivateArchivedThreads"]},{"name":"open override fun getPrivateArchivedThreads(channelId: Snowflake, before: Instant?, limit: Int?): Flow<ThreadChannel>","description":"dev.kord.core.supplier.CacheEntitySupplier.getPrivateArchivedThreads","location":"core/dev.kord.core.supplier/-cache-entity-supplier/get-private-archived-threads.html","searchKeys":["getPrivateArchivedThreads","open override fun getPrivateArchivedThreads(channelId: Snowflake, before: Instant?, limit: Int?): Flow<ThreadChannel>","dev.kord.core.supplier.CacheEntitySupplier.getPrivateArchivedThreads"]},{"name":"open override fun getPrivateArchivedThreads(channelId: Snowflake, before: Instant?, limit: Int?): Flow<ThreadChannel>","description":"dev.kord.core.supplier.RestEntitySupplier.getPrivateArchivedThreads","location":"core/dev.kord.core.supplier/-rest-entity-supplier/get-private-archived-threads.html","searchKeys":["getPrivateArchivedThreads","open override fun getPrivateArchivedThreads(channelId: Snowflake, before: Instant?, limit: Int?): Flow<ThreadChannel>","dev.kord.core.supplier.RestEntitySupplier.getPrivateArchivedThreads"]},{"name":"open override fun getPrivateArchivedThreads(channelId: Snowflake, before: Instant?, limit: Int?): Flow<ThreadChannel>","description":"dev.kord.core.supplier.StoreEntitySupplier.getPrivateArchivedThreads","location":"core/dev.kord.core.supplier/-store-entity-supplier/get-private-archived-threads.html","searchKeys":["getPrivateArchivedThreads","open override fun getPrivateArchivedThreads(channelId: Snowflake, before: Instant?, limit: Int?): Flow<ThreadChannel>","dev.kord.core.supplier.StoreEntitySupplier.getPrivateArchivedThreads"]},{"name":"open override fun getPublicArchivedThreads(before: Instant?, limit: Int?): Flow<NewsChannelThread>","description":"dev.kord.core.behavior.channel.NewsChannelBehavior.getPublicArchivedThreads","location":"core/dev.kord.core.behavior.channel/-news-channel-behavior/get-public-archived-threads.html","searchKeys":["getPublicArchivedThreads","open override fun getPublicArchivedThreads(before: Instant?, limit: Int?): Flow<NewsChannelThread>","dev.kord.core.behavior.channel.NewsChannelBehavior.getPublicArchivedThreads"]},{"name":"open override fun getPublicArchivedThreads(before: Instant?, limit: Int?): Flow<TextChannelThread>","description":"dev.kord.core.behavior.channel.TextChannelBehavior.getPublicArchivedThreads","location":"core/dev.kord.core.behavior.channel/-text-channel-behavior/get-public-archived-threads.html","searchKeys":["getPublicArchivedThreads","open override fun getPublicArchivedThreads(before: Instant?, limit: Int?): Flow<TextChannelThread>","dev.kord.core.behavior.channel.TextChannelBehavior.getPublicArchivedThreads"]},{"name":"open override fun getPublicArchivedThreads(channelId: Snowflake, before: Instant?, limit: Int?): Flow<ThreadChannel>","description":"dev.kord.core.supplier.CacheEntitySupplier.getPublicArchivedThreads","location":"core/dev.kord.core.supplier/-cache-entity-supplier/get-public-archived-threads.html","searchKeys":["getPublicArchivedThreads","open override fun getPublicArchivedThreads(channelId: Snowflake, before: Instant?, limit: Int?): Flow<ThreadChannel>","dev.kord.core.supplier.CacheEntitySupplier.getPublicArchivedThreads"]},{"name":"open override fun getPublicArchivedThreads(channelId: Snowflake, before: Instant?, limit: Int?): Flow<ThreadChannel>","description":"dev.kord.core.supplier.RestEntitySupplier.getPublicArchivedThreads","location":"core/dev.kord.core.supplier/-rest-entity-supplier/get-public-archived-threads.html","searchKeys":["getPublicArchivedThreads","open override fun getPublicArchivedThreads(channelId: Snowflake, before: Instant?, limit: Int?): Flow<ThreadChannel>","dev.kord.core.supplier.RestEntitySupplier.getPublicArchivedThreads"]},{"name":"open override fun getPublicArchivedThreads(channelId: Snowflake, before: Instant?, limit: Int?): Flow<ThreadChannel>","description":"dev.kord.core.supplier.StoreEntitySupplier.getPublicArchivedThreads","location":"core/dev.kord.core.supplier/-store-entity-supplier/get-public-archived-threads.html","searchKeys":["getPublicArchivedThreads","open override fun getPublicArchivedThreads(channelId: Snowflake, before: Instant?, limit: Int?): Flow<ThreadChannel>","dev.kord.core.supplier.StoreEntitySupplier.getPublicArchivedThreads"]},{"name":"open override fun getTemplates(guildId: Snowflake): Flow<Template>","description":"dev.kord.core.supplier.CacheEntitySupplier.getTemplates","location":"core/dev.kord.core.supplier/-cache-entity-supplier/get-templates.html","searchKeys":["getTemplates","open override fun getTemplates(guildId: Snowflake): Flow<Template>","dev.kord.core.supplier.CacheEntitySupplier.getTemplates"]},{"name":"open override fun getTemplates(guildId: Snowflake): Flow<Template>","description":"dev.kord.core.supplier.RestEntitySupplier.getTemplates","location":"core/dev.kord.core.supplier/-rest-entity-supplier/get-templates.html","searchKeys":["getTemplates","open override fun getTemplates(guildId: Snowflake): Flow<Template>","dev.kord.core.supplier.RestEntitySupplier.getTemplates"]},{"name":"open override fun getTemplates(guildId: Snowflake): Flow<Template>","description":"dev.kord.core.supplier.StoreEntitySupplier.getTemplates","location":"core/dev.kord.core.supplier/-store-entity-supplier/get-templates.html","searchKeys":["getTemplates","open override fun getTemplates(guildId: Snowflake): Flow<Template>","dev.kord.core.supplier.StoreEntitySupplier.getTemplates"]},{"name":"open override fun getThreadMembers(channelId: Snowflake): Flow<ThreadMember>","description":"dev.kord.core.supplier.CacheEntitySupplier.getThreadMembers","location":"core/dev.kord.core.supplier/-cache-entity-supplier/get-thread-members.html","searchKeys":["getThreadMembers","open override fun getThreadMembers(channelId: Snowflake): Flow<ThreadMember>","dev.kord.core.supplier.CacheEntitySupplier.getThreadMembers"]},{"name":"open override fun getThreadMembers(channelId: Snowflake): Flow<ThreadMember>","description":"dev.kord.core.supplier.RestEntitySupplier.getThreadMembers","location":"core/dev.kord.core.supplier/-rest-entity-supplier/get-thread-members.html","searchKeys":["getThreadMembers","open override fun getThreadMembers(channelId: Snowflake): Flow<ThreadMember>","dev.kord.core.supplier.RestEntitySupplier.getThreadMembers"]},{"name":"open override fun getThreadMembers(channelId: Snowflake): Flow<ThreadMember>","description":"dev.kord.core.supplier.StoreEntitySupplier.getThreadMembers","location":"core/dev.kord.core.supplier/-store-entity-supplier/get-thread-members.html","searchKeys":["getThreadMembers","open override fun getThreadMembers(channelId: Snowflake): Flow<ThreadMember>","dev.kord.core.supplier.StoreEntitySupplier.getThreadMembers"]},{"name":"open override fun hashCode(): Int","description":"dev.kord.core.entity.Attachment.hashCode","location":"core/dev.kord.core.entity/-attachment/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","dev.kord.core.entity.Attachment.hashCode"]},{"name":"open override fun hashCode(): Int","description":"dev.kord.core.entity.Guild.hashCode","location":"core/dev.kord.core.entity/-guild/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","dev.kord.core.entity.Guild.hashCode"]},{"name":"open override fun hashCode(): Int","description":"dev.kord.core.entity.GuildEmoji.hashCode","location":"core/dev.kord.core.entity/-guild-emoji/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","dev.kord.core.entity.GuildEmoji.hashCode"]},{"name":"open override fun hashCode(): Int","description":"dev.kord.core.entity.Integration.hashCode","location":"core/dev.kord.core.entity/-integration/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","dev.kord.core.entity.Integration.hashCode"]},{"name":"open override fun hashCode(): Int","description":"dev.kord.core.entity.Member.hashCode","location":"core/dev.kord.core.entity/-member/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","dev.kord.core.entity.Member.hashCode"]},{"name":"open override fun hashCode(): Int","description":"dev.kord.core.entity.Message.hashCode","location":"core/dev.kord.core.entity/-message/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","dev.kord.core.entity.Message.hashCode"]},{"name":"open override fun hashCode(): Int","description":"dev.kord.core.entity.PartialGuild.hashCode","location":"core/dev.kord.core.entity/-partial-guild/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","dev.kord.core.entity.PartialGuild.hashCode"]},{"name":"open override fun hashCode(): Int","description":"dev.kord.core.entity.PermissionOverwrite.hashCode","location":"core/dev.kord.core.entity/-permission-overwrite/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","dev.kord.core.entity.PermissionOverwrite.hashCode"]},{"name":"open override fun hashCode(): Int","description":"dev.kord.core.entity.Region.hashCode","location":"core/dev.kord.core.entity/-region/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","dev.kord.core.entity.Region.hashCode"]},{"name":"open override fun hashCode(): Int","description":"dev.kord.core.entity.Role.hashCode","location":"core/dev.kord.core.entity/-role/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","dev.kord.core.entity.Role.hashCode"]},{"name":"open override fun hashCode(): Int","description":"dev.kord.core.entity.User.hashCode","location":"core/dev.kord.core.entity/-user/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","dev.kord.core.entity.User.hashCode"]},{"name":"open override fun hashCode(): Int","description":"dev.kord.core.entity.Webhook.hashCode","location":"core/dev.kord.core.entity/-webhook/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","dev.kord.core.entity.Webhook.hashCode"]},{"name":"open override fun hashCode(): Int","description":"dev.kord.core.entity.channel.Category.hashCode","location":"core/dev.kord.core.entity.channel/-category/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","dev.kord.core.entity.channel.Category.hashCode"]},{"name":"open override fun hashCode(): Int","description":"dev.kord.core.entity.channel.DmChannel.hashCode","location":"core/dev.kord.core.entity.channel/-dm-channel/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","dev.kord.core.entity.channel.DmChannel.hashCode"]},{"name":"open override fun hashCode(): Int","description":"dev.kord.core.entity.channel.NewsChannel.hashCode","location":"core/dev.kord.core.entity.channel/-news-channel/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","dev.kord.core.entity.channel.NewsChannel.hashCode"]},{"name":"open override fun hashCode(): Int","description":"dev.kord.core.entity.channel.StageChannel.hashCode","location":"core/dev.kord.core.entity.channel/-stage-channel/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","dev.kord.core.entity.channel.StageChannel.hashCode"]},{"name":"open override fun hashCode(): Int","description":"dev.kord.core.entity.channel.TextChannel.hashCode","location":"core/dev.kord.core.entity.channel/-text-channel/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","dev.kord.core.entity.channel.TextChannel.hashCode"]},{"name":"open override fun hashCode(): Int","description":"dev.kord.core.entity.channel.VoiceChannel.hashCode","location":"core/dev.kord.core.entity.channel/-voice-channel/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","dev.kord.core.entity.channel.VoiceChannel.hashCode"]},{"name":"open override fun hashCode(): Int","description":"dev.kord.core.entity.component.SelectMenuComponent.hashCode","location":"core/dev.kord.core.entity.component/-select-menu-component/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","dev.kord.core.entity.component.SelectMenuComponent.hashCode"]},{"name":"open override fun hashCode(): Int","description":"dev.kord.core.entity.component.SelectOption.hashCode","location":"core/dev.kord.core.entity.component/-select-option/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","dev.kord.core.entity.component.SelectOption.hashCode"]},{"name":"open override fun hashCode(): Int","description":"dev.kord.core.entity.interaction.GlobalAutoCompleteInteraction.hashCode","location":"core/dev.kord.core.entity.interaction/-global-auto-complete-interaction/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","dev.kord.core.entity.interaction.GlobalAutoCompleteInteraction.hashCode"]},{"name":"open override fun hashCode(): Int","description":"dev.kord.core.entity.interaction.GlobalButtonInteraction.hashCode","location":"core/dev.kord.core.entity.interaction/-global-button-interaction/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","dev.kord.core.entity.interaction.GlobalButtonInteraction.hashCode"]},{"name":"open override fun hashCode(): Int","description":"dev.kord.core.entity.interaction.GlobalChatInputCommandInteraction.hashCode","location":"core/dev.kord.core.entity.interaction/-global-chat-input-command-interaction/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","dev.kord.core.entity.interaction.GlobalChatInputCommandInteraction.hashCode"]},{"name":"open override fun hashCode(): Int","description":"dev.kord.core.entity.interaction.GlobalMessageCommandInteraction.hashCode","location":"core/dev.kord.core.entity.interaction/-global-message-command-interaction/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","dev.kord.core.entity.interaction.GlobalMessageCommandInteraction.hashCode"]},{"name":"open override fun hashCode(): Int","description":"dev.kord.core.entity.interaction.GlobalModalSubmitInteraction.hashCode","location":"core/dev.kord.core.entity.interaction/-global-modal-submit-interaction/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","dev.kord.core.entity.interaction.GlobalModalSubmitInteraction.hashCode"]},{"name":"open override fun hashCode(): Int","description":"dev.kord.core.entity.interaction.GlobalSelectMenuInteraction.hashCode","location":"core/dev.kord.core.entity.interaction/-global-select-menu-interaction/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","dev.kord.core.entity.interaction.GlobalSelectMenuInteraction.hashCode"]},{"name":"open override fun hashCode(): Int","description":"dev.kord.core.entity.interaction.GlobalUserCommandInteraction.hashCode","location":"core/dev.kord.core.entity.interaction/-global-user-command-interaction/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","dev.kord.core.entity.interaction.GlobalUserCommandInteraction.hashCode"]},{"name":"open override fun hashCode(): Int","description":"dev.kord.core.entity.interaction.GuildAutoCompleteInteraction.hashCode","location":"core/dev.kord.core.entity.interaction/-guild-auto-complete-interaction/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","dev.kord.core.entity.interaction.GuildAutoCompleteInteraction.hashCode"]},{"name":"open override fun hashCode(): Int","description":"dev.kord.core.entity.interaction.GuildButtonInteraction.hashCode","location":"core/dev.kord.core.entity.interaction/-guild-button-interaction/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","dev.kord.core.entity.interaction.GuildButtonInteraction.hashCode"]},{"name":"open override fun hashCode(): Int","description":"dev.kord.core.entity.interaction.GuildChatInputCommandInteraction.hashCode","location":"core/dev.kord.core.entity.interaction/-guild-chat-input-command-interaction/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","dev.kord.core.entity.interaction.GuildChatInputCommandInteraction.hashCode"]},{"name":"open override fun hashCode(): Int","description":"dev.kord.core.entity.interaction.GuildMessageCommandInteraction.hashCode","location":"core/dev.kord.core.entity.interaction/-guild-message-command-interaction/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","dev.kord.core.entity.interaction.GuildMessageCommandInteraction.hashCode"]},{"name":"open override fun hashCode(): Int","description":"dev.kord.core.entity.interaction.GuildModalSubmitInteraction.hashCode","location":"core/dev.kord.core.entity.interaction/-guild-modal-submit-interaction/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","dev.kord.core.entity.interaction.GuildModalSubmitInteraction.hashCode"]},{"name":"open override fun hashCode(): Int","description":"dev.kord.core.entity.interaction.GuildSelectMenuInteraction.hashCode","location":"core/dev.kord.core.entity.interaction/-guild-select-menu-interaction/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","dev.kord.core.entity.interaction.GuildSelectMenuInteraction.hashCode"]},{"name":"open override fun hashCode(): Int","description":"dev.kord.core.entity.interaction.GuildUserCommandInteraction.hashCode","location":"core/dev.kord.core.entity.interaction/-guild-user-command-interaction/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","dev.kord.core.entity.interaction.GuildUserCommandInteraction.hashCode"]},{"name":"open override fun serialize(encoder: Encoder, value: Any?): Nothing","description":"dev.kord.core.cache.data.NotSerializable.serialize","location":"core/dev.kord.core.cache.data/-not-serializable/serialize.html","searchKeys":["serialize","open override fun serialize(encoder: Encoder, value: Any?): Nothing","dev.kord.core.cache.data.NotSerializable.serialize"]},{"name":"open override fun shutDown(cause: CancellationException)","description":"dev.kord.core.live.AbstractLiveKordEntity.shutDown","location":"core/dev.kord.core.live/-abstract-live-kord-entity/shut-down.html","searchKeys":["shutDown","open override fun shutDown(cause: CancellationException)","dev.kord.core.live.AbstractLiveKordEntity.shutDown"]},{"name":"open override fun toString(): String","description":"dev.kord.core.ClientResources.toString","location":"core/dev.kord.core/-client-resources/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.kord.core.ClientResources.toString"]},{"name":"open override fun toString(): String","description":"dev.kord.core.Kord.toString","location":"core/dev.kord.core/-kord/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.kord.core.Kord.toString"]},{"name":"open override fun toString(): String","description":"dev.kord.core.Unsafe.toString","location":"core/dev.kord.core/-unsafe/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.kord.core.Unsafe.toString"]},{"name":"open override fun toString(): String","description":"dev.kord.core.cache.CachingGateway.toString","location":"core/dev.kord.core.cache/-caching-gateway/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.kord.core.cache.CachingGateway.toString"]},{"name":"open override fun toString(): String","description":"dev.kord.core.cache.DataCacheView.toString","location":"core/dev.kord.core.cache/-data-cache-view/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.kord.core.cache.DataCacheView.toString"]},{"name":"open override fun toString(): String","description":"dev.kord.core.entity.Activity.toString","location":"core/dev.kord.core.entity/-activity/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.kord.core.entity.Activity.toString"]},{"name":"open override fun toString(): String","description":"dev.kord.core.entity.Application.toString","location":"core/dev.kord.core.entity/-application/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.kord.core.entity.Application.toString"]},{"name":"open override fun toString(): String","description":"dev.kord.core.entity.Attachment.toString","location":"core/dev.kord.core.entity/-attachment/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.kord.core.entity.Attachment.toString"]},{"name":"open override fun toString(): String","description":"dev.kord.core.entity.Ban.toString","location":"core/dev.kord.core.entity/-ban/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.kord.core.entity.Ban.toString"]},{"name":"open override fun toString(): String","description":"dev.kord.core.entity.ClientStatus.toString","location":"core/dev.kord.core.entity/-client-status/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.kord.core.entity.ClientStatus.toString"]},{"name":"open override fun toString(): String","description":"dev.kord.core.entity.Embed.toString","location":"core/dev.kord.core.entity/-embed/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.kord.core.entity.Embed.toString"]},{"name":"open override fun toString(): String","description":"dev.kord.core.entity.Guild.toString","location":"core/dev.kord.core.entity/-guild/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.kord.core.entity.Guild.toString"]},{"name":"open override fun toString(): String","description":"dev.kord.core.entity.GuildEmoji.toString","location":"core/dev.kord.core.entity/-guild-emoji/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.kord.core.entity.GuildEmoji.toString"]},{"name":"open override fun toString(): String","description":"dev.kord.core.entity.GuildPreview.toString","location":"core/dev.kord.core.entity/-guild-preview/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.kord.core.entity.GuildPreview.toString"]},{"name":"open override fun toString(): String","description":"dev.kord.core.entity.Icon.toString","location":"core/dev.kord.core.entity/-icon/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.kord.core.entity.Icon.toString"]},{"name":"open override fun toString(): String","description":"dev.kord.core.entity.Integration.toString","location":"core/dev.kord.core.entity/-integration/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.kord.core.entity.Integration.toString"]},{"name":"open override fun toString(): String","description":"dev.kord.core.entity.Invite.toString","location":"core/dev.kord.core.entity/-invite/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.kord.core.entity.Invite.toString"]},{"name":"open override fun toString(): String","description":"dev.kord.core.entity.InviteWithMetadata.toString","location":"core/dev.kord.core.entity/-invite-with-metadata/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.kord.core.entity.InviteWithMetadata.toString"]},{"name":"open override fun toString(): String","description":"dev.kord.core.entity.Member.toString","location":"core/dev.kord.core.entity/-member/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.kord.core.entity.Member.toString"]},{"name":"open override fun toString(): String","description":"dev.kord.core.entity.Message.toString","location":"core/dev.kord.core.entity/-message/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.kord.core.entity.Message.toString"]},{"name":"open override fun toString(): String","description":"dev.kord.core.entity.PartialApplication.toString","location":"core/dev.kord.core.entity/-partial-application/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.kord.core.entity.PartialApplication.toString"]},{"name":"open override fun toString(): String","description":"dev.kord.core.entity.PartialGuild.toString","location":"core/dev.kord.core.entity/-partial-guild/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.kord.core.entity.PartialGuild.toString"]},{"name":"open override fun toString(): String","description":"dev.kord.core.entity.PermissionOverwrite.toString","location":"core/dev.kord.core.entity/-permission-overwrite/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.kord.core.entity.PermissionOverwrite.toString"]},{"name":"open override fun toString(): String","description":"dev.kord.core.entity.PermissionOverwriteEntity.toString","location":"core/dev.kord.core.entity/-permission-overwrite-entity/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.kord.core.entity.PermissionOverwriteEntity.toString"]},{"name":"open override fun toString(): String","description":"dev.kord.core.entity.Presence.toString","location":"core/dev.kord.core.entity/-presence/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.kord.core.entity.Presence.toString"]},{"name":"open override fun toString(): String","description":"dev.kord.core.entity.Reaction.toString","location":"core/dev.kord.core.entity/-reaction/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.kord.core.entity.Reaction.toString"]},{"name":"open override fun toString(): String","description":"dev.kord.core.entity.ReactionEmoji.Custom.toString","location":"core/dev.kord.core.entity/-reaction-emoji/-custom/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.kord.core.entity.ReactionEmoji.Custom.toString"]},{"name":"open override fun toString(): String","description":"dev.kord.core.entity.Region.toString","location":"core/dev.kord.core.entity/-region/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.kord.core.entity.Region.toString"]},{"name":"open override fun toString(): String","description":"dev.kord.core.entity.Role.toString","location":"core/dev.kord.core.entity/-role/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.kord.core.entity.Role.toString"]},{"name":"open override fun toString(): String","description":"dev.kord.core.entity.Team.toString","location":"core/dev.kord.core.entity/-team/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.kord.core.entity.Team.toString"]},{"name":"open override fun toString(): String","description":"dev.kord.core.entity.TeamMember.toString","location":"core/dev.kord.core.entity/-team-member/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.kord.core.entity.TeamMember.toString"]},{"name":"open override fun toString(): String","description":"dev.kord.core.entity.User.Avatar.toString","location":"core/dev.kord.core.entity/-user/-avatar/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.kord.core.entity.User.Avatar.toString"]},{"name":"open override fun toString(): String","description":"dev.kord.core.entity.User.toString","location":"core/dev.kord.core.entity/-user/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.kord.core.entity.User.toString"]},{"name":"open override fun toString(): String","description":"dev.kord.core.entity.VoiceState.toString","location":"core/dev.kord.core.entity/-voice-state/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.kord.core.entity.VoiceState.toString"]},{"name":"open override fun toString(): String","description":"dev.kord.core.entity.Webhook.toString","location":"core/dev.kord.core.entity/-webhook/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.kord.core.entity.Webhook.toString"]},{"name":"open override fun toString(): String","description":"dev.kord.core.entity.automoderation.BlockMessageAutoModerationAction.toString","location":"core/dev.kord.core.entity.automoderation/-block-message-auto-moderation-action/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.kord.core.entity.automoderation.BlockMessageAutoModerationAction.toString"]},{"name":"open override fun toString(): String","description":"dev.kord.core.entity.automoderation.KeywordAutoModerationRule.toString","location":"core/dev.kord.core.entity.automoderation/-keyword-auto-moderation-rule/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.kord.core.entity.automoderation.KeywordAutoModerationRule.toString"]},{"name":"open override fun toString(): String","description":"dev.kord.core.entity.automoderation.KeywordPresetAutoModerationRule.toString","location":"core/dev.kord.core.entity.automoderation/-keyword-preset-auto-moderation-rule/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.kord.core.entity.automoderation.KeywordPresetAutoModerationRule.toString"]},{"name":"open override fun toString(): String","description":"dev.kord.core.entity.automoderation.MentionSpamAutoModerationRule.toString","location":"core/dev.kord.core.entity.automoderation/-mention-spam-auto-moderation-rule/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.kord.core.entity.automoderation.MentionSpamAutoModerationRule.toString"]},{"name":"open override fun toString(): String","description":"dev.kord.core.entity.automoderation.SendAlertMessageAutoModerationAction.toString","location":"core/dev.kord.core.entity.automoderation/-send-alert-message-auto-moderation-action/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.kord.core.entity.automoderation.SendAlertMessageAutoModerationAction.toString"]},{"name":"open override fun toString(): String","description":"dev.kord.core.entity.automoderation.SpamAutoModerationRule.toString","location":"core/dev.kord.core.entity.automoderation/-spam-auto-moderation-rule/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.kord.core.entity.automoderation.SpamAutoModerationRule.toString"]},{"name":"open override fun toString(): String","description":"dev.kord.core.entity.automoderation.TimeoutAutoModerationAction.toString","location":"core/dev.kord.core.entity.automoderation/-timeout-auto-moderation-action/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.kord.core.entity.automoderation.TimeoutAutoModerationAction.toString"]},{"name":"open override fun toString(): String","description":"dev.kord.core.entity.automoderation.UnknownAutoModerationAction.toString","location":"core/dev.kord.core.entity.automoderation/-unknown-auto-moderation-action/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.kord.core.entity.automoderation.UnknownAutoModerationAction.toString"]},{"name":"open override fun toString(): String","description":"dev.kord.core.entity.automoderation.UnknownAutoModerationRule.toString","location":"core/dev.kord.core.entity.automoderation/-unknown-auto-moderation-rule/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.kord.core.entity.automoderation.UnknownAutoModerationRule.toString"]},{"name":"open override fun toString(): String","description":"dev.kord.core.entity.channel.Category.toString","location":"core/dev.kord.core.entity.channel/-category/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.kord.core.entity.channel.Category.toString"]},{"name":"open override fun toString(): String","description":"dev.kord.core.entity.channel.DmChannel.toString","location":"core/dev.kord.core.entity.channel/-dm-channel/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.kord.core.entity.channel.DmChannel.toString"]},{"name":"open override fun toString(): String","description":"dev.kord.core.entity.channel.NewsChannel.toString","location":"core/dev.kord.core.entity.channel/-news-channel/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.kord.core.entity.channel.NewsChannel.toString"]},{"name":"open override fun toString(): String","description":"dev.kord.core.entity.channel.ResolvedChannel.toString","location":"core/dev.kord.core.entity.channel/-resolved-channel/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.kord.core.entity.channel.ResolvedChannel.toString"]},{"name":"open override fun toString(): String","description":"dev.kord.core.entity.channel.StageChannel.toString","location":"core/dev.kord.core.entity.channel/-stage-channel/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.kord.core.entity.channel.StageChannel.toString"]},{"name":"open override fun toString(): String","description":"dev.kord.core.entity.channel.TextChannel.toString","location":"core/dev.kord.core.entity.channel/-text-channel/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.kord.core.entity.channel.TextChannel.toString"]},{"name":"open override fun toString(): String","description":"dev.kord.core.entity.channel.VoiceChannel.toString","location":"core/dev.kord.core.entity.channel/-voice-channel/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.kord.core.entity.channel.VoiceChannel.toString"]},{"name":"open override fun toString(): String","description":"dev.kord.core.entity.component.ActionRowComponent.toString","location":"core/dev.kord.core.entity.component/-action-row-component/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.kord.core.entity.component.ActionRowComponent.toString"]},{"name":"open override fun toString(): String","description":"dev.kord.core.entity.component.ButtonComponent.toString","location":"core/dev.kord.core.entity.component/-button-component/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.kord.core.entity.component.ButtonComponent.toString"]},{"name":"open override fun toString(): String","description":"dev.kord.core.entity.component.SelectMenuComponent.toString","location":"core/dev.kord.core.entity.component/-select-menu-component/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.kord.core.entity.component.SelectMenuComponent.toString"]},{"name":"open override fun toString(): String","description":"dev.kord.core.entity.component.SelectOption.toString","location":"core/dev.kord.core.entity.component/-select-option/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.kord.core.entity.component.SelectOption.toString"]},{"name":"open override fun toString(): String","description":"dev.kord.core.entity.component.TextInputComponent.toString","location":"core/dev.kord.core.entity.component/-text-input-component/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.kord.core.entity.component.TextInputComponent.toString"]},{"name":"open override fun toString(): String","description":"dev.kord.core.entity.component.UnknownComponent.toString","location":"core/dev.kord.core.entity.component/-unknown-component/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.kord.core.entity.component.UnknownComponent.toString"]},{"name":"open override fun toString(): String","description":"dev.kord.core.entity.interaction.AttachmentOptionValue.toString","location":"core/dev.kord.core.entity.interaction/-attachment-option-value/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.kord.core.entity.interaction.AttachmentOptionValue.toString"]},{"name":"open override fun toString(): String","description":"dev.kord.core.entity.interaction.BooleanOptionValue.toString","location":"core/dev.kord.core.entity.interaction/-boolean-option-value/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.kord.core.entity.interaction.BooleanOptionValue.toString"]},{"name":"open override fun toString(): String","description":"dev.kord.core.entity.interaction.ChannelOptionValue.toString","location":"core/dev.kord.core.entity.interaction/-channel-option-value/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.kord.core.entity.interaction.ChannelOptionValue.toString"]},{"name":"open override fun toString(): String","description":"dev.kord.core.entity.interaction.GlobalAutoCompleteInteraction.toString","location":"core/dev.kord.core.entity.interaction/-global-auto-complete-interaction/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.kord.core.entity.interaction.GlobalAutoCompleteInteraction.toString"]},{"name":"open override fun toString(): String","description":"dev.kord.core.entity.interaction.GlobalButtonInteraction.toString","location":"core/dev.kord.core.entity.interaction/-global-button-interaction/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.kord.core.entity.interaction.GlobalButtonInteraction.toString"]},{"name":"open override fun toString(): String","description":"dev.kord.core.entity.interaction.GlobalChatInputCommandInteraction.toString","location":"core/dev.kord.core.entity.interaction/-global-chat-input-command-interaction/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.kord.core.entity.interaction.GlobalChatInputCommandInteraction.toString"]},{"name":"open override fun toString(): String","description":"dev.kord.core.entity.interaction.GlobalMessageCommandInteraction.toString","location":"core/dev.kord.core.entity.interaction/-global-message-command-interaction/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.kord.core.entity.interaction.GlobalMessageCommandInteraction.toString"]},{"name":"open override fun toString(): String","description":"dev.kord.core.entity.interaction.GlobalModalSubmitInteraction.toString","location":"core/dev.kord.core.entity.interaction/-global-modal-submit-interaction/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.kord.core.entity.interaction.GlobalModalSubmitInteraction.toString"]},{"name":"open override fun toString(): String","description":"dev.kord.core.entity.interaction.GlobalSelectMenuInteraction.toString","location":"core/dev.kord.core.entity.interaction/-global-select-menu-interaction/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.kord.core.entity.interaction.GlobalSelectMenuInteraction.toString"]},{"name":"open override fun toString(): String","description":"dev.kord.core.entity.interaction.GlobalUserCommandInteraction.toString","location":"core/dev.kord.core.entity.interaction/-global-user-command-interaction/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.kord.core.entity.interaction.GlobalUserCommandInteraction.toString"]},{"name":"open override fun toString(): String","description":"dev.kord.core.entity.interaction.GuildAutoCompleteInteraction.toString","location":"core/dev.kord.core.entity.interaction/-guild-auto-complete-interaction/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.kord.core.entity.interaction.GuildAutoCompleteInteraction.toString"]},{"name":"open override fun toString(): String","description":"dev.kord.core.entity.interaction.GuildButtonInteraction.toString","location":"core/dev.kord.core.entity.interaction/-guild-button-interaction/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.kord.core.entity.interaction.GuildButtonInteraction.toString"]},{"name":"open override fun toString(): String","description":"dev.kord.core.entity.interaction.GuildChatInputCommandInteraction.toString","location":"core/dev.kord.core.entity.interaction/-guild-chat-input-command-interaction/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.kord.core.entity.interaction.GuildChatInputCommandInteraction.toString"]},{"name":"open override fun toString(): String","description":"dev.kord.core.entity.interaction.GuildMessageCommandInteraction.toString","location":"core/dev.kord.core.entity.interaction/-guild-message-command-interaction/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.kord.core.entity.interaction.GuildMessageCommandInteraction.toString"]},{"name":"open override fun toString(): String","description":"dev.kord.core.entity.interaction.GuildModalSubmitInteraction.toString","location":"core/dev.kord.core.entity.interaction/-guild-modal-submit-interaction/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.kord.core.entity.interaction.GuildModalSubmitInteraction.toString"]},{"name":"open override fun toString(): String","description":"dev.kord.core.entity.interaction.GuildSelectMenuInteraction.toString","location":"core/dev.kord.core.entity.interaction/-guild-select-menu-interaction/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.kord.core.entity.interaction.GuildSelectMenuInteraction.toString"]},{"name":"open override fun toString(): String","description":"dev.kord.core.entity.interaction.GuildUserCommandInteraction.toString","location":"core/dev.kord.core.entity.interaction/-guild-user-command-interaction/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.kord.core.entity.interaction.GuildUserCommandInteraction.toString"]},{"name":"open override fun toString(): String","description":"dev.kord.core.entity.interaction.IntegerOptionValue.toString","location":"core/dev.kord.core.entity.interaction/-integer-option-value/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.kord.core.entity.interaction.IntegerOptionValue.toString"]},{"name":"open override fun toString(): String","description":"dev.kord.core.entity.interaction.MemberOptionValue.toString","location":"core/dev.kord.core.entity.interaction/-member-option-value/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.kord.core.entity.interaction.MemberOptionValue.toString"]},{"name":"open override fun toString(): String","description":"dev.kord.core.entity.interaction.MentionableOptionValue.toString","location":"core/dev.kord.core.entity.interaction/-mentionable-option-value/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.kord.core.entity.interaction.MentionableOptionValue.toString"]},{"name":"open override fun toString(): String","description":"dev.kord.core.entity.interaction.NumberOptionValue.toString","location":"core/dev.kord.core.entity.interaction/-number-option-value/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.kord.core.entity.interaction.NumberOptionValue.toString"]},{"name":"open override fun toString(): String","description":"dev.kord.core.entity.interaction.RoleOptionValue.toString","location":"core/dev.kord.core.entity.interaction/-role-option-value/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.kord.core.entity.interaction.RoleOptionValue.toString"]},{"name":"open override fun toString(): String","description":"dev.kord.core.entity.interaction.StringOptionValue.toString","location":"core/dev.kord.core.entity.interaction/-string-option-value/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.kord.core.entity.interaction.StringOptionValue.toString"]},{"name":"open override fun toString(): String","description":"dev.kord.core.entity.interaction.UserOptionValue.toString","location":"core/dev.kord.core.entity.interaction/-user-option-value/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.kord.core.entity.interaction.UserOptionValue.toString"]},{"name":"open override fun toString(): String","description":"dev.kord.core.event.automoderation.AutoModerationActionExecutionEvent.toString","location":"core/dev.kord.core.event.automoderation/-auto-moderation-action-execution-event/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.kord.core.event.automoderation.AutoModerationActionExecutionEvent.toString"]},{"name":"open override fun toString(): String","description":"dev.kord.core.event.automoderation.AutoModerationRuleCreateEvent.toString","location":"core/dev.kord.core.event.automoderation/-auto-moderation-rule-create-event/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.kord.core.event.automoderation.AutoModerationRuleCreateEvent.toString"]},{"name":"open override fun toString(): String","description":"dev.kord.core.event.automoderation.AutoModerationRuleDeleteEvent.toString","location":"core/dev.kord.core.event.automoderation/-auto-moderation-rule-delete-event/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.kord.core.event.automoderation.AutoModerationRuleDeleteEvent.toString"]},{"name":"open override fun toString(): String","description":"dev.kord.core.event.automoderation.AutoModerationRuleUpdateEvent.toString","location":"core/dev.kord.core.event.automoderation/-auto-moderation-rule-update-event/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.kord.core.event.automoderation.AutoModerationRuleUpdateEvent.toString"]},{"name":"open override fun toString(): String","description":"dev.kord.core.event.channel.CategoryCreateEvent.toString","location":"core/dev.kord.core.event.channel/-category-create-event/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.kord.core.event.channel.CategoryCreateEvent.toString"]},{"name":"open override fun toString(): String","description":"dev.kord.core.event.channel.CategoryDeleteEvent.toString","location":"core/dev.kord.core.event.channel/-category-delete-event/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.kord.core.event.channel.CategoryDeleteEvent.toString"]},{"name":"open override fun toString(): String","description":"dev.kord.core.event.channel.CategoryUpdateEvent.toString","location":"core/dev.kord.core.event.channel/-category-update-event/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.kord.core.event.channel.CategoryUpdateEvent.toString"]},{"name":"open override fun toString(): String","description":"dev.kord.core.event.channel.ChannelPinsUpdateEvent.toString","location":"core/dev.kord.core.event.channel/-channel-pins-update-event/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.kord.core.event.channel.ChannelPinsUpdateEvent.toString"]},{"name":"open override fun toString(): String","description":"dev.kord.core.event.channel.DMChannelCreateEvent.toString","location":"core/dev.kord.core.event.channel/-d-m-channel-create-event/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.kord.core.event.channel.DMChannelCreateEvent.toString"]},{"name":"open override fun toString(): String","description":"dev.kord.core.event.channel.DMChannelDeleteEvent.toString","location":"core/dev.kord.core.event.channel/-d-m-channel-delete-event/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.kord.core.event.channel.DMChannelDeleteEvent.toString"]},{"name":"open override fun toString(): String","description":"dev.kord.core.event.channel.DMChannelUpdateEvent.toString","location":"core/dev.kord.core.event.channel/-d-m-channel-update-event/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.kord.core.event.channel.DMChannelUpdateEvent.toString"]},{"name":"open override fun toString(): String","description":"dev.kord.core.event.channel.NewsChannelCreateEvent.toString","location":"core/dev.kord.core.event.channel/-news-channel-create-event/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.kord.core.event.channel.NewsChannelCreateEvent.toString"]},{"name":"open override fun toString(): String","description":"dev.kord.core.event.channel.NewsChannelDeleteEvent.toString","location":"core/dev.kord.core.event.channel/-news-channel-delete-event/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.kord.core.event.channel.NewsChannelDeleteEvent.toString"]},{"name":"open override fun toString(): String","description":"dev.kord.core.event.channel.NewsChannelUpdateEvent.toString","location":"core/dev.kord.core.event.channel/-news-channel-update-event/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.kord.core.event.channel.NewsChannelUpdateEvent.toString"]},{"name":"open override fun toString(): String","description":"dev.kord.core.event.channel.StageChannelCreateEvent.toString","location":"core/dev.kord.core.event.channel/-stage-channel-create-event/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.kord.core.event.channel.StageChannelCreateEvent.toString"]},{"name":"open override fun toString(): String","description":"dev.kord.core.event.channel.StageChannelDeleteEvent.toString","location":"core/dev.kord.core.event.channel/-stage-channel-delete-event/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.kord.core.event.channel.StageChannelDeleteEvent.toString"]},{"name":"open override fun toString(): String","description":"dev.kord.core.event.channel.StageChannelUpdateEvent.toString","location":"core/dev.kord.core.event.channel/-stage-channel-update-event/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.kord.core.event.channel.StageChannelUpdateEvent.toString"]},{"name":"open override fun toString(): String","description":"dev.kord.core.event.channel.TextChannelCreateEvent.toString","location":"core/dev.kord.core.event.channel/-text-channel-create-event/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.kord.core.event.channel.TextChannelCreateEvent.toString"]},{"name":"open override fun toString(): String","description":"dev.kord.core.event.channel.TextChannelDeleteEvent.toString","location":"core/dev.kord.core.event.channel/-text-channel-delete-event/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.kord.core.event.channel.TextChannelDeleteEvent.toString"]},{"name":"open override fun toString(): String","description":"dev.kord.core.event.channel.TextChannelUpdateEvent.toString","location":"core/dev.kord.core.event.channel/-text-channel-update-event/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.kord.core.event.channel.TextChannelUpdateEvent.toString"]},{"name":"open override fun toString(): String","description":"dev.kord.core.event.channel.TypingStartEvent.toString","location":"core/dev.kord.core.event.channel/-typing-start-event/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.kord.core.event.channel.TypingStartEvent.toString"]},{"name":"open override fun toString(): String","description":"dev.kord.core.event.channel.UnknownChannelCreateEvent.toString","location":"core/dev.kord.core.event.channel/-unknown-channel-create-event/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.kord.core.event.channel.UnknownChannelCreateEvent.toString"]},{"name":"open override fun toString(): String","description":"dev.kord.core.event.channel.UnknownChannelDeleteEvent.toString","location":"core/dev.kord.core.event.channel/-unknown-channel-delete-event/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.kord.core.event.channel.UnknownChannelDeleteEvent.toString"]},{"name":"open override fun toString(): String","description":"dev.kord.core.event.channel.UnknownChannelUpdateEvent.toString","location":"core/dev.kord.core.event.channel/-unknown-channel-update-event/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.kord.core.event.channel.UnknownChannelUpdateEvent.toString"]},{"name":"open override fun toString(): String","description":"dev.kord.core.event.channel.VoiceChannelCreateEvent.toString","location":"core/dev.kord.core.event.channel/-voice-channel-create-event/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.kord.core.event.channel.VoiceChannelCreateEvent.toString"]},{"name":"open override fun toString(): String","description":"dev.kord.core.event.channel.VoiceChannelDeleteEvent.toString","location":"core/dev.kord.core.event.channel/-voice-channel-delete-event/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.kord.core.event.channel.VoiceChannelDeleteEvent.toString"]},{"name":"open override fun toString(): String","description":"dev.kord.core.event.channel.VoiceChannelUpdateEvent.toString","location":"core/dev.kord.core.event.channel/-voice-channel-update-event/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.kord.core.event.channel.VoiceChannelUpdateEvent.toString"]},{"name":"open override fun toString(): String","description":"dev.kord.core.event.channel.thread.NewsChannelThreadCreateEvent.toString","location":"core/dev.kord.core.event.channel.thread/-news-channel-thread-create-event/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.kord.core.event.channel.thread.NewsChannelThreadCreateEvent.toString"]},{"name":"open override fun toString(): String","description":"dev.kord.core.event.channel.thread.NewsChannelThreadDeleteEvent.toString","location":"core/dev.kord.core.event.channel.thread/-news-channel-thread-delete-event/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.kord.core.event.channel.thread.NewsChannelThreadDeleteEvent.toString"]},{"name":"open override fun toString(): String","description":"dev.kord.core.event.channel.thread.NewsChannelThreadUpdateEvent.toString","location":"core/dev.kord.core.event.channel.thread/-news-channel-thread-update-event/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.kord.core.event.channel.thread.NewsChannelThreadUpdateEvent.toString"]},{"name":"open override fun toString(): String","description":"dev.kord.core.event.channel.thread.TextChannelThreadCreateEvent.toString","location":"core/dev.kord.core.event.channel.thread/-text-channel-thread-create-event/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.kord.core.event.channel.thread.TextChannelThreadCreateEvent.toString"]},{"name":"open override fun toString(): String","description":"dev.kord.core.event.channel.thread.TextChannelThreadDeleteEvent.toString","location":"core/dev.kord.core.event.channel.thread/-text-channel-thread-delete-event/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.kord.core.event.channel.thread.TextChannelThreadDeleteEvent.toString"]},{"name":"open override fun toString(): String","description":"dev.kord.core.event.channel.thread.TextChannelThreadUpdateEvent.toString","location":"core/dev.kord.core.event.channel.thread/-text-channel-thread-update-event/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.kord.core.event.channel.thread.TextChannelThreadUpdateEvent.toString"]},{"name":"open override fun toString(): String","description":"dev.kord.core.event.channel.thread.UnknownChannelThreadCreateEvent.toString","location":"core/dev.kord.core.event.channel.thread/-unknown-channel-thread-create-event/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.kord.core.event.channel.thread.UnknownChannelThreadCreateEvent.toString"]},{"name":"open override fun toString(): String","description":"dev.kord.core.event.channel.thread.UnknownChannelThreadDeleteEvent.toString","location":"core/dev.kord.core.event.channel.thread/-unknown-channel-thread-delete-event/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.kord.core.event.channel.thread.UnknownChannelThreadDeleteEvent.toString"]},{"name":"open override fun toString(): String","description":"dev.kord.core.event.channel.thread.UnknownChannelThreadUpdateEvent.toString","location":"core/dev.kord.core.event.channel.thread/-unknown-channel-thread-update-event/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.kord.core.event.channel.thread.UnknownChannelThreadUpdateEvent.toString"]},{"name":"open override fun toString(): String","description":"dev.kord.core.event.gateway.DisconnectEvent.DetachEvent.toString","location":"core/dev.kord.core.event.gateway/-disconnect-event/-detach-event/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.kord.core.event.gateway.DisconnectEvent.DetachEvent.toString"]},{"name":"open override fun toString(): String","description":"dev.kord.core.event.gateway.DisconnectEvent.DiscordCloseEvent.toString","location":"core/dev.kord.core.event.gateway/-disconnect-event/-discord-close-event/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.kord.core.event.gateway.DisconnectEvent.DiscordCloseEvent.toString"]},{"name":"open override fun toString(): String","description":"dev.kord.core.event.gateway.DisconnectEvent.ReconnectingEvent.toString","location":"core/dev.kord.core.event.gateway/-disconnect-event/-reconnecting-event/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.kord.core.event.gateway.DisconnectEvent.ReconnectingEvent.toString"]},{"name":"open override fun toString(): String","description":"dev.kord.core.event.gateway.DisconnectEvent.RetryLimitReachedEvent.toString","location":"core/dev.kord.core.event.gateway/-disconnect-event/-retry-limit-reached-event/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.kord.core.event.gateway.DisconnectEvent.RetryLimitReachedEvent.toString"]},{"name":"open override fun toString(): String","description":"dev.kord.core.event.gateway.DisconnectEvent.SessionReset.toString","location":"core/dev.kord.core.event.gateway/-disconnect-event/-session-reset/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.kord.core.event.gateway.DisconnectEvent.SessionReset.toString"]},{"name":"open override fun toString(): String","description":"dev.kord.core.event.gateway.DisconnectEvent.TimeoutEvent.toString","location":"core/dev.kord.core.event.gateway/-disconnect-event/-timeout-event/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.kord.core.event.gateway.DisconnectEvent.TimeoutEvent.toString"]},{"name":"open override fun toString(): String","description":"dev.kord.core.event.gateway.DisconnectEvent.UserCloseEvent.toString","location":"core/dev.kord.core.event.gateway/-disconnect-event/-user-close-event/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.kord.core.event.gateway.DisconnectEvent.UserCloseEvent.toString"]},{"name":"open override fun toString(): String","description":"dev.kord.core.event.gateway.DisconnectEvent.ZombieConnectionEvent.toString","location":"core/dev.kord.core.event.gateway/-disconnect-event/-zombie-connection-event/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.kord.core.event.gateway.DisconnectEvent.ZombieConnectionEvent.toString"]},{"name":"open override fun toString(): String","description":"dev.kord.core.event.gateway.ReadyEvent.toString","location":"core/dev.kord.core.event.gateway/-ready-event/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.kord.core.event.gateway.ReadyEvent.toString"]},{"name":"open override fun toString(): String","description":"dev.kord.core.event.gateway.ResumedEvent.toString","location":"core/dev.kord.core.event.gateway/-resumed-event/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.kord.core.event.gateway.ResumedEvent.toString"]},{"name":"open override fun toString(): String","description":"dev.kord.core.event.guild.BanAddEvent.toString","location":"core/dev.kord.core.event.guild/-ban-add-event/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.kord.core.event.guild.BanAddEvent.toString"]},{"name":"open override fun toString(): String","description":"dev.kord.core.event.guild.BanRemoveEvent.toString","location":"core/dev.kord.core.event.guild/-ban-remove-event/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.kord.core.event.guild.BanRemoveEvent.toString"]},{"name":"open override fun toString(): String","description":"dev.kord.core.event.guild.EmojisUpdateEvent.toString","location":"core/dev.kord.core.event.guild/-emojis-update-event/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.kord.core.event.guild.EmojisUpdateEvent.toString"]},{"name":"open override fun toString(): String","description":"dev.kord.core.event.guild.GuildCreateEvent.toString","location":"core/dev.kord.core.event.guild/-guild-create-event/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.kord.core.event.guild.GuildCreateEvent.toString"]},{"name":"open override fun toString(): String","description":"dev.kord.core.event.guild.GuildDeleteEvent.toString","location":"core/dev.kord.core.event.guild/-guild-delete-event/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.kord.core.event.guild.GuildDeleteEvent.toString"]},{"name":"open override fun toString(): String","description":"dev.kord.core.event.guild.GuildUpdateEvent.toString","location":"core/dev.kord.core.event.guild/-guild-update-event/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.kord.core.event.guild.GuildUpdateEvent.toString"]},{"name":"open override fun toString(): String","description":"dev.kord.core.event.guild.IntegrationsUpdateEvent.toString","location":"core/dev.kord.core.event.guild/-integrations-update-event/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.kord.core.event.guild.IntegrationsUpdateEvent.toString"]},{"name":"open override fun toString(): String","description":"dev.kord.core.event.guild.InviteCreateEvent.toString","location":"core/dev.kord.core.event.guild/-invite-create-event/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.kord.core.event.guild.InviteCreateEvent.toString"]},{"name":"open override fun toString(): String","description":"dev.kord.core.event.guild.InviteDeleteEvent.toString","location":"core/dev.kord.core.event.guild/-invite-delete-event/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.kord.core.event.guild.InviteDeleteEvent.toString"]},{"name":"open override fun toString(): String","description":"dev.kord.core.event.guild.MemberJoinEvent.toString","location":"core/dev.kord.core.event.guild/-member-join-event/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.kord.core.event.guild.MemberJoinEvent.toString"]},{"name":"open override fun toString(): String","description":"dev.kord.core.event.guild.MemberLeaveEvent.toString","location":"core/dev.kord.core.event.guild/-member-leave-event/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.kord.core.event.guild.MemberLeaveEvent.toString"]},{"name":"open override fun toString(): String","description":"dev.kord.core.event.guild.MemberUpdateEvent.toString","location":"core/dev.kord.core.event.guild/-member-update-event/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.kord.core.event.guild.MemberUpdateEvent.toString"]},{"name":"open override fun toString(): String","description":"dev.kord.core.event.guild.MembersChunkEvent.toString","location":"core/dev.kord.core.event.guild/-members-chunk-event/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.kord.core.event.guild.MembersChunkEvent.toString"]},{"name":"open override fun toString(): String","description":"dev.kord.core.event.guild.VoiceServerUpdateEvent.toString","location":"core/dev.kord.core.event.guild/-voice-server-update-event/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.kord.core.event.guild.VoiceServerUpdateEvent.toString"]},{"name":"open override fun toString(): String","description":"dev.kord.core.event.guild.WebhookUpdateEvent.toString","location":"core/dev.kord.core.event.guild/-webhook-update-event/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.kord.core.event.guild.WebhookUpdateEvent.toString"]},{"name":"open override fun toString(): String","description":"dev.kord.core.event.message.MessageBulkDeleteEvent.toString","location":"core/dev.kord.core.event.message/-message-bulk-delete-event/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.kord.core.event.message.MessageBulkDeleteEvent.toString"]},{"name":"open override fun toString(): String","description":"dev.kord.core.event.message.MessageCreateEvent.toString","location":"core/dev.kord.core.event.message/-message-create-event/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.kord.core.event.message.MessageCreateEvent.toString"]},{"name":"open override fun toString(): String","description":"dev.kord.core.event.message.MessageDeleteEvent.toString","location":"core/dev.kord.core.event.message/-message-delete-event/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.kord.core.event.message.MessageDeleteEvent.toString"]},{"name":"open override fun toString(): String","description":"dev.kord.core.event.message.MessageUpdateEvent.toString","location":"core/dev.kord.core.event.message/-message-update-event/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.kord.core.event.message.MessageUpdateEvent.toString"]},{"name":"open override fun toString(): String","description":"dev.kord.core.event.message.ReactionAddEvent.toString","location":"core/dev.kord.core.event.message/-reaction-add-event/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.kord.core.event.message.ReactionAddEvent.toString"]},{"name":"open override fun toString(): String","description":"dev.kord.core.event.message.ReactionRemoveAllEvent.toString","location":"core/dev.kord.core.event.message/-reaction-remove-all-event/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.kord.core.event.message.ReactionRemoveAllEvent.toString"]},{"name":"open override fun toString(): String","description":"dev.kord.core.event.message.ReactionRemoveEmojiEvent.toString","location":"core/dev.kord.core.event.message/-reaction-remove-emoji-event/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.kord.core.event.message.ReactionRemoveEmojiEvent.toString"]},{"name":"open override fun toString(): String","description":"dev.kord.core.event.message.ReactionRemoveEvent.toString","location":"core/dev.kord.core.event.message/-reaction-remove-event/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.kord.core.event.message.ReactionRemoveEvent.toString"]},{"name":"open override fun toString(): String","description":"dev.kord.core.event.role.RoleCreateEvent.toString","location":"core/dev.kord.core.event.role/-role-create-event/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.kord.core.event.role.RoleCreateEvent.toString"]},{"name":"open override fun toString(): String","description":"dev.kord.core.event.role.RoleDeleteEvent.toString","location":"core/dev.kord.core.event.role/-role-delete-event/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.kord.core.event.role.RoleDeleteEvent.toString"]},{"name":"open override fun toString(): String","description":"dev.kord.core.event.role.RoleUpdateEvent.toString","location":"core/dev.kord.core.event.role/-role-update-event/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.kord.core.event.role.RoleUpdateEvent.toString"]},{"name":"open override fun toString(): String","description":"dev.kord.core.event.user.PresenceUpdateEvent.toString","location":"core/dev.kord.core.event.user/-presence-update-event/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.kord.core.event.user.PresenceUpdateEvent.toString"]},{"name":"open override fun toString(): String","description":"dev.kord.core.event.user.UserUpdateEvent.toString","location":"core/dev.kord.core.event.user/-user-update-event/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.kord.core.event.user.UserUpdateEvent.toString"]},{"name":"open override fun toString(): String","description":"dev.kord.core.event.user.VoiceStateUpdateEvent.toString","location":"core/dev.kord.core.event.user/-voice-state-update-event/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.kord.core.event.user.VoiceStateUpdateEvent.toString"]},{"name":"open override fun toString(): String","description":"dev.kord.core.gateway.DefaultMasterGateway.toString","location":"core/dev.kord.core.gateway/-default-master-gateway/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.kord.core.gateway.DefaultMasterGateway.toString"]},{"name":"open override fun toString(): String","description":"dev.kord.core.supplier.CacheEntitySupplier.toString","location":"core/dev.kord.core.supplier/-cache-entity-supplier/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.kord.core.supplier.CacheEntitySupplier.toString"]},{"name":"open override fun toString(): String","description":"dev.kord.core.supplier.RestEntitySupplier.toString","location":"core/dev.kord.core.supplier/-rest-entity-supplier/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.kord.core.supplier.RestEntitySupplier.toString"]},{"name":"open override fun toString(): String","description":"dev.kord.core.supplier.StoreEntitySupplier.toString","location":"core/dev.kord.core.supplier/-store-entity-supplier/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.kord.core.supplier.StoreEntitySupplier.toString"]},{"name":"open override fun withStrategy(strategy: EntitySupplyStrategy<*>): ActionInteractionBehavior","description":"dev.kord.core.behavior.interaction.ActionInteractionBehavior.withStrategy","location":"core/dev.kord.core.behavior.interaction/-action-interaction-behavior/with-strategy.html","searchKeys":["withStrategy","open override fun withStrategy(strategy: EntitySupplyStrategy<*>): ActionInteractionBehavior","dev.kord.core.behavior.interaction.ActionInteractionBehavior.withStrategy"]},{"name":"open override fun withStrategy(strategy: EntitySupplyStrategy<*>): Application","description":"dev.kord.core.entity.Application.withStrategy","location":"core/dev.kord.core.entity/-application/with-strategy.html","searchKeys":["withStrategy","open override fun withStrategy(strategy: EntitySupplyStrategy<*>): Application","dev.kord.core.entity.Application.withStrategy"]},{"name":"open override fun withStrategy(strategy: EntitySupplyStrategy<*>): ApplicationCommandInteractionBehavior","description":"dev.kord.core.behavior.interaction.ApplicationCommandInteractionBehavior.withStrategy","location":"core/dev.kord.core.behavior.interaction/-application-command-interaction-behavior/with-strategy.html","searchKeys":["withStrategy","open override fun withStrategy(strategy: EntitySupplyStrategy<*>): ApplicationCommandInteractionBehavior","dev.kord.core.behavior.interaction.ApplicationCommandInteractionBehavior.withStrategy"]},{"name":"open override fun withStrategy(strategy: EntitySupplyStrategy<*>): AutoModerationActionExecutionEvent","description":"dev.kord.core.event.automoderation.AutoModerationActionExecutionEvent.withStrategy","location":"core/dev.kord.core.event.automoderation/-auto-moderation-action-execution-event/with-strategy.html","searchKeys":["withStrategy","open override fun withStrategy(strategy: EntitySupplyStrategy<*>): AutoModerationActionExecutionEvent","dev.kord.core.event.automoderation.AutoModerationActionExecutionEvent.withStrategy"]},{"name":"open override fun withStrategy(strategy: EntitySupplyStrategy<*>): AutoModerationRuleCreateEvent","description":"dev.kord.core.event.automoderation.AutoModerationRuleCreateEvent.withStrategy","location":"core/dev.kord.core.event.automoderation/-auto-moderation-rule-create-event/with-strategy.html","searchKeys":["withStrategy","open override fun withStrategy(strategy: EntitySupplyStrategy<*>): AutoModerationRuleCreateEvent","dev.kord.core.event.automoderation.AutoModerationRuleCreateEvent.withStrategy"]},{"name":"open override fun withStrategy(strategy: EntitySupplyStrategy<*>): AutoModerationRuleDeleteEvent","description":"dev.kord.core.event.automoderation.AutoModerationRuleDeleteEvent.withStrategy","location":"core/dev.kord.core.event.automoderation/-auto-moderation-rule-delete-event/with-strategy.html","searchKeys":["withStrategy","open override fun withStrategy(strategy: EntitySupplyStrategy<*>): AutoModerationRuleDeleteEvent","dev.kord.core.event.automoderation.AutoModerationRuleDeleteEvent.withStrategy"]},{"name":"open override fun withStrategy(strategy: EntitySupplyStrategy<*>): AutoModerationRuleUpdateEvent","description":"dev.kord.core.event.automoderation.AutoModerationRuleUpdateEvent.withStrategy","location":"core/dev.kord.core.event.automoderation/-auto-moderation-rule-update-event/with-strategy.html","searchKeys":["withStrategy","open override fun withStrategy(strategy: EntitySupplyStrategy<*>): AutoModerationRuleUpdateEvent","dev.kord.core.event.automoderation.AutoModerationRuleUpdateEvent.withStrategy"]},{"name":"open override fun withStrategy(strategy: EntitySupplyStrategy<*>): Ban","description":"dev.kord.core.entity.Ban.withStrategy","location":"core/dev.kord.core.entity/-ban/with-strategy.html","searchKeys":["withStrategy","open override fun withStrategy(strategy: EntitySupplyStrategy<*>): Ban","dev.kord.core.entity.Ban.withStrategy"]},{"name":"open override fun withStrategy(strategy: EntitySupplyStrategy<*>): BanAddEvent","description":"dev.kord.core.event.guild.BanAddEvent.withStrategy","location":"core/dev.kord.core.event.guild/-ban-add-event/with-strategy.html","searchKeys":["withStrategy","open override fun withStrategy(strategy: EntitySupplyStrategy<*>): BanAddEvent","dev.kord.core.event.guild.BanAddEvent.withStrategy"]},{"name":"open override fun withStrategy(strategy: EntitySupplyStrategy<*>): BanRemoveEvent","description":"dev.kord.core.event.guild.BanRemoveEvent.withStrategy","location":"core/dev.kord.core.event.guild/-ban-remove-event/with-strategy.html","searchKeys":["withStrategy","open override fun withStrategy(strategy: EntitySupplyStrategy<*>): BanRemoveEvent","dev.kord.core.event.guild.BanRemoveEvent.withStrategy"]},{"name":"open override fun withStrategy(strategy: EntitySupplyStrategy<*>): CategorizableChannelBehavior","description":"dev.kord.core.behavior.channel.CategorizableChannelBehavior.withStrategy","location":"core/dev.kord.core.behavior.channel/-categorizable-channel-behavior/with-strategy.html","searchKeys":["withStrategy","open override fun withStrategy(strategy: EntitySupplyStrategy<*>): CategorizableChannelBehavior","dev.kord.core.behavior.channel.CategorizableChannelBehavior.withStrategy"]},{"name":"open override fun withStrategy(strategy: EntitySupplyStrategy<*>): Category","description":"dev.kord.core.entity.channel.Category.withStrategy","location":"core/dev.kord.core.entity.channel/-category/with-strategy.html","searchKeys":["withStrategy","open override fun withStrategy(strategy: EntitySupplyStrategy<*>): Category","dev.kord.core.entity.channel.Category.withStrategy"]},{"name":"open override fun withStrategy(strategy: EntitySupplyStrategy<*>): CategoryBehavior","description":"dev.kord.core.behavior.channel.CategoryBehavior.withStrategy","location":"core/dev.kord.core.behavior.channel/-category-behavior/with-strategy.html","searchKeys":["withStrategy","open override fun withStrategy(strategy: EntitySupplyStrategy<*>): CategoryBehavior","dev.kord.core.behavior.channel.CategoryBehavior.withStrategy"]},{"name":"open override fun withStrategy(strategy: EntitySupplyStrategy<*>): Channel","description":"dev.kord.core.entity.channel.Channel.withStrategy","location":"core/dev.kord.core.entity.channel/-channel/with-strategy.html","searchKeys":["withStrategy","open override fun withStrategy(strategy: EntitySupplyStrategy<*>): Channel","dev.kord.core.entity.channel.Channel.withStrategy"]},{"name":"open override fun withStrategy(strategy: EntitySupplyStrategy<*>): ChannelBehavior","description":"dev.kord.core.behavior.channel.ChannelBehavior.withStrategy","location":"core/dev.kord.core.behavior.channel/-channel-behavior/with-strategy.html","searchKeys":["withStrategy","open override fun withStrategy(strategy: EntitySupplyStrategy<*>): ChannelBehavior","dev.kord.core.behavior.channel.ChannelBehavior.withStrategy"]},{"name":"open override fun withStrategy(strategy: EntitySupplyStrategy<*>): ChannelPinsUpdateEvent","description":"dev.kord.core.event.channel.ChannelPinsUpdateEvent.withStrategy","location":"core/dev.kord.core.event.channel/-channel-pins-update-event/with-strategy.html","searchKeys":["withStrategy","open override fun withStrategy(strategy: EntitySupplyStrategy<*>): ChannelPinsUpdateEvent","dev.kord.core.event.channel.ChannelPinsUpdateEvent.withStrategy"]},{"name":"open override fun withStrategy(strategy: EntitySupplyStrategy<*>): ComponentInteractionBehavior","description":"dev.kord.core.behavior.interaction.ComponentInteractionBehavior.withStrategy","location":"core/dev.kord.core.behavior.interaction/-component-interaction-behavior/with-strategy.html","searchKeys":["withStrategy","open override fun withStrategy(strategy: EntitySupplyStrategy<*>): ComponentInteractionBehavior","dev.kord.core.behavior.interaction.ComponentInteractionBehavior.withStrategy"]},{"name":"open override fun withStrategy(strategy: EntitySupplyStrategy<*>): DeferredEphemeralMessageInteractionResponseBehavior","description":"dev.kord.core.behavior.interaction.response.DeferredEphemeralMessageInteractionResponseBehavior.withStrategy","location":"core/dev.kord.core.behavior.interaction.response/-deferred-ephemeral-message-interaction-response-behavior/with-strategy.html","searchKeys":["withStrategy","open override fun withStrategy(strategy: EntitySupplyStrategy<*>): DeferredEphemeralMessageInteractionResponseBehavior","dev.kord.core.behavior.interaction.response.DeferredEphemeralMessageInteractionResponseBehavior.withStrategy"]},{"name":"open override fun withStrategy(strategy: EntitySupplyStrategy<*>): DeferredPublicMessageInteractionResponseBehavior","description":"dev.kord.core.behavior.interaction.response.DeferredPublicMessageInteractionResponseBehavior.withStrategy","location":"core/dev.kord.core.behavior.interaction.response/-deferred-public-message-interaction-response-behavior/with-strategy.html","searchKeys":["withStrategy","open override fun withStrategy(strategy: EntitySupplyStrategy<*>): DeferredPublicMessageInteractionResponseBehavior","dev.kord.core.behavior.interaction.response.DeferredPublicMessageInteractionResponseBehavior.withStrategy"]},{"name":"open override fun withStrategy(strategy: EntitySupplyStrategy<*>): DeletedThreadChannel","description":"dev.kord.core.entity.channel.thread.DeletedThreadChannel.withStrategy","location":"core/dev.kord.core.entity.channel.thread/-deleted-thread-channel/with-strategy.html","searchKeys":["withStrategy","open override fun withStrategy(strategy: EntitySupplyStrategy<*>): DeletedThreadChannel","dev.kord.core.entity.channel.thread.DeletedThreadChannel.withStrategy"]},{"name":"open override fun withStrategy(strategy: EntitySupplyStrategy<*>): DmChannel","description":"dev.kord.core.entity.channel.DmChannel.withStrategy","location":"core/dev.kord.core.entity.channel/-dm-channel/with-strategy.html","searchKeys":["withStrategy","open override fun withStrategy(strategy: EntitySupplyStrategy<*>): DmChannel","dev.kord.core.entity.channel.DmChannel.withStrategy"]},{"name":"open override fun withStrategy(strategy: EntitySupplyStrategy<*>): EmojisUpdateEvent","description":"dev.kord.core.event.guild.EmojisUpdateEvent.withStrategy","location":"core/dev.kord.core.event.guild/-emojis-update-event/with-strategy.html","searchKeys":["withStrategy","open override fun withStrategy(strategy: EntitySupplyStrategy<*>): EmojisUpdateEvent","dev.kord.core.event.guild.EmojisUpdateEvent.withStrategy"]},{"name":"open override fun withStrategy(strategy: EntitySupplyStrategy<*>): EphemeralFollowupMessage","description":"dev.kord.core.entity.interaction.followup.EphemeralFollowupMessage.withStrategy","location":"core/dev.kord.core.entity.interaction.followup/-ephemeral-followup-message/with-strategy.html","searchKeys":["withStrategy","open override fun withStrategy(strategy: EntitySupplyStrategy<*>): EphemeralFollowupMessage","dev.kord.core.entity.interaction.followup.EphemeralFollowupMessage.withStrategy"]},{"name":"open override fun withStrategy(strategy: EntitySupplyStrategy<*>): EphemeralFollowupMessageBehavior","description":"dev.kord.core.behavior.interaction.followup.EphemeralFollowupMessageBehavior.withStrategy","location":"core/dev.kord.core.behavior.interaction.followup/-ephemeral-followup-message-behavior/with-strategy.html","searchKeys":["withStrategy","open override fun withStrategy(strategy: EntitySupplyStrategy<*>): EphemeralFollowupMessageBehavior","dev.kord.core.behavior.interaction.followup.EphemeralFollowupMessageBehavior.withStrategy"]},{"name":"open override fun withStrategy(strategy: EntitySupplyStrategy<*>): EphemeralMessageInteractionResponse","description":"dev.kord.core.entity.interaction.response.EphemeralMessageInteractionResponse.withStrategy","location":"core/dev.kord.core.entity.interaction.response/-ephemeral-message-interaction-response/with-strategy.html","searchKeys":["withStrategy","open override fun withStrategy(strategy: EntitySupplyStrategy<*>): EphemeralMessageInteractionResponse","dev.kord.core.entity.interaction.response.EphemeralMessageInteractionResponse.withStrategy"]},{"name":"open override fun withStrategy(strategy: EntitySupplyStrategy<*>): EphemeralMessageInteractionResponseBehavior","description":"dev.kord.core.behavior.interaction.response.EphemeralMessageInteractionResponseBehavior.withStrategy","location":"core/dev.kord.core.behavior.interaction.response/-ephemeral-message-interaction-response-behavior/with-strategy.html","searchKeys":["withStrategy","open override fun withStrategy(strategy: EntitySupplyStrategy<*>): EphemeralMessageInteractionResponseBehavior","dev.kord.core.behavior.interaction.response.EphemeralMessageInteractionResponseBehavior.withStrategy"]},{"name":"open override fun withStrategy(strategy: EntitySupplyStrategy<*>): FollowupPermittingInteractionResponseBehavior","description":"dev.kord.core.behavior.interaction.response.FollowupPermittingInteractionResponseBehavior.withStrategy","location":"core/dev.kord.core.behavior.interaction.response/-followup-permitting-interaction-response-behavior/with-strategy.html","searchKeys":["withStrategy","open override fun withStrategy(strategy: EntitySupplyStrategy<*>): FollowupPermittingInteractionResponseBehavior","dev.kord.core.behavior.interaction.response.FollowupPermittingInteractionResponseBehavior.withStrategy"]},{"name":"open override fun withStrategy(strategy: EntitySupplyStrategy<*>): GlobalApplicationCommandInteraction","description":"dev.kord.core.entity.interaction.GlobalApplicationCommandInteraction.withStrategy","location":"core/dev.kord.core.entity.interaction/-global-application-command-interaction/with-strategy.html","searchKeys":["withStrategy","open override fun withStrategy(strategy: EntitySupplyStrategy<*>): GlobalApplicationCommandInteraction","dev.kord.core.entity.interaction.GlobalApplicationCommandInteraction.withStrategy"]},{"name":"open override fun withStrategy(strategy: EntitySupplyStrategy<*>): GlobalAutoCompleteInteraction","description":"dev.kord.core.entity.interaction.GlobalAutoCompleteInteraction.withStrategy","location":"core/dev.kord.core.entity.interaction/-global-auto-complete-interaction/with-strategy.html","searchKeys":["withStrategy","open override fun withStrategy(strategy: EntitySupplyStrategy<*>): GlobalAutoCompleteInteraction","dev.kord.core.entity.interaction.GlobalAutoCompleteInteraction.withStrategy"]},{"name":"open override fun withStrategy(strategy: EntitySupplyStrategy<*>): GlobalButtonInteraction","description":"dev.kord.core.entity.interaction.GlobalButtonInteraction.withStrategy","location":"core/dev.kord.core.entity.interaction/-global-button-interaction/with-strategy.html","searchKeys":["withStrategy","open override fun withStrategy(strategy: EntitySupplyStrategy<*>): GlobalButtonInteraction","dev.kord.core.entity.interaction.GlobalButtonInteraction.withStrategy"]},{"name":"open override fun withStrategy(strategy: EntitySupplyStrategy<*>): GlobalChatInputCommandInteraction","description":"dev.kord.core.entity.interaction.GlobalChatInputCommandInteraction.withStrategy","location":"core/dev.kord.core.entity.interaction/-global-chat-input-command-interaction/with-strategy.html","searchKeys":["withStrategy","open override fun withStrategy(strategy: EntitySupplyStrategy<*>): GlobalChatInputCommandInteraction","dev.kord.core.entity.interaction.GlobalChatInputCommandInteraction.withStrategy"]},{"name":"open override fun withStrategy(strategy: EntitySupplyStrategy<*>): GlobalMessageCommandInteraction","description":"dev.kord.core.entity.interaction.GlobalMessageCommandInteraction.withStrategy","location":"core/dev.kord.core.entity.interaction/-global-message-command-interaction/with-strategy.html","searchKeys":["withStrategy","open override fun withStrategy(strategy: EntitySupplyStrategy<*>): GlobalMessageCommandInteraction","dev.kord.core.entity.interaction.GlobalMessageCommandInteraction.withStrategy"]},{"name":"open override fun withStrategy(strategy: EntitySupplyStrategy<*>): GlobalModalSubmitInteraction","description":"dev.kord.core.entity.interaction.GlobalModalSubmitInteraction.withStrategy","location":"core/dev.kord.core.entity.interaction/-global-modal-submit-interaction/with-strategy.html","searchKeys":["withStrategy","open override fun withStrategy(strategy: EntitySupplyStrategy<*>): GlobalModalSubmitInteraction","dev.kord.core.entity.interaction.GlobalModalSubmitInteraction.withStrategy"]},{"name":"open override fun withStrategy(strategy: EntitySupplyStrategy<*>): GlobalSelectMenuInteraction","description":"dev.kord.core.entity.interaction.GlobalSelectMenuInteraction.withStrategy","location":"core/dev.kord.core.entity.interaction/-global-select-menu-interaction/with-strategy.html","searchKeys":["withStrategy","open override fun withStrategy(strategy: EntitySupplyStrategy<*>): GlobalSelectMenuInteraction","dev.kord.core.entity.interaction.GlobalSelectMenuInteraction.withStrategy"]},{"name":"open override fun withStrategy(strategy: EntitySupplyStrategy<*>): GlobalUserCommandInteraction","description":"dev.kord.core.entity.interaction.GlobalUserCommandInteraction.withStrategy","location":"core/dev.kord.core.entity.interaction/-global-user-command-interaction/with-strategy.html","searchKeys":["withStrategy","open override fun withStrategy(strategy: EntitySupplyStrategy<*>): GlobalUserCommandInteraction","dev.kord.core.entity.interaction.GlobalUserCommandInteraction.withStrategy"]},{"name":"open override fun withStrategy(strategy: EntitySupplyStrategy<*>): Guild","description":"dev.kord.core.entity.Guild.withStrategy","location":"core/dev.kord.core.entity/-guild/with-strategy.html","searchKeys":["withStrategy","open override fun withStrategy(strategy: EntitySupplyStrategy<*>): Guild","dev.kord.core.entity.Guild.withStrategy"]},{"name":"open override fun withStrategy(strategy: EntitySupplyStrategy<*>): GuildApplicationCommandInteraction","description":"dev.kord.core.entity.interaction.GuildApplicationCommandInteraction.withStrategy","location":"core/dev.kord.core.entity.interaction/-guild-application-command-interaction/with-strategy.html","searchKeys":["withStrategy","open override fun withStrategy(strategy: EntitySupplyStrategy<*>): GuildApplicationCommandInteraction","dev.kord.core.entity.interaction.GuildApplicationCommandInteraction.withStrategy"]},{"name":"open override fun withStrategy(strategy: EntitySupplyStrategy<*>): GuildAutoCompleteInteraction","description":"dev.kord.core.entity.interaction.GuildAutoCompleteInteraction.withStrategy","location":"core/dev.kord.core.entity.interaction/-guild-auto-complete-interaction/with-strategy.html","searchKeys":["withStrategy","open override fun withStrategy(strategy: EntitySupplyStrategy<*>): GuildAutoCompleteInteraction","dev.kord.core.entity.interaction.GuildAutoCompleteInteraction.withStrategy"]},{"name":"open override fun withStrategy(strategy: EntitySupplyStrategy<*>): GuildBehavior","description":"dev.kord.core.behavior.GuildBehavior.withStrategy","location":"core/dev.kord.core.behavior/-guild-behavior/with-strategy.html","searchKeys":["withStrategy","open override fun withStrategy(strategy: EntitySupplyStrategy<*>): GuildBehavior","dev.kord.core.behavior.GuildBehavior.withStrategy"]},{"name":"open override fun withStrategy(strategy: EntitySupplyStrategy<*>): GuildButtonInteraction","description":"dev.kord.core.entity.interaction.GuildButtonInteraction.withStrategy","location":"core/dev.kord.core.entity.interaction/-guild-button-interaction/with-strategy.html","searchKeys":["withStrategy","open override fun withStrategy(strategy: EntitySupplyStrategy<*>): GuildButtonInteraction","dev.kord.core.entity.interaction.GuildButtonInteraction.withStrategy"]},{"name":"open override fun withStrategy(strategy: EntitySupplyStrategy<*>): GuildChannelBehavior","description":"dev.kord.core.behavior.channel.GuildChannelBehavior.withStrategy","location":"core/dev.kord.core.behavior.channel/-guild-channel-behavior/with-strategy.html","searchKeys":["withStrategy","open override fun withStrategy(strategy: EntitySupplyStrategy<*>): GuildChannelBehavior","dev.kord.core.behavior.channel.GuildChannelBehavior.withStrategy"]},{"name":"open override fun withStrategy(strategy: EntitySupplyStrategy<*>): GuildChatInputCommandInteraction","description":"dev.kord.core.entity.interaction.GuildChatInputCommandInteraction.withStrategy","location":"core/dev.kord.core.entity.interaction/-guild-chat-input-command-interaction/with-strategy.html","searchKeys":["withStrategy","open override fun withStrategy(strategy: EntitySupplyStrategy<*>): GuildChatInputCommandInteraction","dev.kord.core.entity.interaction.GuildChatInputCommandInteraction.withStrategy"]},{"name":"open override fun withStrategy(strategy: EntitySupplyStrategy<*>): GuildEmoji","description":"dev.kord.core.entity.GuildEmoji.withStrategy","location":"core/dev.kord.core.entity/-guild-emoji/with-strategy.html","searchKeys":["withStrategy","open override fun withStrategy(strategy: EntitySupplyStrategy<*>): GuildEmoji","dev.kord.core.entity.GuildEmoji.withStrategy"]},{"name":"open override fun withStrategy(strategy: EntitySupplyStrategy<*>): GuildEmojiBehavior","description":"dev.kord.core.behavior.GuildEmojiBehavior.withStrategy","location":"core/dev.kord.core.behavior/-guild-emoji-behavior/with-strategy.html","searchKeys":["withStrategy","open override fun withStrategy(strategy: EntitySupplyStrategy<*>): GuildEmojiBehavior","dev.kord.core.behavior.GuildEmojiBehavior.withStrategy"]},{"name":"open override fun withStrategy(strategy: EntitySupplyStrategy<*>): GuildInteractionBehavior","description":"dev.kord.core.behavior.interaction.GuildInteractionBehavior.withStrategy","location":"core/dev.kord.core.behavior.interaction/-guild-interaction-behavior/with-strategy.html","searchKeys":["withStrategy","open override fun withStrategy(strategy: EntitySupplyStrategy<*>): GuildInteractionBehavior","dev.kord.core.behavior.interaction.GuildInteractionBehavior.withStrategy"]},{"name":"open override fun withStrategy(strategy: EntitySupplyStrategy<*>): GuildMessageChannelBehavior","description":"dev.kord.core.behavior.channel.GuildMessageChannelBehavior.withStrategy","location":"core/dev.kord.core.behavior.channel/-guild-message-channel-behavior/with-strategy.html","searchKeys":["withStrategy","open override fun withStrategy(strategy: EntitySupplyStrategy<*>): GuildMessageChannelBehavior","dev.kord.core.behavior.channel.GuildMessageChannelBehavior.withStrategy"]},{"name":"open override fun withStrategy(strategy: EntitySupplyStrategy<*>): GuildMessageCommandInteraction","description":"dev.kord.core.entity.interaction.GuildMessageCommandInteraction.withStrategy","location":"core/dev.kord.core.entity.interaction/-guild-message-command-interaction/with-strategy.html","searchKeys":["withStrategy","open override fun withStrategy(strategy: EntitySupplyStrategy<*>): GuildMessageCommandInteraction","dev.kord.core.entity.interaction.GuildMessageCommandInteraction.withStrategy"]},{"name":"open override fun withStrategy(strategy: EntitySupplyStrategy<*>): GuildModalSubmitInteraction","description":"dev.kord.core.entity.interaction.GuildModalSubmitInteraction.withStrategy","location":"core/dev.kord.core.entity.interaction/-guild-modal-submit-interaction/with-strategy.html","searchKeys":["withStrategy","open override fun withStrategy(strategy: EntitySupplyStrategy<*>): GuildModalSubmitInteraction","dev.kord.core.entity.interaction.GuildModalSubmitInteraction.withStrategy"]},{"name":"open override fun withStrategy(strategy: EntitySupplyStrategy<*>): GuildScheduledEventCreateEvent","description":"dev.kord.core.event.guild.GuildScheduledEventCreateEvent.withStrategy","location":"core/dev.kord.core.event.guild/-guild-scheduled-event-create-event/with-strategy.html","searchKeys":["withStrategy","open override fun withStrategy(strategy: EntitySupplyStrategy<*>): GuildScheduledEventCreateEvent","dev.kord.core.event.guild.GuildScheduledEventCreateEvent.withStrategy"]},{"name":"open override fun withStrategy(strategy: EntitySupplyStrategy<*>): GuildScheduledEventDeleteEvent","description":"dev.kord.core.event.guild.GuildScheduledEventDeleteEvent.withStrategy","location":"core/dev.kord.core.event.guild/-guild-scheduled-event-delete-event/with-strategy.html","searchKeys":["withStrategy","open override fun withStrategy(strategy: EntitySupplyStrategy<*>): GuildScheduledEventDeleteEvent","dev.kord.core.event.guild.GuildScheduledEventDeleteEvent.withStrategy"]},{"name":"open override fun withStrategy(strategy: EntitySupplyStrategy<*>): GuildScheduledEventUpdateEvent","description":"dev.kord.core.event.guild.GuildScheduledEventUpdateEvent.withStrategy","location":"core/dev.kord.core.event.guild/-guild-scheduled-event-update-event/with-strategy.html","searchKeys":["withStrategy","open override fun withStrategy(strategy: EntitySupplyStrategy<*>): GuildScheduledEventUpdateEvent","dev.kord.core.event.guild.GuildScheduledEventUpdateEvent.withStrategy"]},{"name":"open override fun withStrategy(strategy: EntitySupplyStrategy<*>): GuildScheduledEventUserAddEvent","description":"dev.kord.core.event.guild.GuildScheduledEventUserAddEvent.withStrategy","location":"core/dev.kord.core.event.guild/-guild-scheduled-event-user-add-event/with-strategy.html","searchKeys":["withStrategy","open override fun withStrategy(strategy: EntitySupplyStrategy<*>): GuildScheduledEventUserAddEvent","dev.kord.core.event.guild.GuildScheduledEventUserAddEvent.withStrategy"]},{"name":"open override fun withStrategy(strategy: EntitySupplyStrategy<*>): GuildScheduledEventUserRemoveEvent","description":"dev.kord.core.event.guild.GuildScheduledEventUserRemoveEvent.withStrategy","location":"core/dev.kord.core.event.guild/-guild-scheduled-event-user-remove-event/with-strategy.html","searchKeys":["withStrategy","open override fun withStrategy(strategy: EntitySupplyStrategy<*>): GuildScheduledEventUserRemoveEvent","dev.kord.core.event.guild.GuildScheduledEventUserRemoveEvent.withStrategy"]},{"name":"open override fun withStrategy(strategy: EntitySupplyStrategy<*>): GuildSelectMenuInteraction","description":"dev.kord.core.entity.interaction.GuildSelectMenuInteraction.withStrategy","location":"core/dev.kord.core.entity.interaction/-guild-select-menu-interaction/with-strategy.html","searchKeys":["withStrategy","open override fun withStrategy(strategy: EntitySupplyStrategy<*>): GuildSelectMenuInteraction","dev.kord.core.entity.interaction.GuildSelectMenuInteraction.withStrategy"]},{"name":"open override fun withStrategy(strategy: EntitySupplyStrategy<*>): GuildUserCommandInteraction","description":"dev.kord.core.entity.interaction.GuildUserCommandInteraction.withStrategy","location":"core/dev.kord.core.entity.interaction/-guild-user-command-interaction/with-strategy.html","searchKeys":["withStrategy","open override fun withStrategy(strategy: EntitySupplyStrategy<*>): GuildUserCommandInteraction","dev.kord.core.entity.interaction.GuildUserCommandInteraction.withStrategy"]},{"name":"open override fun withStrategy(strategy: EntitySupplyStrategy<*>): GuildWidget","description":"dev.kord.core.entity.GuildWidget.withStrategy","location":"core/dev.kord.core.entity/-guild-widget/with-strategy.html","searchKeys":["withStrategy","open override fun withStrategy(strategy: EntitySupplyStrategy<*>): GuildWidget","dev.kord.core.entity.GuildWidget.withStrategy"]},{"name":"open override fun withStrategy(strategy: EntitySupplyStrategy<*>): Integration","description":"dev.kord.core.entity.Integration.withStrategy","location":"core/dev.kord.core.entity/-integration/with-strategy.html","searchKeys":["withStrategy","open override fun withStrategy(strategy: EntitySupplyStrategy<*>): Integration","dev.kord.core.entity.Integration.withStrategy"]},{"name":"open override fun withStrategy(strategy: EntitySupplyStrategy<*>): IntegrationsUpdateEvent","description":"dev.kord.core.event.guild.IntegrationsUpdateEvent.withStrategy","location":"core/dev.kord.core.event.guild/-integrations-update-event/with-strategy.html","searchKeys":["withStrategy","open override fun withStrategy(strategy: EntitySupplyStrategy<*>): IntegrationsUpdateEvent","dev.kord.core.event.guild.IntegrationsUpdateEvent.withStrategy"]},{"name":"open override fun withStrategy(strategy: EntitySupplyStrategy<*>): Invite","description":"dev.kord.core.entity.Invite.withStrategy","location":"core/dev.kord.core.entity/-invite/with-strategy.html","searchKeys":["withStrategy","open override fun withStrategy(strategy: EntitySupplyStrategy<*>): Invite","dev.kord.core.entity.Invite.withStrategy"]},{"name":"open override fun withStrategy(strategy: EntitySupplyStrategy<*>): InviteCreateEvent","description":"dev.kord.core.event.guild.InviteCreateEvent.withStrategy","location":"core/dev.kord.core.event.guild/-invite-create-event/with-strategy.html","searchKeys":["withStrategy","open override fun withStrategy(strategy: EntitySupplyStrategy<*>): InviteCreateEvent","dev.kord.core.event.guild.InviteCreateEvent.withStrategy"]},{"name":"open override fun withStrategy(strategy: EntitySupplyStrategy<*>): InviteDeleteEvent","description":"dev.kord.core.event.guild.InviteDeleteEvent.withStrategy","location":"core/dev.kord.core.event.guild/-invite-delete-event/with-strategy.html","searchKeys":["withStrategy","open override fun withStrategy(strategy: EntitySupplyStrategy<*>): InviteDeleteEvent","dev.kord.core.event.guild.InviteDeleteEvent.withStrategy"]},{"name":"open override fun withStrategy(strategy: EntitySupplyStrategy<*>): InviteWithMetadata","description":"dev.kord.core.entity.InviteWithMetadata.withStrategy","location":"core/dev.kord.core.entity/-invite-with-metadata/with-strategy.html","searchKeys":["withStrategy","open override fun withStrategy(strategy: EntitySupplyStrategy<*>): InviteWithMetadata","dev.kord.core.entity.InviteWithMetadata.withStrategy"]},{"name":"open override fun withStrategy(strategy: EntitySupplyStrategy<*>): KeywordAutoModerationRule","description":"dev.kord.core.entity.automoderation.KeywordAutoModerationRule.withStrategy","location":"core/dev.kord.core.entity.automoderation/-keyword-auto-moderation-rule/with-strategy.html","searchKeys":["withStrategy","open override fun withStrategy(strategy: EntitySupplyStrategy<*>): KeywordAutoModerationRule","dev.kord.core.entity.automoderation.KeywordAutoModerationRule.withStrategy"]},{"name":"open override fun withStrategy(strategy: EntitySupplyStrategy<*>): KeywordPresetAutoModerationRule","description":"dev.kord.core.entity.automoderation.KeywordPresetAutoModerationRule.withStrategy","location":"core/dev.kord.core.entity.automoderation/-keyword-preset-auto-moderation-rule/with-strategy.html","searchKeys":["withStrategy","open override fun withStrategy(strategy: EntitySupplyStrategy<*>): KeywordPresetAutoModerationRule","dev.kord.core.entity.automoderation.KeywordPresetAutoModerationRule.withStrategy"]},{"name":"open override fun withStrategy(strategy: EntitySupplyStrategy<*>): Member","description":"dev.kord.core.entity.Member.withStrategy","location":"core/dev.kord.core.entity/-member/with-strategy.html","searchKeys":["withStrategy","open override fun withStrategy(strategy: EntitySupplyStrategy<*>): Member","dev.kord.core.entity.Member.withStrategy"]},{"name":"open override fun withStrategy(strategy: EntitySupplyStrategy<*>): MemberBehavior","description":"dev.kord.core.behavior.MemberBehavior.withStrategy","location":"core/dev.kord.core.behavior/-member-behavior/with-strategy.html","searchKeys":["withStrategy","open override fun withStrategy(strategy: EntitySupplyStrategy<*>): MemberBehavior","dev.kord.core.behavior.MemberBehavior.withStrategy"]},{"name":"open override fun withStrategy(strategy: EntitySupplyStrategy<*>): MemberJoinEvent","description":"dev.kord.core.event.guild.MemberJoinEvent.withStrategy","location":"core/dev.kord.core.event.guild/-member-join-event/with-strategy.html","searchKeys":["withStrategy","open override fun withStrategy(strategy: EntitySupplyStrategy<*>): MemberJoinEvent","dev.kord.core.event.guild.MemberJoinEvent.withStrategy"]},{"name":"open override fun withStrategy(strategy: EntitySupplyStrategy<*>): MemberUpdateEvent","description":"dev.kord.core.event.guild.MemberUpdateEvent.withStrategy","location":"core/dev.kord.core.event.guild/-member-update-event/with-strategy.html","searchKeys":["withStrategy","open override fun withStrategy(strategy: EntitySupplyStrategy<*>): MemberUpdateEvent","dev.kord.core.event.guild.MemberUpdateEvent.withStrategy"]},{"name":"open override fun withStrategy(strategy: EntitySupplyStrategy<*>): MembersChunkEvent","description":"dev.kord.core.event.guild.MembersChunkEvent.withStrategy","location":"core/dev.kord.core.event.guild/-members-chunk-event/with-strategy.html","searchKeys":["withStrategy","open override fun withStrategy(strategy: EntitySupplyStrategy<*>): MembersChunkEvent","dev.kord.core.event.guild.MembersChunkEvent.withStrategy"]},{"name":"open override fun withStrategy(strategy: EntitySupplyStrategy<*>): MentionSpamAutoModerationRule","description":"dev.kord.core.entity.automoderation.MentionSpamAutoModerationRule.withStrategy","location":"core/dev.kord.core.entity.automoderation/-mention-spam-auto-moderation-rule/with-strategy.html","searchKeys":["withStrategy","open override fun withStrategy(strategy: EntitySupplyStrategy<*>): MentionSpamAutoModerationRule","dev.kord.core.entity.automoderation.MentionSpamAutoModerationRule.withStrategy"]},{"name":"open override fun withStrategy(strategy: EntitySupplyStrategy<*>): Message","description":"dev.kord.core.entity.Message.withStrategy","location":"core/dev.kord.core.entity/-message/with-strategy.html","searchKeys":["withStrategy","open override fun withStrategy(strategy: EntitySupplyStrategy<*>): Message","dev.kord.core.entity.Message.withStrategy"]},{"name":"open override fun withStrategy(strategy: EntitySupplyStrategy<*>): Message.Interaction","description":"dev.kord.core.entity.Message.Interaction.withStrategy","location":"core/dev.kord.core.entity/-message/-interaction/with-strategy.html","searchKeys":["withStrategy","open override fun withStrategy(strategy: EntitySupplyStrategy<*>): Message.Interaction","dev.kord.core.entity.Message.Interaction.withStrategy"]},{"name":"open override fun withStrategy(strategy: EntitySupplyStrategy<*>): MessageBehavior","description":"dev.kord.core.behavior.MessageBehavior.withStrategy","location":"core/dev.kord.core.behavior/-message-behavior/with-strategy.html","searchKeys":["withStrategy","open override fun withStrategy(strategy: EntitySupplyStrategy<*>): MessageBehavior","dev.kord.core.behavior.MessageBehavior.withStrategy"]},{"name":"open override fun withStrategy(strategy: EntitySupplyStrategy<*>): MessageBulkDeleteEvent","description":"dev.kord.core.event.message.MessageBulkDeleteEvent.withStrategy","location":"core/dev.kord.core.event.message/-message-bulk-delete-event/with-strategy.html","searchKeys":["withStrategy","open override fun withStrategy(strategy: EntitySupplyStrategy<*>): MessageBulkDeleteEvent","dev.kord.core.event.message.MessageBulkDeleteEvent.withStrategy"]},{"name":"open override fun withStrategy(strategy: EntitySupplyStrategy<*>): MessageChannelBehavior","description":"dev.kord.core.behavior.channel.MessageChannelBehavior.withStrategy","location":"core/dev.kord.core.behavior.channel/-message-channel-behavior/with-strategy.html","searchKeys":["withStrategy","open override fun withStrategy(strategy: EntitySupplyStrategy<*>): MessageChannelBehavior","dev.kord.core.behavior.channel.MessageChannelBehavior.withStrategy"]},{"name":"open override fun withStrategy(strategy: EntitySupplyStrategy<*>): MessageCreateEvent","description":"dev.kord.core.event.message.MessageCreateEvent.withStrategy","location":"core/dev.kord.core.event.message/-message-create-event/with-strategy.html","searchKeys":["withStrategy","open override fun withStrategy(strategy: EntitySupplyStrategy<*>): MessageCreateEvent","dev.kord.core.event.message.MessageCreateEvent.withStrategy"]},{"name":"open override fun withStrategy(strategy: EntitySupplyStrategy<*>): MessageDeleteEvent","description":"dev.kord.core.event.message.MessageDeleteEvent.withStrategy","location":"core/dev.kord.core.event.message/-message-delete-event/with-strategy.html","searchKeys":["withStrategy","open override fun withStrategy(strategy: EntitySupplyStrategy<*>): MessageDeleteEvent","dev.kord.core.event.message.MessageDeleteEvent.withStrategy"]},{"name":"open override fun withStrategy(strategy: EntitySupplyStrategy<*>): MessageUpdateEvent","description":"dev.kord.core.event.message.MessageUpdateEvent.withStrategy","location":"core/dev.kord.core.event.message/-message-update-event/with-strategy.html","searchKeys":["withStrategy","open override fun withStrategy(strategy: EntitySupplyStrategy<*>): MessageUpdateEvent","dev.kord.core.event.message.MessageUpdateEvent.withStrategy"]},{"name":"open override fun withStrategy(strategy: EntitySupplyStrategy<*>): NewsChannel","description":"dev.kord.core.entity.channel.NewsChannel.withStrategy","location":"core/dev.kord.core.entity.channel/-news-channel/with-strategy.html","searchKeys":["withStrategy","open override fun withStrategy(strategy: EntitySupplyStrategy<*>): NewsChannel","dev.kord.core.entity.channel.NewsChannel.withStrategy"]},{"name":"open override fun withStrategy(strategy: EntitySupplyStrategy<*>): NewsChannelBehavior","description":"dev.kord.core.behavior.channel.NewsChannelBehavior.withStrategy","location":"core/dev.kord.core.behavior.channel/-news-channel-behavior/with-strategy.html","searchKeys":["withStrategy","open override fun withStrategy(strategy: EntitySupplyStrategy<*>): NewsChannelBehavior","dev.kord.core.behavior.channel.NewsChannelBehavior.withStrategy"]},{"name":"open override fun withStrategy(strategy: EntitySupplyStrategy<*>): NewsChannelThread","description":"dev.kord.core.entity.channel.thread.NewsChannelThread.withStrategy","location":"core/dev.kord.core.entity.channel.thread/-news-channel-thread/with-strategy.html","searchKeys":["withStrategy","open override fun withStrategy(strategy: EntitySupplyStrategy<*>): NewsChannelThread","dev.kord.core.entity.channel.thread.NewsChannelThread.withStrategy"]},{"name":"open override fun withStrategy(strategy: EntitySupplyStrategy<*>): PartialApplication","description":"dev.kord.core.entity.PartialApplication.withStrategy","location":"core/dev.kord.core.entity/-partial-application/with-strategy.html","searchKeys":["withStrategy","open override fun withStrategy(strategy: EntitySupplyStrategy<*>): PartialApplication","dev.kord.core.entity.PartialApplication.withStrategy"]},{"name":"open override fun withStrategy(strategy: EntitySupplyStrategy<*>): PartialGuild","description":"dev.kord.core.entity.PartialGuild.withStrategy","location":"core/dev.kord.core.entity/-partial-guild/with-strategy.html","searchKeys":["withStrategy","open override fun withStrategy(strategy: EntitySupplyStrategy<*>): PartialGuild","dev.kord.core.entity.PartialGuild.withStrategy"]},{"name":"open override fun withStrategy(strategy: EntitySupplyStrategy<*>): PermissionOverwriteEntity","description":"dev.kord.core.entity.PermissionOverwriteEntity.withStrategy","location":"core/dev.kord.core.entity/-permission-overwrite-entity/with-strategy.html","searchKeys":["withStrategy","open override fun withStrategy(strategy: EntitySupplyStrategy<*>): PermissionOverwriteEntity","dev.kord.core.entity.PermissionOverwriteEntity.withStrategy"]},{"name":"open override fun withStrategy(strategy: EntitySupplyStrategy<*>): PopupInteractionResponseBehavior","description":"dev.kord.core.behavior.interaction.response.PopupInteractionResponseBehavior.withStrategy","location":"core/dev.kord.core.behavior.interaction.response/-popup-interaction-response-behavior/with-strategy.html","searchKeys":["withStrategy","open override fun withStrategy(strategy: EntitySupplyStrategy<*>): PopupInteractionResponseBehavior","dev.kord.core.behavior.interaction.response.PopupInteractionResponseBehavior.withStrategy"]},{"name":"open override fun withStrategy(strategy: EntitySupplyStrategy<*>): Presence","description":"dev.kord.core.entity.Presence.withStrategy","location":"core/dev.kord.core.entity/-presence/with-strategy.html","searchKeys":["withStrategy","open override fun withStrategy(strategy: EntitySupplyStrategy<*>): Presence","dev.kord.core.entity.Presence.withStrategy"]},{"name":"open override fun withStrategy(strategy: EntitySupplyStrategy<*>): PresenceUpdateEvent","description":"dev.kord.core.event.user.PresenceUpdateEvent.withStrategy","location":"core/dev.kord.core.event.user/-presence-update-event/with-strategy.html","searchKeys":["withStrategy","open override fun withStrategy(strategy: EntitySupplyStrategy<*>): PresenceUpdateEvent","dev.kord.core.event.user.PresenceUpdateEvent.withStrategy"]},{"name":"open override fun withStrategy(strategy: EntitySupplyStrategy<*>): PublicFollowupMessage","description":"dev.kord.core.entity.interaction.followup.PublicFollowupMessage.withStrategy","location":"core/dev.kord.core.entity.interaction.followup/-public-followup-message/with-strategy.html","searchKeys":["withStrategy","open override fun withStrategy(strategy: EntitySupplyStrategy<*>): PublicFollowupMessage","dev.kord.core.entity.interaction.followup.PublicFollowupMessage.withStrategy"]},{"name":"open override fun withStrategy(strategy: EntitySupplyStrategy<*>): PublicFollowupMessageBehavior","description":"dev.kord.core.behavior.interaction.followup.PublicFollowupMessageBehavior.withStrategy","location":"core/dev.kord.core.behavior.interaction.followup/-public-followup-message-behavior/with-strategy.html","searchKeys":["withStrategy","open override fun withStrategy(strategy: EntitySupplyStrategy<*>): PublicFollowupMessageBehavior","dev.kord.core.behavior.interaction.followup.PublicFollowupMessageBehavior.withStrategy"]},{"name":"open override fun withStrategy(strategy: EntitySupplyStrategy<*>): PublicMessageInteractionResponse","description":"dev.kord.core.entity.interaction.response.PublicMessageInteractionResponse.withStrategy","location":"core/dev.kord.core.entity.interaction.response/-public-message-interaction-response/with-strategy.html","searchKeys":["withStrategy","open override fun withStrategy(strategy: EntitySupplyStrategy<*>): PublicMessageInteractionResponse","dev.kord.core.entity.interaction.response.PublicMessageInteractionResponse.withStrategy"]},{"name":"open override fun withStrategy(strategy: EntitySupplyStrategy<*>): PublicMessageInteractionResponseBehavior","description":"dev.kord.core.behavior.interaction.response.PublicMessageInteractionResponseBehavior.withStrategy","location":"core/dev.kord.core.behavior.interaction.response/-public-message-interaction-response-behavior/with-strategy.html","searchKeys":["withStrategy","open override fun withStrategy(strategy: EntitySupplyStrategy<*>): PublicMessageInteractionResponseBehavior","dev.kord.core.behavior.interaction.response.PublicMessageInteractionResponseBehavior.withStrategy"]},{"name":"open override fun withStrategy(strategy: EntitySupplyStrategy<*>): ReactionAddEvent","description":"dev.kord.core.event.message.ReactionAddEvent.withStrategy","location":"core/dev.kord.core.event.message/-reaction-add-event/with-strategy.html","searchKeys":["withStrategy","open override fun withStrategy(strategy: EntitySupplyStrategy<*>): ReactionAddEvent","dev.kord.core.event.message.ReactionAddEvent.withStrategy"]},{"name":"open override fun withStrategy(strategy: EntitySupplyStrategy<*>): ReactionRemoveAllEvent","description":"dev.kord.core.event.message.ReactionRemoveAllEvent.withStrategy","location":"core/dev.kord.core.event.message/-reaction-remove-all-event/with-strategy.html","searchKeys":["withStrategy","open override fun withStrategy(strategy: EntitySupplyStrategy<*>): ReactionRemoveAllEvent","dev.kord.core.event.message.ReactionRemoveAllEvent.withStrategy"]},{"name":"open override fun withStrategy(strategy: EntitySupplyStrategy<*>): ReactionRemoveEmojiEvent","description":"dev.kord.core.event.message.ReactionRemoveEmojiEvent.withStrategy","location":"core/dev.kord.core.event.message/-reaction-remove-emoji-event/with-strategy.html","searchKeys":["withStrategy","open override fun withStrategy(strategy: EntitySupplyStrategy<*>): ReactionRemoveEmojiEvent","dev.kord.core.event.message.ReactionRemoveEmojiEvent.withStrategy"]},{"name":"open override fun withStrategy(strategy: EntitySupplyStrategy<*>): ReactionRemoveEvent","description":"dev.kord.core.event.message.ReactionRemoveEvent.withStrategy","location":"core/dev.kord.core.event.message/-reaction-remove-event/with-strategy.html","searchKeys":["withStrategy","open override fun withStrategy(strategy: EntitySupplyStrategy<*>): ReactionRemoveEvent","dev.kord.core.event.message.ReactionRemoveEvent.withStrategy"]},{"name":"open override fun withStrategy(strategy: EntitySupplyStrategy<*>): ReadyEvent","description":"dev.kord.core.event.gateway.ReadyEvent.withStrategy","location":"core/dev.kord.core.event.gateway/-ready-event/with-strategy.html","searchKeys":["withStrategy","open override fun withStrategy(strategy: EntitySupplyStrategy<*>): ReadyEvent","dev.kord.core.event.gateway.ReadyEvent.withStrategy"]},{"name":"open override fun withStrategy(strategy: EntitySupplyStrategy<*>): Role","description":"dev.kord.core.entity.Role.withStrategy","location":"core/dev.kord.core.entity/-role/with-strategy.html","searchKeys":["withStrategy","open override fun withStrategy(strategy: EntitySupplyStrategy<*>): Role","dev.kord.core.entity.Role.withStrategy"]},{"name":"open override fun withStrategy(strategy: EntitySupplyStrategy<*>): RoleBehavior","description":"dev.kord.core.behavior.RoleBehavior.withStrategy","location":"core/dev.kord.core.behavior/-role-behavior/with-strategy.html","searchKeys":["withStrategy","open override fun withStrategy(strategy: EntitySupplyStrategy<*>): RoleBehavior","dev.kord.core.behavior.RoleBehavior.withStrategy"]},{"name":"open override fun withStrategy(strategy: EntitySupplyStrategy<*>): RoleCreateEvent","description":"dev.kord.core.event.role.RoleCreateEvent.withStrategy","location":"core/dev.kord.core.event.role/-role-create-event/with-strategy.html","searchKeys":["withStrategy","open override fun withStrategy(strategy: EntitySupplyStrategy<*>): RoleCreateEvent","dev.kord.core.event.role.RoleCreateEvent.withStrategy"]},{"name":"open override fun withStrategy(strategy: EntitySupplyStrategy<*>): RoleDeleteEvent","description":"dev.kord.core.event.role.RoleDeleteEvent.withStrategy","location":"core/dev.kord.core.event.role/-role-delete-event/with-strategy.html","searchKeys":["withStrategy","open override fun withStrategy(strategy: EntitySupplyStrategy<*>): RoleDeleteEvent","dev.kord.core.event.role.RoleDeleteEvent.withStrategy"]},{"name":"open override fun withStrategy(strategy: EntitySupplyStrategy<*>): RoleUpdateEvent","description":"dev.kord.core.event.role.RoleUpdateEvent.withStrategy","location":"core/dev.kord.core.event.role/-role-update-event/with-strategy.html","searchKeys":["withStrategy","open override fun withStrategy(strategy: EntitySupplyStrategy<*>): RoleUpdateEvent","dev.kord.core.event.role.RoleUpdateEvent.withStrategy"]},{"name":"open override fun withStrategy(strategy: EntitySupplyStrategy<*>): SpamAutoModerationRule","description":"dev.kord.core.entity.automoderation.SpamAutoModerationRule.withStrategy","location":"core/dev.kord.core.entity.automoderation/-spam-auto-moderation-rule/with-strategy.html","searchKeys":["withStrategy","open override fun withStrategy(strategy: EntitySupplyStrategy<*>): SpamAutoModerationRule","dev.kord.core.entity.automoderation.SpamAutoModerationRule.withStrategy"]},{"name":"open override fun withStrategy(strategy: EntitySupplyStrategy<*>): StageChannel","description":"dev.kord.core.entity.channel.StageChannel.withStrategy","location":"core/dev.kord.core.entity.channel/-stage-channel/with-strategy.html","searchKeys":["withStrategy","open override fun withStrategy(strategy: EntitySupplyStrategy<*>): StageChannel","dev.kord.core.entity.channel.StageChannel.withStrategy"]},{"name":"open override fun withStrategy(strategy: EntitySupplyStrategy<*>): StageChannelBehavior","description":"dev.kord.core.behavior.channel.StageChannelBehavior.withStrategy","location":"core/dev.kord.core.behavior.channel/-stage-channel-behavior/with-strategy.html","searchKeys":["withStrategy","open override fun withStrategy(strategy: EntitySupplyStrategy<*>): StageChannelBehavior","dev.kord.core.behavior.channel.StageChannelBehavior.withStrategy"]},{"name":"open override fun withStrategy(strategy: EntitySupplyStrategy<*>): StageInstance","description":"dev.kord.core.entity.StageInstance.withStrategy","location":"core/dev.kord.core.entity/-stage-instance/with-strategy.html","searchKeys":["withStrategy","open override fun withStrategy(strategy: EntitySupplyStrategy<*>): StageInstance","dev.kord.core.entity.StageInstance.withStrategy"]},{"name":"open override fun withStrategy(strategy: EntitySupplyStrategy<*>): StageInstanceBehavior","description":"dev.kord.core.behavior.StageInstanceBehavior.withStrategy","location":"core/dev.kord.core.behavior/-stage-instance-behavior/with-strategy.html","searchKeys":["withStrategy","open override fun withStrategy(strategy: EntitySupplyStrategy<*>): StageInstanceBehavior","dev.kord.core.behavior.StageInstanceBehavior.withStrategy"]},{"name":"open override fun withStrategy(strategy: EntitySupplyStrategy<*>): Strategizable","description":"dev.kord.core.entity.GuildScheduledEvent.withStrategy","location":"core/dev.kord.core.entity/-guild-scheduled-event/with-strategy.html","searchKeys":["withStrategy","open override fun withStrategy(strategy: EntitySupplyStrategy<*>): Strategizable","dev.kord.core.entity.GuildScheduledEvent.withStrategy"]},{"name":"open override fun withStrategy(strategy: EntitySupplyStrategy<*>): Strategizable","description":"dev.kord.core.entity.GuildSticker.withStrategy","location":"core/dev.kord.core.entity/-guild-sticker/with-strategy.html","searchKeys":["withStrategy","open override fun withStrategy(strategy: EntitySupplyStrategy<*>): Strategizable","dev.kord.core.entity.GuildSticker.withStrategy"]},{"name":"open override fun withStrategy(strategy: EntitySupplyStrategy<*>): Strategizable","description":"dev.kord.core.entity.RoleTags.withStrategy","location":"core/dev.kord.core.entity/-role-tags/with-strategy.html","searchKeys":["withStrategy","open override fun withStrategy(strategy: EntitySupplyStrategy<*>): Strategizable","dev.kord.core.entity.RoleTags.withStrategy"]},{"name":"open override fun withStrategy(strategy: EntitySupplyStrategy<*>): Strategizable","description":"dev.kord.core.entity.StickerItem.withStrategy","location":"core/dev.kord.core.entity/-sticker-item/with-strategy.html","searchKeys":["withStrategy","open override fun withStrategy(strategy: EntitySupplyStrategy<*>): Strategizable","dev.kord.core.entity.StickerItem.withStrategy"]},{"name":"open override fun withStrategy(strategy: EntitySupplyStrategy<*>): Team","description":"dev.kord.core.entity.Team.withStrategy","location":"core/dev.kord.core.entity/-team/with-strategy.html","searchKeys":["withStrategy","open override fun withStrategy(strategy: EntitySupplyStrategy<*>): Team","dev.kord.core.entity.Team.withStrategy"]},{"name":"open override fun withStrategy(strategy: EntitySupplyStrategy<*>): TextChannel","description":"dev.kord.core.entity.channel.TextChannel.withStrategy","location":"core/dev.kord.core.entity.channel/-text-channel/with-strategy.html","searchKeys":["withStrategy","open override fun withStrategy(strategy: EntitySupplyStrategy<*>): TextChannel","dev.kord.core.entity.channel.TextChannel.withStrategy"]},{"name":"open override fun withStrategy(strategy: EntitySupplyStrategy<*>): TextChannelBehavior","description":"dev.kord.core.behavior.channel.TextChannelBehavior.withStrategy","location":"core/dev.kord.core.behavior.channel/-text-channel-behavior/with-strategy.html","searchKeys":["withStrategy","open override fun withStrategy(strategy: EntitySupplyStrategy<*>): TextChannelBehavior","dev.kord.core.behavior.channel.TextChannelBehavior.withStrategy"]},{"name":"open override fun withStrategy(strategy: EntitySupplyStrategy<*>): TextChannelThread","description":"dev.kord.core.entity.channel.thread.TextChannelThread.withStrategy","location":"core/dev.kord.core.entity.channel.thread/-text-channel-thread/with-strategy.html","searchKeys":["withStrategy","open override fun withStrategy(strategy: EntitySupplyStrategy<*>): TextChannelThread","dev.kord.core.entity.channel.thread.TextChannelThread.withStrategy"]},{"name":"open override fun withStrategy(strategy: EntitySupplyStrategy<*>): ThreadChannel","description":"dev.kord.core.entity.channel.thread.ThreadChannel.withStrategy","location":"core/dev.kord.core.entity.channel.thread/-thread-channel/with-strategy.html","searchKeys":["withStrategy","open override fun withStrategy(strategy: EntitySupplyStrategy<*>): ThreadChannel","dev.kord.core.entity.channel.thread.ThreadChannel.withStrategy"]},{"name":"open override fun withStrategy(strategy: EntitySupplyStrategy<*>): ThreadChannelBehavior","description":"dev.kord.core.behavior.channel.threads.ThreadChannelBehavior.withStrategy","location":"core/dev.kord.core.behavior.channel.threads/-thread-channel-behavior/with-strategy.html","searchKeys":["withStrategy","open override fun withStrategy(strategy: EntitySupplyStrategy<*>): ThreadChannelBehavior","dev.kord.core.behavior.channel.threads.ThreadChannelBehavior.withStrategy"]},{"name":"open override fun withStrategy(strategy: EntitySupplyStrategy<*>): ThreadListSyncEvent","description":"dev.kord.core.event.channel.thread.ThreadListSyncEvent.withStrategy","location":"core/dev.kord.core.event.channel.thread/-thread-list-sync-event/with-strategy.html","searchKeys":["withStrategy","open override fun withStrategy(strategy: EntitySupplyStrategy<*>): ThreadListSyncEvent","dev.kord.core.event.channel.thread.ThreadListSyncEvent.withStrategy"]},{"name":"open override fun withStrategy(strategy: EntitySupplyStrategy<*>): ThreadMember","description":"dev.kord.core.entity.channel.thread.ThreadMember.withStrategy","location":"core/dev.kord.core.entity.channel.thread/-thread-member/with-strategy.html","searchKeys":["withStrategy","open override fun withStrategy(strategy: EntitySupplyStrategy<*>): ThreadMember","dev.kord.core.entity.channel.thread.ThreadMember.withStrategy"]},{"name":"open override fun withStrategy(strategy: EntitySupplyStrategy<*>): TopGuildChannelBehavior","description":"dev.kord.core.behavior.channel.TopGuildChannelBehavior.withStrategy","location":"core/dev.kord.core.behavior.channel/-top-guild-channel-behavior/with-strategy.html","searchKeys":["withStrategy","open override fun withStrategy(strategy: EntitySupplyStrategy<*>): TopGuildChannelBehavior","dev.kord.core.behavior.channel.TopGuildChannelBehavior.withStrategy"]},{"name":"open override fun withStrategy(strategy: EntitySupplyStrategy<*>): TopGuildMessageChannelBehavior","description":"dev.kord.core.behavior.channel.TopGuildMessageChannelBehavior.withStrategy","location":"core/dev.kord.core.behavior.channel/-top-guild-message-channel-behavior/with-strategy.html","searchKeys":["withStrategy","open override fun withStrategy(strategy: EntitySupplyStrategy<*>): TopGuildMessageChannelBehavior","dev.kord.core.behavior.channel.TopGuildMessageChannelBehavior.withStrategy"]},{"name":"open override fun withStrategy(strategy: EntitySupplyStrategy<*>): TypingStartEvent","description":"dev.kord.core.event.channel.TypingStartEvent.withStrategy","location":"core/dev.kord.core.event.channel/-typing-start-event/with-strategy.html","searchKeys":["withStrategy","open override fun withStrategy(strategy: EntitySupplyStrategy<*>): TypingStartEvent","dev.kord.core.event.channel.TypingStartEvent.withStrategy"]},{"name":"open override fun withStrategy(strategy: EntitySupplyStrategy<*>): UnknownAutoModerationRule","description":"dev.kord.core.entity.automoderation.UnknownAutoModerationRule.withStrategy","location":"core/dev.kord.core.entity.automoderation/-unknown-auto-moderation-rule/with-strategy.html","searchKeys":["withStrategy","open override fun withStrategy(strategy: EntitySupplyStrategy<*>): UnknownAutoModerationRule","dev.kord.core.entity.automoderation.UnknownAutoModerationRule.withStrategy"]},{"name":"open override fun withStrategy(strategy: EntitySupplyStrategy<*>): User","description":"dev.kord.core.entity.User.withStrategy","location":"core/dev.kord.core.entity/-user/with-strategy.html","searchKeys":["withStrategy","open override fun withStrategy(strategy: EntitySupplyStrategy<*>): User","dev.kord.core.entity.User.withStrategy"]},{"name":"open override fun withStrategy(strategy: EntitySupplyStrategy<*>): UserBehavior","description":"dev.kord.core.behavior.ThreadMemberBehavior.withStrategy","location":"core/dev.kord.core.behavior/-thread-member-behavior/with-strategy.html","searchKeys":["withStrategy","open override fun withStrategy(strategy: EntitySupplyStrategy<*>): UserBehavior","dev.kord.core.behavior.ThreadMemberBehavior.withStrategy"]},{"name":"open override fun withStrategy(strategy: EntitySupplyStrategy<*>): UserBehavior","description":"dev.kord.core.behavior.UserBehavior.withStrategy","location":"core/dev.kord.core.behavior/-user-behavior/with-strategy.html","searchKeys":["withStrategy","open override fun withStrategy(strategy: EntitySupplyStrategy<*>): UserBehavior","dev.kord.core.behavior.UserBehavior.withStrategy"]},{"name":"open override fun withStrategy(strategy: EntitySupplyStrategy<*>): VoiceChannel","description":"dev.kord.core.entity.channel.VoiceChannel.withStrategy","location":"core/dev.kord.core.entity.channel/-voice-channel/with-strategy.html","searchKeys":["withStrategy","open override fun withStrategy(strategy: EntitySupplyStrategy<*>): VoiceChannel","dev.kord.core.entity.channel.VoiceChannel.withStrategy"]},{"name":"open override fun withStrategy(strategy: EntitySupplyStrategy<*>): VoiceChannelBehavior","description":"dev.kord.core.behavior.channel.VoiceChannelBehavior.withStrategy","location":"core/dev.kord.core.behavior.channel/-voice-channel-behavior/with-strategy.html","searchKeys":["withStrategy","open override fun withStrategy(strategy: EntitySupplyStrategy<*>): VoiceChannelBehavior","dev.kord.core.behavior.channel.VoiceChannelBehavior.withStrategy"]},{"name":"open override fun withStrategy(strategy: EntitySupplyStrategy<*>): VoiceServerUpdateEvent","description":"dev.kord.core.event.guild.VoiceServerUpdateEvent.withStrategy","location":"core/dev.kord.core.event.guild/-voice-server-update-event/with-strategy.html","searchKeys":["withStrategy","open override fun withStrategy(strategy: EntitySupplyStrategy<*>): VoiceServerUpdateEvent","dev.kord.core.event.guild.VoiceServerUpdateEvent.withStrategy"]},{"name":"open override fun withStrategy(strategy: EntitySupplyStrategy<*>): VoiceState","description":"dev.kord.core.entity.VoiceState.withStrategy","location":"core/dev.kord.core.entity/-voice-state/with-strategy.html","searchKeys":["withStrategy","open override fun withStrategy(strategy: EntitySupplyStrategy<*>): VoiceState","dev.kord.core.entity.VoiceState.withStrategy"]},{"name":"open override fun withStrategy(strategy: EntitySupplyStrategy<*>): Webhook","description":"dev.kord.core.entity.Webhook.withStrategy","location":"core/dev.kord.core.entity/-webhook/with-strategy.html","searchKeys":["withStrategy","open override fun withStrategy(strategy: EntitySupplyStrategy<*>): Webhook","dev.kord.core.entity.Webhook.withStrategy"]},{"name":"open override fun withStrategy(strategy: EntitySupplyStrategy<*>): WebhookBehavior","description":"dev.kord.core.behavior.WebhookBehavior.withStrategy","location":"core/dev.kord.core.behavior/-webhook-behavior/with-strategy.html","searchKeys":["withStrategy","open override fun withStrategy(strategy: EntitySupplyStrategy<*>): WebhookBehavior","dev.kord.core.behavior.WebhookBehavior.withStrategy"]},{"name":"open override fun withStrategy(strategy: EntitySupplyStrategy<*>): WebhookUpdateEvent","description":"dev.kord.core.event.guild.WebhookUpdateEvent.withStrategy","location":"core/dev.kord.core.event.guild/-webhook-update-event/with-strategy.html","searchKeys":["withStrategy","open override fun withStrategy(strategy: EntitySupplyStrategy<*>): WebhookUpdateEvent","dev.kord.core.event.guild.WebhookUpdateEvent.withStrategy"]},{"name":"open override val activeThreads: Flow<NewsChannelThread>","description":"dev.kord.core.behavior.channel.NewsChannelBehavior.activeThreads","location":"core/dev.kord.core.behavior.channel/-news-channel-behavior/active-threads.html","searchKeys":["activeThreads","open override val activeThreads: Flow<NewsChannelThread>","dev.kord.core.behavior.channel.NewsChannelBehavior.activeThreads"]},{"name":"open override val activeThreads: Flow<TextChannelThread>","description":"dev.kord.core.behavior.channel.TextChannelBehavior.activeThreads","location":"core/dev.kord.core.behavior.channel/-text-channel-behavior/active-threads.html","searchKeys":["activeThreads","open override val activeThreads: Flow<TextChannelThread>","dev.kord.core.behavior.channel.TextChannelBehavior.activeThreads"]},{"name":"open override val applicationId: Snowflake","description":"dev.kord.core.entity.application.ApplicationCommand.applicationId","location":"core/dev.kord.core.entity.application/-application-command/application-id.html","searchKeys":["applicationId","open override val applicationId: Snowflake","dev.kord.core.entity.application.ApplicationCommand.applicationId"]},{"name":"open override val applicationId: Snowflake","description":"dev.kord.core.entity.interaction.Interaction.applicationId","location":"core/dev.kord.core.entity.interaction/-interaction/application-id.html","searchKeys":["applicationId","open override val applicationId: Snowflake","dev.kord.core.entity.interaction.Interaction.applicationId"]},{"name":"open override val applicationId: Snowflake","description":"dev.kord.core.entity.interaction.followup.EphemeralFollowupMessage.applicationId","location":"core/dev.kord.core.entity.interaction.followup/-ephemeral-followup-message/application-id.html","searchKeys":["applicationId","open override val applicationId: Snowflake","dev.kord.core.entity.interaction.followup.EphemeralFollowupMessage.applicationId"]},{"name":"open override val applicationId: Snowflake","description":"dev.kord.core.entity.interaction.followup.PublicFollowupMessage.applicationId","location":"core/dev.kord.core.entity.interaction.followup/-public-followup-message/application-id.html","searchKeys":["applicationId","open override val applicationId: Snowflake","dev.kord.core.entity.interaction.followup.PublicFollowupMessage.applicationId"]},{"name":"open override val applicationId: Snowflake","description":"dev.kord.core.entity.interaction.response.EphemeralMessageInteractionResponse.applicationId","location":"core/dev.kord.core.entity.interaction.response/-ephemeral-message-interaction-response/application-id.html","searchKeys":["applicationId","open override val applicationId: Snowflake","dev.kord.core.entity.interaction.response.EphemeralMessageInteractionResponse.applicationId"]},{"name":"open override val applicationId: Snowflake","description":"dev.kord.core.entity.interaction.response.PublicMessageInteractionResponse.applicationId","location":"core/dev.kord.core.entity.interaction.response/-public-message-interaction-response/application-id.html","searchKeys":["applicationId","open override val applicationId: Snowflake","dev.kord.core.entity.interaction.response.PublicMessageInteractionResponse.applicationId"]},{"name":"open override val approximateMemberCount: OptionalInt","description":"dev.kord.core.cache.data.InviteData.approximateMemberCount","location":"core/dev.kord.core.cache.data/-invite-data/approximate-member-count.html","searchKeys":["approximateMemberCount","open override val approximateMemberCount: OptionalInt","dev.kord.core.cache.data.InviteData.approximateMemberCount"]},{"name":"open override val approximateMemberCount: OptionalInt","description":"dev.kord.core.cache.data.InviteWithMetadataData.approximateMemberCount","location":"core/dev.kord.core.cache.data/-invite-with-metadata-data/approximate-member-count.html","searchKeys":["approximateMemberCount","open override val approximateMemberCount: OptionalInt","dev.kord.core.cache.data.InviteWithMetadataData.approximateMemberCount"]},{"name":"open override val approximatePresenceCount: OptionalInt","description":"dev.kord.core.cache.data.InviteData.approximatePresenceCount","location":"core/dev.kord.core.cache.data/-invite-data/approximate-presence-count.html","searchKeys":["approximatePresenceCount","open override val approximatePresenceCount: OptionalInt","dev.kord.core.cache.data.InviteData.approximatePresenceCount"]},{"name":"open override val approximatePresenceCount: OptionalInt","description":"dev.kord.core.cache.data.InviteWithMetadataData.approximatePresenceCount","location":"core/dev.kord.core.cache.data/-invite-with-metadata-data/approximate-presence-count.html","searchKeys":["approximatePresenceCount","open override val approximatePresenceCount: OptionalInt","dev.kord.core.cache.data.InviteWithMetadataData.approximatePresenceCount"]},{"name":"open override val averagePing: Duration?","description":"dev.kord.core.gateway.DefaultMasterGateway.averagePing","location":"core/dev.kord.core.gateway/-default-master-gateway/average-ping.html","searchKeys":["averagePing","open override val averagePing: Duration?","dev.kord.core.gateway.DefaultMasterGateway.averagePing"]},{"name":"open override val channel: Category","description":"dev.kord.core.event.channel.CategoryCreateEvent.channel","location":"core/dev.kord.core.event.channel/-category-create-event/channel.html","searchKeys":["channel","open override val channel: Category","dev.kord.core.event.channel.CategoryCreateEvent.channel"]},{"name":"open override val channel: Category","description":"dev.kord.core.event.channel.CategoryDeleteEvent.channel","location":"core/dev.kord.core.event.channel/-category-delete-event/channel.html","searchKeys":["channel","open override val channel: Category","dev.kord.core.event.channel.CategoryDeleteEvent.channel"]},{"name":"open override val channel: Category","description":"dev.kord.core.event.channel.CategoryUpdateEvent.channel","location":"core/dev.kord.core.event.channel/-category-update-event/channel.html","searchKeys":["channel","open override val channel: Category","dev.kord.core.event.channel.CategoryUpdateEvent.channel"]},{"name":"open override val channel: Channel","description":"dev.kord.core.event.channel.UnknownChannelCreateEvent.channel","location":"core/dev.kord.core.event.channel/-unknown-channel-create-event/channel.html","searchKeys":["channel","open override val channel: Channel","dev.kord.core.event.channel.UnknownChannelCreateEvent.channel"]},{"name":"open override val channel: Channel","description":"dev.kord.core.event.channel.UnknownChannelDeleteEvent.channel","location":"core/dev.kord.core.event.channel/-unknown-channel-delete-event/channel.html","searchKeys":["channel","open override val channel: Channel","dev.kord.core.event.channel.UnknownChannelDeleteEvent.channel"]},{"name":"open override val channel: Channel","description":"dev.kord.core.event.channel.UnknownChannelUpdateEvent.channel","location":"core/dev.kord.core.event.channel/-unknown-channel-update-event/channel.html","searchKeys":["channel","open override val channel: Channel","dev.kord.core.event.channel.UnknownChannelUpdateEvent.channel"]},{"name":"open override val channel: DeletedThreadChannel","description":"dev.kord.core.event.channel.thread.NewsChannelThreadDeleteEvent.channel","location":"core/dev.kord.core.event.channel.thread/-news-channel-thread-delete-event/channel.html","searchKeys":["channel","open override val channel: DeletedThreadChannel","dev.kord.core.event.channel.thread.NewsChannelThreadDeleteEvent.channel"]},{"name":"open override val channel: DeletedThreadChannel","description":"dev.kord.core.event.channel.thread.TextChannelThreadDeleteEvent.channel","location":"core/dev.kord.core.event.channel.thread/-text-channel-thread-delete-event/channel.html","searchKeys":["channel","open override val channel: DeletedThreadChannel","dev.kord.core.event.channel.thread.TextChannelThreadDeleteEvent.channel"]},{"name":"open override val channel: DeletedThreadChannel","description":"dev.kord.core.event.channel.thread.UnknownChannelThreadDeleteEvent.channel","location":"core/dev.kord.core.event.channel.thread/-unknown-channel-thread-delete-event/channel.html","searchKeys":["channel","open override val channel: DeletedThreadChannel","dev.kord.core.event.channel.thread.UnknownChannelThreadDeleteEvent.channel"]},{"name":"open override val channel: DmChannel","description":"dev.kord.core.event.channel.DMChannelCreateEvent.channel","location":"core/dev.kord.core.event.channel/-d-m-channel-create-event/channel.html","searchKeys":["channel","open override val channel: DmChannel","dev.kord.core.event.channel.DMChannelCreateEvent.channel"]},{"name":"open override val channel: DmChannel","description":"dev.kord.core.event.channel.DMChannelDeleteEvent.channel","location":"core/dev.kord.core.event.channel/-d-m-channel-delete-event/channel.html","searchKeys":["channel","open override val channel: DmChannel","dev.kord.core.event.channel.DMChannelDeleteEvent.channel"]},{"name":"open override val channel: DmChannel","description":"dev.kord.core.event.channel.DMChannelUpdateEvent.channel","location":"core/dev.kord.core.event.channel/-d-m-channel-update-event/channel.html","searchKeys":["channel","open override val channel: DmChannel","dev.kord.core.event.channel.DMChannelUpdateEvent.channel"]},{"name":"open override val channel: GuildMessageChannelBehavior","description":"dev.kord.core.behavior.interaction.GuildInteractionBehavior.channel","location":"core/dev.kord.core.behavior.interaction/-guild-interaction-behavior/channel.html","searchKeys":["channel","open override val channel: GuildMessageChannelBehavior","dev.kord.core.behavior.interaction.GuildInteractionBehavior.channel"]},{"name":"open override val channel: NewsChannel","description":"dev.kord.core.event.channel.NewsChannelCreateEvent.channel","location":"core/dev.kord.core.event.channel/-news-channel-create-event/channel.html","searchKeys":["channel","open override val channel: NewsChannel","dev.kord.core.event.channel.NewsChannelCreateEvent.channel"]},{"name":"open override val channel: NewsChannel","description":"dev.kord.core.event.channel.NewsChannelDeleteEvent.channel","location":"core/dev.kord.core.event.channel/-news-channel-delete-event/channel.html","searchKeys":["channel","open override val channel: NewsChannel","dev.kord.core.event.channel.NewsChannelDeleteEvent.channel"]},{"name":"open override val channel: NewsChannel","description":"dev.kord.core.event.channel.NewsChannelUpdateEvent.channel","location":"core/dev.kord.core.event.channel/-news-channel-update-event/channel.html","searchKeys":["channel","open override val channel: NewsChannel","dev.kord.core.event.channel.NewsChannelUpdateEvent.channel"]},{"name":"open override val channel: NewsChannelThread","description":"dev.kord.core.event.channel.thread.NewsChannelThreadCreateEvent.channel","location":"core/dev.kord.core.event.channel.thread/-news-channel-thread-create-event/channel.html","searchKeys":["channel","open override val channel: NewsChannelThread","dev.kord.core.event.channel.thread.NewsChannelThreadCreateEvent.channel"]},{"name":"open override val channel: NewsChannelThread","description":"dev.kord.core.event.channel.thread.NewsChannelThreadUpdateEvent.channel","location":"core/dev.kord.core.event.channel.thread/-news-channel-thread-update-event/channel.html","searchKeys":["channel","open override val channel: NewsChannelThread","dev.kord.core.event.channel.thread.NewsChannelThreadUpdateEvent.channel"]},{"name":"open override val channel: StageChannel","description":"dev.kord.core.event.channel.StageChannelCreateEvent.channel","location":"core/dev.kord.core.event.channel/-stage-channel-create-event/channel.html","searchKeys":["channel","open override val channel: StageChannel","dev.kord.core.event.channel.StageChannelCreateEvent.channel"]},{"name":"open override val channel: StageChannel","description":"dev.kord.core.event.channel.StageChannelDeleteEvent.channel","location":"core/dev.kord.core.event.channel/-stage-channel-delete-event/channel.html","searchKeys":["channel","open override val channel: StageChannel","dev.kord.core.event.channel.StageChannelDeleteEvent.channel"]},{"name":"open override val channel: StageChannel","description":"dev.kord.core.event.channel.StageChannelUpdateEvent.channel","location":"core/dev.kord.core.event.channel/-stage-channel-update-event/channel.html","searchKeys":["channel","open override val channel: StageChannel","dev.kord.core.event.channel.StageChannelUpdateEvent.channel"]},{"name":"open override val channel: TextChannel","description":"dev.kord.core.event.channel.TextChannelCreateEvent.channel","location":"core/dev.kord.core.event.channel/-text-channel-create-event/channel.html","searchKeys":["channel","open override val channel: TextChannel","dev.kord.core.event.channel.TextChannelCreateEvent.channel"]},{"name":"open override val channel: TextChannel","description":"dev.kord.core.event.channel.TextChannelDeleteEvent.channel","location":"core/dev.kord.core.event.channel/-text-channel-delete-event/channel.html","searchKeys":["channel","open override val channel: TextChannel","dev.kord.core.event.channel.TextChannelDeleteEvent.channel"]},{"name":"open override val channel: TextChannel","description":"dev.kord.core.event.channel.TextChannelUpdateEvent.channel","location":"core/dev.kord.core.event.channel/-text-channel-update-event/channel.html","searchKeys":["channel","open override val channel: TextChannel","dev.kord.core.event.channel.TextChannelUpdateEvent.channel"]},{"name":"open override val channel: TextChannelThread","description":"dev.kord.core.event.channel.thread.TextChannelThreadCreateEvent.channel","location":"core/dev.kord.core.event.channel.thread/-text-channel-thread-create-event/channel.html","searchKeys":["channel","open override val channel: TextChannelThread","dev.kord.core.event.channel.thread.TextChannelThreadCreateEvent.channel"]},{"name":"open override val channel: TextChannelThread","description":"dev.kord.core.event.channel.thread.TextChannelThreadUpdateEvent.channel","location":"core/dev.kord.core.event.channel.thread/-text-channel-thread-update-event/channel.html","searchKeys":["channel","open override val channel: TextChannelThread","dev.kord.core.event.channel.thread.TextChannelThreadUpdateEvent.channel"]},{"name":"open override val channel: ThreadChannel","description":"dev.kord.core.event.channel.thread.UnknownChannelThreadCreateEvent.channel","location":"core/dev.kord.core.event.channel.thread/-unknown-channel-thread-create-event/channel.html","searchKeys":["channel","open override val channel: ThreadChannel","dev.kord.core.event.channel.thread.UnknownChannelThreadCreateEvent.channel"]},{"name":"open override val channel: ThreadChannel","description":"dev.kord.core.event.channel.thread.UnknownChannelThreadUpdateEvent.channel","location":"core/dev.kord.core.event.channel.thread/-unknown-channel-thread-update-event/channel.html","searchKeys":["channel","open override val channel: ThreadChannel","dev.kord.core.event.channel.thread.UnknownChannelThreadUpdateEvent.channel"]},{"name":"open override val channel: VoiceChannel","description":"dev.kord.core.event.channel.VoiceChannelCreateEvent.channel","location":"core/dev.kord.core.event.channel/-voice-channel-create-event/channel.html","searchKeys":["channel","open override val channel: VoiceChannel","dev.kord.core.event.channel.VoiceChannelCreateEvent.channel"]},{"name":"open override val channel: VoiceChannel","description":"dev.kord.core.event.channel.VoiceChannelDeleteEvent.channel","location":"core/dev.kord.core.event.channel/-voice-channel-delete-event/channel.html","searchKeys":["channel","open override val channel: VoiceChannel","dev.kord.core.event.channel.VoiceChannelDeleteEvent.channel"]},{"name":"open override val channel: VoiceChannel","description":"dev.kord.core.event.channel.VoiceChannelUpdateEvent.channel","location":"core/dev.kord.core.event.channel/-voice-channel-update-event/channel.html","searchKeys":["channel","open override val channel: VoiceChannel","dev.kord.core.event.channel.VoiceChannelUpdateEvent.channel"]},{"name":"open override val channelId: Snowflake","description":"dev.kord.core.entity.Message.channelId","location":"core/dev.kord.core.entity/-message/channel-id.html","searchKeys":["channelId","open override val channelId: Snowflake","dev.kord.core.entity.Message.channelId"]},{"name":"open override val channelId: Snowflake","description":"dev.kord.core.entity.StageInstance.channelId","location":"core/dev.kord.core.entity/-stage-instance/channel-id.html","searchKeys":["channelId","open override val channelId: Snowflake","dev.kord.core.entity.StageInstance.channelId"]},{"name":"open override val channelId: Snowflake","description":"dev.kord.core.entity.interaction.Interaction.channelId","location":"core/dev.kord.core.entity.interaction/-interaction/channel-id.html","searchKeys":["channelId","open override val channelId: Snowflake","dev.kord.core.entity.interaction.Interaction.channelId"]},{"name":"open override val channelId: Snowflake","description":"dev.kord.core.entity.interaction.followup.FollowupMessage.channelId","location":"core/dev.kord.core.entity.interaction.followup/-followup-message/channel-id.html","searchKeys":["channelId","open override val channelId: Snowflake","dev.kord.core.entity.interaction.followup.FollowupMessage.channelId"]},{"name":"open override val channelId: Snowflake?","description":"dev.kord.core.cache.data.InviteData.channelId","location":"core/dev.kord.core.cache.data/-invite-data/channel-id.html","searchKeys":["channelId","open override val channelId: Snowflake?","dev.kord.core.cache.data.InviteData.channelId"]},{"name":"open override val channelId: Snowflake?","description":"dev.kord.core.cache.data.InviteWithMetadataData.channelId","location":"core/dev.kord.core.cache.data/-invite-with-metadata-data/channel-id.html","searchKeys":["channelId","open override val channelId: Snowflake?","dev.kord.core.cache.data.InviteWithMetadataData.channelId"]},{"name":"open override val channelId: Snowflake?","description":"dev.kord.core.event.guild.GuildScheduledEventUpdateEvent.channelId","location":"core/dev.kord.core.event.guild/-guild-scheduled-event-update-event/channel-id.html","searchKeys":["channelId","open override val channelId: Snowflake?","dev.kord.core.event.guild.GuildScheduledEventUpdateEvent.channelId"]},{"name":"open override val code: String","description":"dev.kord.core.cache.data.InviteData.code","location":"core/dev.kord.core.cache.data/-invite-data/code.html","searchKeys":["code","open override val code: String","dev.kord.core.cache.data.InviteData.code"]},{"name":"open override val code: String","description":"dev.kord.core.cache.data.InviteWithMetadataData.code","location":"core/dev.kord.core.cache.data/-invite-with-metadata-data/code.html","searchKeys":["code","open override val code: String","dev.kord.core.cache.data.InviteWithMetadataData.code"]},{"name":"open override val code: String","description":"dev.kord.core.entity.Template.code","location":"core/dev.kord.core.entity/-template/code.html","searchKeys":["code","open override val code: String","dev.kord.core.entity.Template.code"]},{"name":"open override val command: GuildChatInputCommand","description":"dev.kord.core.event.interaction.ChatInputCommandCreateEvent.command","location":"core/dev.kord.core.event.interaction/-chat-input-command-create-event/command.html","searchKeys":["command","open override val command: GuildChatInputCommand","dev.kord.core.event.interaction.ChatInputCommandCreateEvent.command"]},{"name":"open override val command: GuildChatInputCommand","description":"dev.kord.core.event.interaction.ChatInputCommandDeleteEvent.command","location":"core/dev.kord.core.event.interaction/-chat-input-command-delete-event/command.html","searchKeys":["command","open override val command: GuildChatInputCommand","dev.kord.core.event.interaction.ChatInputCommandDeleteEvent.command"]},{"name":"open override val command: GuildChatInputCommand","description":"dev.kord.core.event.interaction.ChatInputCommandUpdateEvent.command","location":"core/dev.kord.core.event.interaction/-chat-input-command-update-event/command.html","searchKeys":["command","open override val command: GuildChatInputCommand","dev.kord.core.event.interaction.ChatInputCommandUpdateEvent.command"]},{"name":"open override val command: GuildMessageCommand","description":"dev.kord.core.event.interaction.MessageCommandCreateEvent.command","location":"core/dev.kord.core.event.interaction/-message-command-create-event/command.html","searchKeys":["command","open override val command: GuildMessageCommand","dev.kord.core.event.interaction.MessageCommandCreateEvent.command"]},{"name":"open override val command: GuildMessageCommand","description":"dev.kord.core.event.interaction.MessageCommandDeleteEvent.command","location":"core/dev.kord.core.event.interaction/-message-command-delete-event/command.html","searchKeys":["command","open override val command: GuildMessageCommand","dev.kord.core.event.interaction.MessageCommandDeleteEvent.command"]},{"name":"open override val command: GuildMessageCommand","description":"dev.kord.core.event.interaction.MessageCommandUpdateEvent.command","location":"core/dev.kord.core.event.interaction/-message-command-update-event/command.html","searchKeys":["command","open override val command: GuildMessageCommand","dev.kord.core.event.interaction.MessageCommandUpdateEvent.command"]},{"name":"open override val command: GuildUserCommand","description":"dev.kord.core.event.interaction.UserCommandCreateEvent.command","location":"core/dev.kord.core.event.interaction/-user-command-create-event/command.html","searchKeys":["command","open override val command: GuildUserCommand","dev.kord.core.event.interaction.UserCommandCreateEvent.command"]},{"name":"open override val command: GuildUserCommand","description":"dev.kord.core.event.interaction.UserCommandDeleteEvent.command","location":"core/dev.kord.core.event.interaction/-user-command-delete-event/command.html","searchKeys":["command","open override val command: GuildUserCommand","dev.kord.core.event.interaction.UserCommandDeleteEvent.command"]},{"name":"open override val command: GuildUserCommand","description":"dev.kord.core.event.interaction.UserCommandUpdateEvent.command","location":"core/dev.kord.core.event.interaction/-user-command-update-event/command.html","searchKeys":["command","open override val command: GuildUserCommand","dev.kord.core.event.interaction.UserCommandUpdateEvent.command"]},{"name":"open override val command: UnknownGuildApplicationCommand","description":"dev.kord.core.event.interaction.UnknownApplicationCommandCreateEvent.command","location":"core/dev.kord.core.event.interaction/-unknown-application-command-create-event/command.html","searchKeys":["command","open override val command: UnknownGuildApplicationCommand","dev.kord.core.event.interaction.UnknownApplicationCommandCreateEvent.command"]},{"name":"open override val command: UnknownGuildApplicationCommand","description":"dev.kord.core.event.interaction.UnknownApplicationCommandDeleteEvent.command","location":"core/dev.kord.core.event.interaction/-unknown-application-command-delete-event/command.html","searchKeys":["command","open override val command: UnknownGuildApplicationCommand","dev.kord.core.event.interaction.UnknownApplicationCommandDeleteEvent.command"]},{"name":"open override val command: UnknownGuildApplicationCommand","description":"dev.kord.core.event.interaction.UnknownApplicationCommandUpdateEvent.command","location":"core/dev.kord.core.event.interaction/-unknown-application-command-update-event/command.html","searchKeys":["command","open override val command: UnknownGuildApplicationCommand","dev.kord.core.event.interaction.UnknownApplicationCommandUpdateEvent.command"]},{"name":"open override val component: ButtonComponent","description":"dev.kord.core.entity.interaction.ButtonInteraction.component","location":"core/dev.kord.core.entity.interaction/-button-interaction/component.html","searchKeys":["component","open override val component: ButtonComponent","dev.kord.core.entity.interaction.ButtonInteraction.component"]},{"name":"open override val component: SelectMenuComponent","description":"dev.kord.core.entity.interaction.SelectMenuInteraction.component","location":"core/dev.kord.core.entity.interaction/-select-menu-interaction/component.html","searchKeys":["component","open override val component: SelectMenuComponent","dev.kord.core.entity.interaction.SelectMenuInteraction.component"]},{"name":"open override val components: Optional<List<ComponentData>>","description":"dev.kord.core.cache.data.ChatComponentData.components","location":"core/dev.kord.core.cache.data/-chat-component-data/components.html","searchKeys":["components","open override val components: Optional<List<ComponentData>>","dev.kord.core.cache.data.ChatComponentData.components"]},{"name":"open override val components: Optional<List<ComponentData>>","description":"dev.kord.core.cache.data.TextInputComponentData.components","location":"core/dev.kord.core.cache.data/-text-input-component-data/components.html","searchKeys":["components","open override val components: Optional<List<ComponentData>>","dev.kord.core.cache.data.TextInputComponentData.components"]},{"name":"open override val coroutineContext: CoroutineContext","description":"dev.kord.core.Kord.coroutineContext","location":"core/dev.kord.core/-kord/coroutine-context.html","searchKeys":["coroutineContext","open override val coroutineContext: CoroutineContext","dev.kord.core.Kord.coroutineContext"]},{"name":"open override val coroutineContext: CoroutineContext","description":"dev.kord.core.cache.CachingGateway.coroutineContext","location":"core/dev.kord.core.cache/-caching-gateway/coroutine-context.html","searchKeys":["coroutineContext","open override val coroutineContext: CoroutineContext","dev.kord.core.cache.CachingGateway.coroutineContext"]},{"name":"open override val coverImage: Optional<String>","description":"dev.kord.core.cache.data.ApplicationData.coverImage","location":"core/dev.kord.core.cache.data/-application-data/cover-image.html","searchKeys":["coverImage","open override val coverImage: Optional<String>","dev.kord.core.cache.data.ApplicationData.coverImage"]},{"name":"open override val coverImage: Optional<String>","description":"dev.kord.core.cache.data.PartialApplicationData.coverImage","location":"core/dev.kord.core.cache.data/-partial-application-data/cover-image.html","searchKeys":["coverImage","open override val coverImage: Optional<String>","dev.kord.core.cache.data.PartialApplicationData.coverImage"]},{"name":"open override val customContext: Any?","description":"dev.kord.core.event.automoderation.AutoModerationActionExecutionEvent.customContext","location":"core/dev.kord.core.event.automoderation/-auto-moderation-action-execution-event/custom-context.html","searchKeys":["customContext","open override val customContext: Any?","dev.kord.core.event.automoderation.AutoModerationActionExecutionEvent.customContext"]},{"name":"open override val customContext: Any?","description":"dev.kord.core.event.automoderation.AutoModerationRuleCreateEvent.customContext","location":"core/dev.kord.core.event.automoderation/-auto-moderation-rule-create-event/custom-context.html","searchKeys":["customContext","open override val customContext: Any?","dev.kord.core.event.automoderation.AutoModerationRuleCreateEvent.customContext"]},{"name":"open override val customContext: Any?","description":"dev.kord.core.event.automoderation.AutoModerationRuleDeleteEvent.customContext","location":"core/dev.kord.core.event.automoderation/-auto-moderation-rule-delete-event/custom-context.html","searchKeys":["customContext","open override val customContext: Any?","dev.kord.core.event.automoderation.AutoModerationRuleDeleteEvent.customContext"]},{"name":"open override val customContext: Any?","description":"dev.kord.core.event.automoderation.AutoModerationRuleUpdateEvent.customContext","location":"core/dev.kord.core.event.automoderation/-auto-moderation-rule-update-event/custom-context.html","searchKeys":["customContext","open override val customContext: Any?","dev.kord.core.event.automoderation.AutoModerationRuleUpdateEvent.customContext"]},{"name":"open override val customContext: Any?","description":"dev.kord.core.event.channel.CategoryCreateEvent.customContext","location":"core/dev.kord.core.event.channel/-category-create-event/custom-context.html","searchKeys":["customContext","open override val customContext: Any?","dev.kord.core.event.channel.CategoryCreateEvent.customContext"]},{"name":"open override val customContext: Any?","description":"dev.kord.core.event.channel.CategoryDeleteEvent.customContext","location":"core/dev.kord.core.event.channel/-category-delete-event/custom-context.html","searchKeys":["customContext","open override val customContext: Any?","dev.kord.core.event.channel.CategoryDeleteEvent.customContext"]},{"name":"open override val customContext: Any?","description":"dev.kord.core.event.channel.CategoryUpdateEvent.customContext","location":"core/dev.kord.core.event.channel/-category-update-event/custom-context.html","searchKeys":["customContext","open override val customContext: Any?","dev.kord.core.event.channel.CategoryUpdateEvent.customContext"]},{"name":"open override val customContext: Any?","description":"dev.kord.core.event.channel.ChannelPinsUpdateEvent.customContext","location":"core/dev.kord.core.event.channel/-channel-pins-update-event/custom-context.html","searchKeys":["customContext","open override val customContext: Any?","dev.kord.core.event.channel.ChannelPinsUpdateEvent.customContext"]},{"name":"open override val customContext: Any?","description":"dev.kord.core.event.channel.DMChannelCreateEvent.customContext","location":"core/dev.kord.core.event.channel/-d-m-channel-create-event/custom-context.html","searchKeys":["customContext","open override val customContext: Any?","dev.kord.core.event.channel.DMChannelCreateEvent.customContext"]},{"name":"open override val customContext: Any?","description":"dev.kord.core.event.channel.DMChannelDeleteEvent.customContext","location":"core/dev.kord.core.event.channel/-d-m-channel-delete-event/custom-context.html","searchKeys":["customContext","open override val customContext: Any?","dev.kord.core.event.channel.DMChannelDeleteEvent.customContext"]},{"name":"open override val customContext: Any?","description":"dev.kord.core.event.channel.DMChannelUpdateEvent.customContext","location":"core/dev.kord.core.event.channel/-d-m-channel-update-event/custom-context.html","searchKeys":["customContext","open override val customContext: Any?","dev.kord.core.event.channel.DMChannelUpdateEvent.customContext"]},{"name":"open override val customContext: Any?","description":"dev.kord.core.event.channel.NewsChannelCreateEvent.customContext","location":"core/dev.kord.core.event.channel/-news-channel-create-event/custom-context.html","searchKeys":["customContext","open override val customContext: Any?","dev.kord.core.event.channel.NewsChannelCreateEvent.customContext"]},{"name":"open override val customContext: Any?","description":"dev.kord.core.event.channel.NewsChannelDeleteEvent.customContext","location":"core/dev.kord.core.event.channel/-news-channel-delete-event/custom-context.html","searchKeys":["customContext","open override val customContext: Any?","dev.kord.core.event.channel.NewsChannelDeleteEvent.customContext"]},{"name":"open override val customContext: Any?","description":"dev.kord.core.event.channel.NewsChannelUpdateEvent.customContext","location":"core/dev.kord.core.event.channel/-news-channel-update-event/custom-context.html","searchKeys":["customContext","open override val customContext: Any?","dev.kord.core.event.channel.NewsChannelUpdateEvent.customContext"]},{"name":"open override val customContext: Any?","description":"dev.kord.core.event.channel.StageChannelCreateEvent.customContext","location":"core/dev.kord.core.event.channel/-stage-channel-create-event/custom-context.html","searchKeys":["customContext","open override val customContext: Any?","dev.kord.core.event.channel.StageChannelCreateEvent.customContext"]},{"name":"open override val customContext: Any?","description":"dev.kord.core.event.channel.StageChannelDeleteEvent.customContext","location":"core/dev.kord.core.event.channel/-stage-channel-delete-event/custom-context.html","searchKeys":["customContext","open override val customContext: Any?","dev.kord.core.event.channel.StageChannelDeleteEvent.customContext"]},{"name":"open override val customContext: Any?","description":"dev.kord.core.event.channel.StageChannelUpdateEvent.customContext","location":"core/dev.kord.core.event.channel/-stage-channel-update-event/custom-context.html","searchKeys":["customContext","open override val customContext: Any?","dev.kord.core.event.channel.StageChannelUpdateEvent.customContext"]},{"name":"open override val customContext: Any?","description":"dev.kord.core.event.channel.TextChannelCreateEvent.customContext","location":"core/dev.kord.core.event.channel/-text-channel-create-event/custom-context.html","searchKeys":["customContext","open override val customContext: Any?","dev.kord.core.event.channel.TextChannelCreateEvent.customContext"]},{"name":"open override val customContext: Any?","description":"dev.kord.core.event.channel.TextChannelDeleteEvent.customContext","location":"core/dev.kord.core.event.channel/-text-channel-delete-event/custom-context.html","searchKeys":["customContext","open override val customContext: Any?","dev.kord.core.event.channel.TextChannelDeleteEvent.customContext"]},{"name":"open override val customContext: Any?","description":"dev.kord.core.event.channel.TextChannelUpdateEvent.customContext","location":"core/dev.kord.core.event.channel/-text-channel-update-event/custom-context.html","searchKeys":["customContext","open override val customContext: Any?","dev.kord.core.event.channel.TextChannelUpdateEvent.customContext"]},{"name":"open override val customContext: Any?","description":"dev.kord.core.event.channel.TypingStartEvent.customContext","location":"core/dev.kord.core.event.channel/-typing-start-event/custom-context.html","searchKeys":["customContext","open override val customContext: Any?","dev.kord.core.event.channel.TypingStartEvent.customContext"]},{"name":"open override val customContext: Any?","description":"dev.kord.core.event.channel.UnknownChannelCreateEvent.customContext","location":"core/dev.kord.core.event.channel/-unknown-channel-create-event/custom-context.html","searchKeys":["customContext","open override val customContext: Any?","dev.kord.core.event.channel.UnknownChannelCreateEvent.customContext"]},{"name":"open override val customContext: Any?","description":"dev.kord.core.event.channel.UnknownChannelDeleteEvent.customContext","location":"core/dev.kord.core.event.channel/-unknown-channel-delete-event/custom-context.html","searchKeys":["customContext","open override val customContext: Any?","dev.kord.core.event.channel.UnknownChannelDeleteEvent.customContext"]},{"name":"open override val customContext: Any?","description":"dev.kord.core.event.channel.UnknownChannelUpdateEvent.customContext","location":"core/dev.kord.core.event.channel/-unknown-channel-update-event/custom-context.html","searchKeys":["customContext","open override val customContext: Any?","dev.kord.core.event.channel.UnknownChannelUpdateEvent.customContext"]},{"name":"open override val customContext: Any?","description":"dev.kord.core.event.channel.VoiceChannelCreateEvent.customContext","location":"core/dev.kord.core.event.channel/-voice-channel-create-event/custom-context.html","searchKeys":["customContext","open override val customContext: Any?","dev.kord.core.event.channel.VoiceChannelCreateEvent.customContext"]},{"name":"open override val customContext: Any?","description":"dev.kord.core.event.channel.VoiceChannelDeleteEvent.customContext","location":"core/dev.kord.core.event.channel/-voice-channel-delete-event/custom-context.html","searchKeys":["customContext","open override val customContext: Any?","dev.kord.core.event.channel.VoiceChannelDeleteEvent.customContext"]},{"name":"open override val customContext: Any?","description":"dev.kord.core.event.channel.VoiceChannelUpdateEvent.customContext","location":"core/dev.kord.core.event.channel/-voice-channel-update-event/custom-context.html","searchKeys":["customContext","open override val customContext: Any?","dev.kord.core.event.channel.VoiceChannelUpdateEvent.customContext"]},{"name":"open override val customContext: Any?","description":"dev.kord.core.event.channel.thread.NewsChannelThreadCreateEvent.customContext","location":"core/dev.kord.core.event.channel.thread/-news-channel-thread-create-event/custom-context.html","searchKeys":["customContext","open override val customContext: Any?","dev.kord.core.event.channel.thread.NewsChannelThreadCreateEvent.customContext"]},{"name":"open override val customContext: Any?","description":"dev.kord.core.event.channel.thread.NewsChannelThreadDeleteEvent.customContext","location":"core/dev.kord.core.event.channel.thread/-news-channel-thread-delete-event/custom-context.html","searchKeys":["customContext","open override val customContext: Any?","dev.kord.core.event.channel.thread.NewsChannelThreadDeleteEvent.customContext"]},{"name":"open override val customContext: Any?","description":"dev.kord.core.event.channel.thread.NewsChannelThreadUpdateEvent.customContext","location":"core/dev.kord.core.event.channel.thread/-news-channel-thread-update-event/custom-context.html","searchKeys":["customContext","open override val customContext: Any?","dev.kord.core.event.channel.thread.NewsChannelThreadUpdateEvent.customContext"]},{"name":"open override val customContext: Any?","description":"dev.kord.core.event.channel.thread.TextChannelThreadCreateEvent.customContext","location":"core/dev.kord.core.event.channel.thread/-text-channel-thread-create-event/custom-context.html","searchKeys":["customContext","open override val customContext: Any?","dev.kord.core.event.channel.thread.TextChannelThreadCreateEvent.customContext"]},{"name":"open override val customContext: Any?","description":"dev.kord.core.event.channel.thread.TextChannelThreadDeleteEvent.customContext","location":"core/dev.kord.core.event.channel.thread/-text-channel-thread-delete-event/custom-context.html","searchKeys":["customContext","open override val customContext: Any?","dev.kord.core.event.channel.thread.TextChannelThreadDeleteEvent.customContext"]},{"name":"open override val customContext: Any?","description":"dev.kord.core.event.channel.thread.TextChannelThreadUpdateEvent.customContext","location":"core/dev.kord.core.event.channel.thread/-text-channel-thread-update-event/custom-context.html","searchKeys":["customContext","open override val customContext: Any?","dev.kord.core.event.channel.thread.TextChannelThreadUpdateEvent.customContext"]},{"name":"open override val customContext: Any?","description":"dev.kord.core.event.channel.thread.ThreadListSyncEvent.customContext","location":"core/dev.kord.core.event.channel.thread/-thread-list-sync-event/custom-context.html","searchKeys":["customContext","open override val customContext: Any?","dev.kord.core.event.channel.thread.ThreadListSyncEvent.customContext"]},{"name":"open override val customContext: Any?","description":"dev.kord.core.event.channel.thread.ThreadMemberUpdateEvent.customContext","location":"core/dev.kord.core.event.channel.thread/-thread-member-update-event/custom-context.html","searchKeys":["customContext","open override val customContext: Any?","dev.kord.core.event.channel.thread.ThreadMemberUpdateEvent.customContext"]},{"name":"open override val customContext: Any?","description":"dev.kord.core.event.channel.thread.ThreadMembersUpdateEvent.customContext","location":"core/dev.kord.core.event.channel.thread/-thread-members-update-event/custom-context.html","searchKeys":["customContext","open override val customContext: Any?","dev.kord.core.event.channel.thread.ThreadMembersUpdateEvent.customContext"]},{"name":"open override val customContext: Any?","description":"dev.kord.core.event.channel.thread.UnknownChannelThreadCreateEvent.customContext","location":"core/dev.kord.core.event.channel.thread/-unknown-channel-thread-create-event/custom-context.html","searchKeys":["customContext","open override val customContext: Any?","dev.kord.core.event.channel.thread.UnknownChannelThreadCreateEvent.customContext"]},{"name":"open override val customContext: Any?","description":"dev.kord.core.event.channel.thread.UnknownChannelThreadDeleteEvent.customContext","location":"core/dev.kord.core.event.channel.thread/-unknown-channel-thread-delete-event/custom-context.html","searchKeys":["customContext","open override val customContext: Any?","dev.kord.core.event.channel.thread.UnknownChannelThreadDeleteEvent.customContext"]},{"name":"open override val customContext: Any?","description":"dev.kord.core.event.channel.thread.UnknownChannelThreadUpdateEvent.customContext","location":"core/dev.kord.core.event.channel.thread/-unknown-channel-thread-update-event/custom-context.html","searchKeys":["customContext","open override val customContext: Any?","dev.kord.core.event.channel.thread.UnknownChannelThreadUpdateEvent.customContext"]},{"name":"open override val customContext: Any?","description":"dev.kord.core.event.gateway.ConnectEvent.customContext","location":"core/dev.kord.core.event.gateway/-connect-event/custom-context.html","searchKeys":["customContext","open override val customContext: Any?","dev.kord.core.event.gateway.ConnectEvent.customContext"]},{"name":"open override val customContext: Any?","description":"dev.kord.core.event.gateway.DisconnectEvent.DetachEvent.customContext","location":"core/dev.kord.core.event.gateway/-disconnect-event/-detach-event/custom-context.html","searchKeys":["customContext","open override val customContext: Any?","dev.kord.core.event.gateway.DisconnectEvent.DetachEvent.customContext"]},{"name":"open override val customContext: Any?","description":"dev.kord.core.event.gateway.DisconnectEvent.DiscordCloseEvent.customContext","location":"core/dev.kord.core.event.gateway/-disconnect-event/-discord-close-event/custom-context.html","searchKeys":["customContext","open override val customContext: Any?","dev.kord.core.event.gateway.DisconnectEvent.DiscordCloseEvent.customContext"]},{"name":"open override val customContext: Any?","description":"dev.kord.core.event.gateway.DisconnectEvent.ReconnectingEvent.customContext","location":"core/dev.kord.core.event.gateway/-disconnect-event/-reconnecting-event/custom-context.html","searchKeys":["customContext","open override val customContext: Any?","dev.kord.core.event.gateway.DisconnectEvent.ReconnectingEvent.customContext"]},{"name":"open override val customContext: Any?","description":"dev.kord.core.event.gateway.DisconnectEvent.RetryLimitReachedEvent.customContext","location":"core/dev.kord.core.event.gateway/-disconnect-event/-retry-limit-reached-event/custom-context.html","searchKeys":["customContext","open override val customContext: Any?","dev.kord.core.event.gateway.DisconnectEvent.RetryLimitReachedEvent.customContext"]},{"name":"open override val customContext: Any?","description":"dev.kord.core.event.gateway.DisconnectEvent.SessionReset.customContext","location":"core/dev.kord.core.event.gateway/-disconnect-event/-session-reset/custom-context.html","searchKeys":["customContext","open override val customContext: Any?","dev.kord.core.event.gateway.DisconnectEvent.SessionReset.customContext"]},{"name":"open override val customContext: Any?","description":"dev.kord.core.event.gateway.DisconnectEvent.TimeoutEvent.customContext","location":"core/dev.kord.core.event.gateway/-disconnect-event/-timeout-event/custom-context.html","searchKeys":["customContext","open override val customContext: Any?","dev.kord.core.event.gateway.DisconnectEvent.TimeoutEvent.customContext"]},{"name":"open override val customContext: Any?","description":"dev.kord.core.event.gateway.DisconnectEvent.UserCloseEvent.customContext","location":"core/dev.kord.core.event.gateway/-disconnect-event/-user-close-event/custom-context.html","searchKeys":["customContext","open override val customContext: Any?","dev.kord.core.event.gateway.DisconnectEvent.UserCloseEvent.customContext"]},{"name":"open override val customContext: Any?","description":"dev.kord.core.event.gateway.DisconnectEvent.ZombieConnectionEvent.customContext","location":"core/dev.kord.core.event.gateway/-disconnect-event/-zombie-connection-event/custom-context.html","searchKeys":["customContext","open override val customContext: Any?","dev.kord.core.event.gateway.DisconnectEvent.ZombieConnectionEvent.customContext"]},{"name":"open override val customContext: Any?","description":"dev.kord.core.event.gateway.ReadyEvent.customContext","location":"core/dev.kord.core.event.gateway/-ready-event/custom-context.html","searchKeys":["customContext","open override val customContext: Any?","dev.kord.core.event.gateway.ReadyEvent.customContext"]},{"name":"open override val customContext: Any?","description":"dev.kord.core.event.gateway.ResumedEvent.customContext","location":"core/dev.kord.core.event.gateway/-resumed-event/custom-context.html","searchKeys":["customContext","open override val customContext: Any?","dev.kord.core.event.gateway.ResumedEvent.customContext"]},{"name":"open override val customContext: Any?","description":"dev.kord.core.event.guild.BanAddEvent.customContext","location":"core/dev.kord.core.event.guild/-ban-add-event/custom-context.html","searchKeys":["customContext","open override val customContext: Any?","dev.kord.core.event.guild.BanAddEvent.customContext"]},{"name":"open override val customContext: Any?","description":"dev.kord.core.event.guild.BanRemoveEvent.customContext","location":"core/dev.kord.core.event.guild/-ban-remove-event/custom-context.html","searchKeys":["customContext","open override val customContext: Any?","dev.kord.core.event.guild.BanRemoveEvent.customContext"]},{"name":"open override val customContext: Any?","description":"dev.kord.core.event.guild.EmojisUpdateEvent.customContext","location":"core/dev.kord.core.event.guild/-emojis-update-event/custom-context.html","searchKeys":["customContext","open override val customContext: Any?","dev.kord.core.event.guild.EmojisUpdateEvent.customContext"]},{"name":"open override val customContext: Any?","description":"dev.kord.core.event.guild.GuildCreateEvent.customContext","location":"core/dev.kord.core.event.guild/-guild-create-event/custom-context.html","searchKeys":["customContext","open override val customContext: Any?","dev.kord.core.event.guild.GuildCreateEvent.customContext"]},{"name":"open override val customContext: Any?","description":"dev.kord.core.event.guild.GuildDeleteEvent.customContext","location":"core/dev.kord.core.event.guild/-guild-delete-event/custom-context.html","searchKeys":["customContext","open override val customContext: Any?","dev.kord.core.event.guild.GuildDeleteEvent.customContext"]},{"name":"open override val customContext: Any?","description":"dev.kord.core.event.guild.GuildScheduledEventCreateEvent.customContext","location":"core/dev.kord.core.event.guild/-guild-scheduled-event-create-event/custom-context.html","searchKeys":["customContext","open override val customContext: Any?","dev.kord.core.event.guild.GuildScheduledEventCreateEvent.customContext"]},{"name":"open override val customContext: Any?","description":"dev.kord.core.event.guild.GuildScheduledEventDeleteEvent.customContext","location":"core/dev.kord.core.event.guild/-guild-scheduled-event-delete-event/custom-context.html","searchKeys":["customContext","open override val customContext: Any?","dev.kord.core.event.guild.GuildScheduledEventDeleteEvent.customContext"]},{"name":"open override val customContext: Any?","description":"dev.kord.core.event.guild.GuildScheduledEventUpdateEvent.customContext","location":"core/dev.kord.core.event.guild/-guild-scheduled-event-update-event/custom-context.html","searchKeys":["customContext","open override val customContext: Any?","dev.kord.core.event.guild.GuildScheduledEventUpdateEvent.customContext"]},{"name":"open override val customContext: Any?","description":"dev.kord.core.event.guild.GuildScheduledEventUserAddEvent.customContext","location":"core/dev.kord.core.event.guild/-guild-scheduled-event-user-add-event/custom-context.html","searchKeys":["customContext","open override val customContext: Any?","dev.kord.core.event.guild.GuildScheduledEventUserAddEvent.customContext"]},{"name":"open override val customContext: Any?","description":"dev.kord.core.event.guild.GuildScheduledEventUserRemoveEvent.customContext","location":"core/dev.kord.core.event.guild/-guild-scheduled-event-user-remove-event/custom-context.html","searchKeys":["customContext","open override val customContext: Any?","dev.kord.core.event.guild.GuildScheduledEventUserRemoveEvent.customContext"]},{"name":"open override val customContext: Any?","description":"dev.kord.core.event.guild.GuildUpdateEvent.customContext","location":"core/dev.kord.core.event.guild/-guild-update-event/custom-context.html","searchKeys":["customContext","open override val customContext: Any?","dev.kord.core.event.guild.GuildUpdateEvent.customContext"]},{"name":"open override val customContext: Any?","description":"dev.kord.core.event.guild.IntegrationsUpdateEvent.customContext","location":"core/dev.kord.core.event.guild/-integrations-update-event/custom-context.html","searchKeys":["customContext","open override val customContext: Any?","dev.kord.core.event.guild.IntegrationsUpdateEvent.customContext"]},{"name":"open override val customContext: Any?","description":"dev.kord.core.event.guild.InviteCreateEvent.customContext","location":"core/dev.kord.core.event.guild/-invite-create-event/custom-context.html","searchKeys":["customContext","open override val customContext: Any?","dev.kord.core.event.guild.InviteCreateEvent.customContext"]},{"name":"open override val customContext: Any?","description":"dev.kord.core.event.guild.InviteDeleteEvent.customContext","location":"core/dev.kord.core.event.guild/-invite-delete-event/custom-context.html","searchKeys":["customContext","open override val customContext: Any?","dev.kord.core.event.guild.InviteDeleteEvent.customContext"]},{"name":"open override val customContext: Any?","description":"dev.kord.core.event.guild.MemberJoinEvent.customContext","location":"core/dev.kord.core.event.guild/-member-join-event/custom-context.html","searchKeys":["customContext","open override val customContext: Any?","dev.kord.core.event.guild.MemberJoinEvent.customContext"]},{"name":"open override val customContext: Any?","description":"dev.kord.core.event.guild.MemberLeaveEvent.customContext","location":"core/dev.kord.core.event.guild/-member-leave-event/custom-context.html","searchKeys":["customContext","open override val customContext: Any?","dev.kord.core.event.guild.MemberLeaveEvent.customContext"]},{"name":"open override val customContext: Any?","description":"dev.kord.core.event.guild.MemberUpdateEvent.customContext","location":"core/dev.kord.core.event.guild/-member-update-event/custom-context.html","searchKeys":["customContext","open override val customContext: Any?","dev.kord.core.event.guild.MemberUpdateEvent.customContext"]},{"name":"open override val customContext: Any?","description":"dev.kord.core.event.guild.MembersChunkEvent.customContext","location":"core/dev.kord.core.event.guild/-members-chunk-event/custom-context.html","searchKeys":["customContext","open override val customContext: Any?","dev.kord.core.event.guild.MembersChunkEvent.customContext"]},{"name":"open override val customContext: Any?","description":"dev.kord.core.event.guild.VoiceServerUpdateEvent.customContext","location":"core/dev.kord.core.event.guild/-voice-server-update-event/custom-context.html","searchKeys":["customContext","open override val customContext: Any?","dev.kord.core.event.guild.VoiceServerUpdateEvent.customContext"]},{"name":"open override val customContext: Any?","description":"dev.kord.core.event.guild.WebhookUpdateEvent.customContext","location":"core/dev.kord.core.event.guild/-webhook-update-event/custom-context.html","searchKeys":["customContext","open override val customContext: Any?","dev.kord.core.event.guild.WebhookUpdateEvent.customContext"]},{"name":"open override val customContext: Any?","description":"dev.kord.core.event.interaction.ApplicationCommandPermissionsUpdateEvent.customContext","location":"core/dev.kord.core.event.interaction/-application-command-permissions-update-event/custom-context.html","searchKeys":["customContext","open override val customContext: Any?","dev.kord.core.event.interaction.ApplicationCommandPermissionsUpdateEvent.customContext"]},{"name":"open override val customContext: Any?","description":"dev.kord.core.event.interaction.ChatInputCommandCreateEvent.customContext","location":"core/dev.kord.core.event.interaction/-chat-input-command-create-event/custom-context.html","searchKeys":["customContext","open override val customContext: Any?","dev.kord.core.event.interaction.ChatInputCommandCreateEvent.customContext"]},{"name":"open override val customContext: Any?","description":"dev.kord.core.event.interaction.ChatInputCommandDeleteEvent.customContext","location":"core/dev.kord.core.event.interaction/-chat-input-command-delete-event/custom-context.html","searchKeys":["customContext","open override val customContext: Any?","dev.kord.core.event.interaction.ChatInputCommandDeleteEvent.customContext"]},{"name":"open override val customContext: Any?","description":"dev.kord.core.event.interaction.ChatInputCommandUpdateEvent.customContext","location":"core/dev.kord.core.event.interaction/-chat-input-command-update-event/custom-context.html","searchKeys":["customContext","open override val customContext: Any?","dev.kord.core.event.interaction.ChatInputCommandUpdateEvent.customContext"]},{"name":"open override val customContext: Any?","description":"dev.kord.core.event.interaction.GlobalAutoCompleteInteractionCreateEvent.customContext","location":"core/dev.kord.core.event.interaction/-global-auto-complete-interaction-create-event/custom-context.html","searchKeys":["customContext","open override val customContext: Any?","dev.kord.core.event.interaction.GlobalAutoCompleteInteractionCreateEvent.customContext"]},{"name":"open override val customContext: Any?","description":"dev.kord.core.event.interaction.GlobalButtonInteractionCreateEvent.customContext","location":"core/dev.kord.core.event.interaction/-global-button-interaction-create-event/custom-context.html","searchKeys":["customContext","open override val customContext: Any?","dev.kord.core.event.interaction.GlobalButtonInteractionCreateEvent.customContext"]},{"name":"open override val customContext: Any?","description":"dev.kord.core.event.interaction.GlobalChatInputCommandInteractionCreateEvent.customContext","location":"core/dev.kord.core.event.interaction/-global-chat-input-command-interaction-create-event/custom-context.html","searchKeys":["customContext","open override val customContext: Any?","dev.kord.core.event.interaction.GlobalChatInputCommandInteractionCreateEvent.customContext"]},{"name":"open override val customContext: Any?","description":"dev.kord.core.event.interaction.GlobalMessageCommandInteractionCreateEvent.customContext","location":"core/dev.kord.core.event.interaction/-global-message-command-interaction-create-event/custom-context.html","searchKeys":["customContext","open override val customContext: Any?","dev.kord.core.event.interaction.GlobalMessageCommandInteractionCreateEvent.customContext"]},{"name":"open override val customContext: Any?","description":"dev.kord.core.event.interaction.GlobalModalSubmitInteractionCreateEvent.customContext","location":"core/dev.kord.core.event.interaction/-global-modal-submit-interaction-create-event/custom-context.html","searchKeys":["customContext","open override val customContext: Any?","dev.kord.core.event.interaction.GlobalModalSubmitInteractionCreateEvent.customContext"]},{"name":"open override val customContext: Any?","description":"dev.kord.core.event.interaction.GlobalSelectMenuInteractionCreateEvent.customContext","location":"core/dev.kord.core.event.interaction/-global-select-menu-interaction-create-event/custom-context.html","searchKeys":["customContext","open override val customContext: Any?","dev.kord.core.event.interaction.GlobalSelectMenuInteractionCreateEvent.customContext"]},{"name":"open override val customContext: Any?","description":"dev.kord.core.event.interaction.GlobalUserCommandInteractionCreateEvent.customContext","location":"core/dev.kord.core.event.interaction/-global-user-command-interaction-create-event/custom-context.html","searchKeys":["customContext","open override val customContext: Any?","dev.kord.core.event.interaction.GlobalUserCommandInteractionCreateEvent.customContext"]},{"name":"open override val customContext: Any?","description":"dev.kord.core.event.interaction.GuildAutoCompleteInteractionCreateEvent.customContext","location":"core/dev.kord.core.event.interaction/-guild-auto-complete-interaction-create-event/custom-context.html","searchKeys":["customContext","open override val customContext: Any?","dev.kord.core.event.interaction.GuildAutoCompleteInteractionCreateEvent.customContext"]},{"name":"open override val customContext: Any?","description":"dev.kord.core.event.interaction.GuildButtonInteractionCreateEvent.customContext","location":"core/dev.kord.core.event.interaction/-guild-button-interaction-create-event/custom-context.html","searchKeys":["customContext","open override val customContext: Any?","dev.kord.core.event.interaction.GuildButtonInteractionCreateEvent.customContext"]},{"name":"open override val customContext: Any?","description":"dev.kord.core.event.interaction.GuildChatInputCommandInteractionCreateEvent.customContext","location":"core/dev.kord.core.event.interaction/-guild-chat-input-command-interaction-create-event/custom-context.html","searchKeys":["customContext","open override val customContext: Any?","dev.kord.core.event.interaction.GuildChatInputCommandInteractionCreateEvent.customContext"]},{"name":"open override val customContext: Any?","description":"dev.kord.core.event.interaction.GuildMessageCommandInteractionCreateEvent.customContext","location":"core/dev.kord.core.event.interaction/-guild-message-command-interaction-create-event/custom-context.html","searchKeys":["customContext","open override val customContext: Any?","dev.kord.core.event.interaction.GuildMessageCommandInteractionCreateEvent.customContext"]},{"name":"open override val customContext: Any?","description":"dev.kord.core.event.interaction.GuildModalSubmitInteractionCreateEvent.customContext","location":"core/dev.kord.core.event.interaction/-guild-modal-submit-interaction-create-event/custom-context.html","searchKeys":["customContext","open override val customContext: Any?","dev.kord.core.event.interaction.GuildModalSubmitInteractionCreateEvent.customContext"]},{"name":"open override val customContext: Any?","description":"dev.kord.core.event.interaction.GuildSelectMenuInteractionCreateEvent.customContext","location":"core/dev.kord.core.event.interaction/-guild-select-menu-interaction-create-event/custom-context.html","searchKeys":["customContext","open override val customContext: Any?","dev.kord.core.event.interaction.GuildSelectMenuInteractionCreateEvent.customContext"]},{"name":"open override val customContext: Any?","description":"dev.kord.core.event.interaction.GuildUserCommandInteractionCreateEvent.customContext","location":"core/dev.kord.core.event.interaction/-guild-user-command-interaction-create-event/custom-context.html","searchKeys":["customContext","open override val customContext: Any?","dev.kord.core.event.interaction.GuildUserCommandInteractionCreateEvent.customContext"]},{"name":"open override val customContext: Any?","description":"dev.kord.core.event.interaction.MessageCommandCreateEvent.customContext","location":"core/dev.kord.core.event.interaction/-message-command-create-event/custom-context.html","searchKeys":["customContext","open override val customContext: Any?","dev.kord.core.event.interaction.MessageCommandCreateEvent.customContext"]},{"name":"open override val customContext: Any?","description":"dev.kord.core.event.interaction.MessageCommandDeleteEvent.customContext","location":"core/dev.kord.core.event.interaction/-message-command-delete-event/custom-context.html","searchKeys":["customContext","open override val customContext: Any?","dev.kord.core.event.interaction.MessageCommandDeleteEvent.customContext"]},{"name":"open override val customContext: Any?","description":"dev.kord.core.event.interaction.MessageCommandUpdateEvent.customContext","location":"core/dev.kord.core.event.interaction/-message-command-update-event/custom-context.html","searchKeys":["customContext","open override val customContext: Any?","dev.kord.core.event.interaction.MessageCommandUpdateEvent.customContext"]},{"name":"open override val customContext: Any?","description":"dev.kord.core.event.interaction.UnknownApplicationCommandCreateEvent.customContext","location":"core/dev.kord.core.event.interaction/-unknown-application-command-create-event/custom-context.html","searchKeys":["customContext","open override val customContext: Any?","dev.kord.core.event.interaction.UnknownApplicationCommandCreateEvent.customContext"]},{"name":"open override val customContext: Any?","description":"dev.kord.core.event.interaction.UnknownApplicationCommandDeleteEvent.customContext","location":"core/dev.kord.core.event.interaction/-unknown-application-command-delete-event/custom-context.html","searchKeys":["customContext","open override val customContext: Any?","dev.kord.core.event.interaction.UnknownApplicationCommandDeleteEvent.customContext"]},{"name":"open override val customContext: Any?","description":"dev.kord.core.event.interaction.UnknownApplicationCommandUpdateEvent.customContext","location":"core/dev.kord.core.event.interaction/-unknown-application-command-update-event/custom-context.html","searchKeys":["customContext","open override val customContext: Any?","dev.kord.core.event.interaction.UnknownApplicationCommandUpdateEvent.customContext"]},{"name":"open override val customContext: Any?","description":"dev.kord.core.event.interaction.UserCommandCreateEvent.customContext","location":"core/dev.kord.core.event.interaction/-user-command-create-event/custom-context.html","searchKeys":["customContext","open override val customContext: Any?","dev.kord.core.event.interaction.UserCommandCreateEvent.customContext"]},{"name":"open override val customContext: Any?","description":"dev.kord.core.event.interaction.UserCommandDeleteEvent.customContext","location":"core/dev.kord.core.event.interaction/-user-command-delete-event/custom-context.html","searchKeys":["customContext","open override val customContext: Any?","dev.kord.core.event.interaction.UserCommandDeleteEvent.customContext"]},{"name":"open override val customContext: Any?","description":"dev.kord.core.event.interaction.UserCommandUpdateEvent.customContext","location":"core/dev.kord.core.event.interaction/-user-command-update-event/custom-context.html","searchKeys":["customContext","open override val customContext: Any?","dev.kord.core.event.interaction.UserCommandUpdateEvent.customContext"]},{"name":"open override val customContext: Any?","description":"dev.kord.core.event.message.MessageBulkDeleteEvent.customContext","location":"core/dev.kord.core.event.message/-message-bulk-delete-event/custom-context.html","searchKeys":["customContext","open override val customContext: Any?","dev.kord.core.event.message.MessageBulkDeleteEvent.customContext"]},{"name":"open override val customContext: Any?","description":"dev.kord.core.event.message.MessageCreateEvent.customContext","location":"core/dev.kord.core.event.message/-message-create-event/custom-context.html","searchKeys":["customContext","open override val customContext: Any?","dev.kord.core.event.message.MessageCreateEvent.customContext"]},{"name":"open override val customContext: Any?","description":"dev.kord.core.event.message.MessageDeleteEvent.customContext","location":"core/dev.kord.core.event.message/-message-delete-event/custom-context.html","searchKeys":["customContext","open override val customContext: Any?","dev.kord.core.event.message.MessageDeleteEvent.customContext"]},{"name":"open override val customContext: Any?","description":"dev.kord.core.event.message.MessageUpdateEvent.customContext","location":"core/dev.kord.core.event.message/-message-update-event/custom-context.html","searchKeys":["customContext","open override val customContext: Any?","dev.kord.core.event.message.MessageUpdateEvent.customContext"]},{"name":"open override val customContext: Any?","description":"dev.kord.core.event.message.ReactionAddEvent.customContext","location":"core/dev.kord.core.event.message/-reaction-add-event/custom-context.html","searchKeys":["customContext","open override val customContext: Any?","dev.kord.core.event.message.ReactionAddEvent.customContext"]},{"name":"open override val customContext: Any?","description":"dev.kord.core.event.message.ReactionRemoveAllEvent.customContext","location":"core/dev.kord.core.event.message/-reaction-remove-all-event/custom-context.html","searchKeys":["customContext","open override val customContext: Any?","dev.kord.core.event.message.ReactionRemoveAllEvent.customContext"]},{"name":"open override val customContext: Any?","description":"dev.kord.core.event.message.ReactionRemoveEmojiEvent.customContext","location":"core/dev.kord.core.event.message/-reaction-remove-emoji-event/custom-context.html","searchKeys":["customContext","open override val customContext: Any?","dev.kord.core.event.message.ReactionRemoveEmojiEvent.customContext"]},{"name":"open override val customContext: Any?","description":"dev.kord.core.event.message.ReactionRemoveEvent.customContext","location":"core/dev.kord.core.event.message/-reaction-remove-event/custom-context.html","searchKeys":["customContext","open override val customContext: Any?","dev.kord.core.event.message.ReactionRemoveEvent.customContext"]},{"name":"open override val customContext: Any?","description":"dev.kord.core.event.role.RoleCreateEvent.customContext","location":"core/dev.kord.core.event.role/-role-create-event/custom-context.html","searchKeys":["customContext","open override val customContext: Any?","dev.kord.core.event.role.RoleCreateEvent.customContext"]},{"name":"open override val customContext: Any?","description":"dev.kord.core.event.role.RoleDeleteEvent.customContext","location":"core/dev.kord.core.event.role/-role-delete-event/custom-context.html","searchKeys":["customContext","open override val customContext: Any?","dev.kord.core.event.role.RoleDeleteEvent.customContext"]},{"name":"open override val customContext: Any?","description":"dev.kord.core.event.role.RoleUpdateEvent.customContext","location":"core/dev.kord.core.event.role/-role-update-event/custom-context.html","searchKeys":["customContext","open override val customContext: Any?","dev.kord.core.event.role.RoleUpdateEvent.customContext"]},{"name":"open override val customContext: Any?","description":"dev.kord.core.event.user.PresenceUpdateEvent.customContext","location":"core/dev.kord.core.event.user/-presence-update-event/custom-context.html","searchKeys":["customContext","open override val customContext: Any?","dev.kord.core.event.user.PresenceUpdateEvent.customContext"]},{"name":"open override val customContext: Any?","description":"dev.kord.core.event.user.UserUpdateEvent.customContext","location":"core/dev.kord.core.event.user/-user-update-event/custom-context.html","searchKeys":["customContext","open override val customContext: Any?","dev.kord.core.event.user.UserUpdateEvent.customContext"]},{"name":"open override val customContext: Any?","description":"dev.kord.core.event.user.VoiceStateUpdateEvent.customContext","location":"core/dev.kord.core.event.user/-voice-state-update-event/custom-context.html","searchKeys":["customContext","open override val customContext: Any?","dev.kord.core.event.user.VoiceStateUpdateEvent.customContext"]},{"name":"open override val customId: Optional<String>","description":"dev.kord.core.cache.data.ChatComponentData.customId","location":"core/dev.kord.core.cache.data/-chat-component-data/custom-id.html","searchKeys":["customId","open override val customId: Optional<String>","dev.kord.core.cache.data.ChatComponentData.customId"]},{"name":"open override val customId: Optional<String>","description":"dev.kord.core.cache.data.TextInputComponentData.customId","location":"core/dev.kord.core.cache.data/-text-input-component-data/custom-id.html","searchKeys":["customId","open override val customId: Optional<String>","dev.kord.core.cache.data.TextInputComponentData.customId"]},{"name":"open override val customInstallUrl: Optional<String>","description":"dev.kord.core.cache.data.ApplicationData.customInstallUrl","location":"core/dev.kord.core.cache.data/-application-data/custom-install-url.html","searchKeys":["customInstallUrl","open override val customInstallUrl: Optional<String>","dev.kord.core.cache.data.ApplicationData.customInstallUrl"]},{"name":"open override val customInstallUrl: Optional<String>","description":"dev.kord.core.cache.data.PartialApplicationData.customInstallUrl","location":"core/dev.kord.core.cache.data/-partial-application-data/custom-install-url.html","searchKeys":["customInstallUrl","open override val customInstallUrl: Optional<String>","dev.kord.core.cache.data.PartialApplicationData.customInstallUrl"]},{"name":"open override val data: ApplicationCommandData","description":"dev.kord.core.entity.application.GlobalChatInputCommand.data","location":"core/dev.kord.core.entity.application/-global-chat-input-command/data.html","searchKeys":["data","open override val data: ApplicationCommandData","dev.kord.core.entity.application.GlobalChatInputCommand.data"]},{"name":"open override val data: ApplicationCommandData","description":"dev.kord.core.entity.application.GlobalMessageCommand.data","location":"core/dev.kord.core.entity.application/-global-message-command/data.html","searchKeys":["data","open override val data: ApplicationCommandData","dev.kord.core.entity.application.GlobalMessageCommand.data"]},{"name":"open override val data: ApplicationCommandData","description":"dev.kord.core.entity.application.GlobalUserCommand.data","location":"core/dev.kord.core.entity.application/-global-user-command/data.html","searchKeys":["data","open override val data: ApplicationCommandData","dev.kord.core.entity.application.GlobalUserCommand.data"]},{"name":"open override val data: ApplicationCommandData","description":"dev.kord.core.entity.application.GuildChatInputCommand.data","location":"core/dev.kord.core.entity.application/-guild-chat-input-command/data.html","searchKeys":["data","open override val data: ApplicationCommandData","dev.kord.core.entity.application.GuildChatInputCommand.data"]},{"name":"open override val data: ApplicationCommandData","description":"dev.kord.core.entity.application.GuildMessageCommand.data","location":"core/dev.kord.core.entity.application/-guild-message-command/data.html","searchKeys":["data","open override val data: ApplicationCommandData","dev.kord.core.entity.application.GuildMessageCommand.data"]},{"name":"open override val data: ApplicationCommandData","description":"dev.kord.core.entity.application.GuildUserCommand.data","location":"core/dev.kord.core.entity.application/-guild-user-command/data.html","searchKeys":["data","open override val data: ApplicationCommandData","dev.kord.core.entity.application.GuildUserCommand.data"]},{"name":"open override val data: ApplicationCommandData","description":"dev.kord.core.entity.application.UnknownGlobalApplicationCommand.data","location":"core/dev.kord.core.entity.application/-unknown-global-application-command/data.html","searchKeys":["data","open override val data: ApplicationCommandData","dev.kord.core.entity.application.UnknownGlobalApplicationCommand.data"]},{"name":"open override val data: ApplicationCommandData","description":"dev.kord.core.entity.application.UnknownGuildApplicationCommand.data","location":"core/dev.kord.core.entity.application/-unknown-guild-application-command/data.html","searchKeys":["data","open override val data: ApplicationCommandData","dev.kord.core.entity.application.UnknownGuildApplicationCommand.data"]},{"name":"open override val data: ApplicationData","description":"dev.kord.core.entity.Application.data","location":"core/dev.kord.core.entity/-application/data.html","searchKeys":["data","open override val data: ApplicationData","dev.kord.core.entity.Application.data"]},{"name":"open override val data: ApplicationInteractionData","description":"dev.kord.core.entity.interaction.GroupCommand.data","location":"core/dev.kord.core.entity.interaction/-group-command/data.html","searchKeys":["data","open override val data: ApplicationInteractionData","dev.kord.core.entity.interaction.GroupCommand.data"]},{"name":"open override val data: ApplicationInteractionData","description":"dev.kord.core.entity.interaction.RootCommand.data","location":"core/dev.kord.core.entity.interaction/-root-command/data.html","searchKeys":["data","open override val data: ApplicationInteractionData","dev.kord.core.entity.interaction.RootCommand.data"]},{"name":"open override val data: ApplicationInteractionData","description":"dev.kord.core.entity.interaction.SubCommand.data","location":"core/dev.kord.core.entity.interaction/-sub-command/data.html","searchKeys":["data","open override val data: ApplicationInteractionData","dev.kord.core.entity.interaction.SubCommand.data"]},{"name":"open override val data: ChannelData","description":"dev.kord.core.entity.channel.Category.data","location":"core/dev.kord.core.entity.channel/-category/data.html","searchKeys":["data","open override val data: ChannelData","dev.kord.core.entity.channel.Category.data"]},{"name":"open override val data: ChannelData","description":"dev.kord.core.entity.channel.DmChannel.data","location":"core/dev.kord.core.entity.channel/-dm-channel/data.html","searchKeys":["data","open override val data: ChannelData","dev.kord.core.entity.channel.DmChannel.data"]},{"name":"open override val data: ChannelData","description":"dev.kord.core.entity.channel.NewsChannel.data","location":"core/dev.kord.core.entity.channel/-news-channel/data.html","searchKeys":["data","open override val data: ChannelData","dev.kord.core.entity.channel.NewsChannel.data"]},{"name":"open override val data: ChannelData","description":"dev.kord.core.entity.channel.ResolvedChannel.data","location":"core/dev.kord.core.entity.channel/-resolved-channel/data.html","searchKeys":["data","open override val data: ChannelData","dev.kord.core.entity.channel.ResolvedChannel.data"]},{"name":"open override val data: ChannelData","description":"dev.kord.core.entity.channel.StageChannel.data","location":"core/dev.kord.core.entity.channel/-stage-channel/data.html","searchKeys":["data","open override val data: ChannelData","dev.kord.core.entity.channel.StageChannel.data"]},{"name":"open override val data: ChannelData","description":"dev.kord.core.entity.channel.TextChannel.data","location":"core/dev.kord.core.entity.channel/-text-channel/data.html","searchKeys":["data","open override val data: ChannelData","dev.kord.core.entity.channel.TextChannel.data"]},{"name":"open override val data: ChannelData","description":"dev.kord.core.entity.channel.VoiceChannel.data","location":"core/dev.kord.core.entity.channel/-voice-channel/data.html","searchKeys":["data","open override val data: ChannelData","dev.kord.core.entity.channel.VoiceChannel.data"]},{"name":"open override val data: ChannelData","description":"dev.kord.core.entity.channel.thread.NewsChannelThread.data","location":"core/dev.kord.core.entity.channel.thread/-news-channel-thread/data.html","searchKeys":["data","open override val data: ChannelData","dev.kord.core.entity.channel.thread.NewsChannelThread.data"]},{"name":"open override val data: ChannelData","description":"dev.kord.core.entity.channel.thread.TextChannelThread.data","location":"core/dev.kord.core.entity.channel.thread/-text-channel-thread/data.html","searchKeys":["data","open override val data: ChannelData","dev.kord.core.entity.channel.thread.TextChannelThread.data"]},{"name":"open override val data: ChatComponentData","description":"dev.kord.core.entity.component.ButtonComponent.data","location":"core/dev.kord.core.entity.component/-button-component/data.html","searchKeys":["data","open override val data: ChatComponentData","dev.kord.core.entity.component.ButtonComponent.data"]},{"name":"open override val data: ComponentData","description":"dev.kord.core.entity.component.ActionRowComponent.data","location":"core/dev.kord.core.entity.component/-action-row-component/data.html","searchKeys":["data","open override val data: ComponentData","dev.kord.core.entity.component.ActionRowComponent.data"]},{"name":"open override val data: ComponentData","description":"dev.kord.core.entity.component.SelectMenuComponent.data","location":"core/dev.kord.core.entity.component/-select-menu-component/data.html","searchKeys":["data","open override val data: ComponentData","dev.kord.core.entity.component.SelectMenuComponent.data"]},{"name":"open override val data: ComponentData","description":"dev.kord.core.entity.component.UnknownComponent.data","location":"core/dev.kord.core.entity.component/-unknown-component/data.html","searchKeys":["data","open override val data: ComponentData","dev.kord.core.entity.component.UnknownComponent.data"]},{"name":"open override val data: InteractionData","description":"dev.kord.core.entity.interaction.GlobalAutoCompleteInteraction.data","location":"core/dev.kord.core.entity.interaction/-global-auto-complete-interaction/data.html","searchKeys":["data","open override val data: InteractionData","dev.kord.core.entity.interaction.GlobalAutoCompleteInteraction.data"]},{"name":"open override val data: InteractionData","description":"dev.kord.core.entity.interaction.GlobalButtonInteraction.data","location":"core/dev.kord.core.entity.interaction/-global-button-interaction/data.html","searchKeys":["data","open override val data: InteractionData","dev.kord.core.entity.interaction.GlobalButtonInteraction.data"]},{"name":"open override val data: InteractionData","description":"dev.kord.core.entity.interaction.GlobalChatInputCommandInteraction.data","location":"core/dev.kord.core.entity.interaction/-global-chat-input-command-interaction/data.html","searchKeys":["data","open override val data: InteractionData","dev.kord.core.entity.interaction.GlobalChatInputCommandInteraction.data"]},{"name":"open override val data: InteractionData","description":"dev.kord.core.entity.interaction.GlobalMessageCommandInteraction.data","location":"core/dev.kord.core.entity.interaction/-global-message-command-interaction/data.html","searchKeys":["data","open override val data: InteractionData","dev.kord.core.entity.interaction.GlobalMessageCommandInteraction.data"]},{"name":"open override val data: InteractionData","description":"dev.kord.core.entity.interaction.GlobalModalSubmitInteraction.data","location":"core/dev.kord.core.entity.interaction/-global-modal-submit-interaction/data.html","searchKeys":["data","open override val data: InteractionData","dev.kord.core.entity.interaction.GlobalModalSubmitInteraction.data"]},{"name":"open override val data: InteractionData","description":"dev.kord.core.entity.interaction.GlobalSelectMenuInteraction.data","location":"core/dev.kord.core.entity.interaction/-global-select-menu-interaction/data.html","searchKeys":["data","open override val data: InteractionData","dev.kord.core.entity.interaction.GlobalSelectMenuInteraction.data"]},{"name":"open override val data: InteractionData","description":"dev.kord.core.entity.interaction.GlobalUserCommandInteraction.data","location":"core/dev.kord.core.entity.interaction/-global-user-command-interaction/data.html","searchKeys":["data","open override val data: InteractionData","dev.kord.core.entity.interaction.GlobalUserCommandInteraction.data"]},{"name":"open override val data: InteractionData","description":"dev.kord.core.entity.interaction.GuildAutoCompleteInteraction.data","location":"core/dev.kord.core.entity.interaction/-guild-auto-complete-interaction/data.html","searchKeys":["data","open override val data: InteractionData","dev.kord.core.entity.interaction.GuildAutoCompleteInteraction.data"]},{"name":"open override val data: InteractionData","description":"dev.kord.core.entity.interaction.GuildButtonInteraction.data","location":"core/dev.kord.core.entity.interaction/-guild-button-interaction/data.html","searchKeys":["data","open override val data: InteractionData","dev.kord.core.entity.interaction.GuildButtonInteraction.data"]},{"name":"open override val data: InteractionData","description":"dev.kord.core.entity.interaction.GuildChatInputCommandInteraction.data","location":"core/dev.kord.core.entity.interaction/-guild-chat-input-command-interaction/data.html","searchKeys":["data","open override val data: InteractionData","dev.kord.core.entity.interaction.GuildChatInputCommandInteraction.data"]},{"name":"open override val data: InteractionData","description":"dev.kord.core.entity.interaction.GuildMessageCommandInteraction.data","location":"core/dev.kord.core.entity.interaction/-guild-message-command-interaction/data.html","searchKeys":["data","open override val data: InteractionData","dev.kord.core.entity.interaction.GuildMessageCommandInteraction.data"]},{"name":"open override val data: InteractionData","description":"dev.kord.core.entity.interaction.GuildModalSubmitInteraction.data","location":"core/dev.kord.core.entity.interaction/-guild-modal-submit-interaction/data.html","searchKeys":["data","open override val data: InteractionData","dev.kord.core.entity.interaction.GuildModalSubmitInteraction.data"]},{"name":"open override val data: InteractionData","description":"dev.kord.core.entity.interaction.GuildSelectMenuInteraction.data","location":"core/dev.kord.core.entity.interaction/-guild-select-menu-interaction/data.html","searchKeys":["data","open override val data: InteractionData","dev.kord.core.entity.interaction.GuildSelectMenuInteraction.data"]},{"name":"open override val data: InteractionData","description":"dev.kord.core.entity.interaction.GuildUserCommandInteraction.data","location":"core/dev.kord.core.entity.interaction/-guild-user-command-interaction/data.html","searchKeys":["data","open override val data: InteractionData","dev.kord.core.entity.interaction.GuildUserCommandInteraction.data"]},{"name":"open override val data: InviteWithMetadataData","description":"dev.kord.core.entity.InviteWithMetadata.data","location":"core/dev.kord.core.entity/-invite-with-metadata/data.html","searchKeys":["data","open override val data: InviteWithMetadataData","dev.kord.core.entity.InviteWithMetadata.data"]},{"name":"open override val data: PartialApplicationData","description":"dev.kord.core.entity.PartialApplication.data","location":"core/dev.kord.core.entity/-partial-application/data.html","searchKeys":["data","open override val data: PartialApplicationData","dev.kord.core.entity.PartialApplication.data"]},{"name":"open override val data: TextInputComponentData","description":"dev.kord.core.entity.component.TextInputComponent.data","location":"core/dev.kord.core.entity.component/-text-input-component/data.html","searchKeys":["data","open override val data: TextInputComponentData","dev.kord.core.entity.component.TextInputComponent.data"]},{"name":"open override val description: String","description":"dev.kord.core.cache.data.ApplicationData.description","location":"core/dev.kord.core.cache.data/-application-data/description.html","searchKeys":["description","open override val description: String","dev.kord.core.cache.data.ApplicationData.description"]},{"name":"open override val description: String","description":"dev.kord.core.cache.data.PartialApplicationData.description","location":"core/dev.kord.core.cache.data/-partial-application-data/description.html","searchKeys":["description","open override val description: String","dev.kord.core.cache.data.PartialApplicationData.description"]},{"name":"open override val descriptor: SerialDescriptor","description":"dev.kord.core.cache.data.NotSerializable.descriptor","location":"core/dev.kord.core.cache.data/-not-serializable/descriptor.html","searchKeys":["descriptor","open override val descriptor: SerialDescriptor","dev.kord.core.cache.data.NotSerializable.descriptor"]},{"name":"open override val disabled: OptionalBoolean","description":"dev.kord.core.cache.data.ChatComponentData.disabled","location":"core/dev.kord.core.cache.data/-chat-component-data/disabled.html","searchKeys":["disabled","open override val disabled: OptionalBoolean","dev.kord.core.cache.data.ChatComponentData.disabled"]},{"name":"open override val disabled: OptionalBoolean","description":"dev.kord.core.cache.data.TextInputComponentData.disabled","location":"core/dev.kord.core.cache.data/-text-input-component-data/disabled.html","searchKeys":["disabled","open override val disabled: OptionalBoolean","dev.kord.core.cache.data.TextInputComponentData.disabled"]},{"name":"open override val emoji: Optional<DiscordPartialEmoji>","description":"dev.kord.core.cache.data.ChatComponentData.emoji","location":"core/dev.kord.core.cache.data/-chat-component-data/emoji.html","searchKeys":["emoji","open override val emoji: Optional<DiscordPartialEmoji>","dev.kord.core.cache.data.ChatComponentData.emoji"]},{"name":"open override val emoji: Optional<DiscordPartialEmoji>","description":"dev.kord.core.cache.data.TextInputComponentData.emoji","location":"core/dev.kord.core.cache.data/-text-input-component-data/emoji.html","searchKeys":["emoji","open override val emoji: Optional<DiscordPartialEmoji>","dev.kord.core.cache.data.TextInputComponentData.emoji"]},{"name":"open override val events: Flow<ShardEvent>","description":"dev.kord.core.gateway.DefaultMasterGateway.events","location":"core/dev.kord.core.gateway/-default-master-gateway/events.html","searchKeys":["events","open override val events: Flow<ShardEvent>","dev.kord.core.gateway.DefaultMasterGateway.events"]},{"name":"open override val expiresAt: Optional<Instant?>","description":"dev.kord.core.cache.data.InviteData.expiresAt","location":"core/dev.kord.core.cache.data/-invite-data/expires-at.html","searchKeys":["expiresAt","open override val expiresAt: Optional<Instant?>","dev.kord.core.cache.data.InviteData.expiresAt"]},{"name":"open override val expiresAt: Optional<Instant?>","description":"dev.kord.core.cache.data.InviteWithMetadataData.expiresAt","location":"core/dev.kord.core.cache.data/-invite-with-metadata-data/expires-at.html","searchKeys":["expiresAt","open override val expiresAt: Optional<Instant?>","dev.kord.core.cache.data.InviteWithMetadataData.expiresAt"]},{"name":"open override val flags: Optional<ApplicationFlags>","description":"dev.kord.core.cache.data.ApplicationData.flags","location":"core/dev.kord.core.cache.data/-application-data/flags.html","searchKeys":["flags","open override val flags: Optional<ApplicationFlags>","dev.kord.core.cache.data.ApplicationData.flags"]},{"name":"open override val flags: Optional<ApplicationFlags>","description":"dev.kord.core.cache.data.PartialApplicationData.flags","location":"core/dev.kord.core.cache.data/-partial-application-data/flags.html","searchKeys":["flags","open override val flags: Optional<ApplicationFlags>","dev.kord.core.cache.data.PartialApplicationData.flags"]},{"name":"open override val focused: Boolean","description":"dev.kord.core.entity.interaction.AttachmentOptionValue.focused","location":"core/dev.kord.core.entity.interaction/-attachment-option-value/focused.html","searchKeys":["focused","open override val focused: Boolean","dev.kord.core.entity.interaction.AttachmentOptionValue.focused"]},{"name":"open override val focused: Boolean","description":"dev.kord.core.entity.interaction.BooleanOptionValue.focused","location":"core/dev.kord.core.entity.interaction/-boolean-option-value/focused.html","searchKeys":["focused","open override val focused: Boolean","dev.kord.core.entity.interaction.BooleanOptionValue.focused"]},{"name":"open override val focused: Boolean","description":"dev.kord.core.entity.interaction.ChannelOptionValue.focused","location":"core/dev.kord.core.entity.interaction/-channel-option-value/focused.html","searchKeys":["focused","open override val focused: Boolean","dev.kord.core.entity.interaction.ChannelOptionValue.focused"]},{"name":"open override val focused: Boolean","description":"dev.kord.core.entity.interaction.IntegerOptionValue.focused","location":"core/dev.kord.core.entity.interaction/-integer-option-value/focused.html","searchKeys":["focused","open override val focused: Boolean","dev.kord.core.entity.interaction.IntegerOptionValue.focused"]},{"name":"open override val focused: Boolean","description":"dev.kord.core.entity.interaction.MentionableOptionValue.focused","location":"core/dev.kord.core.entity.interaction/-mentionable-option-value/focused.html","searchKeys":["focused","open override val focused: Boolean","dev.kord.core.entity.interaction.MentionableOptionValue.focused"]},{"name":"open override val focused: Boolean","description":"dev.kord.core.entity.interaction.NumberOptionValue.focused","location":"core/dev.kord.core.entity.interaction/-number-option-value/focused.html","searchKeys":["focused","open override val focused: Boolean","dev.kord.core.entity.interaction.NumberOptionValue.focused"]},{"name":"open override val focused: Boolean","description":"dev.kord.core.entity.interaction.RoleOptionValue.focused","location":"core/dev.kord.core.entity.interaction/-role-option-value/focused.html","searchKeys":["focused","open override val focused: Boolean","dev.kord.core.entity.interaction.RoleOptionValue.focused"]},{"name":"open override val focused: Boolean","description":"dev.kord.core.entity.interaction.StringOptionValue.focused","location":"core/dev.kord.core.entity.interaction/-string-option-value/focused.html","searchKeys":["focused","open override val focused: Boolean","dev.kord.core.entity.interaction.StringOptionValue.focused"]},{"name":"open override val focused: Boolean","description":"dev.kord.core.entity.interaction.UserOptionValue.focused","location":"core/dev.kord.core.entity.interaction/-user-option-value/focused.html","searchKeys":["focused","open override val focused: Boolean","dev.kord.core.entity.interaction.UserOptionValue.focused"]},{"name":"open override val gateways: Map<Int, Gateway>","description":"dev.kord.core.gateway.DefaultMasterGateway.gateways","location":"core/dev.kord.core.gateway/-default-master-gateway/gateways.html","searchKeys":["gateways","open override val gateways: Map<Int, Gateway>","dev.kord.core.gateway.DefaultMasterGateway.gateways"]},{"name":"open override val guild: GuildBehavior","description":"dev.kord.core.entity.channel.Category.guild","location":"core/dev.kord.core.entity.channel/-category/guild.html","searchKeys":["guild","open override val guild: GuildBehavior","dev.kord.core.entity.channel.Category.guild"]},{"name":"open override val guild: Optional<PartialGuildData>","description":"dev.kord.core.cache.data.InviteData.guild","location":"core/dev.kord.core.cache.data/-invite-data/guild.html","searchKeys":["guild","open override val guild: Optional<PartialGuildData>","dev.kord.core.cache.data.InviteData.guild"]},{"name":"open override val guild: Optional<PartialGuildData>","description":"dev.kord.core.cache.data.InviteWithMetadataData.guild","location":"core/dev.kord.core.cache.data/-invite-with-metadata-data/guild.html","searchKeys":["guild","open override val guild: Optional<PartialGuildData>","dev.kord.core.cache.data.InviteWithMetadataData.guild"]},{"name":"open override val guildId: OptionalSnowflake","description":"dev.kord.core.cache.data.ApplicationData.guildId","location":"core/dev.kord.core.cache.data/-application-data/guild-id.html","searchKeys":["guildId","open override val guildId: OptionalSnowflake","dev.kord.core.cache.data.ApplicationData.guildId"]},{"name":"open override val guildId: OptionalSnowflake","description":"dev.kord.core.cache.data.PartialApplicationData.guildId","location":"core/dev.kord.core.cache.data/-partial-application-data/guild-id.html","searchKeys":["guildId","open override val guildId: OptionalSnowflake","dev.kord.core.cache.data.PartialApplicationData.guildId"]},{"name":"open override val guildId: Snowflake","description":"dev.kord.core.entity.GuildScheduledEvent.guildId","location":"core/dev.kord.core.entity/-guild-scheduled-event/guild-id.html","searchKeys":["guildId","open override val guildId: Snowflake","dev.kord.core.entity.GuildScheduledEvent.guildId"]},{"name":"open override val guildId: Snowflake","description":"dev.kord.core.entity.GuildSticker.guildId","location":"core/dev.kord.core.entity/-guild-sticker/guild-id.html","searchKeys":["guildId","open override val guildId: Snowflake","dev.kord.core.entity.GuildSticker.guildId"]},{"name":"open override val guildId: Snowflake","description":"dev.kord.core.entity.Member.guildId","location":"core/dev.kord.core.entity/-member/guild-id.html","searchKeys":["guildId","open override val guildId: Snowflake","dev.kord.core.entity.Member.guildId"]},{"name":"open override val guildId: Snowflake","description":"dev.kord.core.entity.Role.guildId","location":"core/dev.kord.core.entity/-role/guild-id.html","searchKeys":["guildId","open override val guildId: Snowflake","dev.kord.core.entity.Role.guildId"]},{"name":"open override val guildId: Snowflake","description":"dev.kord.core.entity.Template.guildId","location":"core/dev.kord.core.entity/-template/guild-id.html","searchKeys":["guildId","open override val guildId: Snowflake","dev.kord.core.entity.Template.guildId"]},{"name":"open override val guildId: Snowflake","description":"dev.kord.core.entity.application.GuildChatInputCommand.guildId","location":"core/dev.kord.core.entity.application/-guild-chat-input-command/guild-id.html","searchKeys":["guildId","open override val guildId: Snowflake","dev.kord.core.entity.application.GuildChatInputCommand.guildId"]},{"name":"open override val guildId: Snowflake","description":"dev.kord.core.entity.application.GuildMessageCommand.guildId","location":"core/dev.kord.core.entity.application/-guild-message-command/guild-id.html","searchKeys":["guildId","open override val guildId: Snowflake","dev.kord.core.entity.application.GuildMessageCommand.guildId"]},{"name":"open override val guildId: Snowflake","description":"dev.kord.core.entity.application.GuildUserCommand.guildId","location":"core/dev.kord.core.entity.application/-guild-user-command/guild-id.html","searchKeys":["guildId","open override val guildId: Snowflake","dev.kord.core.entity.application.GuildUserCommand.guildId"]},{"name":"open override val guildId: Snowflake","description":"dev.kord.core.entity.application.UnknownGuildApplicationCommand.guildId","location":"core/dev.kord.core.entity.application/-unknown-guild-application-command/guild-id.html","searchKeys":["guildId","open override val guildId: Snowflake","dev.kord.core.entity.application.UnknownGuildApplicationCommand.guildId"]},{"name":"open override val guildId: Snowflake","description":"dev.kord.core.entity.channel.Category.guildId","location":"core/dev.kord.core.entity.channel/-category/guild-id.html","searchKeys":["guildId","open override val guildId: Snowflake","dev.kord.core.entity.channel.Category.guildId"]},{"name":"open override val guildId: Snowflake","description":"dev.kord.core.entity.channel.GuildChannel.guildId","location":"core/dev.kord.core.entity.channel/-guild-channel/guild-id.html","searchKeys":["guildId","open override val guildId: Snowflake","dev.kord.core.entity.channel.GuildChannel.guildId"]},{"name":"open override val guildId: Snowflake","description":"dev.kord.core.entity.channel.TopGuildChannel.guildId","location":"core/dev.kord.core.entity.channel/-top-guild-channel/guild-id.html","searchKeys":["guildId","open override val guildId: Snowflake","dev.kord.core.entity.channel.TopGuildChannel.guildId"]},{"name":"open override val guildId: Snowflake","description":"dev.kord.core.entity.channel.thread.NewsChannelThread.guildId","location":"core/dev.kord.core.entity.channel.thread/-news-channel-thread/guild-id.html","searchKeys":["guildId","open override val guildId: Snowflake","dev.kord.core.entity.channel.thread.NewsChannelThread.guildId"]},{"name":"open override val guildId: Snowflake","description":"dev.kord.core.entity.channel.thread.TextChannelThread.guildId","location":"core/dev.kord.core.entity.channel.thread/-text-channel-thread/guild-id.html","searchKeys":["guildId","open override val guildId: Snowflake","dev.kord.core.entity.channel.thread.TextChannelThread.guildId"]},{"name":"open override val guildId: Snowflake","description":"dev.kord.core.entity.interaction.GuildInteraction.guildId","location":"core/dev.kord.core.entity.interaction/-guild-interaction/guild-id.html","searchKeys":["guildId","open override val guildId: Snowflake","dev.kord.core.entity.interaction.GuildInteraction.guildId"]},{"name":"open override val guildId: Snowflake","description":"dev.kord.core.event.automoderation.AutoModerationActionExecutionEvent.guildId","location":"core/dev.kord.core.event.automoderation/-auto-moderation-action-execution-event/guild-id.html","searchKeys":["guildId","open override val guildId: Snowflake","dev.kord.core.event.automoderation.AutoModerationActionExecutionEvent.guildId"]},{"name":"open override val guildId: Snowflake","description":"dev.kord.core.event.automoderation.AutoModerationRuleConfigurationEvent.guildId","location":"core/dev.kord.core.event.automoderation/-auto-moderation-rule-configuration-event/guild-id.html","searchKeys":["guildId","open override val guildId: Snowflake","dev.kord.core.event.automoderation.AutoModerationRuleConfigurationEvent.guildId"]},{"name":"open override val guildId: Snowflake","description":"dev.kord.core.event.guild.GuildScheduledEventUserAddEvent.guildId","location":"core/dev.kord.core.event.guild/-guild-scheduled-event-user-add-event/guild-id.html","searchKeys":["guildId","open override val guildId: Snowflake","dev.kord.core.event.guild.GuildScheduledEventUserAddEvent.guildId"]},{"name":"open override val guildId: Snowflake","description":"dev.kord.core.event.guild.GuildScheduledEventUserRemoveEvent.guildId","location":"core/dev.kord.core.event.guild/-guild-scheduled-event-user-remove-event/guild-id.html","searchKeys":["guildId","open override val guildId: Snowflake","dev.kord.core.event.guild.GuildScheduledEventUserRemoveEvent.guildId"]},{"name":"open override val guildScheduledEvent: Optional<GuildScheduledEventData>","description":"dev.kord.core.cache.data.InviteData.guildScheduledEvent","location":"core/dev.kord.core.cache.data/-invite-data/guild-scheduled-event.html","searchKeys":["guildScheduledEvent","open override val guildScheduledEvent: Optional<GuildScheduledEventData>","dev.kord.core.cache.data.InviteData.guildScheduledEvent"]},{"name":"open override val guildScheduledEvent: Optional<GuildScheduledEventData>","description":"dev.kord.core.cache.data.InviteWithMetadataData.guildScheduledEvent","location":"core/dev.kord.core.cache.data/-invite-with-metadata-data/guild-scheduled-event.html","searchKeys":["guildScheduledEvent","open override val guildScheduledEvent: Optional<GuildScheduledEventData>","dev.kord.core.cache.data.InviteWithMetadataData.guildScheduledEvent"]},{"name":"open override val guilds: Flow<Guild>","description":"dev.kord.core.supplier.CacheEntitySupplier.guilds","location":"core/dev.kord.core.supplier/-cache-entity-supplier/guilds.html","searchKeys":["guilds","open override val guilds: Flow<Guild>","dev.kord.core.supplier.CacheEntitySupplier.guilds"]},{"name":"open override val guilds: Flow<Guild>","description":"dev.kord.core.supplier.RestEntitySupplier.guilds","location":"core/dev.kord.core.supplier/-rest-entity-supplier/guilds.html","searchKeys":["guilds","open override val guilds: Flow<Guild>","dev.kord.core.supplier.RestEntitySupplier.guilds"]},{"name":"open override val guilds: Flow<Guild>","description":"dev.kord.core.supplier.StoreEntitySupplier.guilds","location":"core/dev.kord.core.supplier/-store-entity-supplier/guilds.html","searchKeys":["guilds","open override val guilds: Flow<Guild>","dev.kord.core.supplier.StoreEntitySupplier.guilds"]},{"name":"open override val icon: String?","description":"dev.kord.core.cache.data.ApplicationData.icon","location":"core/dev.kord.core.cache.data/-application-data/icon.html","searchKeys":["icon","open override val icon: String?","dev.kord.core.cache.data.ApplicationData.icon"]},{"name":"open override val icon: String?","description":"dev.kord.core.cache.data.PartialApplicationData.icon","location":"core/dev.kord.core.cache.data/-partial-application-data/icon.html","searchKeys":["icon","open override val icon: String?","dev.kord.core.cache.data.PartialApplicationData.icon"]},{"name":"open override val id: Snowflake","description":"dev.kord.core.cache.data.ApplicationData.id","location":"core/dev.kord.core.cache.data/-application-data/id.html","searchKeys":["id","open override val id: Snowflake","dev.kord.core.cache.data.ApplicationData.id"]},{"name":"open override val id: Snowflake","description":"dev.kord.core.cache.data.PartialApplicationData.id","location":"core/dev.kord.core.cache.data/-partial-application-data/id.html","searchKeys":["id","open override val id: Snowflake","dev.kord.core.cache.data.PartialApplicationData.id"]},{"name":"open override val id: Snowflake","description":"dev.kord.core.entity.Attachment.id","location":"core/dev.kord.core.entity/-attachment/id.html","searchKeys":["id","open override val id: Snowflake","dev.kord.core.entity.Attachment.id"]},{"name":"open override val id: Snowflake","description":"dev.kord.core.entity.Guild.id","location":"core/dev.kord.core.entity/-guild/id.html","searchKeys":["id","open override val id: Snowflake","dev.kord.core.entity.Guild.id"]},{"name":"open override val id: Snowflake","description":"dev.kord.core.entity.GuildEmoji.id","location":"core/dev.kord.core.entity/-guild-emoji/id.html","searchKeys":["id","open override val id: Snowflake","dev.kord.core.entity.GuildEmoji.id"]},{"name":"open override val id: Snowflake","description":"dev.kord.core.entity.GuildPreview.id","location":"core/dev.kord.core.entity/-guild-preview/id.html","searchKeys":["id","open override val id: Snowflake","dev.kord.core.entity.GuildPreview.id"]},{"name":"open override val id: Snowflake","description":"dev.kord.core.entity.GuildScheduledEvent.id","location":"core/dev.kord.core.entity/-guild-scheduled-event/id.html","searchKeys":["id","open override val id: Snowflake","dev.kord.core.entity.GuildScheduledEvent.id"]},{"name":"open override val id: Snowflake","description":"dev.kord.core.entity.Integration.id","location":"core/dev.kord.core.entity/-integration/id.html","searchKeys":["id","open override val id: Snowflake","dev.kord.core.entity.Integration.id"]},{"name":"open override val id: Snowflake","description":"dev.kord.core.entity.Message.Interaction.id","location":"core/dev.kord.core.entity/-message/-interaction/id.html","searchKeys":["id","open override val id: Snowflake","dev.kord.core.entity.Message.Interaction.id"]},{"name":"open override val id: Snowflake","description":"dev.kord.core.entity.Message.id","location":"core/dev.kord.core.entity/-message/id.html","searchKeys":["id","open override val id: Snowflake","dev.kord.core.entity.Message.id"]},{"name":"open override val id: Snowflake","description":"dev.kord.core.entity.PartialGuild.id","location":"core/dev.kord.core.entity/-partial-guild/id.html","searchKeys":["id","open override val id: Snowflake","dev.kord.core.entity.PartialGuild.id"]},{"name":"open override val id: Snowflake","description":"dev.kord.core.entity.Role.id","location":"core/dev.kord.core.entity/-role/id.html","searchKeys":["id","open override val id: Snowflake","dev.kord.core.entity.Role.id"]},{"name":"open override val id: Snowflake","description":"dev.kord.core.entity.StageInstance.id","location":"core/dev.kord.core.entity/-stage-instance/id.html","searchKeys":["id","open override val id: Snowflake","dev.kord.core.entity.StageInstance.id"]},{"name":"open override val id: Snowflake","description":"dev.kord.core.entity.Sticker.id","location":"core/dev.kord.core.entity/-sticker/id.html","searchKeys":["id","open override val id: Snowflake","dev.kord.core.entity.Sticker.id"]},{"name":"open override val id: Snowflake","description":"dev.kord.core.entity.StickerItem.id","location":"core/dev.kord.core.entity/-sticker-item/id.html","searchKeys":["id","open override val id: Snowflake","dev.kord.core.entity.StickerItem.id"]},{"name":"open override val id: Snowflake","description":"dev.kord.core.entity.StickerPack.id","location":"core/dev.kord.core.entity/-sticker-pack/id.html","searchKeys":["id","open override val id: Snowflake","dev.kord.core.entity.StickerPack.id"]},{"name":"open override val id: Snowflake","description":"dev.kord.core.entity.Team.id","location":"core/dev.kord.core.entity/-team/id.html","searchKeys":["id","open override val id: Snowflake","dev.kord.core.entity.Team.id"]},{"name":"open override val id: Snowflake","description":"dev.kord.core.entity.User.id","location":"core/dev.kord.core.entity/-user/id.html","searchKeys":["id","open override val id: Snowflake","dev.kord.core.entity.User.id"]},{"name":"open override val id: Snowflake","description":"dev.kord.core.entity.Webhook.id","location":"core/dev.kord.core.entity/-webhook/id.html","searchKeys":["id","open override val id: Snowflake","dev.kord.core.entity.Webhook.id"]},{"name":"open override val id: Snowflake","description":"dev.kord.core.entity.application.ApplicationCommand.id","location":"core/dev.kord.core.entity.application/-application-command/id.html","searchKeys":["id","open override val id: Snowflake","dev.kord.core.entity.application.ApplicationCommand.id"]},{"name":"open override val id: Snowflake","description":"dev.kord.core.entity.channel.Channel.id","location":"core/dev.kord.core.entity.channel/-channel/id.html","searchKeys":["id","open override val id: Snowflake","dev.kord.core.entity.channel.Channel.id"]},{"name":"open override val id: Snowflake","description":"dev.kord.core.entity.channel.WelcomeScreenChannel.id","location":"core/dev.kord.core.entity.channel/-welcome-screen-channel/id.html","searchKeys":["id","open override val id: Snowflake","dev.kord.core.entity.channel.WelcomeScreenChannel.id"]},{"name":"open override val id: Snowflake","description":"dev.kord.core.entity.channel.thread.ThreadMember.id","location":"core/dev.kord.core.entity.channel.thread/-thread-member/id.html","searchKeys":["id","open override val id: Snowflake","dev.kord.core.entity.channel.thread.ThreadMember.id"]},{"name":"open override val id: Snowflake","description":"dev.kord.core.entity.interaction.Interaction.id","location":"core/dev.kord.core.entity.interaction/-interaction/id.html","searchKeys":["id","open override val id: Snowflake","dev.kord.core.entity.interaction.Interaction.id"]},{"name":"open override val id: Snowflake","description":"dev.kord.core.entity.interaction.followup.FollowupMessage.id","location":"core/dev.kord.core.entity.interaction.followup/-followup-message/id.html","searchKeys":["id","open override val id: Snowflake","dev.kord.core.entity.interaction.followup.FollowupMessage.id"]},{"name":"open override val id: Snowflake","description":"dev.kord.core.live.LiveGuild.id","location":"core/dev.kord.core.live/-live-guild/id.html","searchKeys":["id","open override val id: Snowflake","dev.kord.core.live.LiveGuild.id"]},{"name":"open override val id: Snowflake","description":"dev.kord.core.live.LiveMember.id","location":"core/dev.kord.core.live/-live-member/id.html","searchKeys":["id","open override val id: Snowflake","dev.kord.core.live.LiveMember.id"]},{"name":"open override val id: Snowflake","description":"dev.kord.core.live.LiveMessage.id","location":"core/dev.kord.core.live/-live-message/id.html","searchKeys":["id","open override val id: Snowflake","dev.kord.core.live.LiveMessage.id"]},{"name":"open override val id: Snowflake","description":"dev.kord.core.live.LiveRole.id","location":"core/dev.kord.core.live/-live-role/id.html","searchKeys":["id","open override val id: Snowflake","dev.kord.core.live.LiveRole.id"]},{"name":"open override val id: Snowflake","description":"dev.kord.core.live.LiveUser.id","location":"core/dev.kord.core.live/-live-user/id.html","searchKeys":["id","open override val id: Snowflake","dev.kord.core.live.LiveUser.id"]},{"name":"open override val id: Snowflake","description":"dev.kord.core.live.channel.LiveCategory.id","location":"core/dev.kord.core.live.channel/-live-category/id.html","searchKeys":["id","open override val id: Snowflake","dev.kord.core.live.channel.LiveCategory.id"]},{"name":"open override val id: Snowflake","description":"dev.kord.core.live.channel.LiveDmChannel.id","location":"core/dev.kord.core.live.channel/-live-dm-channel/id.html","searchKeys":["id","open override val id: Snowflake","dev.kord.core.live.channel.LiveDmChannel.id"]},{"name":"open override val id: Snowflake","description":"dev.kord.core.live.channel.LiveGuildChannel.id","location":"core/dev.kord.core.live.channel/-live-guild-channel/id.html","searchKeys":["id","open override val id: Snowflake","dev.kord.core.live.channel.LiveGuildChannel.id"]},{"name":"open override val id: Snowflake","description":"dev.kord.core.live.channel.LiveGuildMessageChannel.id","location":"core/dev.kord.core.live.channel/-live-guild-message-channel/id.html","searchKeys":["id","open override val id: Snowflake","dev.kord.core.live.channel.LiveGuildMessageChannel.id"]},{"name":"open override val id: Snowflake","description":"dev.kord.core.live.channel.LiveVoiceChannel.id","location":"core/dev.kord.core.live.channel/-live-voice-channel/id.html","searchKeys":["id","open override val id: Snowflake","dev.kord.core.live.channel.LiveVoiceChannel.id"]},{"name":"open override val installParams: Optional<InstallParams>","description":"dev.kord.core.cache.data.ApplicationData.installParams","location":"core/dev.kord.core.cache.data/-application-data/install-params.html","searchKeys":["installParams","open override val installParams: Optional<InstallParams>","dev.kord.core.cache.data.ApplicationData.installParams"]},{"name":"open override val installParams: Optional<InstallParams>","description":"dev.kord.core.cache.data.PartialApplicationData.installParams","location":"core/dev.kord.core.cache.data/-partial-application-data/install-params.html","searchKeys":["installParams","open override val installParams: Optional<InstallParams>","dev.kord.core.cache.data.PartialApplicationData.installParams"]},{"name":"open override val interaction: GlobalAutoCompleteInteraction","description":"dev.kord.core.event.interaction.GlobalAutoCompleteInteractionCreateEvent.interaction","location":"core/dev.kord.core.event.interaction/-global-auto-complete-interaction-create-event/interaction.html","searchKeys":["interaction","open override val interaction: GlobalAutoCompleteInteraction","dev.kord.core.event.interaction.GlobalAutoCompleteInteractionCreateEvent.interaction"]},{"name":"open override val interaction: GlobalButtonInteraction","description":"dev.kord.core.event.interaction.GlobalButtonInteractionCreateEvent.interaction","location":"core/dev.kord.core.event.interaction/-global-button-interaction-create-event/interaction.html","searchKeys":["interaction","open override val interaction: GlobalButtonInteraction","dev.kord.core.event.interaction.GlobalButtonInteractionCreateEvent.interaction"]},{"name":"open override val interaction: GlobalChatInputCommandInteraction","description":"dev.kord.core.event.interaction.GlobalChatInputCommandInteractionCreateEvent.interaction","location":"core/dev.kord.core.event.interaction/-global-chat-input-command-interaction-create-event/interaction.html","searchKeys":["interaction","open override val interaction: GlobalChatInputCommandInteraction","dev.kord.core.event.interaction.GlobalChatInputCommandInteractionCreateEvent.interaction"]},{"name":"open override val interaction: GlobalMessageCommandInteraction","description":"dev.kord.core.event.interaction.GlobalMessageCommandInteractionCreateEvent.interaction","location":"core/dev.kord.core.event.interaction/-global-message-command-interaction-create-event/interaction.html","searchKeys":["interaction","open override val interaction: GlobalMessageCommandInteraction","dev.kord.core.event.interaction.GlobalMessageCommandInteractionCreateEvent.interaction"]},{"name":"open override val interaction: GlobalModalSubmitInteraction","description":"dev.kord.core.event.interaction.GlobalModalSubmitInteractionCreateEvent.interaction","location":"core/dev.kord.core.event.interaction/-global-modal-submit-interaction-create-event/interaction.html","searchKeys":["interaction","open override val interaction: GlobalModalSubmitInteraction","dev.kord.core.event.interaction.GlobalModalSubmitInteractionCreateEvent.interaction"]},{"name":"open override val interaction: GlobalSelectMenuInteraction","description":"dev.kord.core.event.interaction.GlobalSelectMenuInteractionCreateEvent.interaction","location":"core/dev.kord.core.event.interaction/-global-select-menu-interaction-create-event/interaction.html","searchKeys":["interaction","open override val interaction: GlobalSelectMenuInteraction","dev.kord.core.event.interaction.GlobalSelectMenuInteractionCreateEvent.interaction"]},{"name":"open override val interaction: GlobalUserCommandInteraction","description":"dev.kord.core.event.interaction.GlobalUserCommandInteractionCreateEvent.interaction","location":"core/dev.kord.core.event.interaction/-global-user-command-interaction-create-event/interaction.html","searchKeys":["interaction","open override val interaction: GlobalUserCommandInteraction","dev.kord.core.event.interaction.GlobalUserCommandInteractionCreateEvent.interaction"]},{"name":"open override val interaction: GuildAutoCompleteInteraction","description":"dev.kord.core.event.interaction.GuildAutoCompleteInteractionCreateEvent.interaction","location":"core/dev.kord.core.event.interaction/-guild-auto-complete-interaction-create-event/interaction.html","searchKeys":["interaction","open override val interaction: GuildAutoCompleteInteraction","dev.kord.core.event.interaction.GuildAutoCompleteInteractionCreateEvent.interaction"]},{"name":"open override val interaction: GuildButtonInteraction","description":"dev.kord.core.event.interaction.GuildButtonInteractionCreateEvent.interaction","location":"core/dev.kord.core.event.interaction/-guild-button-interaction-create-event/interaction.html","searchKeys":["interaction","open override val interaction: GuildButtonInteraction","dev.kord.core.event.interaction.GuildButtonInteractionCreateEvent.interaction"]},{"name":"open override val interaction: GuildChatInputCommandInteraction","description":"dev.kord.core.event.interaction.GuildChatInputCommandInteractionCreateEvent.interaction","location":"core/dev.kord.core.event.interaction/-guild-chat-input-command-interaction-create-event/interaction.html","searchKeys":["interaction","open override val interaction: GuildChatInputCommandInteraction","dev.kord.core.event.interaction.GuildChatInputCommandInteractionCreateEvent.interaction"]},{"name":"open override val interaction: GuildMessageCommandInteraction","description":"dev.kord.core.event.interaction.GuildMessageCommandInteractionCreateEvent.interaction","location":"core/dev.kord.core.event.interaction/-guild-message-command-interaction-create-event/interaction.html","searchKeys":["interaction","open override val interaction: GuildMessageCommandInteraction","dev.kord.core.event.interaction.GuildMessageCommandInteractionCreateEvent.interaction"]},{"name":"open override val interaction: GuildModalSubmitInteraction","description":"dev.kord.core.event.interaction.GuildModalSubmitInteractionCreateEvent.interaction","location":"core/dev.kord.core.event.interaction/-guild-modal-submit-interaction-create-event/interaction.html","searchKeys":["interaction","open override val interaction: GuildModalSubmitInteraction","dev.kord.core.event.interaction.GuildModalSubmitInteractionCreateEvent.interaction"]},{"name":"open override val interaction: GuildSelectMenuInteraction","description":"dev.kord.core.event.interaction.GuildSelectMenuInteractionCreateEvent.interaction","location":"core/dev.kord.core.event.interaction/-guild-select-menu-interaction-create-event/interaction.html","searchKeys":["interaction","open override val interaction: GuildSelectMenuInteraction","dev.kord.core.event.interaction.GuildSelectMenuInteractionCreateEvent.interaction"]},{"name":"open override val interaction: GuildUserCommandInteraction","description":"dev.kord.core.event.interaction.GuildUserCommandInteractionCreateEvent.interaction","location":"core/dev.kord.core.event.interaction/-guild-user-command-interaction-create-event/interaction.html","searchKeys":["interaction","open override val interaction: GuildUserCommandInteraction","dev.kord.core.event.interaction.GuildUserCommandInteractionCreateEvent.interaction"]},{"name":"open override val inviterId: OptionalSnowflake","description":"dev.kord.core.cache.data.InviteData.inviterId","location":"core/dev.kord.core.cache.data/-invite-data/inviter-id.html","searchKeys":["inviterId","open override val inviterId: OptionalSnowflake","dev.kord.core.cache.data.InviteData.inviterId"]},{"name":"open override val inviterId: OptionalSnowflake","description":"dev.kord.core.cache.data.InviteWithMetadataData.inviterId","location":"core/dev.kord.core.cache.data/-invite-with-metadata-data/inviter-id.html","searchKeys":["inviterId","open override val inviterId: OptionalSnowflake","dev.kord.core.cache.data.InviteWithMetadataData.inviterId"]},{"name":"open override val kord: Kord","description":"dev.kord.core.entity.Attachment.kord","location":"core/dev.kord.core.entity/-attachment/kord.html","searchKeys":["kord","open override val kord: Kord","dev.kord.core.entity.Attachment.kord"]},{"name":"open override val kord: Kord","description":"dev.kord.core.entity.AuditLog.kord","location":"core/dev.kord.core.entity/-audit-log/kord.html","searchKeys":["kord","open override val kord: Kord","dev.kord.core.entity.AuditLog.kord"]},{"name":"open override val kord: Kord","description":"dev.kord.core.entity.AuditLogEntry.kord","location":"core/dev.kord.core.entity/-audit-log-entry/kord.html","searchKeys":["kord","open override val kord: Kord","dev.kord.core.entity.AuditLogEntry.kord"]},{"name":"open override val kord: Kord","description":"dev.kord.core.entity.Ban.kord","location":"core/dev.kord.core.entity/-ban/kord.html","searchKeys":["kord","open override val kord: Kord","dev.kord.core.entity.Ban.kord"]},{"name":"open override val kord: Kord","description":"dev.kord.core.entity.Embed.Author.kord","location":"core/dev.kord.core.entity/-embed/-author/kord.html","searchKeys":["kord","open override val kord: Kord","dev.kord.core.entity.Embed.Author.kord"]},{"name":"open override val kord: Kord","description":"dev.kord.core.entity.Embed.Field.kord","location":"core/dev.kord.core.entity/-embed/-field/kord.html","searchKeys":["kord","open override val kord: Kord","dev.kord.core.entity.Embed.Field.kord"]},{"name":"open override val kord: Kord","description":"dev.kord.core.entity.Embed.Footer.kord","location":"core/dev.kord.core.entity/-embed/-footer/kord.html","searchKeys":["kord","open override val kord: Kord","dev.kord.core.entity.Embed.Footer.kord"]},{"name":"open override val kord: Kord","description":"dev.kord.core.entity.Embed.Image.kord","location":"core/dev.kord.core.entity/-embed/-image/kord.html","searchKeys":["kord","open override val kord: Kord","dev.kord.core.entity.Embed.Image.kord"]},{"name":"open override val kord: Kord","description":"dev.kord.core.entity.Embed.Provider.kord","location":"core/dev.kord.core.entity/-embed/-provider/kord.html","searchKeys":["kord","open override val kord: Kord","dev.kord.core.entity.Embed.Provider.kord"]},{"name":"open override val kord: Kord","description":"dev.kord.core.entity.Embed.Thumbnail.kord","location":"core/dev.kord.core.entity/-embed/-thumbnail/kord.html","searchKeys":["kord","open override val kord: Kord","dev.kord.core.entity.Embed.Thumbnail.kord"]},{"name":"open override val kord: Kord","description":"dev.kord.core.entity.Embed.Video.kord","location":"core/dev.kord.core.entity/-embed/-video/kord.html","searchKeys":["kord","open override val kord: Kord","dev.kord.core.entity.Embed.Video.kord"]},{"name":"open override val kord: Kord","description":"dev.kord.core.entity.Embed.kord","location":"core/dev.kord.core.entity/-embed/kord.html","searchKeys":["kord","open override val kord: Kord","dev.kord.core.entity.Embed.kord"]},{"name":"open override val kord: Kord","description":"dev.kord.core.entity.Guild.kord","location":"core/dev.kord.core.entity/-guild/kord.html","searchKeys":["kord","open override val kord: Kord","dev.kord.core.entity.Guild.kord"]},{"name":"open override val kord: Kord","description":"dev.kord.core.entity.GuildEmoji.kord","location":"core/dev.kord.core.entity/-guild-emoji/kord.html","searchKeys":["kord","open override val kord: Kord","dev.kord.core.entity.GuildEmoji.kord"]},{"name":"open override val kord: Kord","description":"dev.kord.core.entity.GuildPreview.kord","location":"core/dev.kord.core.entity/-guild-preview/kord.html","searchKeys":["kord","open override val kord: Kord","dev.kord.core.entity.GuildPreview.kord"]},{"name":"open override val kord: Kord","description":"dev.kord.core.entity.GuildScheduledEvent.kord","location":"core/dev.kord.core.entity/-guild-scheduled-event/kord.html","searchKeys":["kord","open override val kord: Kord","dev.kord.core.entity.GuildScheduledEvent.kord"]},{"name":"open override val kord: Kord","description":"dev.kord.core.entity.GuildWidget.kord","location":"core/dev.kord.core.entity/-guild-widget/kord.html","searchKeys":["kord","open override val kord: Kord","dev.kord.core.entity.GuildWidget.kord"]},{"name":"open override val kord: Kord","description":"dev.kord.core.entity.Icon.kord","location":"core/dev.kord.core.entity/-icon/kord.html","searchKeys":["kord","open override val kord: Kord","dev.kord.core.entity.Icon.kord"]},{"name":"open override val kord: Kord","description":"dev.kord.core.entity.Integration.kord","location":"core/dev.kord.core.entity/-integration/kord.html","searchKeys":["kord","open override val kord: Kord","dev.kord.core.entity.Integration.kord"]},{"name":"open override val kord: Kord","description":"dev.kord.core.entity.Message.Interaction.kord","location":"core/dev.kord.core.entity/-message/-interaction/kord.html","searchKeys":["kord","open override val kord: Kord","dev.kord.core.entity.Message.Interaction.kord"]},{"name":"open override val kord: Kord","description":"dev.kord.core.entity.Message.kord","location":"core/dev.kord.core.entity/-message/kord.html","searchKeys":["kord","open override val kord: Kord","dev.kord.core.entity.Message.kord"]},{"name":"open override val kord: Kord","description":"dev.kord.core.entity.MessageReference.kord","location":"core/dev.kord.core.entity/-message-reference/kord.html","searchKeys":["kord","open override val kord: Kord","dev.kord.core.entity.MessageReference.kord"]},{"name":"open override val kord: Kord","description":"dev.kord.core.entity.PartialGuild.kord","location":"core/dev.kord.core.entity/-partial-guild/kord.html","searchKeys":["kord","open override val kord: Kord","dev.kord.core.entity.PartialGuild.kord"]},{"name":"open override val kord: Kord","description":"dev.kord.core.entity.PermissionOverwriteEntity.kord","location":"core/dev.kord.core.entity/-permission-overwrite-entity/kord.html","searchKeys":["kord","open override val kord: Kord","dev.kord.core.entity.PermissionOverwriteEntity.kord"]},{"name":"open override val kord: Kord","description":"dev.kord.core.entity.Presence.kord","location":"core/dev.kord.core.entity/-presence/kord.html","searchKeys":["kord","open override val kord: Kord","dev.kord.core.entity.Presence.kord"]},{"name":"open override val kord: Kord","description":"dev.kord.core.entity.Reaction.kord","location":"core/dev.kord.core.entity/-reaction/kord.html","searchKeys":["kord","open override val kord: Kord","dev.kord.core.entity.Reaction.kord"]},{"name":"open override val kord: Kord","description":"dev.kord.core.entity.Region.kord","location":"core/dev.kord.core.entity/-region/kord.html","searchKeys":["kord","open override val kord: Kord","dev.kord.core.entity.Region.kord"]},{"name":"open override val kord: Kord","description":"dev.kord.core.entity.Role.kord","location":"core/dev.kord.core.entity/-role/kord.html","searchKeys":["kord","open override val kord: Kord","dev.kord.core.entity.Role.kord"]},{"name":"open override val kord: Kord","description":"dev.kord.core.entity.RoleTags.kord","location":"core/dev.kord.core.entity/-role-tags/kord.html","searchKeys":["kord","open override val kord: Kord","dev.kord.core.entity.RoleTags.kord"]},{"name":"open override val kord: Kord","description":"dev.kord.core.entity.StageInstance.kord","location":"core/dev.kord.core.entity/-stage-instance/kord.html","searchKeys":["kord","open override val kord: Kord","dev.kord.core.entity.StageInstance.kord"]},{"name":"open override val kord: Kord","description":"dev.kord.core.entity.Sticker.kord","location":"core/dev.kord.core.entity/-sticker/kord.html","searchKeys":["kord","open override val kord: Kord","dev.kord.core.entity.Sticker.kord"]},{"name":"open override val kord: Kord","description":"dev.kord.core.entity.StickerItem.kord","location":"core/dev.kord.core.entity/-sticker-item/kord.html","searchKeys":["kord","open override val kord: Kord","dev.kord.core.entity.StickerItem.kord"]},{"name":"open override val kord: Kord","description":"dev.kord.core.entity.StickerPack.kord","location":"core/dev.kord.core.entity/-sticker-pack/kord.html","searchKeys":["kord","open override val kord: Kord","dev.kord.core.entity.StickerPack.kord"]},{"name":"open override val kord: Kord","description":"dev.kord.core.entity.Team.kord","location":"core/dev.kord.core.entity/-team/kord.html","searchKeys":["kord","open override val kord: Kord","dev.kord.core.entity.Team.kord"]},{"name":"open override val kord: Kord","description":"dev.kord.core.entity.Template.kord","location":"core/dev.kord.core.entity/-template/kord.html","searchKeys":["kord","open override val kord: Kord","dev.kord.core.entity.Template.kord"]},{"name":"open override val kord: Kord","description":"dev.kord.core.entity.User.Avatar.kord","location":"core/dev.kord.core.entity/-user/-avatar/kord.html","searchKeys":["kord","open override val kord: Kord","dev.kord.core.entity.User.Avatar.kord"]},{"name":"open override val kord: Kord","description":"dev.kord.core.entity.User.kord","location":"core/dev.kord.core.entity/-user/kord.html","searchKeys":["kord","open override val kord: Kord","dev.kord.core.entity.User.kord"]},{"name":"open override val kord: Kord","description":"dev.kord.core.entity.VoiceState.kord","location":"core/dev.kord.core.entity/-voice-state/kord.html","searchKeys":["kord","open override val kord: Kord","dev.kord.core.entity.VoiceState.kord"]},{"name":"open override val kord: Kord","description":"dev.kord.core.entity.Webhook.kord","location":"core/dev.kord.core.entity/-webhook/kord.html","searchKeys":["kord","open override val kord: Kord","dev.kord.core.entity.Webhook.kord"]},{"name":"open override val kord: Kord","description":"dev.kord.core.entity.WelcomeScreen.kord","location":"core/dev.kord.core.entity/-welcome-screen/kord.html","searchKeys":["kord","open override val kord: Kord","dev.kord.core.entity.WelcomeScreen.kord"]},{"name":"open override val kord: Kord","description":"dev.kord.core.entity.channel.Category.kord","location":"core/dev.kord.core.entity.channel/-category/kord.html","searchKeys":["kord","open override val kord: Kord","dev.kord.core.entity.channel.Category.kord"]},{"name":"open override val kord: Kord","description":"dev.kord.core.entity.channel.DmChannel.kord","location":"core/dev.kord.core.entity.channel/-dm-channel/kord.html","searchKeys":["kord","open override val kord: Kord","dev.kord.core.entity.channel.DmChannel.kord"]},{"name":"open override val kord: Kord","description":"dev.kord.core.entity.channel.NewsChannel.kord","location":"core/dev.kord.core.entity.channel/-news-channel/kord.html","searchKeys":["kord","open override val kord: Kord","dev.kord.core.entity.channel.NewsChannel.kord"]},{"name":"open override val kord: Kord","description":"dev.kord.core.entity.channel.ResolvedChannel.kord","location":"core/dev.kord.core.entity.channel/-resolved-channel/kord.html","searchKeys":["kord","open override val kord: Kord","dev.kord.core.entity.channel.ResolvedChannel.kord"]},{"name":"open override val kord: Kord","description":"dev.kord.core.entity.channel.StageChannel.kord","location":"core/dev.kord.core.entity.channel/-stage-channel/kord.html","searchKeys":["kord","open override val kord: Kord","dev.kord.core.entity.channel.StageChannel.kord"]},{"name":"open override val kord: Kord","description":"dev.kord.core.entity.channel.TextChannel.kord","location":"core/dev.kord.core.entity.channel/-text-channel/kord.html","searchKeys":["kord","open override val kord: Kord","dev.kord.core.entity.channel.TextChannel.kord"]},{"name":"open override val kord: Kord","description":"dev.kord.core.entity.channel.VoiceChannel.kord","location":"core/dev.kord.core.entity.channel/-voice-channel/kord.html","searchKeys":["kord","open override val kord: Kord","dev.kord.core.entity.channel.VoiceChannel.kord"]},{"name":"open override val kord: Kord","description":"dev.kord.core.entity.channel.WelcomeScreenChannel.kord","location":"core/dev.kord.core.entity.channel/-welcome-screen-channel/kord.html","searchKeys":["kord","open override val kord: Kord","dev.kord.core.entity.channel.WelcomeScreenChannel.kord"]},{"name":"open override val kord: Kord","description":"dev.kord.core.entity.channel.thread.NewsChannelThread.kord","location":"core/dev.kord.core.entity.channel.thread/-news-channel-thread/kord.html","searchKeys":["kord","open override val kord: Kord","dev.kord.core.entity.channel.thread.NewsChannelThread.kord"]},{"name":"open override val kord: Kord","description":"dev.kord.core.entity.channel.thread.TextChannelThread.kord","location":"core/dev.kord.core.entity.channel.thread/-text-channel-thread/kord.html","searchKeys":["kord","open override val kord: Kord","dev.kord.core.entity.channel.thread.TextChannelThread.kord"]},{"name":"open override val kord: Kord","description":"dev.kord.core.entity.channel.thread.ThreadMember.kord","location":"core/dev.kord.core.entity.channel.thread/-thread-member/kord.html","searchKeys":["kord","open override val kord: Kord","dev.kord.core.entity.channel.thread.ThreadMember.kord"]},{"name":"open override val kord: Kord","description":"dev.kord.core.entity.interaction.GlobalAutoCompleteInteraction.kord","location":"core/dev.kord.core.entity.interaction/-global-auto-complete-interaction/kord.html","searchKeys":["kord","open override val kord: Kord","dev.kord.core.entity.interaction.GlobalAutoCompleteInteraction.kord"]},{"name":"open override val kord: Kord","description":"dev.kord.core.entity.interaction.GlobalButtonInteraction.kord","location":"core/dev.kord.core.entity.interaction/-global-button-interaction/kord.html","searchKeys":["kord","open override val kord: Kord","dev.kord.core.entity.interaction.GlobalButtonInteraction.kord"]},{"name":"open override val kord: Kord","description":"dev.kord.core.entity.interaction.GlobalChatInputCommandInteraction.kord","location":"core/dev.kord.core.entity.interaction/-global-chat-input-command-interaction/kord.html","searchKeys":["kord","open override val kord: Kord","dev.kord.core.entity.interaction.GlobalChatInputCommandInteraction.kord"]},{"name":"open override val kord: Kord","description":"dev.kord.core.entity.interaction.GlobalMessageCommandInteraction.kord","location":"core/dev.kord.core.entity.interaction/-global-message-command-interaction/kord.html","searchKeys":["kord","open override val kord: Kord","dev.kord.core.entity.interaction.GlobalMessageCommandInteraction.kord"]},{"name":"open override val kord: Kord","description":"dev.kord.core.entity.interaction.GlobalModalSubmitInteraction.kord","location":"core/dev.kord.core.entity.interaction/-global-modal-submit-interaction/kord.html","searchKeys":["kord","open override val kord: Kord","dev.kord.core.entity.interaction.GlobalModalSubmitInteraction.kord"]},{"name":"open override val kord: Kord","description":"dev.kord.core.entity.interaction.GlobalSelectMenuInteraction.kord","location":"core/dev.kord.core.entity.interaction/-global-select-menu-interaction/kord.html","searchKeys":["kord","open override val kord: Kord","dev.kord.core.entity.interaction.GlobalSelectMenuInteraction.kord"]},{"name":"open override val kord: Kord","description":"dev.kord.core.entity.interaction.GlobalUserCommandInteraction.kord","location":"core/dev.kord.core.entity.interaction/-global-user-command-interaction/kord.html","searchKeys":["kord","open override val kord: Kord","dev.kord.core.entity.interaction.GlobalUserCommandInteraction.kord"]},{"name":"open override val kord: Kord","description":"dev.kord.core.entity.interaction.GroupCommand.kord","location":"core/dev.kord.core.entity.interaction/-group-command/kord.html","searchKeys":["kord","open override val kord: Kord","dev.kord.core.entity.interaction.GroupCommand.kord"]},{"name":"open override val kord: Kord","description":"dev.kord.core.entity.interaction.GuildAutoCompleteInteraction.kord","location":"core/dev.kord.core.entity.interaction/-guild-auto-complete-interaction/kord.html","searchKeys":["kord","open override val kord: Kord","dev.kord.core.entity.interaction.GuildAutoCompleteInteraction.kord"]},{"name":"open override val kord: Kord","description":"dev.kord.core.entity.interaction.GuildButtonInteraction.kord","location":"core/dev.kord.core.entity.interaction/-guild-button-interaction/kord.html","searchKeys":["kord","open override val kord: Kord","dev.kord.core.entity.interaction.GuildButtonInteraction.kord"]},{"name":"open override val kord: Kord","description":"dev.kord.core.entity.interaction.GuildChatInputCommandInteraction.kord","location":"core/dev.kord.core.entity.interaction/-guild-chat-input-command-interaction/kord.html","searchKeys":["kord","open override val kord: Kord","dev.kord.core.entity.interaction.GuildChatInputCommandInteraction.kord"]},{"name":"open override val kord: Kord","description":"dev.kord.core.entity.interaction.GuildMessageCommandInteraction.kord","location":"core/dev.kord.core.entity.interaction/-guild-message-command-interaction/kord.html","searchKeys":["kord","open override val kord: Kord","dev.kord.core.entity.interaction.GuildMessageCommandInteraction.kord"]},{"name":"open override val kord: Kord","description":"dev.kord.core.entity.interaction.GuildModalSubmitInteraction.kord","location":"core/dev.kord.core.entity.interaction/-guild-modal-submit-interaction/kord.html","searchKeys":["kord","open override val kord: Kord","dev.kord.core.entity.interaction.GuildModalSubmitInteraction.kord"]},{"name":"open override val kord: Kord","description":"dev.kord.core.entity.interaction.GuildSelectMenuInteraction.kord","location":"core/dev.kord.core.entity.interaction/-guild-select-menu-interaction/kord.html","searchKeys":["kord","open override val kord: Kord","dev.kord.core.entity.interaction.GuildSelectMenuInteraction.kord"]},{"name":"open override val kord: Kord","description":"dev.kord.core.entity.interaction.GuildUserCommandInteraction.kord","location":"core/dev.kord.core.entity.interaction/-guild-user-command-interaction/kord.html","searchKeys":["kord","open override val kord: Kord","dev.kord.core.entity.interaction.GuildUserCommandInteraction.kord"]},{"name":"open override val kord: Kord","description":"dev.kord.core.entity.interaction.RootCommand.kord","location":"core/dev.kord.core.entity.interaction/-root-command/kord.html","searchKeys":["kord","open override val kord: Kord","dev.kord.core.entity.interaction.RootCommand.kord"]},{"name":"open override val kord: Kord","description":"dev.kord.core.entity.interaction.SubCommand.kord","location":"core/dev.kord.core.entity.interaction/-sub-command/kord.html","searchKeys":["kord","open override val kord: Kord","dev.kord.core.entity.interaction.SubCommand.kord"]},{"name":"open override val kord: Kord","description":"dev.kord.core.entity.interaction.followup.EphemeralFollowupMessage.kord","location":"core/dev.kord.core.entity.interaction.followup/-ephemeral-followup-message/kord.html","searchKeys":["kord","open override val kord: Kord","dev.kord.core.entity.interaction.followup.EphemeralFollowupMessage.kord"]},{"name":"open override val kord: Kord","description":"dev.kord.core.entity.interaction.followup.PublicFollowupMessage.kord","location":"core/dev.kord.core.entity.interaction.followup/-public-followup-message/kord.html","searchKeys":["kord","open override val kord: Kord","dev.kord.core.entity.interaction.followup.PublicFollowupMessage.kord"]},{"name":"open override val kord: Kord","description":"dev.kord.core.entity.interaction.response.EphemeralMessageInteractionResponse.kord","location":"core/dev.kord.core.entity.interaction.response/-ephemeral-message-interaction-response/kord.html","searchKeys":["kord","open override val kord: Kord","dev.kord.core.entity.interaction.response.EphemeralMessageInteractionResponse.kord"]},{"name":"open override val kord: Kord","description":"dev.kord.core.entity.interaction.response.PublicMessageInteractionResponse.kord","location":"core/dev.kord.core.entity.interaction.response/-public-message-interaction-response/kord.html","searchKeys":["kord","open override val kord: Kord","dev.kord.core.entity.interaction.response.PublicMessageInteractionResponse.kord"]},{"name":"open override val kord: Kord","description":"dev.kord.core.event.automoderation.AutoModerationActionExecutionEvent.kord","location":"core/dev.kord.core.event.automoderation/-auto-moderation-action-execution-event/kord.html","searchKeys":["kord","open override val kord: Kord","dev.kord.core.event.automoderation.AutoModerationActionExecutionEvent.kord"]},{"name":"open override val kord: Kord","description":"dev.kord.core.event.automoderation.AutoModerationRuleCreateEvent.kord","location":"core/dev.kord.core.event.automoderation/-auto-moderation-rule-create-event/kord.html","searchKeys":["kord","open override val kord: Kord","dev.kord.core.event.automoderation.AutoModerationRuleCreateEvent.kord"]},{"name":"open override val kord: Kord","description":"dev.kord.core.event.automoderation.AutoModerationRuleDeleteEvent.kord","location":"core/dev.kord.core.event.automoderation/-auto-moderation-rule-delete-event/kord.html","searchKeys":["kord","open override val kord: Kord","dev.kord.core.event.automoderation.AutoModerationRuleDeleteEvent.kord"]},{"name":"open override val kord: Kord","description":"dev.kord.core.event.automoderation.AutoModerationRuleUpdateEvent.kord","location":"core/dev.kord.core.event.automoderation/-auto-moderation-rule-update-event/kord.html","searchKeys":["kord","open override val kord: Kord","dev.kord.core.event.automoderation.AutoModerationRuleUpdateEvent.kord"]},{"name":"open override val kord: Kord","description":"dev.kord.core.event.channel.ChannelCreateEvent.kord","location":"core/dev.kord.core.event.channel/-channel-create-event/kord.html","searchKeys":["kord","open override val kord: Kord","dev.kord.core.event.channel.ChannelCreateEvent.kord"]},{"name":"open override val kord: Kord","description":"dev.kord.core.event.channel.ChannelDeleteEvent.kord","location":"core/dev.kord.core.event.channel/-channel-delete-event/kord.html","searchKeys":["kord","open override val kord: Kord","dev.kord.core.event.channel.ChannelDeleteEvent.kord"]},{"name":"open override val kord: Kord","description":"dev.kord.core.event.channel.ChannelPinsUpdateEvent.kord","location":"core/dev.kord.core.event.channel/-channel-pins-update-event/kord.html","searchKeys":["kord","open override val kord: Kord","dev.kord.core.event.channel.ChannelPinsUpdateEvent.kord"]},{"name":"open override val kord: Kord","description":"dev.kord.core.event.channel.ChannelUpdateEvent.kord","location":"core/dev.kord.core.event.channel/-channel-update-event/kord.html","searchKeys":["kord","open override val kord: Kord","dev.kord.core.event.channel.ChannelUpdateEvent.kord"]},{"name":"open override val kord: Kord","description":"dev.kord.core.event.channel.TypingStartEvent.kord","location":"core/dev.kord.core.event.channel/-typing-start-event/kord.html","searchKeys":["kord","open override val kord: Kord","dev.kord.core.event.channel.TypingStartEvent.kord"]},{"name":"open override val kord: Kord","description":"dev.kord.core.event.channel.thread.ThreadChannelDeleteEvent.kord","location":"core/dev.kord.core.event.channel.thread/-thread-channel-delete-event/kord.html","searchKeys":["kord","open override val kord: Kord","dev.kord.core.event.channel.thread.ThreadChannelDeleteEvent.kord"]},{"name":"open override val kord: Kord","description":"dev.kord.core.event.channel.thread.ThreadListSyncEvent.kord","location":"core/dev.kord.core.event.channel.thread/-thread-list-sync-event/kord.html","searchKeys":["kord","open override val kord: Kord","dev.kord.core.event.channel.thread.ThreadListSyncEvent.kord"]},{"name":"open override val kord: Kord","description":"dev.kord.core.event.channel.thread.ThreadMemberUpdateEvent.kord","location":"core/dev.kord.core.event.channel.thread/-thread-member-update-event/kord.html","searchKeys":["kord","open override val kord: Kord","dev.kord.core.event.channel.thread.ThreadMemberUpdateEvent.kord"]},{"name":"open override val kord: Kord","description":"dev.kord.core.event.channel.thread.ThreadMembersUpdateEvent.kord","location":"core/dev.kord.core.event.channel.thread/-thread-members-update-event/kord.html","searchKeys":["kord","open override val kord: Kord","dev.kord.core.event.channel.thread.ThreadMembersUpdateEvent.kord"]},{"name":"open override val kord: Kord","description":"dev.kord.core.event.gateway.ConnectEvent.kord","location":"core/dev.kord.core.event.gateway/-connect-event/kord.html","searchKeys":["kord","open override val kord: Kord","dev.kord.core.event.gateway.ConnectEvent.kord"]},{"name":"open override val kord: Kord","description":"dev.kord.core.event.gateway.DisconnectEvent.DetachEvent.kord","location":"core/dev.kord.core.event.gateway/-disconnect-event/-detach-event/kord.html","searchKeys":["kord","open override val kord: Kord","dev.kord.core.event.gateway.DisconnectEvent.DetachEvent.kord"]},{"name":"open override val kord: Kord","description":"dev.kord.core.event.gateway.DisconnectEvent.DiscordCloseEvent.kord","location":"core/dev.kord.core.event.gateway/-disconnect-event/-discord-close-event/kord.html","searchKeys":["kord","open override val kord: Kord","dev.kord.core.event.gateway.DisconnectEvent.DiscordCloseEvent.kord"]},{"name":"open override val kord: Kord","description":"dev.kord.core.event.gateway.DisconnectEvent.ReconnectingEvent.kord","location":"core/dev.kord.core.event.gateway/-disconnect-event/-reconnecting-event/kord.html","searchKeys":["kord","open override val kord: Kord","dev.kord.core.event.gateway.DisconnectEvent.ReconnectingEvent.kord"]},{"name":"open override val kord: Kord","description":"dev.kord.core.event.gateway.DisconnectEvent.RetryLimitReachedEvent.kord","location":"core/dev.kord.core.event.gateway/-disconnect-event/-retry-limit-reached-event/kord.html","searchKeys":["kord","open override val kord: Kord","dev.kord.core.event.gateway.DisconnectEvent.RetryLimitReachedEvent.kord"]},{"name":"open override val kord: Kord","description":"dev.kord.core.event.gateway.DisconnectEvent.SessionReset.kord","location":"core/dev.kord.core.event.gateway/-disconnect-event/-session-reset/kord.html","searchKeys":["kord","open override val kord: Kord","dev.kord.core.event.gateway.DisconnectEvent.SessionReset.kord"]},{"name":"open override val kord: Kord","description":"dev.kord.core.event.gateway.DisconnectEvent.TimeoutEvent.kord","location":"core/dev.kord.core.event.gateway/-disconnect-event/-timeout-event/kord.html","searchKeys":["kord","open override val kord: Kord","dev.kord.core.event.gateway.DisconnectEvent.TimeoutEvent.kord"]},{"name":"open override val kord: Kord","description":"dev.kord.core.event.gateway.DisconnectEvent.UserCloseEvent.kord","location":"core/dev.kord.core.event.gateway/-disconnect-event/-user-close-event/kord.html","searchKeys":["kord","open override val kord: Kord","dev.kord.core.event.gateway.DisconnectEvent.UserCloseEvent.kord"]},{"name":"open override val kord: Kord","description":"dev.kord.core.event.gateway.DisconnectEvent.ZombieConnectionEvent.kord","location":"core/dev.kord.core.event.gateway/-disconnect-event/-zombie-connection-event/kord.html","searchKeys":["kord","open override val kord: Kord","dev.kord.core.event.gateway.DisconnectEvent.ZombieConnectionEvent.kord"]},{"name":"open override val kord: Kord","description":"dev.kord.core.event.gateway.ReadyEvent.kord","location":"core/dev.kord.core.event.gateway/-ready-event/kord.html","searchKeys":["kord","open override val kord: Kord","dev.kord.core.event.gateway.ReadyEvent.kord"]},{"name":"open override val kord: Kord","description":"dev.kord.core.event.gateway.ResumedEvent.kord","location":"core/dev.kord.core.event.gateway/-resumed-event/kord.html","searchKeys":["kord","open override val kord: Kord","dev.kord.core.event.gateway.ResumedEvent.kord"]},{"name":"open override val kord: Kord","description":"dev.kord.core.event.guild.BanAddEvent.kord","location":"core/dev.kord.core.event.guild/-ban-add-event/kord.html","searchKeys":["kord","open override val kord: Kord","dev.kord.core.event.guild.BanAddEvent.kord"]},{"name":"open override val kord: Kord","description":"dev.kord.core.event.guild.BanRemoveEvent.kord","location":"core/dev.kord.core.event.guild/-ban-remove-event/kord.html","searchKeys":["kord","open override val kord: Kord","dev.kord.core.event.guild.BanRemoveEvent.kord"]},{"name":"open override val kord: Kord","description":"dev.kord.core.event.guild.EmojisUpdateEvent.kord","location":"core/dev.kord.core.event.guild/-emojis-update-event/kord.html","searchKeys":["kord","open override val kord: Kord","dev.kord.core.event.guild.EmojisUpdateEvent.kord"]},{"name":"open override val kord: Kord","description":"dev.kord.core.event.guild.GuildCreateEvent.kord","location":"core/dev.kord.core.event.guild/-guild-create-event/kord.html","searchKeys":["kord","open override val kord: Kord","dev.kord.core.event.guild.GuildCreateEvent.kord"]},{"name":"open override val kord: Kord","description":"dev.kord.core.event.guild.GuildDeleteEvent.kord","location":"core/dev.kord.core.event.guild/-guild-delete-event/kord.html","searchKeys":["kord","open override val kord: Kord","dev.kord.core.event.guild.GuildDeleteEvent.kord"]},{"name":"open override val kord: Kord","description":"dev.kord.core.event.guild.GuildScheduledEventCreateEvent.kord","location":"core/dev.kord.core.event.guild/-guild-scheduled-event-create-event/kord.html","searchKeys":["kord","open override val kord: Kord","dev.kord.core.event.guild.GuildScheduledEventCreateEvent.kord"]},{"name":"open override val kord: Kord","description":"dev.kord.core.event.guild.GuildScheduledEventDeleteEvent.kord","location":"core/dev.kord.core.event.guild/-guild-scheduled-event-delete-event/kord.html","searchKeys":["kord","open override val kord: Kord","dev.kord.core.event.guild.GuildScheduledEventDeleteEvent.kord"]},{"name":"open override val kord: Kord","description":"dev.kord.core.event.guild.GuildScheduledEventUpdateEvent.kord","location":"core/dev.kord.core.event.guild/-guild-scheduled-event-update-event/kord.html","searchKeys":["kord","open override val kord: Kord","dev.kord.core.event.guild.GuildScheduledEventUpdateEvent.kord"]},{"name":"open override val kord: Kord","description":"dev.kord.core.event.guild.GuildScheduledEventUserAddEvent.kord","location":"core/dev.kord.core.event.guild/-guild-scheduled-event-user-add-event/kord.html","searchKeys":["kord","open override val kord: Kord","dev.kord.core.event.guild.GuildScheduledEventUserAddEvent.kord"]},{"name":"open override val kord: Kord","description":"dev.kord.core.event.guild.GuildScheduledEventUserRemoveEvent.kord","location":"core/dev.kord.core.event.guild/-guild-scheduled-event-user-remove-event/kord.html","searchKeys":["kord","open override val kord: Kord","dev.kord.core.event.guild.GuildScheduledEventUserRemoveEvent.kord"]},{"name":"open override val kord: Kord","description":"dev.kord.core.event.guild.GuildUpdateEvent.kord","location":"core/dev.kord.core.event.guild/-guild-update-event/kord.html","searchKeys":["kord","open override val kord: Kord","dev.kord.core.event.guild.GuildUpdateEvent.kord"]},{"name":"open override val kord: Kord","description":"dev.kord.core.event.guild.IntegrationsUpdateEvent.kord","location":"core/dev.kord.core.event.guild/-integrations-update-event/kord.html","searchKeys":["kord","open override val kord: Kord","dev.kord.core.event.guild.IntegrationsUpdateEvent.kord"]},{"name":"open override val kord: Kord","description":"dev.kord.core.event.guild.InviteCreateEvent.kord","location":"core/dev.kord.core.event.guild/-invite-create-event/kord.html","searchKeys":["kord","open override val kord: Kord","dev.kord.core.event.guild.InviteCreateEvent.kord"]},{"name":"open override val kord: Kord","description":"dev.kord.core.event.guild.InviteDeleteEvent.kord","location":"core/dev.kord.core.event.guild/-invite-delete-event/kord.html","searchKeys":["kord","open override val kord: Kord","dev.kord.core.event.guild.InviteDeleteEvent.kord"]},{"name":"open override val kord: Kord","description":"dev.kord.core.event.guild.MemberJoinEvent.kord","location":"core/dev.kord.core.event.guild/-member-join-event/kord.html","searchKeys":["kord","open override val kord: Kord","dev.kord.core.event.guild.MemberJoinEvent.kord"]},{"name":"open override val kord: Kord","description":"dev.kord.core.event.guild.MemberLeaveEvent.kord","location":"core/dev.kord.core.event.guild/-member-leave-event/kord.html","searchKeys":["kord","open override val kord: Kord","dev.kord.core.event.guild.MemberLeaveEvent.kord"]},{"name":"open override val kord: Kord","description":"dev.kord.core.event.guild.MemberUpdateEvent.kord","location":"core/dev.kord.core.event.guild/-member-update-event/kord.html","searchKeys":["kord","open override val kord: Kord","dev.kord.core.event.guild.MemberUpdateEvent.kord"]},{"name":"open override val kord: Kord","description":"dev.kord.core.event.guild.MembersChunkEvent.kord","location":"core/dev.kord.core.event.guild/-members-chunk-event/kord.html","searchKeys":["kord","open override val kord: Kord","dev.kord.core.event.guild.MembersChunkEvent.kord"]},{"name":"open override val kord: Kord","description":"dev.kord.core.event.guild.VoiceServerUpdateEvent.kord","location":"core/dev.kord.core.event.guild/-voice-server-update-event/kord.html","searchKeys":["kord","open override val kord: Kord","dev.kord.core.event.guild.VoiceServerUpdateEvent.kord"]},{"name":"open override val kord: Kord","description":"dev.kord.core.event.guild.WebhookUpdateEvent.kord","location":"core/dev.kord.core.event.guild/-webhook-update-event/kord.html","searchKeys":["kord","open override val kord: Kord","dev.kord.core.event.guild.WebhookUpdateEvent.kord"]},{"name":"open override val kord: Kord","description":"dev.kord.core.event.interaction.ApplicationCommandPermissionsUpdateEvent.kord","location":"core/dev.kord.core.event.interaction/-application-command-permissions-update-event/kord.html","searchKeys":["kord","open override val kord: Kord","dev.kord.core.event.interaction.ApplicationCommandPermissionsUpdateEvent.kord"]},{"name":"open override val kord: Kord","description":"dev.kord.core.event.interaction.ChatInputCommandCreateEvent.kord","location":"core/dev.kord.core.event.interaction/-chat-input-command-create-event/kord.html","searchKeys":["kord","open override val kord: Kord","dev.kord.core.event.interaction.ChatInputCommandCreateEvent.kord"]},{"name":"open override val kord: Kord","description":"dev.kord.core.event.interaction.ChatInputCommandDeleteEvent.kord","location":"core/dev.kord.core.event.interaction/-chat-input-command-delete-event/kord.html","searchKeys":["kord","open override val kord: Kord","dev.kord.core.event.interaction.ChatInputCommandDeleteEvent.kord"]},{"name":"open override val kord: Kord","description":"dev.kord.core.event.interaction.ChatInputCommandUpdateEvent.kord","location":"core/dev.kord.core.event.interaction/-chat-input-command-update-event/kord.html","searchKeys":["kord","open override val kord: Kord","dev.kord.core.event.interaction.ChatInputCommandUpdateEvent.kord"]},{"name":"open override val kord: Kord","description":"dev.kord.core.event.interaction.GlobalAutoCompleteInteractionCreateEvent.kord","location":"core/dev.kord.core.event.interaction/-global-auto-complete-interaction-create-event/kord.html","searchKeys":["kord","open override val kord: Kord","dev.kord.core.event.interaction.GlobalAutoCompleteInteractionCreateEvent.kord"]},{"name":"open override val kord: Kord","description":"dev.kord.core.event.interaction.GlobalButtonInteractionCreateEvent.kord","location":"core/dev.kord.core.event.interaction/-global-button-interaction-create-event/kord.html","searchKeys":["kord","open override val kord: Kord","dev.kord.core.event.interaction.GlobalButtonInteractionCreateEvent.kord"]},{"name":"open override val kord: Kord","description":"dev.kord.core.event.interaction.GlobalChatInputCommandInteractionCreateEvent.kord","location":"core/dev.kord.core.event.interaction/-global-chat-input-command-interaction-create-event/kord.html","searchKeys":["kord","open override val kord: Kord","dev.kord.core.event.interaction.GlobalChatInputCommandInteractionCreateEvent.kord"]},{"name":"open override val kord: Kord","description":"dev.kord.core.event.interaction.GlobalMessageCommandInteractionCreateEvent.kord","location":"core/dev.kord.core.event.interaction/-global-message-command-interaction-create-event/kord.html","searchKeys":["kord","open override val kord: Kord","dev.kord.core.event.interaction.GlobalMessageCommandInteractionCreateEvent.kord"]},{"name":"open override val kord: Kord","description":"dev.kord.core.event.interaction.GlobalModalSubmitInteractionCreateEvent.kord","location":"core/dev.kord.core.event.interaction/-global-modal-submit-interaction-create-event/kord.html","searchKeys":["kord","open override val kord: Kord","dev.kord.core.event.interaction.GlobalModalSubmitInteractionCreateEvent.kord"]},{"name":"open override val kord: Kord","description":"dev.kord.core.event.interaction.GlobalSelectMenuInteractionCreateEvent.kord","location":"core/dev.kord.core.event.interaction/-global-select-menu-interaction-create-event/kord.html","searchKeys":["kord","open override val kord: Kord","dev.kord.core.event.interaction.GlobalSelectMenuInteractionCreateEvent.kord"]},{"name":"open override val kord: Kord","description":"dev.kord.core.event.interaction.GlobalUserCommandInteractionCreateEvent.kord","location":"core/dev.kord.core.event.interaction/-global-user-command-interaction-create-event/kord.html","searchKeys":["kord","open override val kord: Kord","dev.kord.core.event.interaction.GlobalUserCommandInteractionCreateEvent.kord"]},{"name":"open override val kord: Kord","description":"dev.kord.core.event.interaction.GuildAutoCompleteInteractionCreateEvent.kord","location":"core/dev.kord.core.event.interaction/-guild-auto-complete-interaction-create-event/kord.html","searchKeys":["kord","open override val kord: Kord","dev.kord.core.event.interaction.GuildAutoCompleteInteractionCreateEvent.kord"]},{"name":"open override val kord: Kord","description":"dev.kord.core.event.interaction.GuildButtonInteractionCreateEvent.kord","location":"core/dev.kord.core.event.interaction/-guild-button-interaction-create-event/kord.html","searchKeys":["kord","open override val kord: Kord","dev.kord.core.event.interaction.GuildButtonInteractionCreateEvent.kord"]},{"name":"open override val kord: Kord","description":"dev.kord.core.event.interaction.GuildChatInputCommandInteractionCreateEvent.kord","location":"core/dev.kord.core.event.interaction/-guild-chat-input-command-interaction-create-event/kord.html","searchKeys":["kord","open override val kord: Kord","dev.kord.core.event.interaction.GuildChatInputCommandInteractionCreateEvent.kord"]},{"name":"open override val kord: Kord","description":"dev.kord.core.event.interaction.GuildMessageCommandInteractionCreateEvent.kord","location":"core/dev.kord.core.event.interaction/-guild-message-command-interaction-create-event/kord.html","searchKeys":["kord","open override val kord: Kord","dev.kord.core.event.interaction.GuildMessageCommandInteractionCreateEvent.kord"]},{"name":"open override val kord: Kord","description":"dev.kord.core.event.interaction.GuildModalSubmitInteractionCreateEvent.kord","location":"core/dev.kord.core.event.interaction/-guild-modal-submit-interaction-create-event/kord.html","searchKeys":["kord","open override val kord: Kord","dev.kord.core.event.interaction.GuildModalSubmitInteractionCreateEvent.kord"]},{"name":"open override val kord: Kord","description":"dev.kord.core.event.interaction.GuildSelectMenuInteractionCreateEvent.kord","location":"core/dev.kord.core.event.interaction/-guild-select-menu-interaction-create-event/kord.html","searchKeys":["kord","open override val kord: Kord","dev.kord.core.event.interaction.GuildSelectMenuInteractionCreateEvent.kord"]},{"name":"open override val kord: Kord","description":"dev.kord.core.event.interaction.GuildUserCommandInteractionCreateEvent.kord","location":"core/dev.kord.core.event.interaction/-guild-user-command-interaction-create-event/kord.html","searchKeys":["kord","open override val kord: Kord","dev.kord.core.event.interaction.GuildUserCommandInteractionCreateEvent.kord"]},{"name":"open override val kord: Kord","description":"dev.kord.core.event.interaction.MessageCommandCreateEvent.kord","location":"core/dev.kord.core.event.interaction/-message-command-create-event/kord.html","searchKeys":["kord","open override val kord: Kord","dev.kord.core.event.interaction.MessageCommandCreateEvent.kord"]},{"name":"open override val kord: Kord","description":"dev.kord.core.event.interaction.MessageCommandDeleteEvent.kord","location":"core/dev.kord.core.event.interaction/-message-command-delete-event/kord.html","searchKeys":["kord","open override val kord: Kord","dev.kord.core.event.interaction.MessageCommandDeleteEvent.kord"]},{"name":"open override val kord: Kord","description":"dev.kord.core.event.interaction.MessageCommandUpdateEvent.kord","location":"core/dev.kord.core.event.interaction/-message-command-update-event/kord.html","searchKeys":["kord","open override val kord: Kord","dev.kord.core.event.interaction.MessageCommandUpdateEvent.kord"]},{"name":"open override val kord: Kord","description":"dev.kord.core.event.interaction.UnknownApplicationCommandCreateEvent.kord","location":"core/dev.kord.core.event.interaction/-unknown-application-command-create-event/kord.html","searchKeys":["kord","open override val kord: Kord","dev.kord.core.event.interaction.UnknownApplicationCommandCreateEvent.kord"]},{"name":"open override val kord: Kord","description":"dev.kord.core.event.interaction.UnknownApplicationCommandDeleteEvent.kord","location":"core/dev.kord.core.event.interaction/-unknown-application-command-delete-event/kord.html","searchKeys":["kord","open override val kord: Kord","dev.kord.core.event.interaction.UnknownApplicationCommandDeleteEvent.kord"]},{"name":"open override val kord: Kord","description":"dev.kord.core.event.interaction.UnknownApplicationCommandUpdateEvent.kord","location":"core/dev.kord.core.event.interaction/-unknown-application-command-update-event/kord.html","searchKeys":["kord","open override val kord: Kord","dev.kord.core.event.interaction.UnknownApplicationCommandUpdateEvent.kord"]},{"name":"open override val kord: Kord","description":"dev.kord.core.event.interaction.UserCommandCreateEvent.kord","location":"core/dev.kord.core.event.interaction/-user-command-create-event/kord.html","searchKeys":["kord","open override val kord: Kord","dev.kord.core.event.interaction.UserCommandCreateEvent.kord"]},{"name":"open override val kord: Kord","description":"dev.kord.core.event.interaction.UserCommandDeleteEvent.kord","location":"core/dev.kord.core.event.interaction/-user-command-delete-event/kord.html","searchKeys":["kord","open override val kord: Kord","dev.kord.core.event.interaction.UserCommandDeleteEvent.kord"]},{"name":"open override val kord: Kord","description":"dev.kord.core.event.interaction.UserCommandUpdateEvent.kord","location":"core/dev.kord.core.event.interaction/-user-command-update-event/kord.html","searchKeys":["kord","open override val kord: Kord","dev.kord.core.event.interaction.UserCommandUpdateEvent.kord"]},{"name":"open override val kord: Kord","description":"dev.kord.core.event.message.MessageBulkDeleteEvent.kord","location":"core/dev.kord.core.event.message/-message-bulk-delete-event/kord.html","searchKeys":["kord","open override val kord: Kord","dev.kord.core.event.message.MessageBulkDeleteEvent.kord"]},{"name":"open override val kord: Kord","description":"dev.kord.core.event.message.MessageCreateEvent.kord","location":"core/dev.kord.core.event.message/-message-create-event/kord.html","searchKeys":["kord","open override val kord: Kord","dev.kord.core.event.message.MessageCreateEvent.kord"]},{"name":"open override val kord: Kord","description":"dev.kord.core.event.message.MessageDeleteEvent.kord","location":"core/dev.kord.core.event.message/-message-delete-event/kord.html","searchKeys":["kord","open override val kord: Kord","dev.kord.core.event.message.MessageDeleteEvent.kord"]},{"name":"open override val kord: Kord","description":"dev.kord.core.event.message.MessageUpdateEvent.kord","location":"core/dev.kord.core.event.message/-message-update-event/kord.html","searchKeys":["kord","open override val kord: Kord","dev.kord.core.event.message.MessageUpdateEvent.kord"]},{"name":"open override val kord: Kord","description":"dev.kord.core.event.message.ReactionAddEvent.kord","location":"core/dev.kord.core.event.message/-reaction-add-event/kord.html","searchKeys":["kord","open override val kord: Kord","dev.kord.core.event.message.ReactionAddEvent.kord"]},{"name":"open override val kord: Kord","description":"dev.kord.core.event.message.ReactionRemoveAllEvent.kord","location":"core/dev.kord.core.event.message/-reaction-remove-all-event/kord.html","searchKeys":["kord","open override val kord: Kord","dev.kord.core.event.message.ReactionRemoveAllEvent.kord"]},{"name":"open override val kord: Kord","description":"dev.kord.core.event.message.ReactionRemoveEmojiEvent.kord","location":"core/dev.kord.core.event.message/-reaction-remove-emoji-event/kord.html","searchKeys":["kord","open override val kord: Kord","dev.kord.core.event.message.ReactionRemoveEmojiEvent.kord"]},{"name":"open override val kord: Kord","description":"dev.kord.core.event.message.ReactionRemoveEvent.kord","location":"core/dev.kord.core.event.message/-reaction-remove-event/kord.html","searchKeys":["kord","open override val kord: Kord","dev.kord.core.event.message.ReactionRemoveEvent.kord"]},{"name":"open override val kord: Kord","description":"dev.kord.core.event.role.RoleCreateEvent.kord","location":"core/dev.kord.core.event.role/-role-create-event/kord.html","searchKeys":["kord","open override val kord: Kord","dev.kord.core.event.role.RoleCreateEvent.kord"]},{"name":"open override val kord: Kord","description":"dev.kord.core.event.role.RoleDeleteEvent.kord","location":"core/dev.kord.core.event.role/-role-delete-event/kord.html","searchKeys":["kord","open override val kord: Kord","dev.kord.core.event.role.RoleDeleteEvent.kord"]},{"name":"open override val kord: Kord","description":"dev.kord.core.event.role.RoleUpdateEvent.kord","location":"core/dev.kord.core.event.role/-role-update-event/kord.html","searchKeys":["kord","open override val kord: Kord","dev.kord.core.event.role.RoleUpdateEvent.kord"]},{"name":"open override val kord: Kord","description":"dev.kord.core.event.user.PresenceUpdateEvent.kord","location":"core/dev.kord.core.event.user/-presence-update-event/kord.html","searchKeys":["kord","open override val kord: Kord","dev.kord.core.event.user.PresenceUpdateEvent.kord"]},{"name":"open override val kord: Kord","description":"dev.kord.core.event.user.UserUpdateEvent.kord","location":"core/dev.kord.core.event.user/-user-update-event/kord.html","searchKeys":["kord","open override val kord: Kord","dev.kord.core.event.user.UserUpdateEvent.kord"]},{"name":"open override val kord: Kord","description":"dev.kord.core.event.user.VoiceStateUpdateEvent.kord","location":"core/dev.kord.core.event.user/-voice-state-update-event/kord.html","searchKeys":["kord","open override val kord: Kord","dev.kord.core.event.user.VoiceStateUpdateEvent.kord"]},{"name":"open override val label: Optional<String>","description":"dev.kord.core.cache.data.ChatComponentData.label","location":"core/dev.kord.core.cache.data/-chat-component-data/label.html","searchKeys":["label","open override val label: Optional<String>","dev.kord.core.cache.data.ChatComponentData.label"]},{"name":"open override val label: Optional<String>","description":"dev.kord.core.cache.data.TextInputComponentData.label","location":"core/dev.kord.core.cache.data/-text-input-component-data/label.html","searchKeys":["label","open override val label: Optional<String>","dev.kord.core.cache.data.TextInputComponentData.label"]},{"name":"open override val maxLength: OptionalInt","description":"dev.kord.core.cache.data.ChatComponentData.maxLength","location":"core/dev.kord.core.cache.data/-chat-component-data/max-length.html","searchKeys":["maxLength","open override val maxLength: OptionalInt","dev.kord.core.cache.data.ChatComponentData.maxLength"]},{"name":"open override val maxLength: OptionalInt","description":"dev.kord.core.cache.data.TextInputComponentData.maxLength","location":"core/dev.kord.core.cache.data/-text-input-component-data/max-length.html","searchKeys":["maxLength","open override val maxLength: OptionalInt","dev.kord.core.cache.data.TextInputComponentData.maxLength"]},{"name":"open override val maxValues: OptionalInt","description":"dev.kord.core.cache.data.ChatComponentData.maxValues","location":"core/dev.kord.core.cache.data/-chat-component-data/max-values.html","searchKeys":["maxValues","open override val maxValues: OptionalInt","dev.kord.core.cache.data.ChatComponentData.maxValues"]},{"name":"open override val maxValues: OptionalInt","description":"dev.kord.core.cache.data.TextInputComponentData.maxValues","location":"core/dev.kord.core.cache.data/-text-input-component-data/max-values.html","searchKeys":["maxValues","open override val maxValues: OptionalInt","dev.kord.core.cache.data.TextInputComponentData.maxValues"]},{"name":"open override val mention: String","description":"dev.kord.core.entity.ReactionEmoji.Custom.mention","location":"core/dev.kord.core.entity/-reaction-emoji/-custom/mention.html","searchKeys":["mention","open override val mention: String","dev.kord.core.entity.ReactionEmoji.Custom.mention"]},{"name":"open override val mention: String","description":"dev.kord.core.entity.ReactionEmoji.Unicode.mention","location":"core/dev.kord.core.entity/-reaction-emoji/-unicode/mention.html","searchKeys":["mention","open override val mention: String","dev.kord.core.entity.ReactionEmoji.Unicode.mention"]},{"name":"open override val minLength: OptionalInt","description":"dev.kord.core.cache.data.ChatComponentData.minLength","location":"core/dev.kord.core.cache.data/-chat-component-data/min-length.html","searchKeys":["minLength","open override val minLength: OptionalInt","dev.kord.core.cache.data.ChatComponentData.minLength"]},{"name":"open override val minLength: OptionalInt","description":"dev.kord.core.cache.data.TextInputComponentData.minLength","location":"core/dev.kord.core.cache.data/-text-input-component-data/min-length.html","searchKeys":["minLength","open override val minLength: OptionalInt","dev.kord.core.cache.data.TextInputComponentData.minLength"]},{"name":"open override val minValues: OptionalInt","description":"dev.kord.core.cache.data.ChatComponentData.minValues","location":"core/dev.kord.core.cache.data/-chat-component-data/min-values.html","searchKeys":["minValues","open override val minValues: OptionalInt","dev.kord.core.cache.data.ChatComponentData.minValues"]},{"name":"open override val minValues: OptionalInt","description":"dev.kord.core.cache.data.TextInputComponentData.minValues","location":"core/dev.kord.core.cache.data/-text-input-component-data/min-values.html","searchKeys":["minValues","open override val minValues: OptionalInt","dev.kord.core.cache.data.TextInputComponentData.minValues"]},{"name":"open override val name: String","description":"dev.kord.core.cache.data.ApplicationData.name","location":"core/dev.kord.core.cache.data/-application-data/name.html","searchKeys":["name","open override val name: String","dev.kord.core.cache.data.ApplicationData.name"]},{"name":"open override val name: String","description":"dev.kord.core.cache.data.PartialApplicationData.name","location":"core/dev.kord.core.cache.data/-partial-application-data/name.html","searchKeys":["name","open override val name: String","dev.kord.core.cache.data.PartialApplicationData.name"]},{"name":"open override val name: String","description":"dev.kord.core.entity.ReactionEmoji.Custom.name","location":"core/dev.kord.core.entity/-reaction-emoji/-custom/name.html","searchKeys":["name","open override val name: String","dev.kord.core.entity.ReactionEmoji.Custom.name"]},{"name":"open override val name: String","description":"dev.kord.core.entity.ReactionEmoji.Unicode.name","location":"core/dev.kord.core.entity/-reaction-emoji/-unicode/name.html","searchKeys":["name","open override val name: String","dev.kord.core.entity.ReactionEmoji.Unicode.name"]},{"name":"open override val old: Category?","description":"dev.kord.core.event.channel.CategoryUpdateEvent.old","location":"core/dev.kord.core.event.channel/-category-update-event/old.html","searchKeys":["old","open override val old: Category?","dev.kord.core.event.channel.CategoryUpdateEvent.old"]},{"name":"open override val old: Channel?","description":"dev.kord.core.event.channel.UnknownChannelUpdateEvent.old","location":"core/dev.kord.core.event.channel/-unknown-channel-update-event/old.html","searchKeys":["old","open override val old: Channel?","dev.kord.core.event.channel.UnknownChannelUpdateEvent.old"]},{"name":"open override val old: DmChannel?","description":"dev.kord.core.event.channel.DMChannelUpdateEvent.old","location":"core/dev.kord.core.event.channel/-d-m-channel-update-event/old.html","searchKeys":["old","open override val old: DmChannel?","dev.kord.core.event.channel.DMChannelUpdateEvent.old"]},{"name":"open override val old: NewsChannel?","description":"dev.kord.core.event.channel.NewsChannelUpdateEvent.old","location":"core/dev.kord.core.event.channel/-news-channel-update-event/old.html","searchKeys":["old","open override val old: NewsChannel?","dev.kord.core.event.channel.NewsChannelUpdateEvent.old"]},{"name":"open override val old: NewsChannelThread?","description":"dev.kord.core.event.channel.thread.NewsChannelThreadDeleteEvent.old","location":"core/dev.kord.core.event.channel.thread/-news-channel-thread-delete-event/old.html","searchKeys":["old","open override val old: NewsChannelThread?","dev.kord.core.event.channel.thread.NewsChannelThreadDeleteEvent.old"]},{"name":"open override val old: NewsChannelThread?","description":"dev.kord.core.event.channel.thread.NewsChannelThreadUpdateEvent.old","location":"core/dev.kord.core.event.channel.thread/-news-channel-thread-update-event/old.html","searchKeys":["old","open override val old: NewsChannelThread?","dev.kord.core.event.channel.thread.NewsChannelThreadUpdateEvent.old"]},{"name":"open override val old: StageChannel?","description":"dev.kord.core.event.channel.StageChannelUpdateEvent.old","location":"core/dev.kord.core.event.channel/-stage-channel-update-event/old.html","searchKeys":["old","open override val old: StageChannel?","dev.kord.core.event.channel.StageChannelUpdateEvent.old"]},{"name":"open override val old: TextChannel?","description":"dev.kord.core.event.channel.TextChannelUpdateEvent.old","location":"core/dev.kord.core.event.channel/-text-channel-update-event/old.html","searchKeys":["old","open override val old: TextChannel?","dev.kord.core.event.channel.TextChannelUpdateEvent.old"]},{"name":"open override val old: TextChannelThread?","description":"dev.kord.core.event.channel.thread.TextChannelThreadDeleteEvent.old","location":"core/dev.kord.core.event.channel.thread/-text-channel-thread-delete-event/old.html","searchKeys":["old","open override val old: TextChannelThread?","dev.kord.core.event.channel.thread.TextChannelThreadDeleteEvent.old"]},{"name":"open override val old: TextChannelThread?","description":"dev.kord.core.event.channel.thread.TextChannelThreadUpdateEvent.old","location":"core/dev.kord.core.event.channel.thread/-text-channel-thread-update-event/old.html","searchKeys":["old","open override val old: TextChannelThread?","dev.kord.core.event.channel.thread.TextChannelThreadUpdateEvent.old"]},{"name":"open override val old: ThreadChannel?","description":"dev.kord.core.event.channel.thread.UnknownChannelThreadDeleteEvent.old","location":"core/dev.kord.core.event.channel.thread/-unknown-channel-thread-delete-event/old.html","searchKeys":["old","open override val old: ThreadChannel?","dev.kord.core.event.channel.thread.UnknownChannelThreadDeleteEvent.old"]},{"name":"open override val old: ThreadChannel?","description":"dev.kord.core.event.channel.thread.UnknownChannelThreadUpdateEvent.old","location":"core/dev.kord.core.event.channel.thread/-unknown-channel-thread-update-event/old.html","searchKeys":["old","open override val old: ThreadChannel?","dev.kord.core.event.channel.thread.UnknownChannelThreadUpdateEvent.old"]},{"name":"open override val old: VoiceChannel?","description":"dev.kord.core.event.channel.VoiceChannelUpdateEvent.old","location":"core/dev.kord.core.event.channel/-voice-channel-update-event/old.html","searchKeys":["old","open override val old: VoiceChannel?","dev.kord.core.event.channel.VoiceChannelUpdateEvent.old"]},{"name":"open override val options: Map<String, OptionValue<*>>","description":"dev.kord.core.entity.interaction.GroupCommand.options","location":"core/dev.kord.core.entity.interaction/-group-command/options.html","searchKeys":["options","open override val options: Map<String, OptionValue<*>>","dev.kord.core.entity.interaction.GroupCommand.options"]},{"name":"open override val options: Map<String, OptionValue<*>>","description":"dev.kord.core.entity.interaction.RootCommand.options","location":"core/dev.kord.core.entity.interaction/-root-command/options.html","searchKeys":["options","open override val options: Map<String, OptionValue<*>>","dev.kord.core.entity.interaction.RootCommand.options"]},{"name":"open override val options: Map<String, OptionValue<*>>","description":"dev.kord.core.entity.interaction.SubCommand.options","location":"core/dev.kord.core.entity.interaction/-sub-command/options.html","searchKeys":["options","open override val options: Map<String, OptionValue<*>>","dev.kord.core.entity.interaction.SubCommand.options"]},{"name":"open override val options: Optional<List<SelectOptionData>>","description":"dev.kord.core.cache.data.ChatComponentData.options","location":"core/dev.kord.core.cache.data/-chat-component-data/options.html","searchKeys":["options","open override val options: Optional<List<SelectOptionData>>","dev.kord.core.cache.data.ChatComponentData.options"]},{"name":"open override val options: Optional<List<SelectOptionData>>","description":"dev.kord.core.cache.data.TextInputComponentData.options","location":"core/dev.kord.core.cache.data/-text-input-component-data/options.html","searchKeys":["options","open override val options: Optional<List<SelectOptionData>>","dev.kord.core.cache.data.TextInputComponentData.options"]},{"name":"open override val ownerId: OptionalSnowflake","description":"dev.kord.core.cache.data.ApplicationData.ownerId","location":"core/dev.kord.core.cache.data/-application-data/owner-id.html","searchKeys":["ownerId","open override val ownerId: OptionalSnowflake","dev.kord.core.cache.data.ApplicationData.ownerId"]},{"name":"open override val ownerId: OptionalSnowflake","description":"dev.kord.core.cache.data.PartialApplicationData.ownerId","location":"core/dev.kord.core.cache.data/-partial-application-data/owner-id.html","searchKeys":["ownerId","open override val ownerId: OptionalSnowflake","dev.kord.core.cache.data.PartialApplicationData.ownerId"]},{"name":"open override val parentId: Snowflake","description":"dev.kord.core.entity.channel.thread.ThreadChannel.parentId","location":"core/dev.kord.core.entity.channel.thread/-thread-channel/parent-id.html","searchKeys":["parentId","open override val parentId: Snowflake","dev.kord.core.entity.channel.thread.ThreadChannel.parentId"]},{"name":"open override val placeholder: Optional<String>","description":"dev.kord.core.cache.data.ChatComponentData.placeholder","location":"core/dev.kord.core.cache.data/-chat-component-data/placeholder.html","searchKeys":["placeholder","open override val placeholder: Optional<String>","dev.kord.core.cache.data.ChatComponentData.placeholder"]},{"name":"open override val placeholder: Optional<String>","description":"dev.kord.core.cache.data.TextInputComponentData.placeholder","location":"core/dev.kord.core.cache.data/-text-input-component-data/placeholder.html","searchKeys":["placeholder","open override val placeholder: Optional<String>","dev.kord.core.cache.data.TextInputComponentData.placeholder"]},{"name":"open override val primarySkuId: OptionalSnowflake","description":"dev.kord.core.cache.data.ApplicationData.primarySkuId","location":"core/dev.kord.core.cache.data/-application-data/primary-sku-id.html","searchKeys":["primarySkuId","open override val primarySkuId: OptionalSnowflake","dev.kord.core.cache.data.ApplicationData.primarySkuId"]},{"name":"open override val primarySkuId: OptionalSnowflake","description":"dev.kord.core.cache.data.PartialApplicationData.primarySkuId","location":"core/dev.kord.core.cache.data/-partial-application-data/primary-sku-id.html","searchKeys":["primarySkuId","open override val primarySkuId: OptionalSnowflake","dev.kord.core.cache.data.PartialApplicationData.primarySkuId"]},{"name":"open override val privacyPolicyUrl: Optional<String>","description":"dev.kord.core.cache.data.ApplicationData.privacyPolicyUrl","location":"core/dev.kord.core.cache.data/-application-data/privacy-policy-url.html","searchKeys":["privacyPolicyUrl","open override val privacyPolicyUrl: Optional<String>","dev.kord.core.cache.data.ApplicationData.privacyPolicyUrl"]},{"name":"open override val privacyPolicyUrl: Optional<String>","description":"dev.kord.core.cache.data.PartialApplicationData.privacyPolicyUrl","location":"core/dev.kord.core.cache.data/-partial-application-data/privacy-policy-url.html","searchKeys":["privacyPolicyUrl","open override val privacyPolicyUrl: Optional<String>","dev.kord.core.cache.data.PartialApplicationData.privacyPolicyUrl"]},{"name":"open override val regions: Flow<Region>","description":"dev.kord.core.supplier.CacheEntitySupplier.regions","location":"core/dev.kord.core.supplier/-cache-entity-supplier/regions.html","searchKeys":["regions","open override val regions: Flow<Region>","dev.kord.core.supplier.CacheEntitySupplier.regions"]},{"name":"open override val regions: Flow<Region>","description":"dev.kord.core.supplier.RestEntitySupplier.regions","location":"core/dev.kord.core.supplier/-rest-entity-supplier/regions.html","searchKeys":["regions","open override val regions: Flow<Region>","dev.kord.core.supplier.RestEntitySupplier.regions"]},{"name":"open override val regions: Flow<Region>","description":"dev.kord.core.supplier.StoreEntitySupplier.regions","location":"core/dev.kord.core.supplier/-store-entity-supplier/regions.html","searchKeys":["regions","open override val regions: Flow<Region>","dev.kord.core.supplier.StoreEntitySupplier.regions"]},{"name":"open override val required: OptionalBoolean","description":"dev.kord.core.cache.data.ChatComponentData.required","location":"core/dev.kord.core.cache.data/-chat-component-data/required.html","searchKeys":["required","open override val required: OptionalBoolean","dev.kord.core.cache.data.ChatComponentData.required"]},{"name":"open override val required: OptionalBoolean","description":"dev.kord.core.cache.data.TextInputComponentData.required","location":"core/dev.kord.core.cache.data/-text-input-component-data/required.html","searchKeys":["required","open override val required: OptionalBoolean","dev.kord.core.cache.data.TextInputComponentData.required"]},{"name":"open override val resolvedObject: Attachment?","description":"dev.kord.core.entity.interaction.AttachmentOptionValue.resolvedObject","location":"core/dev.kord.core.entity.interaction/-attachment-option-value/resolved-object.html","searchKeys":["resolvedObject","open override val resolvedObject: Attachment?","dev.kord.core.entity.interaction.AttachmentOptionValue.resolvedObject"]},{"name":"open override val resolvedObject: Entity?","description":"dev.kord.core.entity.interaction.MentionableOptionValue.resolvedObject","location":"core/dev.kord.core.entity.interaction/-mentionable-option-value/resolved-object.html","searchKeys":["resolvedObject","open override val resolvedObject: Entity?","dev.kord.core.entity.interaction.MentionableOptionValue.resolvedObject"]},{"name":"open override val resolvedObject: Member?","description":"dev.kord.core.entity.interaction.MemberOptionValue.resolvedObject","location":"core/dev.kord.core.entity.interaction/-member-option-value/resolved-object.html","searchKeys":["resolvedObject","open override val resolvedObject: Member?","dev.kord.core.entity.interaction.MemberOptionValue.resolvedObject"]},{"name":"open override val resolvedObject: ResolvedChannel?","description":"dev.kord.core.entity.interaction.ChannelOptionValue.resolvedObject","location":"core/dev.kord.core.entity.interaction/-channel-option-value/resolved-object.html","searchKeys":["resolvedObject","open override val resolvedObject: ResolvedChannel?","dev.kord.core.entity.interaction.ChannelOptionValue.resolvedObject"]},{"name":"open override val resolvedObject: Role?","description":"dev.kord.core.entity.interaction.RoleOptionValue.resolvedObject","location":"core/dev.kord.core.entity.interaction/-role-option-value/resolved-object.html","searchKeys":["resolvedObject","open override val resolvedObject: Role?","dev.kord.core.entity.interaction.RoleOptionValue.resolvedObject"]},{"name":"open override val resolvedObject: User?","description":"dev.kord.core.entity.interaction.UserOptionValue.resolvedObject","location":"core/dev.kord.core.entity.interaction/-user-option-value/resolved-object.html","searchKeys":["resolvedObject","open override val resolvedObject: User?","dev.kord.core.entity.interaction.UserOptionValue.resolvedObject"]},{"name":"open override val rpcOrigins: Optional<List<String>>","description":"dev.kord.core.cache.data.ApplicationData.rpcOrigins","location":"core/dev.kord.core.cache.data/-application-data/rpc-origins.html","searchKeys":["rpcOrigins","open override val rpcOrigins: Optional<List<String>>","dev.kord.core.cache.data.ApplicationData.rpcOrigins"]},{"name":"open override val rpcOrigins: Optional<List<String>>","description":"dev.kord.core.cache.data.PartialApplicationData.rpcOrigins","location":"core/dev.kord.core.cache.data/-partial-application-data/rpc-origins.html","searchKeys":["rpcOrigins","open override val rpcOrigins: Optional<List<String>>","dev.kord.core.cache.data.PartialApplicationData.rpcOrigins"]},{"name":"open override val rule: AutoModerationRule","description":"dev.kord.core.event.automoderation.AutoModerationRuleCreateEvent.rule","location":"core/dev.kord.core.event.automoderation/-auto-moderation-rule-create-event/rule.html","searchKeys":["rule","open override val rule: AutoModerationRule","dev.kord.core.event.automoderation.AutoModerationRuleCreateEvent.rule"]},{"name":"open override val rule: AutoModerationRule","description":"dev.kord.core.event.automoderation.AutoModerationRuleDeleteEvent.rule","location":"core/dev.kord.core.event.automoderation/-auto-moderation-rule-delete-event/rule.html","searchKeys":["rule","open override val rule: AutoModerationRule","dev.kord.core.event.automoderation.AutoModerationRuleDeleteEvent.rule"]},{"name":"open override val rule: AutoModerationRule","description":"dev.kord.core.event.automoderation.AutoModerationRuleUpdateEvent.rule","location":"core/dev.kord.core.event.automoderation/-auto-moderation-rule-update-event/rule.html","searchKeys":["rule","open override val rule: AutoModerationRule","dev.kord.core.event.automoderation.AutoModerationRuleUpdateEvent.rule"]},{"name":"open override val rule: TypedAutoModerationRuleBehavior","description":"dev.kord.core.event.automoderation.AutoModerationActionExecutionEvent.rule","location":"core/dev.kord.core.event.automoderation/-auto-moderation-action-execution-event/rule.html","searchKeys":["rule","open override val rule: TypedAutoModerationRuleBehavior","dev.kord.core.event.automoderation.AutoModerationActionExecutionEvent.rule"]},{"name":"open override val ruleId: Snowflake","description":"dev.kord.core.event.automoderation.AutoModerationActionExecutionEvent.ruleId","location":"core/dev.kord.core.event.automoderation/-auto-moderation-action-execution-event/rule-id.html","searchKeys":["ruleId","open override val ruleId: Snowflake","dev.kord.core.event.automoderation.AutoModerationActionExecutionEvent.ruleId"]},{"name":"open override val ruleId: Snowflake","description":"dev.kord.core.event.automoderation.AutoModerationRuleConfigurationEvent.ruleId","location":"core/dev.kord.core.event.automoderation/-auto-moderation-rule-configuration-event/rule-id.html","searchKeys":["ruleId","open override val ruleId: Snowflake","dev.kord.core.event.automoderation.AutoModerationRuleConfigurationEvent.ruleId"]},{"name":"open override val scheduledEvent: GuildScheduledEvent","description":"dev.kord.core.event.guild.GuildScheduledEventCreateEvent.scheduledEvent","location":"core/dev.kord.core.event.guild/-guild-scheduled-event-create-event/scheduled-event.html","searchKeys":["scheduledEvent","open override val scheduledEvent: GuildScheduledEvent","dev.kord.core.event.guild.GuildScheduledEventCreateEvent.scheduledEvent"]},{"name":"open override val scheduledEvent: GuildScheduledEvent","description":"dev.kord.core.event.guild.GuildScheduledEventDeleteEvent.scheduledEvent","location":"core/dev.kord.core.event.guild/-guild-scheduled-event-delete-event/scheduled-event.html","searchKeys":["scheduledEvent","open override val scheduledEvent: GuildScheduledEvent","dev.kord.core.event.guild.GuildScheduledEventDeleteEvent.scheduledEvent"]},{"name":"open override val scheduledEvent: GuildScheduledEvent","description":"dev.kord.core.event.guild.GuildScheduledEventUpdateEvent.scheduledEvent","location":"core/dev.kord.core.event.guild/-guild-scheduled-event-update-event/scheduled-event.html","searchKeys":["scheduledEvent","open override val scheduledEvent: GuildScheduledEvent","dev.kord.core.event.guild.GuildScheduledEventUpdateEvent.scheduledEvent"]},{"name":"open override val scheduledEventId: Snowflake","description":"dev.kord.core.event.guild.GuildScheduledEventUserAddEvent.scheduledEventId","location":"core/dev.kord.core.event.guild/-guild-scheduled-event-user-add-event/scheduled-event-id.html","searchKeys":["scheduledEventId","open override val scheduledEventId: Snowflake","dev.kord.core.event.guild.GuildScheduledEventUserAddEvent.scheduledEventId"]},{"name":"open override val scheduledEventId: Snowflake","description":"dev.kord.core.event.guild.GuildScheduledEventUserRemoveEvent.scheduledEventId","location":"core/dev.kord.core.event.guild/-guild-scheduled-event-user-remove-event/scheduled-event-id.html","searchKeys":["scheduledEventId","open override val scheduledEventId: Snowflake","dev.kord.core.event.guild.GuildScheduledEventUserRemoveEvent.scheduledEventId"]},{"name":"open override val service: InteractionService","description":"dev.kord.core.entity.application.GlobalChatInputCommand.service","location":"core/dev.kord.core.entity.application/-global-chat-input-command/service.html","searchKeys":["service","open override val service: InteractionService","dev.kord.core.entity.application.GlobalChatInputCommand.service"]},{"name":"open override val service: InteractionService","description":"dev.kord.core.entity.application.GlobalMessageCommand.service","location":"core/dev.kord.core.entity.application/-global-message-command/service.html","searchKeys":["service","open override val service: InteractionService","dev.kord.core.entity.application.GlobalMessageCommand.service"]},{"name":"open override val service: InteractionService","description":"dev.kord.core.entity.application.GlobalUserCommand.service","location":"core/dev.kord.core.entity.application/-global-user-command/service.html","searchKeys":["service","open override val service: InteractionService","dev.kord.core.entity.application.GlobalUserCommand.service"]},{"name":"open override val service: InteractionService","description":"dev.kord.core.entity.application.GuildChatInputCommand.service","location":"core/dev.kord.core.entity.application/-guild-chat-input-command/service.html","searchKeys":["service","open override val service: InteractionService","dev.kord.core.entity.application.GuildChatInputCommand.service"]},{"name":"open override val service: InteractionService","description":"dev.kord.core.entity.application.GuildMessageCommand.service","location":"core/dev.kord.core.entity.application/-guild-message-command/service.html","searchKeys":["service","open override val service: InteractionService","dev.kord.core.entity.application.GuildMessageCommand.service"]},{"name":"open override val service: InteractionService","description":"dev.kord.core.entity.application.GuildUserCommand.service","location":"core/dev.kord.core.entity.application/-guild-user-command/service.html","searchKeys":["service","open override val service: InteractionService","dev.kord.core.entity.application.GuildUserCommand.service"]},{"name":"open override val service: InteractionService","description":"dev.kord.core.entity.application.UnknownGlobalApplicationCommand.service","location":"core/dev.kord.core.entity.application/-unknown-global-application-command/service.html","searchKeys":["service","open override val service: InteractionService","dev.kord.core.entity.application.UnknownGlobalApplicationCommand.service"]},{"name":"open override val service: InteractionService","description":"dev.kord.core.entity.application.UnknownGuildApplicationCommand.service","location":"core/dev.kord.core.entity.application/-unknown-guild-application-command/service.html","searchKeys":["service","open override val service: InteractionService","dev.kord.core.entity.application.UnknownGuildApplicationCommand.service"]},{"name":"open override val shard: Int","description":"dev.kord.core.event.automoderation.AutoModerationActionExecutionEvent.shard","location":"core/dev.kord.core.event.automoderation/-auto-moderation-action-execution-event/shard.html","searchKeys":["shard","open override val shard: Int","dev.kord.core.event.automoderation.AutoModerationActionExecutionEvent.shard"]},{"name":"open override val shard: Int","description":"dev.kord.core.event.automoderation.AutoModerationRuleCreateEvent.shard","location":"core/dev.kord.core.event.automoderation/-auto-moderation-rule-create-event/shard.html","searchKeys":["shard","open override val shard: Int","dev.kord.core.event.automoderation.AutoModerationRuleCreateEvent.shard"]},{"name":"open override val shard: Int","description":"dev.kord.core.event.automoderation.AutoModerationRuleDeleteEvent.shard","location":"core/dev.kord.core.event.automoderation/-auto-moderation-rule-delete-event/shard.html","searchKeys":["shard","open override val shard: Int","dev.kord.core.event.automoderation.AutoModerationRuleDeleteEvent.shard"]},{"name":"open override val shard: Int","description":"dev.kord.core.event.automoderation.AutoModerationRuleUpdateEvent.shard","location":"core/dev.kord.core.event.automoderation/-auto-moderation-rule-update-event/shard.html","searchKeys":["shard","open override val shard: Int","dev.kord.core.event.automoderation.AutoModerationRuleUpdateEvent.shard"]},{"name":"open override val shard: Int","description":"dev.kord.core.event.channel.CategoryCreateEvent.shard","location":"core/dev.kord.core.event.channel/-category-create-event/shard.html","searchKeys":["shard","open override val shard: Int","dev.kord.core.event.channel.CategoryCreateEvent.shard"]},{"name":"open override val shard: Int","description":"dev.kord.core.event.channel.CategoryDeleteEvent.shard","location":"core/dev.kord.core.event.channel/-category-delete-event/shard.html","searchKeys":["shard","open override val shard: Int","dev.kord.core.event.channel.CategoryDeleteEvent.shard"]},{"name":"open override val shard: Int","description":"dev.kord.core.event.channel.CategoryUpdateEvent.shard","location":"core/dev.kord.core.event.channel/-category-update-event/shard.html","searchKeys":["shard","open override val shard: Int","dev.kord.core.event.channel.CategoryUpdateEvent.shard"]},{"name":"open override val shard: Int","description":"dev.kord.core.event.channel.ChannelPinsUpdateEvent.shard","location":"core/dev.kord.core.event.channel/-channel-pins-update-event/shard.html","searchKeys":["shard","open override val shard: Int","dev.kord.core.event.channel.ChannelPinsUpdateEvent.shard"]},{"name":"open override val shard: Int","description":"dev.kord.core.event.channel.DMChannelCreateEvent.shard","location":"core/dev.kord.core.event.channel/-d-m-channel-create-event/shard.html","searchKeys":["shard","open override val shard: Int","dev.kord.core.event.channel.DMChannelCreateEvent.shard"]},{"name":"open override val shard: Int","description":"dev.kord.core.event.channel.DMChannelDeleteEvent.shard","location":"core/dev.kord.core.event.channel/-d-m-channel-delete-event/shard.html","searchKeys":["shard","open override val shard: Int","dev.kord.core.event.channel.DMChannelDeleteEvent.shard"]},{"name":"open override val shard: Int","description":"dev.kord.core.event.channel.DMChannelUpdateEvent.shard","location":"core/dev.kord.core.event.channel/-d-m-channel-update-event/shard.html","searchKeys":["shard","open override val shard: Int","dev.kord.core.event.channel.DMChannelUpdateEvent.shard"]},{"name":"open override val shard: Int","description":"dev.kord.core.event.channel.NewsChannelCreateEvent.shard","location":"core/dev.kord.core.event.channel/-news-channel-create-event/shard.html","searchKeys":["shard","open override val shard: Int","dev.kord.core.event.channel.NewsChannelCreateEvent.shard"]},{"name":"open override val shard: Int","description":"dev.kord.core.event.channel.NewsChannelDeleteEvent.shard","location":"core/dev.kord.core.event.channel/-news-channel-delete-event/shard.html","searchKeys":["shard","open override val shard: Int","dev.kord.core.event.channel.NewsChannelDeleteEvent.shard"]},{"name":"open override val shard: Int","description":"dev.kord.core.event.channel.NewsChannelUpdateEvent.shard","location":"core/dev.kord.core.event.channel/-news-channel-update-event/shard.html","searchKeys":["shard","open override val shard: Int","dev.kord.core.event.channel.NewsChannelUpdateEvent.shard"]},{"name":"open override val shard: Int","description":"dev.kord.core.event.channel.StageChannelCreateEvent.shard","location":"core/dev.kord.core.event.channel/-stage-channel-create-event/shard.html","searchKeys":["shard","open override val shard: Int","dev.kord.core.event.channel.StageChannelCreateEvent.shard"]},{"name":"open override val shard: Int","description":"dev.kord.core.event.channel.StageChannelDeleteEvent.shard","location":"core/dev.kord.core.event.channel/-stage-channel-delete-event/shard.html","searchKeys":["shard","open override val shard: Int","dev.kord.core.event.channel.StageChannelDeleteEvent.shard"]},{"name":"open override val shard: Int","description":"dev.kord.core.event.channel.StageChannelUpdateEvent.shard","location":"core/dev.kord.core.event.channel/-stage-channel-update-event/shard.html","searchKeys":["shard","open override val shard: Int","dev.kord.core.event.channel.StageChannelUpdateEvent.shard"]},{"name":"open override val shard: Int","description":"dev.kord.core.event.channel.TextChannelCreateEvent.shard","location":"core/dev.kord.core.event.channel/-text-channel-create-event/shard.html","searchKeys":["shard","open override val shard: Int","dev.kord.core.event.channel.TextChannelCreateEvent.shard"]},{"name":"open override val shard: Int","description":"dev.kord.core.event.channel.TextChannelDeleteEvent.shard","location":"core/dev.kord.core.event.channel/-text-channel-delete-event/shard.html","searchKeys":["shard","open override val shard: Int","dev.kord.core.event.channel.TextChannelDeleteEvent.shard"]},{"name":"open override val shard: Int","description":"dev.kord.core.event.channel.TextChannelUpdateEvent.shard","location":"core/dev.kord.core.event.channel/-text-channel-update-event/shard.html","searchKeys":["shard","open override val shard: Int","dev.kord.core.event.channel.TextChannelUpdateEvent.shard"]},{"name":"open override val shard: Int","description":"dev.kord.core.event.channel.TypingStartEvent.shard","location":"core/dev.kord.core.event.channel/-typing-start-event/shard.html","searchKeys":["shard","open override val shard: Int","dev.kord.core.event.channel.TypingStartEvent.shard"]},{"name":"open override val shard: Int","description":"dev.kord.core.event.channel.UnknownChannelCreateEvent.shard","location":"core/dev.kord.core.event.channel/-unknown-channel-create-event/shard.html","searchKeys":["shard","open override val shard: Int","dev.kord.core.event.channel.UnknownChannelCreateEvent.shard"]},{"name":"open override val shard: Int","description":"dev.kord.core.event.channel.UnknownChannelDeleteEvent.shard","location":"core/dev.kord.core.event.channel/-unknown-channel-delete-event/shard.html","searchKeys":["shard","open override val shard: Int","dev.kord.core.event.channel.UnknownChannelDeleteEvent.shard"]},{"name":"open override val shard: Int","description":"dev.kord.core.event.channel.UnknownChannelUpdateEvent.shard","location":"core/dev.kord.core.event.channel/-unknown-channel-update-event/shard.html","searchKeys":["shard","open override val shard: Int","dev.kord.core.event.channel.UnknownChannelUpdateEvent.shard"]},{"name":"open override val shard: Int","description":"dev.kord.core.event.channel.VoiceChannelCreateEvent.shard","location":"core/dev.kord.core.event.channel/-voice-channel-create-event/shard.html","searchKeys":["shard","open override val shard: Int","dev.kord.core.event.channel.VoiceChannelCreateEvent.shard"]},{"name":"open override val shard: Int","description":"dev.kord.core.event.channel.VoiceChannelDeleteEvent.shard","location":"core/dev.kord.core.event.channel/-voice-channel-delete-event/shard.html","searchKeys":["shard","open override val shard: Int","dev.kord.core.event.channel.VoiceChannelDeleteEvent.shard"]},{"name":"open override val shard: Int","description":"dev.kord.core.event.channel.VoiceChannelUpdateEvent.shard","location":"core/dev.kord.core.event.channel/-voice-channel-update-event/shard.html","searchKeys":["shard","open override val shard: Int","dev.kord.core.event.channel.VoiceChannelUpdateEvent.shard"]},{"name":"open override val shard: Int","description":"dev.kord.core.event.channel.thread.NewsChannelThreadCreateEvent.shard","location":"core/dev.kord.core.event.channel.thread/-news-channel-thread-create-event/shard.html","searchKeys":["shard","open override val shard: Int","dev.kord.core.event.channel.thread.NewsChannelThreadCreateEvent.shard"]},{"name":"open override val shard: Int","description":"dev.kord.core.event.channel.thread.NewsChannelThreadDeleteEvent.shard","location":"core/dev.kord.core.event.channel.thread/-news-channel-thread-delete-event/shard.html","searchKeys":["shard","open override val shard: Int","dev.kord.core.event.channel.thread.NewsChannelThreadDeleteEvent.shard"]},{"name":"open override val shard: Int","description":"dev.kord.core.event.channel.thread.NewsChannelThreadUpdateEvent.shard","location":"core/dev.kord.core.event.channel.thread/-news-channel-thread-update-event/shard.html","searchKeys":["shard","open override val shard: Int","dev.kord.core.event.channel.thread.NewsChannelThreadUpdateEvent.shard"]},{"name":"open override val shard: Int","description":"dev.kord.core.event.channel.thread.TextChannelThreadCreateEvent.shard","location":"core/dev.kord.core.event.channel.thread/-text-channel-thread-create-event/shard.html","searchKeys":["shard","open override val shard: Int","dev.kord.core.event.channel.thread.TextChannelThreadCreateEvent.shard"]},{"name":"open override val shard: Int","description":"dev.kord.core.event.channel.thread.TextChannelThreadDeleteEvent.shard","location":"core/dev.kord.core.event.channel.thread/-text-channel-thread-delete-event/shard.html","searchKeys":["shard","open override val shard: Int","dev.kord.core.event.channel.thread.TextChannelThreadDeleteEvent.shard"]},{"name":"open override val shard: Int","description":"dev.kord.core.event.channel.thread.TextChannelThreadUpdateEvent.shard","location":"core/dev.kord.core.event.channel.thread/-text-channel-thread-update-event/shard.html","searchKeys":["shard","open override val shard: Int","dev.kord.core.event.channel.thread.TextChannelThreadUpdateEvent.shard"]},{"name":"open override val shard: Int","description":"dev.kord.core.event.channel.thread.ThreadListSyncEvent.shard","location":"core/dev.kord.core.event.channel.thread/-thread-list-sync-event/shard.html","searchKeys":["shard","open override val shard: Int","dev.kord.core.event.channel.thread.ThreadListSyncEvent.shard"]},{"name":"open override val shard: Int","description":"dev.kord.core.event.channel.thread.ThreadMemberUpdateEvent.shard","location":"core/dev.kord.core.event.channel.thread/-thread-member-update-event/shard.html","searchKeys":["shard","open override val shard: Int","dev.kord.core.event.channel.thread.ThreadMemberUpdateEvent.shard"]},{"name":"open override val shard: Int","description":"dev.kord.core.event.channel.thread.ThreadMembersUpdateEvent.shard","location":"core/dev.kord.core.event.channel.thread/-thread-members-update-event/shard.html","searchKeys":["shard","open override val shard: Int","dev.kord.core.event.channel.thread.ThreadMembersUpdateEvent.shard"]},{"name":"open override val shard: Int","description":"dev.kord.core.event.channel.thread.UnknownChannelThreadCreateEvent.shard","location":"core/dev.kord.core.event.channel.thread/-unknown-channel-thread-create-event/shard.html","searchKeys":["shard","open override val shard: Int","dev.kord.core.event.channel.thread.UnknownChannelThreadCreateEvent.shard"]},{"name":"open override val shard: Int","description":"dev.kord.core.event.channel.thread.UnknownChannelThreadDeleteEvent.shard","location":"core/dev.kord.core.event.channel.thread/-unknown-channel-thread-delete-event/shard.html","searchKeys":["shard","open override val shard: Int","dev.kord.core.event.channel.thread.UnknownChannelThreadDeleteEvent.shard"]},{"name":"open override val shard: Int","description":"dev.kord.core.event.channel.thread.UnknownChannelThreadUpdateEvent.shard","location":"core/dev.kord.core.event.channel.thread/-unknown-channel-thread-update-event/shard.html","searchKeys":["shard","open override val shard: Int","dev.kord.core.event.channel.thread.UnknownChannelThreadUpdateEvent.shard"]},{"name":"open override val shard: Int","description":"dev.kord.core.event.gateway.ConnectEvent.shard","location":"core/dev.kord.core.event.gateway/-connect-event/shard.html","searchKeys":["shard","open override val shard: Int","dev.kord.core.event.gateway.ConnectEvent.shard"]},{"name":"open override val shard: Int","description":"dev.kord.core.event.gateway.DisconnectEvent.DetachEvent.shard","location":"core/dev.kord.core.event.gateway/-disconnect-event/-detach-event/shard.html","searchKeys":["shard","open override val shard: Int","dev.kord.core.event.gateway.DisconnectEvent.DetachEvent.shard"]},{"name":"open override val shard: Int","description":"dev.kord.core.event.gateway.DisconnectEvent.DiscordCloseEvent.shard","location":"core/dev.kord.core.event.gateway/-disconnect-event/-discord-close-event/shard.html","searchKeys":["shard","open override val shard: Int","dev.kord.core.event.gateway.DisconnectEvent.DiscordCloseEvent.shard"]},{"name":"open override val shard: Int","description":"dev.kord.core.event.gateway.DisconnectEvent.ReconnectingEvent.shard","location":"core/dev.kord.core.event.gateway/-disconnect-event/-reconnecting-event/shard.html","searchKeys":["shard","open override val shard: Int","dev.kord.core.event.gateway.DisconnectEvent.ReconnectingEvent.shard"]},{"name":"open override val shard: Int","description":"dev.kord.core.event.gateway.DisconnectEvent.RetryLimitReachedEvent.shard","location":"core/dev.kord.core.event.gateway/-disconnect-event/-retry-limit-reached-event/shard.html","searchKeys":["shard","open override val shard: Int","dev.kord.core.event.gateway.DisconnectEvent.RetryLimitReachedEvent.shard"]},{"name":"open override val shard: Int","description":"dev.kord.core.event.gateway.DisconnectEvent.SessionReset.shard","location":"core/dev.kord.core.event.gateway/-disconnect-event/-session-reset/shard.html","searchKeys":["shard","open override val shard: Int","dev.kord.core.event.gateway.DisconnectEvent.SessionReset.shard"]},{"name":"open override val shard: Int","description":"dev.kord.core.event.gateway.DisconnectEvent.TimeoutEvent.shard","location":"core/dev.kord.core.event.gateway/-disconnect-event/-timeout-event/shard.html","searchKeys":["shard","open override val shard: Int","dev.kord.core.event.gateway.DisconnectEvent.TimeoutEvent.shard"]},{"name":"open override val shard: Int","description":"dev.kord.core.event.gateway.DisconnectEvent.UserCloseEvent.shard","location":"core/dev.kord.core.event.gateway/-disconnect-event/-user-close-event/shard.html","searchKeys":["shard","open override val shard: Int","dev.kord.core.event.gateway.DisconnectEvent.UserCloseEvent.shard"]},{"name":"open override val shard: Int","description":"dev.kord.core.event.gateway.DisconnectEvent.ZombieConnectionEvent.shard","location":"core/dev.kord.core.event.gateway/-disconnect-event/-zombie-connection-event/shard.html","searchKeys":["shard","open override val shard: Int","dev.kord.core.event.gateway.DisconnectEvent.ZombieConnectionEvent.shard"]},{"name":"open override val shard: Int","description":"dev.kord.core.event.gateway.ReadyEvent.shard","location":"core/dev.kord.core.event.gateway/-ready-event/shard.html","searchKeys":["shard","open override val shard: Int","dev.kord.core.event.gateway.ReadyEvent.shard"]},{"name":"open override val shard: Int","description":"dev.kord.core.event.gateway.ResumedEvent.shard","location":"core/dev.kord.core.event.gateway/-resumed-event/shard.html","searchKeys":["shard","open override val shard: Int","dev.kord.core.event.gateway.ResumedEvent.shard"]},{"name":"open override val shard: Int","description":"dev.kord.core.event.guild.BanAddEvent.shard","location":"core/dev.kord.core.event.guild/-ban-add-event/shard.html","searchKeys":["shard","open override val shard: Int","dev.kord.core.event.guild.BanAddEvent.shard"]},{"name":"open override val shard: Int","description":"dev.kord.core.event.guild.BanRemoveEvent.shard","location":"core/dev.kord.core.event.guild/-ban-remove-event/shard.html","searchKeys":["shard","open override val shard: Int","dev.kord.core.event.guild.BanRemoveEvent.shard"]},{"name":"open override val shard: Int","description":"dev.kord.core.event.guild.EmojisUpdateEvent.shard","location":"core/dev.kord.core.event.guild/-emojis-update-event/shard.html","searchKeys":["shard","open override val shard: Int","dev.kord.core.event.guild.EmojisUpdateEvent.shard"]},{"name":"open override val shard: Int","description":"dev.kord.core.event.guild.GuildCreateEvent.shard","location":"core/dev.kord.core.event.guild/-guild-create-event/shard.html","searchKeys":["shard","open override val shard: Int","dev.kord.core.event.guild.GuildCreateEvent.shard"]},{"name":"open override val shard: Int","description":"dev.kord.core.event.guild.GuildDeleteEvent.shard","location":"core/dev.kord.core.event.guild/-guild-delete-event/shard.html","searchKeys":["shard","open override val shard: Int","dev.kord.core.event.guild.GuildDeleteEvent.shard"]},{"name":"open override val shard: Int","description":"dev.kord.core.event.guild.GuildScheduledEventCreateEvent.shard","location":"core/dev.kord.core.event.guild/-guild-scheduled-event-create-event/shard.html","searchKeys":["shard","open override val shard: Int","dev.kord.core.event.guild.GuildScheduledEventCreateEvent.shard"]},{"name":"open override val shard: Int","description":"dev.kord.core.event.guild.GuildScheduledEventDeleteEvent.shard","location":"core/dev.kord.core.event.guild/-guild-scheduled-event-delete-event/shard.html","searchKeys":["shard","open override val shard: Int","dev.kord.core.event.guild.GuildScheduledEventDeleteEvent.shard"]},{"name":"open override val shard: Int","description":"dev.kord.core.event.guild.GuildScheduledEventUpdateEvent.shard","location":"core/dev.kord.core.event.guild/-guild-scheduled-event-update-event/shard.html","searchKeys":["shard","open override val shard: Int","dev.kord.core.event.guild.GuildScheduledEventUpdateEvent.shard"]},{"name":"open override val shard: Int","description":"dev.kord.core.event.guild.GuildScheduledEventUserAddEvent.shard","location":"core/dev.kord.core.event.guild/-guild-scheduled-event-user-add-event/shard.html","searchKeys":["shard","open override val shard: Int","dev.kord.core.event.guild.GuildScheduledEventUserAddEvent.shard"]},{"name":"open override val shard: Int","description":"dev.kord.core.event.guild.GuildScheduledEventUserRemoveEvent.shard","location":"core/dev.kord.core.event.guild/-guild-scheduled-event-user-remove-event/shard.html","searchKeys":["shard","open override val shard: Int","dev.kord.core.event.guild.GuildScheduledEventUserRemoveEvent.shard"]},{"name":"open override val shard: Int","description":"dev.kord.core.event.guild.GuildUpdateEvent.shard","location":"core/dev.kord.core.event.guild/-guild-update-event/shard.html","searchKeys":["shard","open override val shard: Int","dev.kord.core.event.guild.GuildUpdateEvent.shard"]},{"name":"open override val shard: Int","description":"dev.kord.core.event.guild.IntegrationsUpdateEvent.shard","location":"core/dev.kord.core.event.guild/-integrations-update-event/shard.html","searchKeys":["shard","open override val shard: Int","dev.kord.core.event.guild.IntegrationsUpdateEvent.shard"]},{"name":"open override val shard: Int","description":"dev.kord.core.event.guild.InviteCreateEvent.shard","location":"core/dev.kord.core.event.guild/-invite-create-event/shard.html","searchKeys":["shard","open override val shard: Int","dev.kord.core.event.guild.InviteCreateEvent.shard"]},{"name":"open override val shard: Int","description":"dev.kord.core.event.guild.InviteDeleteEvent.shard","location":"core/dev.kord.core.event.guild/-invite-delete-event/shard.html","searchKeys":["shard","open override val shard: Int","dev.kord.core.event.guild.InviteDeleteEvent.shard"]},{"name":"open override val shard: Int","description":"dev.kord.core.event.guild.MemberJoinEvent.shard","location":"core/dev.kord.core.event.guild/-member-join-event/shard.html","searchKeys":["shard","open override val shard: Int","dev.kord.core.event.guild.MemberJoinEvent.shard"]},{"name":"open override val shard: Int","description":"dev.kord.core.event.guild.MemberLeaveEvent.shard","location":"core/dev.kord.core.event.guild/-member-leave-event/shard.html","searchKeys":["shard","open override val shard: Int","dev.kord.core.event.guild.MemberLeaveEvent.shard"]},{"name":"open override val shard: Int","description":"dev.kord.core.event.guild.MemberUpdateEvent.shard","location":"core/dev.kord.core.event.guild/-member-update-event/shard.html","searchKeys":["shard","open override val shard: Int","dev.kord.core.event.guild.MemberUpdateEvent.shard"]},{"name":"open override val shard: Int","description":"dev.kord.core.event.guild.MembersChunkEvent.shard","location":"core/dev.kord.core.event.guild/-members-chunk-event/shard.html","searchKeys":["shard","open override val shard: Int","dev.kord.core.event.guild.MembersChunkEvent.shard"]},{"name":"open override val shard: Int","description":"dev.kord.core.event.guild.VoiceServerUpdateEvent.shard","location":"core/dev.kord.core.event.guild/-voice-server-update-event/shard.html","searchKeys":["shard","open override val shard: Int","dev.kord.core.event.guild.VoiceServerUpdateEvent.shard"]},{"name":"open override val shard: Int","description":"dev.kord.core.event.guild.WebhookUpdateEvent.shard","location":"core/dev.kord.core.event.guild/-webhook-update-event/shard.html","searchKeys":["shard","open override val shard: Int","dev.kord.core.event.guild.WebhookUpdateEvent.shard"]},{"name":"open override val shard: Int","description":"dev.kord.core.event.interaction.ApplicationCommandPermissionsUpdateEvent.shard","location":"core/dev.kord.core.event.interaction/-application-command-permissions-update-event/shard.html","searchKeys":["shard","open override val shard: Int","dev.kord.core.event.interaction.ApplicationCommandPermissionsUpdateEvent.shard"]},{"name":"open override val shard: Int","description":"dev.kord.core.event.interaction.ChatInputCommandCreateEvent.shard","location":"core/dev.kord.core.event.interaction/-chat-input-command-create-event/shard.html","searchKeys":["shard","open override val shard: Int","dev.kord.core.event.interaction.ChatInputCommandCreateEvent.shard"]},{"name":"open override val shard: Int","description":"dev.kord.core.event.interaction.ChatInputCommandDeleteEvent.shard","location":"core/dev.kord.core.event.interaction/-chat-input-command-delete-event/shard.html","searchKeys":["shard","open override val shard: Int","dev.kord.core.event.interaction.ChatInputCommandDeleteEvent.shard"]},{"name":"open override val shard: Int","description":"dev.kord.core.event.interaction.ChatInputCommandUpdateEvent.shard","location":"core/dev.kord.core.event.interaction/-chat-input-command-update-event/shard.html","searchKeys":["shard","open override val shard: Int","dev.kord.core.event.interaction.ChatInputCommandUpdateEvent.shard"]},{"name":"open override val shard: Int","description":"dev.kord.core.event.interaction.GlobalAutoCompleteInteractionCreateEvent.shard","location":"core/dev.kord.core.event.interaction/-global-auto-complete-interaction-create-event/shard.html","searchKeys":["shard","open override val shard: Int","dev.kord.core.event.interaction.GlobalAutoCompleteInteractionCreateEvent.shard"]},{"name":"open override val shard: Int","description":"dev.kord.core.event.interaction.GlobalButtonInteractionCreateEvent.shard","location":"core/dev.kord.core.event.interaction/-global-button-interaction-create-event/shard.html","searchKeys":["shard","open override val shard: Int","dev.kord.core.event.interaction.GlobalButtonInteractionCreateEvent.shard"]},{"name":"open override val shard: Int","description":"dev.kord.core.event.interaction.GlobalChatInputCommandInteractionCreateEvent.shard","location":"core/dev.kord.core.event.interaction/-global-chat-input-command-interaction-create-event/shard.html","searchKeys":["shard","open override val shard: Int","dev.kord.core.event.interaction.GlobalChatInputCommandInteractionCreateEvent.shard"]},{"name":"open override val shard: Int","description":"dev.kord.core.event.interaction.GlobalMessageCommandInteractionCreateEvent.shard","location":"core/dev.kord.core.event.interaction/-global-message-command-interaction-create-event/shard.html","searchKeys":["shard","open override val shard: Int","dev.kord.core.event.interaction.GlobalMessageCommandInteractionCreateEvent.shard"]},{"name":"open override val shard: Int","description":"dev.kord.core.event.interaction.GlobalModalSubmitInteractionCreateEvent.shard","location":"core/dev.kord.core.event.interaction/-global-modal-submit-interaction-create-event/shard.html","searchKeys":["shard","open override val shard: Int","dev.kord.core.event.interaction.GlobalModalSubmitInteractionCreateEvent.shard"]},{"name":"open override val shard: Int","description":"dev.kord.core.event.interaction.GlobalSelectMenuInteractionCreateEvent.shard","location":"core/dev.kord.core.event.interaction/-global-select-menu-interaction-create-event/shard.html","searchKeys":["shard","open override val shard: Int","dev.kord.core.event.interaction.GlobalSelectMenuInteractionCreateEvent.shard"]},{"name":"open override val shard: Int","description":"dev.kord.core.event.interaction.GlobalUserCommandInteractionCreateEvent.shard","location":"core/dev.kord.core.event.interaction/-global-user-command-interaction-create-event/shard.html","searchKeys":["shard","open override val shard: Int","dev.kord.core.event.interaction.GlobalUserCommandInteractionCreateEvent.shard"]},{"name":"open override val shard: Int","description":"dev.kord.core.event.interaction.GuildAutoCompleteInteractionCreateEvent.shard","location":"core/dev.kord.core.event.interaction/-guild-auto-complete-interaction-create-event/shard.html","searchKeys":["shard","open override val shard: Int","dev.kord.core.event.interaction.GuildAutoCompleteInteractionCreateEvent.shard"]},{"name":"open override val shard: Int","description":"dev.kord.core.event.interaction.GuildButtonInteractionCreateEvent.shard","location":"core/dev.kord.core.event.interaction/-guild-button-interaction-create-event/shard.html","searchKeys":["shard","open override val shard: Int","dev.kord.core.event.interaction.GuildButtonInteractionCreateEvent.shard"]},{"name":"open override val shard: Int","description":"dev.kord.core.event.interaction.GuildChatInputCommandInteractionCreateEvent.shard","location":"core/dev.kord.core.event.interaction/-guild-chat-input-command-interaction-create-event/shard.html","searchKeys":["shard","open override val shard: Int","dev.kord.core.event.interaction.GuildChatInputCommandInteractionCreateEvent.shard"]},{"name":"open override val shard: Int","description":"dev.kord.core.event.interaction.GuildMessageCommandInteractionCreateEvent.shard","location":"core/dev.kord.core.event.interaction/-guild-message-command-interaction-create-event/shard.html","searchKeys":["shard","open override val shard: Int","dev.kord.core.event.interaction.GuildMessageCommandInteractionCreateEvent.shard"]},{"name":"open override val shard: Int","description":"dev.kord.core.event.interaction.GuildModalSubmitInteractionCreateEvent.shard","location":"core/dev.kord.core.event.interaction/-guild-modal-submit-interaction-create-event/shard.html","searchKeys":["shard","open override val shard: Int","dev.kord.core.event.interaction.GuildModalSubmitInteractionCreateEvent.shard"]},{"name":"open override val shard: Int","description":"dev.kord.core.event.interaction.GuildSelectMenuInteractionCreateEvent.shard","location":"core/dev.kord.core.event.interaction/-guild-select-menu-interaction-create-event/shard.html","searchKeys":["shard","open override val shard: Int","dev.kord.core.event.interaction.GuildSelectMenuInteractionCreateEvent.shard"]},{"name":"open override val shard: Int","description":"dev.kord.core.event.interaction.GuildUserCommandInteractionCreateEvent.shard","location":"core/dev.kord.core.event.interaction/-guild-user-command-interaction-create-event/shard.html","searchKeys":["shard","open override val shard: Int","dev.kord.core.event.interaction.GuildUserCommandInteractionCreateEvent.shard"]},{"name":"open override val shard: Int","description":"dev.kord.core.event.interaction.MessageCommandCreateEvent.shard","location":"core/dev.kord.core.event.interaction/-message-command-create-event/shard.html","searchKeys":["shard","open override val shard: Int","dev.kord.core.event.interaction.MessageCommandCreateEvent.shard"]},{"name":"open override val shard: Int","description":"dev.kord.core.event.interaction.MessageCommandDeleteEvent.shard","location":"core/dev.kord.core.event.interaction/-message-command-delete-event/shard.html","searchKeys":["shard","open override val shard: Int","dev.kord.core.event.interaction.MessageCommandDeleteEvent.shard"]},{"name":"open override val shard: Int","description":"dev.kord.core.event.interaction.MessageCommandUpdateEvent.shard","location":"core/dev.kord.core.event.interaction/-message-command-update-event/shard.html","searchKeys":["shard","open override val shard: Int","dev.kord.core.event.interaction.MessageCommandUpdateEvent.shard"]},{"name":"open override val shard: Int","description":"dev.kord.core.event.interaction.UnknownApplicationCommandCreateEvent.shard","location":"core/dev.kord.core.event.interaction/-unknown-application-command-create-event/shard.html","searchKeys":["shard","open override val shard: Int","dev.kord.core.event.interaction.UnknownApplicationCommandCreateEvent.shard"]},{"name":"open override val shard: Int","description":"dev.kord.core.event.interaction.UnknownApplicationCommandDeleteEvent.shard","location":"core/dev.kord.core.event.interaction/-unknown-application-command-delete-event/shard.html","searchKeys":["shard","open override val shard: Int","dev.kord.core.event.interaction.UnknownApplicationCommandDeleteEvent.shard"]},{"name":"open override val shard: Int","description":"dev.kord.core.event.interaction.UnknownApplicationCommandUpdateEvent.shard","location":"core/dev.kord.core.event.interaction/-unknown-application-command-update-event/shard.html","searchKeys":["shard","open override val shard: Int","dev.kord.core.event.interaction.UnknownApplicationCommandUpdateEvent.shard"]},{"name":"open override val shard: Int","description":"dev.kord.core.event.interaction.UserCommandCreateEvent.shard","location":"core/dev.kord.core.event.interaction/-user-command-create-event/shard.html","searchKeys":["shard","open override val shard: Int","dev.kord.core.event.interaction.UserCommandCreateEvent.shard"]},{"name":"open override val shard: Int","description":"dev.kord.core.event.interaction.UserCommandDeleteEvent.shard","location":"core/dev.kord.core.event.interaction/-user-command-delete-event/shard.html","searchKeys":["shard","open override val shard: Int","dev.kord.core.event.interaction.UserCommandDeleteEvent.shard"]},{"name":"open override val shard: Int","description":"dev.kord.core.event.interaction.UserCommandUpdateEvent.shard","location":"core/dev.kord.core.event.interaction/-user-command-update-event/shard.html","searchKeys":["shard","open override val shard: Int","dev.kord.core.event.interaction.UserCommandUpdateEvent.shard"]},{"name":"open override val shard: Int","description":"dev.kord.core.event.message.MessageBulkDeleteEvent.shard","location":"core/dev.kord.core.event.message/-message-bulk-delete-event/shard.html","searchKeys":["shard","open override val shard: Int","dev.kord.core.event.message.MessageBulkDeleteEvent.shard"]},{"name":"open override val shard: Int","description":"dev.kord.core.event.message.MessageCreateEvent.shard","location":"core/dev.kord.core.event.message/-message-create-event/shard.html","searchKeys":["shard","open override val shard: Int","dev.kord.core.event.message.MessageCreateEvent.shard"]},{"name":"open override val shard: Int","description":"dev.kord.core.event.message.MessageDeleteEvent.shard","location":"core/dev.kord.core.event.message/-message-delete-event/shard.html","searchKeys":["shard","open override val shard: Int","dev.kord.core.event.message.MessageDeleteEvent.shard"]},{"name":"open override val shard: Int","description":"dev.kord.core.event.message.MessageUpdateEvent.shard","location":"core/dev.kord.core.event.message/-message-update-event/shard.html","searchKeys":["shard","open override val shard: Int","dev.kord.core.event.message.MessageUpdateEvent.shard"]},{"name":"open override val shard: Int","description":"dev.kord.core.event.message.ReactionAddEvent.shard","location":"core/dev.kord.core.event.message/-reaction-add-event/shard.html","searchKeys":["shard","open override val shard: Int","dev.kord.core.event.message.ReactionAddEvent.shard"]},{"name":"open override val shard: Int","description":"dev.kord.core.event.message.ReactionRemoveAllEvent.shard","location":"core/dev.kord.core.event.message/-reaction-remove-all-event/shard.html","searchKeys":["shard","open override val shard: Int","dev.kord.core.event.message.ReactionRemoveAllEvent.shard"]},{"name":"open override val shard: Int","description":"dev.kord.core.event.message.ReactionRemoveEmojiEvent.shard","location":"core/dev.kord.core.event.message/-reaction-remove-emoji-event/shard.html","searchKeys":["shard","open override val shard: Int","dev.kord.core.event.message.ReactionRemoveEmojiEvent.shard"]},{"name":"open override val shard: Int","description":"dev.kord.core.event.message.ReactionRemoveEvent.shard","location":"core/dev.kord.core.event.message/-reaction-remove-event/shard.html","searchKeys":["shard","open override val shard: Int","dev.kord.core.event.message.ReactionRemoveEvent.shard"]},{"name":"open override val shard: Int","description":"dev.kord.core.event.role.RoleCreateEvent.shard","location":"core/dev.kord.core.event.role/-role-create-event/shard.html","searchKeys":["shard","open override val shard: Int","dev.kord.core.event.role.RoleCreateEvent.shard"]},{"name":"open override val shard: Int","description":"dev.kord.core.event.role.RoleDeleteEvent.shard","location":"core/dev.kord.core.event.role/-role-delete-event/shard.html","searchKeys":["shard","open override val shard: Int","dev.kord.core.event.role.RoleDeleteEvent.shard"]},{"name":"open override val shard: Int","description":"dev.kord.core.event.role.RoleUpdateEvent.shard","location":"core/dev.kord.core.event.role/-role-update-event/shard.html","searchKeys":["shard","open override val shard: Int","dev.kord.core.event.role.RoleUpdateEvent.shard"]},{"name":"open override val shard: Int","description":"dev.kord.core.event.user.PresenceUpdateEvent.shard","location":"core/dev.kord.core.event.user/-presence-update-event/shard.html","searchKeys":["shard","open override val shard: Int","dev.kord.core.event.user.PresenceUpdateEvent.shard"]},{"name":"open override val shard: Int","description":"dev.kord.core.event.user.UserUpdateEvent.shard","location":"core/dev.kord.core.event.user/-user-update-event/shard.html","searchKeys":["shard","open override val shard: Int","dev.kord.core.event.user.UserUpdateEvent.shard"]},{"name":"open override val shard: Int","description":"dev.kord.core.event.user.VoiceStateUpdateEvent.shard","location":"core/dev.kord.core.event.user/-voice-state-update-event/shard.html","searchKeys":["shard","open override val shard: Int","dev.kord.core.event.user.VoiceStateUpdateEvent.shard"]},{"name":"open override val slug: Optional<String>","description":"dev.kord.core.cache.data.ApplicationData.slug","location":"core/dev.kord.core.cache.data/-application-data/slug.html","searchKeys":["slug","open override val slug: Optional<String>","dev.kord.core.cache.data.ApplicationData.slug"]},{"name":"open override val slug: Optional<String>","description":"dev.kord.core.cache.data.PartialApplicationData.slug","location":"core/dev.kord.core.cache.data/-partial-application-data/slug.html","searchKeys":["slug","open override val slug: Optional<String>","dev.kord.core.cache.data.PartialApplicationData.slug"]},{"name":"open override val stickers: Flow<GuildSticker>","description":"dev.kord.core.entity.Guild.stickers","location":"core/dev.kord.core.entity/-guild/stickers.html","searchKeys":["stickers","open override val stickers: Flow<GuildSticker>","dev.kord.core.entity.Guild.stickers"]},{"name":"open override val supplier: EntitySupplier","description":"dev.kord.core.entity.Ban.supplier","location":"core/dev.kord.core.entity/-ban/supplier.html","searchKeys":["supplier","open override val supplier: EntitySupplier","dev.kord.core.entity.Ban.supplier"]},{"name":"open override val supplier: EntitySupplier","description":"dev.kord.core.entity.Guild.supplier","location":"core/dev.kord.core.entity/-guild/supplier.html","searchKeys":["supplier","open override val supplier: EntitySupplier","dev.kord.core.entity.Guild.supplier"]},{"name":"open override val supplier: EntitySupplier","description":"dev.kord.core.entity.GuildEmoji.supplier","location":"core/dev.kord.core.entity/-guild-emoji/supplier.html","searchKeys":["supplier","open override val supplier: EntitySupplier","dev.kord.core.entity.GuildEmoji.supplier"]},{"name":"open override val supplier: EntitySupplier","description":"dev.kord.core.entity.GuildScheduledEvent.supplier","location":"core/dev.kord.core.entity/-guild-scheduled-event/supplier.html","searchKeys":["supplier","open override val supplier: EntitySupplier","dev.kord.core.entity.GuildScheduledEvent.supplier"]},{"name":"open override val supplier: EntitySupplier","description":"dev.kord.core.entity.GuildSticker.supplier","location":"core/dev.kord.core.entity/-guild-sticker/supplier.html","searchKeys":["supplier","open override val supplier: EntitySupplier","dev.kord.core.entity.GuildSticker.supplier"]},{"name":"open override val supplier: EntitySupplier","description":"dev.kord.core.entity.GuildWidget.supplier","location":"core/dev.kord.core.entity/-guild-widget/supplier.html","searchKeys":["supplier","open override val supplier: EntitySupplier","dev.kord.core.entity.GuildWidget.supplier"]},{"name":"open override val supplier: EntitySupplier","description":"dev.kord.core.entity.Integration.supplier","location":"core/dev.kord.core.entity/-integration/supplier.html","searchKeys":["supplier","open override val supplier: EntitySupplier","dev.kord.core.entity.Integration.supplier"]},{"name":"open override val supplier: EntitySupplier","description":"dev.kord.core.entity.Message.Interaction.supplier","location":"core/dev.kord.core.entity/-message/-interaction/supplier.html","searchKeys":["supplier","open override val supplier: EntitySupplier","dev.kord.core.entity.Message.Interaction.supplier"]},{"name":"open override val supplier: EntitySupplier","description":"dev.kord.core.entity.Message.supplier","location":"core/dev.kord.core.entity/-message/supplier.html","searchKeys":["supplier","open override val supplier: EntitySupplier","dev.kord.core.entity.Message.supplier"]},{"name":"open override val supplier: EntitySupplier","description":"dev.kord.core.entity.PartialGuild.supplier","location":"core/dev.kord.core.entity/-partial-guild/supplier.html","searchKeys":["supplier","open override val supplier: EntitySupplier","dev.kord.core.entity.PartialGuild.supplier"]},{"name":"open override val supplier: EntitySupplier","description":"dev.kord.core.entity.PermissionOverwriteEntity.supplier","location":"core/dev.kord.core.entity/-permission-overwrite-entity/supplier.html","searchKeys":["supplier","open override val supplier: EntitySupplier","dev.kord.core.entity.PermissionOverwriteEntity.supplier"]},{"name":"open override val supplier: EntitySupplier","description":"dev.kord.core.entity.Presence.supplier","location":"core/dev.kord.core.entity/-presence/supplier.html","searchKeys":["supplier","open override val supplier: EntitySupplier","dev.kord.core.entity.Presence.supplier"]},{"name":"open override val supplier: EntitySupplier","description":"dev.kord.core.entity.Role.supplier","location":"core/dev.kord.core.entity/-role/supplier.html","searchKeys":["supplier","open override val supplier: EntitySupplier","dev.kord.core.entity.Role.supplier"]},{"name":"open override val supplier: EntitySupplier","description":"dev.kord.core.entity.RoleTags.supplier","location":"core/dev.kord.core.entity/-role-tags/supplier.html","searchKeys":["supplier","open override val supplier: EntitySupplier","dev.kord.core.entity.RoleTags.supplier"]},{"name":"open override val supplier: EntitySupplier","description":"dev.kord.core.entity.StageInstance.supplier","location":"core/dev.kord.core.entity/-stage-instance/supplier.html","searchKeys":["supplier","open override val supplier: EntitySupplier","dev.kord.core.entity.StageInstance.supplier"]},{"name":"open override val supplier: EntitySupplier","description":"dev.kord.core.entity.StickerItem.supplier","location":"core/dev.kord.core.entity/-sticker-item/supplier.html","searchKeys":["supplier","open override val supplier: EntitySupplier","dev.kord.core.entity.StickerItem.supplier"]},{"name":"open override val supplier: EntitySupplier","description":"dev.kord.core.entity.Team.supplier","location":"core/dev.kord.core.entity/-team/supplier.html","searchKeys":["supplier","open override val supplier: EntitySupplier","dev.kord.core.entity.Team.supplier"]},{"name":"open override val supplier: EntitySupplier","description":"dev.kord.core.entity.User.supplier","location":"core/dev.kord.core.entity/-user/supplier.html","searchKeys":["supplier","open override val supplier: EntitySupplier","dev.kord.core.entity.User.supplier"]},{"name":"open override val supplier: EntitySupplier","description":"dev.kord.core.entity.VoiceState.supplier","location":"core/dev.kord.core.entity/-voice-state/supplier.html","searchKeys":["supplier","open override val supplier: EntitySupplier","dev.kord.core.entity.VoiceState.supplier"]},{"name":"open override val supplier: EntitySupplier","description":"dev.kord.core.entity.Webhook.supplier","location":"core/dev.kord.core.entity/-webhook/supplier.html","searchKeys":["supplier","open override val supplier: EntitySupplier","dev.kord.core.entity.Webhook.supplier"]},{"name":"open override val supplier: EntitySupplier","description":"dev.kord.core.entity.channel.Category.supplier","location":"core/dev.kord.core.entity.channel/-category/supplier.html","searchKeys":["supplier","open override val supplier: EntitySupplier","dev.kord.core.entity.channel.Category.supplier"]},{"name":"open override val supplier: EntitySupplier","description":"dev.kord.core.entity.channel.DmChannel.supplier","location":"core/dev.kord.core.entity.channel/-dm-channel/supplier.html","searchKeys":["supplier","open override val supplier: EntitySupplier","dev.kord.core.entity.channel.DmChannel.supplier"]},{"name":"open override val supplier: EntitySupplier","description":"dev.kord.core.entity.channel.NewsChannel.supplier","location":"core/dev.kord.core.entity.channel/-news-channel/supplier.html","searchKeys":["supplier","open override val supplier: EntitySupplier","dev.kord.core.entity.channel.NewsChannel.supplier"]},{"name":"open override val supplier: EntitySupplier","description":"dev.kord.core.entity.channel.ResolvedChannel.supplier","location":"core/dev.kord.core.entity.channel/-resolved-channel/supplier.html","searchKeys":["supplier","open override val supplier: EntitySupplier","dev.kord.core.entity.channel.ResolvedChannel.supplier"]},{"name":"open override val supplier: EntitySupplier","description":"dev.kord.core.entity.channel.StageChannel.supplier","location":"core/dev.kord.core.entity.channel/-stage-channel/supplier.html","searchKeys":["supplier","open override val supplier: EntitySupplier","dev.kord.core.entity.channel.StageChannel.supplier"]},{"name":"open override val supplier: EntitySupplier","description":"dev.kord.core.entity.channel.TextChannel.supplier","location":"core/dev.kord.core.entity.channel/-text-channel/supplier.html","searchKeys":["supplier","open override val supplier: EntitySupplier","dev.kord.core.entity.channel.TextChannel.supplier"]},{"name":"open override val supplier: EntitySupplier","description":"dev.kord.core.entity.channel.VoiceChannel.supplier","location":"core/dev.kord.core.entity.channel/-voice-channel/supplier.html","searchKeys":["supplier","open override val supplier: EntitySupplier","dev.kord.core.entity.channel.VoiceChannel.supplier"]},{"name":"open override val supplier: EntitySupplier","description":"dev.kord.core.entity.channel.WelcomeScreenChannel.supplier","location":"core/dev.kord.core.entity.channel/-welcome-screen-channel/supplier.html","searchKeys":["supplier","open override val supplier: EntitySupplier","dev.kord.core.entity.channel.WelcomeScreenChannel.supplier"]},{"name":"open override val supplier: EntitySupplier","description":"dev.kord.core.entity.channel.thread.DeletedThreadChannel.supplier","location":"core/dev.kord.core.entity.channel.thread/-deleted-thread-channel/supplier.html","searchKeys":["supplier","open override val supplier: EntitySupplier","dev.kord.core.entity.channel.thread.DeletedThreadChannel.supplier"]},{"name":"open override val supplier: EntitySupplier","description":"dev.kord.core.entity.channel.thread.NewsChannelThread.supplier","location":"core/dev.kord.core.entity.channel.thread/-news-channel-thread/supplier.html","searchKeys":["supplier","open override val supplier: EntitySupplier","dev.kord.core.entity.channel.thread.NewsChannelThread.supplier"]},{"name":"open override val supplier: EntitySupplier","description":"dev.kord.core.entity.channel.thread.TextChannelThread.supplier","location":"core/dev.kord.core.entity.channel.thread/-text-channel-thread/supplier.html","searchKeys":["supplier","open override val supplier: EntitySupplier","dev.kord.core.entity.channel.thread.TextChannelThread.supplier"]},{"name":"open override val supplier: EntitySupplier","description":"dev.kord.core.entity.channel.thread.ThreadMember.supplier","location":"core/dev.kord.core.entity.channel.thread/-thread-member/supplier.html","searchKeys":["supplier","open override val supplier: EntitySupplier","dev.kord.core.entity.channel.thread.ThreadMember.supplier"]},{"name":"open override val supplier: EntitySupplier","description":"dev.kord.core.entity.interaction.GlobalAutoCompleteInteraction.supplier","location":"core/dev.kord.core.entity.interaction/-global-auto-complete-interaction/supplier.html","searchKeys":["supplier","open override val supplier: EntitySupplier","dev.kord.core.entity.interaction.GlobalAutoCompleteInteraction.supplier"]},{"name":"open override val supplier: EntitySupplier","description":"dev.kord.core.entity.interaction.GlobalButtonInteraction.supplier","location":"core/dev.kord.core.entity.interaction/-global-button-interaction/supplier.html","searchKeys":["supplier","open override val supplier: EntitySupplier","dev.kord.core.entity.interaction.GlobalButtonInteraction.supplier"]},{"name":"open override val supplier: EntitySupplier","description":"dev.kord.core.entity.interaction.GlobalChatInputCommandInteraction.supplier","location":"core/dev.kord.core.entity.interaction/-global-chat-input-command-interaction/supplier.html","searchKeys":["supplier","open override val supplier: EntitySupplier","dev.kord.core.entity.interaction.GlobalChatInputCommandInteraction.supplier"]},{"name":"open override val supplier: EntitySupplier","description":"dev.kord.core.entity.interaction.GlobalMessageCommandInteraction.supplier","location":"core/dev.kord.core.entity.interaction/-global-message-command-interaction/supplier.html","searchKeys":["supplier","open override val supplier: EntitySupplier","dev.kord.core.entity.interaction.GlobalMessageCommandInteraction.supplier"]},{"name":"open override val supplier: EntitySupplier","description":"dev.kord.core.entity.interaction.GlobalModalSubmitInteraction.supplier","location":"core/dev.kord.core.entity.interaction/-global-modal-submit-interaction/supplier.html","searchKeys":["supplier","open override val supplier: EntitySupplier","dev.kord.core.entity.interaction.GlobalModalSubmitInteraction.supplier"]},{"name":"open override val supplier: EntitySupplier","description":"dev.kord.core.entity.interaction.GlobalSelectMenuInteraction.supplier","location":"core/dev.kord.core.entity.interaction/-global-select-menu-interaction/supplier.html","searchKeys":["supplier","open override val supplier: EntitySupplier","dev.kord.core.entity.interaction.GlobalSelectMenuInteraction.supplier"]},{"name":"open override val supplier: EntitySupplier","description":"dev.kord.core.entity.interaction.GlobalUserCommandInteraction.supplier","location":"core/dev.kord.core.entity.interaction/-global-user-command-interaction/supplier.html","searchKeys":["supplier","open override val supplier: EntitySupplier","dev.kord.core.entity.interaction.GlobalUserCommandInteraction.supplier"]},{"name":"open override val supplier: EntitySupplier","description":"dev.kord.core.entity.interaction.GuildAutoCompleteInteraction.supplier","location":"core/dev.kord.core.entity.interaction/-guild-auto-complete-interaction/supplier.html","searchKeys":["supplier","open override val supplier: EntitySupplier","dev.kord.core.entity.interaction.GuildAutoCompleteInteraction.supplier"]},{"name":"open override val supplier: EntitySupplier","description":"dev.kord.core.entity.interaction.GuildButtonInteraction.supplier","location":"core/dev.kord.core.entity.interaction/-guild-button-interaction/supplier.html","searchKeys":["supplier","open override val supplier: EntitySupplier","dev.kord.core.entity.interaction.GuildButtonInteraction.supplier"]},{"name":"open override val supplier: EntitySupplier","description":"dev.kord.core.entity.interaction.GuildChatInputCommandInteraction.supplier","location":"core/dev.kord.core.entity.interaction/-guild-chat-input-command-interaction/supplier.html","searchKeys":["supplier","open override val supplier: EntitySupplier","dev.kord.core.entity.interaction.GuildChatInputCommandInteraction.supplier"]},{"name":"open override val supplier: EntitySupplier","description":"dev.kord.core.entity.interaction.GuildMessageCommandInteraction.supplier","location":"core/dev.kord.core.entity.interaction/-guild-message-command-interaction/supplier.html","searchKeys":["supplier","open override val supplier: EntitySupplier","dev.kord.core.entity.interaction.GuildMessageCommandInteraction.supplier"]},{"name":"open override val supplier: EntitySupplier","description":"dev.kord.core.entity.interaction.GuildModalSubmitInteraction.supplier","location":"core/dev.kord.core.entity.interaction/-guild-modal-submit-interaction/supplier.html","searchKeys":["supplier","open override val supplier: EntitySupplier","dev.kord.core.entity.interaction.GuildModalSubmitInteraction.supplier"]},{"name":"open override val supplier: EntitySupplier","description":"dev.kord.core.entity.interaction.GuildSelectMenuInteraction.supplier","location":"core/dev.kord.core.entity.interaction/-guild-select-menu-interaction/supplier.html","searchKeys":["supplier","open override val supplier: EntitySupplier","dev.kord.core.entity.interaction.GuildSelectMenuInteraction.supplier"]},{"name":"open override val supplier: EntitySupplier","description":"dev.kord.core.entity.interaction.GuildUserCommandInteraction.supplier","location":"core/dev.kord.core.entity.interaction/-guild-user-command-interaction/supplier.html","searchKeys":["supplier","open override val supplier: EntitySupplier","dev.kord.core.entity.interaction.GuildUserCommandInteraction.supplier"]},{"name":"open override val supplier: EntitySupplier","description":"dev.kord.core.entity.interaction.followup.EphemeralFollowupMessage.supplier","location":"core/dev.kord.core.entity.interaction.followup/-ephemeral-followup-message/supplier.html","searchKeys":["supplier","open override val supplier: EntitySupplier","dev.kord.core.entity.interaction.followup.EphemeralFollowupMessage.supplier"]},{"name":"open override val supplier: EntitySupplier","description":"dev.kord.core.entity.interaction.followup.PublicFollowupMessage.supplier","location":"core/dev.kord.core.entity.interaction.followup/-public-followup-message/supplier.html","searchKeys":["supplier","open override val supplier: EntitySupplier","dev.kord.core.entity.interaction.followup.PublicFollowupMessage.supplier"]},{"name":"open override val supplier: EntitySupplier","description":"dev.kord.core.entity.interaction.response.EphemeralMessageInteractionResponse.supplier","location":"core/dev.kord.core.entity.interaction.response/-ephemeral-message-interaction-response/supplier.html","searchKeys":["supplier","open override val supplier: EntitySupplier","dev.kord.core.entity.interaction.response.EphemeralMessageInteractionResponse.supplier"]},{"name":"open override val supplier: EntitySupplier","description":"dev.kord.core.entity.interaction.response.PublicMessageInteractionResponse.supplier","location":"core/dev.kord.core.entity.interaction.response/-public-message-interaction-response/supplier.html","searchKeys":["supplier","open override val supplier: EntitySupplier","dev.kord.core.entity.interaction.response.PublicMessageInteractionResponse.supplier"]},{"name":"open override val supplier: EntitySupplier","description":"dev.kord.core.event.automoderation.AutoModerationActionExecutionEvent.supplier","location":"core/dev.kord.core.event.automoderation/-auto-moderation-action-execution-event/supplier.html","searchKeys":["supplier","open override val supplier: EntitySupplier","dev.kord.core.event.automoderation.AutoModerationActionExecutionEvent.supplier"]},{"name":"open override val supplier: EntitySupplier","description":"dev.kord.core.event.automoderation.AutoModerationRuleCreateEvent.supplier","location":"core/dev.kord.core.event.automoderation/-auto-moderation-rule-create-event/supplier.html","searchKeys":["supplier","open override val supplier: EntitySupplier","dev.kord.core.event.automoderation.AutoModerationRuleCreateEvent.supplier"]},{"name":"open override val supplier: EntitySupplier","description":"dev.kord.core.event.automoderation.AutoModerationRuleDeleteEvent.supplier","location":"core/dev.kord.core.event.automoderation/-auto-moderation-rule-delete-event/supplier.html","searchKeys":["supplier","open override val supplier: EntitySupplier","dev.kord.core.event.automoderation.AutoModerationRuleDeleteEvent.supplier"]},{"name":"open override val supplier: EntitySupplier","description":"dev.kord.core.event.automoderation.AutoModerationRuleUpdateEvent.supplier","location":"core/dev.kord.core.event.automoderation/-auto-moderation-rule-update-event/supplier.html","searchKeys":["supplier","open override val supplier: EntitySupplier","dev.kord.core.event.automoderation.AutoModerationRuleUpdateEvent.supplier"]},{"name":"open override val supplier: EntitySupplier","description":"dev.kord.core.event.channel.ChannelPinsUpdateEvent.supplier","location":"core/dev.kord.core.event.channel/-channel-pins-update-event/supplier.html","searchKeys":["supplier","open override val supplier: EntitySupplier","dev.kord.core.event.channel.ChannelPinsUpdateEvent.supplier"]},{"name":"open override val supplier: EntitySupplier","description":"dev.kord.core.event.channel.TypingStartEvent.supplier","location":"core/dev.kord.core.event.channel/-typing-start-event/supplier.html","searchKeys":["supplier","open override val supplier: EntitySupplier","dev.kord.core.event.channel.TypingStartEvent.supplier"]},{"name":"open override val supplier: EntitySupplier","description":"dev.kord.core.event.channel.thread.ThreadListSyncEvent.supplier","location":"core/dev.kord.core.event.channel.thread/-thread-list-sync-event/supplier.html","searchKeys":["supplier","open override val supplier: EntitySupplier","dev.kord.core.event.channel.thread.ThreadListSyncEvent.supplier"]},{"name":"open override val supplier: EntitySupplier","description":"dev.kord.core.event.gateway.ReadyEvent.supplier","location":"core/dev.kord.core.event.gateway/-ready-event/supplier.html","searchKeys":["supplier","open override val supplier: EntitySupplier","dev.kord.core.event.gateway.ReadyEvent.supplier"]},{"name":"open override val supplier: EntitySupplier","description":"dev.kord.core.event.guild.BanAddEvent.supplier","location":"core/dev.kord.core.event.guild/-ban-add-event/supplier.html","searchKeys":["supplier","open override val supplier: EntitySupplier","dev.kord.core.event.guild.BanAddEvent.supplier"]},{"name":"open override val supplier: EntitySupplier","description":"dev.kord.core.event.guild.BanRemoveEvent.supplier","location":"core/dev.kord.core.event.guild/-ban-remove-event/supplier.html","searchKeys":["supplier","open override val supplier: EntitySupplier","dev.kord.core.event.guild.BanRemoveEvent.supplier"]},{"name":"open override val supplier: EntitySupplier","description":"dev.kord.core.event.guild.EmojisUpdateEvent.supplier","location":"core/dev.kord.core.event.guild/-emojis-update-event/supplier.html","searchKeys":["supplier","open override val supplier: EntitySupplier","dev.kord.core.event.guild.EmojisUpdateEvent.supplier"]},{"name":"open override val supplier: EntitySupplier","description":"dev.kord.core.event.guild.GuildScheduledEventCreateEvent.supplier","location":"core/dev.kord.core.event.guild/-guild-scheduled-event-create-event/supplier.html","searchKeys":["supplier","open override val supplier: EntitySupplier","dev.kord.core.event.guild.GuildScheduledEventCreateEvent.supplier"]},{"name":"open override val supplier: EntitySupplier","description":"dev.kord.core.event.guild.GuildScheduledEventDeleteEvent.supplier","location":"core/dev.kord.core.event.guild/-guild-scheduled-event-delete-event/supplier.html","searchKeys":["supplier","open override val supplier: EntitySupplier","dev.kord.core.event.guild.GuildScheduledEventDeleteEvent.supplier"]},{"name":"open override val supplier: EntitySupplier","description":"dev.kord.core.event.guild.GuildScheduledEventUpdateEvent.supplier","location":"core/dev.kord.core.event.guild/-guild-scheduled-event-update-event/supplier.html","searchKeys":["supplier","open override val supplier: EntitySupplier","dev.kord.core.event.guild.GuildScheduledEventUpdateEvent.supplier"]},{"name":"open override val supplier: EntitySupplier","description":"dev.kord.core.event.guild.GuildScheduledEventUserAddEvent.supplier","location":"core/dev.kord.core.event.guild/-guild-scheduled-event-user-add-event/supplier.html","searchKeys":["supplier","open override val supplier: EntitySupplier","dev.kord.core.event.guild.GuildScheduledEventUserAddEvent.supplier"]},{"name":"open override val supplier: EntitySupplier","description":"dev.kord.core.event.guild.GuildScheduledEventUserRemoveEvent.supplier","location":"core/dev.kord.core.event.guild/-guild-scheduled-event-user-remove-event/supplier.html","searchKeys":["supplier","open override val supplier: EntitySupplier","dev.kord.core.event.guild.GuildScheduledEventUserRemoveEvent.supplier"]},{"name":"open override val supplier: EntitySupplier","description":"dev.kord.core.event.guild.IntegrationsUpdateEvent.supplier","location":"core/dev.kord.core.event.guild/-integrations-update-event/supplier.html","searchKeys":["supplier","open override val supplier: EntitySupplier","dev.kord.core.event.guild.IntegrationsUpdateEvent.supplier"]},{"name":"open override val supplier: EntitySupplier","description":"dev.kord.core.event.guild.InviteCreateEvent.supplier","location":"core/dev.kord.core.event.guild/-invite-create-event/supplier.html","searchKeys":["supplier","open override val supplier: EntitySupplier","dev.kord.core.event.guild.InviteCreateEvent.supplier"]},{"name":"open override val supplier: EntitySupplier","description":"dev.kord.core.event.guild.InviteDeleteEvent.supplier","location":"core/dev.kord.core.event.guild/-invite-delete-event/supplier.html","searchKeys":["supplier","open override val supplier: EntitySupplier","dev.kord.core.event.guild.InviteDeleteEvent.supplier"]},{"name":"open override val supplier: EntitySupplier","description":"dev.kord.core.event.guild.MemberJoinEvent.supplier","location":"core/dev.kord.core.event.guild/-member-join-event/supplier.html","searchKeys":["supplier","open override val supplier: EntitySupplier","dev.kord.core.event.guild.MemberJoinEvent.supplier"]},{"name":"open override val supplier: EntitySupplier","description":"dev.kord.core.event.guild.MemberUpdateEvent.supplier","location":"core/dev.kord.core.event.guild/-member-update-event/supplier.html","searchKeys":["supplier","open override val supplier: EntitySupplier","dev.kord.core.event.guild.MemberUpdateEvent.supplier"]},{"name":"open override val supplier: EntitySupplier","description":"dev.kord.core.event.guild.MembersChunkEvent.supplier","location":"core/dev.kord.core.event.guild/-members-chunk-event/supplier.html","searchKeys":["supplier","open override val supplier: EntitySupplier","dev.kord.core.event.guild.MembersChunkEvent.supplier"]},{"name":"open override val supplier: EntitySupplier","description":"dev.kord.core.event.guild.VoiceServerUpdateEvent.supplier","location":"core/dev.kord.core.event.guild/-voice-server-update-event/supplier.html","searchKeys":["supplier","open override val supplier: EntitySupplier","dev.kord.core.event.guild.VoiceServerUpdateEvent.supplier"]},{"name":"open override val supplier: EntitySupplier","description":"dev.kord.core.event.guild.WebhookUpdateEvent.supplier","location":"core/dev.kord.core.event.guild/-webhook-update-event/supplier.html","searchKeys":["supplier","open override val supplier: EntitySupplier","dev.kord.core.event.guild.WebhookUpdateEvent.supplier"]},{"name":"open override val supplier: EntitySupplier","description":"dev.kord.core.event.message.MessageBulkDeleteEvent.supplier","location":"core/dev.kord.core.event.message/-message-bulk-delete-event/supplier.html","searchKeys":["supplier","open override val supplier: EntitySupplier","dev.kord.core.event.message.MessageBulkDeleteEvent.supplier"]},{"name":"open override val supplier: EntitySupplier","description":"dev.kord.core.event.message.MessageCreateEvent.supplier","location":"core/dev.kord.core.event.message/-message-create-event/supplier.html","searchKeys":["supplier","open override val supplier: EntitySupplier","dev.kord.core.event.message.MessageCreateEvent.supplier"]},{"name":"open override val supplier: EntitySupplier","description":"dev.kord.core.event.message.MessageDeleteEvent.supplier","location":"core/dev.kord.core.event.message/-message-delete-event/supplier.html","searchKeys":["supplier","open override val supplier: EntitySupplier","dev.kord.core.event.message.MessageDeleteEvent.supplier"]},{"name":"open override val supplier: EntitySupplier","description":"dev.kord.core.event.message.MessageUpdateEvent.supplier","location":"core/dev.kord.core.event.message/-message-update-event/supplier.html","searchKeys":["supplier","open override val supplier: EntitySupplier","dev.kord.core.event.message.MessageUpdateEvent.supplier"]},{"name":"open override val supplier: EntitySupplier","description":"dev.kord.core.event.message.ReactionAddEvent.supplier","location":"core/dev.kord.core.event.message/-reaction-add-event/supplier.html","searchKeys":["supplier","open override val supplier: EntitySupplier","dev.kord.core.event.message.ReactionAddEvent.supplier"]},{"name":"open override val supplier: EntitySupplier","description":"dev.kord.core.event.message.ReactionRemoveAllEvent.supplier","location":"core/dev.kord.core.event.message/-reaction-remove-all-event/supplier.html","searchKeys":["supplier","open override val supplier: EntitySupplier","dev.kord.core.event.message.ReactionRemoveAllEvent.supplier"]},{"name":"open override val supplier: EntitySupplier","description":"dev.kord.core.event.message.ReactionRemoveEmojiEvent.supplier","location":"core/dev.kord.core.event.message/-reaction-remove-emoji-event/supplier.html","searchKeys":["supplier","open override val supplier: EntitySupplier","dev.kord.core.event.message.ReactionRemoveEmojiEvent.supplier"]},{"name":"open override val supplier: EntitySupplier","description":"dev.kord.core.event.message.ReactionRemoveEvent.supplier","location":"core/dev.kord.core.event.message/-reaction-remove-event/supplier.html","searchKeys":["supplier","open override val supplier: EntitySupplier","dev.kord.core.event.message.ReactionRemoveEvent.supplier"]},{"name":"open override val supplier: EntitySupplier","description":"dev.kord.core.event.role.RoleCreateEvent.supplier","location":"core/dev.kord.core.event.role/-role-create-event/supplier.html","searchKeys":["supplier","open override val supplier: EntitySupplier","dev.kord.core.event.role.RoleCreateEvent.supplier"]},{"name":"open override val supplier: EntitySupplier","description":"dev.kord.core.event.role.RoleDeleteEvent.supplier","location":"core/dev.kord.core.event.role/-role-delete-event/supplier.html","searchKeys":["supplier","open override val supplier: EntitySupplier","dev.kord.core.event.role.RoleDeleteEvent.supplier"]},{"name":"open override val supplier: EntitySupplier","description":"dev.kord.core.event.role.RoleUpdateEvent.supplier","location":"core/dev.kord.core.event.role/-role-update-event/supplier.html","searchKeys":["supplier","open override val supplier: EntitySupplier","dev.kord.core.event.role.RoleUpdateEvent.supplier"]},{"name":"open override val supplier: EntitySupplier","description":"dev.kord.core.event.user.PresenceUpdateEvent.supplier","location":"core/dev.kord.core.event.user/-presence-update-event/supplier.html","searchKeys":["supplier","open override val supplier: EntitySupplier","dev.kord.core.event.user.PresenceUpdateEvent.supplier"]},{"name":"open override val tags: Optional<List<String>>","description":"dev.kord.core.cache.data.ApplicationData.tags","location":"core/dev.kord.core.cache.data/-application-data/tags.html","searchKeys":["tags","open override val tags: Optional<List<String>>","dev.kord.core.cache.data.ApplicationData.tags"]},{"name":"open override val tags: Optional<List<String>>","description":"dev.kord.core.cache.data.PartialApplicationData.tags","location":"core/dev.kord.core.cache.data/-partial-application-data/tags.html","searchKeys":["tags","open override val tags: Optional<List<String>>","dev.kord.core.cache.data.PartialApplicationData.tags"]},{"name":"open override val targetApplication: Optional<PartialApplicationData>","description":"dev.kord.core.cache.data.InviteData.targetApplication","location":"core/dev.kord.core.cache.data/-invite-data/target-application.html","searchKeys":["targetApplication","open override val targetApplication: Optional<PartialApplicationData>","dev.kord.core.cache.data.InviteData.targetApplication"]},{"name":"open override val targetApplication: Optional<PartialApplicationData>","description":"dev.kord.core.cache.data.InviteWithMetadataData.targetApplication","location":"core/dev.kord.core.cache.data/-invite-with-metadata-data/target-application.html","searchKeys":["targetApplication","open override val targetApplication: Optional<PartialApplicationData>","dev.kord.core.cache.data.InviteWithMetadataData.targetApplication"]},{"name":"open override val targetType: Optional<InviteTargetType>","description":"dev.kord.core.cache.data.InviteData.targetType","location":"core/dev.kord.core.cache.data/-invite-data/target-type.html","searchKeys":["targetType","open override val targetType: Optional<InviteTargetType>","dev.kord.core.cache.data.InviteData.targetType"]},{"name":"open override val targetType: Optional<InviteTargetType>","description":"dev.kord.core.cache.data.InviteWithMetadataData.targetType","location":"core/dev.kord.core.cache.data/-invite-with-metadata-data/target-type.html","searchKeys":["targetType","open override val targetType: Optional<InviteTargetType>","dev.kord.core.cache.data.InviteWithMetadataData.targetType"]},{"name":"open override val targetUserId: OptionalSnowflake","description":"dev.kord.core.cache.data.InviteData.targetUserId","location":"core/dev.kord.core.cache.data/-invite-data/target-user-id.html","searchKeys":["targetUserId","open override val targetUserId: OptionalSnowflake","dev.kord.core.cache.data.InviteData.targetUserId"]},{"name":"open override val targetUserId: OptionalSnowflake","description":"dev.kord.core.cache.data.InviteWithMetadataData.targetUserId","location":"core/dev.kord.core.cache.data/-invite-with-metadata-data/target-user-id.html","searchKeys":["targetUserId","open override val targetUserId: OptionalSnowflake","dev.kord.core.cache.data.InviteWithMetadataData.targetUserId"]},{"name":"open override val termsOfServiceUrl: Optional<String>","description":"dev.kord.core.cache.data.ApplicationData.termsOfServiceUrl","location":"core/dev.kord.core.cache.data/-application-data/terms-of-service-url.html","searchKeys":["termsOfServiceUrl","open override val termsOfServiceUrl: Optional<String>","dev.kord.core.cache.data.ApplicationData.termsOfServiceUrl"]},{"name":"open override val termsOfServiceUrl: Optional<String>","description":"dev.kord.core.cache.data.PartialApplicationData.termsOfServiceUrl","location":"core/dev.kord.core.cache.data/-partial-application-data/terms-of-service-url.html","searchKeys":["termsOfServiceUrl","open override val termsOfServiceUrl: Optional<String>","dev.kord.core.cache.data.PartialApplicationData.termsOfServiceUrl"]},{"name":"open override val threadId: Snowflake","description":"dev.kord.core.entity.channel.thread.ThreadMember.threadId","location":"core/dev.kord.core.entity.channel.thread/-thread-member/thread-id.html","searchKeys":["threadId","open override val threadId: Snowflake","dev.kord.core.entity.channel.thread.ThreadMember.threadId"]},{"name":"open override val token: String","description":"dev.kord.core.entity.interaction.Interaction.token","location":"core/dev.kord.core.entity.interaction/-interaction/token.html","searchKeys":["token","open override val token: String","dev.kord.core.entity.interaction.Interaction.token"]},{"name":"open override val token: String","description":"dev.kord.core.entity.interaction.followup.EphemeralFollowupMessage.token","location":"core/dev.kord.core.entity.interaction.followup/-ephemeral-followup-message/token.html","searchKeys":["token","open override val token: String","dev.kord.core.entity.interaction.followup.EphemeralFollowupMessage.token"]},{"name":"open override val token: String","description":"dev.kord.core.entity.interaction.followup.PublicFollowupMessage.token","location":"core/dev.kord.core.entity.interaction.followup/-public-followup-message/token.html","searchKeys":["token","open override val token: String","dev.kord.core.entity.interaction.followup.PublicFollowupMessage.token"]},{"name":"open override val token: String","description":"dev.kord.core.entity.interaction.response.EphemeralMessageInteractionResponse.token","location":"core/dev.kord.core.entity.interaction.response/-ephemeral-message-interaction-response/token.html","searchKeys":["token","open override val token: String","dev.kord.core.entity.interaction.response.EphemeralMessageInteractionResponse.token"]},{"name":"open override val token: String","description":"dev.kord.core.entity.interaction.response.PublicMessageInteractionResponse.token","location":"core/dev.kord.core.entity.interaction.response/-public-message-interaction-response/token.html","searchKeys":["token","open override val token: String","dev.kord.core.entity.interaction.response.PublicMessageInteractionResponse.token"]},{"name":"open override val triggerType: AutoModerationRuleTriggerType.Keyword","description":"dev.kord.core.behavior.automoderation.KeywordAutoModerationRuleBehavior.triggerType","location":"core/dev.kord.core.behavior.automoderation/-keyword-auto-moderation-rule-behavior/trigger-type.html","searchKeys":["triggerType","open override val triggerType: AutoModerationRuleTriggerType.Keyword","dev.kord.core.behavior.automoderation.KeywordAutoModerationRuleBehavior.triggerType"]},{"name":"open override val triggerType: AutoModerationRuleTriggerType.KeywordPreset","description":"dev.kord.core.behavior.automoderation.KeywordPresetAutoModerationRuleBehavior.triggerType","location":"core/dev.kord.core.behavior.automoderation/-keyword-preset-auto-moderation-rule-behavior/trigger-type.html","searchKeys":["triggerType","open override val triggerType: AutoModerationRuleTriggerType.KeywordPreset","dev.kord.core.behavior.automoderation.KeywordPresetAutoModerationRuleBehavior.triggerType"]},{"name":"open override val triggerType: AutoModerationRuleTriggerType.MentionSpam","description":"dev.kord.core.behavior.automoderation.MentionSpamAutoModerationRuleBehavior.triggerType","location":"core/dev.kord.core.behavior.automoderation/-mention-spam-auto-moderation-rule-behavior/trigger-type.html","searchKeys":["triggerType","open override val triggerType: AutoModerationRuleTriggerType.MentionSpam","dev.kord.core.behavior.automoderation.MentionSpamAutoModerationRuleBehavior.triggerType"]},{"name":"open override val triggerType: AutoModerationRuleTriggerType.Spam","description":"dev.kord.core.behavior.automoderation.SpamAutoModerationRuleBehavior.triggerType","location":"core/dev.kord.core.behavior.automoderation/-spam-auto-moderation-rule-behavior/trigger-type.html","searchKeys":["triggerType","open override val triggerType: AutoModerationRuleTriggerType.Spam","dev.kord.core.behavior.automoderation.SpamAutoModerationRuleBehavior.triggerType"]},{"name":"open override val triggerType: AutoModerationRuleTriggerType.Unknown","description":"dev.kord.core.entity.automoderation.UnknownAutoModerationRule.triggerType","location":"core/dev.kord.core.entity.automoderation/-unknown-auto-moderation-rule/trigger-type.html","searchKeys":["triggerType","open override val triggerType: AutoModerationRuleTriggerType.Unknown","dev.kord.core.entity.automoderation.UnknownAutoModerationRule.triggerType"]},{"name":"open override val type: AutoModerationActionType.BlockMessage","description":"dev.kord.core.entity.automoderation.BlockMessageAutoModerationAction.type","location":"core/dev.kord.core.entity.automoderation/-block-message-auto-moderation-action/type.html","searchKeys":["type","open override val type: AutoModerationActionType.BlockMessage","dev.kord.core.entity.automoderation.BlockMessageAutoModerationAction.type"]},{"name":"open override val type: AutoModerationActionType.SendAlertMessage","description":"dev.kord.core.entity.automoderation.SendAlertMessageAutoModerationAction.type","location":"core/dev.kord.core.entity.automoderation/-send-alert-message-auto-moderation-action/type.html","searchKeys":["type","open override val type: AutoModerationActionType.SendAlertMessage","dev.kord.core.entity.automoderation.SendAlertMessageAutoModerationAction.type"]},{"name":"open override val type: AutoModerationActionType.Timeout","description":"dev.kord.core.entity.automoderation.TimeoutAutoModerationAction.type","location":"core/dev.kord.core.entity.automoderation/-timeout-auto-moderation-action/type.html","searchKeys":["type","open override val type: AutoModerationActionType.Timeout","dev.kord.core.entity.automoderation.TimeoutAutoModerationAction.type"]},{"name":"open override val type: AutoModerationActionType.Unknown","description":"dev.kord.core.entity.automoderation.UnknownAutoModerationAction.type","location":"core/dev.kord.core.entity.automoderation/-unknown-auto-moderation-action/type.html","searchKeys":["type","open override val type: AutoModerationActionType.Unknown","dev.kord.core.entity.automoderation.UnknownAutoModerationAction.type"]},{"name":"open override val type: ComponentType","description":"dev.kord.core.cache.data.ChatComponentData.type","location":"core/dev.kord.core.cache.data/-chat-component-data/type.html","searchKeys":["type","open override val type: ComponentType","dev.kord.core.cache.data.ChatComponentData.type"]},{"name":"open override val type: ComponentType","description":"dev.kord.core.cache.data.TextInputComponentData.type","location":"core/dev.kord.core.cache.data/-text-input-component-data/type.html","searchKeys":["type","open override val type: ComponentType","dev.kord.core.cache.data.TextInputComponentData.type"]},{"name":"open override val type: ComponentType.ActionRow","description":"dev.kord.core.entity.component.ActionRowComponent.type","location":"core/dev.kord.core.entity.component/-action-row-component/type.html","searchKeys":["type","open override val type: ComponentType.ActionRow","dev.kord.core.entity.component.ActionRowComponent.type"]},{"name":"open override val type: ComponentType.Button","description":"dev.kord.core.entity.component.ButtonComponent.type","location":"core/dev.kord.core.entity.component/-button-component/type.html","searchKeys":["type","open override val type: ComponentType.Button","dev.kord.core.entity.component.ButtonComponent.type"]},{"name":"open override val type: ComponentType.SelectMenu","description":"dev.kord.core.entity.component.SelectMenuComponent.type","location":"core/dev.kord.core.entity.component/-select-menu-component/type.html","searchKeys":["type","open override val type: ComponentType.SelectMenu","dev.kord.core.entity.component.SelectMenuComponent.type"]},{"name":"open override val type: ComponentType.TextInput","description":"dev.kord.core.entity.component.TextInputComponent.type","location":"core/dev.kord.core.entity.component/-text-input-component/type.html","searchKeys":["type","open override val type: ComponentType.TextInput","dev.kord.core.entity.component.TextInputComponent.type"]},{"name":"open override val url: Optional<String>","description":"dev.kord.core.cache.data.ChatComponentData.url","location":"core/dev.kord.core.cache.data/-chat-component-data/url.html","searchKeys":["url","open override val url: Optional<String>","dev.kord.core.cache.data.ChatComponentData.url"]},{"name":"open override val url: Optional<String>","description":"dev.kord.core.cache.data.TextInputComponentData.url","location":"core/dev.kord.core.cache.data/-text-input-component-data/url.html","searchKeys":["url","open override val url: Optional<String>","dev.kord.core.cache.data.TextInputComponentData.url"]},{"name":"open override val urlFormat: String","description":"dev.kord.core.entity.ReactionEmoji.Custom.urlFormat","location":"core/dev.kord.core.entity/-reaction-emoji/-custom/url-format.html","searchKeys":["urlFormat","open override val urlFormat: String","dev.kord.core.entity.ReactionEmoji.Custom.urlFormat"]},{"name":"open override val urlFormat: String","description":"dev.kord.core.entity.ReactionEmoji.Unicode.urlFormat","location":"core/dev.kord.core.entity/-reaction-emoji/-unicode/url-format.html","searchKeys":["urlFormat","open override val urlFormat: String","dev.kord.core.entity.ReactionEmoji.Unicode.urlFormat"]},{"name":"open override val user: Member","description":"dev.kord.core.entity.interaction.GuildInteraction.user","location":"core/dev.kord.core.entity.interaction/-guild-interaction/user.html","searchKeys":["user","open override val user: Member","dev.kord.core.entity.interaction.GuildInteraction.user"]},{"name":"open override val user: User","description":"dev.kord.core.entity.interaction.GlobalInteraction.user","location":"core/dev.kord.core.entity.interaction/-global-interaction/user.html","searchKeys":["user","open override val user: User","dev.kord.core.entity.interaction.GlobalInteraction.user"]},{"name":"open override val userId: Snowflake","description":"dev.kord.core.event.guild.GuildScheduledEventUserAddEvent.userId","location":"core/dev.kord.core.event.guild/-guild-scheduled-event-user-add-event/user-id.html","searchKeys":["userId","open override val userId: Snowflake","dev.kord.core.event.guild.GuildScheduledEventUserAddEvent.userId"]},{"name":"open override val userId: Snowflake","description":"dev.kord.core.event.guild.GuildScheduledEventUserRemoveEvent.userId","location":"core/dev.kord.core.event.guild/-guild-scheduled-event-user-remove-event/user-id.html","searchKeys":["userId","open override val userId: Snowflake","dev.kord.core.event.guild.GuildScheduledEventUserRemoveEvent.userId"]},{"name":"open override val value: Boolean","description":"dev.kord.core.entity.interaction.BooleanOptionValue.value","location":"core/dev.kord.core.entity.interaction/-boolean-option-value/value.html","searchKeys":["value","open override val value: Boolean","dev.kord.core.entity.interaction.BooleanOptionValue.value"]},{"name":"open override val value: Double","description":"dev.kord.core.entity.interaction.NumberOptionValue.value","location":"core/dev.kord.core.entity.interaction/-number-option-value/value.html","searchKeys":["value","open override val value: Double","dev.kord.core.entity.interaction.NumberOptionValue.value"]},{"name":"open override val value: Long","description":"dev.kord.core.entity.interaction.IntegerOptionValue.value","location":"core/dev.kord.core.entity.interaction/-integer-option-value/value.html","searchKeys":["value","open override val value: Long","dev.kord.core.entity.interaction.IntegerOptionValue.value"]},{"name":"open override val value: Optional<String>","description":"dev.kord.core.cache.data.ChatComponentData.value","location":"core/dev.kord.core.cache.data/-chat-component-data/value.html","searchKeys":["value","open override val value: Optional<String>","dev.kord.core.cache.data.ChatComponentData.value"]},{"name":"open override val value: Optional<String>","description":"dev.kord.core.cache.data.TextInputComponentData.value","location":"core/dev.kord.core.cache.data/-text-input-component-data/value.html","searchKeys":["value","open override val value: Optional<String>","dev.kord.core.cache.data.TextInputComponentData.value"]},{"name":"open override val value: Snowflake","description":"dev.kord.core.entity.interaction.AttachmentOptionValue.value","location":"core/dev.kord.core.entity.interaction/-attachment-option-value/value.html","searchKeys":["value","open override val value: Snowflake","dev.kord.core.entity.interaction.AttachmentOptionValue.value"]},{"name":"open override val value: Snowflake","description":"dev.kord.core.entity.interaction.ChannelOptionValue.value","location":"core/dev.kord.core.entity.interaction/-channel-option-value/value.html","searchKeys":["value","open override val value: Snowflake","dev.kord.core.entity.interaction.ChannelOptionValue.value"]},{"name":"open override val value: Snowflake","description":"dev.kord.core.entity.interaction.MentionableOptionValue.value","location":"core/dev.kord.core.entity.interaction/-mentionable-option-value/value.html","searchKeys":["value","open override val value: Snowflake","dev.kord.core.entity.interaction.MentionableOptionValue.value"]},{"name":"open override val value: Snowflake","description":"dev.kord.core.entity.interaction.RoleOptionValue.value","location":"core/dev.kord.core.entity.interaction/-role-option-value/value.html","searchKeys":["value","open override val value: Snowflake","dev.kord.core.entity.interaction.RoleOptionValue.value"]},{"name":"open override val value: Snowflake","description":"dev.kord.core.entity.interaction.UserOptionValue.value","location":"core/dev.kord.core.entity.interaction/-user-option-value/value.html","searchKeys":["value","open override val value: Snowflake","dev.kord.core.entity.interaction.UserOptionValue.value"]},{"name":"open override val value: String","description":"dev.kord.core.entity.interaction.StringOptionValue.value","location":"core/dev.kord.core.entity.interaction/-string-option-value/value.html","searchKeys":["value","open override val value: String","dev.kord.core.entity.interaction.StringOptionValue.value"]},{"name":"open override val verifyKey: String","description":"dev.kord.core.cache.data.ApplicationData.verifyKey","location":"core/dev.kord.core.cache.data/-application-data/verify-key.html","searchKeys":["verifyKey","open override val verifyKey: String","dev.kord.core.cache.data.ApplicationData.verifyKey"]},{"name":"open override val verifyKey: String","description":"dev.kord.core.cache.data.PartialApplicationData.verifyKey","location":"core/dev.kord.core.cache.data/-partial-application-data/verify-key.html","searchKeys":["verifyKey","open override val verifyKey: String","dev.kord.core.cache.data.PartialApplicationData.verifyKey"]},{"name":"open override var applicationId: Snowflake","description":"dev.kord.core.builder.kord.KordProxyBuilder.applicationId","location":"core/dev.kord.core.builder.kord/-kord-proxy-builder/application-id.html","searchKeys":["applicationId","open override var applicationId: Snowflake","dev.kord.core.builder.kord.KordProxyBuilder.applicationId"]},{"name":"open override var applicationId: Snowflake","description":"dev.kord.core.builder.kord.KordRestOnlyBuilder.applicationId","location":"core/dev.kord.core.builder.kord/-kord-rest-only-builder/application-id.html","searchKeys":["applicationId","open override var applicationId: Snowflake","dev.kord.core.builder.kord.KordRestOnlyBuilder.applicationId"]},{"name":"open override var channel: Category","description":"dev.kord.core.live.channel.LiveCategory.channel","location":"core/dev.kord.core.live.channel/-live-category/channel.html","searchKeys":["channel","open override var channel: Category","dev.kord.core.live.channel.LiveCategory.channel"]},{"name":"open override var channel: DmChannel","description":"dev.kord.core.live.channel.LiveDmChannel.channel","location":"core/dev.kord.core.live.channel/-live-dm-channel/channel.html","searchKeys":["channel","open override var channel: DmChannel","dev.kord.core.live.channel.LiveDmChannel.channel"]},{"name":"open override var channel: TopGuildChannel","description":"dev.kord.core.live.channel.LiveGuildChannel.channel","location":"core/dev.kord.core.live.channel/-live-guild-channel/channel.html","searchKeys":["channel","open override var channel: TopGuildChannel","dev.kord.core.live.channel.LiveGuildChannel.channel"]},{"name":"open override var channel: TopGuildMessageChannel","description":"dev.kord.core.live.channel.LiveGuildMessageChannel.channel","location":"core/dev.kord.core.live.channel/-live-guild-message-channel/channel.html","searchKeys":["channel","open override var channel: TopGuildMessageChannel","dev.kord.core.live.channel.LiveGuildMessageChannel.channel"]},{"name":"open override var channel: VoiceChannel","description":"dev.kord.core.live.channel.LiveVoiceChannel.channel","location":"core/dev.kord.core.live.channel/-live-voice-channel/channel.html","searchKeys":["channel","open override var channel: VoiceChannel","dev.kord.core.live.channel.LiveVoiceChannel.channel"]},{"name":"open override var token: String","description":"dev.kord.core.builder.kord.KordRestOnlyBuilder.token","location":"core/dev.kord.core.builder.kord/-kord-rest-only-builder/token.html","searchKeys":["token","open override var token: String","dev.kord.core.builder.kord.KordRestOnlyBuilder.token"]},{"name":"open suspend fun addOverwrite(overwrite: PermissionOverwrite, reason: String? = null)","description":"dev.kord.core.behavior.channel.TopGuildChannelBehavior.addOverwrite","location":"core/dev.kord.core.behavior.channel/-top-guild-channel-behavior/add-overwrite.html","searchKeys":["addOverwrite","open suspend fun addOverwrite(overwrite: PermissionOverwrite, reason: String? = null)","dev.kord.core.behavior.channel.TopGuildChannelBehavior.addOverwrite"]},{"name":"open suspend fun addReaction(emoji: GuildEmoji)","description":"dev.kord.core.behavior.MessageBehavior.addReaction","location":"core/dev.kord.core.behavior/-message-behavior/add-reaction.html","searchKeys":["addReaction","open suspend fun addReaction(emoji: GuildEmoji)","dev.kord.core.behavior.MessageBehavior.addReaction"]},{"name":"open suspend fun addReaction(emoji: ReactionEmoji)","description":"dev.kord.core.behavior.MessageBehavior.addReaction","location":"core/dev.kord.core.behavior/-message-behavior/add-reaction.html","searchKeys":["addReaction","open suspend fun addReaction(emoji: ReactionEmoji)","dev.kord.core.behavior.MessageBehavior.addReaction"]},{"name":"open suspend fun addRole(roleId: Snowflake, reason: String? = null)","description":"dev.kord.core.behavior.MemberBehavior.addRole","location":"core/dev.kord.core.behavior/-member-behavior/add-role.html","searchKeys":["addRole","open suspend fun addRole(roleId: Snowflake, reason: String? = null)","dev.kord.core.behavior.MemberBehavior.addRole"]},{"name":"open suspend fun addUser(userId: Snowflake)","description":"dev.kord.core.behavior.channel.threads.ThreadChannelBehavior.addUser","location":"core/dev.kord.core.behavior.channel.threads/-thread-channel-behavior/add-user.html","searchKeys":["addUser","open suspend fun addUser(userId: Snowflake)","dev.kord.core.behavior.channel.threads.ThreadChannelBehavior.addUser"]},{"name":"open suspend fun asAutoModerationRule(): AutoModerationRule","description":"dev.kord.core.behavior.automoderation.AutoModerationRuleBehavior.asAutoModerationRule","location":"core/dev.kord.core.behavior.automoderation/-auto-moderation-rule-behavior/as-auto-moderation-rule.html","searchKeys":["asAutoModerationRule","open suspend fun asAutoModerationRule(): AutoModerationRule","dev.kord.core.behavior.automoderation.AutoModerationRuleBehavior.asAutoModerationRule"]},{"name":"open suspend fun asAutoModerationRuleOrNull(): AutoModerationRule?","description":"dev.kord.core.behavior.automoderation.AutoModerationRuleBehavior.asAutoModerationRuleOrNull","location":"core/dev.kord.core.behavior.automoderation/-auto-moderation-rule-behavior/as-auto-moderation-rule-or-null.html","searchKeys":["asAutoModerationRuleOrNull","open suspend fun asAutoModerationRuleOrNull(): AutoModerationRule?","dev.kord.core.behavior.automoderation.AutoModerationRuleBehavior.asAutoModerationRuleOrNull"]},{"name":"open suspend fun asChannel(): Channel","description":"dev.kord.core.behavior.channel.ChannelBehavior.asChannel","location":"core/dev.kord.core.behavior.channel/-channel-behavior/as-channel.html","searchKeys":["asChannel","open suspend fun asChannel(): Channel","dev.kord.core.behavior.channel.ChannelBehavior.asChannel"]},{"name":"open suspend fun asChannelOrNull(): Channel?","description":"dev.kord.core.behavior.channel.ChannelBehavior.asChannelOrNull","location":"core/dev.kord.core.behavior.channel/-channel-behavior/as-channel-or-null.html","searchKeys":["asChannelOrNull","open suspend fun asChannelOrNull(): Channel?","dev.kord.core.behavior.channel.ChannelBehavior.asChannelOrNull"]},{"name":"open suspend fun asGuild(): Guild","description":"dev.kord.core.behavior.GuildBehavior.asGuild","location":"core/dev.kord.core.behavior/-guild-behavior/as-guild.html","searchKeys":["asGuild","open suspend fun asGuild(): Guild","dev.kord.core.behavior.GuildBehavior.asGuild"]},{"name":"open suspend fun asGuildOrNull(): Guild?","description":"dev.kord.core.behavior.GuildBehavior.asGuildOrNull","location":"core/dev.kord.core.behavior/-guild-behavior/as-guild-or-null.html","searchKeys":["asGuildOrNull","open suspend fun asGuildOrNull(): Guild?","dev.kord.core.behavior.GuildBehavior.asGuildOrNull"]},{"name":"open suspend fun asGuildScheduledEvent(): GuildScheduledEvent","description":"dev.kord.core.behavior.GuildScheduledEventBehavior.asGuildScheduledEvent","location":"core/dev.kord.core.behavior/-guild-scheduled-event-behavior/as-guild-scheduled-event.html","searchKeys":["asGuildScheduledEvent","open suspend fun asGuildScheduledEvent(): GuildScheduledEvent","dev.kord.core.behavior.GuildScheduledEventBehavior.asGuildScheduledEvent"]},{"name":"open suspend fun asGuildScheduledEventOrNull(): GuildScheduledEvent?","description":"dev.kord.core.behavior.GuildScheduledEventBehavior.asGuildScheduledEventOrNull","location":"core/dev.kord.core.behavior/-guild-scheduled-event-behavior/as-guild-scheduled-event-or-null.html","searchKeys":["asGuildScheduledEventOrNull","open suspend fun asGuildScheduledEventOrNull(): GuildScheduledEvent?","dev.kord.core.behavior.GuildScheduledEventBehavior.asGuildScheduledEventOrNull"]},{"name":"open suspend fun asMember(): Member","description":"dev.kord.core.behavior.MemberBehavior.asMember","location":"core/dev.kord.core.behavior/-member-behavior/as-member.html","searchKeys":["asMember","open suspend fun asMember(): Member","dev.kord.core.behavior.MemberBehavior.asMember"]},{"name":"open suspend fun asMember(guildId: Snowflake): Member","description":"dev.kord.core.behavior.UserBehavior.asMember","location":"core/dev.kord.core.behavior/-user-behavior/as-member.html","searchKeys":["asMember","open suspend fun asMember(guildId: Snowflake): Member","dev.kord.core.behavior.UserBehavior.asMember"]},{"name":"open suspend fun asMemberOrNull(): Member?","description":"dev.kord.core.behavior.MemberBehavior.asMemberOrNull","location":"core/dev.kord.core.behavior/-member-behavior/as-member-or-null.html","searchKeys":["asMemberOrNull","open suspend fun asMemberOrNull(): Member?","dev.kord.core.behavior.MemberBehavior.asMemberOrNull"]},{"name":"open suspend fun asMemberOrNull(guildId: Snowflake): Member?","description":"dev.kord.core.behavior.UserBehavior.asMemberOrNull","location":"core/dev.kord.core.behavior/-user-behavior/as-member-or-null.html","searchKeys":["asMemberOrNull","open suspend fun asMemberOrNull(guildId: Snowflake): Member?","dev.kord.core.behavior.UserBehavior.asMemberOrNull"]},{"name":"open suspend fun asMessage(): Message","description":"dev.kord.core.behavior.MessageBehavior.asMessage","location":"core/dev.kord.core.behavior/-message-behavior/as-message.html","searchKeys":["asMessage","open suspend fun asMessage(): Message","dev.kord.core.behavior.MessageBehavior.asMessage"]},{"name":"open suspend fun asMessageOrNull(): Message?","description":"dev.kord.core.behavior.MessageBehavior.asMessageOrNull","location":"core/dev.kord.core.behavior/-message-behavior/as-message-or-null.html","searchKeys":["asMessageOrNull","open suspend fun asMessageOrNull(): Message?","dev.kord.core.behavior.MessageBehavior.asMessageOrNull"]},{"name":"open suspend fun asRole(): Role","description":"dev.kord.core.behavior.RoleBehavior.asRole","location":"core/dev.kord.core.behavior/-role-behavior/as-role.html","searchKeys":["asRole","open suspend fun asRole(): Role","dev.kord.core.behavior.RoleBehavior.asRole"]},{"name":"open suspend fun asRoleOrNull(): Role?","description":"dev.kord.core.behavior.RoleBehavior.asRoleOrNull","location":"core/dev.kord.core.behavior/-role-behavior/as-role-or-null.html","searchKeys":["asRoleOrNull","open suspend fun asRoleOrNull(): Role?","dev.kord.core.behavior.RoleBehavior.asRoleOrNull"]},{"name":"open suspend fun asStageInstance(): StageInstance","description":"dev.kord.core.behavior.StageInstanceBehavior.asStageInstance","location":"core/dev.kord.core.behavior/-stage-instance-behavior/as-stage-instance.html","searchKeys":["asStageInstance","open suspend fun asStageInstance(): StageInstance","dev.kord.core.behavior.StageInstanceBehavior.asStageInstance"]},{"name":"open suspend fun asStageInstanceOrNull(): StageInstance?","description":"dev.kord.core.behavior.StageInstanceBehavior.asStageInstanceOrNull","location":"core/dev.kord.core.behavior/-stage-instance-behavior/as-stage-instance-or-null.html","searchKeys":["asStageInstanceOrNull","open suspend fun asStageInstanceOrNull(): StageInstance?","dev.kord.core.behavior.StageInstanceBehavior.asStageInstanceOrNull"]},{"name":"open suspend fun asSticker(): Sticker","description":"dev.kord.core.behavior.StickerBehavior.asSticker","location":"core/dev.kord.core.behavior/-sticker-behavior/as-sticker.html","searchKeys":["asSticker","open suspend fun asSticker(): Sticker","dev.kord.core.behavior.StickerBehavior.asSticker"]},{"name":"open suspend fun asStickerOrNull(): Sticker?","description":"dev.kord.core.behavior.StickerBehavior.asStickerOrNull","location":"core/dev.kord.core.behavior/-sticker-behavior/as-sticker-or-null.html","searchKeys":["asStickerOrNull","open suspend fun asStickerOrNull(): Sticker?","dev.kord.core.behavior.StickerBehavior.asStickerOrNull"]},{"name":"open suspend fun asUser(): User","description":"dev.kord.core.behavior.UserBehavior.asUser","location":"core/dev.kord.core.behavior/-user-behavior/as-user.html","searchKeys":["asUser","open suspend fun asUser(): User","dev.kord.core.behavior.UserBehavior.asUser"]},{"name":"open suspend fun asUserOrNull(): User?","description":"dev.kord.core.behavior.UserBehavior.asUserOrNull","location":"core/dev.kord.core.behavior/-user-behavior/as-user-or-null.html","searchKeys":["asUserOrNull","open suspend fun asUserOrNull(): User?","dev.kord.core.behavior.UserBehavior.asUserOrNull"]},{"name":"open suspend fun bulkDelete(messages: Iterable<Snowflake>, deleteOlderMessages: Boolean = true, reason: String? = null)","description":"dev.kord.core.behavior.channel.GuildMessageChannelBehavior.bulkDelete","location":"core/dev.kord.core.behavior.channel/-guild-message-channel-behavior/bulk-delete.html","searchKeys":["bulkDelete","open suspend fun bulkDelete(messages: Iterable<Snowflake>, deleteOlderMessages: Boolean = true, reason: String? = null)","dev.kord.core.behavior.channel.GuildMessageChannelBehavior.bulkDelete"]},{"name":"open suspend fun changePosition(position: Int): Flow<Role>","description":"dev.kord.core.behavior.RoleBehavior.changePosition","location":"core/dev.kord.core.behavior/-role-behavior/change-position.html","searchKeys":["changePosition","open suspend fun changePosition(position: Int): Flow<Role>","dev.kord.core.behavior.RoleBehavior.changePosition"]},{"name":"open suspend fun createMessage(content: String): Message","description":"dev.kord.core.behavior.channel.MessageChannelBehavior.createMessage","location":"core/dev.kord.core.behavior.channel/-message-channel-behavior/create-message.html","searchKeys":["createMessage","open suspend fun createMessage(content: String): Message","dev.kord.core.behavior.channel.MessageChannelBehavior.createMessage"]},{"name":"open suspend fun createSticker(name: String, description: String, tags: String, file: NamedFile): GuildSticker","description":"dev.kord.core.behavior.GuildBehavior.createSticker","location":"core/dev.kord.core.behavior/-guild-behavior/create-sticker.html","searchKeys":["createSticker","open suspend fun createSticker(name: String, description: String, tags: String, file: NamedFile): GuildSticker","dev.kord.core.behavior.GuildBehavior.createSticker"]},{"name":"open suspend fun deferEphemeralMessageUpdate(): EphemeralMessageInteractionResponseBehavior","description":"dev.kord.core.behavior.interaction.ComponentInteractionBehavior.deferEphemeralMessageUpdate","location":"core/dev.kord.core.behavior.interaction/-component-interaction-behavior/defer-ephemeral-message-update.html","searchKeys":["deferEphemeralMessageUpdate","open suspend fun deferEphemeralMessageUpdate(): EphemeralMessageInteractionResponseBehavior","dev.kord.core.behavior.interaction.ComponentInteractionBehavior.deferEphemeralMessageUpdate"]},{"name":"open suspend fun deferEphemeralResponse(): DeferredEphemeralMessageInteractionResponseBehavior","description":"dev.kord.core.behavior.interaction.ActionInteractionBehavior.deferEphemeralResponse","location":"core/dev.kord.core.behavior.interaction/-action-interaction-behavior/defer-ephemeral-response.html","searchKeys":["deferEphemeralResponse","open suspend fun deferEphemeralResponse(): DeferredEphemeralMessageInteractionResponseBehavior","dev.kord.core.behavior.interaction.ActionInteractionBehavior.deferEphemeralResponse"]},{"name":"open suspend fun deferEphemeralResponseUnsafe(): EphemeralMessageInteractionResponseBehavior","description":"dev.kord.core.behavior.interaction.ActionInteractionBehavior.deferEphemeralResponseUnsafe","location":"core/dev.kord.core.behavior.interaction/-action-interaction-behavior/defer-ephemeral-response-unsafe.html","searchKeys":["deferEphemeralResponseUnsafe","open suspend fun deferEphemeralResponseUnsafe(): EphemeralMessageInteractionResponseBehavior","dev.kord.core.behavior.interaction.ActionInteractionBehavior.deferEphemeralResponseUnsafe"]},{"name":"open suspend fun deferPublicMessageUpdate(): PublicMessageInteractionResponseBehavior","description":"dev.kord.core.behavior.interaction.ComponentInteractionBehavior.deferPublicMessageUpdate","location":"core/dev.kord.core.behavior.interaction/-component-interaction-behavior/defer-public-message-update.html","searchKeys":["deferPublicMessageUpdate","open suspend fun deferPublicMessageUpdate(): PublicMessageInteractionResponseBehavior","dev.kord.core.behavior.interaction.ComponentInteractionBehavior.deferPublicMessageUpdate"]},{"name":"open suspend fun deferPublicResponse(): DeferredPublicMessageInteractionResponseBehavior","description":"dev.kord.core.behavior.interaction.ActionInteractionBehavior.deferPublicResponse","location":"core/dev.kord.core.behavior.interaction/-action-interaction-behavior/defer-public-response.html","searchKeys":["deferPublicResponse","open suspend fun deferPublicResponse(): DeferredPublicMessageInteractionResponseBehavior","dev.kord.core.behavior.interaction.ActionInteractionBehavior.deferPublicResponse"]},{"name":"open suspend fun deferPublicResponseUnsafe(): PublicMessageInteractionResponseBehavior","description":"dev.kord.core.behavior.interaction.ActionInteractionBehavior.deferPublicResponseUnsafe","location":"core/dev.kord.core.behavior.interaction/-action-interaction-behavior/defer-public-response-unsafe.html","searchKeys":["deferPublicResponseUnsafe","open suspend fun deferPublicResponseUnsafe(): PublicMessageInteractionResponseBehavior","dev.kord.core.behavior.interaction.ActionInteractionBehavior.deferPublicResponseUnsafe"]},{"name":"open suspend fun delete()","description":"dev.kord.core.behavior.GuildBehavior.delete","location":"core/dev.kord.core.behavior/-guild-behavior/delete.html","searchKeys":["delete","open suspend fun delete()","dev.kord.core.behavior.GuildBehavior.delete"]},{"name":"open suspend fun delete()","description":"dev.kord.core.behavior.GuildScheduledEventBehavior.delete","location":"core/dev.kord.core.behavior/-guild-scheduled-event-behavior/delete.html","searchKeys":["delete","open suspend fun delete()","dev.kord.core.behavior.GuildScheduledEventBehavior.delete"]},{"name":"open suspend fun delete()","description":"dev.kord.core.behavior.StickerBehavior.delete","location":"core/dev.kord.core.behavior/-sticker-behavior/delete.html","searchKeys":["delete","open suspend fun delete()","dev.kord.core.behavior.StickerBehavior.delete"]},{"name":"open suspend fun delete()","description":"dev.kord.core.behavior.interaction.followup.FollowupMessageBehavior.delete","location":"core/dev.kord.core.behavior.interaction.followup/-followup-message-behavior/delete.html","searchKeys":["delete","open suspend fun delete()","dev.kord.core.behavior.interaction.followup.FollowupMessageBehavior.delete"]},{"name":"open suspend fun delete()","description":"dev.kord.core.behavior.interaction.response.MessageInteractionResponseBehavior.delete","location":"core/dev.kord.core.behavior.interaction.response/-message-interaction-response-behavior/delete.html","searchKeys":["delete","open suspend fun delete()","dev.kord.core.behavior.interaction.response.MessageInteractionResponseBehavior.delete"]},{"name":"open suspend fun delete(): FollowupPermittingInteractionResponseBehavior","description":"dev.kord.core.behavior.interaction.response.DeferredMessageInteractionResponseBehavior.delete","location":"core/dev.kord.core.behavior.interaction.response/-deferred-message-interaction-response-behavior/delete.html","searchKeys":["delete","open suspend fun delete(): FollowupPermittingInteractionResponseBehavior","dev.kord.core.behavior.interaction.response.DeferredMessageInteractionResponseBehavior.delete"]},{"name":"open suspend fun delete(): Template","description":"dev.kord.core.behavior.TemplateBehavior.delete","location":"core/dev.kord.core.behavior/-template-behavior/delete.html","searchKeys":["delete","open suspend fun delete(): Template","dev.kord.core.behavior.TemplateBehavior.delete"]},{"name":"open suspend fun delete(reason: String? = null)","description":"dev.kord.core.behavior.GuildEmojiBehavior.delete","location":"core/dev.kord.core.behavior/-guild-emoji-behavior/delete.html","searchKeys":["delete","open suspend fun delete(reason: String? = null)","dev.kord.core.behavior.GuildEmojiBehavior.delete"]},{"name":"open suspend fun delete(reason: String? = null)","description":"dev.kord.core.behavior.MessageBehavior.delete","location":"core/dev.kord.core.behavior/-message-behavior/delete.html","searchKeys":["delete","open suspend fun delete(reason: String? = null)","dev.kord.core.behavior.MessageBehavior.delete"]},{"name":"open suspend fun delete(reason: String? = null)","description":"dev.kord.core.behavior.RoleBehavior.delete","location":"core/dev.kord.core.behavior/-role-behavior/delete.html","searchKeys":["delete","open suspend fun delete(reason: String? = null)","dev.kord.core.behavior.RoleBehavior.delete"]},{"name":"open suspend fun delete(reason: String? = null)","description":"dev.kord.core.behavior.StageInstanceBehavior.delete","location":"core/dev.kord.core.behavior/-stage-instance-behavior/delete.html","searchKeys":["delete","open suspend fun delete(reason: String? = null)","dev.kord.core.behavior.StageInstanceBehavior.delete"]},{"name":"open suspend fun delete(reason: String? = null)","description":"dev.kord.core.behavior.WebhookBehavior.delete","location":"core/dev.kord.core.behavior/-webhook-behavior/delete.html","searchKeys":["delete","open suspend fun delete(reason: String? = null)","dev.kord.core.behavior.WebhookBehavior.delete"]},{"name":"open suspend fun delete(reason: String? = null)","description":"dev.kord.core.behavior.automoderation.AutoModerationRuleBehavior.delete","location":"core/dev.kord.core.behavior.automoderation/-auto-moderation-rule-behavior/delete.html","searchKeys":["delete","open suspend fun delete(reason: String? = null)","dev.kord.core.behavior.automoderation.AutoModerationRuleBehavior.delete"]},{"name":"open suspend fun delete(reason: String? = null)","description":"dev.kord.core.behavior.channel.ChannelBehavior.delete","location":"core/dev.kord.core.behavior.channel/-channel-behavior/delete.html","searchKeys":["delete","open suspend fun delete(reason: String? = null)","dev.kord.core.behavior.channel.ChannelBehavior.delete"]},{"name":"open suspend fun delete(token: String, reason: String? = null)","description":"dev.kord.core.behavior.WebhookBehavior.delete","location":"core/dev.kord.core.behavior/-webhook-behavior/delete.html","searchKeys":["delete","open suspend fun delete(token: String, reason: String? = null)","dev.kord.core.behavior.WebhookBehavior.delete"]},{"name":"open suspend fun delete(webhookId: Snowflake, token: String, threadId: Snowflake? = null)","description":"dev.kord.core.behavior.MessageBehavior.delete","location":"core/dev.kord.core.behavior/-message-behavior/delete.html","searchKeys":["delete","open suspend fun delete(webhookId: Snowflake, token: String, threadId: Snowflake? = null)","dev.kord.core.behavior.MessageBehavior.delete"]},{"name":"open suspend fun deleteAllReactions()","description":"dev.kord.core.behavior.MessageBehavior.deleteAllReactions","location":"core/dev.kord.core.behavior/-message-behavior/delete-all-reactions.html","searchKeys":["deleteAllReactions","open suspend fun deleteAllReactions()","dev.kord.core.behavior.MessageBehavior.deleteAllReactions"]},{"name":"open suspend fun deleteMessage(id: Snowflake, reason: String? = null)","description":"dev.kord.core.behavior.channel.MessageChannelBehavior.deleteMessage","location":"core/dev.kord.core.behavior.channel/-message-channel-behavior/delete-message.html","searchKeys":["deleteMessage","open suspend fun deleteMessage(id: Snowflake, reason: String? = null)","dev.kord.core.behavior.channel.MessageChannelBehavior.deleteMessage"]},{"name":"open suspend fun deleteMessage(token: String, messageId: Snowflake, threadId: Snowflake? = null)","description":"dev.kord.core.behavior.WebhookBehavior.deleteMessage","location":"core/dev.kord.core.behavior/-webhook-behavior/delete-message.html","searchKeys":["deleteMessage","open suspend fun deleteMessage(token: String, messageId: Snowflake, threadId: Snowflake? = null)","dev.kord.core.behavior.WebhookBehavior.deleteMessage"]},{"name":"open suspend fun deleteOwnReaction(emoji: ReactionEmoji)","description":"dev.kord.core.behavior.MessageBehavior.deleteOwnReaction","location":"core/dev.kord.core.behavior/-message-behavior/delete-own-reaction.html","searchKeys":["deleteOwnReaction","open suspend fun deleteOwnReaction(emoji: ReactionEmoji)","dev.kord.core.behavior.MessageBehavior.deleteOwnReaction"]},{"name":"open suspend fun deleteReaction(emoji: ReactionEmoji)","description":"dev.kord.core.behavior.MessageBehavior.deleteReaction","location":"core/dev.kord.core.behavior/-message-behavior/delete-reaction.html","searchKeys":["deleteReaction","open suspend fun deleteReaction(emoji: ReactionEmoji)","dev.kord.core.behavior.MessageBehavior.deleteReaction"]},{"name":"open suspend fun deleteReaction(userId: Snowflake, emoji: ReactionEmoji)","description":"dev.kord.core.behavior.MessageBehavior.deleteReaction","location":"core/dev.kord.core.behavior/-message-behavior/delete-reaction.html","searchKeys":["deleteReaction","open suspend fun deleteReaction(userId: Snowflake, emoji: ReactionEmoji)","dev.kord.core.behavior.MessageBehavior.deleteReaction"]},{"name":"open suspend fun detachAll()","description":"dev.kord.core.gateway.MasterGateway.detachAll","location":"core/dev.kord.core.gateway/-master-gateway/detach-all.html","searchKeys":["detachAll","open suspend fun detachAll()","dev.kord.core.gateway.MasterGateway.detachAll"]},{"name":"open suspend fun editMFALevel(level: MFALevel, reason: String? = null): MFALevel","description":"dev.kord.core.behavior.GuildBehavior.editMFALevel","location":"core/dev.kord.core.behavior/-guild-behavior/edit-m-f-a-level.html","searchKeys":["editMFALevel","open suspend fun editMFALevel(level: MFALevel, reason: String? = null): MFALevel","dev.kord.core.behavior.GuildBehavior.editMFALevel"]},{"name":"open suspend fun editSelfNickname(newNickname: String? = null, reason: String? = null): String","description":"dev.kord.core.behavior.GuildBehavior.editSelfNickname","location":"core/dev.kord.core.behavior/-guild-behavior/edit-self-nickname.html","searchKeys":["editSelfNickname","open suspend fun editSelfNickname(newNickname: String? = null, reason: String? = null): String","dev.kord.core.behavior.GuildBehavior.editSelfNickname"]},{"name":"open suspend fun editWelcomeScreen(builder: WelcomeScreenModifyBuilder.() -> Unit): WelcomeScreen","description":"dev.kord.core.behavior.GuildBehavior.editWelcomeScreen","location":"core/dev.kord.core.behavior/-guild-behavior/edit-welcome-screen.html","searchKeys":["editWelcomeScreen","open suspend fun editWelcomeScreen(builder: WelcomeScreenModifyBuilder.() -> Unit): WelcomeScreen","dev.kord.core.behavior.GuildBehavior.editWelcomeScreen"]},{"name":"open suspend fun fetchChannel(): Channel","description":"dev.kord.core.behavior.channel.ChannelBehavior.fetchChannel","location":"core/dev.kord.core.behavior.channel/-channel-behavior/fetch-channel.html","searchKeys":["fetchChannel","open suspend fun fetchChannel(): Channel","dev.kord.core.behavior.channel.ChannelBehavior.fetchChannel"]},{"name":"open suspend fun fetchChannelOrNull(): Channel?","description":"dev.kord.core.behavior.channel.ChannelBehavior.fetchChannelOrNull","location":"core/dev.kord.core.behavior.channel/-channel-behavior/fetch-channel-or-null.html","searchKeys":["fetchChannelOrNull","open suspend fun fetchChannelOrNull(): Channel?","dev.kord.core.behavior.channel.ChannelBehavior.fetchChannelOrNull"]},{"name":"open suspend fun fetchGuild(): Guild","description":"dev.kord.core.behavior.GuildBehavior.fetchGuild","location":"core/dev.kord.core.behavior/-guild-behavior/fetch-guild.html","searchKeys":["fetchGuild","open suspend fun fetchGuild(): Guild","dev.kord.core.behavior.GuildBehavior.fetchGuild"]},{"name":"open suspend fun fetchGuildOrNull(): Guild?","description":"dev.kord.core.behavior.GuildBehavior.fetchGuildOrNull","location":"core/dev.kord.core.behavior/-guild-behavior/fetch-guild-or-null.html","searchKeys":["fetchGuildOrNull","open suspend fun fetchGuildOrNull(): Guild?","dev.kord.core.behavior.GuildBehavior.fetchGuildOrNull"]},{"name":"open suspend fun fetchGuildScheduledEvent(): GuildScheduledEvent","description":"dev.kord.core.behavior.GuildScheduledEventBehavior.fetchGuildScheduledEvent","location":"core/dev.kord.core.behavior/-guild-scheduled-event-behavior/fetch-guild-scheduled-event.html","searchKeys":["fetchGuildScheduledEvent","open suspend fun fetchGuildScheduledEvent(): GuildScheduledEvent","dev.kord.core.behavior.GuildScheduledEventBehavior.fetchGuildScheduledEvent"]},{"name":"open suspend fun fetchGuildScheduledEventOrNull(): GuildScheduledEvent?","description":"dev.kord.core.behavior.GuildScheduledEventBehavior.fetchGuildScheduledEventOrNull","location":"core/dev.kord.core.behavior/-guild-scheduled-event-behavior/fetch-guild-scheduled-event-or-null.html","searchKeys":["fetchGuildScheduledEventOrNull","open suspend fun fetchGuildScheduledEventOrNull(): GuildScheduledEvent?","dev.kord.core.behavior.GuildScheduledEventBehavior.fetchGuildScheduledEventOrNull"]},{"name":"open suspend fun fetchMember(): Member","description":"dev.kord.core.behavior.MemberBehavior.fetchMember","location":"core/dev.kord.core.behavior/-member-behavior/fetch-member.html","searchKeys":["fetchMember","open suspend fun fetchMember(): Member","dev.kord.core.behavior.MemberBehavior.fetchMember"]},{"name":"open suspend fun fetchMember(guildId: Snowflake): Member","description":"dev.kord.core.behavior.UserBehavior.fetchMember","location":"core/dev.kord.core.behavior/-user-behavior/fetch-member.html","searchKeys":["fetchMember","open suspend fun fetchMember(guildId: Snowflake): Member","dev.kord.core.behavior.UserBehavior.fetchMember"]},{"name":"open suspend fun fetchMemberOrNull(): Member?","description":"dev.kord.core.behavior.MemberBehavior.fetchMemberOrNull","location":"core/dev.kord.core.behavior/-member-behavior/fetch-member-or-null.html","searchKeys":["fetchMemberOrNull","open suspend fun fetchMemberOrNull(): Member?","dev.kord.core.behavior.MemberBehavior.fetchMemberOrNull"]},{"name":"open suspend fun fetchMemberOrNull(guildId: Snowflake): Member?","description":"dev.kord.core.behavior.UserBehavior.fetchMemberOrNull","location":"core/dev.kord.core.behavior/-user-behavior/fetch-member-or-null.html","searchKeys":["fetchMemberOrNull","open suspend fun fetchMemberOrNull(guildId: Snowflake): Member?","dev.kord.core.behavior.UserBehavior.fetchMemberOrNull"]},{"name":"open suspend fun fetchMessage(): Message","description":"dev.kord.core.behavior.MessageBehavior.fetchMessage","location":"core/dev.kord.core.behavior/-message-behavior/fetch-message.html","searchKeys":["fetchMessage","open suspend fun fetchMessage(): Message","dev.kord.core.behavior.MessageBehavior.fetchMessage"]},{"name":"open suspend fun fetchMessageOrNull(): Message?","description":"dev.kord.core.behavior.MessageBehavior.fetchMessageOrNull","location":"core/dev.kord.core.behavior/-message-behavior/fetch-message-or-null.html","searchKeys":["fetchMessageOrNull","open suspend fun fetchMessageOrNull(): Message?","dev.kord.core.behavior.MessageBehavior.fetchMessageOrNull"]},{"name":"open suspend fun fetchRole(): Role","description":"dev.kord.core.behavior.RoleBehavior.fetchRole","location":"core/dev.kord.core.behavior/-role-behavior/fetch-role.html","searchKeys":["fetchRole","open suspend fun fetchRole(): Role","dev.kord.core.behavior.RoleBehavior.fetchRole"]},{"name":"open suspend fun fetchRoleOrNull(): Role?","description":"dev.kord.core.behavior.RoleBehavior.fetchRoleOrNull","location":"core/dev.kord.core.behavior/-role-behavior/fetch-role-or-null.html","searchKeys":["fetchRoleOrNull","open suspend fun fetchRoleOrNull(): Role?","dev.kord.core.behavior.RoleBehavior.fetchRoleOrNull"]},{"name":"open suspend fun fetchStageInstance(): StageInstance","description":"dev.kord.core.behavior.StageInstanceBehavior.fetchStageInstance","location":"core/dev.kord.core.behavior/-stage-instance-behavior/fetch-stage-instance.html","searchKeys":["fetchStageInstance","open suspend fun fetchStageInstance(): StageInstance","dev.kord.core.behavior.StageInstanceBehavior.fetchStageInstance"]},{"name":"open suspend fun fetchStageInstanceOrNull(): StageInstance?","description":"dev.kord.core.behavior.StageInstanceBehavior.fetchStageInstanceOrNull","location":"core/dev.kord.core.behavior/-stage-instance-behavior/fetch-stage-instance-or-null.html","searchKeys":["fetchStageInstanceOrNull","open suspend fun fetchStageInstanceOrNull(): StageInstance?","dev.kord.core.behavior.StageInstanceBehavior.fetchStageInstanceOrNull"]},{"name":"open suspend fun fetchSticker(): Sticker","description":"dev.kord.core.behavior.StickerBehavior.fetchSticker","location":"core/dev.kord.core.behavior/-sticker-behavior/fetch-sticker.html","searchKeys":["fetchSticker","open suspend fun fetchSticker(): Sticker","dev.kord.core.behavior.StickerBehavior.fetchSticker"]},{"name":"open suspend fun fetchStickerOrNull(): Sticker?","description":"dev.kord.core.behavior.StickerBehavior.fetchStickerOrNull","location":"core/dev.kord.core.behavior/-sticker-behavior/fetch-sticker-or-null.html","searchKeys":["fetchStickerOrNull","open suspend fun fetchStickerOrNull(): Sticker?","dev.kord.core.behavior.StickerBehavior.fetchStickerOrNull"]},{"name":"open suspend fun fetchUser(): User","description":"dev.kord.core.behavior.UserBehavior.fetchUser","location":"core/dev.kord.core.behavior/-user-behavior/fetch-user.html","searchKeys":["fetchUser","open suspend fun fetchUser(): User","dev.kord.core.behavior.UserBehavior.fetchUser"]},{"name":"open suspend fun fetchUserOrNull(): User?","description":"dev.kord.core.behavior.UserBehavior.fetchUserOrNull","location":"core/dev.kord.core.behavior/-user-behavior/fetch-user-or-null.html","searchKeys":["fetchUserOrNull","open suspend fun fetchUserOrNull(): User?","dev.kord.core.behavior.UserBehavior.fetchUserOrNull"]},{"name":"open suspend fun follow(target: Snowflake)","description":"dev.kord.core.behavior.channel.NewsChannelBehavior.follow","location":"core/dev.kord.core.behavior.channel/-news-channel-behavior/follow.html","searchKeys":["follow","open suspend fun follow(target: Snowflake)","dev.kord.core.behavior.channel.NewsChannelBehavior.follow"]},{"name":"open suspend fun getApplicationCommand(commandId: Snowflake): GuildApplicationCommand","description":"dev.kord.core.behavior.GuildBehavior.getApplicationCommand","location":"core/dev.kord.core.behavior/-guild-behavior/get-application-command.html","searchKeys":["getApplicationCommand","open suspend fun getApplicationCommand(commandId: Snowflake): GuildApplicationCommand","dev.kord.core.behavior.GuildBehavior.getApplicationCommand"]},{"name":"open suspend fun getApplicationCommandOrNull(commandId: Snowflake): GuildApplicationCommand?","description":"dev.kord.core.behavior.GuildBehavior.getApplicationCommandOrNull","location":"core/dev.kord.core.behavior/-guild-behavior/get-application-command-or-null.html","searchKeys":["getApplicationCommandOrNull","open suspend fun getApplicationCommandOrNull(commandId: Snowflake): GuildApplicationCommand?","dev.kord.core.behavior.GuildBehavior.getApplicationCommandOrNull"]},{"name":"open suspend fun getApplicationCommandPermissions(applicationId: Snowflake, guildId: Snowflake, commandId: Snowflake): ApplicationCommandPermissions","description":"dev.kord.core.supplier.EntitySupplier.getApplicationCommandPermissions","location":"core/dev.kord.core.supplier/-entity-supplier/get-application-command-permissions.html","searchKeys":["getApplicationCommandPermissions","open suspend fun getApplicationCommandPermissions(applicationId: Snowflake, guildId: Snowflake, commandId: Snowflake): ApplicationCommandPermissions","dev.kord.core.supplier.EntitySupplier.getApplicationCommandPermissions"]},{"name":"open suspend fun getAutoModerationRule(guildId: Snowflake, ruleId: Snowflake): AutoModerationRule","description":"dev.kord.core.supplier.EntitySupplier.getAutoModerationRule","location":"core/dev.kord.core.supplier/-entity-supplier/get-auto-moderation-rule.html","searchKeys":["getAutoModerationRule","open suspend fun getAutoModerationRule(guildId: Snowflake, ruleId: Snowflake): AutoModerationRule","dev.kord.core.supplier.EntitySupplier.getAutoModerationRule"]},{"name":"open suspend fun getAutoModerationRule(ruleId: Snowflake): AutoModerationRule","description":"dev.kord.core.behavior.GuildBehavior.getAutoModerationRule","location":"core/dev.kord.core.behavior/-guild-behavior/get-auto-moderation-rule.html","searchKeys":["getAutoModerationRule","open suspend fun getAutoModerationRule(ruleId: Snowflake): AutoModerationRule","dev.kord.core.behavior.GuildBehavior.getAutoModerationRule"]},{"name":"open suspend fun getAutoModerationRuleOrNull(ruleId: Snowflake): AutoModerationRule?","description":"dev.kord.core.behavior.GuildBehavior.getAutoModerationRuleOrNull","location":"core/dev.kord.core.behavior/-guild-behavior/get-auto-moderation-rule-or-null.html","searchKeys":["getAutoModerationRuleOrNull","open suspend fun getAutoModerationRuleOrNull(ruleId: Snowflake): AutoModerationRule?","dev.kord.core.behavior.GuildBehavior.getAutoModerationRuleOrNull"]},{"name":"open suspend fun getBan(userId: Snowflake): Ban","description":"dev.kord.core.behavior.GuildBehavior.getBan","location":"core/dev.kord.core.behavior/-guild-behavior/get-ban.html","searchKeys":["getBan","open suspend fun getBan(userId: Snowflake): Ban","dev.kord.core.behavior.GuildBehavior.getBan"]},{"name":"open suspend fun getBanOrNull(userId: Snowflake): Ban?","description":"dev.kord.core.behavior.GuildBehavior.getBanOrNull","location":"core/dev.kord.core.behavior/-guild-behavior/get-ban-or-null.html","searchKeys":["getBanOrNull","open suspend fun getBanOrNull(userId: Snowflake): Ban?","dev.kord.core.behavior.GuildBehavior.getBanOrNull"]},{"name":"open suspend fun getChannel(): MessageChannel","description":"dev.kord.core.behavior.MessageBehavior.getChannel","location":"core/dev.kord.core.behavior/-message-behavior/get-channel.html","searchKeys":["getChannel","open suspend fun getChannel(): MessageChannel","dev.kord.core.behavior.MessageBehavior.getChannel"]},{"name":"open suspend fun getChannel(): MessageChannel","description":"dev.kord.core.behavior.interaction.InteractionBehavior.getChannel","location":"core/dev.kord.core.behavior.interaction/-interaction-behavior/get-channel.html","searchKeys":["getChannel","open suspend fun getChannel(): MessageChannel","dev.kord.core.behavior.interaction.InteractionBehavior.getChannel"]},{"name":"open suspend fun getChannel(): MessageChannel","description":"dev.kord.core.behavior.interaction.followup.FollowupMessageBehavior.getChannel","location":"core/dev.kord.core.behavior.interaction.followup/-followup-message-behavior/get-channel.html","searchKeys":["getChannel","open suspend fun getChannel(): MessageChannel","dev.kord.core.behavior.interaction.followup.FollowupMessageBehavior.getChannel"]},{"name":"open suspend fun getChannel(channelId: Snowflake): GuildChannel","description":"dev.kord.core.behavior.GuildBehavior.getChannel","location":"core/dev.kord.core.behavior/-guild-behavior/get-channel.html","searchKeys":["getChannel","open suspend fun getChannel(channelId: Snowflake): GuildChannel","dev.kord.core.behavior.GuildBehavior.getChannel"]},{"name":"open suspend fun getChannel(id: Snowflake): Channel","description":"dev.kord.core.supplier.EntitySupplier.getChannel","location":"core/dev.kord.core.supplier/-entity-supplier/get-channel.html","searchKeys":["getChannel","open suspend fun getChannel(id: Snowflake): Channel","dev.kord.core.supplier.EntitySupplier.getChannel"]},{"name":"open suspend fun getChannelOrNull(): MessageChannel?","description":"dev.kord.core.behavior.MessageBehavior.getChannelOrNull","location":"core/dev.kord.core.behavior/-message-behavior/get-channel-or-null.html","searchKeys":["getChannelOrNull","open suspend fun getChannelOrNull(): MessageChannel?","dev.kord.core.behavior.MessageBehavior.getChannelOrNull"]},{"name":"open suspend fun getChannelOrNull(): MessageChannel?","description":"dev.kord.core.behavior.interaction.InteractionBehavior.getChannelOrNull","location":"core/dev.kord.core.behavior.interaction/-interaction-behavior/get-channel-or-null.html","searchKeys":["getChannelOrNull","open suspend fun getChannelOrNull(): MessageChannel?","dev.kord.core.behavior.interaction.InteractionBehavior.getChannelOrNull"]},{"name":"open suspend fun getChannelOrNull(): MessageChannel?","description":"dev.kord.core.behavior.interaction.followup.FollowupMessageBehavior.getChannelOrNull","location":"core/dev.kord.core.behavior.interaction.followup/-followup-message-behavior/get-channel-or-null.html","searchKeys":["getChannelOrNull","open suspend fun getChannelOrNull(): MessageChannel?","dev.kord.core.behavior.interaction.followup.FollowupMessageBehavior.getChannelOrNull"]},{"name":"open suspend fun getChannelOrNull(): TopGuildChannel?","description":"dev.kord.core.event.guild.GuildScheduledEventEvent.getChannelOrNull","location":"core/dev.kord.core.event.guild/-guild-scheduled-event-event/get-channel-or-null.html","searchKeys":["getChannelOrNull","open suspend fun getChannelOrNull(): TopGuildChannel?","dev.kord.core.event.guild.GuildScheduledEventEvent.getChannelOrNull"]},{"name":"open suspend fun getChannelOrNull(channelId: Snowflake): GuildChannel?","description":"dev.kord.core.behavior.GuildBehavior.getChannelOrNull","location":"core/dev.kord.core.behavior/-guild-behavior/get-channel-or-null.html","searchKeys":["getChannelOrNull","open suspend fun getChannelOrNull(channelId: Snowflake): GuildChannel?","dev.kord.core.behavior.GuildBehavior.getChannelOrNull"]},{"name":"open suspend fun getDmChannel(): DmChannel","description":"dev.kord.core.behavior.UserBehavior.getDmChannel","location":"core/dev.kord.core.behavior/-user-behavior/get-dm-channel.html","searchKeys":["getDmChannel","open suspend fun getDmChannel(): DmChannel","dev.kord.core.behavior.UserBehavior.getDmChannel"]},{"name":"open suspend fun getDmChannelOrNull(): DmChannel?","description":"dev.kord.core.behavior.UserBehavior.getDmChannelOrNull","location":"core/dev.kord.core.behavior/-user-behavior/get-dm-channel-or-null.html","searchKeys":["getDmChannelOrNull","open suspend fun getDmChannelOrNull(): DmChannel?","dev.kord.core.behavior.UserBehavior.getDmChannelOrNull"]},{"name":"open suspend fun getEffectivePermissions(memberId: Snowflake): Permissions","description":"dev.kord.core.entity.channel.TopGuildChannel.getEffectivePermissions","location":"core/dev.kord.core.entity.channel/-top-guild-channel/get-effective-permissions.html","searchKeys":["getEffectivePermissions","open suspend fun getEffectivePermissions(memberId: Snowflake): Permissions","dev.kord.core.entity.channel.TopGuildChannel.getEffectivePermissions"]},{"name":"open suspend fun getEmoji(guildId: Snowflake, emojiId: Snowflake): GuildEmoji","description":"dev.kord.core.supplier.EntitySupplier.getEmoji","location":"core/dev.kord.core.supplier/-entity-supplier/get-emoji.html","searchKeys":["getEmoji","open suspend fun getEmoji(guildId: Snowflake, emojiId: Snowflake): GuildEmoji","dev.kord.core.supplier.EntitySupplier.getEmoji"]},{"name":"open suspend fun getEvent(): GuildScheduledEvent","description":"dev.kord.core.event.guild.GuildScheduledEventUserEvent.getEvent","location":"core/dev.kord.core.event.guild/-guild-scheduled-event-user-event/get-event.html","searchKeys":["getEvent","open suspend fun getEvent(): GuildScheduledEvent","dev.kord.core.event.guild.GuildScheduledEventUserEvent.getEvent"]},{"name":"open suspend fun getEventOrNull(): GuildScheduledEvent?","description":"dev.kord.core.event.guild.GuildScheduledEventUserEvent.getEventOrNull","location":"core/dev.kord.core.event.guild/-guild-scheduled-event-user-event/get-event-or-null.html","searchKeys":["getEventOrNull","open suspend fun getEventOrNull(): GuildScheduledEvent?","dev.kord.core.event.guild.GuildScheduledEventUserEvent.getEventOrNull"]},{"name":"open suspend fun getFollowupMessage(applicationId: Snowflake, interactionToken: String, messageId: Snowflake): FollowupMessage","description":"dev.kord.core.supplier.EntitySupplier.getFollowupMessage","location":"core/dev.kord.core.supplier/-entity-supplier/get-followup-message.html","searchKeys":["getFollowupMessage","open suspend fun getFollowupMessage(applicationId: Snowflake, interactionToken: String, messageId: Snowflake): FollowupMessage","dev.kord.core.supplier.EntitySupplier.getFollowupMessage"]},{"name":"open suspend fun getFollowupMessage(messageId: Snowflake): FollowupMessage","description":"dev.kord.core.behavior.interaction.response.InteractionResponseBehavior.getFollowupMessage","location":"core/dev.kord.core.behavior.interaction.response/-interaction-response-behavior/get-followup-message.html","searchKeys":["getFollowupMessage","open suspend fun getFollowupMessage(messageId: Snowflake): FollowupMessage","dev.kord.core.behavior.interaction.response.InteractionResponseBehavior.getFollowupMessage"]},{"name":"open suspend fun getFollowupMessageOrNull(messageId: Snowflake): FollowupMessage?","description":"dev.kord.core.behavior.interaction.response.InteractionResponseBehavior.getFollowupMessageOrNull","location":"core/dev.kord.core.behavior.interaction.response/-interaction-response-behavior/get-followup-message-or-null.html","searchKeys":["getFollowupMessageOrNull","open suspend fun getFollowupMessageOrNull(messageId: Snowflake): FollowupMessage?","dev.kord.core.behavior.interaction.response.InteractionResponseBehavior.getFollowupMessageOrNull"]},{"name":"open suspend fun getGlobalApplicationCommand(applicationId: Snowflake, commandId: Snowflake): GlobalApplicationCommand","description":"dev.kord.core.supplier.EntitySupplier.getGlobalApplicationCommand","location":"core/dev.kord.core.supplier/-entity-supplier/get-global-application-command.html","searchKeys":["getGlobalApplicationCommand","open suspend fun getGlobalApplicationCommand(applicationId: Snowflake, commandId: Snowflake): GlobalApplicationCommand","dev.kord.core.supplier.EntitySupplier.getGlobalApplicationCommand"]},{"name":"open suspend fun getGuild(): Guild","description":"dev.kord.core.behavior.MemberBehavior.getGuild","location":"core/dev.kord.core.behavior/-member-behavior/get-guild.html","searchKeys":["getGuild","open suspend fun getGuild(): Guild","dev.kord.core.behavior.MemberBehavior.getGuild"]},{"name":"open suspend fun getGuild(): Guild","description":"dev.kord.core.behavior.automoderation.AutoModerationRuleBehavior.getGuild","location":"core/dev.kord.core.behavior.automoderation/-auto-moderation-rule-behavior/get-guild.html","searchKeys":["getGuild","open suspend fun getGuild(): Guild","dev.kord.core.behavior.automoderation.AutoModerationRuleBehavior.getGuild"]},{"name":"open suspend fun getGuild(): Guild","description":"dev.kord.core.behavior.channel.GuildChannelBehavior.getGuild","location":"core/dev.kord.core.behavior.channel/-guild-channel-behavior/get-guild.html","searchKeys":["getGuild","open suspend fun getGuild(): Guild","dev.kord.core.behavior.channel.GuildChannelBehavior.getGuild"]},{"name":"open suspend fun getGuild(): Guild","description":"dev.kord.core.behavior.interaction.GuildInteractionBehavior.getGuild","location":"core/dev.kord.core.behavior.interaction/-guild-interaction-behavior/get-guild.html","searchKeys":["getGuild","open suspend fun getGuild(): Guild","dev.kord.core.behavior.interaction.GuildInteractionBehavior.getGuild"]},{"name":"open suspend fun getGuild(): Guild","description":"dev.kord.core.event.automoderation.AutoModerationEvent.getGuild","location":"core/dev.kord.core.event.automoderation/-auto-moderation-event/get-guild.html","searchKeys":["getGuild","open suspend fun getGuild(): Guild","dev.kord.core.event.automoderation.AutoModerationEvent.getGuild"]},{"name":"open suspend fun getGuild(): Guild","description":"dev.kord.core.event.guild.GuildScheduledEventEvent.getGuild","location":"core/dev.kord.core.event.guild/-guild-scheduled-event-event/get-guild.html","searchKeys":["getGuild","open suspend fun getGuild(): Guild","dev.kord.core.event.guild.GuildScheduledEventEvent.getGuild"]},{"name":"open suspend fun getGuild(): Guild","description":"dev.kord.core.event.guild.GuildScheduledEventUserEvent.getGuild","location":"core/dev.kord.core.event.guild/-guild-scheduled-event-user-event/get-guild.html","searchKeys":["getGuild","open suspend fun getGuild(): Guild","dev.kord.core.event.guild.GuildScheduledEventUserEvent.getGuild"]},{"name":"open suspend fun getGuild(id: Snowflake): Guild","description":"dev.kord.core.supplier.EntitySupplier.getGuild","location":"core/dev.kord.core.supplier/-entity-supplier/get-guild.html","searchKeys":["getGuild","open suspend fun getGuild(id: Snowflake): Guild","dev.kord.core.supplier.EntitySupplier.getGuild"]},{"name":"open suspend fun getGuildApplicationCommand(applicationId: Snowflake, guildId: Snowflake, commandId: Snowflake): GuildApplicationCommand","description":"dev.kord.core.supplier.EntitySupplier.getGuildApplicationCommand","location":"core/dev.kord.core.supplier/-entity-supplier/get-guild-application-command.html","searchKeys":["getGuildApplicationCommand","open suspend fun getGuildApplicationCommand(applicationId: Snowflake, guildId: Snowflake, commandId: Snowflake): GuildApplicationCommand","dev.kord.core.supplier.EntitySupplier.getGuildApplicationCommand"]},{"name":"open suspend fun getGuildBan(guildId: Snowflake, userId: Snowflake): Ban","description":"dev.kord.core.supplier.EntitySupplier.getGuildBan","location":"core/dev.kord.core.supplier/-entity-supplier/get-guild-ban.html","searchKeys":["getGuildBan","open suspend fun getGuildBan(guildId: Snowflake, userId: Snowflake): Ban","dev.kord.core.supplier.EntitySupplier.getGuildBan"]},{"name":"open suspend fun getGuildOrNull(): Guild?","description":"dev.kord.core.behavior.MemberBehavior.getGuildOrNull","location":"core/dev.kord.core.behavior/-member-behavior/get-guild-or-null.html","searchKeys":["getGuildOrNull","open suspend fun getGuildOrNull(): Guild?","dev.kord.core.behavior.MemberBehavior.getGuildOrNull"]},{"name":"open suspend fun getGuildOrNull(): Guild?","description":"dev.kord.core.behavior.automoderation.AutoModerationRuleBehavior.getGuildOrNull","location":"core/dev.kord.core.behavior.automoderation/-auto-moderation-rule-behavior/get-guild-or-null.html","searchKeys":["getGuildOrNull","open suspend fun getGuildOrNull(): Guild?","dev.kord.core.behavior.automoderation.AutoModerationRuleBehavior.getGuildOrNull"]},{"name":"open suspend fun getGuildOrNull(): Guild?","description":"dev.kord.core.behavior.channel.GuildChannelBehavior.getGuildOrNull","location":"core/dev.kord.core.behavior.channel/-guild-channel-behavior/get-guild-or-null.html","searchKeys":["getGuildOrNull","open suspend fun getGuildOrNull(): Guild?","dev.kord.core.behavior.channel.GuildChannelBehavior.getGuildOrNull"]},{"name":"open suspend fun getGuildOrNull(): Guild?","description":"dev.kord.core.behavior.interaction.GuildInteractionBehavior.getGuildOrNull","location":"core/dev.kord.core.behavior.interaction/-guild-interaction-behavior/get-guild-or-null.html","searchKeys":["getGuildOrNull","open suspend fun getGuildOrNull(): Guild?","dev.kord.core.behavior.interaction.GuildInteractionBehavior.getGuildOrNull"]},{"name":"open suspend fun getGuildOrNull(): Guild?","description":"dev.kord.core.event.automoderation.AutoModerationEvent.getGuildOrNull","location":"core/dev.kord.core.event.automoderation/-auto-moderation-event/get-guild-or-null.html","searchKeys":["getGuildOrNull","open suspend fun getGuildOrNull(): Guild?","dev.kord.core.event.automoderation.AutoModerationEvent.getGuildOrNull"]},{"name":"open suspend fun getGuildOrNull(): Guild?","description":"dev.kord.core.event.guild.GuildScheduledEventEvent.getGuildOrNull","location":"core/dev.kord.core.event.guild/-guild-scheduled-event-event/get-guild-or-null.html","searchKeys":["getGuildOrNull","open suspend fun getGuildOrNull(): Guild?","dev.kord.core.event.guild.GuildScheduledEventEvent.getGuildOrNull"]},{"name":"open suspend fun getGuildOrNull(): Guild?","description":"dev.kord.core.event.guild.GuildScheduledEventUserEvent.getGuildOrNull","location":"core/dev.kord.core.event.guild/-guild-scheduled-event-user-event/get-guild-or-null.html","searchKeys":["getGuildOrNull","open suspend fun getGuildOrNull(): Guild?","dev.kord.core.event.guild.GuildScheduledEventUserEvent.getGuildOrNull"]},{"name":"open suspend fun getGuildPreview(guildId: Snowflake): GuildPreview","description":"dev.kord.core.supplier.EntitySupplier.getGuildPreview","location":"core/dev.kord.core.supplier/-entity-supplier/get-guild-preview.html","searchKeys":["getGuildPreview","open suspend fun getGuildPreview(guildId: Snowflake): GuildPreview","dev.kord.core.supplier.EntitySupplier.getGuildPreview"]},{"name":"open suspend fun getGuildScheduledEvent(eventId: Snowflake): GuildScheduledEvent","description":"dev.kord.core.behavior.GuildBehavior.getGuildScheduledEvent","location":"core/dev.kord.core.behavior/-guild-behavior/get-guild-scheduled-event.html","searchKeys":["getGuildScheduledEvent","open suspend fun getGuildScheduledEvent(eventId: Snowflake): GuildScheduledEvent","dev.kord.core.behavior.GuildBehavior.getGuildScheduledEvent"]},{"name":"open suspend fun getGuildScheduledEvent(guildId: Snowflake, eventId: Snowflake): GuildScheduledEvent","description":"dev.kord.core.supplier.EntitySupplier.getGuildScheduledEvent","location":"core/dev.kord.core.supplier/-entity-supplier/get-guild-scheduled-event.html","searchKeys":["getGuildScheduledEvent","open suspend fun getGuildScheduledEvent(guildId: Snowflake, eventId: Snowflake): GuildScheduledEvent","dev.kord.core.supplier.EntitySupplier.getGuildScheduledEvent"]},{"name":"open suspend fun getGuildScheduledEventOrNull(eventId: Snowflake): GuildScheduledEvent?","description":"dev.kord.core.behavior.GuildBehavior.getGuildScheduledEventOrNull","location":"core/dev.kord.core.behavior/-guild-behavior/get-guild-scheduled-event-or-null.html","searchKeys":["getGuildScheduledEventOrNull","open suspend fun getGuildScheduledEventOrNull(eventId: Snowflake): GuildScheduledEvent?","dev.kord.core.behavior.GuildBehavior.getGuildScheduledEventOrNull"]},{"name":"open suspend fun getGuildSticker(guildId: Snowflake, id: Snowflake): GuildSticker","description":"dev.kord.core.supplier.EntitySupplier.getGuildSticker","location":"core/dev.kord.core.supplier/-entity-supplier/get-guild-sticker.html","searchKeys":["getGuildSticker","open suspend fun getGuildSticker(guildId: Snowflake, id: Snowflake): GuildSticker","dev.kord.core.supplier.EntitySupplier.getGuildSticker"]},{"name":"open suspend fun getGuildWidget(guildId: Snowflake): GuildWidget","description":"dev.kord.core.supplier.EntitySupplier.getGuildWidget","location":"core/dev.kord.core.supplier/-entity-supplier/get-guild-widget.html","searchKeys":["getGuildWidget","open suspend fun getGuildWidget(guildId: Snowflake): GuildWidget","dev.kord.core.supplier.EntitySupplier.getGuildWidget"]},{"name":"open suspend fun getInvite(code: String, withCounts: Boolean = true, withExpiration: Boolean = true, scheduledEventId: Snowflake? = null): Invite","description":"dev.kord.core.behavior.GuildBehavior.getInvite","location":"core/dev.kord.core.behavior/-guild-behavior/get-invite.html","searchKeys":["getInvite","open suspend fun getInvite(code: String, withCounts: Boolean = true, withExpiration: Boolean = true, scheduledEventId: Snowflake? = null): Invite","dev.kord.core.behavior.GuildBehavior.getInvite"]},{"name":"open suspend fun getInviteOrNull(code: String, withCounts: Boolean = true, withExpiration: Boolean = true, scheduledEventId: Snowflake? = null): Invite?","description":"dev.kord.core.behavior.GuildBehavior.getInviteOrNull","location":"core/dev.kord.core.behavior/-guild-behavior/get-invite-or-null.html","searchKeys":["getInviteOrNull","open suspend fun getInviteOrNull(code: String, withCounts: Boolean = true, withExpiration: Boolean = true, scheduledEventId: Snowflake? = null): Invite?","dev.kord.core.behavior.GuildBehavior.getInviteOrNull"]},{"name":"open suspend fun getLastMessage(): Message?","description":"dev.kord.core.entity.channel.MessageChannel.getLastMessage","location":"core/dev.kord.core.entity.channel/-message-channel/get-last-message.html","searchKeys":["getLastMessage","open suspend fun getLastMessage(): Message?","dev.kord.core.entity.channel.MessageChannel.getLastMessage"]},{"name":"open suspend fun getMember(): Member","description":"dev.kord.core.event.guild.GuildScheduledEventUserEvent.getMember","location":"core/dev.kord.core.event.guild/-guild-scheduled-event-user-event/get-member.html","searchKeys":["getMember","open suspend fun getMember(): Member","dev.kord.core.event.guild.GuildScheduledEventUserEvent.getMember"]},{"name":"open suspend fun getMember(guildId: Snowflake, userId: Snowflake): Member","description":"dev.kord.core.supplier.EntitySupplier.getMember","location":"core/dev.kord.core.supplier/-entity-supplier/get-member.html","searchKeys":["getMember","open suspend fun getMember(guildId: Snowflake, userId: Snowflake): Member","dev.kord.core.supplier.EntitySupplier.getMember"]},{"name":"open suspend fun getMember(userId: Snowflake): Member","description":"dev.kord.core.behavior.GuildBehavior.getMember","location":"core/dev.kord.core.behavior/-guild-behavior/get-member.html","searchKeys":["getMember","open suspend fun getMember(userId: Snowflake): Member","dev.kord.core.behavior.GuildBehavior.getMember"]},{"name":"open suspend fun getMemberOrNull(): Member?","description":"dev.kord.core.event.guild.GuildScheduledEventUserEvent.getMemberOrNull","location":"core/dev.kord.core.event.guild/-guild-scheduled-event-user-event/get-member-or-null.html","searchKeys":["getMemberOrNull","open suspend fun getMemberOrNull(): Member?","dev.kord.core.event.guild.GuildScheduledEventUserEvent.getMemberOrNull"]},{"name":"open suspend fun getMemberOrNull(userId: Snowflake): Member?","description":"dev.kord.core.behavior.GuildBehavior.getMemberOrNull","location":"core/dev.kord.core.behavior/-guild-behavior/get-member-or-null.html","searchKeys":["getMemberOrNull","open suspend fun getMemberOrNull(userId: Snowflake): Member?","dev.kord.core.behavior.GuildBehavior.getMemberOrNull"]},{"name":"open suspend fun getMessage(channelId: Snowflake, messageId: Snowflake): Message","description":"dev.kord.core.supplier.EntitySupplier.getMessage","location":"core/dev.kord.core.supplier/-entity-supplier/get-message.html","searchKeys":["getMessage","open suspend fun getMessage(channelId: Snowflake, messageId: Snowflake): Message","dev.kord.core.supplier.EntitySupplier.getMessage"]},{"name":"open suspend fun getMessage(messageId: Snowflake): Message","description":"dev.kord.core.behavior.channel.MessageChannelBehavior.getMessage","location":"core/dev.kord.core.behavior.channel/-message-channel-behavior/get-message.html","searchKeys":["getMessage","open suspend fun getMessage(messageId: Snowflake): Message","dev.kord.core.behavior.channel.MessageChannelBehavior.getMessage"]},{"name":"open suspend fun getMessage(token: String, messageId: Snowflake, threadId: Snowflake? = null): Message","description":"dev.kord.core.behavior.WebhookBehavior.getMessage","location":"core/dev.kord.core.behavior/-webhook-behavior/get-message.html","searchKeys":["getMessage","open suspend fun getMessage(token: String, messageId: Snowflake, threadId: Snowflake? = null): Message","dev.kord.core.behavior.WebhookBehavior.getMessage"]},{"name":"open suspend fun getMessageOrNull(messageId: Snowflake): Message?","description":"dev.kord.core.behavior.channel.MessageChannelBehavior.getMessageOrNull","location":"core/dev.kord.core.behavior.channel/-message-channel-behavior/get-message-or-null.html","searchKeys":["getMessageOrNull","open suspend fun getMessageOrNull(messageId: Snowflake): Message?","dev.kord.core.behavior.channel.MessageChannelBehavior.getMessageOrNull"]},{"name":"open suspend fun getMessageOrNull(token: String, messageId: Snowflake, threadId: Snowflake? = null): Message?","description":"dev.kord.core.behavior.WebhookBehavior.getMessageOrNull","location":"core/dev.kord.core.behavior/-webhook-behavior/get-message-or-null.html","searchKeys":["getMessageOrNull","open suspend fun getMessageOrNull(token: String, messageId: Snowflake, threadId: Snowflake? = null): Message?","dev.kord.core.behavior.WebhookBehavior.getMessageOrNull"]},{"name":"open suspend fun getOriginalInteractionResponse(): Message","description":"dev.kord.core.behavior.interaction.ActionInteractionBehavior.getOriginalInteractionResponse","location":"core/dev.kord.core.behavior.interaction/-action-interaction-behavior/get-original-interaction-response.html","searchKeys":["getOriginalInteractionResponse","open suspend fun getOriginalInteractionResponse(): Message","dev.kord.core.behavior.interaction.ActionInteractionBehavior.getOriginalInteractionResponse"]},{"name":"open suspend fun getOriginalInteractionResponseOrNull(): Message?","description":"dev.kord.core.behavior.interaction.ActionInteractionBehavior.getOriginalInteractionResponseOrNull","location":"core/dev.kord.core.behavior.interaction/-action-interaction-behavior/get-original-interaction-response-or-null.html","searchKeys":["getOriginalInteractionResponseOrNull","open suspend fun getOriginalInteractionResponseOrNull(): Message?","dev.kord.core.behavior.interaction.ActionInteractionBehavior.getOriginalInteractionResponseOrNull"]},{"name":"open suspend fun getParent(): ThreadParentChannel","description":"dev.kord.core.behavior.channel.threads.ThreadChannelBehavior.getParent","location":"core/dev.kord.core.behavior.channel.threads/-thread-channel-behavior/get-parent.html","searchKeys":["getParent","open suspend fun getParent(): ThreadParentChannel","dev.kord.core.behavior.channel.threads.ThreadChannelBehavior.getParent"]},{"name":"open suspend fun getParentOrNull(): ThreadParentChannel?","description":"dev.kord.core.behavior.channel.threads.ThreadChannelBehavior.getParentOrNull","location":"core/dev.kord.core.behavior.channel.threads/-thread-channel-behavior/get-parent-or-null.html","searchKeys":["getParentOrNull","open suspend fun getParentOrNull(): ThreadParentChannel?","dev.kord.core.behavior.channel.threads.ThreadChannelBehavior.getParentOrNull"]},{"name":"open suspend fun getPosition(): Int","description":"dev.kord.core.behavior.RoleBehavior.getPosition","location":"core/dev.kord.core.behavior/-role-behavior/get-position.html","searchKeys":["getPosition","open suspend fun getPosition(): Int","dev.kord.core.behavior.RoleBehavior.getPosition"]},{"name":"open suspend fun getPosition(): Int","description":"dev.kord.core.behavior.channel.TopGuildChannelBehavior.getPosition","location":"core/dev.kord.core.behavior.channel/-top-guild-channel-behavior/get-position.html","searchKeys":["getPosition","open suspend fun getPosition(): Int","dev.kord.core.behavior.channel.TopGuildChannelBehavior.getPosition"]},{"name":"open suspend fun getPresence(): Presence","description":"dev.kord.core.behavior.MemberBehavior.getPresence","location":"core/dev.kord.core.behavior/-member-behavior/get-presence.html","searchKeys":["getPresence","open suspend fun getPresence(): Presence","dev.kord.core.behavior.MemberBehavior.getPresence"]},{"name":"open suspend fun getPresenceOrNull(): Presence?","description":"dev.kord.core.behavior.MemberBehavior.getPresenceOrNull","location":"core/dev.kord.core.behavior/-member-behavior/get-presence-or-null.html","searchKeys":["getPresenceOrNull","open suspend fun getPresenceOrNull(): Presence?","dev.kord.core.behavior.MemberBehavior.getPresenceOrNull"]},{"name":"open suspend fun getPreview(): GuildPreview","description":"dev.kord.core.behavior.GuildBehavior.getPreview","location":"core/dev.kord.core.behavior/-guild-behavior/get-preview.html","searchKeys":["getPreview","open suspend fun getPreview(): GuildPreview","dev.kord.core.behavior.GuildBehavior.getPreview"]},{"name":"open suspend fun getPreviewOrNull(): GuildPreview?","description":"dev.kord.core.behavior.GuildBehavior.getPreviewOrNull","location":"core/dev.kord.core.behavior/-guild-behavior/get-preview-or-null.html","searchKeys":["getPreviewOrNull","open suspend fun getPreviewOrNull(): GuildPreview?","dev.kord.core.behavior.GuildBehavior.getPreviewOrNull"]},{"name":"open suspend fun getPruneCount(days: Int = 7): Int","description":"dev.kord.core.behavior.GuildBehavior.getPruneCount","location":"core/dev.kord.core.behavior/-guild-behavior/get-prune-count.html","searchKeys":["getPruneCount","open suspend fun getPruneCount(days: Int = 7): Int","dev.kord.core.behavior.GuildBehavior.getPruneCount"]},{"name":"open suspend fun getRole(guildId: Snowflake, roleId: Snowflake): Role","description":"dev.kord.core.supplier.EntitySupplier.getRole","location":"core/dev.kord.core.supplier/-entity-supplier/get-role.html","searchKeys":["getRole","open suspend fun getRole(guildId: Snowflake, roleId: Snowflake): Role","dev.kord.core.supplier.EntitySupplier.getRole"]},{"name":"open suspend fun getRole(roleId: Snowflake): Role","description":"dev.kord.core.behavior.GuildBehavior.getRole","location":"core/dev.kord.core.behavior/-guild-behavior/get-role.html","searchKeys":["getRole","open suspend fun getRole(roleId: Snowflake): Role","dev.kord.core.behavior.GuildBehavior.getRole"]},{"name":"open suspend fun getRoleOrNull(roleId: Snowflake): Role?","description":"dev.kord.core.behavior.GuildBehavior.getRoleOrNull","location":"core/dev.kord.core.behavior/-guild-behavior/get-role-or-null.html","searchKeys":["getRoleOrNull","open suspend fun getRoleOrNull(roleId: Snowflake): Role?","dev.kord.core.behavior.GuildBehavior.getRoleOrNull"]},{"name":"open suspend fun getSelf(): User","description":"dev.kord.core.supplier.EntitySupplier.getSelf","location":"core/dev.kord.core.supplier/-entity-supplier/get-self.html","searchKeys":["getSelf","open suspend fun getSelf(): User","dev.kord.core.supplier.EntitySupplier.getSelf"]},{"name":"open suspend fun getStageInstance(): StageInstance","description":"dev.kord.core.behavior.channel.StageChannelBehavior.getStageInstance","location":"core/dev.kord.core.behavior.channel/-stage-channel-behavior/get-stage-instance.html","searchKeys":["getStageInstance","open suspend fun getStageInstance(): StageInstance","dev.kord.core.behavior.channel.StageChannelBehavior.getStageInstance"]},{"name":"open suspend fun getStageInstance(channelId: Snowflake): StageInstance","description":"dev.kord.core.supplier.EntitySupplier.getStageInstance","location":"core/dev.kord.core.supplier/-entity-supplier/get-stage-instance.html","searchKeys":["getStageInstance","open suspend fun getStageInstance(channelId: Snowflake): StageInstance","dev.kord.core.supplier.EntitySupplier.getStageInstance"]},{"name":"open suspend fun getStageInstanceOrNull(): StageInstance?","description":"dev.kord.core.behavior.channel.StageChannelBehavior.getStageInstanceOrNull","location":"core/dev.kord.core.behavior.channel/-stage-channel-behavior/get-stage-instance-or-null.html","searchKeys":["getStageInstanceOrNull","open suspend fun getStageInstanceOrNull(): StageInstance?","dev.kord.core.behavior.channel.StageChannelBehavior.getStageInstanceOrNull"]},{"name":"open suspend fun getSticker(id: Snowflake): Sticker","description":"dev.kord.core.supplier.EntitySupplier.getSticker","location":"core/dev.kord.core.supplier/-entity-supplier/get-sticker.html","searchKeys":["getSticker","open suspend fun getSticker(id: Snowflake): Sticker","dev.kord.core.supplier.EntitySupplier.getSticker"]},{"name":"open suspend fun getSticker(stickerId: Snowflake): GuildSticker","description":"dev.kord.core.behavior.GuildBehavior.getSticker","location":"core/dev.kord.core.behavior/-guild-behavior/get-sticker.html","searchKeys":["getSticker","open suspend fun getSticker(stickerId: Snowflake): GuildSticker","dev.kord.core.behavior.GuildBehavior.getSticker"]},{"name":"open suspend fun getStickerOrNull(stickerId: Snowflake): GuildSticker?","description":"dev.kord.core.behavior.GuildBehavior.getStickerOrNull","location":"core/dev.kord.core.behavior/-guild-behavior/get-sticker-or-null.html","searchKeys":["getStickerOrNull","open suspend fun getStickerOrNull(stickerId: Snowflake): GuildSticker?","dev.kord.core.behavior.GuildBehavior.getStickerOrNull"]},{"name":"open suspend fun getTarget(): Message","description":"dev.kord.core.entity.interaction.MessageCommandInteraction.getTarget","location":"core/dev.kord.core.entity.interaction/-message-command-interaction/get-target.html","searchKeys":["getTarget","open suspend fun getTarget(): Message","dev.kord.core.entity.interaction.MessageCommandInteraction.getTarget"]},{"name":"open suspend fun getTarget(): User","description":"dev.kord.core.entity.interaction.UserCommandInteraction.getTarget","location":"core/dev.kord.core.entity.interaction/-user-command-interaction/get-target.html","searchKeys":["getTarget","open suspend fun getTarget(): User","dev.kord.core.entity.interaction.UserCommandInteraction.getTarget"]},{"name":"open suspend fun getTargetOrNull(): Message?","description":"dev.kord.core.entity.interaction.MessageCommandInteraction.getTargetOrNull","location":"core/dev.kord.core.entity.interaction/-message-command-interaction/get-target-or-null.html","searchKeys":["getTargetOrNull","open suspend fun getTargetOrNull(): Message?","dev.kord.core.entity.interaction.MessageCommandInteraction.getTargetOrNull"]},{"name":"open suspend fun getTargetOrNull(): User?","description":"dev.kord.core.entity.interaction.UserCommandInteraction.getTargetOrNull","location":"core/dev.kord.core.entity.interaction/-user-command-interaction/get-target-or-null.html","searchKeys":["getTargetOrNull","open suspend fun getTargetOrNull(): User?","dev.kord.core.entity.interaction.UserCommandInteraction.getTargetOrNull"]},{"name":"open suspend fun getTemplate(code: String): Template","description":"dev.kord.core.behavior.GuildBehavior.getTemplate","location":"core/dev.kord.core.behavior/-guild-behavior/get-template.html","searchKeys":["getTemplate","open suspend fun getTemplate(code: String): Template","dev.kord.core.behavior.GuildBehavior.getTemplate"]},{"name":"open suspend fun getTemplate(code: String): Template","description":"dev.kord.core.supplier.EntitySupplier.getTemplate","location":"core/dev.kord.core.supplier/-entity-supplier/get-template.html","searchKeys":["getTemplate","open suspend fun getTemplate(code: String): Template","dev.kord.core.supplier.EntitySupplier.getTemplate"]},{"name":"open suspend fun getTemplateOrNull(code: String): Template?","description":"dev.kord.core.behavior.GuildBehavior.getTemplateOrNull","location":"core/dev.kord.core.behavior/-guild-behavior/get-template-or-null.html","searchKeys":["getTemplateOrNull","open suspend fun getTemplateOrNull(code: String): Template?","dev.kord.core.behavior.GuildBehavior.getTemplateOrNull"]},{"name":"open suspend fun getThread(): ThreadChannel","description":"dev.kord.core.behavior.ThreadMemberBehavior.getThread","location":"core/dev.kord.core.behavior/-thread-member-behavior/get-thread.html","searchKeys":["getThread","open suspend fun getThread(): ThreadChannel","dev.kord.core.behavior.ThreadMemberBehavior.getThread"]},{"name":"open suspend fun getThreadOrNull(): ThreadChannel?","description":"dev.kord.core.behavior.ThreadMemberBehavior.getThreadOrNull","location":"core/dev.kord.core.behavior/-thread-member-behavior/get-thread-or-null.html","searchKeys":["getThreadOrNull","open suspend fun getThreadOrNull(): ThreadChannel?","dev.kord.core.behavior.ThreadMemberBehavior.getThreadOrNull"]},{"name":"open suspend fun getUser(): User","description":"dev.kord.core.event.guild.GuildScheduledEventUserEvent.getUser","location":"core/dev.kord.core.event.guild/-guild-scheduled-event-user-event/get-user.html","searchKeys":["getUser","open suspend fun getUser(): User","dev.kord.core.event.guild.GuildScheduledEventUserEvent.getUser"]},{"name":"open suspend fun getUser(id: Snowflake): User","description":"dev.kord.core.supplier.EntitySupplier.getUser","location":"core/dev.kord.core.supplier/-entity-supplier/get-user.html","searchKeys":["getUser","open suspend fun getUser(id: Snowflake): User","dev.kord.core.supplier.EntitySupplier.getUser"]},{"name":"open suspend fun getUserOrNull(): User?","description":"dev.kord.core.event.guild.GuildScheduledEventUserEvent.getUserOrNull","location":"core/dev.kord.core.event.guild/-guild-scheduled-event-user-event/get-user-or-null.html","searchKeys":["getUserOrNull","open suspend fun getUserOrNull(): User?","dev.kord.core.event.guild.GuildScheduledEventUserEvent.getUserOrNull"]},{"name":"open suspend fun getVanityUrl(): String?","description":"dev.kord.core.behavior.GuildBehavior.getVanityUrl","location":"core/dev.kord.core.behavior/-guild-behavior/get-vanity-url.html","searchKeys":["getVanityUrl","open suspend fun getVanityUrl(): String?","dev.kord.core.behavior.GuildBehavior.getVanityUrl"]},{"name":"open suspend fun getVoiceState(): VoiceState","description":"dev.kord.core.behavior.MemberBehavior.getVoiceState","location":"core/dev.kord.core.behavior/-member-behavior/get-voice-state.html","searchKeys":["getVoiceState","open suspend fun getVoiceState(): VoiceState","dev.kord.core.behavior.MemberBehavior.getVoiceState"]},{"name":"open suspend fun getVoiceStateOrNull(): VoiceState?","description":"dev.kord.core.behavior.MemberBehavior.getVoiceStateOrNull","location":"core/dev.kord.core.behavior/-member-behavior/get-voice-state-or-null.html","searchKeys":["getVoiceStateOrNull","open suspend fun getVoiceStateOrNull(): VoiceState?","dev.kord.core.behavior.MemberBehavior.getVoiceStateOrNull"]},{"name":"open suspend fun getWebhook(id: Snowflake): Webhook","description":"dev.kord.core.supplier.EntitySupplier.getWebhook","location":"core/dev.kord.core.supplier/-entity-supplier/get-webhook.html","searchKeys":["getWebhook","open suspend fun getWebhook(id: Snowflake): Webhook","dev.kord.core.supplier.EntitySupplier.getWebhook"]},{"name":"open suspend fun getWebhookMessage(webhookId: Snowflake, token: String, messageId: Snowflake, threadId: Snowflake? = null): Message","description":"dev.kord.core.supplier.EntitySupplier.getWebhookMessage","location":"core/dev.kord.core.supplier/-entity-supplier/get-webhook-message.html","searchKeys":["getWebhookMessage","open suspend fun getWebhookMessage(webhookId: Snowflake, token: String, messageId: Snowflake, threadId: Snowflake? = null): Message","dev.kord.core.supplier.EntitySupplier.getWebhookMessage"]},{"name":"open suspend fun getWebhookWithToken(id: Snowflake, token: String): Webhook","description":"dev.kord.core.supplier.EntitySupplier.getWebhookWithToken","location":"core/dev.kord.core.supplier/-entity-supplier/get-webhook-with-token.html","searchKeys":["getWebhookWithToken","open suspend fun getWebhookWithToken(id: Snowflake, token: String): Webhook","dev.kord.core.supplier.EntitySupplier.getWebhookWithToken"]},{"name":"open suspend fun getWelcomeScreen(): WelcomeScreen","description":"dev.kord.core.behavior.GuildBehavior.getWelcomeScreen","location":"core/dev.kord.core.behavior/-guild-behavior/get-welcome-screen.html","searchKeys":["getWelcomeScreen","open suspend fun getWelcomeScreen(): WelcomeScreen","dev.kord.core.behavior.GuildBehavior.getWelcomeScreen"]},{"name":"open suspend fun getWelcomeScreenOrNull(): WelcomeScreen?","description":"dev.kord.core.behavior.GuildBehavior.getWelcomeScreenOrNull","location":"core/dev.kord.core.behavior/-guild-behavior/get-welcome-screen-or-null.html","searchKeys":["getWelcomeScreenOrNull","open suspend fun getWelcomeScreenOrNull(): WelcomeScreen?","dev.kord.core.behavior.GuildBehavior.getWelcomeScreenOrNull"]},{"name":"open suspend fun getWidget(): GuildWidget","description":"dev.kord.core.behavior.GuildBehavior.getWidget","location":"core/dev.kord.core.behavior/-guild-behavior/get-widget.html","searchKeys":["getWidget","open suspend fun getWidget(): GuildWidget","dev.kord.core.behavior.GuildBehavior.getWidget"]},{"name":"open suspend fun getWidgetOrNull(): GuildWidget?","description":"dev.kord.core.behavior.GuildBehavior.getWidgetOrNull","location":"core/dev.kord.core.behavior/-guild-behavior/get-widget-or-null.html","searchKeys":["getWidgetOrNull","open suspend fun getWidgetOrNull(): GuildWidget?","dev.kord.core.behavior.GuildBehavior.getWidgetOrNull"]},{"name":"open suspend fun join()","description":"dev.kord.core.behavior.channel.threads.ThreadChannelBehavior.join","location":"core/dev.kord.core.behavior.channel.threads/-thread-channel-behavior/join.html","searchKeys":["join","open suspend fun join()","dev.kord.core.behavior.channel.threads.ThreadChannelBehavior.join"]},{"name":"open suspend fun kick(reason: String? = null)","description":"dev.kord.core.behavior.MemberBehavior.kick","location":"core/dev.kord.core.behavior/-member-behavior/kick.html","searchKeys":["kick","open suspend fun kick(reason: String? = null)","dev.kord.core.behavior.MemberBehavior.kick"]},{"name":"open suspend fun kick(userId: Snowflake, reason: String? = null)","description":"dev.kord.core.behavior.GuildBehavior.kick","location":"core/dev.kord.core.behavior/-guild-behavior/kick.html","searchKeys":["kick","open suspend fun kick(userId: Snowflake, reason: String? = null)","dev.kord.core.behavior.GuildBehavior.kick"]},{"name":"open suspend fun leave()","description":"dev.kord.core.behavior.GuildBehavior.leave","location":"core/dev.kord.core.behavior/-guild-behavior/leave.html","searchKeys":["leave","open suspend fun leave()","dev.kord.core.behavior.GuildBehavior.leave"]},{"name":"open suspend fun leave()","description":"dev.kord.core.behavior.channel.threads.ThreadChannelBehavior.leave","location":"core/dev.kord.core.behavior.channel.threads/-thread-channel-behavior/leave.html","searchKeys":["leave","open suspend fun leave()","dev.kord.core.behavior.channel.threads.ThreadChannelBehavior.leave"]},{"name":"open suspend fun pin(reason: String? = null)","description":"dev.kord.core.behavior.MessageBehavior.pin","location":"core/dev.kord.core.behavior/-message-behavior/pin.html","searchKeys":["pin","open suspend fun pin(reason: String? = null)","dev.kord.core.behavior.MessageBehavior.pin"]},{"name":"open suspend fun prune(days: Int = 7, reason: String? = null): Int","description":"dev.kord.core.behavior.GuildBehavior.prune","location":"core/dev.kord.core.behavior/-guild-behavior/prune.html","searchKeys":["prune","open suspend fun prune(days: Int = 7, reason: String? = null): Int","dev.kord.core.behavior.GuildBehavior.prune"]},{"name":"open suspend fun publish(): Message","description":"dev.kord.core.behavior.MessageBehavior.publish","location":"core/dev.kord.core.behavior/-message-behavior/publish.html","searchKeys":["publish","open suspend fun publish(): Message","dev.kord.core.behavior.MessageBehavior.publish"]},{"name":"open suspend fun removeRole(roleId: Snowflake, reason: String? = null)","description":"dev.kord.core.behavior.MemberBehavior.removeRole","location":"core/dev.kord.core.behavior/-member-behavior/remove-role.html","searchKeys":["removeRole","open suspend fun removeRole(roleId: Snowflake, reason: String? = null)","dev.kord.core.behavior.MemberBehavior.removeRole"]},{"name":"open suspend fun removeUser(userId: Snowflake)","description":"dev.kord.core.behavior.channel.threads.ThreadChannelBehavior.removeUser","location":"core/dev.kord.core.behavior.channel.threads/-thread-channel-behavior/remove-user.html","searchKeys":["removeUser","open suspend fun removeUser(userId: Snowflake)","dev.kord.core.behavior.channel.threads.ThreadChannelBehavior.removeUser"]},{"name":"open suspend fun sendAll(command: Command)","description":"dev.kord.core.gateway.MasterGateway.sendAll","location":"core/dev.kord.core.gateway/-master-gateway/send-all.html","searchKeys":["sendAll","open suspend fun sendAll(command: Command)","dev.kord.core.gateway.MasterGateway.sendAll"]},{"name":"open suspend fun startPrivateThread(name: String, archiveDuration: ArchiveDuration = ArchiveDuration.Day, builder: StartThreadBuilder.() -> Unit = {}): TextChannelThread","description":"dev.kord.core.behavior.channel.TextChannelBehavior.startPrivateThread","location":"core/dev.kord.core.behavior.channel/-text-channel-behavior/start-private-thread.html","searchKeys":["startPrivateThread","open suspend fun startPrivateThread(name: String, archiveDuration: ArchiveDuration = ArchiveDuration.Day, builder: StartThreadBuilder.() -> Unit = {}): TextChannelThread","dev.kord.core.behavior.channel.TextChannelBehavior.startPrivateThread"]},{"name":"open suspend fun startPublicThread(name: String, archiveDuration: ArchiveDuration = ArchiveDuration.Day, builder: StartThreadBuilder.() -> Unit = {}): TextChannelThread","description":"dev.kord.core.behavior.channel.TextChannelBehavior.startPublicThread","location":"core/dev.kord.core.behavior.channel/-text-channel-behavior/start-public-thread.html","searchKeys":["startPublicThread","open suspend fun startPublicThread(name: String, archiveDuration: ArchiveDuration = ArchiveDuration.Day, builder: StartThreadBuilder.() -> Unit = {}): TextChannelThread","dev.kord.core.behavior.channel.TextChannelBehavior.startPublicThread"]},{"name":"open suspend fun startPublicThread(name: String, archiveDuration: ArchiveDuration = ArchiveDuration.Day, reason: String? = null): NewsChannelThread","description":"dev.kord.core.behavior.channel.NewsChannelBehavior.startPublicThread","location":"core/dev.kord.core.behavior.channel/-news-channel-behavior/start-public-thread.html","searchKeys":["startPublicThread","open suspend fun startPublicThread(name: String, archiveDuration: ArchiveDuration = ArchiveDuration.Day, reason: String? = null): NewsChannelThread","dev.kord.core.behavior.channel.NewsChannelBehavior.startPublicThread"]},{"name":"open suspend fun startPublicThreadWithMessage(messageId: Snowflake, name: String, archiveDuration: ArchiveDuration = ArchiveDuration.Day, reason: String? = null): NewsChannelThread","description":"dev.kord.core.behavior.channel.NewsChannelBehavior.startPublicThreadWithMessage","location":"core/dev.kord.core.behavior.channel/-news-channel-behavior/start-public-thread-with-message.html","searchKeys":["startPublicThreadWithMessage","open suspend fun startPublicThreadWithMessage(messageId: Snowflake, name: String, archiveDuration: ArchiveDuration = ArchiveDuration.Day, reason: String? = null): NewsChannelThread","dev.kord.core.behavior.channel.NewsChannelBehavior.startPublicThreadWithMessage"]},{"name":"open suspend fun startPublicThreadWithMessage(messageId: Snowflake, name: String, archiveDuration: ArchiveDuration = ArchiveDuration.Day, reason: String? = null): TextChannelThread","description":"dev.kord.core.behavior.channel.TextChannelBehavior.startPublicThreadWithMessage","location":"core/dev.kord.core.behavior.channel/-text-channel-behavior/start-public-thread-with-message.html","searchKeys":["startPublicThreadWithMessage","open suspend fun startPublicThreadWithMessage(messageId: Snowflake, name: String, archiveDuration: ArchiveDuration = ArchiveDuration.Day, reason: String? = null): TextChannelThread","dev.kord.core.behavior.channel.TextChannelBehavior.startPublicThreadWithMessage"]},{"name":"open suspend fun startWithConfig(configuration: GatewayConfiguration)","description":"dev.kord.core.gateway.MasterGateway.startWithConfig","location":"core/dev.kord.core.gateway/-master-gateway/start-with-config.html","searchKeys":["startWithConfig","open suspend fun startWithConfig(configuration: GatewayConfiguration)","dev.kord.core.gateway.MasterGateway.startWithConfig"]},{"name":"open suspend fun stopAll()","description":"dev.kord.core.gateway.MasterGateway.stopAll","location":"core/dev.kord.core.gateway/-master-gateway/stop-all.html","searchKeys":["stopAll","open suspend fun stopAll()","dev.kord.core.gateway.MasterGateway.stopAll"]},{"name":"open suspend fun sync(): Template","description":"dev.kord.core.behavior.TemplateBehavior.sync","location":"core/dev.kord.core.behavior/-template-behavior/sync.html","searchKeys":["sync","open suspend fun sync(): Template","dev.kord.core.behavior.TemplateBehavior.sync"]},{"name":"open suspend fun type()","description":"dev.kord.core.behavior.channel.MessageChannelBehavior.type","location":"core/dev.kord.core.behavior.channel/-message-channel-behavior/type.html","searchKeys":["type","open suspend fun type()","dev.kord.core.behavior.channel.MessageChannelBehavior.type"]},{"name":"open suspend fun typeUntil(instant: Instant)","description":"dev.kord.core.behavior.channel.MessageChannelBehavior.typeUntil","location":"core/dev.kord.core.behavior.channel/-message-channel-behavior/type-until.html","searchKeys":["typeUntil","open suspend fun typeUntil(instant: Instant)","dev.kord.core.behavior.channel.MessageChannelBehavior.typeUntil"]},{"name":"open suspend fun typeUntil(mark: TimeMark)","description":"dev.kord.core.behavior.channel.MessageChannelBehavior.typeUntil","location":"core/dev.kord.core.behavior.channel/-message-channel-behavior/type-until.html","searchKeys":["typeUntil","open suspend fun typeUntil(mark: TimeMark)","dev.kord.core.behavior.channel.MessageChannelBehavior.typeUntil"]},{"name":"open suspend fun unban(userId: Snowflake, reason: String? = null)","description":"dev.kord.core.behavior.GuildBehavior.unban","location":"core/dev.kord.core.behavior/-guild-behavior/unban.html","searchKeys":["unban","open suspend fun unban(userId: Snowflake, reason: String? = null)","dev.kord.core.behavior.GuildBehavior.unban"]},{"name":"open suspend fun unpin(reason: String? = null)","description":"dev.kord.core.behavior.MessageBehavior.unpin","location":"core/dev.kord.core.behavior/-message-behavior/unpin.html","searchKeys":["unpin","open suspend fun unpin(reason: String? = null)","dev.kord.core.behavior.MessageBehavior.unpin"]},{"name":"open suspend override fun asAutoModerationRule(): KeywordAutoModerationRule","description":"dev.kord.core.behavior.automoderation.KeywordAutoModerationRuleBehavior.asAutoModerationRule","location":"core/dev.kord.core.behavior.automoderation/-keyword-auto-moderation-rule-behavior/as-auto-moderation-rule.html","searchKeys":["asAutoModerationRule","open suspend override fun asAutoModerationRule(): KeywordAutoModerationRule","dev.kord.core.behavior.automoderation.KeywordAutoModerationRuleBehavior.asAutoModerationRule"]},{"name":"open suspend override fun asAutoModerationRule(): KeywordPresetAutoModerationRule","description":"dev.kord.core.behavior.automoderation.KeywordPresetAutoModerationRuleBehavior.asAutoModerationRule","location":"core/dev.kord.core.behavior.automoderation/-keyword-preset-auto-moderation-rule-behavior/as-auto-moderation-rule.html","searchKeys":["asAutoModerationRule","open suspend override fun asAutoModerationRule(): KeywordPresetAutoModerationRule","dev.kord.core.behavior.automoderation.KeywordPresetAutoModerationRuleBehavior.asAutoModerationRule"]},{"name":"open suspend override fun asAutoModerationRule(): MentionSpamAutoModerationRule","description":"dev.kord.core.behavior.automoderation.MentionSpamAutoModerationRuleBehavior.asAutoModerationRule","location":"core/dev.kord.core.behavior.automoderation/-mention-spam-auto-moderation-rule-behavior/as-auto-moderation-rule.html","searchKeys":["asAutoModerationRule","open suspend override fun asAutoModerationRule(): MentionSpamAutoModerationRule","dev.kord.core.behavior.automoderation.MentionSpamAutoModerationRuleBehavior.asAutoModerationRule"]},{"name":"open suspend override fun asAutoModerationRule(): SpamAutoModerationRule","description":"dev.kord.core.behavior.automoderation.SpamAutoModerationRuleBehavior.asAutoModerationRule","location":"core/dev.kord.core.behavior.automoderation/-spam-auto-moderation-rule-behavior/as-auto-moderation-rule.html","searchKeys":["asAutoModerationRule","open suspend override fun asAutoModerationRule(): SpamAutoModerationRule","dev.kord.core.behavior.automoderation.SpamAutoModerationRuleBehavior.asAutoModerationRule"]},{"name":"open suspend override fun asAutoModerationRuleOrNull(): KeywordAutoModerationRule?","description":"dev.kord.core.behavior.automoderation.KeywordAutoModerationRuleBehavior.asAutoModerationRuleOrNull","location":"core/dev.kord.core.behavior.automoderation/-keyword-auto-moderation-rule-behavior/as-auto-moderation-rule-or-null.html","searchKeys":["asAutoModerationRuleOrNull","open suspend override fun asAutoModerationRuleOrNull(): KeywordAutoModerationRule?","dev.kord.core.behavior.automoderation.KeywordAutoModerationRuleBehavior.asAutoModerationRuleOrNull"]},{"name":"open suspend override fun asAutoModerationRuleOrNull(): KeywordPresetAutoModerationRule?","description":"dev.kord.core.behavior.automoderation.KeywordPresetAutoModerationRuleBehavior.asAutoModerationRuleOrNull","location":"core/dev.kord.core.behavior.automoderation/-keyword-preset-auto-moderation-rule-behavior/as-auto-moderation-rule-or-null.html","searchKeys":["asAutoModerationRuleOrNull","open suspend override fun asAutoModerationRuleOrNull(): KeywordPresetAutoModerationRule?","dev.kord.core.behavior.automoderation.KeywordPresetAutoModerationRuleBehavior.asAutoModerationRuleOrNull"]},{"name":"open suspend override fun asAutoModerationRuleOrNull(): MentionSpamAutoModerationRule?","description":"dev.kord.core.behavior.automoderation.MentionSpamAutoModerationRuleBehavior.asAutoModerationRuleOrNull","location":"core/dev.kord.core.behavior.automoderation/-mention-spam-auto-moderation-rule-behavior/as-auto-moderation-rule-or-null.html","searchKeys":["asAutoModerationRuleOrNull","open suspend override fun asAutoModerationRuleOrNull(): MentionSpamAutoModerationRule?","dev.kord.core.behavior.automoderation.MentionSpamAutoModerationRuleBehavior.asAutoModerationRuleOrNull"]},{"name":"open suspend override fun asAutoModerationRuleOrNull(): SpamAutoModerationRule?","description":"dev.kord.core.behavior.automoderation.SpamAutoModerationRuleBehavior.asAutoModerationRuleOrNull","location":"core/dev.kord.core.behavior.automoderation/-spam-auto-moderation-rule-behavior/as-auto-moderation-rule-or-null.html","searchKeys":["asAutoModerationRuleOrNull","open suspend override fun asAutoModerationRuleOrNull(): SpamAutoModerationRule?","dev.kord.core.behavior.automoderation.SpamAutoModerationRuleBehavior.asAutoModerationRuleOrNull"]},{"name":"open suspend override fun asChannel(): CategorizableChannel","description":"dev.kord.core.behavior.channel.CategorizableChannelBehavior.asChannel","location":"core/dev.kord.core.behavior.channel/-categorizable-channel-behavior/as-channel.html","searchKeys":["asChannel","open suspend override fun asChannel(): CategorizableChannel","dev.kord.core.behavior.channel.CategorizableChannelBehavior.asChannel"]},{"name":"open suspend override fun asChannel(): Category","description":"dev.kord.core.behavior.channel.CategoryBehavior.asChannel","location":"core/dev.kord.core.behavior.channel/-category-behavior/as-channel.html","searchKeys":["asChannel","open suspend override fun asChannel(): Category","dev.kord.core.behavior.channel.CategoryBehavior.asChannel"]},{"name":"open suspend override fun asChannel(): Category","description":"dev.kord.core.entity.channel.Category.asChannel","location":"core/dev.kord.core.entity.channel/-category/as-channel.html","searchKeys":["asChannel","open suspend override fun asChannel(): Category","dev.kord.core.entity.channel.Category.asChannel"]},{"name":"open suspend override fun asChannel(): Channel","description":"dev.kord.core.entity.channel.ResolvedChannel.asChannel","location":"core/dev.kord.core.entity.channel/-resolved-channel/as-channel.html","searchKeys":["asChannel","open suspend override fun asChannel(): Channel","dev.kord.core.entity.channel.ResolvedChannel.asChannel"]},{"name":"open suspend override fun asChannel(): GuildChannel","description":"dev.kord.core.behavior.channel.GuildChannelBehavior.asChannel","location":"core/dev.kord.core.behavior.channel/-guild-channel-behavior/as-channel.html","searchKeys":["asChannel","open suspend override fun asChannel(): GuildChannel","dev.kord.core.behavior.channel.GuildChannelBehavior.asChannel"]},{"name":"open suspend override fun asChannel(): GuildMessageChannel","description":"dev.kord.core.behavior.channel.GuildMessageChannelBehavior.asChannel","location":"core/dev.kord.core.behavior.channel/-guild-message-channel-behavior/as-channel.html","searchKeys":["asChannel","open suspend override fun asChannel(): GuildMessageChannel","dev.kord.core.behavior.channel.GuildMessageChannelBehavior.asChannel"]},{"name":"open suspend override fun asChannel(): MessageChannel","description":"dev.kord.core.behavior.channel.MessageChannelBehavior.asChannel","location":"core/dev.kord.core.behavior.channel/-message-channel-behavior/as-channel.html","searchKeys":["asChannel","open suspend override fun asChannel(): MessageChannel","dev.kord.core.behavior.channel.MessageChannelBehavior.asChannel"]},{"name":"open suspend override fun asChannel(): MessageChannel","description":"dev.kord.core.entity.channel.DmChannel.asChannel","location":"core/dev.kord.core.entity.channel/-dm-channel/as-channel.html","searchKeys":["asChannel","open suspend override fun asChannel(): MessageChannel","dev.kord.core.entity.channel.DmChannel.asChannel"]},{"name":"open suspend override fun asChannel(): NewsChannel","description":"dev.kord.core.behavior.channel.NewsChannelBehavior.asChannel","location":"core/dev.kord.core.behavior.channel/-news-channel-behavior/as-channel.html","searchKeys":["asChannel","open suspend override fun asChannel(): NewsChannel","dev.kord.core.behavior.channel.NewsChannelBehavior.asChannel"]},{"name":"open suspend override fun asChannel(): NewsChannel","description":"dev.kord.core.entity.channel.NewsChannel.asChannel","location":"core/dev.kord.core.entity.channel/-news-channel/as-channel.html","searchKeys":["asChannel","open suspend override fun asChannel(): NewsChannel","dev.kord.core.entity.channel.NewsChannel.asChannel"]},{"name":"open suspend override fun asChannel(): NewsChannelThread","description":"dev.kord.core.entity.channel.thread.NewsChannelThread.asChannel","location":"core/dev.kord.core.entity.channel.thread/-news-channel-thread/as-channel.html","searchKeys":["asChannel","open suspend override fun asChannel(): NewsChannelThread","dev.kord.core.entity.channel.thread.NewsChannelThread.asChannel"]},{"name":"open suspend override fun asChannel(): StageChannel","description":"dev.kord.core.entity.channel.StageChannel.asChannel","location":"core/dev.kord.core.entity.channel/-stage-channel/as-channel.html","searchKeys":["asChannel","open suspend override fun asChannel(): StageChannel","dev.kord.core.entity.channel.StageChannel.asChannel"]},{"name":"open suspend override fun asChannel(): TextChannel","description":"dev.kord.core.behavior.channel.TextChannelBehavior.asChannel","location":"core/dev.kord.core.behavior.channel/-text-channel-behavior/as-channel.html","searchKeys":["asChannel","open suspend override fun asChannel(): TextChannel","dev.kord.core.behavior.channel.TextChannelBehavior.asChannel"]},{"name":"open suspend override fun asChannel(): TextChannel","description":"dev.kord.core.entity.channel.TextChannel.asChannel","location":"core/dev.kord.core.entity.channel/-text-channel/as-channel.html","searchKeys":["asChannel","open suspend override fun asChannel(): TextChannel","dev.kord.core.entity.channel.TextChannel.asChannel"]},{"name":"open suspend override fun asChannel(): TextChannelThread","description":"dev.kord.core.entity.channel.thread.TextChannelThread.asChannel","location":"core/dev.kord.core.entity.channel.thread/-text-channel-thread/as-channel.html","searchKeys":["asChannel","open suspend override fun asChannel(): TextChannelThread","dev.kord.core.entity.channel.thread.TextChannelThread.asChannel"]},{"name":"open suspend override fun asChannel(): ThreadChannel","description":"dev.kord.core.behavior.channel.threads.ThreadChannelBehavior.asChannel","location":"core/dev.kord.core.behavior.channel.threads/-thread-channel-behavior/as-channel.html","searchKeys":["asChannel","open suspend override fun asChannel(): ThreadChannel","dev.kord.core.behavior.channel.threads.ThreadChannelBehavior.asChannel"]},{"name":"open suspend override fun asChannel(): ThreadParentChannel","description":"dev.kord.core.behavior.channel.threads.ThreadParentChannelBehavior.asChannel","location":"core/dev.kord.core.behavior.channel.threads/-thread-parent-channel-behavior/as-channel.html","searchKeys":["asChannel","open suspend override fun asChannel(): ThreadParentChannel","dev.kord.core.behavior.channel.threads.ThreadParentChannelBehavior.asChannel"]},{"name":"open suspend override fun asChannel(): TopGuildChannel","description":"dev.kord.core.behavior.channel.TopGuildChannelBehavior.asChannel","location":"core/dev.kord.core.behavior.channel/-top-guild-channel-behavior/as-channel.html","searchKeys":["asChannel","open suspend override fun asChannel(): TopGuildChannel","dev.kord.core.behavior.channel.TopGuildChannelBehavior.asChannel"]},{"name":"open suspend override fun asChannel(): TopGuildMessageChannel","description":"dev.kord.core.behavior.channel.TopGuildMessageChannelBehavior.asChannel","location":"core/dev.kord.core.behavior.channel/-top-guild-message-channel-behavior/as-channel.html","searchKeys":["asChannel","open suspend override fun asChannel(): TopGuildMessageChannel","dev.kord.core.behavior.channel.TopGuildMessageChannelBehavior.asChannel"]},{"name":"open suspend override fun asChannel(): VoiceChannel","description":"dev.kord.core.behavior.channel.VoiceChannelBehavior.asChannel","location":"core/dev.kord.core.behavior.channel/-voice-channel-behavior/as-channel.html","searchKeys":["asChannel","open suspend override fun asChannel(): VoiceChannel","dev.kord.core.behavior.channel.VoiceChannelBehavior.asChannel"]},{"name":"open suspend override fun asChannel(): VoiceChannel","description":"dev.kord.core.entity.channel.VoiceChannel.asChannel","location":"core/dev.kord.core.entity.channel/-voice-channel/as-channel.html","searchKeys":["asChannel","open suspend override fun asChannel(): VoiceChannel","dev.kord.core.entity.channel.VoiceChannel.asChannel"]},{"name":"open suspend override fun asChannelOrNull(): CategorizableChannel?","description":"dev.kord.core.behavior.channel.CategorizableChannelBehavior.asChannelOrNull","location":"core/dev.kord.core.behavior.channel/-categorizable-channel-behavior/as-channel-or-null.html","searchKeys":["asChannelOrNull","open suspend override fun asChannelOrNull(): CategorizableChannel?","dev.kord.core.behavior.channel.CategorizableChannelBehavior.asChannelOrNull"]},{"name":"open suspend override fun asChannelOrNull(): Category","description":"dev.kord.core.entity.channel.Category.asChannelOrNull","location":"core/dev.kord.core.entity.channel/-category/as-channel-or-null.html","searchKeys":["asChannelOrNull","open suspend override fun asChannelOrNull(): Category","dev.kord.core.entity.channel.Category.asChannelOrNull"]},{"name":"open suspend override fun asChannelOrNull(): Category?","description":"dev.kord.core.behavior.channel.CategoryBehavior.asChannelOrNull","location":"core/dev.kord.core.behavior.channel/-category-behavior/as-channel-or-null.html","searchKeys":["asChannelOrNull","open suspend override fun asChannelOrNull(): Category?","dev.kord.core.behavior.channel.CategoryBehavior.asChannelOrNull"]},{"name":"open suspend override fun asChannelOrNull(): Channel","description":"dev.kord.core.entity.channel.ResolvedChannel.asChannelOrNull","location":"core/dev.kord.core.entity.channel/-resolved-channel/as-channel-or-null.html","searchKeys":["asChannelOrNull","open suspend override fun asChannelOrNull(): Channel","dev.kord.core.entity.channel.ResolvedChannel.asChannelOrNull"]},{"name":"open suspend override fun asChannelOrNull(): GuildChannel?","description":"dev.kord.core.behavior.channel.GuildChannelBehavior.asChannelOrNull","location":"core/dev.kord.core.behavior.channel/-guild-channel-behavior/as-channel-or-null.html","searchKeys":["asChannelOrNull","open suspend override fun asChannelOrNull(): GuildChannel?","dev.kord.core.behavior.channel.GuildChannelBehavior.asChannelOrNull"]},{"name":"open suspend override fun asChannelOrNull(): GuildMessageChannel?","description":"dev.kord.core.behavior.channel.GuildMessageChannelBehavior.asChannelOrNull","location":"core/dev.kord.core.behavior.channel/-guild-message-channel-behavior/as-channel-or-null.html","searchKeys":["asChannelOrNull","open suspend override fun asChannelOrNull(): GuildMessageChannel?","dev.kord.core.behavior.channel.GuildMessageChannelBehavior.asChannelOrNull"]},{"name":"open suspend override fun asChannelOrNull(): MessageChannel","description":"dev.kord.core.entity.channel.DmChannel.asChannelOrNull","location":"core/dev.kord.core.entity.channel/-dm-channel/as-channel-or-null.html","searchKeys":["asChannelOrNull","open suspend override fun asChannelOrNull(): MessageChannel","dev.kord.core.entity.channel.DmChannel.asChannelOrNull"]},{"name":"open suspend override fun asChannelOrNull(): MessageChannel?","description":"dev.kord.core.behavior.channel.MessageChannelBehavior.asChannelOrNull","location":"core/dev.kord.core.behavior.channel/-message-channel-behavior/as-channel-or-null.html","searchKeys":["asChannelOrNull","open suspend override fun asChannelOrNull(): MessageChannel?","dev.kord.core.behavior.channel.MessageChannelBehavior.asChannelOrNull"]},{"name":"open suspend override fun asChannelOrNull(): NewsChannel","description":"dev.kord.core.entity.channel.NewsChannel.asChannelOrNull","location":"core/dev.kord.core.entity.channel/-news-channel/as-channel-or-null.html","searchKeys":["asChannelOrNull","open suspend override fun asChannelOrNull(): NewsChannel","dev.kord.core.entity.channel.NewsChannel.asChannelOrNull"]},{"name":"open suspend override fun asChannelOrNull(): NewsChannel?","description":"dev.kord.core.behavior.channel.NewsChannelBehavior.asChannelOrNull","location":"core/dev.kord.core.behavior.channel/-news-channel-behavior/as-channel-or-null.html","searchKeys":["asChannelOrNull","open suspend override fun asChannelOrNull(): NewsChannel?","dev.kord.core.behavior.channel.NewsChannelBehavior.asChannelOrNull"]},{"name":"open suspend override fun asChannelOrNull(): NewsChannelThread?","description":"dev.kord.core.entity.channel.thread.NewsChannelThread.asChannelOrNull","location":"core/dev.kord.core.entity.channel.thread/-news-channel-thread/as-channel-or-null.html","searchKeys":["asChannelOrNull","open suspend override fun asChannelOrNull(): NewsChannelThread?","dev.kord.core.entity.channel.thread.NewsChannelThread.asChannelOrNull"]},{"name":"open suspend override fun asChannelOrNull(): StageChannel","description":"dev.kord.core.entity.channel.StageChannel.asChannelOrNull","location":"core/dev.kord.core.entity.channel/-stage-channel/as-channel-or-null.html","searchKeys":["asChannelOrNull","open suspend override fun asChannelOrNull(): StageChannel","dev.kord.core.entity.channel.StageChannel.asChannelOrNull"]},{"name":"open suspend override fun asChannelOrNull(): TextChannel","description":"dev.kord.core.entity.channel.TextChannel.asChannelOrNull","location":"core/dev.kord.core.entity.channel/-text-channel/as-channel-or-null.html","searchKeys":["asChannelOrNull","open suspend override fun asChannelOrNull(): TextChannel","dev.kord.core.entity.channel.TextChannel.asChannelOrNull"]},{"name":"open suspend override fun asChannelOrNull(): TextChannel?","description":"dev.kord.core.behavior.channel.TextChannelBehavior.asChannelOrNull","location":"core/dev.kord.core.behavior.channel/-text-channel-behavior/as-channel-or-null.html","searchKeys":["asChannelOrNull","open suspend override fun asChannelOrNull(): TextChannel?","dev.kord.core.behavior.channel.TextChannelBehavior.asChannelOrNull"]},{"name":"open suspend override fun asChannelOrNull(): TextChannelThread","description":"dev.kord.core.entity.channel.thread.TextChannelThread.asChannelOrNull","location":"core/dev.kord.core.entity.channel.thread/-text-channel-thread/as-channel-or-null.html","searchKeys":["asChannelOrNull","open suspend override fun asChannelOrNull(): TextChannelThread","dev.kord.core.entity.channel.thread.TextChannelThread.asChannelOrNull"]},{"name":"open suspend override fun asChannelOrNull(): ThreadChannel?","description":"dev.kord.core.behavior.channel.threads.ThreadChannelBehavior.asChannelOrNull","location":"core/dev.kord.core.behavior.channel.threads/-thread-channel-behavior/as-channel-or-null.html","searchKeys":["asChannelOrNull","open suspend override fun asChannelOrNull(): ThreadChannel?","dev.kord.core.behavior.channel.threads.ThreadChannelBehavior.asChannelOrNull"]},{"name":"open suspend override fun asChannelOrNull(): ThreadParentChannel?","description":"dev.kord.core.behavior.channel.threads.ThreadParentChannelBehavior.asChannelOrNull","location":"core/dev.kord.core.behavior.channel.threads/-thread-parent-channel-behavior/as-channel-or-null.html","searchKeys":["asChannelOrNull","open suspend override fun asChannelOrNull(): ThreadParentChannel?","dev.kord.core.behavior.channel.threads.ThreadParentChannelBehavior.asChannelOrNull"]},{"name":"open suspend override fun asChannelOrNull(): TopGuildChannel?","description":"dev.kord.core.behavior.channel.TopGuildChannelBehavior.asChannelOrNull","location":"core/dev.kord.core.behavior.channel/-top-guild-channel-behavior/as-channel-or-null.html","searchKeys":["asChannelOrNull","open suspend override fun asChannelOrNull(): TopGuildChannel?","dev.kord.core.behavior.channel.TopGuildChannelBehavior.asChannelOrNull"]},{"name":"open suspend override fun asChannelOrNull(): TopGuildMessageChannel?","description":"dev.kord.core.behavior.channel.TopGuildMessageChannelBehavior.asChannelOrNull","location":"core/dev.kord.core.behavior.channel/-top-guild-message-channel-behavior/as-channel-or-null.html","searchKeys":["asChannelOrNull","open suspend override fun asChannelOrNull(): TopGuildMessageChannel?","dev.kord.core.behavior.channel.TopGuildMessageChannelBehavior.asChannelOrNull"]},{"name":"open suspend override fun asChannelOrNull(): VoiceChannel","description":"dev.kord.core.entity.channel.VoiceChannel.asChannelOrNull","location":"core/dev.kord.core.entity.channel/-voice-channel/as-channel-or-null.html","searchKeys":["asChannelOrNull","open suspend override fun asChannelOrNull(): VoiceChannel","dev.kord.core.entity.channel.VoiceChannel.asChannelOrNull"]},{"name":"open suspend override fun asChannelOrNull(): VoiceChannel?","description":"dev.kord.core.behavior.channel.VoiceChannelBehavior.asChannelOrNull","location":"core/dev.kord.core.behavior.channel/-voice-channel-behavior/as-channel-or-null.html","searchKeys":["asChannelOrNull","open suspend override fun asChannelOrNull(): VoiceChannel?","dev.kord.core.behavior.channel.VoiceChannelBehavior.asChannelOrNull"]},{"name":"open suspend override fun asGuild(): Guild","description":"dev.kord.core.entity.Guild.asGuild","location":"core/dev.kord.core.entity/-guild/as-guild.html","searchKeys":["asGuild","open suspend override fun asGuild(): Guild","dev.kord.core.entity.Guild.asGuild"]},{"name":"open suspend override fun asGuildOrNull(): Guild","description":"dev.kord.core.entity.Guild.asGuildOrNull","location":"core/dev.kord.core.entity/-guild/as-guild-or-null.html","searchKeys":["asGuildOrNull","open suspend override fun asGuildOrNull(): Guild","dev.kord.core.entity.Guild.asGuildOrNull"]},{"name":"open suspend override fun asGuildScheduledEvent(): GuildScheduledEvent","description":"dev.kord.core.entity.GuildScheduledEvent.asGuildScheduledEvent","location":"core/dev.kord.core.entity/-guild-scheduled-event/as-guild-scheduled-event.html","searchKeys":["asGuildScheduledEvent","open suspend override fun asGuildScheduledEvent(): GuildScheduledEvent","dev.kord.core.entity.GuildScheduledEvent.asGuildScheduledEvent"]},{"name":"open suspend override fun asGuildScheduledEventOrNull(): GuildScheduledEvent","description":"dev.kord.core.entity.GuildScheduledEvent.asGuildScheduledEventOrNull","location":"core/dev.kord.core.entity/-guild-scheduled-event/as-guild-scheduled-event-or-null.html","searchKeys":["asGuildScheduledEventOrNull","open suspend override fun asGuildScheduledEventOrNull(): GuildScheduledEvent","dev.kord.core.entity.GuildScheduledEvent.asGuildScheduledEventOrNull"]},{"name":"open suspend override fun asMember(): Member","description":"dev.kord.core.entity.Member.asMember","location":"core/dev.kord.core.entity/-member/as-member.html","searchKeys":["asMember","open suspend override fun asMember(): Member","dev.kord.core.entity.Member.asMember"]},{"name":"open suspend override fun asMember(guildId: Snowflake): Member","description":"dev.kord.core.entity.Member.asMember","location":"core/dev.kord.core.entity/-member/as-member.html","searchKeys":["asMember","open suspend override fun asMember(guildId: Snowflake): Member","dev.kord.core.entity.Member.asMember"]},{"name":"open suspend override fun asMemberOrNull(): Member","description":"dev.kord.core.entity.Member.asMemberOrNull","location":"core/dev.kord.core.entity/-member/as-member-or-null.html","searchKeys":["asMemberOrNull","open suspend override fun asMemberOrNull(): Member","dev.kord.core.entity.Member.asMemberOrNull"]},{"name":"open suspend override fun asMemberOrNull(guildId: Snowflake): Member","description":"dev.kord.core.entity.Member.asMemberOrNull","location":"core/dev.kord.core.entity/-member/as-member-or-null.html","searchKeys":["asMemberOrNull","open suspend override fun asMemberOrNull(guildId: Snowflake): Member","dev.kord.core.entity.Member.asMemberOrNull"]},{"name":"open suspend override fun asMessage(): Message","description":"dev.kord.core.entity.Message.asMessage","location":"core/dev.kord.core.entity/-message/as-message.html","searchKeys":["asMessage","open suspend override fun asMessage(): Message","dev.kord.core.entity.Message.asMessage"]},{"name":"open suspend override fun asMessageOrNull(): Message","description":"dev.kord.core.entity.Message.asMessageOrNull","location":"core/dev.kord.core.entity/-message/as-message-or-null.html","searchKeys":["asMessageOrNull","open suspend override fun asMessageOrNull(): Message","dev.kord.core.entity.Message.asMessageOrNull"]},{"name":"open suspend override fun asRole(): Role","description":"dev.kord.core.entity.Role.asRole","location":"core/dev.kord.core.entity/-role/as-role.html","searchKeys":["asRole","open suspend override fun asRole(): Role","dev.kord.core.entity.Role.asRole"]},{"name":"open suspend override fun asRoleOrNull(): Role","description":"dev.kord.core.entity.Role.asRoleOrNull","location":"core/dev.kord.core.entity/-role/as-role-or-null.html","searchKeys":["asRoleOrNull","open suspend override fun asRoleOrNull(): Role","dev.kord.core.entity.Role.asRoleOrNull"]},{"name":"open suspend override fun asStageInstance(): StageInstance","description":"dev.kord.core.entity.StageInstance.asStageInstance","location":"core/dev.kord.core.entity/-stage-instance/as-stage-instance.html","searchKeys":["asStageInstance","open suspend override fun asStageInstance(): StageInstance","dev.kord.core.entity.StageInstance.asStageInstance"]},{"name":"open suspend override fun asStageInstanceOrNull(): StageInstance","description":"dev.kord.core.entity.StageInstance.asStageInstanceOrNull","location":"core/dev.kord.core.entity/-stage-instance/as-stage-instance-or-null.html","searchKeys":["asStageInstanceOrNull","open suspend override fun asStageInstanceOrNull(): StageInstance","dev.kord.core.entity.StageInstance.asStageInstanceOrNull"]},{"name":"open suspend override fun asSticker(): Sticker","description":"dev.kord.core.entity.GuildSticker.asSticker","location":"core/dev.kord.core.entity/-guild-sticker/as-sticker.html","searchKeys":["asSticker","open suspend override fun asSticker(): Sticker","dev.kord.core.entity.GuildSticker.asSticker"]},{"name":"open suspend override fun asStickerOrNull(): Sticker","description":"dev.kord.core.entity.GuildSticker.asStickerOrNull","location":"core/dev.kord.core.entity/-guild-sticker/as-sticker-or-null.html","searchKeys":["asStickerOrNull","open suspend override fun asStickerOrNull(): Sticker","dev.kord.core.entity.GuildSticker.asStickerOrNull"]},{"name":"open suspend override fun asUser(): User","description":"dev.kord.core.entity.Member.asUser","location":"core/dev.kord.core.entity/-member/as-user.html","searchKeys":["asUser","open suspend override fun asUser(): User","dev.kord.core.entity.Member.asUser"]},{"name":"open suspend override fun asUser(): User","description":"dev.kord.core.entity.User.asUser","location":"core/dev.kord.core.entity/-user/as-user.html","searchKeys":["asUser","open suspend override fun asUser(): User","dev.kord.core.entity.User.asUser"]},{"name":"open suspend override fun asUserOrNull(): User","description":"dev.kord.core.entity.Member.asUserOrNull","location":"core/dev.kord.core.entity/-member/as-user-or-null.html","searchKeys":["asUserOrNull","open suspend override fun asUserOrNull(): User","dev.kord.core.entity.Member.asUserOrNull"]},{"name":"open suspend override fun asUserOrNull(): User","description":"dev.kord.core.entity.User.asUserOrNull","location":"core/dev.kord.core.entity/-user/as-user-or-null.html","searchKeys":["asUserOrNull","open suspend override fun asUserOrNull(): User","dev.kord.core.entity.User.asUserOrNull"]},{"name":"open suspend override fun delete()","description":"dev.kord.core.behavior.GlobalApplicationCommandBehavior.delete","location":"core/dev.kord.core.behavior/-global-application-command-behavior/delete.html","searchKeys":["delete","open suspend override fun delete()","dev.kord.core.behavior.GlobalApplicationCommandBehavior.delete"]},{"name":"open suspend override fun delete()","description":"dev.kord.core.behavior.GuildApplicationCommandBehavior.delete","location":"core/dev.kord.core.behavior/-guild-application-command-behavior/delete.html","searchKeys":["delete","open suspend override fun delete()","dev.kord.core.behavior.GuildApplicationCommandBehavior.delete"]},{"name":"open suspend override fun delete(reason: String?)","description":"dev.kord.core.behavior.channel.threads.ThreadChannelBehavior.delete","location":"core/dev.kord.core.behavior.channel.threads/-thread-channel-behavior/delete.html","searchKeys":["delete","open suspend override fun delete(reason: String?)","dev.kord.core.behavior.channel.threads.ThreadChannelBehavior.delete"]},{"name":"open suspend override fun edit(builder: suspend ChatInputModifyBuilder.() -> Unit): GlobalChatInputCommand","description":"dev.kord.core.behavior.GlobalChatInputCommandBehavior.edit","location":"core/dev.kord.core.behavior/-global-chat-input-command-behavior/edit.html","searchKeys":["edit","open suspend override fun edit(builder: suspend ChatInputModifyBuilder.() -> Unit): GlobalChatInputCommand","dev.kord.core.behavior.GlobalChatInputCommandBehavior.edit"]},{"name":"open suspend override fun edit(builder: suspend ChatInputModifyBuilder.() -> Unit): GuildChatInputCommand","description":"dev.kord.core.behavior.GuildChatInputCommandBehavior.edit","location":"core/dev.kord.core.behavior/-guild-chat-input-command-behavior/edit.html","searchKeys":["edit","open suspend override fun edit(builder: suspend ChatInputModifyBuilder.() -> Unit): GuildChatInputCommand","dev.kord.core.behavior.GuildChatInputCommandBehavior.edit"]},{"name":"open suspend override fun edit(builder: suspend MessageCommandModifyBuilder.() -> Unit): GlobalMessageCommand","description":"dev.kord.core.behavior.GlobalMessageCommandBehavior.edit","location":"core/dev.kord.core.behavior/-global-message-command-behavior/edit.html","searchKeys":["edit","open suspend override fun edit(builder: suspend MessageCommandModifyBuilder.() -> Unit): GlobalMessageCommand","dev.kord.core.behavior.GlobalMessageCommandBehavior.edit"]},{"name":"open suspend override fun edit(builder: suspend MessageCommandModifyBuilder.() -> Unit): GuildMessageCommand","description":"dev.kord.core.behavior.GuildMessageCommandBehavior.edit","location":"core/dev.kord.core.behavior/-guild-message-command-behavior/edit.html","searchKeys":["edit","open suspend override fun edit(builder: suspend MessageCommandModifyBuilder.() -> Unit): GuildMessageCommand","dev.kord.core.behavior.GuildMessageCommandBehavior.edit"]},{"name":"open suspend override fun edit(builder: suspend UserCommandModifyBuilder.() -> Unit): GlobalUserCommand","description":"dev.kord.core.behavior.GlobalUserCommandBehavior.edit","location":"core/dev.kord.core.behavior/-global-user-command-behavior/edit.html","searchKeys":["edit","open suspend override fun edit(builder: suspend UserCommandModifyBuilder.() -> Unit): GlobalUserCommand","dev.kord.core.behavior.GlobalUserCommandBehavior.edit"]},{"name":"open suspend override fun edit(builder: suspend UserCommandModifyBuilder.() -> Unit): GuildUserCommand","description":"dev.kord.core.behavior.GuildUserCommandBehavior.edit","location":"core/dev.kord.core.behavior/-guild-user-command-behavior/edit.html","searchKeys":["edit","open suspend override fun edit(builder: suspend UserCommandModifyBuilder.() -> Unit): GuildUserCommand","dev.kord.core.behavior.GuildUserCommandBehavior.edit"]},{"name":"open suspend override fun fetchChannel(): CategorizableChannel","description":"dev.kord.core.behavior.channel.CategorizableChannelBehavior.fetchChannel","location":"core/dev.kord.core.behavior.channel/-categorizable-channel-behavior/fetch-channel.html","searchKeys":["fetchChannel","open suspend override fun fetchChannel(): CategorizableChannel","dev.kord.core.behavior.channel.CategorizableChannelBehavior.fetchChannel"]},{"name":"open suspend override fun fetchChannel(): Category","description":"dev.kord.core.behavior.channel.CategoryBehavior.fetchChannel","location":"core/dev.kord.core.behavior.channel/-category-behavior/fetch-channel.html","searchKeys":["fetchChannel","open suspend override fun fetchChannel(): Category","dev.kord.core.behavior.channel.CategoryBehavior.fetchChannel"]},{"name":"open suspend override fun fetchChannel(): GuildChannel","description":"dev.kord.core.behavior.channel.GuildChannelBehavior.fetchChannel","location":"core/dev.kord.core.behavior.channel/-guild-channel-behavior/fetch-channel.html","searchKeys":["fetchChannel","open suspend override fun fetchChannel(): GuildChannel","dev.kord.core.behavior.channel.GuildChannelBehavior.fetchChannel"]},{"name":"open suspend override fun fetchChannel(): GuildMessageChannel","description":"dev.kord.core.behavior.channel.GuildMessageChannelBehavior.fetchChannel","location":"core/dev.kord.core.behavior.channel/-guild-message-channel-behavior/fetch-channel.html","searchKeys":["fetchChannel","open suspend override fun fetchChannel(): GuildMessageChannel","dev.kord.core.behavior.channel.GuildMessageChannelBehavior.fetchChannel"]},{"name":"open suspend override fun fetchChannel(): MessageChannel","description":"dev.kord.core.behavior.channel.MessageChannelBehavior.fetchChannel","location":"core/dev.kord.core.behavior.channel/-message-channel-behavior/fetch-channel.html","searchKeys":["fetchChannel","open suspend override fun fetchChannel(): MessageChannel","dev.kord.core.behavior.channel.MessageChannelBehavior.fetchChannel"]},{"name":"open suspend override fun fetchChannel(): NewsChannel","description":"dev.kord.core.behavior.channel.NewsChannelBehavior.fetchChannel","location":"core/dev.kord.core.behavior.channel/-news-channel-behavior/fetch-channel.html","searchKeys":["fetchChannel","open suspend override fun fetchChannel(): NewsChannel","dev.kord.core.behavior.channel.NewsChannelBehavior.fetchChannel"]},{"name":"open suspend override fun fetchChannel(): TextChannel","description":"dev.kord.core.behavior.channel.TextChannelBehavior.fetchChannel","location":"core/dev.kord.core.behavior.channel/-text-channel-behavior/fetch-channel.html","searchKeys":["fetchChannel","open suspend override fun fetchChannel(): TextChannel","dev.kord.core.behavior.channel.TextChannelBehavior.fetchChannel"]},{"name":"open suspend override fun fetchChannel(): ThreadParentChannel","description":"dev.kord.core.behavior.channel.threads.ThreadParentChannelBehavior.fetchChannel","location":"core/dev.kord.core.behavior.channel.threads/-thread-parent-channel-behavior/fetch-channel.html","searchKeys":["fetchChannel","open suspend override fun fetchChannel(): ThreadParentChannel","dev.kord.core.behavior.channel.threads.ThreadParentChannelBehavior.fetchChannel"]},{"name":"open suspend override fun fetchChannel(): TopGuildChannel","description":"dev.kord.core.behavior.channel.TopGuildChannelBehavior.fetchChannel","location":"core/dev.kord.core.behavior.channel/-top-guild-channel-behavior/fetch-channel.html","searchKeys":["fetchChannel","open suspend override fun fetchChannel(): TopGuildChannel","dev.kord.core.behavior.channel.TopGuildChannelBehavior.fetchChannel"]},{"name":"open suspend override fun fetchChannel(): TopGuildMessageChannel","description":"dev.kord.core.behavior.channel.TopGuildMessageChannelBehavior.fetchChannel","location":"core/dev.kord.core.behavior.channel/-top-guild-message-channel-behavior/fetch-channel.html","searchKeys":["fetchChannel","open suspend override fun fetchChannel(): TopGuildMessageChannel","dev.kord.core.behavior.channel.TopGuildMessageChannelBehavior.fetchChannel"]},{"name":"open suspend override fun fetchChannel(): VoiceChannel","description":"dev.kord.core.behavior.channel.VoiceChannelBehavior.fetchChannel","location":"core/dev.kord.core.behavior.channel/-voice-channel-behavior/fetch-channel.html","searchKeys":["fetchChannel","open suspend override fun fetchChannel(): VoiceChannel","dev.kord.core.behavior.channel.VoiceChannelBehavior.fetchChannel"]},{"name":"open suspend override fun fetchChannelOrNull(): CategorizableChannel?","description":"dev.kord.core.behavior.channel.CategorizableChannelBehavior.fetchChannelOrNull","location":"core/dev.kord.core.behavior.channel/-categorizable-channel-behavior/fetch-channel-or-null.html","searchKeys":["fetchChannelOrNull","open suspend override fun fetchChannelOrNull(): CategorizableChannel?","dev.kord.core.behavior.channel.CategorizableChannelBehavior.fetchChannelOrNull"]},{"name":"open suspend override fun fetchChannelOrNull(): Category?","description":"dev.kord.core.behavior.channel.CategoryBehavior.fetchChannelOrNull","location":"core/dev.kord.core.behavior.channel/-category-behavior/fetch-channel-or-null.html","searchKeys":["fetchChannelOrNull","open suspend override fun fetchChannelOrNull(): Category?","dev.kord.core.behavior.channel.CategoryBehavior.fetchChannelOrNull"]},{"name":"open suspend override fun fetchChannelOrNull(): GuildChannel?","description":"dev.kord.core.behavior.channel.GuildChannelBehavior.fetchChannelOrNull","location":"core/dev.kord.core.behavior.channel/-guild-channel-behavior/fetch-channel-or-null.html","searchKeys":["fetchChannelOrNull","open suspend override fun fetchChannelOrNull(): GuildChannel?","dev.kord.core.behavior.channel.GuildChannelBehavior.fetchChannelOrNull"]},{"name":"open suspend override fun fetchChannelOrNull(): GuildMessageChannel?","description":"dev.kord.core.behavior.channel.GuildMessageChannelBehavior.fetchChannelOrNull","location":"core/dev.kord.core.behavior.channel/-guild-message-channel-behavior/fetch-channel-or-null.html","searchKeys":["fetchChannelOrNull","open suspend override fun fetchChannelOrNull(): GuildMessageChannel?","dev.kord.core.behavior.channel.GuildMessageChannelBehavior.fetchChannelOrNull"]},{"name":"open suspend override fun fetchChannelOrNull(): MessageChannel?","description":"dev.kord.core.behavior.channel.MessageChannelBehavior.fetchChannelOrNull","location":"core/dev.kord.core.behavior.channel/-message-channel-behavior/fetch-channel-or-null.html","searchKeys":["fetchChannelOrNull","open suspend override fun fetchChannelOrNull(): MessageChannel?","dev.kord.core.behavior.channel.MessageChannelBehavior.fetchChannelOrNull"]},{"name":"open suspend override fun fetchChannelOrNull(): NewsChannel?","description":"dev.kord.core.behavior.channel.NewsChannelBehavior.fetchChannelOrNull","location":"core/dev.kord.core.behavior.channel/-news-channel-behavior/fetch-channel-or-null.html","searchKeys":["fetchChannelOrNull","open suspend override fun fetchChannelOrNull(): NewsChannel?","dev.kord.core.behavior.channel.NewsChannelBehavior.fetchChannelOrNull"]},{"name":"open suspend override fun fetchChannelOrNull(): TextChannel?","description":"dev.kord.core.behavior.channel.TextChannelBehavior.fetchChannelOrNull","location":"core/dev.kord.core.behavior.channel/-text-channel-behavior/fetch-channel-or-null.html","searchKeys":["fetchChannelOrNull","open suspend override fun fetchChannelOrNull(): TextChannel?","dev.kord.core.behavior.channel.TextChannelBehavior.fetchChannelOrNull"]},{"name":"open suspend override fun fetchChannelOrNull(): ThreadParentChannel?","description":"dev.kord.core.behavior.channel.threads.ThreadParentChannelBehavior.fetchChannelOrNull","location":"core/dev.kord.core.behavior.channel.threads/-thread-parent-channel-behavior/fetch-channel-or-null.html","searchKeys":["fetchChannelOrNull","open suspend override fun fetchChannelOrNull(): ThreadParentChannel?","dev.kord.core.behavior.channel.threads.ThreadParentChannelBehavior.fetchChannelOrNull"]},{"name":"open suspend override fun fetchChannelOrNull(): TopGuildChannel?","description":"dev.kord.core.behavior.channel.TopGuildChannelBehavior.fetchChannelOrNull","location":"core/dev.kord.core.behavior.channel/-top-guild-channel-behavior/fetch-channel-or-null.html","searchKeys":["fetchChannelOrNull","open suspend override fun fetchChannelOrNull(): TopGuildChannel?","dev.kord.core.behavior.channel.TopGuildChannelBehavior.fetchChannelOrNull"]},{"name":"open suspend override fun fetchChannelOrNull(): TopGuildMessageChannel?","description":"dev.kord.core.behavior.channel.TopGuildMessageChannelBehavior.fetchChannelOrNull","location":"core/dev.kord.core.behavior.channel/-top-guild-message-channel-behavior/fetch-channel-or-null.html","searchKeys":["fetchChannelOrNull","open suspend override fun fetchChannelOrNull(): TopGuildMessageChannel?","dev.kord.core.behavior.channel.TopGuildMessageChannelBehavior.fetchChannelOrNull"]},{"name":"open suspend override fun fetchChannelOrNull(): VoiceChannel?","description":"dev.kord.core.behavior.channel.VoiceChannelBehavior.fetchChannelOrNull","location":"core/dev.kord.core.behavior.channel/-voice-channel-behavior/fetch-channel-or-null.html","searchKeys":["fetchChannelOrNull","open suspend override fun fetchChannelOrNull(): VoiceChannel?","dev.kord.core.behavior.channel.VoiceChannelBehavior.fetchChannelOrNull"]},{"name":"open suspend override fun getApplicationCommandPermissionsOrNull(applicationId: Snowflake, guildId: Snowflake, commandId: Snowflake): ApplicationCommandPermissions","description":"dev.kord.core.supplier.RestEntitySupplier.getApplicationCommandPermissionsOrNull","location":"core/dev.kord.core.supplier/-rest-entity-supplier/get-application-command-permissions-or-null.html","searchKeys":["getApplicationCommandPermissionsOrNull","open suspend override fun getApplicationCommandPermissionsOrNull(applicationId: Snowflake, guildId: Snowflake, commandId: Snowflake): ApplicationCommandPermissions","dev.kord.core.supplier.RestEntitySupplier.getApplicationCommandPermissionsOrNull"]},{"name":"open suspend override fun getApplicationCommandPermissionsOrNull(applicationId: Snowflake, guildId: Snowflake, commandId: Snowflake): ApplicationCommandPermissions?","description":"dev.kord.core.supplier.CacheEntitySupplier.getApplicationCommandPermissionsOrNull","location":"core/dev.kord.core.supplier/-cache-entity-supplier/get-application-command-permissions-or-null.html","searchKeys":["getApplicationCommandPermissionsOrNull","open suspend override fun getApplicationCommandPermissionsOrNull(applicationId: Snowflake, guildId: Snowflake, commandId: Snowflake): ApplicationCommandPermissions?","dev.kord.core.supplier.CacheEntitySupplier.getApplicationCommandPermissionsOrNull"]},{"name":"open suspend override fun getApplicationCommandPermissionsOrNull(applicationId: Snowflake, guildId: Snowflake, commandId: Snowflake): ApplicationCommandPermissions?","description":"dev.kord.core.supplier.StoreEntitySupplier.getApplicationCommandPermissionsOrNull","location":"core/dev.kord.core.supplier/-store-entity-supplier/get-application-command-permissions-or-null.html","searchKeys":["getApplicationCommandPermissionsOrNull","open suspend override fun getApplicationCommandPermissionsOrNull(applicationId: Snowflake, guildId: Snowflake, commandId: Snowflake): ApplicationCommandPermissions?","dev.kord.core.supplier.StoreEntitySupplier.getApplicationCommandPermissionsOrNull"]},{"name":"open suspend override fun getAutoModerationRuleOrNull(guildId: Snowflake, ruleId: Snowflake): AutoModerationRule?","description":"dev.kord.core.supplier.CacheEntitySupplier.getAutoModerationRuleOrNull","location":"core/dev.kord.core.supplier/-cache-entity-supplier/get-auto-moderation-rule-or-null.html","searchKeys":["getAutoModerationRuleOrNull","open suspend override fun getAutoModerationRuleOrNull(guildId: Snowflake, ruleId: Snowflake): AutoModerationRule?","dev.kord.core.supplier.CacheEntitySupplier.getAutoModerationRuleOrNull"]},{"name":"open suspend override fun getAutoModerationRuleOrNull(guildId: Snowflake, ruleId: Snowflake): AutoModerationRule?","description":"dev.kord.core.supplier.RestEntitySupplier.getAutoModerationRuleOrNull","location":"core/dev.kord.core.supplier/-rest-entity-supplier/get-auto-moderation-rule-or-null.html","searchKeys":["getAutoModerationRuleOrNull","open suspend override fun getAutoModerationRuleOrNull(guildId: Snowflake, ruleId: Snowflake): AutoModerationRule?","dev.kord.core.supplier.RestEntitySupplier.getAutoModerationRuleOrNull"]},{"name":"open suspend override fun getAutoModerationRuleOrNull(guildId: Snowflake, ruleId: Snowflake): AutoModerationRule?","description":"dev.kord.core.supplier.StoreEntitySupplier.getAutoModerationRuleOrNull","location":"core/dev.kord.core.supplier/-store-entity-supplier/get-auto-moderation-rule-or-null.html","searchKeys":["getAutoModerationRuleOrNull","open suspend override fun getAutoModerationRuleOrNull(guildId: Snowflake, ruleId: Snowflake): AutoModerationRule?","dev.kord.core.supplier.StoreEntitySupplier.getAutoModerationRuleOrNull"]},{"name":"open suspend override fun getChannel(): GuildMessageChannel","description":"dev.kord.core.behavior.interaction.GuildInteractionBehavior.getChannel","location":"core/dev.kord.core.behavior.interaction/-guild-interaction-behavior/get-channel.html","searchKeys":["getChannel","open suspend override fun getChannel(): GuildMessageChannel","dev.kord.core.behavior.interaction.GuildInteractionBehavior.getChannel"]},{"name":"open suspend override fun getChannelOrNull(): GuildMessageChannel?","description":"dev.kord.core.behavior.interaction.GuildInteractionBehavior.getChannelOrNull","location":"core/dev.kord.core.behavior.interaction/-guild-interaction-behavior/get-channel-or-null.html","searchKeys":["getChannelOrNull","open suspend override fun getChannelOrNull(): GuildMessageChannel?","dev.kord.core.behavior.interaction.GuildInteractionBehavior.getChannelOrNull"]},{"name":"open suspend override fun getChannelOrNull(): TopGuildChannel?","description":"dev.kord.core.event.guild.GuildScheduledEventUpdateEvent.getChannelOrNull","location":"core/dev.kord.core.event.guild/-guild-scheduled-event-update-event/get-channel-or-null.html","searchKeys":["getChannelOrNull","open suspend override fun getChannelOrNull(): TopGuildChannel?","dev.kord.core.event.guild.GuildScheduledEventUpdateEvent.getChannelOrNull"]},{"name":"open suspend override fun getChannelOrNull(id: Snowflake): Channel?","description":"dev.kord.core.supplier.CacheEntitySupplier.getChannelOrNull","location":"core/dev.kord.core.supplier/-cache-entity-supplier/get-channel-or-null.html","searchKeys":["getChannelOrNull","open suspend override fun getChannelOrNull(id: Snowflake): Channel?","dev.kord.core.supplier.CacheEntitySupplier.getChannelOrNull"]},{"name":"open suspend override fun getChannelOrNull(id: Snowflake): Channel?","description":"dev.kord.core.supplier.RestEntitySupplier.getChannelOrNull","location":"core/dev.kord.core.supplier/-rest-entity-supplier/get-channel-or-null.html","searchKeys":["getChannelOrNull","open suspend override fun getChannelOrNull(id: Snowflake): Channel?","dev.kord.core.supplier.RestEntitySupplier.getChannelOrNull"]},{"name":"open suspend override fun getChannelOrNull(id: Snowflake): Channel?","description":"dev.kord.core.supplier.StoreEntitySupplier.getChannelOrNull","location":"core/dev.kord.core.supplier/-store-entity-supplier/get-channel-or-null.html","searchKeys":["getChannelOrNull","open suspend override fun getChannelOrNull(id: Snowflake): Channel?","dev.kord.core.supplier.StoreEntitySupplier.getChannelOrNull"]},{"name":"open suspend override fun getEmojiOrNull(guildId: Snowflake, emojiId: Snowflake): GuildEmoji?","description":"dev.kord.core.supplier.CacheEntitySupplier.getEmojiOrNull","location":"core/dev.kord.core.supplier/-cache-entity-supplier/get-emoji-or-null.html","searchKeys":["getEmojiOrNull","open suspend override fun getEmojiOrNull(guildId: Snowflake, emojiId: Snowflake): GuildEmoji?","dev.kord.core.supplier.CacheEntitySupplier.getEmojiOrNull"]},{"name":"open suspend override fun getEmojiOrNull(guildId: Snowflake, emojiId: Snowflake): GuildEmoji?","description":"dev.kord.core.supplier.RestEntitySupplier.getEmojiOrNull","location":"core/dev.kord.core.supplier/-rest-entity-supplier/get-emoji-or-null.html","searchKeys":["getEmojiOrNull","open suspend override fun getEmojiOrNull(guildId: Snowflake, emojiId: Snowflake): GuildEmoji?","dev.kord.core.supplier.RestEntitySupplier.getEmojiOrNull"]},{"name":"open suspend override fun getEmojiOrNull(guildId: Snowflake, emojiId: Snowflake): GuildEmoji?","description":"dev.kord.core.supplier.StoreEntitySupplier.getEmojiOrNull","location":"core/dev.kord.core.supplier/-store-entity-supplier/get-emoji-or-null.html","searchKeys":["getEmojiOrNull","open suspend override fun getEmojiOrNull(guildId: Snowflake, emojiId: Snowflake): GuildEmoji?","dev.kord.core.supplier.StoreEntitySupplier.getEmojiOrNull"]},{"name":"open suspend override fun getFollowupMessageOrNull(applicationId: Snowflake, interactionToken: String, messageId: Snowflake): FollowupMessage?","description":"dev.kord.core.supplier.CacheEntitySupplier.getFollowupMessageOrNull","location":"core/dev.kord.core.supplier/-cache-entity-supplier/get-followup-message-or-null.html","searchKeys":["getFollowupMessageOrNull","open suspend override fun getFollowupMessageOrNull(applicationId: Snowflake, interactionToken: String, messageId: Snowflake): FollowupMessage?","dev.kord.core.supplier.CacheEntitySupplier.getFollowupMessageOrNull"]},{"name":"open suspend override fun getFollowupMessageOrNull(applicationId: Snowflake, interactionToken: String, messageId: Snowflake): FollowupMessage?","description":"dev.kord.core.supplier.RestEntitySupplier.getFollowupMessageOrNull","location":"core/dev.kord.core.supplier/-rest-entity-supplier/get-followup-message-or-null.html","searchKeys":["getFollowupMessageOrNull","open suspend override fun getFollowupMessageOrNull(applicationId: Snowflake, interactionToken: String, messageId: Snowflake): FollowupMessage?","dev.kord.core.supplier.RestEntitySupplier.getFollowupMessageOrNull"]},{"name":"open suspend override fun getFollowupMessageOrNull(applicationId: Snowflake, interactionToken: String, messageId: Snowflake): FollowupMessage?","description":"dev.kord.core.supplier.StoreEntitySupplier.getFollowupMessageOrNull","location":"core/dev.kord.core.supplier/-store-entity-supplier/get-followup-message-or-null.html","searchKeys":["getFollowupMessageOrNull","open suspend override fun getFollowupMessageOrNull(applicationId: Snowflake, interactionToken: String, messageId: Snowflake): FollowupMessage?","dev.kord.core.supplier.StoreEntitySupplier.getFollowupMessageOrNull"]},{"name":"open suspend override fun getGlobalApplicationCommandOrNull(applicationId: Snowflake, commandId: Snowflake): GlobalApplicationCommand?","description":"dev.kord.core.supplier.CacheEntitySupplier.getGlobalApplicationCommandOrNull","location":"core/dev.kord.core.supplier/-cache-entity-supplier/get-global-application-command-or-null.html","searchKeys":["getGlobalApplicationCommandOrNull","open suspend override fun getGlobalApplicationCommandOrNull(applicationId: Snowflake, commandId: Snowflake): GlobalApplicationCommand?","dev.kord.core.supplier.CacheEntitySupplier.getGlobalApplicationCommandOrNull"]},{"name":"open suspend override fun getGlobalApplicationCommandOrNull(applicationId: Snowflake, commandId: Snowflake): GlobalApplicationCommand?","description":"dev.kord.core.supplier.RestEntitySupplier.getGlobalApplicationCommandOrNull","location":"core/dev.kord.core.supplier/-rest-entity-supplier/get-global-application-command-or-null.html","searchKeys":["getGlobalApplicationCommandOrNull","open suspend override fun getGlobalApplicationCommandOrNull(applicationId: Snowflake, commandId: Snowflake): GlobalApplicationCommand?","dev.kord.core.supplier.RestEntitySupplier.getGlobalApplicationCommandOrNull"]},{"name":"open suspend override fun getGlobalApplicationCommandOrNull(applicationId: Snowflake, commandId: Snowflake): GlobalApplicationCommand?","description":"dev.kord.core.supplier.StoreEntitySupplier.getGlobalApplicationCommandOrNull","location":"core/dev.kord.core.supplier/-store-entity-supplier/get-global-application-command-or-null.html","searchKeys":["getGlobalApplicationCommandOrNull","open suspend override fun getGlobalApplicationCommandOrNull(applicationId: Snowflake, commandId: Snowflake): GlobalApplicationCommand?","dev.kord.core.supplier.StoreEntitySupplier.getGlobalApplicationCommandOrNull"]},{"name":"open suspend override fun getGuildApplicationCommandOrNull(applicationId: Snowflake, guildId: Snowflake, commandId: Snowflake): GuildApplicationCommand?","description":"dev.kord.core.supplier.CacheEntitySupplier.getGuildApplicationCommandOrNull","location":"core/dev.kord.core.supplier/-cache-entity-supplier/get-guild-application-command-or-null.html","searchKeys":["getGuildApplicationCommandOrNull","open suspend override fun getGuildApplicationCommandOrNull(applicationId: Snowflake, guildId: Snowflake, commandId: Snowflake): GuildApplicationCommand?","dev.kord.core.supplier.CacheEntitySupplier.getGuildApplicationCommandOrNull"]},{"name":"open suspend override fun getGuildApplicationCommandOrNull(applicationId: Snowflake, guildId: Snowflake, commandId: Snowflake): GuildApplicationCommand?","description":"dev.kord.core.supplier.RestEntitySupplier.getGuildApplicationCommandOrNull","location":"core/dev.kord.core.supplier/-rest-entity-supplier/get-guild-application-command-or-null.html","searchKeys":["getGuildApplicationCommandOrNull","open suspend override fun getGuildApplicationCommandOrNull(applicationId: Snowflake, guildId: Snowflake, commandId: Snowflake): GuildApplicationCommand?","dev.kord.core.supplier.RestEntitySupplier.getGuildApplicationCommandOrNull"]},{"name":"open suspend override fun getGuildApplicationCommandOrNull(applicationId: Snowflake, guildId: Snowflake, commandId: Snowflake): GuildApplicationCommand?","description":"dev.kord.core.supplier.StoreEntitySupplier.getGuildApplicationCommandOrNull","location":"core/dev.kord.core.supplier/-store-entity-supplier/get-guild-application-command-or-null.html","searchKeys":["getGuildApplicationCommandOrNull","open suspend override fun getGuildApplicationCommandOrNull(applicationId: Snowflake, guildId: Snowflake, commandId: Snowflake): GuildApplicationCommand?","dev.kord.core.supplier.StoreEntitySupplier.getGuildApplicationCommandOrNull"]},{"name":"open suspend override fun getGuildBanOrNull(guildId: Snowflake, userId: Snowflake): Ban?","description":"dev.kord.core.supplier.CacheEntitySupplier.getGuildBanOrNull","location":"core/dev.kord.core.supplier/-cache-entity-supplier/get-guild-ban-or-null.html","searchKeys":["getGuildBanOrNull","open suspend override fun getGuildBanOrNull(guildId: Snowflake, userId: Snowflake): Ban?","dev.kord.core.supplier.CacheEntitySupplier.getGuildBanOrNull"]},{"name":"open suspend override fun getGuildBanOrNull(guildId: Snowflake, userId: Snowflake): Ban?","description":"dev.kord.core.supplier.RestEntitySupplier.getGuildBanOrNull","location":"core/dev.kord.core.supplier/-rest-entity-supplier/get-guild-ban-or-null.html","searchKeys":["getGuildBanOrNull","open suspend override fun getGuildBanOrNull(guildId: Snowflake, userId: Snowflake): Ban?","dev.kord.core.supplier.RestEntitySupplier.getGuildBanOrNull"]},{"name":"open suspend override fun getGuildBanOrNull(guildId: Snowflake, userId: Snowflake): Ban?","description":"dev.kord.core.supplier.StoreEntitySupplier.getGuildBanOrNull","location":"core/dev.kord.core.supplier/-store-entity-supplier/get-guild-ban-or-null.html","searchKeys":["getGuildBanOrNull","open suspend override fun getGuildBanOrNull(guildId: Snowflake, userId: Snowflake): Ban?","dev.kord.core.supplier.StoreEntitySupplier.getGuildBanOrNull"]},{"name":"open suspend override fun getGuildOrNull(id: Snowflake): Guild?","description":"dev.kord.core.supplier.CacheEntitySupplier.getGuildOrNull","location":"core/dev.kord.core.supplier/-cache-entity-supplier/get-guild-or-null.html","searchKeys":["getGuildOrNull","open suspend override fun getGuildOrNull(id: Snowflake): Guild?","dev.kord.core.supplier.CacheEntitySupplier.getGuildOrNull"]},{"name":"open suspend override fun getGuildOrNull(id: Snowflake): Guild?","description":"dev.kord.core.supplier.RestEntitySupplier.getGuildOrNull","location":"core/dev.kord.core.supplier/-rest-entity-supplier/get-guild-or-null.html","searchKeys":["getGuildOrNull","open suspend override fun getGuildOrNull(id: Snowflake): Guild?","dev.kord.core.supplier.RestEntitySupplier.getGuildOrNull"]},{"name":"open suspend override fun getGuildOrNull(id: Snowflake): Guild?","description":"dev.kord.core.supplier.StoreEntitySupplier.getGuildOrNull","location":"core/dev.kord.core.supplier/-store-entity-supplier/get-guild-or-null.html","searchKeys":["getGuildOrNull","open suspend override fun getGuildOrNull(id: Snowflake): Guild?","dev.kord.core.supplier.StoreEntitySupplier.getGuildOrNull"]},{"name":"open suspend override fun getGuildPreviewOrNull(guildId: Snowflake): GuildPreview?","description":"dev.kord.core.supplier.CacheEntitySupplier.getGuildPreviewOrNull","location":"core/dev.kord.core.supplier/-cache-entity-supplier/get-guild-preview-or-null.html","searchKeys":["getGuildPreviewOrNull","open suspend override fun getGuildPreviewOrNull(guildId: Snowflake): GuildPreview?","dev.kord.core.supplier.CacheEntitySupplier.getGuildPreviewOrNull"]},{"name":"open suspend override fun getGuildPreviewOrNull(guildId: Snowflake): GuildPreview?","description":"dev.kord.core.supplier.RestEntitySupplier.getGuildPreviewOrNull","location":"core/dev.kord.core.supplier/-rest-entity-supplier/get-guild-preview-or-null.html","searchKeys":["getGuildPreviewOrNull","open suspend override fun getGuildPreviewOrNull(guildId: Snowflake): GuildPreview?","dev.kord.core.supplier.RestEntitySupplier.getGuildPreviewOrNull"]},{"name":"open suspend override fun getGuildPreviewOrNull(guildId: Snowflake): GuildPreview?","description":"dev.kord.core.supplier.StoreEntitySupplier.getGuildPreviewOrNull","location":"core/dev.kord.core.supplier/-store-entity-supplier/get-guild-preview-or-null.html","searchKeys":["getGuildPreviewOrNull","open suspend override fun getGuildPreviewOrNull(guildId: Snowflake): GuildPreview?","dev.kord.core.supplier.StoreEntitySupplier.getGuildPreviewOrNull"]},{"name":"open suspend override fun getGuildScheduledEventOrNull(guildId: Snowflake, eventId: Snowflake): GuildScheduledEvent?","description":"dev.kord.core.supplier.CacheEntitySupplier.getGuildScheduledEventOrNull","location":"core/dev.kord.core.supplier/-cache-entity-supplier/get-guild-scheduled-event-or-null.html","searchKeys":["getGuildScheduledEventOrNull","open suspend override fun getGuildScheduledEventOrNull(guildId: Snowflake, eventId: Snowflake): GuildScheduledEvent?","dev.kord.core.supplier.CacheEntitySupplier.getGuildScheduledEventOrNull"]},{"name":"open suspend override fun getGuildScheduledEventOrNull(guildId: Snowflake, eventId: Snowflake): GuildScheduledEvent?","description":"dev.kord.core.supplier.RestEntitySupplier.getGuildScheduledEventOrNull","location":"core/dev.kord.core.supplier/-rest-entity-supplier/get-guild-scheduled-event-or-null.html","searchKeys":["getGuildScheduledEventOrNull","open suspend override fun getGuildScheduledEventOrNull(guildId: Snowflake, eventId: Snowflake): GuildScheduledEvent?","dev.kord.core.supplier.RestEntitySupplier.getGuildScheduledEventOrNull"]},{"name":"open suspend override fun getGuildScheduledEventOrNull(guildId: Snowflake, eventId: Snowflake): GuildScheduledEvent?","description":"dev.kord.core.supplier.StoreEntitySupplier.getGuildScheduledEventOrNull","location":"core/dev.kord.core.supplier/-store-entity-supplier/get-guild-scheduled-event-or-null.html","searchKeys":["getGuildScheduledEventOrNull","open suspend override fun getGuildScheduledEventOrNull(guildId: Snowflake, eventId: Snowflake): GuildScheduledEvent?","dev.kord.core.supplier.StoreEntitySupplier.getGuildScheduledEventOrNull"]},{"name":"open suspend override fun getGuildStickerOrNull(guildId: Snowflake, id: Snowflake): GuildSticker?","description":"dev.kord.core.supplier.CacheEntitySupplier.getGuildStickerOrNull","location":"core/dev.kord.core.supplier/-cache-entity-supplier/get-guild-sticker-or-null.html","searchKeys":["getGuildStickerOrNull","open suspend override fun getGuildStickerOrNull(guildId: Snowflake, id: Snowflake): GuildSticker?","dev.kord.core.supplier.CacheEntitySupplier.getGuildStickerOrNull"]},{"name":"open suspend override fun getGuildStickerOrNull(guildId: Snowflake, id: Snowflake): GuildSticker?","description":"dev.kord.core.supplier.RestEntitySupplier.getGuildStickerOrNull","location":"core/dev.kord.core.supplier/-rest-entity-supplier/get-guild-sticker-or-null.html","searchKeys":["getGuildStickerOrNull","open suspend override fun getGuildStickerOrNull(guildId: Snowflake, id: Snowflake): GuildSticker?","dev.kord.core.supplier.RestEntitySupplier.getGuildStickerOrNull"]},{"name":"open suspend override fun getGuildStickerOrNull(guildId: Snowflake, id: Snowflake): GuildSticker?","description":"dev.kord.core.supplier.StoreEntitySupplier.getGuildStickerOrNull","location":"core/dev.kord.core.supplier/-store-entity-supplier/get-guild-sticker-or-null.html","searchKeys":["getGuildStickerOrNull","open suspend override fun getGuildStickerOrNull(guildId: Snowflake, id: Snowflake): GuildSticker?","dev.kord.core.supplier.StoreEntitySupplier.getGuildStickerOrNull"]},{"name":"open suspend override fun getGuildWidgetOrNull(guildId: Snowflake): GuildWidget?","description":"dev.kord.core.supplier.CacheEntitySupplier.getGuildWidgetOrNull","location":"core/dev.kord.core.supplier/-cache-entity-supplier/get-guild-widget-or-null.html","searchKeys":["getGuildWidgetOrNull","open suspend override fun getGuildWidgetOrNull(guildId: Snowflake): GuildWidget?","dev.kord.core.supplier.CacheEntitySupplier.getGuildWidgetOrNull"]},{"name":"open suspend override fun getGuildWidgetOrNull(guildId: Snowflake): GuildWidget?","description":"dev.kord.core.supplier.RestEntitySupplier.getGuildWidgetOrNull","location":"core/dev.kord.core.supplier/-rest-entity-supplier/get-guild-widget-or-null.html","searchKeys":["getGuildWidgetOrNull","open suspend override fun getGuildWidgetOrNull(guildId: Snowflake): GuildWidget?","dev.kord.core.supplier.RestEntitySupplier.getGuildWidgetOrNull"]},{"name":"open suspend override fun getGuildWidgetOrNull(guildId: Snowflake): GuildWidget?","description":"dev.kord.core.supplier.StoreEntitySupplier.getGuildWidgetOrNull","location":"core/dev.kord.core.supplier/-store-entity-supplier/get-guild-widget-or-null.html","searchKeys":["getGuildWidgetOrNull","open suspend override fun getGuildWidgetOrNull(guildId: Snowflake): GuildWidget?","dev.kord.core.supplier.StoreEntitySupplier.getGuildWidgetOrNull"]},{"name":"open suspend override fun getMemberOrNull(guildId: Snowflake, userId: Snowflake): Member?","description":"dev.kord.core.supplier.CacheEntitySupplier.getMemberOrNull","location":"core/dev.kord.core.supplier/-cache-entity-supplier/get-member-or-null.html","searchKeys":["getMemberOrNull","open suspend override fun getMemberOrNull(guildId: Snowflake, userId: Snowflake): Member?","dev.kord.core.supplier.CacheEntitySupplier.getMemberOrNull"]},{"name":"open suspend override fun getMemberOrNull(guildId: Snowflake, userId: Snowflake): Member?","description":"dev.kord.core.supplier.RestEntitySupplier.getMemberOrNull","location":"core/dev.kord.core.supplier/-rest-entity-supplier/get-member-or-null.html","searchKeys":["getMemberOrNull","open suspend override fun getMemberOrNull(guildId: Snowflake, userId: Snowflake): Member?","dev.kord.core.supplier.RestEntitySupplier.getMemberOrNull"]},{"name":"open suspend override fun getMemberOrNull(guildId: Snowflake, userId: Snowflake): Member?","description":"dev.kord.core.supplier.StoreEntitySupplier.getMemberOrNull","location":"core/dev.kord.core.supplier/-store-entity-supplier/get-member-or-null.html","searchKeys":["getMemberOrNull","open suspend override fun getMemberOrNull(guildId: Snowflake, userId: Snowflake): Member?","dev.kord.core.supplier.StoreEntitySupplier.getMemberOrNull"]},{"name":"open suspend override fun getMessageOrNull(channelId: Snowflake, messageId: Snowflake): Message?","description":"dev.kord.core.supplier.CacheEntitySupplier.getMessageOrNull","location":"core/dev.kord.core.supplier/-cache-entity-supplier/get-message-or-null.html","searchKeys":["getMessageOrNull","open suspend override fun getMessageOrNull(channelId: Snowflake, messageId: Snowflake): Message?","dev.kord.core.supplier.CacheEntitySupplier.getMessageOrNull"]},{"name":"open suspend override fun getMessageOrNull(channelId: Snowflake, messageId: Snowflake): Message?","description":"dev.kord.core.supplier.RestEntitySupplier.getMessageOrNull","location":"core/dev.kord.core.supplier/-rest-entity-supplier/get-message-or-null.html","searchKeys":["getMessageOrNull","open suspend override fun getMessageOrNull(channelId: Snowflake, messageId: Snowflake): Message?","dev.kord.core.supplier.RestEntitySupplier.getMessageOrNull"]},{"name":"open suspend override fun getMessageOrNull(channelId: Snowflake, messageId: Snowflake): Message?","description":"dev.kord.core.supplier.StoreEntitySupplier.getMessageOrNull","location":"core/dev.kord.core.supplier/-store-entity-supplier/get-message-or-null.html","searchKeys":["getMessageOrNull","open suspend override fun getMessageOrNull(channelId: Snowflake, messageId: Snowflake): Message?","dev.kord.core.supplier.StoreEntitySupplier.getMessageOrNull"]},{"name":"open suspend override fun getParent(): NewsChannel","description":"dev.kord.core.entity.channel.thread.NewsChannelThread.getParent","location":"core/dev.kord.core.entity.channel.thread/-news-channel-thread/get-parent.html","searchKeys":["getParent","open suspend override fun getParent(): NewsChannel","dev.kord.core.entity.channel.thread.NewsChannelThread.getParent"]},{"name":"open suspend override fun getParent(): TextChannel","description":"dev.kord.core.entity.channel.thread.TextChannelThread.getParent","location":"core/dev.kord.core.entity.channel.thread/-text-channel-thread/get-parent.html","searchKeys":["getParent","open suspend override fun getParent(): TextChannel","dev.kord.core.entity.channel.thread.TextChannelThread.getParent"]},{"name":"open suspend override fun getParentOrNull(): NewsChannel?","description":"dev.kord.core.entity.channel.thread.NewsChannelThread.getParentOrNull","location":"core/dev.kord.core.entity.channel.thread/-news-channel-thread/get-parent-or-null.html","searchKeys":["getParentOrNull","open suspend override fun getParentOrNull(): NewsChannel?","dev.kord.core.entity.channel.thread.NewsChannelThread.getParentOrNull"]},{"name":"open suspend override fun getParentOrNull(): TextChannel?","description":"dev.kord.core.entity.channel.thread.TextChannelThread.getParentOrNull","location":"core/dev.kord.core.entity.channel.thread/-text-channel-thread/get-parent-or-null.html","searchKeys":["getParentOrNull","open suspend override fun getParentOrNull(): TextChannel?","dev.kord.core.entity.channel.thread.TextChannelThread.getParentOrNull"]},{"name":"open suspend override fun getRoleOrNull(guildId: Snowflake, roleId: Snowflake): Role?","description":"dev.kord.core.supplier.CacheEntitySupplier.getRoleOrNull","location":"core/dev.kord.core.supplier/-cache-entity-supplier/get-role-or-null.html","searchKeys":["getRoleOrNull","open suspend override fun getRoleOrNull(guildId: Snowflake, roleId: Snowflake): Role?","dev.kord.core.supplier.CacheEntitySupplier.getRoleOrNull"]},{"name":"open suspend override fun getRoleOrNull(guildId: Snowflake, roleId: Snowflake): Role?","description":"dev.kord.core.supplier.RestEntitySupplier.getRoleOrNull","location":"core/dev.kord.core.supplier/-rest-entity-supplier/get-role-or-null.html","searchKeys":["getRoleOrNull","open suspend override fun getRoleOrNull(guildId: Snowflake, roleId: Snowflake): Role?","dev.kord.core.supplier.RestEntitySupplier.getRoleOrNull"]},{"name":"open suspend override fun getRoleOrNull(guildId: Snowflake, roleId: Snowflake): Role?","description":"dev.kord.core.supplier.StoreEntitySupplier.getRoleOrNull","location":"core/dev.kord.core.supplier/-store-entity-supplier/get-role-or-null.html","searchKeys":["getRoleOrNull","open suspend override fun getRoleOrNull(guildId: Snowflake, roleId: Snowflake): Role?","dev.kord.core.supplier.StoreEntitySupplier.getRoleOrNull"]},{"name":"open suspend override fun getSelfOrNull(): User?","description":"dev.kord.core.supplier.CacheEntitySupplier.getSelfOrNull","location":"core/dev.kord.core.supplier/-cache-entity-supplier/get-self-or-null.html","searchKeys":["getSelfOrNull","open suspend override fun getSelfOrNull(): User?","dev.kord.core.supplier.CacheEntitySupplier.getSelfOrNull"]},{"name":"open suspend override fun getSelfOrNull(): User?","description":"dev.kord.core.supplier.RestEntitySupplier.getSelfOrNull","location":"core/dev.kord.core.supplier/-rest-entity-supplier/get-self-or-null.html","searchKeys":["getSelfOrNull","open suspend override fun getSelfOrNull(): User?","dev.kord.core.supplier.RestEntitySupplier.getSelfOrNull"]},{"name":"open suspend override fun getSelfOrNull(): User?","description":"dev.kord.core.supplier.StoreEntitySupplier.getSelfOrNull","location":"core/dev.kord.core.supplier/-store-entity-supplier/get-self-or-null.html","searchKeys":["getSelfOrNull","open suspend override fun getSelfOrNull(): User?","dev.kord.core.supplier.StoreEntitySupplier.getSelfOrNull"]},{"name":"open suspend override fun getStageInstanceOrNull(channelId: Snowflake): StageInstance?","description":"dev.kord.core.supplier.CacheEntitySupplier.getStageInstanceOrNull","location":"core/dev.kord.core.supplier/-cache-entity-supplier/get-stage-instance-or-null.html","searchKeys":["getStageInstanceOrNull","open suspend override fun getStageInstanceOrNull(channelId: Snowflake): StageInstance?","dev.kord.core.supplier.CacheEntitySupplier.getStageInstanceOrNull"]},{"name":"open suspend override fun getStageInstanceOrNull(channelId: Snowflake): StageInstance?","description":"dev.kord.core.supplier.RestEntitySupplier.getStageInstanceOrNull","location":"core/dev.kord.core.supplier/-rest-entity-supplier/get-stage-instance-or-null.html","searchKeys":["getStageInstanceOrNull","open suspend override fun getStageInstanceOrNull(channelId: Snowflake): StageInstance?","dev.kord.core.supplier.RestEntitySupplier.getStageInstanceOrNull"]},{"name":"open suspend override fun getStageInstanceOrNull(channelId: Snowflake): StageInstance?","description":"dev.kord.core.supplier.StoreEntitySupplier.getStageInstanceOrNull","location":"core/dev.kord.core.supplier/-store-entity-supplier/get-stage-instance-or-null.html","searchKeys":["getStageInstanceOrNull","open suspend override fun getStageInstanceOrNull(channelId: Snowflake): StageInstance?","dev.kord.core.supplier.StoreEntitySupplier.getStageInstanceOrNull"]},{"name":"open suspend override fun getStickerOrNull(id: Snowflake): Sticker?","description":"dev.kord.core.supplier.CacheEntitySupplier.getStickerOrNull","location":"core/dev.kord.core.supplier/-cache-entity-supplier/get-sticker-or-null.html","searchKeys":["getStickerOrNull","open suspend override fun getStickerOrNull(id: Snowflake): Sticker?","dev.kord.core.supplier.CacheEntitySupplier.getStickerOrNull"]},{"name":"open suspend override fun getStickerOrNull(id: Snowflake): Sticker?","description":"dev.kord.core.supplier.RestEntitySupplier.getStickerOrNull","location":"core/dev.kord.core.supplier/-rest-entity-supplier/get-sticker-or-null.html","searchKeys":["getStickerOrNull","open suspend override fun getStickerOrNull(id: Snowflake): Sticker?","dev.kord.core.supplier.RestEntitySupplier.getStickerOrNull"]},{"name":"open suspend override fun getStickerOrNull(id: Snowflake): Sticker?","description":"dev.kord.core.supplier.StoreEntitySupplier.getStickerOrNull","location":"core/dev.kord.core.supplier/-store-entity-supplier/get-sticker-or-null.html","searchKeys":["getStickerOrNull","open suspend override fun getStickerOrNull(id: Snowflake): Sticker?","dev.kord.core.supplier.StoreEntitySupplier.getStickerOrNull"]},{"name":"open suspend override fun getTemplateOrNull(code: String): Template?","description":"dev.kord.core.supplier.CacheEntitySupplier.getTemplateOrNull","location":"core/dev.kord.core.supplier/-cache-entity-supplier/get-template-or-null.html","searchKeys":["getTemplateOrNull","open suspend override fun getTemplateOrNull(code: String): Template?","dev.kord.core.supplier.CacheEntitySupplier.getTemplateOrNull"]},{"name":"open suspend override fun getTemplateOrNull(code: String): Template?","description":"dev.kord.core.supplier.RestEntitySupplier.getTemplateOrNull","location":"core/dev.kord.core.supplier/-rest-entity-supplier/get-template-or-null.html","searchKeys":["getTemplateOrNull","open suspend override fun getTemplateOrNull(code: String): Template?","dev.kord.core.supplier.RestEntitySupplier.getTemplateOrNull"]},{"name":"open suspend override fun getTemplateOrNull(code: String): Template?","description":"dev.kord.core.supplier.StoreEntitySupplier.getTemplateOrNull","location":"core/dev.kord.core.supplier/-store-entity-supplier/get-template-or-null.html","searchKeys":["getTemplateOrNull","open suspend override fun getTemplateOrNull(code: String): Template?","dev.kord.core.supplier.StoreEntitySupplier.getTemplateOrNull"]},{"name":"open suspend override fun getUserOrNull(id: Snowflake): User?","description":"dev.kord.core.supplier.CacheEntitySupplier.getUserOrNull","location":"core/dev.kord.core.supplier/-cache-entity-supplier/get-user-or-null.html","searchKeys":["getUserOrNull","open suspend override fun getUserOrNull(id: Snowflake): User?","dev.kord.core.supplier.CacheEntitySupplier.getUserOrNull"]},{"name":"open suspend override fun getUserOrNull(id: Snowflake): User?","description":"dev.kord.core.supplier.RestEntitySupplier.getUserOrNull","location":"core/dev.kord.core.supplier/-rest-entity-supplier/get-user-or-null.html","searchKeys":["getUserOrNull","open suspend override fun getUserOrNull(id: Snowflake): User?","dev.kord.core.supplier.RestEntitySupplier.getUserOrNull"]},{"name":"open suspend override fun getUserOrNull(id: Snowflake): User?","description":"dev.kord.core.supplier.StoreEntitySupplier.getUserOrNull","location":"core/dev.kord.core.supplier/-store-entity-supplier/get-user-or-null.html","searchKeys":["getUserOrNull","open suspend override fun getUserOrNull(id: Snowflake): User?","dev.kord.core.supplier.StoreEntitySupplier.getUserOrNull"]},{"name":"open suspend override fun getWebhookMessageOrNull(webhookId: Snowflake, token: String, messageId: Snowflake, threadId: Snowflake?): Message?","description":"dev.kord.core.supplier.CacheEntitySupplier.getWebhookMessageOrNull","location":"core/dev.kord.core.supplier/-cache-entity-supplier/get-webhook-message-or-null.html","searchKeys":["getWebhookMessageOrNull","open suspend override fun getWebhookMessageOrNull(webhookId: Snowflake, token: String, messageId: Snowflake, threadId: Snowflake?): Message?","dev.kord.core.supplier.CacheEntitySupplier.getWebhookMessageOrNull"]},{"name":"open suspend override fun getWebhookMessageOrNull(webhookId: Snowflake, token: String, messageId: Snowflake, threadId: Snowflake?): Message?","description":"dev.kord.core.supplier.RestEntitySupplier.getWebhookMessageOrNull","location":"core/dev.kord.core.supplier/-rest-entity-supplier/get-webhook-message-or-null.html","searchKeys":["getWebhookMessageOrNull","open suspend override fun getWebhookMessageOrNull(webhookId: Snowflake, token: String, messageId: Snowflake, threadId: Snowflake?): Message?","dev.kord.core.supplier.RestEntitySupplier.getWebhookMessageOrNull"]},{"name":"open suspend override fun getWebhookMessageOrNull(webhookId: Snowflake, token: String, messageId: Snowflake, threadId: Snowflake?): Message?","description":"dev.kord.core.supplier.StoreEntitySupplier.getWebhookMessageOrNull","location":"core/dev.kord.core.supplier/-store-entity-supplier/get-webhook-message-or-null.html","searchKeys":["getWebhookMessageOrNull","open suspend override fun getWebhookMessageOrNull(webhookId: Snowflake, token: String, messageId: Snowflake, threadId: Snowflake?): Message?","dev.kord.core.supplier.StoreEntitySupplier.getWebhookMessageOrNull"]},{"name":"open suspend override fun getWebhookOrNull(id: Snowflake): Webhook?","description":"dev.kord.core.supplier.CacheEntitySupplier.getWebhookOrNull","location":"core/dev.kord.core.supplier/-cache-entity-supplier/get-webhook-or-null.html","searchKeys":["getWebhookOrNull","open suspend override fun getWebhookOrNull(id: Snowflake): Webhook?","dev.kord.core.supplier.CacheEntitySupplier.getWebhookOrNull"]},{"name":"open suspend override fun getWebhookOrNull(id: Snowflake): Webhook?","description":"dev.kord.core.supplier.RestEntitySupplier.getWebhookOrNull","location":"core/dev.kord.core.supplier/-rest-entity-supplier/get-webhook-or-null.html","searchKeys":["getWebhookOrNull","open suspend override fun getWebhookOrNull(id: Snowflake): Webhook?","dev.kord.core.supplier.RestEntitySupplier.getWebhookOrNull"]},{"name":"open suspend override fun getWebhookOrNull(id: Snowflake): Webhook?","description":"dev.kord.core.supplier.StoreEntitySupplier.getWebhookOrNull","location":"core/dev.kord.core.supplier/-store-entity-supplier/get-webhook-or-null.html","searchKeys":["getWebhookOrNull","open suspend override fun getWebhookOrNull(id: Snowflake): Webhook?","dev.kord.core.supplier.StoreEntitySupplier.getWebhookOrNull"]},{"name":"open suspend override fun getWebhookWithTokenOrNull(id: Snowflake, token: String): Webhook?","description":"dev.kord.core.supplier.CacheEntitySupplier.getWebhookWithTokenOrNull","location":"core/dev.kord.core.supplier/-cache-entity-supplier/get-webhook-with-token-or-null.html","searchKeys":["getWebhookWithTokenOrNull","open suspend override fun getWebhookWithTokenOrNull(id: Snowflake, token: String): Webhook?","dev.kord.core.supplier.CacheEntitySupplier.getWebhookWithTokenOrNull"]},{"name":"open suspend override fun getWebhookWithTokenOrNull(id: Snowflake, token: String): Webhook?","description":"dev.kord.core.supplier.RestEntitySupplier.getWebhookWithTokenOrNull","location":"core/dev.kord.core.supplier/-rest-entity-supplier/get-webhook-with-token-or-null.html","searchKeys":["getWebhookWithTokenOrNull","open suspend override fun getWebhookWithTokenOrNull(id: Snowflake, token: String): Webhook?","dev.kord.core.supplier.RestEntitySupplier.getWebhookWithTokenOrNull"]},{"name":"open suspend override fun getWebhookWithTokenOrNull(id: Snowflake, token: String): Webhook?","description":"dev.kord.core.supplier.StoreEntitySupplier.getWebhookWithTokenOrNull","location":"core/dev.kord.core.supplier/-store-entity-supplier/get-webhook-with-token-or-null.html","searchKeys":["getWebhookWithTokenOrNull","open suspend override fun getWebhookWithTokenOrNull(id: Snowflake, token: String): Webhook?","dev.kord.core.supplier.StoreEntitySupplier.getWebhookWithTokenOrNull"]},{"name":"open suspend override fun handle(event: ShardEvent, kord: Kord): Event?","description":"dev.kord.core.gateway.handler.DefaultGatewayEventInterceptor.handle","location":"core/dev.kord.core.gateway.handler/-default-gateway-event-interceptor/handle.html","searchKeys":["handle","open suspend override fun handle(event: ShardEvent, kord: Kord): Event?","dev.kord.core.gateway.handler.DefaultGatewayEventInterceptor.handle"]},{"name":"open suspend override fun register(description: DataDescription<out Any, out Any>)","description":"dev.kord.core.cache.DataCacheView.register","location":"core/dev.kord.core.cache/-data-cache-view/register.html","searchKeys":["register","open suspend override fun register(description: DataDescription<out Any, out Any>)","dev.kord.core.cache.DataCacheView.register"]},{"name":"open suspend override fun register(descriptions: Iterable<DataDescription<out Any, out Any>>)","description":"dev.kord.core.cache.DataCacheView.register","location":"core/dev.kord.core.cache/-data-cache-view/register.html","searchKeys":["register","open suspend override fun register(descriptions: Iterable<DataDescription<out Any, out Any>>)","dev.kord.core.cache.DataCacheView.register"]},{"name":"open suspend override fun register(vararg descriptions: DataDescription<out Any, out Any>)","description":"dev.kord.core.cache.DataCacheView.register","location":"core/dev.kord.core.cache/-data-cache-view/register.html","searchKeys":["register","open suspend override fun register(vararg descriptions: DataDescription<out Any, out Any>)","dev.kord.core.cache.DataCacheView.register"]},{"name":"open val actionRows: List<ActionRowComponent>","description":"dev.kord.core.entity.interaction.ModalSubmitInteraction.actionRows","location":"core/dev.kord.core.entity.interaction/-modal-submit-interaction/action-rows.html","searchKeys":["actionRows","open val actionRows: List<ActionRowComponent>","dev.kord.core.entity.interaction.ModalSubmitInteraction.actionRows"]},{"name":"open val activeThreads: Flow<ThreadChannel>","description":"dev.kord.core.behavior.GuildBehavior.activeThreads","location":"core/dev.kord.core.behavior/-guild-behavior/active-threads.html","searchKeys":["activeThreads","open val activeThreads: Flow<ThreadChannel>","dev.kord.core.behavior.GuildBehavior.activeThreads"]},{"name":"open val activeThreads: Flow<ThreadChannel>","description":"dev.kord.core.behavior.channel.threads.ThreadParentChannelBehavior.activeThreads","location":"core/dev.kord.core.behavior.channel.threads/-thread-parent-channel-behavior/active-threads.html","searchKeys":["activeThreads","open val activeThreads: Flow<ThreadChannel>","dev.kord.core.behavior.channel.threads.ThreadParentChannelBehavior.activeThreads"]},{"name":"open val appPermissions: Permissions","description":"dev.kord.core.entity.interaction.GuildInteraction.appPermissions","location":"core/dev.kord.core.entity.interaction/-guild-interaction/app-permissions.html","searchKeys":["appPermissions","open val appPermissions: Permissions","dev.kord.core.entity.interaction.GuildInteraction.appPermissions"]},{"name":"open val archiveTimestamp: Instant","description":"dev.kord.core.entity.channel.thread.ThreadChannel.archiveTimestamp","location":"core/dev.kord.core.entity.channel.thread/-thread-channel/archive-timestamp.html","searchKeys":["archiveTimestamp","open val archiveTimestamp: Instant","dev.kord.core.entity.channel.thread.ThreadChannel.archiveTimestamp"]},{"name":"open val attachments: Map<String, Attachment>","description":"dev.kord.core.entity.interaction.InteractionCommand.attachments","location":"core/dev.kord.core.entity.interaction/-interaction-command/attachments.html","searchKeys":["attachments","open val attachments: Map<String, Attachment>","dev.kord.core.entity.interaction.InteractionCommand.attachments"]},{"name":"open val autoArchiveDuration: ArchiveDuration","description":"dev.kord.core.entity.channel.thread.ThreadChannel.autoArchiveDuration","location":"core/dev.kord.core.entity.channel.thread/-thread-channel/auto-archive-duration.html","searchKeys":["autoArchiveDuration","open val autoArchiveDuration: ArchiveDuration","dev.kord.core.entity.channel.thread.ThreadChannel.autoArchiveDuration"]},{"name":"open val autoModerationRules: Flow<AutoModerationRule>","description":"dev.kord.core.behavior.GuildBehavior.autoModerationRules","location":"core/dev.kord.core.behavior/-guild-behavior/auto-moderation-rules.html","searchKeys":["autoModerationRules","open val autoModerationRules: Flow<AutoModerationRule>","dev.kord.core.behavior.GuildBehavior.autoModerationRules"]},{"name":"open val bans: Flow<Ban>","description":"dev.kord.core.behavior.GuildBehavior.bans","location":"core/dev.kord.core.behavior/-guild-behavior/bans.html","searchKeys":["bans","open val bans: Flow<Ban>","dev.kord.core.behavior.GuildBehavior.bans"]},{"name":"open val booleans: Map<String, Boolean>","description":"dev.kord.core.entity.interaction.InteractionCommand.booleans","location":"core/dev.kord.core.entity.interaction/-interaction-command/booleans.html","searchKeys":["booleans","open val booleans: Map<String, Boolean>","dev.kord.core.entity.interaction.InteractionCommand.booleans"]},{"name":"open val cachedThreads: Flow<ThreadChannel>","description":"dev.kord.core.behavior.GuildBehavior.cachedThreads","location":"core/dev.kord.core.behavior/-guild-behavior/cached-threads.html","searchKeys":["cachedThreads","open val cachedThreads: Flow<ThreadChannel>","dev.kord.core.behavior.GuildBehavior.cachedThreads"]},{"name":"open val category: CategoryBehavior?","description":"dev.kord.core.entity.channel.CategorizableChannel.category","location":"core/dev.kord.core.entity.channel/-categorizable-channel/category.html","searchKeys":["category","open val category: CategoryBehavior?","dev.kord.core.entity.channel.CategorizableChannel.category"]},{"name":"open val categoryId: Snowflake?","description":"dev.kord.core.entity.channel.CategorizableChannel.categoryId","location":"core/dev.kord.core.entity.channel/-categorizable-channel/category-id.html","searchKeys":["categoryId","open val categoryId: Snowflake?","dev.kord.core.entity.channel.CategorizableChannel.categoryId"]},{"name":"open val channel: MessageChannelBehavior","description":"dev.kord.core.behavior.MessageBehavior.channel","location":"core/dev.kord.core.behavior/-message-behavior/channel.html","searchKeys":["channel","open val channel: MessageChannelBehavior","dev.kord.core.behavior.MessageBehavior.channel"]},{"name":"open val channel: MessageChannelBehavior","description":"dev.kord.core.behavior.interaction.InteractionBehavior.channel","location":"core/dev.kord.core.behavior.interaction/-interaction-behavior/channel.html","searchKeys":["channel","open val channel: MessageChannelBehavior","dev.kord.core.behavior.interaction.InteractionBehavior.channel"]},{"name":"open val channel: MessageChannelBehavior","description":"dev.kord.core.behavior.interaction.followup.FollowupMessageBehavior.channel","location":"core/dev.kord.core.behavior.interaction.followup/-followup-message-behavior/channel.html","searchKeys":["channel","open val channel: MessageChannelBehavior","dev.kord.core.behavior.interaction.followup.FollowupMessageBehavior.channel"]},{"name":"open val channelId: Snowflake?","description":"dev.kord.core.event.guild.GuildScheduledEventEvent.channelId","location":"core/dev.kord.core.event.guild/-guild-scheduled-event-event/channel-id.html","searchKeys":["channelId","open val channelId: Snowflake?","dev.kord.core.event.guild.GuildScheduledEventEvent.channelId"]},{"name":"open val channels: Flow<CategorizableChannel>","description":"dev.kord.core.behavior.channel.CategoryBehavior.channels","location":"core/dev.kord.core.behavior.channel/-category-behavior/channels.html","searchKeys":["channels","open val channels: Flow<CategorizableChannel>","dev.kord.core.behavior.channel.CategoryBehavior.channels"]},{"name":"open val channels: Flow<TopGuildChannel>","description":"dev.kord.core.behavior.GuildBehavior.channels","location":"core/dev.kord.core.behavior/-guild-behavior/channels.html","searchKeys":["channels","open val channels: Flow<TopGuildChannel>","dev.kord.core.behavior.GuildBehavior.channels"]},{"name":"open val channels: Map<String, ResolvedChannel>","description":"dev.kord.core.entity.interaction.InteractionCommand.channels","location":"core/dev.kord.core.entity.interaction/-interaction-command/channels.html","searchKeys":["channels","open val channels: Map<String, ResolvedChannel>","dev.kord.core.entity.interaction.InteractionCommand.channels"]},{"name":"open val command: InteractionCommand","description":"dev.kord.core.entity.interaction.AutoCompleteInteraction.command","location":"core/dev.kord.core.entity.interaction/-auto-complete-interaction/command.html","searchKeys":["command","open val command: InteractionCommand","dev.kord.core.entity.interaction.AutoCompleteInteraction.command"]},{"name":"open val command: InteractionCommand","description":"dev.kord.core.entity.interaction.ChatInputCommandInteraction.command","location":"core/dev.kord.core.entity.interaction/-chat-input-command-interaction/command.html","searchKeys":["command","open val command: InteractionCommand","dev.kord.core.entity.interaction.ChatInputCommandInteraction.command"]},{"name":"open val componentId: String","description":"dev.kord.core.entity.interaction.ComponentInteraction.componentId","location":"core/dev.kord.core.entity.interaction/-component-interaction/component-id.html","searchKeys":["componentId","open val componentId: String","dev.kord.core.entity.interaction.ComponentInteraction.componentId"]},{"name":"open val componentType: ComponentType","description":"dev.kord.core.entity.interaction.ComponentInteraction.componentType","location":"core/dev.kord.core.entity.interaction/-component-interaction/component-type.html","searchKeys":["componentType","open val componentType: ComponentType","dev.kord.core.entity.interaction.ComponentInteraction.componentType"]},{"name":"open val createTimestamp: Instant?","description":"dev.kord.core.entity.channel.thread.ThreadChannel.createTimestamp","location":"core/dev.kord.core.entity.channel.thread/-thread-channel/create-timestamp.html","searchKeys":["createTimestamp","open val createTimestamp: Instant?","dev.kord.core.entity.channel.thread.ThreadChannel.createTimestamp"]},{"name":"open val data: BaseInviteData","description":"dev.kord.core.entity.Invite.data","location":"core/dev.kord.core.entity/-invite/data.html","searchKeys":["data","open val data: BaseInviteData","dev.kord.core.entity.Invite.data"]},{"name":"open val defaultAutoArchiveDuration: ArchiveDuration?","description":"dev.kord.core.entity.channel.thread.ThreadChannel.defaultAutoArchiveDuration","location":"core/dev.kord.core.entity.channel.thread/-thread-channel/default-auto-archive-duration.html","searchKeys":["defaultAutoArchiveDuration","open val defaultAutoArchiveDuration: ArchiveDuration?","dev.kord.core.entity.channel.thread.ThreadChannel.defaultAutoArchiveDuration"]},{"name":"open val defaultMemberPermissions: Permissions?","description":"dev.kord.core.entity.application.ApplicationCommand.defaultMemberPermissions","location":"core/dev.kord.core.entity.application/-application-command/default-member-permissions.html","searchKeys":["defaultMemberPermissions","open val defaultMemberPermissions: Permissions?","dev.kord.core.entity.application.ApplicationCommand.defaultMemberPermissions"]},{"name":"open val defaultPermission: Boolean?","description":"dev.kord.core.entity.application.ApplicationCommand.defaultPermission","location":"core/dev.kord.core.entity.application/-application-command/default-permission.html","searchKeys":["defaultPermission","open val defaultPermission: Boolean?","dev.kord.core.entity.application.ApplicationCommand.defaultPermission"]},{"name":"open val description: String?","description":"dev.kord.core.entity.application.ChatInputCommandCommand.description","location":"core/dev.kord.core.entity.application/-chat-input-command-command/description.html","searchKeys":["description","open val description: String?","dev.kord.core.entity.application.ChatInputCommandCommand.description"]},{"name":"open val descriptionLocalizations: Map<Locale, String>","description":"dev.kord.core.entity.application.ChatInputCommandCommand.descriptionLocalizations","location":"core/dev.kord.core.entity.application/-chat-input-command-command/description-localizations.html","searchKeys":["descriptionLocalizations","open val descriptionLocalizations: Map<Locale, String>","dev.kord.core.entity.application.ChatInputCommandCommand.descriptionLocalizations"]},{"name":"open val dmPermission: Boolean","description":"dev.kord.core.entity.application.GlobalApplicationCommand.dmPermission","location":"core/dev.kord.core.entity.application/-global-application-command/dm-permission.html","searchKeys":["dmPermission","open val dmPermission: Boolean","dev.kord.core.entity.application.GlobalApplicationCommand.dmPermission"]},{"name":"open val emojis: Flow<GuildEmoji>","description":"dev.kord.core.behavior.GuildBehavior.emojis","location":"core/dev.kord.core.behavior/-guild-behavior/emojis.html","searchKeys":["emojis","open val emojis: Flow<GuildEmoji>","dev.kord.core.behavior.GuildBehavior.emojis"]},{"name":"open val focusedOption: StringOptionValue","description":"dev.kord.core.entity.interaction.AutoCompleteInteraction.focusedOption","location":"core/dev.kord.core.entity.interaction/-auto-complete-interaction/focused-option.html","searchKeys":["focusedOption","open val focusedOption: StringOptionValue","dev.kord.core.entity.interaction.AutoCompleteInteraction.focusedOption"]},{"name":"open val gateway: Gateway","description":"dev.kord.core.event.Event.gateway","location":"core/dev.kord.core.event/-event/gateway.html","searchKeys":["gateway","open val gateway: Gateway","dev.kord.core.event.Event.gateway"]},{"name":"open val gateway: Gateway?","description":"dev.kord.core.behavior.GuildBehavior.gateway","location":"core/dev.kord.core.behavior/-guild-behavior/gateway.html","searchKeys":["gateway","open val gateway: Gateway?","dev.kord.core.behavior.GuildBehavior.gateway"]},{"name":"open val groups: Map<String, ChatInputGroup>","description":"dev.kord.core.entity.application.ChatInputCommandCommand.groups","location":"core/dev.kord.core.entity.application/-chat-input-command-command/groups.html","searchKeys":["groups","open val groups: Map<String, ChatInputGroup>","dev.kord.core.entity.application.ChatInputCommandCommand.groups"]},{"name":"open val guild: GuildBehavior","description":"dev.kord.core.behavior.GuildEmojiBehavior.guild","location":"core/dev.kord.core.behavior/-guild-emoji-behavior/guild.html","searchKeys":["guild","open val guild: GuildBehavior","dev.kord.core.behavior.GuildEmojiBehavior.guild"]},{"name":"open val guild: GuildBehavior","description":"dev.kord.core.behavior.MemberBehavior.guild","location":"core/dev.kord.core.behavior/-member-behavior/guild.html","searchKeys":["guild","open val guild: GuildBehavior","dev.kord.core.behavior.MemberBehavior.guild"]},{"name":"open val guild: GuildBehavior","description":"dev.kord.core.behavior.RoleBehavior.guild","location":"core/dev.kord.core.behavior/-role-behavior/guild.html","searchKeys":["guild","open val guild: GuildBehavior","dev.kord.core.behavior.RoleBehavior.guild"]},{"name":"open val guild: GuildBehavior","description":"dev.kord.core.behavior.automoderation.AutoModerationRuleBehavior.guild","location":"core/dev.kord.core.behavior.automoderation/-auto-moderation-rule-behavior/guild.html","searchKeys":["guild","open val guild: GuildBehavior","dev.kord.core.behavior.automoderation.AutoModerationRuleBehavior.guild"]},{"name":"open val guild: GuildBehavior","description":"dev.kord.core.behavior.channel.GuildChannelBehavior.guild","location":"core/dev.kord.core.behavior.channel/-guild-channel-behavior/guild.html","searchKeys":["guild","open val guild: GuildBehavior","dev.kord.core.behavior.channel.GuildChannelBehavior.guild"]},{"name":"open val guild: GuildBehavior","description":"dev.kord.core.behavior.interaction.GuildInteractionBehavior.guild","location":"core/dev.kord.core.behavior.interaction/-guild-interaction-behavior/guild.html","searchKeys":["guild","open val guild: GuildBehavior","dev.kord.core.behavior.interaction.GuildInteractionBehavior.guild"]},{"name":"open val guild: GuildBehavior","description":"dev.kord.core.event.automoderation.AutoModerationEvent.guild","location":"core/dev.kord.core.event.automoderation/-auto-moderation-event/guild.html","searchKeys":["guild","open val guild: GuildBehavior","dev.kord.core.event.automoderation.AutoModerationEvent.guild"]},{"name":"open val guildId: Snowflake","description":"dev.kord.core.event.guild.GuildScheduledEventEvent.guildId","location":"core/dev.kord.core.event.guild/-guild-scheduled-event-event/guild-id.html","searchKeys":["guildId","open val guildId: Snowflake","dev.kord.core.event.guild.GuildScheduledEventEvent.guildId"]},{"name":"open val guildLocale: Locale?","description":"dev.kord.core.entity.interaction.Interaction.guildLocale","location":"core/dev.kord.core.entity.interaction/-interaction/guild-locale.html","searchKeys":["guildLocale","open val guildLocale: Locale?","dev.kord.core.entity.interaction.Interaction.guildLocale"]},{"name":"open val integers: Map<String, Long>","description":"dev.kord.core.entity.interaction.InteractionCommand.integers","location":"core/dev.kord.core.entity.interaction/-interaction-command/integers.html","searchKeys":["integers","open val integers: Map<String, Long>","dev.kord.core.entity.interaction.InteractionCommand.integers"]},{"name":"open val integrations: Flow<Integration>","description":"dev.kord.core.behavior.GuildBehavior.integrations","location":"core/dev.kord.core.behavior/-guild-behavior/integrations.html","searchKeys":["integrations","open val integrations: Flow<Integration>","dev.kord.core.behavior.GuildBehavior.integrations"]},{"name":"open val invites: Flow<InviteWithMetadata>","description":"dev.kord.core.behavior.GuildBehavior.invites","location":"core/dev.kord.core.behavior/-guild-behavior/invites.html","searchKeys":["invites","open val invites: Flow<InviteWithMetadata>","dev.kord.core.behavior.GuildBehavior.invites"]},{"name":"open val invites: Flow<InviteWithMetadata>","description":"dev.kord.core.behavior.channel.CategorizableChannelBehavior.invites","location":"core/dev.kord.core.behavior.channel/-categorizable-channel-behavior/invites.html","searchKeys":["invites","open val invites: Flow<InviteWithMetadata>","dev.kord.core.behavior.channel.CategorizableChannelBehavior.invites"]},{"name":"open val invokedCommandGuildId: Snowflake?","description":"dev.kord.core.entity.interaction.ApplicationCommandInteraction.invokedCommandGuildId","location":"core/dev.kord.core.entity.interaction/-application-command-interaction/invoked-command-guild-id.html","searchKeys":["invokedCommandGuildId","open val invokedCommandGuildId: Snowflake?","dev.kord.core.entity.interaction.ApplicationCommandInteraction.invokedCommandGuildId"]},{"name":"open val invokedCommandId: Snowflake","description":"dev.kord.core.entity.interaction.ApplicationCommandInteraction.invokedCommandId","location":"core/dev.kord.core.entity.interaction/-application-command-interaction/invoked-command-id.html","searchKeys":["invokedCommandId","open val invokedCommandId: Snowflake","dev.kord.core.entity.interaction.ApplicationCommandInteraction.invokedCommandId"]},{"name":"open val invokedCommandName: String","description":"dev.kord.core.entity.interaction.ApplicationCommandInteraction.invokedCommandName","location":"core/dev.kord.core.entity.interaction/-application-command-interaction/invoked-command-name.html","searchKeys":["invokedCommandName","open val invokedCommandName: String","dev.kord.core.entity.interaction.ApplicationCommandInteraction.invokedCommandName"]},{"name":"open val invokedCommandType: ApplicationCommandType","description":"dev.kord.core.entity.interaction.ApplicationCommandInteraction.invokedCommandType","location":"core/dev.kord.core.entity.interaction/-application-command-interaction/invoked-command-type.html","searchKeys":["invokedCommandType","open val invokedCommandType: ApplicationCommandType","dev.kord.core.entity.interaction.ApplicationCommandInteraction.invokedCommandType"]},{"name":"open val isArchived: Boolean","description":"dev.kord.core.entity.channel.thread.ThreadChannel.isArchived","location":"core/dev.kord.core.entity.channel.thread/-thread-channel/is-archived.html","searchKeys":["isArchived","open val isArchived: Boolean","dev.kord.core.entity.channel.thread.ThreadChannel.isArchived"]},{"name":"open val isLocked: Boolean","description":"dev.kord.core.entity.channel.thread.ThreadChannel.isLocked","location":"core/dev.kord.core.entity.channel.thread/-thread-channel/is-locked.html","searchKeys":["isLocked","open val isLocked: Boolean","dev.kord.core.entity.channel.thread.ThreadChannel.isLocked"]},{"name":"open val isNsfw: Boolean","description":"dev.kord.core.entity.channel.thread.ThreadChannel.isNsfw","location":"core/dev.kord.core.entity.channel.thread/-thread-channel/is-nsfw.html","searchKeys":["isNsfw","open val isNsfw: Boolean","dev.kord.core.entity.channel.thread.ThreadChannel.isNsfw"]},{"name":"open val lastMessage: MessageBehavior?","description":"dev.kord.core.entity.channel.MessageChannel.lastMessage","location":"core/dev.kord.core.entity.channel/-message-channel/last-message.html","searchKeys":["lastMessage","open val lastMessage: MessageBehavior?","dev.kord.core.entity.channel.MessageChannel.lastMessage"]},{"name":"open val lastMessageId: Snowflake?","description":"dev.kord.core.entity.channel.MessageChannel.lastMessageId","location":"core/dev.kord.core.entity.channel/-message-channel/last-message-id.html","searchKeys":["lastMessageId","open val lastMessageId: Snowflake?","dev.kord.core.entity.channel.MessageChannel.lastMessageId"]},{"name":"open val lastPinTimestamp: Instant?","description":"dev.kord.core.entity.channel.MessageChannel.lastPinTimestamp","location":"core/dev.kord.core.entity.channel/-message-channel/last-pin-timestamp.html","searchKeys":["lastPinTimestamp","open val lastPinTimestamp: Instant?","dev.kord.core.entity.channel.MessageChannel.lastPinTimestamp"]},{"name":"open val locale: Locale?","description":"dev.kord.core.entity.interaction.Interaction.locale","location":"core/dev.kord.core.entity.interaction/-interaction/locale.html","searchKeys":["locale","open val locale: Locale?","dev.kord.core.entity.interaction.Interaction.locale"]},{"name":"open val member: ThreadMember?","description":"dev.kord.core.entity.channel.thread.ThreadChannel.member","location":"core/dev.kord.core.entity.channel.thread/-thread-channel/member.html","searchKeys":["member","open val member: ThreadMember?","dev.kord.core.entity.channel.thread.ThreadChannel.member"]},{"name":"open val memberCount: OptionalInt","description":"dev.kord.core.entity.channel.thread.ThreadChannel.memberCount","location":"core/dev.kord.core.entity.channel.thread/-thread-channel/member-count.html","searchKeys":["memberCount","open val memberCount: OptionalInt","dev.kord.core.entity.channel.thread.ThreadChannel.memberCount"]},{"name":"open val members: Flow<Member>","description":"dev.kord.core.behavior.GuildBehavior.members","location":"core/dev.kord.core.behavior/-guild-behavior/members.html","searchKeys":["members","open val members: Flow<Member>","dev.kord.core.behavior.GuildBehavior.members"]},{"name":"open val members: Flow<Member>","description":"dev.kord.core.behavior.GuildScheduledEventBehavior.members","location":"core/dev.kord.core.behavior/-guild-scheduled-event-behavior/members.html","searchKeys":["members","open val members: Flow<Member>","dev.kord.core.behavior.GuildScheduledEventBehavior.members"]},{"name":"open val members: Flow<ThreadMember>","description":"dev.kord.core.behavior.channel.threads.ThreadChannelBehavior.members","location":"core/dev.kord.core.behavior.channel.threads/-thread-channel-behavior/members.html","searchKeys":["members","open val members: Flow<ThreadMember>","dev.kord.core.behavior.channel.threads.ThreadChannelBehavior.members"]},{"name":"open val members: Map<String, Member>","description":"dev.kord.core.entity.interaction.InteractionCommand.members","location":"core/dev.kord.core.entity.interaction/-interaction-command/members.html","searchKeys":["members","open val members: Map<String, Member>","dev.kord.core.entity.interaction.InteractionCommand.members"]},{"name":"open val mention: String","description":"dev.kord.core.behavior.RoleBehavior.mention","location":"core/dev.kord.core.behavior/-role-behavior/mention.html","searchKeys":["mention","open val mention: String","dev.kord.core.behavior.RoleBehavior.mention"]},{"name":"open val mention: String","description":"dev.kord.core.behavior.UserBehavior.mention","location":"core/dev.kord.core.behavior/-user-behavior/mention.html","searchKeys":["mention","open val mention: String","dev.kord.core.behavior.UserBehavior.mention"]},{"name":"open val mention: String","description":"dev.kord.core.behavior.channel.ChannelBehavior.mention","location":"core/dev.kord.core.behavior.channel/-channel-behavior/mention.html","searchKeys":["mention","open val mention: String","dev.kord.core.behavior.channel.ChannelBehavior.mention"]},{"name":"open val mentionables: Map<String, Entity>","description":"dev.kord.core.entity.interaction.InteractionCommand.mentionables","location":"core/dev.kord.core.entity.interaction/-interaction-command/mentionables.html","searchKeys":["mentionables","open val mentionables: Map<String, Entity>","dev.kord.core.entity.interaction.InteractionCommand.mentionables"]},{"name":"open val message: Message","description":"dev.kord.core.entity.interaction.ComponentInteraction.message","location":"core/dev.kord.core.entity.interaction/-component-interaction/message.html","searchKeys":["message","open val message: Message","dev.kord.core.entity.interaction.ComponentInteraction.message"]},{"name":"open val message: Message?","description":"dev.kord.core.entity.interaction.ModalSubmitInteraction.message","location":"core/dev.kord.core.entity.interaction/-modal-submit-interaction/message.html","searchKeys":["message","open val message: Message?","dev.kord.core.entity.interaction.ModalSubmitInteraction.message"]},{"name":"open val messageCount: OptionalInt","description":"dev.kord.core.entity.channel.thread.ThreadChannel.messageCount","location":"core/dev.kord.core.entity.channel.thread/-thread-channel/message-count.html","searchKeys":["messageCount","open val messageCount: OptionalInt","dev.kord.core.entity.channel.thread.ThreadChannel.messageCount"]},{"name":"open val messages: Flow<Message>","description":"dev.kord.core.behavior.channel.MessageChannelBehavior.messages","location":"core/dev.kord.core.behavior.channel/-message-channel-behavior/messages.html","searchKeys":["messages","open val messages: Flow<Message>","dev.kord.core.behavior.channel.MessageChannelBehavior.messages"]},{"name":"open val messages: Map<Snowflake, Message>","description":"dev.kord.core.entity.interaction.MessageCommandInteraction.messages","location":"core/dev.kord.core.entity.interaction/-message-command-interaction/messages.html","searchKeys":["messages","open val messages: Map<Snowflake, Message>","dev.kord.core.entity.interaction.MessageCommandInteraction.messages"]},{"name":"open val modalId: String","description":"dev.kord.core.entity.interaction.ModalSubmitInteraction.modalId","location":"core/dev.kord.core.entity.interaction/-modal-submit-interaction/modal-id.html","searchKeys":["modalId","open val modalId: String","dev.kord.core.entity.interaction.ModalSubmitInteraction.modalId"]},{"name":"open val name: String","description":"dev.kord.core.entity.application.ApplicationCommand.name","location":"core/dev.kord.core.entity.application/-application-command/name.html","searchKeys":["name","open val name: String","dev.kord.core.entity.application.ApplicationCommand.name"]},{"name":"open val name: String","description":"dev.kord.core.entity.channel.GuildChannel.name","location":"core/dev.kord.core.entity.channel/-guild-channel/name.html","searchKeys":["name","open val name: String","dev.kord.core.entity.channel.GuildChannel.name"]},{"name":"open val nameLocalizations: Map<Locale, String>","description":"dev.kord.core.entity.application.ApplicationCommand.nameLocalizations","location":"core/dev.kord.core.entity.application/-application-command/name-localizations.html","searchKeys":["nameLocalizations","open val nameLocalizations: Map<Locale, String>","dev.kord.core.entity.application.ApplicationCommand.nameLocalizations"]},{"name":"open val numbers: Map<String, Double>","description":"dev.kord.core.entity.interaction.InteractionCommand.numbers","location":"core/dev.kord.core.entity.interaction/-interaction-command/numbers.html","searchKeys":["numbers","open val numbers: Map<String, Double>","dev.kord.core.entity.interaction.InteractionCommand.numbers"]},{"name":"open val owner: UserBehavior","description":"dev.kord.core.entity.channel.thread.ThreadChannel.owner","location":"core/dev.kord.core.entity.channel.thread/-thread-channel/owner.html","searchKeys":["owner","open val owner: UserBehavior","dev.kord.core.entity.channel.thread.ThreadChannel.owner"]},{"name":"open val ownerId: Snowflake","description":"dev.kord.core.entity.channel.thread.ThreadChannel.ownerId","location":"core/dev.kord.core.entity.channel.thread/-thread-channel/owner-id.html","searchKeys":["ownerId","open val ownerId: Snowflake","dev.kord.core.entity.channel.thread.ThreadChannel.ownerId"]},{"name":"open val parent: ThreadParentChannelBehavior","description":"dev.kord.core.behavior.channel.threads.ThreadChannelBehavior.parent","location":"core/dev.kord.core.behavior.channel.threads/-thread-channel-behavior/parent.html","searchKeys":["parent","open val parent: ThreadParentChannelBehavior","dev.kord.core.behavior.channel.threads.ThreadChannelBehavior.parent"]},{"name":"open val permissionOverwrites: Set<PermissionOverwriteEntity>","description":"dev.kord.core.entity.channel.TopGuildChannel.permissionOverwrites","location":"core/dev.kord.core.entity.channel/-top-guild-channel/permission-overwrites.html","searchKeys":["permissionOverwrites","open val permissionOverwrites: Set<PermissionOverwriteEntity>","dev.kord.core.entity.channel.TopGuildChannel.permissionOverwrites"]},{"name":"open val permissions: Permissions","description":"dev.kord.core.entity.interaction.GuildInteraction.permissions","location":"core/dev.kord.core.entity.interaction/-guild-interaction/permissions.html","searchKeys":["permissions","open val permissions: Permissions","dev.kord.core.entity.interaction.GuildInteraction.permissions"]},{"name":"open val pinnedMessages: Flow<Message>","description":"dev.kord.core.behavior.channel.MessageChannelBehavior.pinnedMessages","location":"core/dev.kord.core.behavior.channel/-message-channel-behavior/pinned-messages.html","searchKeys":["pinnedMessages","open val pinnedMessages: Flow<Message>","dev.kord.core.behavior.channel.MessageChannelBehavior.pinnedMessages"]},{"name":"open val presences: Flow<Presence>","description":"dev.kord.core.behavior.GuildBehavior.presences","location":"core/dev.kord.core.behavior/-guild-behavior/presences.html","searchKeys":["presences","open val presences: Flow<Presence>","dev.kord.core.behavior.GuildBehavior.presences"]},{"name":"open val rateLimitPerUser: Duration?","description":"dev.kord.core.entity.channel.thread.ThreadChannel.rateLimitPerUser","location":"core/dev.kord.core.entity.channel.thread/-thread-channel/rate-limit-per-user.html","searchKeys":["rateLimitPerUser","open val rateLimitPerUser: Duration?","dev.kord.core.entity.channel.thread.ThreadChannel.rateLimitPerUser"]},{"name":"open val rawPosition: Int","description":"dev.kord.core.entity.channel.TopGuildChannel.rawPosition","location":"core/dev.kord.core.entity.channel/-top-guild-channel/raw-position.html","searchKeys":["rawPosition","open val rawPosition: Int","dev.kord.core.entity.channel.TopGuildChannel.rawPosition"]},{"name":"open val regions: Flow<Region>","description":"dev.kord.core.behavior.GuildBehavior.regions","location":"core/dev.kord.core.behavior/-guild-behavior/regions.html","searchKeys":["regions","open val regions: Flow<Region>","dev.kord.core.behavior.GuildBehavior.regions"]},{"name":"open val resolvedObjects: ResolvedObjects?","description":"dev.kord.core.entity.interaction.ApplicationCommandInteraction.resolvedObjects","location":"core/dev.kord.core.entity.interaction/-application-command-interaction/resolved-objects.html","searchKeys":["resolvedObjects","open val resolvedObjects: ResolvedObjects?","dev.kord.core.entity.interaction.ApplicationCommandInteraction.resolvedObjects"]},{"name":"open val resolvedObjects: ResolvedObjects?","description":"dev.kord.core.entity.interaction.InteractionCommand.resolvedObjects","location":"core/dev.kord.core.entity.interaction/-interaction-command/resolved-objects.html","searchKeys":["resolvedObjects","open val resolvedObjects: ResolvedObjects?","dev.kord.core.entity.interaction.InteractionCommand.resolvedObjects"]},{"name":"open val roles: Flow<Role>","description":"dev.kord.core.behavior.GuildBehavior.roles","location":"core/dev.kord.core.behavior/-guild-behavior/roles.html","searchKeys":["roles","open val roles: Flow<Role>","dev.kord.core.behavior.GuildBehavior.roles"]},{"name":"open val roles: Map<String, Role>","description":"dev.kord.core.entity.interaction.InteractionCommand.roles","location":"core/dev.kord.core.entity.interaction/-interaction-command/roles.html","searchKeys":["roles","open val roles: Map<String, Role>","dev.kord.core.entity.interaction.InteractionCommand.roles"]},{"name":"open val rootId: Snowflake","description":"dev.kord.core.entity.interaction.InteractionCommand.rootId","location":"core/dev.kord.core.entity.interaction/-interaction-command/root-id.html","searchKeys":["rootId","open val rootId: Snowflake","dev.kord.core.entity.interaction.InteractionCommand.rootId"]},{"name":"open val rootName: String","description":"dev.kord.core.entity.interaction.InteractionCommand.rootName","location":"core/dev.kord.core.entity.interaction/-interaction-command/root-name.html","searchKeys":["rootName","open val rootName: String","dev.kord.core.entity.interaction.InteractionCommand.rootName"]},{"name":"open val scheduledEventId: Snowflake","description":"dev.kord.core.event.guild.GuildScheduledEventEvent.scheduledEventId","location":"core/dev.kord.core.event.guild/-guild-scheduled-event-event/scheduled-event-id.html","searchKeys":["scheduledEventId","open val scheduledEventId: Snowflake","dev.kord.core.event.guild.GuildScheduledEventEvent.scheduledEventId"]},{"name":"open val scheduledEvents: Flow<GuildScheduledEvent>","description":"dev.kord.core.behavior.GuildBehavior.scheduledEvents","location":"core/dev.kord.core.behavior/-guild-behavior/scheduled-events.html","searchKeys":["scheduledEvents","open val scheduledEvents: Flow<GuildScheduledEvent>","dev.kord.core.behavior.GuildBehavior.scheduledEvents"]},{"name":"open val stickers: Flow<GuildSticker>","description":"dev.kord.core.behavior.GuildBehavior.stickers","location":"core/dev.kord.core.behavior/-guild-behavior/stickers.html","searchKeys":["stickers","open val stickers: Flow<GuildSticker>","dev.kord.core.behavior.GuildBehavior.stickers"]},{"name":"open val strings: Map<String, String>","description":"dev.kord.core.entity.interaction.InteractionCommand.strings","location":"core/dev.kord.core.entity.interaction/-interaction-command/strings.html","searchKeys":["strings","open val strings: Map<String, String>","dev.kord.core.entity.interaction.InteractionCommand.strings"]},{"name":"open val subCommands: Map<String, ChatInputSubCommand>","description":"dev.kord.core.entity.application.ChatInputCommandCommand.subCommands","location":"core/dev.kord.core.entity.application/-chat-input-command-command/sub-commands.html","searchKeys":["subCommands","open val subCommands: Map<String, ChatInputSubCommand>","dev.kord.core.entity.application.ChatInputCommandCommand.subCommands"]},{"name":"open val target: MessageBehavior","description":"dev.kord.core.entity.interaction.MessageCommandInteraction.target","location":"core/dev.kord.core.entity.interaction/-message-command-interaction/target.html","searchKeys":["target","open val target: MessageBehavior","dev.kord.core.entity.interaction.MessageCommandInteraction.target"]},{"name":"open val target: UserBehavior","description":"dev.kord.core.entity.interaction.UserCommandInteraction.target","location":"core/dev.kord.core.entity.interaction/-user-command-interaction/target.html","searchKeys":["target","open val target: UserBehavior","dev.kord.core.entity.interaction.UserCommandInteraction.target"]},{"name":"open val targetId: Snowflake","description":"dev.kord.core.entity.interaction.MessageCommandInteraction.targetId","location":"core/dev.kord.core.entity.interaction/-message-command-interaction/target-id.html","searchKeys":["targetId","open val targetId: Snowflake","dev.kord.core.entity.interaction.MessageCommandInteraction.targetId"]},{"name":"open val targetId: Snowflake","description":"dev.kord.core.entity.interaction.UserCommandInteraction.targetId","location":"core/dev.kord.core.entity.interaction/-user-command-interaction/target-id.html","searchKeys":["targetId","open val targetId: Snowflake","dev.kord.core.entity.interaction.UserCommandInteraction.targetId"]},{"name":"open val templates: Flow<Template>","description":"dev.kord.core.behavior.GuildBehavior.templates","location":"core/dev.kord.core.behavior/-guild-behavior/templates.html","searchKeys":["templates","open val templates: Flow<Template>","dev.kord.core.behavior.GuildBehavior.templates"]},{"name":"open val textInputs: Map<String, TextInputComponent>","description":"dev.kord.core.entity.interaction.ModalSubmitInteraction.textInputs","location":"core/dev.kord.core.entity.interaction/-modal-submit-interaction/text-inputs.html","searchKeys":["textInputs","open val textInputs: Map<String, TextInputComponent>","dev.kord.core.entity.interaction.ModalSubmitInteraction.textInputs"]},{"name":"open val topic: String?","description":"dev.kord.core.entity.channel.TopGuildMessageChannel.topic","location":"core/dev.kord.core.entity.channel/-top-guild-message-channel/topic.html","searchKeys":["topic","open val topic: String?","dev.kord.core.entity.channel.TopGuildMessageChannel.topic"]},{"name":"open val type: ApplicationCommandType","description":"dev.kord.core.entity.application.ApplicationCommand.type","location":"core/dev.kord.core.entity.application/-application-command/type.html","searchKeys":["type","open val type: ApplicationCommandType","dev.kord.core.entity.application.ApplicationCommand.type"]},{"name":"open val type: ChannelType","description":"dev.kord.core.entity.channel.Channel.type","location":"core/dev.kord.core.entity.channel/-channel/type.html","searchKeys":["type","open val type: ChannelType","dev.kord.core.entity.channel.Channel.type"]},{"name":"open val type: ComponentType","description":"dev.kord.core.entity.component.Component.type","location":"core/dev.kord.core.entity.component/-component/type.html","searchKeys":["type","open val type: ComponentType","dev.kord.core.entity.component.Component.type"]},{"name":"open val type: InteractionType","description":"dev.kord.core.entity.interaction.Interaction.type","location":"core/dev.kord.core.entity.interaction/-interaction/type.html","searchKeys":["type","open val type: InteractionType","dev.kord.core.entity.interaction.Interaction.type"]},{"name":"open val users: Flow<User>","description":"dev.kord.core.behavior.GuildScheduledEventBehavior.users","location":"core/dev.kord.core.behavior/-guild-scheduled-event-behavior/users.html","searchKeys":["users","open val users: Flow<User>","dev.kord.core.behavior.GuildScheduledEventBehavior.users"]},{"name":"open val users: Map<Snowflake, User>","description":"dev.kord.core.entity.interaction.UserCommandInteraction.users","location":"core/dev.kord.core.entity.interaction/-user-command-interaction/users.html","searchKeys":["users","open val users: Map<Snowflake, User>","dev.kord.core.entity.interaction.UserCommandInteraction.users"]},{"name":"open val users: Map<String, User>","description":"dev.kord.core.entity.interaction.InteractionCommand.users","location":"core/dev.kord.core.entity.interaction/-interaction-command/users.html","searchKeys":["users","open val users: Map<String, User>","dev.kord.core.entity.interaction.InteractionCommand.users"]},{"name":"open val values: List<String>","description":"dev.kord.core.entity.interaction.SelectMenuInteraction.values","location":"core/dev.kord.core.entity.interaction/-select-menu-interaction/values.html","searchKeys":["values","open val values: List<String>","dev.kord.core.entity.interaction.SelectMenuInteraction.values"]},{"name":"open val version: Int","description":"dev.kord.core.entity.interaction.Interaction.version","location":"core/dev.kord.core.entity.interaction/-interaction/version.html","searchKeys":["version","open val version: Int","dev.kord.core.entity.interaction.Interaction.version"]},{"name":"open val version: Snowflake","description":"dev.kord.core.entity.application.ApplicationCommand.version","location":"core/dev.kord.core.entity.application/-application-command/version.html","searchKeys":["version","open val version: Snowflake","dev.kord.core.entity.application.ApplicationCommand.version"]},{"name":"open val voiceStates: Flow<VoiceState>","description":"dev.kord.core.behavior.GuildBehavior.voiceStates","location":"core/dev.kord.core.behavior/-guild-behavior/voice-states.html","searchKeys":["voiceStates","open val voiceStates: Flow<VoiceState>","dev.kord.core.behavior.GuildBehavior.voiceStates"]},{"name":"open val voiceStates: Flow<VoiceState>","description":"dev.kord.core.behavior.channel.BaseVoiceChannelBehavior.voiceStates","location":"core/dev.kord.core.behavior.channel/-base-voice-channel-behavior/voice-states.html","searchKeys":["voiceStates","open val voiceStates: Flow<VoiceState>","dev.kord.core.behavior.channel.BaseVoiceChannelBehavior.voiceStates"]},{"name":"open val webhooks: Flow<Webhook>","description":"dev.kord.core.behavior.GuildBehavior.webhooks","location":"core/dev.kord.core.behavior/-guild-behavior/webhooks.html","searchKeys":["webhooks","open val webhooks: Flow<Webhook>","dev.kord.core.behavior.GuildBehavior.webhooks"]},{"name":"open val webhooks: Flow<Webhook>","description":"dev.kord.core.behavior.channel.TopGuildMessageChannelBehavior.webhooks","location":"core/dev.kord.core.behavior.channel/-top-guild-message-channel-behavior/webhooks.html","searchKeys":["webhooks","open val webhooks: Flow<Webhook>","dev.kord.core.behavior.channel.TopGuildMessageChannelBehavior.webhooks"]},{"name":"operator fun <T : EntitySupplier> invoke(supplier: (Kord) -> T): EntitySupplyStrategy<T>","description":"dev.kord.core.supplier.EntitySupplyStrategy.Companion.invoke","location":"core/dev.kord.core.supplier/-entity-supply-strategy/-companion/invoke.html","searchKeys":["invoke","operator fun <T : EntitySupplier> invoke(supplier: (Kord) -> T): EntitySupplyStrategy<T>","dev.kord.core.supplier.EntitySupplyStrategy.Companion.invoke"]},{"name":"operator fun <T> get(value: AuditLogChangeKey<T>): AuditLogChange<T>?","description":"dev.kord.core.entity.AuditLogEntry.get","location":"core/dev.kord.core.entity/-audit-log-entry/get.html","searchKeys":["get","operator fun <T> get(value: AuditLogChangeKey<T>): AuditLogChange<T>?","dev.kord.core.entity.AuditLogEntry.get"]},{"name":"operator fun DefaultGateway.Companion.invoke(resources: ClientResources, retry: Retry = LinearRetry(2.seconds, 60.seconds, 10)): DefaultGateway","description":"dev.kord.core.builder.kord.invoke","location":"core/dev.kord.core.builder.kord/invoke.html","searchKeys":["invoke","operator fun DefaultGateway.Companion.invoke(resources: ClientResources, retry: Retry = LinearRetry(2.seconds, 60.seconds, 10)): DefaultGateway","dev.kord.core.builder.kord.invoke"]},{"name":"operator fun plus(partialMessage: DiscordPartialMessage): MessageData","description":"dev.kord.core.cache.data.MessageData.plus","location":"core/dev.kord.core.cache.data/-message-data/plus.html","searchKeys":["plus","operator fun plus(partialMessage: DiscordPartialMessage): MessageData","dev.kord.core.cache.data.MessageData.plus"]},{"name":"operator override fun equals(other: Any?): Boolean","description":"dev.kord.core.entity.BaseApplication.equals","location":"core/dev.kord.core.entity/-base-application/equals.html","searchKeys":["equals","operator override fun equals(other: Any?): Boolean","dev.kord.core.entity.BaseApplication.equals"]},{"name":"operator override fun equals(other: Any?): Boolean","description":"dev.kord.core.entity.automoderation.AutoModerationRule.equals","location":"core/dev.kord.core.entity.automoderation/-auto-moderation-rule/equals.html","searchKeys":["equals","operator override fun equals(other: Any?): Boolean","dev.kord.core.entity.automoderation.AutoModerationRule.equals"]},{"name":"override fun hashCode(): Int","description":"dev.kord.core.entity.BaseApplication.hashCode","location":"core/dev.kord.core.entity/-base-application/hash-code.html","searchKeys":["hashCode","override fun hashCode(): Int","dev.kord.core.entity.BaseApplication.hashCode"]},{"name":"override fun hashCode(): Int","description":"dev.kord.core.entity.automoderation.AutoModerationRule.hashCode","location":"core/dev.kord.core.entity.automoderation/-auto-moderation-rule/hash-code.html","searchKeys":["hashCode","override fun hashCode(): Int","dev.kord.core.entity.automoderation.AutoModerationRule.hashCode"]},{"name":"override val events: SharedFlow<Event>","description":"dev.kord.core.live.AbstractLiveKordEntity.events","location":"core/dev.kord.core.live/-abstract-live-kord-entity/events.html","searchKeys":["events","override val events: SharedFlow<Event>","dev.kord.core.live.AbstractLiveKordEntity.events"]},{"name":"override val guildId: Snowflake","description":"dev.kord.core.entity.automoderation.AutoModerationRule.guildId","location":"core/dev.kord.core.entity.automoderation/-auto-moderation-rule/guild-id.html","searchKeys":["guildId","override val guildId: Snowflake","dev.kord.core.entity.automoderation.AutoModerationRule.guildId"]},{"name":"override val id: Snowflake","description":"dev.kord.core.entity.BaseApplication.id","location":"core/dev.kord.core.entity/-base-application/id.html","searchKeys":["id","override val id: Snowflake","dev.kord.core.entity.BaseApplication.id"]},{"name":"override val id: Snowflake","description":"dev.kord.core.entity.automoderation.AutoModerationRule.id","location":"core/dev.kord.core.entity.automoderation/-auto-moderation-rule/id.html","searchKeys":["id","override val id: Snowflake","dev.kord.core.entity.automoderation.AutoModerationRule.id"]},{"name":"override val kord: Kord","description":"dev.kord.core.entity.BaseApplication.kord","location":"core/dev.kord.core.entity/-base-application/kord.html","searchKeys":["kord","override val kord: Kord","dev.kord.core.entity.BaseApplication.kord"]},{"name":"override val kord: Kord","description":"dev.kord.core.entity.Invite.kord","location":"core/dev.kord.core.entity/-invite/kord.html","searchKeys":["kord","override val kord: Kord","dev.kord.core.entity.Invite.kord"]},{"name":"override val kord: Kord","description":"dev.kord.core.entity.automoderation.AutoModerationAction.kord","location":"core/dev.kord.core.entity.automoderation/-auto-moderation-action/kord.html","searchKeys":["kord","override val kord: Kord","dev.kord.core.entity.automoderation.AutoModerationAction.kord"]},{"name":"override val kord: Kord","description":"dev.kord.core.entity.automoderation.AutoModerationRule.kord","location":"core/dev.kord.core.entity.automoderation/-auto-moderation-rule/kord.html","searchKeys":["kord","override val kord: Kord","dev.kord.core.entity.automoderation.AutoModerationRule.kord"]},{"name":"override val kord: Kord","description":"dev.kord.core.live.AbstractLiveKordEntity.kord","location":"core/dev.kord.core.live/-abstract-live-kord-entity/kord.html","searchKeys":["kord","override val kord: Kord","dev.kord.core.live.AbstractLiveKordEntity.kord"]},{"name":"override val supplier: EntitySupplier","description":"dev.kord.core.entity.BaseApplication.supplier","location":"core/dev.kord.core.entity/-base-application/supplier.html","searchKeys":["supplier","override val supplier: EntitySupplier","dev.kord.core.entity.BaseApplication.supplier"]},{"name":"override val supplier: EntitySupplier","description":"dev.kord.core.entity.Invite.supplier","location":"core/dev.kord.core.entity/-invite/supplier.html","searchKeys":["supplier","override val supplier: EntitySupplier","dev.kord.core.entity.Invite.supplier"]},{"name":"override val supplier: EntitySupplier","description":"dev.kord.core.entity.automoderation.AutoModerationRule.supplier","location":"core/dev.kord.core.entity.automoderation/-auto-moderation-rule/supplier.html","searchKeys":["supplier","override val supplier: EntitySupplier","dev.kord.core.entity.automoderation.AutoModerationRule.supplier"]},{"name":"sealed class AutoModerationAction : KordObject","description":"dev.kord.core.entity.automoderation.AutoModerationAction","location":"core/dev.kord.core.entity.automoderation/-auto-moderation-action/index.html","searchKeys":["AutoModerationAction","sealed class AutoModerationAction : KordObject","dev.kord.core.entity.automoderation.AutoModerationAction"]},{"name":"sealed class AutoModerationRule : TypedAutoModerationRuleBehavior","description":"dev.kord.core.entity.automoderation.AutoModerationRule","location":"core/dev.kord.core.entity.automoderation/-auto-moderation-rule/index.html","searchKeys":["AutoModerationRule","sealed class AutoModerationRule : TypedAutoModerationRuleBehavior","dev.kord.core.entity.automoderation.AutoModerationRule"]},{"name":"sealed class BaseApplication : KordEntity, Strategizable","description":"dev.kord.core.entity.BaseApplication","location":"core/dev.kord.core.entity/-base-application/index.html","searchKeys":["BaseApplication","sealed class BaseApplication : KordEntity, Strategizable","dev.kord.core.entity.BaseApplication"]},{"name":"sealed class Client","description":"dev.kord.core.entity.ClientStatus.Client","location":"core/dev.kord.core.entity/-client-status/-client/index.html","searchKeys":["Client","sealed class Client","dev.kord.core.entity.ClientStatus.Client"]},{"name":"sealed class ComponentData","description":"dev.kord.core.cache.data.ComponentData","location":"core/dev.kord.core.cache.data/-component-data/index.html","searchKeys":["ComponentData","sealed class ComponentData","dev.kord.core.cache.data.ComponentData"]},{"name":"sealed class DisconnectEvent : GatewayEvent","description":"dev.kord.core.event.gateway.DisconnectEvent","location":"core/dev.kord.core.event.gateway/-disconnect-event/index.html","searchKeys":["DisconnectEvent","sealed class DisconnectEvent : GatewayEvent","dev.kord.core.event.gateway.DisconnectEvent"]},{"name":"sealed class FollowupMessage : FollowupMessageBehavior","description":"dev.kord.core.entity.interaction.followup.FollowupMessage","location":"core/dev.kord.core.entity.interaction.followup/-followup-message/index.html","searchKeys":["FollowupMessage","sealed class FollowupMessage : FollowupMessageBehavior","dev.kord.core.entity.interaction.followup.FollowupMessage"]},{"name":"sealed class GatewayEvent : Event","description":"dev.kord.core.event.gateway.GatewayEvent","location":"core/dev.kord.core.event.gateway/-gateway-event/index.html","searchKeys":["GatewayEvent","sealed class GatewayEvent : Event","dev.kord.core.event.gateway.GatewayEvent"]},{"name":"sealed class Icon : KordObject","description":"dev.kord.core.entity.Icon","location":"core/dev.kord.core.entity/-icon/index.html","searchKeys":["Icon","sealed class Icon : KordObject","dev.kord.core.entity.Icon"]},{"name":"sealed class MessageInteractionResponse : MessageInteractionResponseBehavior","description":"dev.kord.core.entity.interaction.response.MessageInteractionResponse","location":"core/dev.kord.core.entity.interaction.response/-message-interaction-response/index.html","searchKeys":["MessageInteractionResponse","sealed class MessageInteractionResponse : MessageInteractionResponseBehavior","dev.kord.core.entity.interaction.response.MessageInteractionResponse"]},{"name":"sealed class ReactionEmoji","description":"dev.kord.core.entity.ReactionEmoji","location":"core/dev.kord.core.entity/-reaction-emoji/index.html","searchKeys":["ReactionEmoji","sealed class ReactionEmoji","dev.kord.core.entity.ReactionEmoji"]},{"name":"suspend fun <T : MessageChannelBehavior, R> T.withTyping(block: suspend T.() -> R): R","description":"dev.kord.core.behavior.channel.withTyping","location":"core/dev.kord.core.behavior.channel/with-typing.html","searchKeys":["withTyping","suspend fun <T : MessageChannelBehavior, R> T.withTyping(block: suspend T.() -> R): R","dev.kord.core.behavior.channel.withTyping"]},{"name":"suspend fun <T> getGlobalApplicationCommandOf(commandId: Snowflake): T","description":"dev.kord.core.Kord.getGlobalApplicationCommandOf","location":"core/dev.kord.core/-kord/get-global-application-command-of.html","searchKeys":["getGlobalApplicationCommandOf","suspend fun <T> getGlobalApplicationCommandOf(commandId: Snowflake): T","dev.kord.core.Kord.getGlobalApplicationCommandOf"]},{"name":"suspend fun <T> getGlobalApplicationCommandOfOrNull(commandId: Snowflake): T?","description":"dev.kord.core.Kord.getGlobalApplicationCommandOfOrNull","location":"core/dev.kord.core/-kord/get-global-application-command-of-or-null.html","searchKeys":["getGlobalApplicationCommandOfOrNull","suspend fun <T> getGlobalApplicationCommandOfOrNull(commandId: Snowflake): T?","dev.kord.core.Kord.getGlobalApplicationCommandOfOrNull"]},{"name":"suspend fun CategoryBehavior.edit(builder: CategoryModifyBuilder.() -> Unit): Category","description":"dev.kord.core.behavior.channel.edit","location":"core/dev.kord.core.behavior.channel/edit.html","searchKeys":["edit","suspend fun CategoryBehavior.edit(builder: CategoryModifyBuilder.() -> Unit): Category","dev.kord.core.behavior.channel.edit"]},{"name":"suspend fun DataCache.createView(): DataCacheView","description":"dev.kord.core.cache.createView","location":"core/dev.kord.core.cache/create-view.html","searchKeys":["createView","suspend fun DataCache.createView(): DataCacheView","dev.kord.core.cache.createView"]},{"name":"suspend fun GuildBehavior.createScheduledEvent(name: String, privacyLevel: GuildScheduledEventPrivacyLevel, scheduledStartTime: Instant, entityType: ScheduledEntityType, builder: ScheduledEventCreateBuilder.() -> Unit): GuildScheduledEvent","description":"dev.kord.core.behavior.createScheduledEvent","location":"core/dev.kord.core.behavior/create-scheduled-event.html","searchKeys":["createScheduledEvent","suspend fun GuildBehavior.createScheduledEvent(name: String, privacyLevel: GuildScheduledEventPrivacyLevel, scheduledStartTime: Instant, entityType: ScheduledEntityType, builder: ScheduledEventCreateBuilder.() -> Unit): GuildScheduledEvent","dev.kord.core.behavior.createScheduledEvent"]},{"name":"suspend fun Message.live(coroutineScope: CoroutineScope = kord + SupervisorJob(kord.coroutineContext.job)): LiveMessage","description":"dev.kord.core.live.live","location":"core/dev.kord.core.live/live.html","searchKeys":["live","suspend fun Message.live(coroutineScope: CoroutineScope = kord + SupervisorJob(kord.coroutineContext.job)): LiveMessage","dev.kord.core.live.live"]},{"name":"suspend fun Message.live(coroutineScope: CoroutineScope = kord + SupervisorJob(kord.coroutineContext.job), block: LiveMessage.() -> Unit): LiveMessage","description":"dev.kord.core.live.live","location":"core/dev.kord.core.live/live.html","searchKeys":["live","suspend fun Message.live(coroutineScope: CoroutineScope = kord + SupervisorJob(kord.coroutineContext.job), block: LiveMessage.() -> Unit): LiveMessage","dev.kord.core.live.live"]},{"name":"suspend fun StageChannelBehavior.edit(builder: StageVoiceChannelModifyBuilder.() -> Unit): StageChannel","description":"dev.kord.core.behavior.channel.edit","location":"core/dev.kord.core.behavior.channel/edit.html","searchKeys":["edit","suspend fun StageChannelBehavior.edit(builder: StageVoiceChannelModifyBuilder.() -> Unit): StageChannel","dev.kord.core.behavior.channel.edit"]},{"name":"suspend fun TemplateBehavior.createGuild(name: String, builder: GuildFromTemplateCreateBuilder.() -> Unit): Guild","description":"dev.kord.core.behavior.createGuild","location":"core/dev.kord.core.behavior/create-guild.html","searchKeys":["createGuild","suspend fun TemplateBehavior.createGuild(name: String, builder: GuildFromTemplateCreateBuilder.() -> Unit): Guild","dev.kord.core.behavior.createGuild"]},{"name":"suspend fun TemplateBehavior.edit(builder: GuildTemplateModifyBuilder.() -> Unit): Template","description":"dev.kord.core.behavior.edit","location":"core/dev.kord.core.behavior/edit.html","searchKeys":["edit","suspend fun TemplateBehavior.edit(builder: GuildTemplateModifyBuilder.() -> Unit): Template","dev.kord.core.behavior.edit"]},{"name":"suspend fun build(): Kord","description":"dev.kord.core.builder.kord.KordBuilder.build","location":"core/dev.kord.core.builder.kord/-kord-builder/build.html","searchKeys":["build","suspend fun build(): Kord","dev.kord.core.builder.kord.KordBuilder.build"]},{"name":"suspend fun delete(reason: String? = null)","description":"dev.kord.core.entity.GuildEmoji.delete","location":"core/dev.kord.core.entity/-guild-emoji/delete.html","searchKeys":["delete","suspend fun delete(reason: String? = null)","dev.kord.core.entity.GuildEmoji.delete"]},{"name":"suspend fun delete(reason: String? = null)","description":"dev.kord.core.entity.Integration.delete","location":"core/dev.kord.core.entity/-integration/delete.html","searchKeys":["delete","suspend fun delete(reason: String? = null)","dev.kord.core.entity.Integration.delete"]},{"name":"suspend fun delete(reason: String? = null)","description":"dev.kord.core.entity.PermissionOverwriteEntity.delete","location":"core/dev.kord.core.entity/-permission-overwrite-entity/delete.html","searchKeys":["delete","suspend fun delete(reason: String? = null)","dev.kord.core.entity.PermissionOverwriteEntity.delete"]},{"name":"suspend fun delete(reason: String? = null): Invite","description":"dev.kord.core.entity.Invite.delete","location":"core/dev.kord.core.entity/-invite/delete.html","searchKeys":["delete","suspend fun delete(reason: String? = null): Invite","dev.kord.core.entity.Invite.delete"]},{"name":"suspend fun delete(reason: String? = null): Invite","description":"dev.kord.core.event.guild.InviteCreateEvent.delete","location":"core/dev.kord.core.event.guild/-invite-create-event/delete.html","searchKeys":["delete","suspend fun delete(reason: String? = null): Invite","dev.kord.core.event.guild.InviteCreateEvent.delete"]},{"name":"suspend fun editSelf(builder: CurrentUserModifyBuilder.() -> Unit): User","description":"dev.kord.core.Kord.editSelf","location":"core/dev.kord.core/-kord/edit-self.html","searchKeys":["editSelf","suspend fun editSelf(builder: CurrentUserModifyBuilder.() -> Unit): User","dev.kord.core.Kord.editSelf"]},{"name":"suspend fun getAfkChannel(): VoiceChannel?","description":"dev.kord.core.entity.Guild.getAfkChannel","location":"core/dev.kord.core.entity/-guild/get-afk-channel.html","searchKeys":["getAfkChannel","suspend fun getAfkChannel(): VoiceChannel?","dev.kord.core.entity.Guild.getAfkChannel"]},{"name":"suspend fun getApplicationInfo(): Application","description":"dev.kord.core.Kord.getApplicationInfo","location":"core/dev.kord.core/-kord/get-application-info.html","searchKeys":["getApplicationInfo","suspend fun getApplicationInfo(): Application","dev.kord.core.Kord.getApplicationInfo"]},{"name":"suspend fun getApplicationInfo(): Application","description":"dev.kord.core.supplier.RestEntitySupplier.getApplicationInfo","location":"core/dev.kord.core.supplier/-rest-entity-supplier/get-application-info.html","searchKeys":["getApplicationInfo","suspend fun getApplicationInfo(): Application","dev.kord.core.supplier.RestEntitySupplier.getApplicationInfo"]},{"name":"suspend fun getAuthorAsMember(): Member?","description":"dev.kord.core.entity.Message.getAuthorAsMember","location":"core/dev.kord.core.entity/-message/get-author-as-member.html","searchKeys":["getAuthorAsMember","suspend fun getAuthorAsMember(): Member?","dev.kord.core.entity.Message.getAuthorAsMember"]},{"name":"suspend fun getBan(): Ban","description":"dev.kord.core.event.guild.BanAddEvent.getBan","location":"core/dev.kord.core.event.guild/-ban-add-event/get-ban.html","searchKeys":["getBan","suspend fun getBan(): Ban","dev.kord.core.event.guild.BanAddEvent.getBan"]},{"name":"suspend fun getBanOrNull(): Ban?","description":"dev.kord.core.event.guild.BanAddEvent.getBanOrNull","location":"core/dev.kord.core.event.guild/-ban-add-event/get-ban-or-null.html","searchKeys":["getBanOrNull","suspend fun getBanOrNull(): Ban?","dev.kord.core.event.guild.BanAddEvent.getBanOrNull"]},{"name":"suspend fun getBanner(format: Image.Format): Image?","description":"dev.kord.core.entity.Guild.getBanner","location":"core/dev.kord.core.entity/-guild/get-banner.html","searchKeys":["getBanner","suspend fun getBanner(format: Image.Format): Image?","dev.kord.core.entity.Guild.getBanner"]},{"name":"suspend fun getBanner(format: Image.Format): Image?","description":"dev.kord.core.entity.PartialGuild.getBanner","location":"core/dev.kord.core.entity/-partial-guild/get-banner.html","searchKeys":["getBanner","suspend fun getBanner(format: Image.Format): Image?","dev.kord.core.entity.PartialGuild.getBanner"]},{"name":"suspend fun getBot(): Member?","description":"dev.kord.core.entity.RoleTags.getBot","location":"core/dev.kord.core.entity/-role-tags/get-bot.html","searchKeys":["getBot","suspend fun getBot(): Member?","dev.kord.core.entity.RoleTags.getBot"]},{"name":"suspend fun getChannel(): Channel","description":"dev.kord.core.event.guild.InviteCreateEvent.getChannel","location":"core/dev.kord.core.event.guild/-invite-create-event/get-channel.html","searchKeys":["getChannel","suspend fun getChannel(): Channel","dev.kord.core.event.guild.InviteCreateEvent.getChannel"]},{"name":"suspend fun getChannel(): Channel","description":"dev.kord.core.event.guild.InviteDeleteEvent.getChannel","location":"core/dev.kord.core.event.guild/-invite-delete-event/get-channel.html","searchKeys":["getChannel","suspend fun getChannel(): Channel","dev.kord.core.event.guild.InviteDeleteEvent.getChannel"]},{"name":"suspend fun getChannel(): MessageChannel","description":"dev.kord.core.entity.Webhook.getChannel","location":"core/dev.kord.core.entity/-webhook/get-channel.html","searchKeys":["getChannel","suspend fun getChannel(): MessageChannel","dev.kord.core.entity.Webhook.getChannel"]},{"name":"suspend fun getChannel(): MessageChannel","description":"dev.kord.core.event.channel.ChannelPinsUpdateEvent.getChannel","location":"core/dev.kord.core.event.channel/-channel-pins-update-event/get-channel.html","searchKeys":["getChannel","suspend fun getChannel(): MessageChannel","dev.kord.core.event.channel.ChannelPinsUpdateEvent.getChannel"]},{"name":"suspend fun getChannel(): MessageChannel","description":"dev.kord.core.event.channel.TypingStartEvent.getChannel","location":"core/dev.kord.core.event.channel/-typing-start-event/get-channel.html","searchKeys":["getChannel","suspend fun getChannel(): MessageChannel","dev.kord.core.event.channel.TypingStartEvent.getChannel"]},{"name":"suspend fun getChannel(): MessageChannel","description":"dev.kord.core.event.message.MessageBulkDeleteEvent.getChannel","location":"core/dev.kord.core.event.message/-message-bulk-delete-event/get-channel.html","searchKeys":["getChannel","suspend fun getChannel(): MessageChannel","dev.kord.core.event.message.MessageBulkDeleteEvent.getChannel"]},{"name":"suspend fun getChannel(): MessageChannel","description":"dev.kord.core.event.message.MessageDeleteEvent.getChannel","location":"core/dev.kord.core.event.message/-message-delete-event/get-channel.html","searchKeys":["getChannel","suspend fun getChannel(): MessageChannel","dev.kord.core.event.message.MessageDeleteEvent.getChannel"]},{"name":"suspend fun getChannel(): MessageChannel","description":"dev.kord.core.event.message.ReactionAddEvent.getChannel","location":"core/dev.kord.core.event.message/-reaction-add-event/get-channel.html","searchKeys":["getChannel","suspend fun getChannel(): MessageChannel","dev.kord.core.event.message.ReactionAddEvent.getChannel"]},{"name":"suspend fun getChannel(): MessageChannel","description":"dev.kord.core.event.message.ReactionRemoveAllEvent.getChannel","location":"core/dev.kord.core.event.message/-reaction-remove-all-event/get-channel.html","searchKeys":["getChannel","suspend fun getChannel(): MessageChannel","dev.kord.core.event.message.ReactionRemoveAllEvent.getChannel"]},{"name":"suspend fun getChannel(): MessageChannel","description":"dev.kord.core.event.message.ReactionRemoveEvent.getChannel","location":"core/dev.kord.core.event.message/-reaction-remove-event/get-channel.html","searchKeys":["getChannel","suspend fun getChannel(): MessageChannel","dev.kord.core.event.message.ReactionRemoveEvent.getChannel"]},{"name":"suspend fun getChannel(): TopGuildChannel","description":"dev.kord.core.entity.PermissionOverwriteEntity.getChannel","location":"core/dev.kord.core.entity/-permission-overwrite-entity/get-channel.html","searchKeys":["getChannel","suspend fun getChannel(): TopGuildChannel","dev.kord.core.entity.PermissionOverwriteEntity.getChannel"]},{"name":"suspend fun getChannel(): TopGuildMessageChannel","description":"dev.kord.core.event.guild.WebhookUpdateEvent.getChannel","location":"core/dev.kord.core.event.guild/-webhook-update-event/get-channel.html","searchKeys":["getChannel","suspend fun getChannel(): TopGuildMessageChannel","dev.kord.core.event.guild.WebhookUpdateEvent.getChannel"]},{"name":"suspend fun getChannel(): TopGuildMessageChannel","description":"dev.kord.core.event.message.ReactionRemoveEmojiEvent.getChannel","location":"core/dev.kord.core.event.message/-reaction-remove-emoji-event/get-channel.html","searchKeys":["getChannel","suspend fun getChannel(): TopGuildMessageChannel","dev.kord.core.event.message.ReactionRemoveEmojiEvent.getChannel"]},{"name":"suspend fun getChannel(id: Snowflake, strategy: EntitySupplyStrategy<*> = resources.defaultStrategy): Channel?","description":"dev.kord.core.Kord.getChannel","location":"core/dev.kord.core/-kord/get-channel.html","searchKeys":["getChannel","suspend fun getChannel(id: Snowflake, strategy: EntitySupplyStrategy<*> = resources.defaultStrategy): Channel?","dev.kord.core.Kord.getChannel"]},{"name":"suspend fun getChannelOrNUll(): Channel?","description":"dev.kord.core.event.guild.InviteCreateEvent.getChannelOrNUll","location":"core/dev.kord.core.event.guild/-invite-create-event/get-channel-or-n-ull.html","searchKeys":["getChannelOrNUll","suspend fun getChannelOrNUll(): Channel?","dev.kord.core.event.guild.InviteCreateEvent.getChannelOrNUll"]},{"name":"suspend fun getChannelOrNull(): BaseVoiceChannelBehavior?","description":"dev.kord.core.entity.VoiceState.getChannelOrNull","location":"core/dev.kord.core.entity/-voice-state/get-channel-or-null.html","searchKeys":["getChannelOrNull","suspend fun getChannelOrNull(): BaseVoiceChannelBehavior?","dev.kord.core.entity.VoiceState.getChannelOrNull"]},{"name":"suspend fun getChannelOrNull(): Channel?","description":"dev.kord.core.entity.Invite.getChannelOrNull","location":"core/dev.kord.core.entity/-invite/get-channel-or-null.html","searchKeys":["getChannelOrNull","suspend fun getChannelOrNull(): Channel?","dev.kord.core.entity.Invite.getChannelOrNull"]},{"name":"suspend fun getChannelOrNull(): Channel?","description":"dev.kord.core.event.guild.InviteDeleteEvent.getChannelOrNull","location":"core/dev.kord.core.event.guild/-invite-delete-event/get-channel-or-null.html","searchKeys":["getChannelOrNull","suspend fun getChannelOrNull(): Channel?","dev.kord.core.event.guild.InviteDeleteEvent.getChannelOrNull"]},{"name":"suspend fun getChannelOrNull(): MessageChannel?","description":"dev.kord.core.entity.Webhook.getChannelOrNull","location":"core/dev.kord.core.entity/-webhook/get-channel-or-null.html","searchKeys":["getChannelOrNull","suspend fun getChannelOrNull(): MessageChannel?","dev.kord.core.entity.Webhook.getChannelOrNull"]},{"name":"suspend fun getChannelOrNull(): MessageChannel?","description":"dev.kord.core.event.channel.ChannelPinsUpdateEvent.getChannelOrNull","location":"core/dev.kord.core.event.channel/-channel-pins-update-event/get-channel-or-null.html","searchKeys":["getChannelOrNull","suspend fun getChannelOrNull(): MessageChannel?","dev.kord.core.event.channel.ChannelPinsUpdateEvent.getChannelOrNull"]},{"name":"suspend fun getChannelOrNull(): MessageChannel?","description":"dev.kord.core.event.channel.TypingStartEvent.getChannelOrNull","location":"core/dev.kord.core.event.channel/-typing-start-event/get-channel-or-null.html","searchKeys":["getChannelOrNull","suspend fun getChannelOrNull(): MessageChannel?","dev.kord.core.event.channel.TypingStartEvent.getChannelOrNull"]},{"name":"suspend fun getChannelOrNull(): MessageChannel?","description":"dev.kord.core.event.message.MessageBulkDeleteEvent.getChannelOrNull","location":"core/dev.kord.core.event.message/-message-bulk-delete-event/get-channel-or-null.html","searchKeys":["getChannelOrNull","suspend fun getChannelOrNull(): MessageChannel?","dev.kord.core.event.message.MessageBulkDeleteEvent.getChannelOrNull"]},{"name":"suspend fun getChannelOrNull(): MessageChannel?","description":"dev.kord.core.event.message.MessageDeleteEvent.getChannelOrNull","location":"core/dev.kord.core.event.message/-message-delete-event/get-channel-or-null.html","searchKeys":["getChannelOrNull","suspend fun getChannelOrNull(): MessageChannel?","dev.kord.core.event.message.MessageDeleteEvent.getChannelOrNull"]},{"name":"suspend fun getChannelOrNull(): MessageChannel?","description":"dev.kord.core.event.message.ReactionAddEvent.getChannelOrNull","location":"core/dev.kord.core.event.message/-reaction-add-event/get-channel-or-null.html","searchKeys":["getChannelOrNull","suspend fun getChannelOrNull(): MessageChannel?","dev.kord.core.event.message.ReactionAddEvent.getChannelOrNull"]},{"name":"suspend fun getChannelOrNull(): MessageChannel?","description":"dev.kord.core.event.message.ReactionRemoveAllEvent.getChannelOrNull","location":"core/dev.kord.core.event.message/-reaction-remove-all-event/get-channel-or-null.html","searchKeys":["getChannelOrNull","suspend fun getChannelOrNull(): MessageChannel?","dev.kord.core.event.message.ReactionRemoveAllEvent.getChannelOrNull"]},{"name":"suspend fun getChannelOrNull(): MessageChannel?","description":"dev.kord.core.event.message.ReactionRemoveEvent.getChannelOrNull","location":"core/dev.kord.core.event.message/-reaction-remove-event/get-channel-or-null.html","searchKeys":["getChannelOrNull","suspend fun getChannelOrNull(): MessageChannel?","dev.kord.core.event.message.ReactionRemoveEvent.getChannelOrNull"]},{"name":"suspend fun getChannelOrNull(): TopGuildChannel?","description":"dev.kord.core.entity.GuildScheduledEvent.getChannelOrNull","location":"core/dev.kord.core.entity/-guild-scheduled-event/get-channel-or-null.html","searchKeys":["getChannelOrNull","suspend fun getChannelOrNull(): TopGuildChannel?","dev.kord.core.entity.GuildScheduledEvent.getChannelOrNull"]},{"name":"suspend fun getChannelOrNull(): TopGuildChannel?","description":"dev.kord.core.entity.GuildWidget.getChannelOrNull","location":"core/dev.kord.core.entity/-guild-widget/get-channel-or-null.html","searchKeys":["getChannelOrNull","suspend fun getChannelOrNull(): TopGuildChannel?","dev.kord.core.entity.GuildWidget.getChannelOrNull"]},{"name":"suspend fun getChannelOrNull(): TopGuildChannel?","description":"dev.kord.core.entity.PermissionOverwriteEntity.getChannelOrNull","location":"core/dev.kord.core.entity/-permission-overwrite-entity/get-channel-or-null.html","searchKeys":["getChannelOrNull","suspend fun getChannelOrNull(): TopGuildChannel?","dev.kord.core.entity.PermissionOverwriteEntity.getChannelOrNull"]},{"name":"suspend fun getChannelOrNull(): TopGuildMessageChannel?","description":"dev.kord.core.event.guild.WebhookUpdateEvent.getChannelOrNull","location":"core/dev.kord.core.event.guild/-webhook-update-event/get-channel-or-null.html","searchKeys":["getChannelOrNull","suspend fun getChannelOrNull(): TopGuildMessageChannel?","dev.kord.core.event.guild.WebhookUpdateEvent.getChannelOrNull"]},{"name":"suspend fun getChannelOrNull(): TopGuildMessageChannel?","description":"dev.kord.core.event.message.ReactionRemoveEmojiEvent.getChannelOrNull","location":"core/dev.kord.core.event.message/-reaction-remove-emoji-event/get-channel-or-null.html","searchKeys":["getChannelOrNull","suspend fun getChannelOrNull(): TopGuildMessageChannel?","dev.kord.core.event.message.ReactionRemoveEmojiEvent.getChannelOrNull"]},{"name":"suspend fun getChannels(): Flow<TopGuildChannel>","description":"dev.kord.core.event.channel.thread.ThreadListSyncEvent.getChannels","location":"core/dev.kord.core.event.channel.thread/-thread-list-sync-event/get-channels.html","searchKeys":["getChannels","suspend fun getChannels(): Flow<TopGuildChannel>","dev.kord.core.event.channel.thread.ThreadListSyncEvent.getChannels"]},{"name":"suspend fun getDefaultImage(): Image","description":"dev.kord.core.entity.User.Avatar.getDefaultImage","location":"core/dev.kord.core.entity/-user/-avatar/get-default-image.html","searchKeys":["getDefaultImage","suspend fun getDefaultImage(): Image","dev.kord.core.entity.User.Avatar.getDefaultImage"]},{"name":"suspend fun getDiscoverySplash(format: Image.Format): Image?","description":"dev.kord.core.entity.Guild.getDiscoverySplash","location":"core/dev.kord.core.entity/-guild/get-discovery-splash.html","searchKeys":["getDiscoverySplash","suspend fun getDiscoverySplash(format: Image.Format): Image?","dev.kord.core.entity.Guild.getDiscoverySplash"]},{"name":"suspend fun getDiscoverySplash(format: Image.Format): Image?","description":"dev.kord.core.entity.PartialGuild.getDiscoverySplash","location":"core/dev.kord.core.entity/-partial-guild/get-discovery-splash.html","searchKeys":["getDiscoverySplash","suspend fun getDiscoverySplash(format: Image.Format): Image?","dev.kord.core.entity.PartialGuild.getDiscoverySplash"]},{"name":"suspend fun getEmbedChannel(): TopGuildChannel?","description":"dev.kord.core.entity.Guild.getEmbedChannel","location":"core/dev.kord.core.entity/-guild/get-embed-channel.html","searchKeys":["getEmbedChannel","suspend fun getEmbedChannel(): TopGuildChannel?","dev.kord.core.entity.Guild.getEmbedChannel"]},{"name":"suspend fun getEmoji(emojiId: Snowflake): GuildEmoji","description":"dev.kord.core.entity.Guild.getEmoji","location":"core/dev.kord.core.entity/-guild/get-emoji.html","searchKeys":["getEmoji","suspend fun getEmoji(emojiId: Snowflake): GuildEmoji","dev.kord.core.entity.Guild.getEmoji"]},{"name":"suspend fun getEmojiOrNull(emojiId: Snowflake): GuildEmoji?","description":"dev.kord.core.entity.Guild.getEmojiOrNull","location":"core/dev.kord.core.entity/-guild/get-emoji-or-null.html","searchKeys":["getEmojiOrNull","suspend fun getEmojiOrNull(emojiId: Snowflake): GuildEmoji?","dev.kord.core.entity.Guild.getEmojiOrNull"]},{"name":"suspend fun getEveryoneRole(): Role","description":"dev.kord.core.entity.Guild.getEveryoneRole","location":"core/dev.kord.core.entity/-guild/get-everyone-role.html","searchKeys":["getEveryoneRole","suspend fun getEveryoneRole(): Role","dev.kord.core.entity.Guild.getEveryoneRole"]},{"name":"suspend fun getEveryoneRoleOrNull(): Role?","description":"dev.kord.core.entity.Guild.getEveryoneRoleOrNull","location":"core/dev.kord.core.entity/-guild/get-everyone-role-or-null.html","searchKeys":["getEveryoneRoleOrNull","suspend fun getEveryoneRoleOrNull(): Role?","dev.kord.core.entity.Guild.getEveryoneRoleOrNull"]},{"name":"suspend fun getGlobalApplicationCommand(commandId: Snowflake): GlobalApplicationCommand","description":"dev.kord.core.Kord.getGlobalApplicationCommand","location":"core/dev.kord.core/-kord/get-global-application-command.html","searchKeys":["getGlobalApplicationCommand","suspend fun getGlobalApplicationCommand(commandId: Snowflake): GlobalApplicationCommand","dev.kord.core.Kord.getGlobalApplicationCommand"]},{"name":"suspend fun getGlobalApplicationCommandOrNull(commandId: Snowflake): GlobalApplicationCommand?","description":"dev.kord.core.Kord.getGlobalApplicationCommandOrNull","location":"core/dev.kord.core/-kord/get-global-application-command-or-null.html","searchKeys":["getGlobalApplicationCommandOrNull","suspend fun getGlobalApplicationCommandOrNull(commandId: Snowflake): GlobalApplicationCommand?","dev.kord.core.Kord.getGlobalApplicationCommandOrNull"]},{"name":"suspend fun getGuild(): Guild","description":"dev.kord.core.entity.GuildScheduledEvent.getGuild","location":"core/dev.kord.core.entity/-guild-scheduled-event/get-guild.html","searchKeys":["getGuild","suspend fun getGuild(): Guild","dev.kord.core.entity.GuildScheduledEvent.getGuild"]},{"name":"suspend fun getGuild(): Guild","description":"dev.kord.core.entity.GuildWidget.getGuild","location":"core/dev.kord.core.entity/-guild-widget/get-guild.html","searchKeys":["getGuild","suspend fun getGuild(): Guild","dev.kord.core.entity.GuildWidget.getGuild"]},{"name":"suspend fun getGuild(): Guild","description":"dev.kord.core.entity.Integration.getGuild","location":"core/dev.kord.core.entity/-integration/get-guild.html","searchKeys":["getGuild","suspend fun getGuild(): Guild","dev.kord.core.entity.Integration.getGuild"]},{"name":"suspend fun getGuild(): Guild","description":"dev.kord.core.entity.Message.getGuild","location":"core/dev.kord.core.entity/-message/get-guild.html","searchKeys":["getGuild","suspend fun getGuild(): Guild","dev.kord.core.entity.Message.getGuild"]},{"name":"suspend fun getGuild(): Guild","description":"dev.kord.core.entity.PartialGuild.getGuild","location":"core/dev.kord.core.entity/-partial-guild/get-guild.html","searchKeys":["getGuild","suspend fun getGuild(): Guild","dev.kord.core.entity.PartialGuild.getGuild"]},{"name":"suspend fun getGuild(): Guild","description":"dev.kord.core.entity.PermissionOverwriteEntity.getGuild","location":"core/dev.kord.core.entity/-permission-overwrite-entity/get-guild.html","searchKeys":["getGuild","suspend fun getGuild(): Guild","dev.kord.core.entity.PermissionOverwriteEntity.getGuild"]},{"name":"suspend fun getGuild(): Guild","description":"dev.kord.core.entity.RoleTags.getGuild","location":"core/dev.kord.core.entity/-role-tags/get-guild.html","searchKeys":["getGuild","suspend fun getGuild(): Guild","dev.kord.core.entity.RoleTags.getGuild"]},{"name":"suspend fun getGuild(): Guild","description":"dev.kord.core.entity.VoiceState.getGuild","location":"core/dev.kord.core.entity/-voice-state/get-guild.html","searchKeys":["getGuild","suspend fun getGuild(): Guild","dev.kord.core.entity.VoiceState.getGuild"]},{"name":"suspend fun getGuild(): Guild","description":"dev.kord.core.entity.channel.thread.DeletedThreadChannel.getGuild","location":"core/dev.kord.core.entity.channel.thread/-deleted-thread-channel/get-guild.html","searchKeys":["getGuild","suspend fun getGuild(): Guild","dev.kord.core.entity.channel.thread.DeletedThreadChannel.getGuild"]},{"name":"suspend fun getGuild(): Guild","description":"dev.kord.core.event.channel.thread.ThreadListSyncEvent.getGuild","location":"core/dev.kord.core.event.channel.thread/-thread-list-sync-event/get-guild.html","searchKeys":["getGuild","suspend fun getGuild(): Guild","dev.kord.core.event.channel.thread.ThreadListSyncEvent.getGuild"]},{"name":"suspend fun getGuild(): Guild","description":"dev.kord.core.event.guild.BanAddEvent.getGuild","location":"core/dev.kord.core.event.guild/-ban-add-event/get-guild.html","searchKeys":["getGuild","suspend fun getGuild(): Guild","dev.kord.core.event.guild.BanAddEvent.getGuild"]},{"name":"suspend fun getGuild(): Guild","description":"dev.kord.core.event.guild.BanRemoveEvent.getGuild","location":"core/dev.kord.core.event.guild/-ban-remove-event/get-guild.html","searchKeys":["getGuild","suspend fun getGuild(): Guild","dev.kord.core.event.guild.BanRemoveEvent.getGuild"]},{"name":"suspend fun getGuild(): Guild","description":"dev.kord.core.event.guild.EmojisUpdateEvent.getGuild","location":"core/dev.kord.core.event.guild/-emojis-update-event/get-guild.html","searchKeys":["getGuild","suspend fun getGuild(): Guild","dev.kord.core.event.guild.EmojisUpdateEvent.getGuild"]},{"name":"suspend fun getGuild(): Guild","description":"dev.kord.core.event.guild.IntegrationsUpdateEvent.getGuild","location":"core/dev.kord.core.event.guild/-integrations-update-event/get-guild.html","searchKeys":["getGuild","suspend fun getGuild(): Guild","dev.kord.core.event.guild.IntegrationsUpdateEvent.getGuild"]},{"name":"suspend fun getGuild(): Guild","description":"dev.kord.core.event.guild.MemberJoinEvent.getGuild","location":"core/dev.kord.core.event.guild/-member-join-event/get-guild.html","searchKeys":["getGuild","suspend fun getGuild(): Guild","dev.kord.core.event.guild.MemberJoinEvent.getGuild"]},{"name":"suspend fun getGuild(): Guild","description":"dev.kord.core.event.guild.MemberLeaveEvent.getGuild","location":"core/dev.kord.core.event.guild/-member-leave-event/get-guild.html","searchKeys":["getGuild","suspend fun getGuild(): Guild","dev.kord.core.event.guild.MemberLeaveEvent.getGuild"]},{"name":"suspend fun getGuild(): Guild","description":"dev.kord.core.event.guild.MemberUpdateEvent.getGuild","location":"core/dev.kord.core.event.guild/-member-update-event/get-guild.html","searchKeys":["getGuild","suspend fun getGuild(): Guild","dev.kord.core.event.guild.MemberUpdateEvent.getGuild"]},{"name":"suspend fun getGuild(): Guild","description":"dev.kord.core.event.guild.MembersChunkEvent.getGuild","location":"core/dev.kord.core.event.guild/-members-chunk-event/get-guild.html","searchKeys":["getGuild","suspend fun getGuild(): Guild","dev.kord.core.event.guild.MembersChunkEvent.getGuild"]},{"name":"suspend fun getGuild(): Guild","description":"dev.kord.core.event.guild.VoiceServerUpdateEvent.getGuild","location":"core/dev.kord.core.event.guild/-voice-server-update-event/get-guild.html","searchKeys":["getGuild","suspend fun getGuild(): Guild","dev.kord.core.event.guild.VoiceServerUpdateEvent.getGuild"]},{"name":"suspend fun getGuild(): Guild","description":"dev.kord.core.event.guild.WebhookUpdateEvent.getGuild","location":"core/dev.kord.core.event.guild/-webhook-update-event/get-guild.html","searchKeys":["getGuild","suspend fun getGuild(): Guild","dev.kord.core.event.guild.WebhookUpdateEvent.getGuild"]},{"name":"suspend fun getGuild(): Guild","description":"dev.kord.core.event.message.ReactionRemoveEmojiEvent.getGuild","location":"core/dev.kord.core.event.message/-reaction-remove-emoji-event/get-guild.html","searchKeys":["getGuild","suspend fun getGuild(): Guild","dev.kord.core.event.message.ReactionRemoveEmojiEvent.getGuild"]},{"name":"suspend fun getGuild(): Guild","description":"dev.kord.core.event.role.RoleCreateEvent.getGuild","location":"core/dev.kord.core.event.role/-role-create-event/get-guild.html","searchKeys":["getGuild","suspend fun getGuild(): Guild","dev.kord.core.event.role.RoleCreateEvent.getGuild"]},{"name":"suspend fun getGuild(): Guild","description":"dev.kord.core.event.role.RoleDeleteEvent.getGuild","location":"core/dev.kord.core.event.role/-role-delete-event/get-guild.html","searchKeys":["getGuild","suspend fun getGuild(): Guild","dev.kord.core.event.role.RoleDeleteEvent.getGuild"]},{"name":"suspend fun getGuild(): Guild","description":"dev.kord.core.event.role.RoleUpdateEvent.getGuild","location":"core/dev.kord.core.event.role/-role-update-event/get-guild.html","searchKeys":["getGuild","suspend fun getGuild(): Guild","dev.kord.core.event.role.RoleUpdateEvent.getGuild"]},{"name":"suspend fun getGuild(): Guild","description":"dev.kord.core.event.user.PresenceUpdateEvent.getGuild","location":"core/dev.kord.core.event.user/-presence-update-event/get-guild.html","searchKeys":["getGuild","suspend fun getGuild(): Guild","dev.kord.core.event.user.PresenceUpdateEvent.getGuild"]},{"name":"suspend fun getGuild(): Guild?","description":"dev.kord.core.event.channel.TypingStartEvent.getGuild","location":"core/dev.kord.core.event.channel/-typing-start-event/get-guild.html","searchKeys":["getGuild","suspend fun getGuild(): Guild?","dev.kord.core.event.channel.TypingStartEvent.getGuild"]},{"name":"suspend fun getGuild(): Guild?","description":"dev.kord.core.event.message.MessageBulkDeleteEvent.getGuild","location":"core/dev.kord.core.event.message/-message-bulk-delete-event/get-guild.html","searchKeys":["getGuild","suspend fun getGuild(): Guild?","dev.kord.core.event.message.MessageBulkDeleteEvent.getGuild"]},{"name":"suspend fun getGuild(): Guild?","description":"dev.kord.core.event.message.MessageCreateEvent.getGuild","location":"core/dev.kord.core.event.message/-message-create-event/get-guild.html","searchKeys":["getGuild","suspend fun getGuild(): Guild?","dev.kord.core.event.message.MessageCreateEvent.getGuild"]},{"name":"suspend fun getGuild(): Guild?","description":"dev.kord.core.event.message.MessageDeleteEvent.getGuild","location":"core/dev.kord.core.event.message/-message-delete-event/get-guild.html","searchKeys":["getGuild","suspend fun getGuild(): Guild?","dev.kord.core.event.message.MessageDeleteEvent.getGuild"]},{"name":"suspend fun getGuild(): Guild?","description":"dev.kord.core.event.message.ReactionAddEvent.getGuild","location":"core/dev.kord.core.event.message/-reaction-add-event/get-guild.html","searchKeys":["getGuild","suspend fun getGuild(): Guild?","dev.kord.core.event.message.ReactionAddEvent.getGuild"]},{"name":"suspend fun getGuild(): Guild?","description":"dev.kord.core.event.message.ReactionRemoveAllEvent.getGuild","location":"core/dev.kord.core.event.message/-reaction-remove-all-event/get-guild.html","searchKeys":["getGuild","suspend fun getGuild(): Guild?","dev.kord.core.event.message.ReactionRemoveAllEvent.getGuild"]},{"name":"suspend fun getGuild(): Guild?","description":"dev.kord.core.event.message.ReactionRemoveEvent.getGuild","location":"core/dev.kord.core.event.message/-reaction-remove-event/get-guild.html","searchKeys":["getGuild","suspend fun getGuild(): Guild?","dev.kord.core.event.message.ReactionRemoveEvent.getGuild"]},{"name":"suspend fun getGuild(id: Snowflake, strategy: EntitySupplyStrategy<*> = resources.defaultStrategy): Guild?","description":"dev.kord.core.Kord.getGuild","location":"core/dev.kord.core/-kord/get-guild.html","searchKeys":["getGuild","suspend fun getGuild(id: Snowflake, strategy: EntitySupplyStrategy<*> = resources.defaultStrategy): Guild?","dev.kord.core.Kord.getGuild"]},{"name":"suspend fun getGuildApplicationCommand(guildId: Snowflake, commandId: Snowflake): GuildApplicationCommand","description":"dev.kord.core.Kord.getGuildApplicationCommand","location":"core/dev.kord.core/-kord/get-guild-application-command.html","searchKeys":["getGuildApplicationCommand","suspend fun getGuildApplicationCommand(guildId: Snowflake, commandId: Snowflake): GuildApplicationCommand","dev.kord.core.Kord.getGuildApplicationCommand"]},{"name":"suspend fun getGuildApplicationCommandOrNull(guildId: Snowflake, commandId: Snowflake): GuildApplicationCommand?","description":"dev.kord.core.Kord.getGuildApplicationCommandOrNull","location":"core/dev.kord.core/-kord/get-guild-application-command-or-null.html","searchKeys":["getGuildApplicationCommandOrNull","suspend fun getGuildApplicationCommandOrNull(guildId: Snowflake, commandId: Snowflake): GuildApplicationCommand?","dev.kord.core.Kord.getGuildApplicationCommandOrNull"]},{"name":"suspend fun getGuildOrNull(): Guild?","description":"dev.kord.core.entity.BaseApplication.getGuildOrNull","location":"core/dev.kord.core.entity/-base-application/get-guild-or-null.html","searchKeys":["getGuildOrNull","suspend fun getGuildOrNull(): Guild?","dev.kord.core.entity.BaseApplication.getGuildOrNull"]},{"name":"suspend fun getGuildOrNull(): Guild?","description":"dev.kord.core.entity.GuildScheduledEvent.getGuildOrNull","location":"core/dev.kord.core.entity/-guild-scheduled-event/get-guild-or-null.html","searchKeys":["getGuildOrNull","suspend fun getGuildOrNull(): Guild?","dev.kord.core.entity.GuildScheduledEvent.getGuildOrNull"]},{"name":"suspend fun getGuildOrNull(): Guild?","description":"dev.kord.core.entity.GuildWidget.getGuildOrNull","location":"core/dev.kord.core.entity/-guild-widget/get-guild-or-null.html","searchKeys":["getGuildOrNull","suspend fun getGuildOrNull(): Guild?","dev.kord.core.entity.GuildWidget.getGuildOrNull"]},{"name":"suspend fun getGuildOrNull(): Guild?","description":"dev.kord.core.entity.Integration.getGuildOrNull","location":"core/dev.kord.core.entity/-integration/get-guild-or-null.html","searchKeys":["getGuildOrNull","suspend fun getGuildOrNull(): Guild?","dev.kord.core.entity.Integration.getGuildOrNull"]},{"name":"suspend fun getGuildOrNull(): Guild?","description":"dev.kord.core.entity.Message.getGuildOrNull","location":"core/dev.kord.core.entity/-message/get-guild-or-null.html","searchKeys":["getGuildOrNull","suspend fun getGuildOrNull(): Guild?","dev.kord.core.entity.Message.getGuildOrNull"]},{"name":"suspend fun getGuildOrNull(): Guild?","description":"dev.kord.core.entity.PartialGuild.getGuildOrNull","location":"core/dev.kord.core.entity/-partial-guild/get-guild-or-null.html","searchKeys":["getGuildOrNull","suspend fun getGuildOrNull(): Guild?","dev.kord.core.entity.PartialGuild.getGuildOrNull"]},{"name":"suspend fun getGuildOrNull(): Guild?","description":"dev.kord.core.entity.PermissionOverwriteEntity.getGuildOrNull","location":"core/dev.kord.core.entity/-permission-overwrite-entity/get-guild-or-null.html","searchKeys":["getGuildOrNull","suspend fun getGuildOrNull(): Guild?","dev.kord.core.entity.PermissionOverwriteEntity.getGuildOrNull"]},{"name":"suspend fun getGuildOrNull(): Guild?","description":"dev.kord.core.entity.RoleTags.getGuildOrNull","location":"core/dev.kord.core.entity/-role-tags/get-guild-or-null.html","searchKeys":["getGuildOrNull","suspend fun getGuildOrNull(): Guild?","dev.kord.core.entity.RoleTags.getGuildOrNull"]},{"name":"suspend fun getGuildOrNull(): Guild?","description":"dev.kord.core.entity.VoiceState.getGuildOrNull","location":"core/dev.kord.core.entity/-voice-state/get-guild-or-null.html","searchKeys":["getGuildOrNull","suspend fun getGuildOrNull(): Guild?","dev.kord.core.entity.VoiceState.getGuildOrNull"]},{"name":"suspend fun getGuildOrNull(): Guild?","description":"dev.kord.core.entity.Webhook.getGuildOrNull","location":"core/dev.kord.core.entity/-webhook/get-guild-or-null.html","searchKeys":["getGuildOrNull","suspend fun getGuildOrNull(): Guild?","dev.kord.core.entity.Webhook.getGuildOrNull"]},{"name":"suspend fun getGuildOrNull(): Guild?","description":"dev.kord.core.entity.channel.thread.DeletedThreadChannel.getGuildOrNull","location":"core/dev.kord.core.entity.channel.thread/-deleted-thread-channel/get-guild-or-null.html","searchKeys":["getGuildOrNull","suspend fun getGuildOrNull(): Guild?","dev.kord.core.entity.channel.thread.DeletedThreadChannel.getGuildOrNull"]},{"name":"suspend fun getGuildOrNull(): Guild?","description":"dev.kord.core.event.channel.thread.ThreadListSyncEvent.getGuildOrNull","location":"core/dev.kord.core.event.channel.thread/-thread-list-sync-event/get-guild-or-null.html","searchKeys":["getGuildOrNull","suspend fun getGuildOrNull(): Guild?","dev.kord.core.event.channel.thread.ThreadListSyncEvent.getGuildOrNull"]},{"name":"suspend fun getGuildOrNull(): Guild?","description":"dev.kord.core.event.guild.BanAddEvent.getGuildOrNull","location":"core/dev.kord.core.event.guild/-ban-add-event/get-guild-or-null.html","searchKeys":["getGuildOrNull","suspend fun getGuildOrNull(): Guild?","dev.kord.core.event.guild.BanAddEvent.getGuildOrNull"]},{"name":"suspend fun getGuildOrNull(): Guild?","description":"dev.kord.core.event.guild.BanRemoveEvent.getGuildOrNull","location":"core/dev.kord.core.event.guild/-ban-remove-event/get-guild-or-null.html","searchKeys":["getGuildOrNull","suspend fun getGuildOrNull(): Guild?","dev.kord.core.event.guild.BanRemoveEvent.getGuildOrNull"]},{"name":"suspend fun getGuildOrNull(): Guild?","description":"dev.kord.core.event.guild.EmojisUpdateEvent.getGuildOrNull","location":"core/dev.kord.core.event.guild/-emojis-update-event/get-guild-or-null.html","searchKeys":["getGuildOrNull","suspend fun getGuildOrNull(): Guild?","dev.kord.core.event.guild.EmojisUpdateEvent.getGuildOrNull"]},{"name":"suspend fun getGuildOrNull(): Guild?","description":"dev.kord.core.event.guild.IntegrationsUpdateEvent.getGuildOrNull","location":"core/dev.kord.core.event.guild/-integrations-update-event/get-guild-or-null.html","searchKeys":["getGuildOrNull","suspend fun getGuildOrNull(): Guild?","dev.kord.core.event.guild.IntegrationsUpdateEvent.getGuildOrNull"]},{"name":"suspend fun getGuildOrNull(): Guild?","description":"dev.kord.core.event.guild.InviteCreateEvent.getGuildOrNull","location":"core/dev.kord.core.event.guild/-invite-create-event/get-guild-or-null.html","searchKeys":["getGuildOrNull","suspend fun getGuildOrNull(): Guild?","dev.kord.core.event.guild.InviteCreateEvent.getGuildOrNull"]},{"name":"suspend fun getGuildOrNull(): Guild?","description":"dev.kord.core.event.guild.InviteDeleteEvent.getGuildOrNull","location":"core/dev.kord.core.event.guild/-invite-delete-event/get-guild-or-null.html","searchKeys":["getGuildOrNull","suspend fun getGuildOrNull(): Guild?","dev.kord.core.event.guild.InviteDeleteEvent.getGuildOrNull"]},{"name":"suspend fun getGuildOrNull(): Guild?","description":"dev.kord.core.event.guild.MemberJoinEvent.getGuildOrNull","location":"core/dev.kord.core.event.guild/-member-join-event/get-guild-or-null.html","searchKeys":["getGuildOrNull","suspend fun getGuildOrNull(): Guild?","dev.kord.core.event.guild.MemberJoinEvent.getGuildOrNull"]},{"name":"suspend fun getGuildOrNull(): Guild?","description":"dev.kord.core.event.guild.MemberLeaveEvent.getGuildOrNull","location":"core/dev.kord.core.event.guild/-member-leave-event/get-guild-or-null.html","searchKeys":["getGuildOrNull","suspend fun getGuildOrNull(): Guild?","dev.kord.core.event.guild.MemberLeaveEvent.getGuildOrNull"]},{"name":"suspend fun getGuildOrNull(): Guild?","description":"dev.kord.core.event.guild.MemberUpdateEvent.getGuildOrNull","location":"core/dev.kord.core.event.guild/-member-update-event/get-guild-or-null.html","searchKeys":["getGuildOrNull","suspend fun getGuildOrNull(): Guild?","dev.kord.core.event.guild.MemberUpdateEvent.getGuildOrNull"]},{"name":"suspend fun getGuildOrNull(): Guild?","description":"dev.kord.core.event.guild.MembersChunkEvent.getGuildOrNull","location":"core/dev.kord.core.event.guild/-members-chunk-event/get-guild-or-null.html","searchKeys":["getGuildOrNull","suspend fun getGuildOrNull(): Guild?","dev.kord.core.event.guild.MembersChunkEvent.getGuildOrNull"]},{"name":"suspend fun getGuildOrNull(): Guild?","description":"dev.kord.core.event.guild.VoiceServerUpdateEvent.getGuildOrNull","location":"core/dev.kord.core.event.guild/-voice-server-update-event/get-guild-or-null.html","searchKeys":["getGuildOrNull","suspend fun getGuildOrNull(): Guild?","dev.kord.core.event.guild.VoiceServerUpdateEvent.getGuildOrNull"]},{"name":"suspend fun getGuildOrNull(): Guild?","description":"dev.kord.core.event.guild.WebhookUpdateEvent.getGuildOrNull","location":"core/dev.kord.core.event.guild/-webhook-update-event/get-guild-or-null.html","searchKeys":["getGuildOrNull","suspend fun getGuildOrNull(): Guild?","dev.kord.core.event.guild.WebhookUpdateEvent.getGuildOrNull"]},{"name":"suspend fun getGuildOrNull(): Guild?","description":"dev.kord.core.event.message.ReactionRemoveEmojiEvent.getGuildOrNull","location":"core/dev.kord.core.event.message/-reaction-remove-emoji-event/get-guild-or-null.html","searchKeys":["getGuildOrNull","suspend fun getGuildOrNull(): Guild?","dev.kord.core.event.message.ReactionRemoveEmojiEvent.getGuildOrNull"]},{"name":"suspend fun getGuildOrNull(): Guild?","description":"dev.kord.core.event.role.RoleCreateEvent.getGuildOrNull","location":"core/dev.kord.core.event.role/-role-create-event/get-guild-or-null.html","searchKeys":["getGuildOrNull","suspend fun getGuildOrNull(): Guild?","dev.kord.core.event.role.RoleCreateEvent.getGuildOrNull"]},{"name":"suspend fun getGuildOrNull(): Guild?","description":"dev.kord.core.event.role.RoleDeleteEvent.getGuildOrNull","location":"core/dev.kord.core.event.role/-role-delete-event/get-guild-or-null.html","searchKeys":["getGuildOrNull","suspend fun getGuildOrNull(): Guild?","dev.kord.core.event.role.RoleDeleteEvent.getGuildOrNull"]},{"name":"suspend fun getGuildOrNull(): Guild?","description":"dev.kord.core.event.role.RoleUpdateEvent.getGuildOrNull","location":"core/dev.kord.core.event.role/-role-update-event/get-guild-or-null.html","searchKeys":["getGuildOrNull","suspend fun getGuildOrNull(): Guild?","dev.kord.core.event.role.RoleUpdateEvent.getGuildOrNull"]},{"name":"suspend fun getGuildOrNull(): Guild?","description":"dev.kord.core.event.user.PresenceUpdateEvent.getGuildOrNull","location":"core/dev.kord.core.event.user/-presence-update-event/get-guild-or-null.html","searchKeys":["getGuildOrNull","suspend fun getGuildOrNull(): Guild?","dev.kord.core.event.user.PresenceUpdateEvent.getGuildOrNull"]},{"name":"suspend fun getGuildOrNull(id: Snowflake, strategy: EntitySupplyStrategy<*> = resources.defaultStrategy): Guild?","description":"dev.kord.core.Kord.getGuildOrNull","location":"core/dev.kord.core/-kord/get-guild-or-null.html","searchKeys":["getGuildOrNull","suspend fun getGuildOrNull(id: Snowflake, strategy: EntitySupplyStrategy<*> = resources.defaultStrategy): Guild?","dev.kord.core.Kord.getGuildOrNull"]},{"name":"suspend fun getGuildOrThrow(id: Snowflake, strategy: EntitySupplyStrategy<*> = resources.defaultStrategy): Guild","description":"dev.kord.core.Kord.getGuildOrThrow","location":"core/dev.kord.core/-kord/get-guild-or-throw.html","searchKeys":["getGuildOrThrow","suspend fun getGuildOrThrow(id: Snowflake, strategy: EntitySupplyStrategy<*> = resources.defaultStrategy): Guild","dev.kord.core.Kord.getGuildOrThrow"]},{"name":"suspend fun getGuildPreview(guildId: Snowflake, strategy: EntitySupplyStrategy<*> = resources.defaultStrategy): GuildPreview","description":"dev.kord.core.Kord.getGuildPreview","location":"core/dev.kord.core/-kord/get-guild-preview.html","searchKeys":["getGuildPreview","suspend fun getGuildPreview(guildId: Snowflake, strategy: EntitySupplyStrategy<*> = resources.defaultStrategy): GuildPreview","dev.kord.core.Kord.getGuildPreview"]},{"name":"suspend fun getGuildPreviewOrNull(guildId: Snowflake, strategy: EntitySupplyStrategy<*> = resources.defaultStrategy): GuildPreview?","description":"dev.kord.core.Kord.getGuildPreviewOrNull","location":"core/dev.kord.core/-kord/get-guild-preview-or-null.html","searchKeys":["getGuildPreviewOrNull","suspend fun getGuildPreviewOrNull(guildId: Snowflake, strategy: EntitySupplyStrategy<*> = resources.defaultStrategy): GuildPreview?","dev.kord.core.Kord.getGuildPreviewOrNull"]},{"name":"suspend fun getGuildWelcomeScreen(guildId: Snowflake): WelcomeScreen","description":"dev.kord.core.supplier.RestEntitySupplier.getGuildWelcomeScreen","location":"core/dev.kord.core.supplier/-rest-entity-supplier/get-guild-welcome-screen.html","searchKeys":["getGuildWelcomeScreen","suspend fun getGuildWelcomeScreen(guildId: Snowflake): WelcomeScreen","dev.kord.core.supplier.RestEntitySupplier.getGuildWelcomeScreen"]},{"name":"suspend fun getGuildWelcomeScreenOrNull(guildId: Snowflake): WelcomeScreen?","description":"dev.kord.core.supplier.RestEntitySupplier.getGuildWelcomeScreenOrNull","location":"core/dev.kord.core.supplier/-rest-entity-supplier/get-guild-welcome-screen-or-null.html","searchKeys":["getGuildWelcomeScreenOrNull","suspend fun getGuildWelcomeScreenOrNull(guildId: Snowflake): WelcomeScreen?","dev.kord.core.supplier.RestEntitySupplier.getGuildWelcomeScreenOrNull"]},{"name":"suspend fun getGuilds(): Flow<Guild>","description":"dev.kord.core.event.gateway.ReadyEvent.getGuilds","location":"core/dev.kord.core.event.gateway/-ready-event/get-guilds.html","searchKeys":["getGuilds","suspend fun getGuilds(): Flow<Guild>","dev.kord.core.event.gateway.ReadyEvent.getGuilds"]},{"name":"suspend fun getIcon(format: Image.Format): Image?","description":"dev.kord.core.entity.Guild.getIcon","location":"core/dev.kord.core.entity/-guild/get-icon.html","searchKeys":["getIcon","suspend fun getIcon(format: Image.Format): Image?","dev.kord.core.entity.Guild.getIcon"]},{"name":"suspend fun getIcon(format: Image.Format): Image?","description":"dev.kord.core.entity.PartialGuild.getIcon","location":"core/dev.kord.core.entity/-partial-guild/get-icon.html","searchKeys":["getIcon","suspend fun getIcon(format: Image.Format): Image?","dev.kord.core.entity.PartialGuild.getIcon"]},{"name":"suspend fun getImage(): Image","description":"dev.kord.core.entity.Icon.getImage","location":"core/dev.kord.core.entity/-icon/get-image.html","searchKeys":["getImage","suspend fun getImage(): Image","dev.kord.core.entity.Icon.getImage"]},{"name":"suspend fun getImage(): Image","description":"dev.kord.core.entity.User.Avatar.getImage","location":"core/dev.kord.core.entity/-user/-avatar/get-image.html","searchKeys":["getImage","suspend fun getImage(): Image","dev.kord.core.entity.User.Avatar.getImage"]},{"name":"suspend fun getImage(format: Image.Format): Image","description":"dev.kord.core.entity.Icon.getImage","location":"core/dev.kord.core.entity/-icon/get-image.html","searchKeys":["getImage","suspend fun getImage(format: Image.Format): Image","dev.kord.core.entity.Icon.getImage"]},{"name":"suspend fun getImage(format: Image.Format): Image?","description":"dev.kord.core.entity.User.Avatar.getImage","location":"core/dev.kord.core.entity/-user/-avatar/get-image.html","searchKeys":["getImage","suspend fun getImage(format: Image.Format): Image?","dev.kord.core.entity.User.Avatar.getImage"]},{"name":"suspend fun getImage(format: Image.Format, size: Image.Size): Image","description":"dev.kord.core.entity.Icon.getImage","location":"core/dev.kord.core.entity/-icon/get-image.html","searchKeys":["getImage","suspend fun getImage(format: Image.Format, size: Image.Size): Image","dev.kord.core.entity.Icon.getImage"]},{"name":"suspend fun getImage(format: Image.Format, size: Image.Size): Image?","description":"dev.kord.core.entity.User.Avatar.getImage","location":"core/dev.kord.core.entity/-user/-avatar/get-image.html","searchKeys":["getImage","suspend fun getImage(format: Image.Format, size: Image.Size): Image?","dev.kord.core.entity.User.Avatar.getImage"]},{"name":"suspend fun getImage(size: Image.Size): Image","description":"dev.kord.core.entity.Icon.getImage","location":"core/dev.kord.core.entity/-icon/get-image.html","searchKeys":["getImage","suspend fun getImage(size: Image.Size): Image","dev.kord.core.entity.Icon.getImage"]},{"name":"suspend fun getImage(size: Image.Size): Image","description":"dev.kord.core.entity.User.Avatar.getImage","location":"core/dev.kord.core.entity/-user/-avatar/get-image.html","searchKeys":["getImage","suspend fun getImage(size: Image.Size): Image","dev.kord.core.entity.User.Avatar.getImage"]},{"name":"suspend fun getIntegration(): Integration?","description":"dev.kord.core.entity.RoleTags.getIntegration","location":"core/dev.kord.core.entity/-role-tags/get-integration.html","searchKeys":["getIntegration","suspend fun getIntegration(): Integration?","dev.kord.core.entity.RoleTags.getIntegration"]},{"name":"suspend fun getInvite(code: String, withCounts: Boolean = true, withExpiration: Boolean = true, scheduledEventId: Snowflake? = null): Invite","description":"dev.kord.core.Kord.getInvite","location":"core/dev.kord.core/-kord/get-invite.html","searchKeys":["getInvite","suspend fun getInvite(code: String, withCounts: Boolean = true, withExpiration: Boolean = true, scheduledEventId: Snowflake? = null): Invite","dev.kord.core.Kord.getInvite"]},{"name":"suspend fun getInvite(code: String, withCounts: Boolean = true, withExpiration: Boolean = true, scheduledEventId: Snowflake? = null): Invite","description":"dev.kord.core.supplier.RestEntitySupplier.getInvite","location":"core/dev.kord.core.supplier/-rest-entity-supplier/get-invite.html","searchKeys":["getInvite","suspend fun getInvite(code: String, withCounts: Boolean = true, withExpiration: Boolean = true, scheduledEventId: Snowflake? = null): Invite","dev.kord.core.supplier.RestEntitySupplier.getInvite"]},{"name":"suspend fun getInviteOrNull(code: String, withCounts: Boolean = true, withExpiration: Boolean = true, scheduledEventId: Snowflake? = null): Invite?","description":"dev.kord.core.Kord.getInviteOrNull","location":"core/dev.kord.core/-kord/get-invite-or-null.html","searchKeys":["getInviteOrNull","suspend fun getInviteOrNull(code: String, withCounts: Boolean = true, withExpiration: Boolean = true, scheduledEventId: Snowflake? = null): Invite?","dev.kord.core.Kord.getInviteOrNull"]},{"name":"suspend fun getInviteOrNull(code: String, withCounts: Boolean = true, withExpiration: Boolean = true, scheduledEventId: Snowflake? = null): Invite?","description":"dev.kord.core.supplier.RestEntitySupplier.getInviteOrNull","location":"core/dev.kord.core.supplier/-rest-entity-supplier/get-invite-or-null.html","searchKeys":["getInviteOrNull","suspend fun getInviteOrNull(code: String, withCounts: Boolean = true, withExpiration: Boolean = true, scheduledEventId: Snowflake? = null): Invite?","dev.kord.core.supplier.RestEntitySupplier.getInviteOrNull"]},{"name":"suspend fun getInviterAsMemberOrNull(): Member?","description":"dev.kord.core.event.guild.InviteCreateEvent.getInviterAsMemberOrNull","location":"core/dev.kord.core.event.guild/-invite-create-event/get-inviter-as-member-or-null.html","searchKeys":["getInviterAsMemberOrNull","suspend fun getInviterAsMemberOrNull(): Member?","dev.kord.core.event.guild.InviteCreateEvent.getInviterAsMemberOrNull"]},{"name":"suspend fun getInviterOrNull(): User?","description":"dev.kord.core.entity.Invite.getInviterOrNull","location":"core/dev.kord.core.entity/-invite/get-inviter-or-null.html","searchKeys":["getInviterOrNull","suspend fun getInviterOrNull(): User?","dev.kord.core.entity.Invite.getInviterOrNull"]},{"name":"suspend fun getInviterOrNull(): User?","description":"dev.kord.core.event.guild.InviteCreateEvent.getInviterOrNull","location":"core/dev.kord.core.event.guild/-invite-create-event/get-inviter-or-null.html","searchKeys":["getInviterOrNull","suspend fun getInviterOrNull(): User?","dev.kord.core.event.guild.InviteCreateEvent.getInviterOrNull"]},{"name":"suspend fun getMember(): Member","description":"dev.kord.core.entity.VoiceState.getMember","location":"core/dev.kord.core.entity/-voice-state/get-member.html","searchKeys":["getMember","suspend fun getMember(): Member","dev.kord.core.entity.VoiceState.getMember"]},{"name":"suspend fun getMember(): Member","description":"dev.kord.core.event.user.PresenceUpdateEvent.getMember","location":"core/dev.kord.core.event.user/-presence-update-event/get-member.html","searchKeys":["getMember","suspend fun getMember(): Member","dev.kord.core.event.user.PresenceUpdateEvent.getMember"]},{"name":"suspend fun getMember(): Member?","description":"dev.kord.core.entity.GuildEmoji.getMember","location":"core/dev.kord.core.entity/-guild-emoji/get-member.html","searchKeys":["getMember","suspend fun getMember(): Member?","dev.kord.core.entity.GuildEmoji.getMember"]},{"name":"suspend fun getMemberOrNull(): Member?","description":"dev.kord.core.entity.VoiceState.getMemberOrNull","location":"core/dev.kord.core.entity/-voice-state/get-member-or-null.html","searchKeys":["getMemberOrNull","suspend fun getMemberOrNull(): Member?","dev.kord.core.entity.VoiceState.getMemberOrNull"]},{"name":"suspend fun getMemberOrNull(): Member?","description":"dev.kord.core.event.user.PresenceUpdateEvent.getMemberOrNull","location":"core/dev.kord.core.event.user/-presence-update-event/get-member-or-null.html","searchKeys":["getMemberOrNull","suspend fun getMemberOrNull(): Member?","dev.kord.core.event.user.PresenceUpdateEvent.getMemberOrNull"]},{"name":"suspend fun getMessage(): Message","description":"dev.kord.core.event.message.MessageUpdateEvent.getMessage","location":"core/dev.kord.core.event.message/-message-update-event/get-message.html","searchKeys":["getMessage","suspend fun getMessage(): Message","dev.kord.core.event.message.MessageUpdateEvent.getMessage"]},{"name":"suspend fun getMessage(): Message","description":"dev.kord.core.event.message.ReactionAddEvent.getMessage","location":"core/dev.kord.core.event.message/-reaction-add-event/get-message.html","searchKeys":["getMessage","suspend fun getMessage(): Message","dev.kord.core.event.message.ReactionAddEvent.getMessage"]},{"name":"suspend fun getMessage(): Message","description":"dev.kord.core.event.message.ReactionRemoveAllEvent.getMessage","location":"core/dev.kord.core.event.message/-reaction-remove-all-event/get-message.html","searchKeys":["getMessage","suspend fun getMessage(): Message","dev.kord.core.event.message.ReactionRemoveAllEvent.getMessage"]},{"name":"suspend fun getMessage(): Message","description":"dev.kord.core.event.message.ReactionRemoveEmojiEvent.getMessage","location":"core/dev.kord.core.event.message/-reaction-remove-emoji-event/get-message.html","searchKeys":["getMessage","suspend fun getMessage(): Message","dev.kord.core.event.message.ReactionRemoveEmojiEvent.getMessage"]},{"name":"suspend fun getMessage(): Message","description":"dev.kord.core.event.message.ReactionRemoveEvent.getMessage","location":"core/dev.kord.core.event.message/-reaction-remove-event/get-message.html","searchKeys":["getMessage","suspend fun getMessage(): Message","dev.kord.core.event.message.ReactionRemoveEvent.getMessage"]},{"name":"suspend fun getMessageOrNull(): Message?","description":"dev.kord.core.event.message.MessageUpdateEvent.getMessageOrNull","location":"core/dev.kord.core.event.message/-message-update-event/get-message-or-null.html","searchKeys":["getMessageOrNull","suspend fun getMessageOrNull(): Message?","dev.kord.core.event.message.MessageUpdateEvent.getMessageOrNull"]},{"name":"suspend fun getMessageOrNull(): Message?","description":"dev.kord.core.event.message.ReactionAddEvent.getMessageOrNull","location":"core/dev.kord.core.event.message/-reaction-add-event/get-message-or-null.html","searchKeys":["getMessageOrNull","suspend fun getMessageOrNull(): Message?","dev.kord.core.event.message.ReactionAddEvent.getMessageOrNull"]},{"name":"suspend fun getMessageOrNull(): Message?","description":"dev.kord.core.event.message.ReactionRemoveAllEvent.getMessageOrNull","location":"core/dev.kord.core.event.message/-reaction-remove-all-event/get-message-or-null.html","searchKeys":["getMessageOrNull","suspend fun getMessageOrNull(): Message?","dev.kord.core.event.message.ReactionRemoveAllEvent.getMessageOrNull"]},{"name":"suspend fun getMessageOrNull(): Message?","description":"dev.kord.core.event.message.ReactionRemoveEmojiEvent.getMessageOrNull","location":"core/dev.kord.core.event.message/-reaction-remove-emoji-event/get-message-or-null.html","searchKeys":["getMessageOrNull","suspend fun getMessageOrNull(): Message?","dev.kord.core.event.message.ReactionRemoveEmojiEvent.getMessageOrNull"]},{"name":"suspend fun getMessageOrNull(): Message?","description":"dev.kord.core.event.message.ReactionRemoveEvent.getMessageOrNull","location":"core/dev.kord.core.event.message/-reaction-remove-event/get-message-or-null.html","searchKeys":["getMessageOrNull","suspend fun getMessageOrNull(): Message?","dev.kord.core.event.message.ReactionRemoveEvent.getMessageOrNull"]},{"name":"suspend fun getOriginalInteraction(applicationId: Snowflake, token: String): Message","description":"dev.kord.core.supplier.RestEntitySupplier.getOriginalInteraction","location":"core/dev.kord.core.supplier/-rest-entity-supplier/get-original-interaction.html","searchKeys":["getOriginalInteraction","suspend fun getOriginalInteraction(applicationId: Snowflake, token: String): Message","dev.kord.core.supplier.RestEntitySupplier.getOriginalInteraction"]},{"name":"suspend fun getOriginalInteractionOrNull(applicationId: Snowflake, token: String): Message?","description":"dev.kord.core.supplier.RestEntitySupplier.getOriginalInteractionOrNull","location":"core/dev.kord.core.supplier/-rest-entity-supplier/get-original-interaction-or-null.html","searchKeys":["getOriginalInteractionOrNull","suspend fun getOriginalInteractionOrNull(applicationId: Snowflake, token: String): Message?","dev.kord.core.supplier.RestEntitySupplier.getOriginalInteractionOrNull"]},{"name":"suspend fun getOwner(): Member","description":"dev.kord.core.entity.Guild.getOwner","location":"core/dev.kord.core.entity/-guild/get-owner.html","searchKeys":["getOwner","suspend fun getOwner(): Member","dev.kord.core.entity.Guild.getOwner"]},{"name":"suspend fun getOwnerOrNull(): Member?","description":"dev.kord.core.entity.Guild.getOwnerOrNull","location":"core/dev.kord.core.entity/-guild/get-owner-or-null.html","searchKeys":["getOwnerOrNull","suspend fun getOwnerOrNull(): Member?","dev.kord.core.entity.Guild.getOwnerOrNull"]},{"name":"suspend fun getOwnerOrNull(): User?","description":"dev.kord.core.entity.BaseApplication.getOwnerOrNull","location":"core/dev.kord.core.entity/-base-application/get-owner-or-null.html","searchKeys":["getOwnerOrNull","suspend fun getOwnerOrNull(): User?","dev.kord.core.entity.BaseApplication.getOwnerOrNull"]},{"name":"suspend fun getParent(): ThreadParentChannel","description":"dev.kord.core.entity.channel.thread.DeletedThreadChannel.getParent","location":"core/dev.kord.core.entity.channel.thread/-deleted-thread-channel/get-parent.html","searchKeys":["getParent","suspend fun getParent(): ThreadParentChannel","dev.kord.core.entity.channel.thread.DeletedThreadChannel.getParent"]},{"name":"suspend fun getParentOrNull(): ThreadParentChannel?","description":"dev.kord.core.entity.channel.thread.DeletedThreadChannel.getParentOrNull","location":"core/dev.kord.core.entity.channel.thread/-deleted-thread-channel/get-parent-or-null.html","searchKeys":["getParentOrNull","suspend fun getParentOrNull(): ThreadParentChannel?","dev.kord.core.entity.channel.thread.DeletedThreadChannel.getParentOrNull"]},{"name":"suspend fun getPermissions(): Permissions","description":"dev.kord.core.entity.Member.getPermissions","location":"core/dev.kord.core.entity/-member/get-permissions.html","searchKeys":["getPermissions","suspend fun getPermissions(): Permissions","dev.kord.core.entity.Member.getPermissions"]},{"name":"suspend fun getPublicUpdatesChannel(): TopGuildMessageChannel?","description":"dev.kord.core.entity.Guild.getPublicUpdatesChannel","location":"core/dev.kord.core.entity/-guild/get-public-updates-channel.html","searchKeys":["getPublicUpdatesChannel","suspend fun getPublicUpdatesChannel(): TopGuildMessageChannel?","dev.kord.core.entity.Guild.getPublicUpdatesChannel"]},{"name":"suspend fun getRegion(): Region","description":"dev.kord.core.entity.channel.VoiceChannel.getRegion","location":"core/dev.kord.core.entity.channel/-voice-channel/get-region.html","searchKeys":["getRegion","suspend fun getRegion(): Region","dev.kord.core.entity.channel.VoiceChannel.getRegion"]},{"name":"suspend fun getRegionOrNull(): Region?","description":"dev.kord.core.entity.channel.VoiceChannel.getRegionOrNull","location":"core/dev.kord.core.entity.channel/-voice-channel/get-region-or-null.html","searchKeys":["getRegionOrNull","suspend fun getRegionOrNull(): Region?","dev.kord.core.entity.channel.VoiceChannel.getRegionOrNull"]},{"name":"suspend fun getRole(): Role","description":"dev.kord.core.entity.Integration.getRole","location":"core/dev.kord.core.entity/-integration/get-role.html","searchKeys":["getRole","suspend fun getRole(): Role","dev.kord.core.entity.Integration.getRole"]},{"name":"suspend fun getRole(id: Snowflake): Role?","description":"dev.kord.core.supplier.CacheEntitySupplier.getRole","location":"core/dev.kord.core.supplier/-cache-entity-supplier/get-role.html","searchKeys":["getRole","suspend fun getRole(id: Snowflake): Role?","dev.kord.core.supplier.CacheEntitySupplier.getRole"]},{"name":"suspend fun getRoleOrNull(): Role?","description":"dev.kord.core.entity.Integration.getRoleOrNull","location":"core/dev.kord.core.entity/-integration/get-role-or-null.html","searchKeys":["getRoleOrNull","suspend fun getRoleOrNull(): Role?","dev.kord.core.entity.Integration.getRoleOrNull"]},{"name":"suspend fun getRulesChannel(): TopGuildMessageChannel?","description":"dev.kord.core.entity.Guild.getRulesChannel","location":"core/dev.kord.core.entity/-guild/get-rules-channel.html","searchKeys":["getRulesChannel","suspend fun getRulesChannel(): TopGuildMessageChannel?","dev.kord.core.entity.Guild.getRulesChannel"]},{"name":"suspend fun getSelf(strategy: EntitySupplyStrategy<*> = resources.defaultStrategy): User","description":"dev.kord.core.Kord.getSelf","location":"core/dev.kord.core/-kord/get-self.html","searchKeys":["getSelf","suspend fun getSelf(strategy: EntitySupplyStrategy<*> = resources.defaultStrategy): User","dev.kord.core.Kord.getSelf"]},{"name":"suspend fun getSplash(format: Image.Format): Image?","description":"dev.kord.core.entity.Guild.getSplash","location":"core/dev.kord.core.entity/-guild/get-splash.html","searchKeys":["getSplash","suspend fun getSplash(format: Image.Format): Image?","dev.kord.core.entity.Guild.getSplash"]},{"name":"suspend fun getSticker(): Sticker","description":"dev.kord.core.entity.StickerItem.getSticker","location":"core/dev.kord.core.entity/-sticker-item/get-sticker.html","searchKeys":["getSticker","suspend fun getSticker(): Sticker","dev.kord.core.entity.StickerItem.getSticker"]},{"name":"suspend fun getSticker(id: Snowflake): Sticker","description":"dev.kord.core.Kord.getSticker","location":"core/dev.kord.core/-kord/get-sticker.html","searchKeys":["getSticker","suspend fun getSticker(id: Snowflake): Sticker","dev.kord.core.Kord.getSticker"]},{"name":"suspend fun getStickerOrNull(): Sticker?","description":"dev.kord.core.entity.StickerItem.getStickerOrNull","location":"core/dev.kord.core.entity/-sticker-item/get-sticker-or-null.html","searchKeys":["getStickerOrNull","suspend fun getStickerOrNull(): Sticker?","dev.kord.core.entity.StickerItem.getStickerOrNull"]},{"name":"suspend fun getSystemChannel(): TextChannel?","description":"dev.kord.core.entity.Guild.getSystemChannel","location":"core/dev.kord.core.entity/-guild/get-system-channel.html","searchKeys":["getSystemChannel","suspend fun getSystemChannel(): TextChannel?","dev.kord.core.entity.Guild.getSystemChannel"]},{"name":"suspend fun getTargetUserAsMemberOrNull(): Member?","description":"dev.kord.core.event.guild.InviteCreateEvent.getTargetUserAsMemberOrNull","location":"core/dev.kord.core.event.guild/-invite-create-event/get-target-user-as-member-or-null.html","searchKeys":["getTargetUserAsMemberOrNull","suspend fun getTargetUserAsMemberOrNull(): Member?","dev.kord.core.event.guild.InviteCreateEvent.getTargetUserAsMemberOrNull"]},{"name":"suspend fun getTargetUserOrNull(): User?","description":"dev.kord.core.entity.Invite.getTargetUserOrNull","location":"core/dev.kord.core.entity/-invite/get-target-user-or-null.html","searchKeys":["getTargetUserOrNull","suspend fun getTargetUserOrNull(): User?","dev.kord.core.entity.Invite.getTargetUserOrNull"]},{"name":"suspend fun getTargetUserOrNull(): User?","description":"dev.kord.core.event.guild.InviteCreateEvent.getTargetUserOrNull","location":"core/dev.kord.core.event.guild/-invite-create-event/get-target-user-or-null.html","searchKeys":["getTargetUserOrNull","suspend fun getTargetUserOrNull(): User?","dev.kord.core.event.guild.InviteCreateEvent.getTargetUserOrNull"]},{"name":"suspend fun getUser(): User","description":"dev.kord.core.entity.Ban.getUser","location":"core/dev.kord.core.entity/-ban/get-user.html","searchKeys":["getUser","suspend fun getUser(): User","dev.kord.core.entity.Ban.getUser"]},{"name":"suspend fun getUser(): User","description":"dev.kord.core.entity.Message.Interaction.getUser","location":"core/dev.kord.core.entity/-message/-interaction/get-user.html","searchKeys":["getUser","suspend fun getUser(): User","dev.kord.core.entity.Message.Interaction.getUser"]},{"name":"suspend fun getUser(): User","description":"dev.kord.core.entity.Presence.getUser","location":"core/dev.kord.core.entity/-presence/get-user.html","searchKeys":["getUser","suspend fun getUser(): User","dev.kord.core.entity.Presence.getUser"]},{"name":"suspend fun getUser(): User","description":"dev.kord.core.entity.Team.getUser","location":"core/dev.kord.core.entity/-team/get-user.html","searchKeys":["getUser","suspend fun getUser(): User","dev.kord.core.entity.Team.getUser"]},{"name":"suspend fun getUser(): User","description":"dev.kord.core.event.channel.TypingStartEvent.getUser","location":"core/dev.kord.core.event.channel/-typing-start-event/get-user.html","searchKeys":["getUser","suspend fun getUser(): User","dev.kord.core.event.channel.TypingStartEvent.getUser"]},{"name":"suspend fun getUser(): User","description":"dev.kord.core.event.message.ReactionAddEvent.getUser","location":"core/dev.kord.core.event.message/-reaction-add-event/get-user.html","searchKeys":["getUser","suspend fun getUser(): User","dev.kord.core.event.message.ReactionAddEvent.getUser"]},{"name":"suspend fun getUser(): User","description":"dev.kord.core.event.message.ReactionRemoveEvent.getUser","location":"core/dev.kord.core.event.message/-reaction-remove-event/get-user.html","searchKeys":["getUser","suspend fun getUser(): User","dev.kord.core.event.message.ReactionRemoveEvent.getUser"]},{"name":"suspend fun getUser(): User","description":"dev.kord.core.event.user.PresenceUpdateEvent.getUser","location":"core/dev.kord.core.event.user/-presence-update-event/get-user.html","searchKeys":["getUser","suspend fun getUser(): User","dev.kord.core.event.user.PresenceUpdateEvent.getUser"]},{"name":"suspend fun getUser(): User?","description":"dev.kord.core.entity.GuildEmoji.getUser","location":"core/dev.kord.core.entity/-guild-emoji/get-user.html","searchKeys":["getUser","suspend fun getUser(): User?","dev.kord.core.entity.GuildEmoji.getUser"]},{"name":"suspend fun getUser(): User?","description":"dev.kord.core.entity.TeamMember.getUser","location":"core/dev.kord.core.entity/-team-member/get-user.html","searchKeys":["getUser","suspend fun getUser(): User?","dev.kord.core.entity.TeamMember.getUser"]},{"name":"suspend fun getUser(id: Snowflake, strategy: EntitySupplyStrategy<*> = resources.defaultStrategy): User?","description":"dev.kord.core.Kord.getUser","location":"core/dev.kord.core/-kord/get-user.html","searchKeys":["getUser","suspend fun getUser(id: Snowflake, strategy: EntitySupplyStrategy<*> = resources.defaultStrategy): User?","dev.kord.core.Kord.getUser"]},{"name":"suspend fun getUserAsMember(): Member?","description":"dev.kord.core.event.message.ReactionAddEvent.getUserAsMember","location":"core/dev.kord.core.event.message/-reaction-add-event/get-user-as-member.html","searchKeys":["getUserAsMember","suspend fun getUserAsMember(): Member?","dev.kord.core.event.message.ReactionAddEvent.getUserAsMember"]},{"name":"suspend fun getUserAsMember(): Member?","description":"dev.kord.core.event.message.ReactionRemoveEvent.getUserAsMember","location":"core/dev.kord.core.event.message/-reaction-remove-event/get-user-as-member.html","searchKeys":["getUserAsMember","suspend fun getUserAsMember(): Member?","dev.kord.core.event.message.ReactionRemoveEvent.getUserAsMember"]},{"name":"suspend fun getUserOrNUll(): User?","description":"dev.kord.core.entity.Team.getUserOrNUll","location":"core/dev.kord.core.entity/-team/get-user-or-n-ull.html","searchKeys":["getUserOrNUll","suspend fun getUserOrNUll(): User?","dev.kord.core.entity.Team.getUserOrNUll"]},{"name":"suspend fun getUserOrNull(): User?","description":"dev.kord.core.entity.Ban.getUserOrNull","location":"core/dev.kord.core.entity/-ban/get-user-or-null.html","searchKeys":["getUserOrNull","suspend fun getUserOrNull(): User?","dev.kord.core.entity.Ban.getUserOrNull"]},{"name":"suspend fun getUserOrNull(): User?","description":"dev.kord.core.entity.Message.Interaction.getUserOrNull","location":"core/dev.kord.core.entity/-message/-interaction/get-user-or-null.html","searchKeys":["getUserOrNull","suspend fun getUserOrNull(): User?","dev.kord.core.entity.Message.Interaction.getUserOrNull"]},{"name":"suspend fun getUserOrNull(): User?","description":"dev.kord.core.entity.Presence.getUserOrNull","location":"core/dev.kord.core.entity/-presence/get-user-or-null.html","searchKeys":["getUserOrNull","suspend fun getUserOrNull(): User?","dev.kord.core.entity.Presence.getUserOrNull"]},{"name":"suspend fun getUserOrNull(): User?","description":"dev.kord.core.event.channel.TypingStartEvent.getUserOrNull","location":"core/dev.kord.core.event.channel/-typing-start-event/get-user-or-null.html","searchKeys":["getUserOrNull","suspend fun getUserOrNull(): User?","dev.kord.core.event.channel.TypingStartEvent.getUserOrNull"]},{"name":"suspend fun getUserOrNull(): User?","description":"dev.kord.core.event.message.ReactionAddEvent.getUserOrNull","location":"core/dev.kord.core.event.message/-reaction-add-event/get-user-or-null.html","searchKeys":["getUserOrNull","suspend fun getUserOrNull(): User?","dev.kord.core.event.message.ReactionAddEvent.getUserOrNull"]},{"name":"suspend fun getUserOrNull(): User?","description":"dev.kord.core.event.message.ReactionRemoveEvent.getUserOrNull","location":"core/dev.kord.core.event.message/-reaction-remove-event/get-user-or-null.html","searchKeys":["getUserOrNull","suspend fun getUserOrNull(): User?","dev.kord.core.event.message.ReactionRemoveEvent.getUserOrNull"]},{"name":"suspend fun getUserOrNull(): User?","description":"dev.kord.core.event.user.PresenceUpdateEvent.getUserOrNull","location":"core/dev.kord.core.event.user/-presence-update-event/get-user-or-null.html","searchKeys":["getUserOrNull","suspend fun getUserOrNull(): User?","dev.kord.core.event.user.PresenceUpdateEvent.getUserOrNull"]},{"name":"suspend fun getWebhook(id: Snowflake, strategy: EntitySupplyStrategy<*> = resources.defaultStrategy): Webhook","description":"dev.kord.core.Kord.getWebhook","location":"core/dev.kord.core/-kord/get-webhook.html","searchKeys":["getWebhook","suspend fun getWebhook(id: Snowflake, strategy: EntitySupplyStrategy<*> = resources.defaultStrategy): Webhook","dev.kord.core.Kord.getWebhook"]},{"name":"suspend fun getWebhookOrNull(id: Snowflake, strategy: EntitySupplyStrategy<*> = resources.defaultStrategy): Webhook?","description":"dev.kord.core.Kord.getWebhookOrNull","location":"core/dev.kord.core/-kord/get-webhook-or-null.html","searchKeys":["getWebhookOrNull","suspend fun getWebhookOrNull(id: Snowflake, strategy: EntitySupplyStrategy<*> = resources.defaultStrategy): Webhook?","dev.kord.core.Kord.getWebhookOrNull"]},{"name":"suspend fun getWebhookWithToken(id: Snowflake, token: String, strategy: EntitySupplyStrategy<*> = resources.defaultStrategy): Webhook","description":"dev.kord.core.Kord.getWebhookWithToken","location":"core/dev.kord.core/-kord/get-webhook-with-token.html","searchKeys":["getWebhookWithToken","suspend fun getWebhookWithToken(id: Snowflake, token: String, strategy: EntitySupplyStrategy<*> = resources.defaultStrategy): Webhook","dev.kord.core.Kord.getWebhookWithToken"]},{"name":"suspend fun getWebhookWithTokenOrNull(id: Snowflake, token: String, strategy: EntitySupplyStrategy<*> = resources.defaultStrategy): Webhook?","description":"dev.kord.core.Kord.getWebhookWithTokenOrNull","location":"core/dev.kord.core/-kord/get-webhook-with-token-or-null.html","searchKeys":["getWebhookWithTokenOrNull","suspend fun getWebhookWithTokenOrNull(id: Snowflake, token: String, strategy: EntitySupplyStrategy<*> = resources.defaultStrategy): Webhook?","dev.kord.core.Kord.getWebhookWithTokenOrNull"]},{"name":"suspend fun getWidgetChannel(): TopGuildMessageChannel?","description":"dev.kord.core.entity.Guild.getWidgetChannel","location":"core/dev.kord.core.entity/-guild/get-widget-channel.html","searchKeys":["getWidgetChannel","suspend fun getWidgetChannel(): TopGuildMessageChannel?","dev.kord.core.entity.Guild.getWidgetChannel"]},{"name":"suspend fun isOwner(): Boolean","description":"dev.kord.core.entity.Member.isOwner","location":"core/dev.kord.core.entity/-member/is-owner.html","searchKeys":["isOwner","suspend fun isOwner(): Boolean","dev.kord.core.entity.Member.isOwner"]},{"name":"suspend fun logout()","description":"dev.kord.core.Kord.logout","location":"core/dev.kord.core/-kord/logout.html","searchKeys":["logout","suspend fun logout()","dev.kord.core.Kord.logout"]},{"name":"suspend fun shutdown()","description":"dev.kord.core.Kord.shutdown","location":"core/dev.kord.core/-kord/shutdown.html","searchKeys":["shutdown","suspend fun shutdown()","dev.kord.core.Kord.shutdown"]},{"name":"suspend fun sync()","description":"dev.kord.core.entity.Integration.sync","location":"core/dev.kord.core.entity/-integration/sync.html","searchKeys":["sync","suspend fun sync()","dev.kord.core.entity.Integration.sync"]},{"name":"val PresenceData.id: String","description":"dev.kord.core.cache.data.id","location":"core/dev.kord.core.cache.data/id.html","searchKeys":["id","val PresenceData.id: String","dev.kord.core.cache.data.id"]},{"name":"val VoiceStateData.id: String","description":"dev.kord.core.cache.data.id","location":"core/dev.kord.core.cache.data/id.html","searchKeys":["id","val VoiceStateData.id: String","dev.kord.core.cache.data.id"]},{"name":"val accentColor: Color?","description":"dev.kord.core.entity.User.accentColor","location":"core/dev.kord.core.entity/-user/accent-color.html","searchKeys":["accentColor","val accentColor: Color?","dev.kord.core.entity.User.accentColor"]},{"name":"val accentColor: Int? = null","description":"dev.kord.core.cache.data.UserData.accentColor","location":"core/dev.kord.core.cache.data/-user-data/accent-color.html","searchKeys":["accentColor","val accentColor: Int? = null","dev.kord.core.cache.data.UserData.accentColor"]},{"name":"val account: IntegrationsAccountData","description":"dev.kord.core.cache.data.IntegrationData.account","location":"core/dev.kord.core.cache.data/-integration-data/account.html","searchKeys":["account","val account: IntegrationsAccountData","dev.kord.core.cache.data.IntegrationData.account"]},{"name":"val action: AutoModerationAction","description":"dev.kord.core.event.automoderation.AutoModerationActionExecutionEvent.action","location":"core/dev.kord.core.event.automoderation/-auto-moderation-action-execution-event/action.html","searchKeys":["action","val action: AutoModerationAction","dev.kord.core.event.automoderation.AutoModerationActionExecutionEvent.action"]},{"name":"val action: AutoModerationActionData","description":"dev.kord.core.event.automoderation.data.AutoModerationActionExecutionEventData.action","location":"core/dev.kord.core.event.automoderation.data/-auto-moderation-action-execution-event-data/action.html","searchKeys":["action","val action: AutoModerationActionData","dev.kord.core.event.automoderation.data.AutoModerationActionExecutionEventData.action"]},{"name":"val actionRows: List<ActionRowComponent>","description":"dev.kord.core.entity.Message.actionRows","location":"core/dev.kord.core.entity/-message/action-rows.html","searchKeys":["actionRows","val actionRows: List<ActionRowComponent>","dev.kord.core.entity.Message.actionRows"]},{"name":"val actionType: AuditLogEvent","description":"dev.kord.core.entity.AuditLogEntry.actionType","location":"core/dev.kord.core.entity/-audit-log-entry/action-type.html","searchKeys":["actionType","val actionType: AuditLogEvent","dev.kord.core.entity.AuditLogEntry.actionType"]},{"name":"val actions: List<AutoModerationAction>","description":"dev.kord.core.entity.automoderation.AutoModerationRule.actions","location":"core/dev.kord.core.entity.automoderation/-auto-moderation-rule/actions.html","searchKeys":["actions","val actions: List<AutoModerationAction>","dev.kord.core.entity.automoderation.AutoModerationRule.actions"]},{"name":"val actions: List<AutoModerationActionData>","description":"dev.kord.core.cache.data.AutoModerationRuleData.actions","location":"core/dev.kord.core.cache.data/-auto-moderation-rule-data/actions.html","searchKeys":["actions","val actions: List<AutoModerationActionData>","dev.kord.core.cache.data.AutoModerationRuleData.actions"]},{"name":"val activities: List<Activity>","description":"dev.kord.core.entity.Presence.activities","location":"core/dev.kord.core.entity/-presence/activities.html","searchKeys":["activities","val activities: List<Activity>","dev.kord.core.entity.Presence.activities"]},{"name":"val activities: List<ActivityData>","description":"dev.kord.core.cache.data.PresenceData.activities","location":"core/dev.kord.core.cache.data/-presence-data/activities.html","searchKeys":["activities","val activities: List<ActivityData>","dev.kord.core.cache.data.PresenceData.activities"]},{"name":"val activity: Optional<MessageActivity>","description":"dev.kord.core.cache.data.MessageData.activity","location":"core/dev.kord.core.cache.data/-message-data/activity.html","searchKeys":["activity","val activity: Optional<MessageActivity>","dev.kord.core.cache.data.MessageData.activity"]},{"name":"val addedMembers: List<ThreadMember>","description":"dev.kord.core.event.channel.thread.ThreadMembersUpdateEvent.addedMembers","location":"core/dev.kord.core.event.channel.thread/-thread-members-update-event/added-members.html","searchKeys":["addedMembers","val addedMembers: List<ThreadMember>","dev.kord.core.event.channel.thread.ThreadMembersUpdateEvent.addedMembers"]},{"name":"val addedMembers: Optional<List<ThreadMemberData>>","description":"dev.kord.core.cache.data.ThreadMembersUpdateEventData.addedMembers","location":"core/dev.kord.core.cache.data/-thread-members-update-event-data/added-members.html","searchKeys":["addedMembers","val addedMembers: Optional<List<ThreadMemberData>>","dev.kord.core.cache.data.ThreadMembersUpdateEventData.addedMembers"]},{"name":"val afkChannel: VoiceChannelBehavior?","description":"dev.kord.core.entity.Guild.afkChannel","location":"core/dev.kord.core.entity/-guild/afk-channel.html","searchKeys":["afkChannel","val afkChannel: VoiceChannelBehavior?","dev.kord.core.entity.Guild.afkChannel"]},{"name":"val afkChannelId: Snowflake?","description":"dev.kord.core.entity.Guild.afkChannelId","location":"core/dev.kord.core.entity/-guild/afk-channel-id.html","searchKeys":["afkChannelId","val afkChannelId: Snowflake?","dev.kord.core.entity.Guild.afkChannelId"]},{"name":"val afkChannelId: Snowflake? = null","description":"dev.kord.core.cache.data.GuildData.afkChannelId","location":"core/dev.kord.core.cache.data/-guild-data/afk-channel-id.html","searchKeys":["afkChannelId","val afkChannelId: Snowflake? = null","dev.kord.core.cache.data.GuildData.afkChannelId"]},{"name":"val afkTimeout: Duration","description":"dev.kord.core.entity.Guild.afkTimeout","location":"core/dev.kord.core.entity/-guild/afk-timeout.html","searchKeys":["afkTimeout","val afkTimeout: Duration","dev.kord.core.entity.Guild.afkTimeout"]},{"name":"val afkTimeout: DurationInSeconds","description":"dev.kord.core.cache.data.GuildData.afkTimeout","location":"core/dev.kord.core.cache.data/-guild-data/afk-timeout.html","searchKeys":["afkTimeout","val afkTimeout: DurationInSeconds","dev.kord.core.cache.data.GuildData.afkTimeout"]},{"name":"val alertSystemMessage: MessageBehavior?","description":"dev.kord.core.event.automoderation.AutoModerationActionExecutionEvent.alertSystemMessage","location":"core/dev.kord.core.event.automoderation/-auto-moderation-action-execution-event/alert-system-message.html","searchKeys":["alertSystemMessage","val alertSystemMessage: MessageBehavior?","dev.kord.core.event.automoderation.AutoModerationActionExecutionEvent.alertSystemMessage"]},{"name":"val alertSystemMessageId: OptionalSnowflake","description":"dev.kord.core.event.automoderation.data.AutoModerationActionExecutionEventData.alertSystemMessageId","location":"core/dev.kord.core.event.automoderation.data/-auto-moderation-action-execution-event-data/alert-system-message-id.html","searchKeys":["alertSystemMessageId","val alertSystemMessageId: OptionalSnowflake","dev.kord.core.event.automoderation.data.AutoModerationActionExecutionEventData.alertSystemMessageId"]},{"name":"val alertSystemMessageId: Snowflake?","description":"dev.kord.core.event.automoderation.AutoModerationActionExecutionEvent.alertSystemMessageId","location":"core/dev.kord.core.event.automoderation/-auto-moderation-action-execution-event/alert-system-message-id.html","searchKeys":["alertSystemMessageId","val alertSystemMessageId: Snowflake?","dev.kord.core.event.automoderation.AutoModerationActionExecutionEvent.alertSystemMessageId"]},{"name":"val allowList: Optional<List<String>>","description":"dev.kord.core.cache.data.AutoModerationRuleTriggerMetadataData.allowList","location":"core/dev.kord.core.cache.data/-auto-moderation-rule-trigger-metadata-data/allow-list.html","searchKeys":["allowList","val allowList: Optional<List<String>>","dev.kord.core.cache.data.AutoModerationRuleTriggerMetadataData.allowList"]},{"name":"val allowed: Permissions","description":"dev.kord.core.cache.data.PermissionOverwriteData.allowed","location":"core/dev.kord.core.cache.data/-permission-overwrite-data/allowed.html","searchKeys":["allowed","val allowed: Permissions","dev.kord.core.cache.data.PermissionOverwriteData.allowed"]},{"name":"val allowed: Permissions","description":"dev.kord.core.entity.PermissionOverwrite.allowed","location":"core/dev.kord.core.entity/-permission-overwrite/allowed.html","searchKeys":["allowed","val allowed: Permissions","dev.kord.core.entity.PermissionOverwrite.allowed"]},{"name":"val allowedKeywords: List<String>","description":"dev.kord.core.entity.automoderation.KeywordPresetAutoModerationRule.allowedKeywords","location":"core/dev.kord.core.entity.automoderation/-keyword-preset-auto-moderation-rule/allowed-keywords.html","searchKeys":["allowedKeywords","val allowedKeywords: List<String>","dev.kord.core.entity.automoderation.KeywordPresetAutoModerationRule.allowedKeywords"]},{"name":"val animated: Boolean","description":"dev.kord.core.entity.Icon.animated","location":"core/dev.kord.core.entity/-icon/animated.html","searchKeys":["animated","val animated: Boolean","dev.kord.core.entity.Icon.animated"]},{"name":"val animated: OptionalBoolean","description":"dev.kord.core.cache.data.EmojiData.animated","location":"core/dev.kord.core.cache.data/-emoji-data/animated.html","searchKeys":["animated","val animated: OptionalBoolean","dev.kord.core.cache.data.EmojiData.animated"]},{"name":"val appPermissions: Optional<Permissions>","description":"dev.kord.core.cache.data.InteractionData.appPermissions","location":"core/dev.kord.core.cache.data/-interaction-data/app-permissions.html","searchKeys":["appPermissions","val appPermissions: Optional<Permissions>","dev.kord.core.cache.data.InteractionData.appPermissions"]},{"name":"val application: IntegrationApplication","description":"dev.kord.core.cache.data.IntegrationData.application","location":"core/dev.kord.core.cache.data/-integration-data/application.html","searchKeys":["application","val application: IntegrationApplication","dev.kord.core.cache.data.IntegrationData.application"]},{"name":"val application: Optional<MessageApplication>","description":"dev.kord.core.cache.data.MessageData.application","location":"core/dev.kord.core.cache.data/-message-data/application.html","searchKeys":["application","val application: Optional<MessageApplication>","dev.kord.core.cache.data.MessageData.application"]},{"name":"val applicationCommands: List<ApplicationCommand>","description":"dev.kord.core.entity.AuditLog.applicationCommands","location":"core/dev.kord.core.entity/-audit-log/application-commands.html","searchKeys":["applicationCommands","val applicationCommands: List<ApplicationCommand>","dev.kord.core.entity.AuditLog.applicationCommands"]},{"name":"val applicationId: OptionalSnowflake","description":"dev.kord.core.cache.data.ActivityData.applicationId","location":"core/dev.kord.core.cache.data/-activity-data/application-id.html","searchKeys":["applicationId","val applicationId: OptionalSnowflake","dev.kord.core.cache.data.ActivityData.applicationId"]},{"name":"val applicationId: OptionalSnowflake","description":"dev.kord.core.cache.data.ChannelData.applicationId","location":"core/dev.kord.core.cache.data/-channel-data/application-id.html","searchKeys":["applicationId","val applicationId: OptionalSnowflake","dev.kord.core.cache.data.ChannelData.applicationId"]},{"name":"val applicationId: OptionalSnowflake","description":"dev.kord.core.cache.data.MessageData.applicationId","location":"core/dev.kord.core.cache.data/-message-data/application-id.html","searchKeys":["applicationId","val applicationId: OptionalSnowflake","dev.kord.core.cache.data.MessageData.applicationId"]},{"name":"val applicationId: Snowflake","description":"dev.kord.core.ClientResources.applicationId","location":"core/dev.kord.core/-client-resources/application-id.html","searchKeys":["applicationId","val applicationId: Snowflake","dev.kord.core.ClientResources.applicationId"]},{"name":"val applicationId: Snowflake","description":"dev.kord.core.cache.data.ApplicationCommandData.applicationId","location":"core/dev.kord.core.cache.data/-application-command-data/application-id.html","searchKeys":["applicationId","val applicationId: Snowflake","dev.kord.core.cache.data.ApplicationCommandData.applicationId"]},{"name":"val applicationId: Snowflake","description":"dev.kord.core.cache.data.GuildApplicationCommandPermissionsData.applicationId","location":"core/dev.kord.core.cache.data/-guild-application-command-permissions-data/application-id.html","searchKeys":["applicationId","val applicationId: Snowflake","dev.kord.core.cache.data.GuildApplicationCommandPermissionsData.applicationId"]},{"name":"val applicationId: Snowflake","description":"dev.kord.core.cache.data.InteractionData.applicationId","location":"core/dev.kord.core.cache.data/-interaction-data/application-id.html","searchKeys":["applicationId","val applicationId: Snowflake","dev.kord.core.cache.data.InteractionData.applicationId"]},{"name":"val applicationId: Snowflake","description":"dev.kord.core.entity.application.ApplicationCommandPermissions.applicationId","location":"core/dev.kord.core.entity.application/-application-command-permissions/application-id.html","searchKeys":["applicationId","val applicationId: Snowflake","dev.kord.core.entity.application.ApplicationCommandPermissions.applicationId"]},{"name":"val applicationId: Snowflake?","description":"dev.kord.core.cache.data.WebhookData.applicationId","location":"core/dev.kord.core.cache.data/-webhook-data/application-id.html","searchKeys":["applicationId","val applicationId: Snowflake?","dev.kord.core.cache.data.WebhookData.applicationId"]},{"name":"val applicationId: Snowflake?","description":"dev.kord.core.entity.Activity.applicationId","location":"core/dev.kord.core.entity/-activity/application-id.html","searchKeys":["applicationId","val applicationId: Snowflake?","dev.kord.core.entity.Activity.applicationId"]},{"name":"val applicationId: Snowflake?","description":"dev.kord.core.entity.Guild.applicationId","location":"core/dev.kord.core.entity/-guild/application-id.html","searchKeys":["applicationId","val applicationId: Snowflake?","dev.kord.core.entity.Guild.applicationId"]},{"name":"val applicationId: Snowflake?","description":"dev.kord.core.entity.Message.applicationId","location":"core/dev.kord.core.entity/-message/application-id.html","searchKeys":["applicationId","val applicationId: Snowflake?","dev.kord.core.entity.Message.applicationId"]},{"name":"val applicationId: Snowflake? = null","description":"dev.kord.core.cache.data.GuildData.applicationId","location":"core/dev.kord.core.cache.data/-guild-data/application-id.html","searchKeys":["applicationId","val applicationId: Snowflake? = null","dev.kord.core.cache.data.GuildData.applicationId"]},{"name":"val approximateMemberCount: Int","description":"dev.kord.core.cache.data.GuildPreviewData.approximateMemberCount","location":"core/dev.kord.core.cache.data/-guild-preview-data/approximate-member-count.html","searchKeys":["approximateMemberCount","val approximateMemberCount: Int","dev.kord.core.cache.data.GuildPreviewData.approximateMemberCount"]},{"name":"val approximateMemberCount: Int","description":"dev.kord.core.entity.GuildPreview.approximateMemberCount","location":"core/dev.kord.core.entity/-guild-preview/approximate-member-count.html","searchKeys":["approximateMemberCount","val approximateMemberCount: Int","dev.kord.core.entity.GuildPreview.approximateMemberCount"]},{"name":"val approximateMemberCount: Int?","description":"dev.kord.core.entity.Guild.approximateMemberCount","location":"core/dev.kord.core.entity/-guild/approximate-member-count.html","searchKeys":["approximateMemberCount","val approximateMemberCount: Int?","dev.kord.core.entity.Guild.approximateMemberCount"]},{"name":"val approximateMemberCount: Int?","description":"dev.kord.core.entity.Invite.approximateMemberCount","location":"core/dev.kord.core.entity/-invite/approximate-member-count.html","searchKeys":["approximateMemberCount","val approximateMemberCount: Int?","dev.kord.core.entity.Invite.approximateMemberCount"]},{"name":"val approximateMemberCount: OptionalInt","description":"dev.kord.core.cache.data.GuildData.approximateMemberCount","location":"core/dev.kord.core.cache.data/-guild-data/approximate-member-count.html","searchKeys":["approximateMemberCount","val approximateMemberCount: OptionalInt","dev.kord.core.cache.data.GuildData.approximateMemberCount"]},{"name":"val approximatePresenceCount: Int","description":"dev.kord.core.cache.data.GuildPreviewData.approximatePresenceCount","location":"core/dev.kord.core.cache.data/-guild-preview-data/approximate-presence-count.html","searchKeys":["approximatePresenceCount","val approximatePresenceCount: Int","dev.kord.core.cache.data.GuildPreviewData.approximatePresenceCount"]},{"name":"val approximatePresenceCount: Int","description":"dev.kord.core.entity.GuildPreview.approximatePresenceCount","location":"core/dev.kord.core.entity/-guild-preview/approximate-presence-count.html","searchKeys":["approximatePresenceCount","val approximatePresenceCount: Int","dev.kord.core.entity.GuildPreview.approximatePresenceCount"]},{"name":"val approximatePresenceCount: Int?","description":"dev.kord.core.entity.Guild.approximatePresenceCount","location":"core/dev.kord.core.entity/-guild/approximate-presence-count.html","searchKeys":["approximatePresenceCount","val approximatePresenceCount: Int?","dev.kord.core.entity.Guild.approximatePresenceCount"]},{"name":"val approximatePresenceCount: Int?","description":"dev.kord.core.entity.Invite.approximatePresenceCount","location":"core/dev.kord.core.entity/-invite/approximate-presence-count.html","searchKeys":["approximatePresenceCount","val approximatePresenceCount: Int?","dev.kord.core.entity.Invite.approximatePresenceCount"]},{"name":"val approximatePresenceCount: OptionalInt","description":"dev.kord.core.cache.data.GuildData.approximatePresenceCount","location":"core/dev.kord.core.cache.data/-guild-data/approximate-presence-count.html","searchKeys":["approximatePresenceCount","val approximatePresenceCount: OptionalInt","dev.kord.core.cache.data.GuildData.approximatePresenceCount"]},{"name":"val archiveTimestamp: Instant","description":"dev.kord.core.cache.data.ThreadMetadataData.archiveTimestamp","location":"core/dev.kord.core.cache.data/-thread-metadata-data/archive-timestamp.html","searchKeys":["archiveTimestamp","val archiveTimestamp: Instant","dev.kord.core.cache.data.ThreadMetadataData.archiveTimestamp"]},{"name":"val archived: Boolean","description":"dev.kord.core.cache.data.ThreadMetadataData.archived","location":"core/dev.kord.core.cache.data/-thread-metadata-data/archived.html","searchKeys":["archived","val archived: Boolean","dev.kord.core.cache.data.ThreadMetadataData.archived"]},{"name":"val assets: Activity.Assets","description":"dev.kord.core.entity.Activity.assets","location":"core/dev.kord.core.entity/-activity/assets.html","searchKeys":["assets","val assets: Activity.Assets","dev.kord.core.entity.Activity.assets"]},{"name":"val assets: Optional<DiscordActivityAssets>","description":"dev.kord.core.cache.data.ActivityData.assets","location":"core/dev.kord.core.cache.data/-activity-data/assets.html","searchKeys":["assets","val assets: Optional<DiscordActivityAssets>","dev.kord.core.cache.data.ActivityData.assets"]},{"name":"val attachments: List<AttachmentData>","description":"dev.kord.core.cache.data.MessageData.attachments","location":"core/dev.kord.core.cache.data/-message-data/attachments.html","searchKeys":["attachments","val attachments: List<AttachmentData>","dev.kord.core.cache.data.MessageData.attachments"]},{"name":"val attachments: Map<Snowflake, Attachment>?","description":"dev.kord.core.entity.interaction.ResolvedObjects.attachments","location":"core/dev.kord.core.entity.interaction/-resolved-objects/attachments.html","searchKeys":["attachments","val attachments: Map<Snowflake, Attachment>?","dev.kord.core.entity.interaction.ResolvedObjects.attachments"]},{"name":"val attachments: Optional<Map<Snowflake, AttachmentData>>","description":"dev.kord.core.cache.data.ResolvedObjectsData.attachments","location":"core/dev.kord.core.cache.data/-resolved-objects-data/attachments.html","searchKeys":["attachments","val attachments: Optional<Map<Snowflake, AttachmentData>>","dev.kord.core.cache.data.ResolvedObjectsData.attachments"]},{"name":"val attachments: Set<Attachment>","description":"dev.kord.core.entity.Message.attachments","location":"core/dev.kord.core.entity/-message/attachments.html","searchKeys":["attachments","val attachments: Set<Attachment>","dev.kord.core.entity.Message.attachments"]},{"name":"val author: Embed.Author?","description":"dev.kord.core.entity.Embed.author","location":"core/dev.kord.core.entity/-embed/author.html","searchKeys":["author","val author: Embed.Author?","dev.kord.core.entity.Embed.author"]},{"name":"val author: Optional<EmbedAuthorData>","description":"dev.kord.core.cache.data.EmbedData.author","location":"core/dev.kord.core.cache.data/-embed-data/author.html","searchKeys":["author","val author: Optional<EmbedAuthorData>","dev.kord.core.cache.data.EmbedData.author"]},{"name":"val author: User?","description":"dev.kord.core.entity.Message.author","location":"core/dev.kord.core.entity/-message/author.html","searchKeys":["author","val author: User?","dev.kord.core.entity.Message.author"]},{"name":"val author: UserData","description":"dev.kord.core.cache.data.MessageData.author","location":"core/dev.kord.core.cache.data/-message-data/author.html","searchKeys":["author","val author: UserData","dev.kord.core.cache.data.MessageData.author"]},{"name":"val autoArchiveDuration: ArchiveDuration","description":"dev.kord.core.cache.data.ThreadMetadataData.autoArchiveDuration","location":"core/dev.kord.core.cache.data/-thread-metadata-data/auto-archive-duration.html","searchKeys":["autoArchiveDuration","val autoArchiveDuration: ArchiveDuration","dev.kord.core.cache.data.ThreadMetadataData.autoArchiveDuration"]},{"name":"val autoModerationRules: List<AutoModerationRule>","description":"dev.kord.core.entity.AuditLog.autoModerationRules","location":"core/dev.kord.core.entity/-audit-log/auto-moderation-rules.html","searchKeys":["autoModerationRules","val autoModerationRules: List<AutoModerationRule>","dev.kord.core.entity.AuditLog.autoModerationRules"]},{"name":"val available: Boolean","description":"dev.kord.core.entity.Sticker.available","location":"core/dev.kord.core.entity/-sticker/available.html","searchKeys":["available","val available: Boolean","dev.kord.core.entity.Sticker.available"]},{"name":"val available: OptionalBoolean","description":"dev.kord.core.cache.data.EmojiData.available","location":"core/dev.kord.core.cache.data/-emoji-data/available.html","searchKeys":["available","val available: OptionalBoolean","dev.kord.core.cache.data.EmojiData.available"]},{"name":"val available: OptionalBoolean","description":"dev.kord.core.cache.data.StickerData.available","location":"core/dev.kord.core.cache.data/-sticker-data/available.html","searchKeys":["available","val available: OptionalBoolean","dev.kord.core.cache.data.StickerData.available"]},{"name":"val avatar: Icon?","description":"dev.kord.core.entity.User.avatar","location":"core/dev.kord.core.entity/-user/avatar.html","searchKeys":["avatar","val avatar: Icon?","dev.kord.core.entity.User.avatar"]},{"name":"val avatar: Optional<String?>","description":"dev.kord.core.cache.data.MemberData.avatar","location":"core/dev.kord.core.cache.data/-member-data/avatar.html","searchKeys":["avatar","val avatar: Optional<String?>","dev.kord.core.cache.data.MemberData.avatar"]},{"name":"val avatar: String? = null","description":"dev.kord.core.cache.data.UserData.avatar","location":"core/dev.kord.core.cache.data/-user-data/avatar.html","searchKeys":["avatar","val avatar: String? = null","dev.kord.core.cache.data.UserData.avatar"]},{"name":"val avatar: String? = null","description":"dev.kord.core.cache.data.WebhookData.avatar","location":"core/dev.kord.core.cache.data/-webhook-data/avatar.html","searchKeys":["avatar","val avatar: String? = null","dev.kord.core.cache.data.WebhookData.avatar"]},{"name":"val banner: Optional<String?>","description":"dev.kord.core.cache.data.PartialGuildData.banner","location":"core/dev.kord.core.cache.data/-partial-guild-data/banner.html","searchKeys":["banner","val banner: Optional<String?>","dev.kord.core.cache.data.PartialGuildData.banner"]},{"name":"val banner: String? = null","description":"dev.kord.core.cache.data.GuildData.banner","location":"core/dev.kord.core.cache.data/-guild-data/banner.html","searchKeys":["banner","val banner: String? = null","dev.kord.core.cache.data.GuildData.banner"]},{"name":"val banner: String? = null","description":"dev.kord.core.cache.data.UserData.banner","location":"core/dev.kord.core.cache.data/-user-data/banner.html","searchKeys":["banner","val banner: String? = null","dev.kord.core.cache.data.UserData.banner"]},{"name":"val bannerAssetId: Snowflake","description":"dev.kord.core.cache.data.StickerPackData.bannerAssetId","location":"core/dev.kord.core.cache.data/-sticker-pack-data/banner-asset-id.html","searchKeys":["bannerAssetId","val bannerAssetId: Snowflake","dev.kord.core.cache.data.StickerPackData.bannerAssetId"]},{"name":"val bannerHash: String?","description":"dev.kord.core.entity.Guild.bannerHash","location":"core/dev.kord.core.entity/-guild/banner-hash.html","searchKeys":["bannerHash","val bannerHash: String?","dev.kord.core.entity.Guild.bannerHash"]},{"name":"val bitrate: Int","description":"dev.kord.core.entity.channel.StageChannel.bitrate","location":"core/dev.kord.core.entity.channel/-stage-channel/bitrate.html","searchKeys":["bitrate","val bitrate: Int","dev.kord.core.entity.channel.StageChannel.bitrate"]},{"name":"val bitrate: Int","description":"dev.kord.core.entity.channel.VoiceChannel.bitrate","location":"core/dev.kord.core.entity.channel/-voice-channel/bitrate.html","searchKeys":["bitrate","val bitrate: Int","dev.kord.core.entity.channel.VoiceChannel.bitrate"]},{"name":"val bitrate: OptionalInt","description":"dev.kord.core.cache.data.ChannelData.bitrate","location":"core/dev.kord.core.cache.data/-channel-data/bitrate.html","searchKeys":["bitrate","val bitrate: OptionalInt","dev.kord.core.cache.data.ChannelData.bitrate"]},{"name":"val bot: OptionalBoolean","description":"dev.kord.core.cache.data.UserData.bot","location":"core/dev.kord.core.cache.data/-user-data/bot.html","searchKeys":["bot","val bot: OptionalBoolean","dev.kord.core.cache.data.UserData.bot"]},{"name":"val botId: OptionalSnowflake","description":"dev.kord.core.cache.data.RoleTagsData.botId","location":"core/dev.kord.core.cache.data/-role-tags-data/bot-id.html","searchKeys":["botId","val botId: OptionalSnowflake","dev.kord.core.cache.data.RoleTagsData.botId"]},{"name":"val botId: Snowflake?","description":"dev.kord.core.entity.RoleTags.botId","location":"core/dev.kord.core.entity/-role-tags/bot-id.html","searchKeys":["botId","val botId: Snowflake?","dev.kord.core.entity.RoleTags.botId"]},{"name":"val botPublic: Boolean","description":"dev.kord.core.cache.data.ApplicationData.botPublic","location":"core/dev.kord.core.cache.data/-application-data/bot-public.html","searchKeys":["botPublic","val botPublic: Boolean","dev.kord.core.cache.data.ApplicationData.botPublic"]},{"name":"val botRequireCodeGrant: Boolean","description":"dev.kord.core.cache.data.ApplicationData.botRequireCodeGrant","location":"core/dev.kord.core.cache.data/-application-data/bot-require-code-grant.html","searchKeys":["botRequireCodeGrant","val botRequireCodeGrant: Boolean","dev.kord.core.cache.data.ApplicationData.botRequireCodeGrant"]},{"name":"val buttons: List<String>?","description":"dev.kord.core.entity.Activity.buttons","location":"core/dev.kord.core.entity/-activity/buttons.html","searchKeys":["buttons","val buttons: List<String>?","dev.kord.core.entity.Activity.buttons"]},{"name":"val buttons: Optional<List<String>>","description":"dev.kord.core.cache.data.ActivityData.buttons","location":"core/dev.kord.core.cache.data/-activity-data/buttons.html","searchKeys":["buttons","val buttons: Optional<List<String>>","dev.kord.core.cache.data.ActivityData.buttons"]},{"name":"val cache: DataCache","description":"dev.kord.core.Kord.cache","location":"core/dev.kord.core/-kord/cache.html","searchKeys":["cache","val cache: DataCache","dev.kord.core.Kord.cache"]},{"name":"val cache: EntitySupplyStrategy<CacheEntitySupplier>","description":"dev.kord.core.supplier.EntitySupplyStrategy.Companion.cache","location":"core/dev.kord.core.supplier/-entity-supply-strategy/-companion/cache.html","searchKeys":["cache","val cache: EntitySupplyStrategy<CacheEntitySupplier>","dev.kord.core.supplier.EntitySupplyStrategy.Companion.cache"]},{"name":"val cacheWithCachingRestFallback: EntitySupplyStrategy<EntitySupplier>","description":"dev.kord.core.supplier.EntitySupplyStrategy.Companion.cacheWithCachingRestFallback","location":"core/dev.kord.core.supplier/-entity-supply-strategy/-companion/cache-with-caching-rest-fallback.html","searchKeys":["cacheWithCachingRestFallback","val cacheWithCachingRestFallback: EntitySupplyStrategy<EntitySupplier>","dev.kord.core.supplier.EntitySupplyStrategy.Companion.cacheWithCachingRestFallback"]},{"name":"val cacheWithRestFallback: EntitySupplyStrategy<EntitySupplier>","description":"dev.kord.core.supplier.EntitySupplyStrategy.Companion.cacheWithRestFallback","location":"core/dev.kord.core.supplier/-entity-supply-strategy/-companion/cache-with-rest-fallback.html","searchKeys":["cacheWithRestFallback","val cacheWithRestFallback: EntitySupplyStrategy<EntitySupplier>","dev.kord.core.supplier.EntitySupplyStrategy.Companion.cacheWithRestFallback"]},{"name":"val cachingRest: EntitySupplyStrategy<EntitySupplier>","description":"dev.kord.core.supplier.EntitySupplyStrategy.Companion.cachingRest","location":"core/dev.kord.core.supplier/-entity-supply-strategy/-companion/caching-rest.html","searchKeys":["cachingRest","val cachingRest: EntitySupplyStrategy<EntitySupplier>","dev.kord.core.supplier.EntitySupplyStrategy.Companion.cachingRest"]},{"name":"val cdnUrl: CdnUrl","description":"dev.kord.core.entity.Icon.cdnUrl","location":"core/dev.kord.core.entity/-icon/cdn-url.html","searchKeys":["cdnUrl","val cdnUrl: CdnUrl","dev.kord.core.entity.Icon.cdnUrl"]},{"name":"val changes: List<AuditLogChange<*>>","description":"dev.kord.core.entity.AuditLogEntry.changes","location":"core/dev.kord.core.entity/-audit-log-entry/changes.html","searchKeys":["changes","val changes: List<AuditLogChange<*>>","dev.kord.core.entity.AuditLogEntry.changes"]},{"name":"val channel: ChannelBehavior","description":"dev.kord.core.event.guild.InviteCreateEvent.channel","location":"core/dev.kord.core.event.guild/-invite-create-event/channel.html","searchKeys":["channel","val channel: ChannelBehavior","dev.kord.core.event.guild.InviteCreateEvent.channel"]},{"name":"val channel: ChannelBehavior","description":"dev.kord.core.event.guild.InviteDeleteEvent.channel","location":"core/dev.kord.core.event.guild/-invite-delete-event/channel.html","searchKeys":["channel","val channel: ChannelBehavior","dev.kord.core.event.guild.InviteDeleteEvent.channel"]},{"name":"val channel: ChannelBehavior?","description":"dev.kord.core.entity.GuildWidget.channel","location":"core/dev.kord.core.entity/-guild-widget/channel.html","searchKeys":["channel","val channel: ChannelBehavior?","dev.kord.core.entity.GuildWidget.channel"]},{"name":"val channel: ChannelBehavior?","description":"dev.kord.core.entity.Invite.channel","location":"core/dev.kord.core.entity/-invite/channel.html","searchKeys":["channel","val channel: ChannelBehavior?","dev.kord.core.entity.Invite.channel"]},{"name":"val channel: GuildMessageChannelBehavior","description":"dev.kord.core.event.message.ReactionRemoveEmojiEvent.channel","location":"core/dev.kord.core.event.message/-reaction-remove-emoji-event/channel.html","searchKeys":["channel","val channel: GuildMessageChannelBehavior","dev.kord.core.event.message.ReactionRemoveEmojiEvent.channel"]},{"name":"val channel: GuildMessageChannelBehavior?","description":"dev.kord.core.event.automoderation.AutoModerationActionExecutionEvent.channel","location":"core/dev.kord.core.event.automoderation/-auto-moderation-action-execution-event/channel.html","searchKeys":["channel","val channel: GuildMessageChannelBehavior?","dev.kord.core.event.automoderation.AutoModerationActionExecutionEvent.channel"]},{"name":"val channel: MessageChannelBehavior","description":"dev.kord.core.entity.MessageReference.channel","location":"core/dev.kord.core.entity/-message-reference/channel.html","searchKeys":["channel","val channel: MessageChannelBehavior","dev.kord.core.entity.MessageReference.channel"]},{"name":"val channel: MessageChannelBehavior","description":"dev.kord.core.entity.Webhook.channel","location":"core/dev.kord.core.entity/-webhook/channel.html","searchKeys":["channel","val channel: MessageChannelBehavior","dev.kord.core.entity.Webhook.channel"]},{"name":"val channel: MessageChannelBehavior","description":"dev.kord.core.event.channel.ChannelPinsUpdateEvent.channel","location":"core/dev.kord.core.event.channel/-channel-pins-update-event/channel.html","searchKeys":["channel","val channel: MessageChannelBehavior","dev.kord.core.event.channel.ChannelPinsUpdateEvent.channel"]},{"name":"val channel: MessageChannelBehavior","description":"dev.kord.core.event.channel.TypingStartEvent.channel","location":"core/dev.kord.core.event.channel/-typing-start-event/channel.html","searchKeys":["channel","val channel: MessageChannelBehavior","dev.kord.core.event.channel.TypingStartEvent.channel"]},{"name":"val channel: MessageChannelBehavior","description":"dev.kord.core.event.message.MessageBulkDeleteEvent.channel","location":"core/dev.kord.core.event.message/-message-bulk-delete-event/channel.html","searchKeys":["channel","val channel: MessageChannelBehavior","dev.kord.core.event.message.MessageBulkDeleteEvent.channel"]},{"name":"val channel: MessageChannelBehavior","description":"dev.kord.core.event.message.MessageDeleteEvent.channel","location":"core/dev.kord.core.event.message/-message-delete-event/channel.html","searchKeys":["channel","val channel: MessageChannelBehavior","dev.kord.core.event.message.MessageDeleteEvent.channel"]},{"name":"val channel: MessageChannelBehavior","description":"dev.kord.core.event.message.MessageUpdateEvent.channel","location":"core/dev.kord.core.event.message/-message-update-event/channel.html","searchKeys":["channel","val channel: MessageChannelBehavior","dev.kord.core.event.message.MessageUpdateEvent.channel"]},{"name":"val channel: MessageChannelBehavior","description":"dev.kord.core.event.message.ReactionAddEvent.channel","location":"core/dev.kord.core.event.message/-reaction-add-event/channel.html","searchKeys":["channel","val channel: MessageChannelBehavior","dev.kord.core.event.message.ReactionAddEvent.channel"]},{"name":"val channel: MessageChannelBehavior","description":"dev.kord.core.event.message.ReactionRemoveAllEvent.channel","location":"core/dev.kord.core.event.message/-reaction-remove-all-event/channel.html","searchKeys":["channel","val channel: MessageChannelBehavior","dev.kord.core.event.message.ReactionRemoveAllEvent.channel"]},{"name":"val channel: MessageChannelBehavior","description":"dev.kord.core.event.message.ReactionRemoveEvent.channel","location":"core/dev.kord.core.event.message/-reaction-remove-event/channel.html","searchKeys":["channel","val channel: MessageChannelBehavior","dev.kord.core.event.message.ReactionRemoveEvent.channel"]},{"name":"val channel: TopGuildChannelBehavior","description":"dev.kord.core.entity.PermissionOverwriteEntity.channel","location":"core/dev.kord.core.entity/-permission-overwrite-entity/channel.html","searchKeys":["channel","val channel: TopGuildChannelBehavior","dev.kord.core.entity.PermissionOverwriteEntity.channel"]},{"name":"val channel: TopGuildMessageChannelBehavior","description":"dev.kord.core.event.guild.WebhookUpdateEvent.channel","location":"core/dev.kord.core.event.guild/-webhook-update-event/channel.html","searchKeys":["channel","val channel: TopGuildMessageChannelBehavior","dev.kord.core.event.guild.WebhookUpdateEvent.channel"]},{"name":"val channelBehaviors: List<ThreadParentChannelBehavior>","description":"dev.kord.core.event.channel.thread.ThreadListSyncEvent.channelBehaviors","location":"core/dev.kord.core.event.channel.thread/-thread-list-sync-event/channel-behaviors.html","searchKeys":["channelBehaviors","val channelBehaviors: List<ThreadParentChannelBehavior>","dev.kord.core.event.channel.thread.ThreadListSyncEvent.channelBehaviors"]},{"name":"val channelBehaviors: Set<TopGuildChannelBehavior>","description":"dev.kord.core.entity.Guild.channelBehaviors","location":"core/dev.kord.core.entity/-guild/channel-behaviors.html","searchKeys":["channelBehaviors","val channelBehaviors: Set<TopGuildChannelBehavior>","dev.kord.core.entity.Guild.channelBehaviors"]},{"name":"val channelId: OptionalSnowflake","description":"dev.kord.core.cache.data.AutoModerationActionMetadataData.channelId","location":"core/dev.kord.core.cache.data/-auto-moderation-action-metadata-data/channel-id.html","searchKeys":["channelId","val channelId: OptionalSnowflake","dev.kord.core.cache.data.AutoModerationActionMetadataData.channelId"]},{"name":"val channelId: OptionalSnowflake","description":"dev.kord.core.cache.data.MessageReferenceData.channelId","location":"core/dev.kord.core.cache.data/-message-reference-data/channel-id.html","searchKeys":["channelId","val channelId: OptionalSnowflake","dev.kord.core.cache.data.MessageReferenceData.channelId"]},{"name":"val channelId: OptionalSnowflake","description":"dev.kord.core.event.automoderation.data.AutoModerationActionExecutionEventData.channelId","location":"core/dev.kord.core.event.automoderation.data/-auto-moderation-action-execution-event-data/channel-id.html","searchKeys":["channelId","val channelId: OptionalSnowflake","dev.kord.core.event.automoderation.data.AutoModerationActionExecutionEventData.channelId"]},{"name":"val channelId: Snowflake","description":"dev.kord.core.cache.data.InteractionData.channelId","location":"core/dev.kord.core.cache.data/-interaction-data/channel-id.html","searchKeys":["channelId","val channelId: Snowflake","dev.kord.core.cache.data.InteractionData.channelId"]},{"name":"val channelId: Snowflake","description":"dev.kord.core.cache.data.InviteCreateData.channelId","location":"core/dev.kord.core.cache.data/-invite-create-data/channel-id.html","searchKeys":["channelId","val channelId: Snowflake","dev.kord.core.cache.data.InviteCreateData.channelId"]},{"name":"val channelId: Snowflake","description":"dev.kord.core.cache.data.InviteDeleteData.channelId","location":"core/dev.kord.core.cache.data/-invite-delete-data/channel-id.html","searchKeys":["channelId","val channelId: Snowflake","dev.kord.core.cache.data.InviteDeleteData.channelId"]},{"name":"val channelId: Snowflake","description":"dev.kord.core.cache.data.MessageData.channelId","location":"core/dev.kord.core.cache.data/-message-data/channel-id.html","searchKeys":["channelId","val channelId: Snowflake","dev.kord.core.cache.data.MessageData.channelId"]},{"name":"val channelId: Snowflake","description":"dev.kord.core.cache.data.ReactionRemoveEmojiData.channelId","location":"core/dev.kord.core.cache.data/-reaction-remove-emoji-data/channel-id.html","searchKeys":["channelId","val channelId: Snowflake","dev.kord.core.cache.data.ReactionRemoveEmojiData.channelId"]},{"name":"val channelId: Snowflake","description":"dev.kord.core.cache.data.StageInstanceData.channelId","location":"core/dev.kord.core.cache.data/-stage-instance-data/channel-id.html","searchKeys":["channelId","val channelId: Snowflake","dev.kord.core.cache.data.StageInstanceData.channelId"]},{"name":"val channelId: Snowflake","description":"dev.kord.core.cache.data.WebhookData.channelId","location":"core/dev.kord.core.cache.data/-webhook-data/channel-id.html","searchKeys":["channelId","val channelId: Snowflake","dev.kord.core.cache.data.WebhookData.channelId"]},{"name":"val channelId: Snowflake","description":"dev.kord.core.cache.data.WelcomeScreenChannelData.channelId","location":"core/dev.kord.core.cache.data/-welcome-screen-channel-data/channel-id.html","searchKeys":["channelId","val channelId: Snowflake","dev.kord.core.cache.data.WelcomeScreenChannelData.channelId"]},{"name":"val channelId: Snowflake","description":"dev.kord.core.entity.PermissionOverwriteEntity.channelId","location":"core/dev.kord.core.entity/-permission-overwrite-entity/channel-id.html","searchKeys":["channelId","val channelId: Snowflake","dev.kord.core.entity.PermissionOverwriteEntity.channelId"]},{"name":"val channelId: Snowflake","description":"dev.kord.core.entity.Webhook.channelId","location":"core/dev.kord.core.entity/-webhook/channel-id.html","searchKeys":["channelId","val channelId: Snowflake","dev.kord.core.entity.Webhook.channelId"]},{"name":"val channelId: Snowflake","description":"dev.kord.core.entity.automoderation.SendAlertMessageAutoModerationAction.channelId","location":"core/dev.kord.core.entity.automoderation/-send-alert-message-auto-moderation-action/channel-id.html","searchKeys":["channelId","val channelId: Snowflake","dev.kord.core.entity.automoderation.SendAlertMessageAutoModerationAction.channelId"]},{"name":"val channelId: Snowflake","description":"dev.kord.core.event.channel.ChannelPinsUpdateEvent.channelId","location":"core/dev.kord.core.event.channel/-channel-pins-update-event/channel-id.html","searchKeys":["channelId","val channelId: Snowflake","dev.kord.core.event.channel.ChannelPinsUpdateEvent.channelId"]},{"name":"val channelId: Snowflake","description":"dev.kord.core.event.channel.TypingStartEvent.channelId","location":"core/dev.kord.core.event.channel/-typing-start-event/channel-id.html","searchKeys":["channelId","val channelId: Snowflake","dev.kord.core.event.channel.TypingStartEvent.channelId"]},{"name":"val channelId: Snowflake","description":"dev.kord.core.event.channel.data.ChannelPinsUpdateEventData.channelId","location":"core/dev.kord.core.event.channel.data/-channel-pins-update-event-data/channel-id.html","searchKeys":["channelId","val channelId: Snowflake","dev.kord.core.event.channel.data.ChannelPinsUpdateEventData.channelId"]},{"name":"val channelId: Snowflake","description":"dev.kord.core.event.channel.data.TypingStartEventData.channelId","location":"core/dev.kord.core.event.channel.data/-typing-start-event-data/channel-id.html","searchKeys":["channelId","val channelId: Snowflake","dev.kord.core.event.channel.data.TypingStartEventData.channelId"]},{"name":"val channelId: Snowflake","description":"dev.kord.core.event.guild.InviteCreateEvent.channelId","location":"core/dev.kord.core.event.guild/-invite-create-event/channel-id.html","searchKeys":["channelId","val channelId: Snowflake","dev.kord.core.event.guild.InviteCreateEvent.channelId"]},{"name":"val channelId: Snowflake","description":"dev.kord.core.event.guild.InviteDeleteEvent.channelId","location":"core/dev.kord.core.event.guild/-invite-delete-event/channel-id.html","searchKeys":["channelId","val channelId: Snowflake","dev.kord.core.event.guild.InviteDeleteEvent.channelId"]},{"name":"val channelId: Snowflake","description":"dev.kord.core.event.guild.WebhookUpdateEvent.channelId","location":"core/dev.kord.core.event.guild/-webhook-update-event/channel-id.html","searchKeys":["channelId","val channelId: Snowflake","dev.kord.core.event.guild.WebhookUpdateEvent.channelId"]},{"name":"val channelId: Snowflake","description":"dev.kord.core.event.message.MessageBulkDeleteEvent.channelId","location":"core/dev.kord.core.event.message/-message-bulk-delete-event/channel-id.html","searchKeys":["channelId","val channelId: Snowflake","dev.kord.core.event.message.MessageBulkDeleteEvent.channelId"]},{"name":"val channelId: Snowflake","description":"dev.kord.core.event.message.MessageDeleteEvent.channelId","location":"core/dev.kord.core.event.message/-message-delete-event/channel-id.html","searchKeys":["channelId","val channelId: Snowflake","dev.kord.core.event.message.MessageDeleteEvent.channelId"]},{"name":"val channelId: Snowflake","description":"dev.kord.core.event.message.MessageUpdateEvent.channelId","location":"core/dev.kord.core.event.message/-message-update-event/channel-id.html","searchKeys":["channelId","val channelId: Snowflake","dev.kord.core.event.message.MessageUpdateEvent.channelId"]},{"name":"val channelId: Snowflake","description":"dev.kord.core.event.message.ReactionAddEvent.channelId","location":"core/dev.kord.core.event.message/-reaction-add-event/channel-id.html","searchKeys":["channelId","val channelId: Snowflake","dev.kord.core.event.message.ReactionAddEvent.channelId"]},{"name":"val channelId: Snowflake","description":"dev.kord.core.event.message.ReactionRemoveAllEvent.channelId","location":"core/dev.kord.core.event.message/-reaction-remove-all-event/channel-id.html","searchKeys":["channelId","val channelId: Snowflake","dev.kord.core.event.message.ReactionRemoveAllEvent.channelId"]},{"name":"val channelId: Snowflake","description":"dev.kord.core.event.message.ReactionRemoveEmojiEvent.channelId","location":"core/dev.kord.core.event.message/-reaction-remove-emoji-event/channel-id.html","searchKeys":["channelId","val channelId: Snowflake","dev.kord.core.event.message.ReactionRemoveEmojiEvent.channelId"]},{"name":"val channelId: Snowflake","description":"dev.kord.core.event.message.ReactionRemoveEvent.channelId","location":"core/dev.kord.core.event.message/-reaction-remove-event/channel-id.html","searchKeys":["channelId","val channelId: Snowflake","dev.kord.core.event.message.ReactionRemoveEvent.channelId"]},{"name":"val channelId: Snowflake?","description":"dev.kord.core.cache.data.GuildScheduledEventData.channelId","location":"core/dev.kord.core.cache.data/-guild-scheduled-event-data/channel-id.html","searchKeys":["channelId","val channelId: Snowflake?","dev.kord.core.cache.data.GuildScheduledEventData.channelId"]},{"name":"val channelId: Snowflake?","description":"dev.kord.core.cache.data.GuildWidgetData.channelId","location":"core/dev.kord.core.cache.data/-guild-widget-data/channel-id.html","searchKeys":["channelId","val channelId: Snowflake?","dev.kord.core.cache.data.GuildWidgetData.channelId"]},{"name":"val channelId: Snowflake?","description":"dev.kord.core.cache.data.VoiceStateData.channelId","location":"core/dev.kord.core.cache.data/-voice-state-data/channel-id.html","searchKeys":["channelId","val channelId: Snowflake?","dev.kord.core.cache.data.VoiceStateData.channelId"]},{"name":"val channelId: Snowflake?","description":"dev.kord.core.entity.GuildScheduledEvent.channelId","location":"core/dev.kord.core.entity/-guild-scheduled-event/channel-id.html","searchKeys":["channelId","val channelId: Snowflake?","dev.kord.core.entity.GuildScheduledEvent.channelId"]},{"name":"val channelId: Snowflake?","description":"dev.kord.core.entity.GuildWidget.channelId","location":"core/dev.kord.core.entity/-guild-widget/channel-id.html","searchKeys":["channelId","val channelId: Snowflake?","dev.kord.core.entity.GuildWidget.channelId"]},{"name":"val channelId: Snowflake?","description":"dev.kord.core.entity.Invite.channelId","location":"core/dev.kord.core.entity/-invite/channel-id.html","searchKeys":["channelId","val channelId: Snowflake?","dev.kord.core.entity.Invite.channelId"]},{"name":"val channelId: Snowflake?","description":"dev.kord.core.entity.VoiceState.channelId","location":"core/dev.kord.core.entity/-voice-state/channel-id.html","searchKeys":["channelId","val channelId: Snowflake?","dev.kord.core.entity.VoiceState.channelId"]},{"name":"val channelId: Snowflake?","description":"dev.kord.core.event.automoderation.AutoModerationActionExecutionEvent.channelId","location":"core/dev.kord.core.event.automoderation/-auto-moderation-action-execution-event/channel-id.html","searchKeys":["channelId","val channelId: Snowflake?","dev.kord.core.event.automoderation.AutoModerationActionExecutionEvent.channelId"]},{"name":"val channelIds: List<Snowflake>","description":"dev.kord.core.event.channel.thread.ThreadListSyncEvent.channelIds","location":"core/dev.kord.core.event.channel.thread/-thread-list-sync-event/channel-ids.html","searchKeys":["channelIds","val channelIds: List<Snowflake>","dev.kord.core.event.channel.thread.ThreadListSyncEvent.channelIds"]},{"name":"val channelIds: Optional<List<Snowflake>>","description":"dev.kord.core.cache.data.ThreadListSyncData.channelIds","location":"core/dev.kord.core.cache.data/-thread-list-sync-data/channel-ids.html","searchKeys":["channelIds","val channelIds: Optional<List<Snowflake>>","dev.kord.core.cache.data.ThreadListSyncData.channelIds"]},{"name":"val channelIds: Set<Snowflake>","description":"dev.kord.core.entity.Guild.channelIds","location":"core/dev.kord.core.entity/-guild/channel-ids.html","searchKeys":["channelIds","val channelIds: Set<Snowflake>","dev.kord.core.entity.Guild.channelIds"]},{"name":"val channelTypes: List<ChannelType>","description":"dev.kord.core.entity.application.ApplicationCommandParameter.channelTypes","location":"core/dev.kord.core.entity.application/-application-command-parameter/channel-types.html","searchKeys":["channelTypes","val channelTypes: List<ChannelType>","dev.kord.core.entity.application.ApplicationCommandParameter.channelTypes"]},{"name":"val channelTypes: Optional<List<ChannelType>>","description":"dev.kord.core.cache.data.ApplicationCommandOptionData.channelTypes","location":"core/dev.kord.core.cache.data/-application-command-option-data/channel-types.html","searchKeys":["channelTypes","val channelTypes: Optional<List<ChannelType>>","dev.kord.core.cache.data.ApplicationCommandOptionData.channelTypes"]},{"name":"val channelTypes: Optional<List<ChannelType>>","description":"dev.kord.core.cache.data.ApplicationCommandParameterData.channelTypes","location":"core/dev.kord.core.cache.data/-application-command-parameter-data/channel-types.html","searchKeys":["channelTypes","val channelTypes: Optional<List<ChannelType>>","dev.kord.core.cache.data.ApplicationCommandParameterData.channelTypes"]},{"name":"val channels: Flow<Channel>","description":"dev.kord.core.supplier.CacheEntitySupplier.channels","location":"core/dev.kord.core.supplier/-cache-entity-supplier/channels.html","searchKeys":["channels","val channels: Flow<Channel>","dev.kord.core.supplier.CacheEntitySupplier.channels"]},{"name":"val channels: Map<Snowflake, ResolvedChannel>?","description":"dev.kord.core.entity.interaction.ResolvedObjects.channels","location":"core/dev.kord.core.entity.interaction/-resolved-objects/channels.html","searchKeys":["channels","val channels: Map<Snowflake, ResolvedChannel>?","dev.kord.core.entity.interaction.ResolvedObjects.channels"]},{"name":"val channels: Optional<List<Snowflake>>","description":"dev.kord.core.cache.data.GuildData.channels","location":"core/dev.kord.core.cache.data/-guild-data/channels.html","searchKeys":["channels","val channels: Optional<List<Snowflake>>","dev.kord.core.cache.data.GuildData.channels"]},{"name":"val channels: Optional<Map<Snowflake, ChannelData>>","description":"dev.kord.core.cache.data.ResolvedObjectsData.channels","location":"core/dev.kord.core.cache.data/-resolved-objects-data/channels.html","searchKeys":["channels","val channels: Optional<Map<Snowflake, ChannelData>>","dev.kord.core.cache.data.ResolvedObjectsData.channels"]},{"name":"val choices: Map<String, String>","description":"dev.kord.core.entity.application.ApplicationCommandParameter.choices","location":"core/dev.kord.core.entity.application/-application-command-parameter/choices.html","searchKeys":["choices","val choices: Map<String, String>","dev.kord.core.entity.application.ApplicationCommandParameter.choices"]},{"name":"val choices: Optional<List<ApplicationCommandOptionChoiceData>>","description":"dev.kord.core.cache.data.ApplicationCommandOptionData.choices","location":"core/dev.kord.core.cache.data/-application-command-option-data/choices.html","searchKeys":["choices","val choices: Optional<List<ApplicationCommandOptionChoiceData>>","dev.kord.core.cache.data.ApplicationCommandOptionData.choices"]},{"name":"val choices: Optional<List<ApplicationCommandOptionChoiceData>>","description":"dev.kord.core.cache.data.ApplicationCommandParameterData.choices","location":"core/dev.kord.core.cache.data/-application-command-parameter-data/choices.html","searchKeys":["choices","val choices: Optional<List<ApplicationCommandOptionChoiceData>>","dev.kord.core.cache.data.ApplicationCommandParameterData.choices"]},{"name":"val chunkCount: Int","description":"dev.kord.core.cache.data.MembersChunkData.chunkCount","location":"core/dev.kord.core.cache.data/-members-chunk-data/chunk-count.html","searchKeys":["chunkCount","val chunkCount: Int","dev.kord.core.cache.data.MembersChunkData.chunkCount"]},{"name":"val chunkCount: Int","description":"dev.kord.core.event.guild.MembersChunkEvent.chunkCount","location":"core/dev.kord.core.event.guild/-members-chunk-event/chunk-count.html","searchKeys":["chunkCount","val chunkCount: Int","dev.kord.core.event.guild.MembersChunkEvent.chunkCount"]},{"name":"val chunkIndex: Int","description":"dev.kord.core.cache.data.MembersChunkData.chunkIndex","location":"core/dev.kord.core.cache.data/-members-chunk-data/chunk-index.html","searchKeys":["chunkIndex","val chunkIndex: Int","dev.kord.core.cache.data.MembersChunkData.chunkIndex"]},{"name":"val chunkIndex: Int","description":"dev.kord.core.event.guild.MembersChunkEvent.chunkIndex","location":"core/dev.kord.core.event.guild/-members-chunk-event/chunk-index.html","searchKeys":["chunkIndex","val chunkIndex: Int","dev.kord.core.event.guild.MembersChunkEvent.chunkIndex"]},{"name":"val clientStatus: ClientStatus","description":"dev.kord.core.entity.Presence.clientStatus","location":"core/dev.kord.core.entity/-presence/client-status.html","searchKeys":["clientStatus","val clientStatus: ClientStatus","dev.kord.core.entity.Presence.clientStatus"]},{"name":"val clientStatus: ClientStatusData","description":"dev.kord.core.cache.data.PresenceData.clientStatus","location":"core/dev.kord.core.cache.data/-presence-data/client-status.html","searchKeys":["clientStatus","val clientStatus: ClientStatusData","dev.kord.core.cache.data.PresenceData.clientStatus"]},{"name":"val closeCode: GatewayCloseCode","description":"dev.kord.core.event.gateway.DisconnectEvent.DiscordCloseEvent.closeCode","location":"core/dev.kord.core.event.gateway/-disconnect-event/-discord-close-event/close-code.html","searchKeys":["closeCode","val closeCode: GatewayCloseCode","dev.kord.core.event.gateway.DisconnectEvent.DiscordCloseEvent.closeCode"]},{"name":"val code: String","description":"dev.kord.core.cache.data.InviteCreateData.code","location":"core/dev.kord.core.cache.data/-invite-create-data/code.html","searchKeys":["code","val code: String","dev.kord.core.cache.data.InviteCreateData.code"]},{"name":"val code: String","description":"dev.kord.core.cache.data.InviteDeleteData.code","location":"core/dev.kord.core.cache.data/-invite-delete-data/code.html","searchKeys":["code","val code: String","dev.kord.core.cache.data.InviteDeleteData.code"]},{"name":"val code: String","description":"dev.kord.core.cache.data.TemplateData.code","location":"core/dev.kord.core.cache.data/-template-data/code.html","searchKeys":["code","val code: String","dev.kord.core.cache.data.TemplateData.code"]},{"name":"val code: String","description":"dev.kord.core.entity.Invite.code","location":"core/dev.kord.core.entity/-invite/code.html","searchKeys":["code","val code: String","dev.kord.core.entity.Invite.code"]},{"name":"val code: String","description":"dev.kord.core.event.guild.InviteCreateEvent.code","location":"core/dev.kord.core.event.guild/-invite-create-event/code.html","searchKeys":["code","val code: String","dev.kord.core.event.guild.InviteCreateEvent.code"]},{"name":"val code: String","description":"dev.kord.core.event.guild.InviteDeleteEvent.code","location":"core/dev.kord.core.event.guild/-invite-delete-event/code.html","searchKeys":["code","val code: String","dev.kord.core.event.guild.InviteDeleteEvent.code"]},{"name":"val color: Color","description":"dev.kord.core.entity.Role.color","location":"core/dev.kord.core.entity/-role/color.html","searchKeys":["color","val color: Color","dev.kord.core.entity.Role.color"]},{"name":"val color: Color?","description":"dev.kord.core.entity.Embed.color","location":"core/dev.kord.core.entity/-embed/color.html","searchKeys":["color","val color: Color?","dev.kord.core.entity.Embed.color"]},{"name":"val color: Int","description":"dev.kord.core.cache.data.RoleData.color","location":"core/dev.kord.core.cache.data/-role-data/color.html","searchKeys":["color","val color: Int","dev.kord.core.cache.data.RoleData.color"]},{"name":"val color: OptionalInt","description":"dev.kord.core.cache.data.EmbedData.color","location":"core/dev.kord.core.cache.data/-embed-data/color.html","searchKeys":["color","val color: OptionalInt","dev.kord.core.cache.data.EmbedData.color"]},{"name":"val communicationDisabledUntil: Instant?","description":"dev.kord.core.entity.Member.communicationDisabledUntil","location":"core/dev.kord.core.entity/-member/communication-disabled-until.html","searchKeys":["communicationDisabledUntil","val communicationDisabledUntil: Instant?","dev.kord.core.entity.Member.communicationDisabledUntil"]},{"name":"val communicationDisabledUntil: Optional<Instant?>","description":"dev.kord.core.cache.data.MemberData.communicationDisabledUntil","location":"core/dev.kord.core.cache.data/-member-data/communication-disabled-until.html","searchKeys":["communicationDisabledUntil","val communicationDisabledUntil: Optional<Instant?>","dev.kord.core.cache.data.MemberData.communicationDisabledUntil"]},{"name":"val comparator: Comparator<Entity>","description":"dev.kord.core.entity.Entity.Companion.comparator","location":"core/dev.kord.core.entity/-entity/-companion/comparator.html","searchKeys":["comparator","val comparator: Comparator<Entity>","dev.kord.core.entity.Entity.Companion.comparator"]},{"name":"val componentType: Optional<ComponentType>","description":"dev.kord.core.cache.data.ApplicationInteractionData.componentType","location":"core/dev.kord.core.cache.data/-application-interaction-data/component-type.html","searchKeys":["componentType","val componentType: Optional<ComponentType>","dev.kord.core.cache.data.ApplicationInteractionData.componentType"]},{"name":"val components: List<Component>","description":"dev.kord.core.entity.component.ActionRowComponent.components","location":"core/dev.kord.core.entity.component/-action-row-component/components.html","searchKeys":["components","val components: List<Component>","dev.kord.core.entity.component.ActionRowComponent.components"]},{"name":"val components: Optional<List<ComponentData>>","description":"dev.kord.core.cache.data.ApplicationInteractionData.components","location":"core/dev.kord.core.cache.data/-application-interaction-data/components.html","searchKeys":["components","val components: Optional<List<ComponentData>>","dev.kord.core.cache.data.ApplicationInteractionData.components"]},{"name":"val components: Optional<List<ComponentData>>","description":"dev.kord.core.cache.data.MessageData.components","location":"core/dev.kord.core.cache.data/-message-data/components.html","searchKeys":["components","val components: Optional<List<ComponentData>>","dev.kord.core.cache.data.MessageData.components"]},{"name":"val content: String","description":"dev.kord.core.cache.data.MessageData.content","location":"core/dev.kord.core.cache.data/-message-data/content.html","searchKeys":["content","val content: String","dev.kord.core.cache.data.MessageData.content"]},{"name":"val content: String","description":"dev.kord.core.entity.Message.content","location":"core/dev.kord.core.entity/-message/content.html","searchKeys":["content","val content: String","dev.kord.core.entity.Message.content"]},{"name":"val content: String","description":"dev.kord.core.event.automoderation.AutoModerationActionExecutionEvent.content","location":"core/dev.kord.core.event.automoderation/-auto-moderation-action-execution-event/content.html","searchKeys":["content","val content: String","dev.kord.core.event.automoderation.AutoModerationActionExecutionEvent.content"]},{"name":"val content: String","description":"dev.kord.core.event.automoderation.data.AutoModerationActionExecutionEventData.content","location":"core/dev.kord.core.event.automoderation.data/-auto-moderation-action-execution-event-data/content.html","searchKeys":["content","val content: String","dev.kord.core.event.automoderation.data.AutoModerationActionExecutionEventData.content"]},{"name":"val contentFilter: ExplicitContentFilter","description":"dev.kord.core.entity.Guild.contentFilter","location":"core/dev.kord.core.entity/-guild/content-filter.html","searchKeys":["contentFilter","val contentFilter: ExplicitContentFilter","dev.kord.core.entity.Guild.contentFilter"]},{"name":"val contentType: Optional<String>","description":"dev.kord.core.cache.data.AttachmentData.contentType","location":"core/dev.kord.core.cache.data/-attachment-data/content-type.html","searchKeys":["contentType","val contentType: Optional<String>","dev.kord.core.cache.data.AttachmentData.contentType"]},{"name":"val contentType: String?","description":"dev.kord.core.entity.Attachment.contentType","location":"core/dev.kord.core.entity/-attachment/content-type.html","searchKeys":["contentType","val contentType: String?","dev.kord.core.entity.Attachment.contentType"]},{"name":"val count: Int","description":"dev.kord.core.cache.data.ReactionData.count","location":"core/dev.kord.core.cache.data/-reaction-data/count.html","searchKeys":["count","val count: Int","dev.kord.core.cache.data.ReactionData.count"]},{"name":"val count: Int","description":"dev.kord.core.entity.Reaction.count","location":"core/dev.kord.core.entity/-reaction/count.html","searchKeys":["count","val count: Int","dev.kord.core.entity.Reaction.count"]},{"name":"val coverImageHash: String?","description":"dev.kord.core.entity.BaseApplication.coverImageHash","location":"core/dev.kord.core.entity/-base-application/cover-image-hash.html","searchKeys":["coverImageHash","val coverImageHash: String?","dev.kord.core.entity.BaseApplication.coverImageHash"]},{"name":"val coverStickerId: OptionalSnowflake","description":"dev.kord.core.cache.data.StickerPackData.coverStickerId","location":"core/dev.kord.core.cache.data/-sticker-pack-data/cover-sticker-id.html","searchKeys":["coverStickerId","val coverStickerId: OptionalSnowflake","dev.kord.core.cache.data.StickerPackData.coverStickerId"]},{"name":"val coverStickerId: Snowflake?","description":"dev.kord.core.entity.StickerPack.coverStickerId","location":"core/dev.kord.core.entity/-sticker-pack/cover-sticker-id.html","searchKeys":["coverStickerId","val coverStickerId: Snowflake?","dev.kord.core.entity.StickerPack.coverStickerId"]},{"name":"val createTimestamp: Optional<Instant?>","description":"dev.kord.core.cache.data.ThreadMetadataData.createTimestamp","location":"core/dev.kord.core.cache.data/-thread-metadata-data/create-timestamp.html","searchKeys":["createTimestamp","val createTimestamp: Optional<Instant?>","dev.kord.core.cache.data.ThreadMetadataData.createTimestamp"]},{"name":"val createdAt: Instant","description":"dev.kord.core.cache.data.ActivityData.createdAt","location":"core/dev.kord.core.cache.data/-activity-data/created-at.html","searchKeys":["createdAt","val createdAt: Instant","dev.kord.core.cache.data.ActivityData.createdAt"]},{"name":"val createdAt: Instant","description":"dev.kord.core.cache.data.InviteCreateData.createdAt","location":"core/dev.kord.core.cache.data/-invite-create-data/created-at.html","searchKeys":["createdAt","val createdAt: Instant","dev.kord.core.cache.data.InviteCreateData.createdAt"]},{"name":"val createdAt: Instant","description":"dev.kord.core.cache.data.InviteWithMetadataData.createdAt","location":"core/dev.kord.core.cache.data/-invite-with-metadata-data/created-at.html","searchKeys":["createdAt","val createdAt: Instant","dev.kord.core.cache.data.InviteWithMetadataData.createdAt"]},{"name":"val createdAt: Instant","description":"dev.kord.core.cache.data.TemplateData.createdAt","location":"core/dev.kord.core.cache.data/-template-data/created-at.html","searchKeys":["createdAt","val createdAt: Instant","dev.kord.core.cache.data.TemplateData.createdAt"]},{"name":"val createdAt: Instant","description":"dev.kord.core.entity.InviteWithMetadata.createdAt","location":"core/dev.kord.core.entity/-invite-with-metadata/created-at.html","searchKeys":["createdAt","val createdAt: Instant","dev.kord.core.entity.InviteWithMetadata.createdAt"]},{"name":"val createdAt: Instant","description":"dev.kord.core.entity.Template.createdAt","location":"core/dev.kord.core.entity/-template/created-at.html","searchKeys":["createdAt","val createdAt: Instant","dev.kord.core.entity.Template.createdAt"]},{"name":"val createdAt: Instant","description":"dev.kord.core.event.guild.InviteCreateEvent.createdAt","location":"core/dev.kord.core.event.guild/-invite-create-event/created-at.html","searchKeys":["createdAt","val createdAt: Instant","dev.kord.core.event.guild.InviteCreateEvent.createdAt"]},{"name":"val creator: MemberBehavior","description":"dev.kord.core.entity.automoderation.AutoModerationRule.creator","location":"core/dev.kord.core.entity.automoderation/-auto-moderation-rule/creator.html","searchKeys":["creator","val creator: MemberBehavior","dev.kord.core.entity.automoderation.AutoModerationRule.creator"]},{"name":"val creator: Optional<UserData>","description":"dev.kord.core.cache.data.GuildScheduledEventData.creator","location":"core/dev.kord.core.cache.data/-guild-scheduled-event-data/creator.html","searchKeys":["creator","val creator: Optional<UserData>","dev.kord.core.cache.data.GuildScheduledEventData.creator"]},{"name":"val creator: User","description":"dev.kord.core.entity.Template.creator","location":"core/dev.kord.core.entity/-template/creator.html","searchKeys":["creator","val creator: User","dev.kord.core.entity.Template.creator"]},{"name":"val creator: User?","description":"dev.kord.core.entity.GuildScheduledEvent.creator","location":"core/dev.kord.core.entity/-guild-scheduled-event/creator.html","searchKeys":["creator","val creator: User?","dev.kord.core.entity.GuildScheduledEvent.creator"]},{"name":"val creator: UserData","description":"dev.kord.core.cache.data.TemplateData.creator","location":"core/dev.kord.core.cache.data/-template-data/creator.html","searchKeys":["creator","val creator: UserData","dev.kord.core.cache.data.TemplateData.creator"]},{"name":"val creatorId: OptionalSnowflake?","description":"dev.kord.core.cache.data.GuildScheduledEventData.creatorId","location":"core/dev.kord.core.cache.data/-guild-scheduled-event-data/creator-id.html","searchKeys":["creatorId","val creatorId: OptionalSnowflake?","dev.kord.core.cache.data.GuildScheduledEventData.creatorId"]},{"name":"val creatorId: Snowflake","description":"dev.kord.core.cache.data.AutoModerationRuleData.creatorId","location":"core/dev.kord.core.cache.data/-auto-moderation-rule-data/creator-id.html","searchKeys":["creatorId","val creatorId: Snowflake","dev.kord.core.cache.data.AutoModerationRuleData.creatorId"]},{"name":"val creatorId: Snowflake","description":"dev.kord.core.cache.data.TemplateData.creatorId","location":"core/dev.kord.core.cache.data/-template-data/creator-id.html","searchKeys":["creatorId","val creatorId: Snowflake","dev.kord.core.cache.data.TemplateData.creatorId"]},{"name":"val creatorId: Snowflake","description":"dev.kord.core.entity.Template.creatorId","location":"core/dev.kord.core.entity/-template/creator-id.html","searchKeys":["creatorId","val creatorId: Snowflake","dev.kord.core.entity.Template.creatorId"]},{"name":"val creatorId: Snowflake","description":"dev.kord.core.entity.automoderation.AutoModerationRule.creatorId","location":"core/dev.kord.core.entity.automoderation/-auto-moderation-rule/creator-id.html","searchKeys":["creatorId","val creatorId: Snowflake","dev.kord.core.entity.automoderation.AutoModerationRule.creatorId"]},{"name":"val creatorId: Snowflake?","description":"dev.kord.core.entity.GuildScheduledEvent.creatorId","location":"core/dev.kord.core.entity/-guild-scheduled-event/creator-id.html","searchKeys":["creatorId","val creatorId: Snowflake?","dev.kord.core.entity.GuildScheduledEvent.creatorId"]},{"name":"val creatorId: Snowflake?","description":"dev.kord.core.entity.Webhook.creatorId","location":"core/dev.kord.core.entity/-webhook/creator-id.html","searchKeys":["creatorId","val creatorId: Snowflake?","dev.kord.core.entity.Webhook.creatorId"]},{"name":"val currentSize: Int?","description":"dev.kord.core.entity.Activity.Party.currentSize","location":"core/dev.kord.core.entity/-activity/-party/current-size.html","searchKeys":["currentSize","val currentSize: Int?","dev.kord.core.entity.Activity.Party.currentSize"]},{"name":"val custom: Boolean","description":"dev.kord.core.cache.data.RegionData.custom","location":"core/dev.kord.core.cache.data/-region-data/custom.html","searchKeys":["custom","val custom: Boolean","dev.kord.core.cache.data.RegionData.custom"]},{"name":"val customId: Optional<String>","description":"dev.kord.core.cache.data.ApplicationInteractionData.customId","location":"core/dev.kord.core.cache.data/-application-interaction-data/custom-id.html","searchKeys":["customId","val customId: Optional<String>","dev.kord.core.cache.data.ApplicationInteractionData.customId"]},{"name":"val customId: String","description":"dev.kord.core.entity.component.SelectMenuComponent.customId","location":"core/dev.kord.core.entity.component/-select-menu-component/custom-id.html","searchKeys":["customId","val customId: String","dev.kord.core.entity.component.SelectMenuComponent.customId"]},{"name":"val customId: String","description":"dev.kord.core.entity.component.TextInputComponent.customId","location":"core/dev.kord.core.entity.component/-text-input-component/custom-id.html","searchKeys":["customId","val customId: String","dev.kord.core.entity.component.TextInputComponent.customId"]},{"name":"val customId: String?","description":"dev.kord.core.entity.component.ButtonComponent.customId","location":"core/dev.kord.core.entity.component/-button-component/custom-id.html","searchKeys":["customId","val customId: String?","dev.kord.core.entity.component.ButtonComponent.customId"]},{"name":"val customInstallUrl: String?","description":"dev.kord.core.entity.BaseApplication.customInstallUrl","location":"core/dev.kord.core.entity/-base-application/custom-install-url.html","searchKeys":["customInstallUrl","val customInstallUrl: String?","dev.kord.core.entity.BaseApplication.customInstallUrl"]},{"name":"val data: ActivityData","description":"dev.kord.core.entity.Activity.data","location":"core/dev.kord.core.entity/-activity/data.html","searchKeys":["data","val data: ActivityData","dev.kord.core.entity.Activity.data"]},{"name":"val data: ApplicationCommandGroupData","description":"dev.kord.core.entity.application.ChatInputGroup.data","location":"core/dev.kord.core.entity.application/-chat-input-group/data.html","searchKeys":["data","val data: ApplicationCommandGroupData","dev.kord.core.entity.application.ChatInputGroup.data"]},{"name":"val data: ApplicationCommandParameterData","description":"dev.kord.core.entity.application.ApplicationCommandParameter.data","location":"core/dev.kord.core.entity.application/-application-command-parameter/data.html","searchKeys":["data","val data: ApplicationCommandParameterData","dev.kord.core.entity.application.ApplicationCommandParameter.data"]},{"name":"val data: ApplicationCommandSubcommandData","description":"dev.kord.core.entity.application.ChatInputSubCommand.data","location":"core/dev.kord.core.entity.application/-chat-input-sub-command/data.html","searchKeys":["data","val data: ApplicationCommandSubcommandData","dev.kord.core.entity.application.ChatInputSubCommand.data"]},{"name":"val data: ApplicationInteractionData","description":"dev.kord.core.cache.data.InteractionData.data","location":"core/dev.kord.core.cache.data/-interaction-data/data.html","searchKeys":["data","val data: ApplicationInteractionData","dev.kord.core.cache.data.InteractionData.data"]},{"name":"val data: AttachmentData","description":"dev.kord.core.entity.Attachment.data","location":"core/dev.kord.core.entity/-attachment/data.html","searchKeys":["data","val data: AttachmentData","dev.kord.core.entity.Attachment.data"]},{"name":"val data: AutoModerationActionData","description":"dev.kord.core.entity.automoderation.AutoModerationAction.data","location":"core/dev.kord.core.entity.automoderation/-auto-moderation-action/data.html","searchKeys":["data","val data: AutoModerationActionData","dev.kord.core.entity.automoderation.AutoModerationAction.data"]},{"name":"val data: AutoModerationActionExecutionEventData","description":"dev.kord.core.event.automoderation.AutoModerationActionExecutionEvent.data","location":"core/dev.kord.core.event.automoderation/-auto-moderation-action-execution-event/data.html","searchKeys":["data","val data: AutoModerationActionExecutionEventData","dev.kord.core.event.automoderation.AutoModerationActionExecutionEvent.data"]},{"name":"val data: AutoModerationRuleData","description":"dev.kord.core.entity.automoderation.AutoModerationRule.data","location":"core/dev.kord.core.entity.automoderation/-auto-moderation-rule/data.html","searchKeys":["data","val data: AutoModerationRuleData","dev.kord.core.entity.automoderation.AutoModerationRule.data"]},{"name":"val data: BanData","description":"dev.kord.core.entity.Ban.data","location":"core/dev.kord.core.entity/-ban/data.html","searchKeys":["data","val data: BanData","dev.kord.core.entity.Ban.data"]},{"name":"val data: ChannelData","description":"dev.kord.core.entity.channel.thread.DeletedThreadChannel.data","location":"core/dev.kord.core.entity.channel.thread/-deleted-thread-channel/data.html","searchKeys":["data","val data: ChannelData","dev.kord.core.entity.channel.thread.DeletedThreadChannel.data"]},{"name":"val data: ChannelPinsUpdateEventData","description":"dev.kord.core.event.channel.ChannelPinsUpdateEvent.data","location":"core/dev.kord.core.event.channel/-channel-pins-update-event/data.html","searchKeys":["data","val data: ChannelPinsUpdateEventData","dev.kord.core.event.channel.ChannelPinsUpdateEvent.data"]},{"name":"val data: ClientStatusData","description":"dev.kord.core.entity.ClientStatus.data","location":"core/dev.kord.core.entity/-client-status/data.html","searchKeys":["data","val data: ClientStatusData","dev.kord.core.entity.ClientStatus.data"]},{"name":"val data: DiscordAuditLog","description":"dev.kord.core.entity.AuditLog.data","location":"core/dev.kord.core.entity/-audit-log/data.html","searchKeys":["data","val data: DiscordAuditLog","dev.kord.core.entity.AuditLog.data"]},{"name":"val data: DiscordAuditLogEntry","description":"dev.kord.core.entity.AuditLogEntry.data","location":"core/dev.kord.core.entity/-audit-log-entry/data.html","searchKeys":["data","val data: DiscordAuditLogEntry","dev.kord.core.entity.AuditLogEntry.data"]},{"name":"val data: EmbedAuthorData","description":"dev.kord.core.entity.Embed.Author.data","location":"core/dev.kord.core.entity/-embed/-author/data.html","searchKeys":["data","val data: EmbedAuthorData","dev.kord.core.entity.Embed.Author.data"]},{"name":"val data: EmbedData","description":"dev.kord.core.entity.Embed.data","location":"core/dev.kord.core.entity/-embed/data.html","searchKeys":["data","val data: EmbedData","dev.kord.core.entity.Embed.data"]},{"name":"val data: EmbedFieldData","description":"dev.kord.core.entity.Embed.Field.data","location":"core/dev.kord.core.entity/-embed/-field/data.html","searchKeys":["data","val data: EmbedFieldData","dev.kord.core.entity.Embed.Field.data"]},{"name":"val data: EmbedFooterData","description":"dev.kord.core.entity.Embed.Footer.data","location":"core/dev.kord.core.entity/-embed/-footer/data.html","searchKeys":["data","val data: EmbedFooterData","dev.kord.core.entity.Embed.Footer.data"]},{"name":"val data: EmbedImageData","description":"dev.kord.core.entity.Embed.Image.data","location":"core/dev.kord.core.entity/-embed/-image/data.html","searchKeys":["data","val data: EmbedImageData","dev.kord.core.entity.Embed.Image.data"]},{"name":"val data: EmbedProviderData","description":"dev.kord.core.entity.Embed.Provider.data","location":"core/dev.kord.core.entity/-embed/-provider/data.html","searchKeys":["data","val data: EmbedProviderData","dev.kord.core.entity.Embed.Provider.data"]},{"name":"val data: EmbedThumbnailData","description":"dev.kord.core.entity.Embed.Thumbnail.data","location":"core/dev.kord.core.entity/-embed/-thumbnail/data.html","searchKeys":["data","val data: EmbedThumbnailData","dev.kord.core.entity.Embed.Thumbnail.data"]},{"name":"val data: EmbedVideoData","description":"dev.kord.core.entity.Embed.Video.data","location":"core/dev.kord.core.entity/-embed/-video/data.html","searchKeys":["data","val data: EmbedVideoData","dev.kord.core.entity.Embed.Video.data"]},{"name":"val data: EmojiData","description":"dev.kord.core.entity.GuildEmoji.data","location":"core/dev.kord.core.entity/-guild-emoji/data.html","searchKeys":["data","val data: EmojiData","dev.kord.core.entity.GuildEmoji.data"]},{"name":"val data: GuildApplicationCommandPermissionData","description":"dev.kord.core.entity.application.GuildApplicationCommandPermission.data","location":"core/dev.kord.core.entity.application/-guild-application-command-permission/data.html","searchKeys":["data","val data: GuildApplicationCommandPermissionData","dev.kord.core.entity.application.GuildApplicationCommandPermission.data"]},{"name":"val data: GuildApplicationCommandPermissionsData","description":"dev.kord.core.entity.application.ApplicationCommandPermissions.data","location":"core/dev.kord.core.entity.application/-application-command-permissions/data.html","searchKeys":["data","val data: GuildApplicationCommandPermissionsData","dev.kord.core.entity.application.ApplicationCommandPermissions.data"]},{"name":"val data: GuildData","description":"dev.kord.core.entity.Guild.data","location":"core/dev.kord.core.entity/-guild/data.html","searchKeys":["data","val data: GuildData","dev.kord.core.entity.Guild.data"]},{"name":"val data: GuildPreviewData","description":"dev.kord.core.entity.GuildPreview.data","location":"core/dev.kord.core.entity/-guild-preview/data.html","searchKeys":["data","val data: GuildPreviewData","dev.kord.core.entity.GuildPreview.data"]},{"name":"val data: GuildScheduledEventData","description":"dev.kord.core.entity.GuildScheduledEvent.data","location":"core/dev.kord.core.entity/-guild-scheduled-event/data.html","searchKeys":["data","val data: GuildScheduledEventData","dev.kord.core.entity.GuildScheduledEvent.data"]},{"name":"val data: GuildWidgetData","description":"dev.kord.core.entity.GuildWidget.data","location":"core/dev.kord.core.entity/-guild-widget/data.html","searchKeys":["data","val data: GuildWidgetData","dev.kord.core.entity.GuildWidget.data"]},{"name":"val data: IntegrationData","description":"dev.kord.core.entity.Integration.data","location":"core/dev.kord.core.entity/-integration/data.html","searchKeys":["data","val data: IntegrationData","dev.kord.core.entity.Integration.data"]},{"name":"val data: InviteCreateData","description":"dev.kord.core.event.guild.InviteCreateEvent.data","location":"core/dev.kord.core.event.guild/-invite-create-event/data.html","searchKeys":["data","val data: InviteCreateData","dev.kord.core.event.guild.InviteCreateEvent.data"]},{"name":"val data: InviteDeleteData","description":"dev.kord.core.event.guild.InviteDeleteEvent.data","location":"core/dev.kord.core.event.guild/-invite-delete-event/data.html","searchKeys":["data","val data: InviteDeleteData","dev.kord.core.event.guild.InviteDeleteEvent.data"]},{"name":"val data: MembersChunkData","description":"dev.kord.core.event.guild.MembersChunkEvent.data","location":"core/dev.kord.core.event.guild/-members-chunk-event/data.html","searchKeys":["data","val data: MembersChunkData","dev.kord.core.event.guild.MembersChunkEvent.data"]},{"name":"val data: MessageData","description":"dev.kord.core.entity.Message.data","location":"core/dev.kord.core.entity/-message/data.html","searchKeys":["data","val data: MessageData","dev.kord.core.entity.Message.data"]},{"name":"val data: MessageInteractionData","description":"dev.kord.core.entity.Message.Interaction.data","location":"core/dev.kord.core.entity/-message/-interaction/data.html","searchKeys":["data","val data: MessageInteractionData","dev.kord.core.entity.Message.Interaction.data"]},{"name":"val data: MessageReferenceData","description":"dev.kord.core.entity.MessageReference.data","location":"core/dev.kord.core.entity/-message-reference/data.html","searchKeys":["data","val data: MessageReferenceData","dev.kord.core.entity.MessageReference.data"]},{"name":"val data: PartialGuildData","description":"dev.kord.core.entity.PartialGuild.data","location":"core/dev.kord.core.entity/-partial-guild/data.html","searchKeys":["data","val data: PartialGuildData","dev.kord.core.entity.PartialGuild.data"]},{"name":"val data: PermissionOverwriteData","description":"dev.kord.core.entity.PermissionOverwrite.data","location":"core/dev.kord.core.entity/-permission-overwrite/data.html","searchKeys":["data","val data: PermissionOverwriteData","dev.kord.core.entity.PermissionOverwrite.data"]},{"name":"val data: PresenceData","description":"dev.kord.core.entity.Presence.data","location":"core/dev.kord.core.entity/-presence/data.html","searchKeys":["data","val data: PresenceData","dev.kord.core.entity.Presence.data"]},{"name":"val data: ReactionData","description":"dev.kord.core.entity.Reaction.data","location":"core/dev.kord.core.entity/-reaction/data.html","searchKeys":["data","val data: ReactionData","dev.kord.core.entity.Reaction.data"]},{"name":"val data: ReactionRemoveEmojiData","description":"dev.kord.core.event.message.ReactionRemoveEmojiEvent.data","location":"core/dev.kord.core.event.message/-reaction-remove-emoji-event/data.html","searchKeys":["data","val data: ReactionRemoveEmojiData","dev.kord.core.event.message.ReactionRemoveEmojiEvent.data"]},{"name":"val data: RegionData","description":"dev.kord.core.entity.Region.data","location":"core/dev.kord.core.entity/-region/data.html","searchKeys":["data","val data: RegionData","dev.kord.core.entity.Region.data"]},{"name":"val data: ResolvedObjectsData","description":"dev.kord.core.entity.interaction.ResolvedObjects.data","location":"core/dev.kord.core.entity.interaction/-resolved-objects/data.html","searchKeys":["data","val data: ResolvedObjectsData","dev.kord.core.entity.interaction.ResolvedObjects.data"]},{"name":"val data: RoleData","description":"dev.kord.core.entity.Role.data","location":"core/dev.kord.core.entity/-role/data.html","searchKeys":["data","val data: RoleData","dev.kord.core.entity.Role.data"]},{"name":"val data: RoleTagsData","description":"dev.kord.core.entity.RoleTags.data","location":"core/dev.kord.core.entity/-role-tags/data.html","searchKeys":["data","val data: RoleTagsData","dev.kord.core.entity.RoleTags.data"]},{"name":"val data: SelectOptionData","description":"dev.kord.core.entity.component.SelectOption.data","location":"core/dev.kord.core.entity.component/-select-option/data.html","searchKeys":["data","val data: SelectOptionData","dev.kord.core.entity.component.SelectOption.data"]},{"name":"val data: StageInstanceData","description":"dev.kord.core.entity.StageInstance.data","location":"core/dev.kord.core.entity/-stage-instance/data.html","searchKeys":["data","val data: StageInstanceData","dev.kord.core.entity.StageInstance.data"]},{"name":"val data: StickerData","description":"dev.kord.core.entity.Sticker.data","location":"core/dev.kord.core.entity/-sticker/data.html","searchKeys":["data","val data: StickerData","dev.kord.core.entity.Sticker.data"]},{"name":"val data: StickerItemData","description":"dev.kord.core.entity.StickerItem.data","location":"core/dev.kord.core.entity/-sticker-item/data.html","searchKeys":["data","val data: StickerItemData","dev.kord.core.entity.StickerItem.data"]},{"name":"val data: StickerPackData","description":"dev.kord.core.entity.StickerPack.data","location":"core/dev.kord.core.entity/-sticker-pack/data.html","searchKeys":["data","val data: StickerPackData","dev.kord.core.entity.StickerPack.data"]},{"name":"val data: TeamData","description":"dev.kord.core.entity.Team.data","location":"core/dev.kord.core.entity/-team/data.html","searchKeys":["data","val data: TeamData","dev.kord.core.entity.Team.data"]},{"name":"val data: TeamMemberData","description":"dev.kord.core.entity.TeamMember.data","location":"core/dev.kord.core.entity/-team-member/data.html","searchKeys":["data","val data: TeamMemberData","dev.kord.core.entity.TeamMember.data"]},{"name":"val data: TemplateData","description":"dev.kord.core.entity.Template.data","location":"core/dev.kord.core.entity/-template/data.html","searchKeys":["data","val data: TemplateData","dev.kord.core.entity.Template.data"]},{"name":"val data: ThreadListSyncData","description":"dev.kord.core.event.channel.thread.ThreadListSyncEvent.data","location":"core/dev.kord.core.event.channel.thread/-thread-list-sync-event/data.html","searchKeys":["data","val data: ThreadListSyncData","dev.kord.core.event.channel.thread.ThreadListSyncEvent.data"]},{"name":"val data: ThreadMemberData","description":"dev.kord.core.entity.channel.thread.ThreadMember.data","location":"core/dev.kord.core.entity.channel.thread/-thread-member/data.html","searchKeys":["data","val data: ThreadMemberData","dev.kord.core.entity.channel.thread.ThreadMember.data"]},{"name":"val data: ThreadMembersUpdateEventData","description":"dev.kord.core.event.channel.thread.ThreadMembersUpdateEvent.data","location":"core/dev.kord.core.event.channel.thread/-thread-members-update-event/data.html","searchKeys":["data","val data: ThreadMembersUpdateEventData","dev.kord.core.event.channel.thread.ThreadMembersUpdateEvent.data"]},{"name":"val data: TypingStartEventData","description":"dev.kord.core.event.channel.TypingStartEvent.data","location":"core/dev.kord.core.event.channel/-typing-start-event/data.html","searchKeys":["data","val data: TypingStartEventData","dev.kord.core.event.channel.TypingStartEvent.data"]},{"name":"val data: UserData","description":"dev.kord.core.entity.User.Avatar.data","location":"core/dev.kord.core.entity/-user/-avatar/data.html","searchKeys":["data","val data: UserData","dev.kord.core.entity.User.Avatar.data"]},{"name":"val data: UserData","description":"dev.kord.core.entity.User.data","location":"core/dev.kord.core.entity/-user/data.html","searchKeys":["data","val data: UserData","dev.kord.core.entity.User.data"]},{"name":"val data: VoiceStateData","description":"dev.kord.core.entity.VoiceState.data","location":"core/dev.kord.core.entity/-voice-state/data.html","searchKeys":["data","val data: VoiceStateData","dev.kord.core.entity.VoiceState.data"]},{"name":"val data: WebhookData","description":"dev.kord.core.entity.Webhook.data","location":"core/dev.kord.core.entity/-webhook/data.html","searchKeys":["data","val data: WebhookData","dev.kord.core.entity.Webhook.data"]},{"name":"val data: WelcomeScreenChannelData","description":"dev.kord.core.entity.channel.WelcomeScreenChannel.data","location":"core/dev.kord.core.entity.channel/-welcome-screen-channel/data.html","searchKeys":["data","val data: WelcomeScreenChannelData","dev.kord.core.entity.channel.WelcomeScreenChannel.data"]},{"name":"val data: WelcomeScreenData","description":"dev.kord.core.entity.WelcomeScreen.data","location":"core/dev.kord.core.entity/-welcome-screen/data.html","searchKeys":["data","val data: WelcomeScreenData","dev.kord.core.entity.WelcomeScreen.data"]},{"name":"val deaf: Boolean","description":"dev.kord.core.cache.data.VoiceStateData.deaf","location":"core/dev.kord.core.cache.data/-voice-state-data/deaf.html","searchKeys":["deaf","val deaf: Boolean","dev.kord.core.cache.data.VoiceStateData.deaf"]},{"name":"val default: Boolean","description":"dev.kord.core.entity.component.SelectOption.default","location":"core/dev.kord.core.entity.component/-select-option/default.html","searchKeys":["default","val default: Boolean","dev.kord.core.entity.component.SelectOption.default"]},{"name":"val default: OptionalBoolean","description":"dev.kord.core.cache.data.ApplicationCommandOptionData.default","location":"core/dev.kord.core.cache.data/-application-command-option-data/default.html","searchKeys":["default","val default: OptionalBoolean","dev.kord.core.cache.data.ApplicationCommandOptionData.default"]},{"name":"val default: OptionalBoolean","description":"dev.kord.core.cache.data.SelectOptionData.default","location":"core/dev.kord.core.cache.data/-select-option-data/default.html","searchKeys":["default","val default: OptionalBoolean","dev.kord.core.cache.data.SelectOptionData.default"]},{"name":"val defaultAutoArchiveDuration: Optional<ArchiveDuration>","description":"dev.kord.core.cache.data.ChannelData.defaultAutoArchiveDuration","location":"core/dev.kord.core.cache.data/-channel-data/default-auto-archive-duration.html","searchKeys":["defaultAutoArchiveDuration","val defaultAutoArchiveDuration: Optional<ArchiveDuration>","dev.kord.core.cache.data.ChannelData.defaultAutoArchiveDuration"]},{"name":"val defaultAvatar: Icon","description":"dev.kord.core.entity.User.defaultAvatar","location":"core/dev.kord.core.entity/-user/default-avatar.html","searchKeys":["defaultAvatar","val defaultAvatar: Icon","dev.kord.core.entity.User.defaultAvatar"]},{"name":"val defaultMemberPermissions: Permissions?","description":"dev.kord.core.cache.data.ApplicationCommandData.defaultMemberPermissions","location":"core/dev.kord.core.cache.data/-application-command-data/default-member-permissions.html","searchKeys":["defaultMemberPermissions","val defaultMemberPermissions: Permissions?","dev.kord.core.cache.data.ApplicationCommandData.defaultMemberPermissions"]},{"name":"val defaultMessageNotificationLevel: DefaultMessageNotificationLevel","description":"dev.kord.core.entity.Guild.defaultMessageNotificationLevel","location":"core/dev.kord.core.entity/-guild/default-message-notification-level.html","searchKeys":["defaultMessageNotificationLevel","val defaultMessageNotificationLevel: DefaultMessageNotificationLevel","dev.kord.core.entity.Guild.defaultMessageNotificationLevel"]},{"name":"val defaultMessageNotifications: DefaultMessageNotificationLevel","description":"dev.kord.core.cache.data.GuildData.defaultMessageNotifications","location":"core/dev.kord.core.cache.data/-guild-data/default-message-notifications.html","searchKeys":["defaultMessageNotifications","val defaultMessageNotifications: DefaultMessageNotificationLevel","dev.kord.core.cache.data.GuildData.defaultMessageNotifications"]},{"name":"val defaultPermission: OptionalBoolean?","description":"dev.kord.core.cache.data.ApplicationCommandData.defaultPermission","location":"core/dev.kord.core.cache.data/-application-command-data/default-permission.html","searchKeys":["defaultPermission","val defaultPermission: OptionalBoolean?","dev.kord.core.cache.data.ApplicationCommandData.defaultPermission"]},{"name":"val defaultStrategy: EntitySupplyStrategy<*>","description":"dev.kord.core.ClientResources.defaultStrategy","location":"core/dev.kord.core/-client-resources/default-strategy.html","searchKeys":["defaultStrategy","val defaultStrategy: EntitySupplyStrategy<*>","dev.kord.core.ClientResources.defaultStrategy"]},{"name":"val defaultSupplier: EntitySupplier","description":"dev.kord.core.Kord.defaultSupplier","location":"core/dev.kord.core/-kord/default-supplier.html","searchKeys":["defaultSupplier","val defaultSupplier: EntitySupplier","dev.kord.core.Kord.defaultSupplier"]},{"name":"val defaultUrl: String","description":"dev.kord.core.entity.User.Avatar.defaultUrl","location":"core/dev.kord.core.entity/-user/-avatar/default-url.html","searchKeys":["defaultUrl","val defaultUrl: String","dev.kord.core.entity.User.Avatar.defaultUrl"]},{"name":"val denied: Permissions","description":"dev.kord.core.cache.data.PermissionOverwriteData.denied","location":"core/dev.kord.core.cache.data/-permission-overwrite-data/denied.html","searchKeys":["denied","val denied: Permissions","dev.kord.core.cache.data.PermissionOverwriteData.denied"]},{"name":"val denied: Permissions","description":"dev.kord.core.entity.PermissionOverwrite.denied","location":"core/dev.kord.core.entity/-permission-overwrite/denied.html","searchKeys":["denied","val denied: Permissions","dev.kord.core.entity.PermissionOverwrite.denied"]},{"name":"val deprecated: Boolean","description":"dev.kord.core.cache.data.RegionData.deprecated","location":"core/dev.kord.core.cache.data/-region-data/deprecated.html","searchKeys":["deprecated","val deprecated: Boolean","dev.kord.core.cache.data.RegionData.deprecated"]},{"name":"val description: DataDescription<ApplicationCommandData, Snowflake>","description":"dev.kord.core.cache.data.ApplicationCommandData.Companion.description","location":"core/dev.kord.core.cache.data/-application-command-data/-companion/description.html","searchKeys":["description","val description: DataDescription<ApplicationCommandData, Snowflake>","dev.kord.core.cache.data.ApplicationCommandData.Companion.description"]},{"name":"val description: DataDescription<AutoModerationRuleData, Snowflake>","description":"dev.kord.core.cache.data.AutoModerationRuleData.Companion.description","location":"core/dev.kord.core.cache.data/-auto-moderation-rule-data/-companion/description.html","searchKeys":["description","val description: DataDescription<AutoModerationRuleData, Snowflake>","dev.kord.core.cache.data.AutoModerationRuleData.Companion.description"]},{"name":"val description: DataDescription<ChannelData, Snowflake>","description":"dev.kord.core.cache.data.ChannelData.Companion.description","location":"core/dev.kord.core.cache.data/-channel-data/-companion/description.html","searchKeys":["description","val description: DataDescription<ChannelData, Snowflake>","dev.kord.core.cache.data.ChannelData.Companion.description"]},{"name":"val description: DataDescription<EmojiData, Snowflake>","description":"dev.kord.core.cache.data.EmojiData.Companion.description","location":"core/dev.kord.core.cache.data/-emoji-data/-companion/description.html","searchKeys":["description","val description: DataDescription<EmojiData, Snowflake>","dev.kord.core.cache.data.EmojiData.Companion.description"]},{"name":"val description: DataDescription<GuildApplicationCommandPermissionsData, Snowflake>","description":"dev.kord.core.cache.data.GuildApplicationCommandPermissionsData.Companion.description","location":"core/dev.kord.core.cache.data/-guild-application-command-permissions-data/-companion/description.html","searchKeys":["description","val description: DataDescription<GuildApplicationCommandPermissionsData, Snowflake>","dev.kord.core.cache.data.GuildApplicationCommandPermissionsData.Companion.description"]},{"name":"val description: DataDescription<GuildData, Snowflake>","description":"dev.kord.core.cache.data.GuildData.Companion.description","location":"core/dev.kord.core.cache.data/-guild-data/-companion/description.html","searchKeys":["description","val description: DataDescription<GuildData, Snowflake>","dev.kord.core.cache.data.GuildData.Companion.description"]},{"name":"val description: DataDescription<MemberData, String>","description":"dev.kord.core.cache.data.MemberData.Companion.description","location":"core/dev.kord.core.cache.data/-member-data/-companion/description.html","searchKeys":["description","val description: DataDescription<MemberData, String>","dev.kord.core.cache.data.MemberData.Companion.description"]},{"name":"val description: DataDescription<MessageData, Snowflake>","description":"dev.kord.core.cache.data.MessageData.Companion.description","location":"core/dev.kord.core.cache.data/-message-data/-companion/description.html","searchKeys":["description","val description: DataDescription<MessageData, Snowflake>","dev.kord.core.cache.data.MessageData.Companion.description"]},{"name":"val description: DataDescription<PresenceData, String>","description":"dev.kord.core.cache.data.PresenceData.Companion.description","location":"core/dev.kord.core.cache.data/-presence-data/-companion/description.html","searchKeys":["description","val description: DataDescription<PresenceData, String>","dev.kord.core.cache.data.PresenceData.Companion.description"]},{"name":"val description: DataDescription<RoleData, Snowflake>","description":"dev.kord.core.cache.data.RoleData.Companion.description","location":"core/dev.kord.core.cache.data/-role-data/-companion/description.html","searchKeys":["description","val description: DataDescription<RoleData, Snowflake>","dev.kord.core.cache.data.RoleData.Companion.description"]},{"name":"val description: DataDescription<StickerData, Snowflake>","description":"dev.kord.core.cache.data.StickerData.Companion.description","location":"core/dev.kord.core.cache.data/-sticker-data/-companion/description.html","searchKeys":["description","val description: DataDescription<StickerData, Snowflake>","dev.kord.core.cache.data.StickerData.Companion.description"]},{"name":"val description: DataDescription<StickerPackData, Snowflake>","description":"dev.kord.core.cache.data.StickerPackData.Companion.description","location":"core/dev.kord.core.cache.data/-sticker-pack-data/-companion/description.html","searchKeys":["description","val description: DataDescription<StickerPackData, Snowflake>","dev.kord.core.cache.data.StickerPackData.Companion.description"]},{"name":"val description: DataDescription<ThreadMemberData, Snowflake>","description":"dev.kord.core.cache.data.ThreadMemberData.Companion.description","location":"core/dev.kord.core.cache.data/-thread-member-data/-companion/description.html","searchKeys":["description","val description: DataDescription<ThreadMemberData, Snowflake>","dev.kord.core.cache.data.ThreadMemberData.Companion.description"]},{"name":"val description: DataDescription<UserData, Snowflake>","description":"dev.kord.core.cache.data.UserData.Companion.description","location":"core/dev.kord.core.cache.data/-user-data/-companion/description.html","searchKeys":["description","val description: DataDescription<UserData, Snowflake>","dev.kord.core.cache.data.UserData.Companion.description"]},{"name":"val description: DataDescription<VoiceStateData, String>","description":"dev.kord.core.cache.data.VoiceStateData.Companion.description","location":"core/dev.kord.core.cache.data/-voice-state-data/-companion/description.html","searchKeys":["description","val description: DataDescription<VoiceStateData, String>","dev.kord.core.cache.data.VoiceStateData.Companion.description"]},{"name":"val description: DataDescription<WebhookData, Snowflake>","description":"dev.kord.core.cache.data.WebhookData.Companion.description","location":"core/dev.kord.core.cache.data/-webhook-data/-companion/description.html","searchKeys":["description","val description: DataDescription<WebhookData, Snowflake>","dev.kord.core.cache.data.WebhookData.Companion.description"]},{"name":"val description: Optional<String>","description":"dev.kord.core.cache.data.AttachmentData.description","location":"core/dev.kord.core.cache.data/-attachment-data/description.html","searchKeys":["description","val description: Optional<String>","dev.kord.core.cache.data.AttachmentData.description"]},{"name":"val description: Optional<String>","description":"dev.kord.core.cache.data.EmbedData.description","location":"core/dev.kord.core.cache.data/-embed-data/description.html","searchKeys":["description","val description: Optional<String>","dev.kord.core.cache.data.EmbedData.description"]},{"name":"val description: Optional<String>","description":"dev.kord.core.cache.data.SelectOptionData.description","location":"core/dev.kord.core.cache.data/-select-option-data/description.html","searchKeys":["description","val description: Optional<String>","dev.kord.core.cache.data.SelectOptionData.description"]},{"name":"val description: Optional<String?>","description":"dev.kord.core.cache.data.GuildScheduledEventData.description","location":"core/dev.kord.core.cache.data/-guild-scheduled-event-data/description.html","searchKeys":["description","val description: Optional<String?>","dev.kord.core.cache.data.GuildScheduledEventData.description"]},{"name":"val description: Optional<String?>","description":"dev.kord.core.cache.data.PartialGuildData.description","location":"core/dev.kord.core.cache.data/-partial-guild-data/description.html","searchKeys":["description","val description: Optional<String?>","dev.kord.core.cache.data.PartialGuildData.description"]},{"name":"val description: String","description":"dev.kord.core.cache.data.ApplicationCommandGroupData.description","location":"core/dev.kord.core.cache.data/-application-command-group-data/description.html","searchKeys":["description","val description: String","dev.kord.core.cache.data.ApplicationCommandGroupData.description"]},{"name":"val description: String","description":"dev.kord.core.cache.data.ApplicationCommandOptionData.description","location":"core/dev.kord.core.cache.data/-application-command-option-data/description.html","searchKeys":["description","val description: String","dev.kord.core.cache.data.ApplicationCommandOptionData.description"]},{"name":"val description: String","description":"dev.kord.core.cache.data.ApplicationCommandParameterData.description","location":"core/dev.kord.core.cache.data/-application-command-parameter-data/description.html","searchKeys":["description","val description: String","dev.kord.core.cache.data.ApplicationCommandParameterData.description"]},{"name":"val description: String","description":"dev.kord.core.cache.data.ApplicationCommandSubcommandData.description","location":"core/dev.kord.core.cache.data/-application-command-subcommand-data/description.html","searchKeys":["description","val description: String","dev.kord.core.cache.data.ApplicationCommandSubcommandData.description"]},{"name":"val description: String","description":"dev.kord.core.cache.data.StickerPackData.description","location":"core/dev.kord.core.cache.data/-sticker-pack-data/description.html","searchKeys":["description","val description: String","dev.kord.core.cache.data.StickerPackData.description"]},{"name":"val description: String","description":"dev.kord.core.cache.data.WelcomeScreenChannelData.description","location":"core/dev.kord.core.cache.data/-welcome-screen-channel-data/description.html","searchKeys":["description","val description: String","dev.kord.core.cache.data.WelcomeScreenChannelData.description"]},{"name":"val description: String","description":"dev.kord.core.entity.BaseApplication.description","location":"core/dev.kord.core.entity/-base-application/description.html","searchKeys":["description","val description: String","dev.kord.core.entity.BaseApplication.description"]},{"name":"val description: String","description":"dev.kord.core.entity.StickerPack.description","location":"core/dev.kord.core.entity/-sticker-pack/description.html","searchKeys":["description","val description: String","dev.kord.core.entity.StickerPack.description"]},{"name":"val description: String","description":"dev.kord.core.entity.application.ApplicationCommandParameter.description","location":"core/dev.kord.core.entity.application/-application-command-parameter/description.html","searchKeys":["description","val description: String","dev.kord.core.entity.application.ApplicationCommandParameter.description"]},{"name":"val description: String","description":"dev.kord.core.entity.application.ChatInputGroup.description","location":"core/dev.kord.core.entity.application/-chat-input-group/description.html","searchKeys":["description","val description: String","dev.kord.core.entity.application.ChatInputGroup.description"]},{"name":"val description: String","description":"dev.kord.core.entity.application.ChatInputSubCommand.description","location":"core/dev.kord.core.entity.application/-chat-input-sub-command/description.html","searchKeys":["description","val description: String","dev.kord.core.entity.application.ChatInputSubCommand.description"]},{"name":"val description: String","description":"dev.kord.core.entity.channel.WelcomeScreenChannel.description","location":"core/dev.kord.core.entity.channel/-welcome-screen-channel/description.html","searchKeys":["description","val description: String","dev.kord.core.entity.channel.WelcomeScreenChannel.description"]},{"name":"val description: String?","description":"dev.kord.core.cache.data.ApplicationCommandData.description","location":"core/dev.kord.core.cache.data/-application-command-data/description.html","searchKeys":["description","val description: String?","dev.kord.core.cache.data.ApplicationCommandData.description"]},{"name":"val description: String?","description":"dev.kord.core.cache.data.StickerData.description","location":"core/dev.kord.core.cache.data/-sticker-data/description.html","searchKeys":["description","val description: String?","dev.kord.core.cache.data.StickerData.description"]},{"name":"val description: String?","description":"dev.kord.core.cache.data.TemplateData.description","location":"core/dev.kord.core.cache.data/-template-data/description.html","searchKeys":["description","val description: String?","dev.kord.core.cache.data.TemplateData.description"]},{"name":"val description: String?","description":"dev.kord.core.cache.data.WelcomeScreenData.description","location":"core/dev.kord.core.cache.data/-welcome-screen-data/description.html","searchKeys":["description","val description: String?","dev.kord.core.cache.data.WelcomeScreenData.description"]},{"name":"val description: String?","description":"dev.kord.core.entity.Attachment.description","location":"core/dev.kord.core.entity/-attachment/description.html","searchKeys":["description","val description: String?","dev.kord.core.entity.Attachment.description"]},{"name":"val description: String?","description":"dev.kord.core.entity.Embed.description","location":"core/dev.kord.core.entity/-embed/description.html","searchKeys":["description","val description: String?","dev.kord.core.entity.Embed.description"]},{"name":"val description: String?","description":"dev.kord.core.entity.Guild.description","location":"core/dev.kord.core.entity/-guild/description.html","searchKeys":["description","val description: String?","dev.kord.core.entity.Guild.description"]},{"name":"val description: String?","description":"dev.kord.core.entity.GuildPreview.description","location":"core/dev.kord.core.entity/-guild-preview/description.html","searchKeys":["description","val description: String?","dev.kord.core.entity.GuildPreview.description"]},{"name":"val description: String?","description":"dev.kord.core.entity.GuildScheduledEvent.description","location":"core/dev.kord.core.entity/-guild-scheduled-event/description.html","searchKeys":["description","val description: String?","dev.kord.core.entity.GuildScheduledEvent.description"]},{"name":"val description: String?","description":"dev.kord.core.entity.PartialGuild.description","location":"core/dev.kord.core.entity/-partial-guild/description.html","searchKeys":["description","val description: String?","dev.kord.core.entity.PartialGuild.description"]},{"name":"val description: String?","description":"dev.kord.core.entity.Sticker.description","location":"core/dev.kord.core.entity/-sticker/description.html","searchKeys":["description","val description: String?","dev.kord.core.entity.Sticker.description"]},{"name":"val description: String?","description":"dev.kord.core.entity.Template.description","location":"core/dev.kord.core.entity/-template/description.html","searchKeys":["description","val description: String?","dev.kord.core.entity.Template.description"]},{"name":"val description: String?","description":"dev.kord.core.entity.WelcomeScreen.description","location":"core/dev.kord.core.entity/-welcome-screen/description.html","searchKeys":["description","val description: String?","dev.kord.core.entity.WelcomeScreen.description"]},{"name":"val description: String?","description":"dev.kord.core.entity.component.SelectOption.description","location":"core/dev.kord.core.entity.component/-select-option/description.html","searchKeys":["description","val description: String?","dev.kord.core.entity.component.SelectOption.description"]},{"name":"val description: String? = null","description":"dev.kord.core.cache.data.GuildData.description","location":"core/dev.kord.core.cache.data/-guild-data/description.html","searchKeys":["description","val description: String? = null","dev.kord.core.cache.data.GuildData.description"]},{"name":"val description: String? = null","description":"dev.kord.core.cache.data.GuildPreviewData.description","location":"core/dev.kord.core.cache.data/-guild-preview-data/description.html","searchKeys":["description","val description: String? = null","dev.kord.core.cache.data.GuildPreviewData.description"]},{"name":"val descriptionLocalizations: Optional<Map<Locale, String>?>","description":"dev.kord.core.cache.data.ApplicationCommandData.descriptionLocalizations","location":"core/dev.kord.core.cache.data/-application-command-data/description-localizations.html","searchKeys":["descriptionLocalizations","val descriptionLocalizations: Optional<Map<Locale, String>?>","dev.kord.core.cache.data.ApplicationCommandData.descriptionLocalizations"]},{"name":"val desktop: ClientStatus.Client.Desktop?","description":"dev.kord.core.entity.ClientStatus.desktop","location":"core/dev.kord.core.entity/-client-status/desktop.html","searchKeys":["desktop","val desktop: ClientStatus.Client.Desktop?","dev.kord.core.entity.ClientStatus.desktop"]},{"name":"val desktop: Optional<PresenceStatus>","description":"dev.kord.core.cache.data.ClientStatusData.desktop","location":"core/dev.kord.core.cache.data/-client-status-data/desktop.html","searchKeys":["desktop","val desktop: Optional<PresenceStatus>","dev.kord.core.cache.data.ClientStatusData.desktop"]},{"name":"val details: Optional<String?>","description":"dev.kord.core.cache.data.ActivityData.details","location":"core/dev.kord.core.cache.data/-activity-data/details.html","searchKeys":["details","val details: Optional<String?>","dev.kord.core.cache.data.ActivityData.details"]},{"name":"val details: String?","description":"dev.kord.core.entity.Activity.details","location":"core/dev.kord.core.entity/-activity/details.html","searchKeys":["details","val details: String?","dev.kord.core.entity.Activity.details"]},{"name":"val dirty: Boolean?","description":"dev.kord.core.entity.Template.dirty","location":"core/dev.kord.core.entity/-template/dirty.html","searchKeys":["dirty","val dirty: Boolean?","dev.kord.core.entity.Template.dirty"]},{"name":"val disabled: Boolean","description":"dev.kord.core.entity.component.ButtonComponent.disabled","location":"core/dev.kord.core.entity.component/-button-component/disabled.html","searchKeys":["disabled","val disabled: Boolean","dev.kord.core.entity.component.ButtonComponent.disabled"]},{"name":"val disabled: Boolean","description":"dev.kord.core.entity.component.SelectMenuComponent.disabled","location":"core/dev.kord.core.entity.component/-select-menu-component/disabled.html","searchKeys":["disabled","val disabled: Boolean","dev.kord.core.entity.component.SelectMenuComponent.disabled"]},{"name":"val discoverySplash: Optional<String?>","description":"dev.kord.core.cache.data.GuildData.discoverySplash","location":"core/dev.kord.core.cache.data/-guild-data/discovery-splash.html","searchKeys":["discoverySplash","val discoverySplash: Optional<String?>","dev.kord.core.cache.data.GuildData.discoverySplash"]},{"name":"val discoverySplash: String?","description":"dev.kord.core.entity.GuildPreview.discoverySplash","location":"core/dev.kord.core.entity/-guild-preview/discovery-splash.html","searchKeys":["discoverySplash","val discoverySplash: String?","dev.kord.core.entity.GuildPreview.discoverySplash"]},{"name":"val discoverySplash: String? = null","description":"dev.kord.core.cache.data.GuildPreviewData.discoverySplash","location":"core/dev.kord.core.cache.data/-guild-preview-data/discovery-splash.html","searchKeys":["discoverySplash","val discoverySplash: String? = null","dev.kord.core.cache.data.GuildPreviewData.discoverySplash"]},{"name":"val discoverySplashHash: String?","description":"dev.kord.core.entity.Guild.discoverySplashHash","location":"core/dev.kord.core.entity/-guild/discovery-splash-hash.html","searchKeys":["discoverySplashHash","val discoverySplashHash: String?","dev.kord.core.entity.Guild.discoverySplashHash"]},{"name":"val discriminator: String","description":"dev.kord.core.cache.data.UserData.discriminator","location":"core/dev.kord.core.cache.data/-user-data/discriminator.html","searchKeys":["discriminator","val discriminator: String","dev.kord.core.cache.data.UserData.discriminator"]},{"name":"val discriminator: String","description":"dev.kord.core.entity.User.discriminator","location":"core/dev.kord.core.entity/-user/discriminator.html","searchKeys":["discriminator","val discriminator: String","dev.kord.core.entity.User.discriminator"]},{"name":"val displayName: String","description":"dev.kord.core.entity.Member.displayName","location":"core/dev.kord.core.entity/-member/display-name.html","searchKeys":["displayName","val displayName: String","dev.kord.core.entity.Member.displayName"]},{"name":"val dmPermission: OptionalBoolean","description":"dev.kord.core.cache.data.ApplicationCommandData.dmPermission","location":"core/dev.kord.core.cache.data/-application-command-data/dm-permission.html","searchKeys":["dmPermission","val dmPermission: OptionalBoolean","dev.kord.core.cache.data.ApplicationCommandData.dmPermission"]},{"name":"val duration: Duration","description":"dev.kord.core.entity.automoderation.TimeoutAutoModerationAction.duration","location":"core/dev.kord.core.entity.automoderation/-timeout-auto-moderation-action/duration.html","searchKeys":["duration","val duration: Duration","dev.kord.core.entity.automoderation.TimeoutAutoModerationAction.duration"]},{"name":"val durationSeconds: Optional<DurationInSeconds>","description":"dev.kord.core.cache.data.AutoModerationActionMetadataData.durationSeconds","location":"core/dev.kord.core.cache.data/-auto-moderation-action-metadata-data/duration-seconds.html","searchKeys":["durationSeconds","val durationSeconds: Optional<DurationInSeconds>","dev.kord.core.cache.data.AutoModerationActionMetadataData.durationSeconds"]},{"name":"val editedTimestamp: Instant?","description":"dev.kord.core.entity.Message.editedTimestamp","location":"core/dev.kord.core.entity/-message/edited-timestamp.html","searchKeys":["editedTimestamp","val editedTimestamp: Instant?","dev.kord.core.entity.Message.editedTimestamp"]},{"name":"val editedTimestamp: Instant? = null","description":"dev.kord.core.cache.data.MessageData.editedTimestamp","location":"core/dev.kord.core.cache.data/-message-data/edited-timestamp.html","searchKeys":["editedTimestamp","val editedTimestamp: Instant? = null","dev.kord.core.cache.data.MessageData.editedTimestamp"]},{"name":"val embeds: List<Embed>","description":"dev.kord.core.entity.Message.embeds","location":"core/dev.kord.core.entity/-message/embeds.html","searchKeys":["embeds","val embeds: List<Embed>","dev.kord.core.entity.Message.embeds"]},{"name":"val embeds: List<EmbedData>","description":"dev.kord.core.cache.data.MessageData.embeds","location":"core/dev.kord.core.cache.data/-message-data/embeds.html","searchKeys":["embeds","val embeds: List<EmbedData>","dev.kord.core.cache.data.MessageData.embeds"]},{"name":"val emoji: DiscordActivityEmoji?","description":"dev.kord.core.entity.Activity.emoji","location":"core/dev.kord.core.entity/-activity/emoji.html","searchKeys":["emoji","val emoji: DiscordActivityEmoji?","dev.kord.core.entity.Activity.emoji"]},{"name":"val emoji: DiscordPartialEmoji?","description":"dev.kord.core.entity.component.SelectOption.emoji","location":"core/dev.kord.core.entity.component/-select-option/emoji.html","searchKeys":["emoji","val emoji: DiscordPartialEmoji?","dev.kord.core.entity.component.SelectOption.emoji"]},{"name":"val emoji: Optional<DiscordActivityEmoji?>","description":"dev.kord.core.cache.data.ActivityData.emoji","location":"core/dev.kord.core.cache.data/-activity-data/emoji.html","searchKeys":["emoji","val emoji: Optional<DiscordActivityEmoji?>","dev.kord.core.cache.data.ActivityData.emoji"]},{"name":"val emoji: Optional<DiscordPartialEmoji>","description":"dev.kord.core.cache.data.SelectOptionData.emoji","location":"core/dev.kord.core.cache.data/-select-option-data/emoji.html","searchKeys":["emoji","val emoji: Optional<DiscordPartialEmoji>","dev.kord.core.cache.data.SelectOptionData.emoji"]},{"name":"val emoji: ReactionEmoji","description":"dev.kord.core.entity.Reaction.emoji","location":"core/dev.kord.core.entity/-reaction/emoji.html","searchKeys":["emoji","val emoji: ReactionEmoji","dev.kord.core.entity.Reaction.emoji"]},{"name":"val emoji: ReactionEmoji","description":"dev.kord.core.event.message.ReactionAddEvent.emoji","location":"core/dev.kord.core.event.message/-reaction-add-event/emoji.html","searchKeys":["emoji","val emoji: ReactionEmoji","dev.kord.core.event.message.ReactionAddEvent.emoji"]},{"name":"val emoji: ReactionEmoji","description":"dev.kord.core.event.message.ReactionRemoveEmojiEvent.emoji","location":"core/dev.kord.core.event.message/-reaction-remove-emoji-event/emoji.html","searchKeys":["emoji","val emoji: ReactionEmoji","dev.kord.core.event.message.ReactionRemoveEmojiEvent.emoji"]},{"name":"val emoji: ReactionEmoji","description":"dev.kord.core.event.message.ReactionRemoveEvent.emoji","location":"core/dev.kord.core.event.message/-reaction-remove-event/emoji.html","searchKeys":["emoji","val emoji: ReactionEmoji","dev.kord.core.event.message.ReactionRemoveEvent.emoji"]},{"name":"val emoji: ReactionEmoji?","description":"dev.kord.core.entity.component.ButtonComponent.emoji","location":"core/dev.kord.core.entity.component/-button-component/emoji.html","searchKeys":["emoji","val emoji: ReactionEmoji?","dev.kord.core.entity.component.ButtonComponent.emoji"]},{"name":"val emoji: RemovedReactionData","description":"dev.kord.core.cache.data.ReactionRemoveEmojiData.emoji","location":"core/dev.kord.core.cache.data/-reaction-remove-emoji-data/emoji.html","searchKeys":["emoji","val emoji: RemovedReactionData","dev.kord.core.cache.data.ReactionRemoveEmojiData.emoji"]},{"name":"val emojiAnimated: Boolean","description":"dev.kord.core.cache.data.ReactionData.emojiAnimated","location":"core/dev.kord.core.cache.data/-reaction-data/emoji-animated.html","searchKeys":["emojiAnimated","val emojiAnimated: Boolean","dev.kord.core.cache.data.ReactionData.emojiAnimated"]},{"name":"val emojiId: Snowflake?","description":"dev.kord.core.cache.data.WelcomeScreenChannelData.emojiId","location":"core/dev.kord.core.cache.data/-welcome-screen-channel-data/emoji-id.html","searchKeys":["emojiId","val emojiId: Snowflake?","dev.kord.core.cache.data.WelcomeScreenChannelData.emojiId"]},{"name":"val emojiId: Snowflake?","description":"dev.kord.core.entity.channel.WelcomeScreenChannel.emojiId","location":"core/dev.kord.core.entity.channel/-welcome-screen-channel/emoji-id.html","searchKeys":["emojiId","val emojiId: Snowflake?","dev.kord.core.entity.channel.WelcomeScreenChannel.emojiId"]},{"name":"val emojiId: Snowflake? = null","description":"dev.kord.core.cache.data.ReactionData.emojiId","location":"core/dev.kord.core.cache.data/-reaction-data/emoji-id.html","searchKeys":["emojiId","val emojiId: Snowflake? = null","dev.kord.core.cache.data.ReactionData.emojiId"]},{"name":"val emojiIds: Set<Snowflake>","description":"dev.kord.core.entity.Guild.emojiIds","location":"core/dev.kord.core.entity/-guild/emoji-ids.html","searchKeys":["emojiIds","val emojiIds: Set<Snowflake>","dev.kord.core.entity.Guild.emojiIds"]},{"name":"val emojiName: String?","description":"dev.kord.core.cache.data.WelcomeScreenChannelData.emojiName","location":"core/dev.kord.core.cache.data/-welcome-screen-channel-data/emoji-name.html","searchKeys":["emojiName","val emojiName: String?","dev.kord.core.cache.data.WelcomeScreenChannelData.emojiName"]},{"name":"val emojiName: String?","description":"dev.kord.core.entity.channel.WelcomeScreenChannel.emojiName","location":"core/dev.kord.core.entity.channel/-welcome-screen-channel/emoji-name.html","searchKeys":["emojiName","val emojiName: String?","dev.kord.core.entity.channel.WelcomeScreenChannel.emojiName"]},{"name":"val emojiName: String? = null","description":"dev.kord.core.cache.data.ReactionData.emojiName","location":"core/dev.kord.core.cache.data/-reaction-data/emoji-name.html","searchKeys":["emojiName","val emojiName: String? = null","dev.kord.core.cache.data.ReactionData.emojiName"]},{"name":"val emojis: List<EmojiData>","description":"dev.kord.core.cache.data.GuildPreviewData.emojis","location":"core/dev.kord.core.cache.data/-guild-preview-data/emojis.html","searchKeys":["emojis","val emojis: List<EmojiData>","dev.kord.core.cache.data.GuildPreviewData.emojis"]},{"name":"val emojis: List<Snowflake>","description":"dev.kord.core.cache.data.GuildData.emojis","location":"core/dev.kord.core.cache.data/-guild-data/emojis.html","searchKeys":["emojis","val emojis: List<Snowflake>","dev.kord.core.cache.data.GuildData.emojis"]},{"name":"val emojis: Set<GuildEmoji>","description":"dev.kord.core.entity.GuildPreview.emojis","location":"core/dev.kord.core.entity/-guild-preview/emojis.html","searchKeys":["emojis","val emojis: Set<GuildEmoji>","dev.kord.core.entity.GuildPreview.emojis"]},{"name":"val emojis: Set<GuildEmoji>","description":"dev.kord.core.event.guild.EmojisUpdateEvent.emojis","location":"core/dev.kord.core.event.guild/-emojis-update-event/emojis.html","searchKeys":["emojis","val emojis: Set<GuildEmoji>","dev.kord.core.event.guild.EmojisUpdateEvent.emojis"]},{"name":"val enableEmoticons: OptionalBoolean","description":"dev.kord.core.cache.data.IntegrationData.enableEmoticons","location":"core/dev.kord.core.cache.data/-integration-data/enable-emoticons.html","searchKeys":["enableEmoticons","val enableEmoticons: OptionalBoolean","dev.kord.core.cache.data.IntegrationData.enableEmoticons"]},{"name":"val enabled: Boolean","description":"dev.kord.core.cache.data.AutoModerationRuleData.enabled","location":"core/dev.kord.core.cache.data/-auto-moderation-rule-data/enabled.html","searchKeys":["enabled","val enabled: Boolean","dev.kord.core.cache.data.AutoModerationRuleData.enabled"]},{"name":"val enabled: Boolean","description":"dev.kord.core.cache.data.GuildWidgetData.enabled","location":"core/dev.kord.core.cache.data/-guild-widget-data/enabled.html","searchKeys":["enabled","val enabled: Boolean","dev.kord.core.cache.data.GuildWidgetData.enabled"]},{"name":"val enabled: Boolean","description":"dev.kord.core.cache.data.IntegrationData.enabled","location":"core/dev.kord.core.cache.data/-integration-data/enabled.html","searchKeys":["enabled","val enabled: Boolean","dev.kord.core.cache.data.IntegrationData.enabled"]},{"name":"val enablesEmoticons: Boolean","description":"dev.kord.core.entity.Integration.enablesEmoticons","location":"core/dev.kord.core.entity/-integration/enables-emoticons.html","searchKeys":["enablesEmoticons","val enablesEmoticons: Boolean","dev.kord.core.entity.Integration.enablesEmoticons"]},{"name":"val end: Instant?","description":"dev.kord.core.entity.Activity.end","location":"core/dev.kord.core.entity/-activity/end.html","searchKeys":["end","val end: Instant?","dev.kord.core.entity.Activity.end"]},{"name":"val endpoint: String?","description":"dev.kord.core.event.guild.VoiceServerUpdateEvent.endpoint","location":"core/dev.kord.core.event.guild/-voice-server-update-event/endpoint.html","searchKeys":["endpoint","val endpoint: String?","dev.kord.core.event.guild.VoiceServerUpdateEvent.endpoint"]},{"name":"val entityId: Snowflake?","description":"dev.kord.core.cache.data.GuildScheduledEventData.entityId","location":"core/dev.kord.core.cache.data/-guild-scheduled-event-data/entity-id.html","searchKeys":["entityId","val entityId: Snowflake?","dev.kord.core.cache.data.GuildScheduledEventData.entityId"]},{"name":"val entityId: Snowflake?","description":"dev.kord.core.entity.GuildScheduledEvent.entityId","location":"core/dev.kord.core.entity/-guild-scheduled-event/entity-id.html","searchKeys":["entityId","val entityId: Snowflake?","dev.kord.core.entity.GuildScheduledEvent.entityId"]},{"name":"val entityMetadata: GuildScheduledEventEntityMetadata?","description":"dev.kord.core.cache.data.GuildScheduledEventData.entityMetadata","location":"core/dev.kord.core.cache.data/-guild-scheduled-event-data/entity-metadata.html","searchKeys":["entityMetadata","val entityMetadata: GuildScheduledEventEntityMetadata?","dev.kord.core.cache.data.GuildScheduledEventData.entityMetadata"]},{"name":"val entityMetadata: GuildScheduledEventEntityMetadata?","description":"dev.kord.core.entity.GuildScheduledEvent.entityMetadata","location":"core/dev.kord.core.entity/-guild-scheduled-event/entity-metadata.html","searchKeys":["entityMetadata","val entityMetadata: GuildScheduledEventEntityMetadata?","dev.kord.core.entity.GuildScheduledEvent.entityMetadata"]},{"name":"val entityType: ScheduledEntityType","description":"dev.kord.core.cache.data.GuildScheduledEventData.entityType","location":"core/dev.kord.core.cache.data/-guild-scheduled-event-data/entity-type.html","searchKeys":["entityType","val entityType: ScheduledEntityType","dev.kord.core.cache.data.GuildScheduledEventData.entityType"]},{"name":"val entityType: ScheduledEntityType","description":"dev.kord.core.entity.GuildScheduledEvent.entityType","location":"core/dev.kord.core.entity/-guild-scheduled-event/entity-type.html","searchKeys":["entityType","val entityType: ScheduledEntityType","dev.kord.core.entity.GuildScheduledEvent.entityType"]},{"name":"val entries: List<AuditLogEntry>","description":"dev.kord.core.entity.AuditLog.entries","location":"core/dev.kord.core.entity/-audit-log/entries.html","searchKeys":["entries","val entries: List<AuditLogEntry>","dev.kord.core.entity.AuditLog.entries"]},{"name":"val ephemeral: OptionalBoolean","description":"dev.kord.core.cache.data.AttachmentData.ephemeral","location":"core/dev.kord.core.cache.data/-attachment-data/ephemeral.html","searchKeys":["ephemeral","val ephemeral: OptionalBoolean","dev.kord.core.cache.data.AttachmentData.ephemeral"]},{"name":"val event: Event","description":"dev.kord.core.gateway.ShardEvent.event","location":"core/dev.kord.core.gateway/-shard-event/event.html","searchKeys":["event","val event: Event","dev.kord.core.gateway.ShardEvent.event"]},{"name":"val event: Event","description":"dev.kord.core.live.exception.LiveCancellationException.event","location":"core/dev.kord.core.live.exception/-live-cancellation-exception/event.html","searchKeys":["event","val event: Event","dev.kord.core.live.exception.LiveCancellationException.event"]},{"name":"val eventType: AutoModerationRuleEventType","description":"dev.kord.core.cache.data.AutoModerationRuleData.eventType","location":"core/dev.kord.core.cache.data/-auto-moderation-rule-data/event-type.html","searchKeys":["eventType","val eventType: AutoModerationRuleEventType","dev.kord.core.cache.data.AutoModerationRuleData.eventType"]},{"name":"val eventType: AutoModerationRuleEventType","description":"dev.kord.core.entity.automoderation.AutoModerationRule.eventType","location":"core/dev.kord.core.entity.automoderation/-auto-moderation-rule/event-type.html","searchKeys":["eventType","val eventType: AutoModerationRuleEventType","dev.kord.core.entity.automoderation.AutoModerationRule.eventType"]},{"name":"val events: SharedFlow<Event>","description":"dev.kord.core.Kord.events","location":"core/dev.kord.core/-kord/events.html","searchKeys":["events","val events: SharedFlow<Event>","dev.kord.core.Kord.events"]},{"name":"val everyoneRole: RoleBehavior","description":"dev.kord.core.entity.Guild.everyoneRole","location":"core/dev.kord.core.entity/-guild/everyone-role.html","searchKeys":["everyoneRole","val everyoneRole: RoleBehavior","dev.kord.core.entity.Guild.everyoneRole"]},{"name":"val exemptChannelIds: List<Snowflake>","description":"dev.kord.core.entity.automoderation.AutoModerationRule.exemptChannelIds","location":"core/dev.kord.core.entity.automoderation/-auto-moderation-rule/exempt-channel-ids.html","searchKeys":["exemptChannelIds","val exemptChannelIds: List<Snowflake>","dev.kord.core.entity.automoderation.AutoModerationRule.exemptChannelIds"]},{"name":"val exemptChannels: List<GuildMessageChannelBehavior>","description":"dev.kord.core.entity.automoderation.AutoModerationRule.exemptChannels","location":"core/dev.kord.core.entity.automoderation/-auto-moderation-rule/exempt-channels.html","searchKeys":["exemptChannels","val exemptChannels: List<GuildMessageChannelBehavior>","dev.kord.core.entity.automoderation.AutoModerationRule.exemptChannels"]},{"name":"val exemptChannels: List<Snowflake>","description":"dev.kord.core.cache.data.AutoModerationRuleData.exemptChannels","location":"core/dev.kord.core.cache.data/-auto-moderation-rule-data/exempt-channels.html","searchKeys":["exemptChannels","val exemptChannels: List<Snowflake>","dev.kord.core.cache.data.AutoModerationRuleData.exemptChannels"]},{"name":"val exemptRoleIds: List<Snowflake>","description":"dev.kord.core.entity.automoderation.AutoModerationRule.exemptRoleIds","location":"core/dev.kord.core.entity.automoderation/-auto-moderation-rule/exempt-role-ids.html","searchKeys":["exemptRoleIds","val exemptRoleIds: List<Snowflake>","dev.kord.core.entity.automoderation.AutoModerationRule.exemptRoleIds"]},{"name":"val exemptRoles: List<RoleBehavior>","description":"dev.kord.core.entity.automoderation.AutoModerationRule.exemptRoles","location":"core/dev.kord.core.entity.automoderation/-auto-moderation-rule/exempt-roles.html","searchKeys":["exemptRoles","val exemptRoles: List<RoleBehavior>","dev.kord.core.entity.automoderation.AutoModerationRule.exemptRoles"]},{"name":"val exemptRoles: List<Snowflake>","description":"dev.kord.core.cache.data.AutoModerationRuleData.exemptRoles","location":"core/dev.kord.core.cache.data/-auto-moderation-rule-data/exempt-roles.html","searchKeys":["exemptRoles","val exemptRoles: List<Snowflake>","dev.kord.core.cache.data.AutoModerationRuleData.exemptRoles"]},{"name":"val expireBehavior: IntegrationExpireBehavior","description":"dev.kord.core.cache.data.IntegrationData.expireBehavior","location":"core/dev.kord.core.cache.data/-integration-data/expire-behavior.html","searchKeys":["expireBehavior","val expireBehavior: IntegrationExpireBehavior","dev.kord.core.cache.data.IntegrationData.expireBehavior"]},{"name":"val expireBehavior: IntegrationExpireBehavior","description":"dev.kord.core.entity.Integration.expireBehavior","location":"core/dev.kord.core.entity/-integration/expire-behavior.html","searchKeys":["expireBehavior","val expireBehavior: IntegrationExpireBehavior","dev.kord.core.entity.Integration.expireBehavior"]},{"name":"val expireGracePeriod: Duration","description":"dev.kord.core.entity.Integration.expireGracePeriod","location":"core/dev.kord.core.entity/-integration/expire-grace-period.html","searchKeys":["expireGracePeriod","val expireGracePeriod: Duration","dev.kord.core.entity.Integration.expireGracePeriod"]},{"name":"val expireGracePeriod: DurationInDays","description":"dev.kord.core.cache.data.IntegrationData.expireGracePeriod","location":"core/dev.kord.core.cache.data/-integration-data/expire-grace-period.html","searchKeys":["expireGracePeriod","val expireGracePeriod: DurationInDays","dev.kord.core.cache.data.IntegrationData.expireGracePeriod"]},{"name":"val expiresAt: Instant?","description":"dev.kord.core.entity.Invite.expiresAt","location":"core/dev.kord.core.entity/-invite/expires-at.html","searchKeys":["expiresAt","val expiresAt: Instant?","dev.kord.core.entity.Invite.expiresAt"]},{"name":"val explicitContentFilter: ExplicitContentFilter","description":"dev.kord.core.cache.data.GuildData.explicitContentFilter","location":"core/dev.kord.core.cache.data/-guild-data/explicit-content-filter.html","searchKeys":["explicitContentFilter","val explicitContentFilter: ExplicitContentFilter","dev.kord.core.cache.data.GuildData.explicitContentFilter"]},{"name":"val features: List<GuildFeature>","description":"dev.kord.core.cache.data.GuildData.features","location":"core/dev.kord.core.cache.data/-guild-data/features.html","searchKeys":["features","val features: List<GuildFeature>","dev.kord.core.cache.data.GuildData.features"]},{"name":"val features: List<GuildFeature>","description":"dev.kord.core.cache.data.GuildPreviewData.features","location":"core/dev.kord.core.cache.data/-guild-preview-data/features.html","searchKeys":["features","val features: List<GuildFeature>","dev.kord.core.cache.data.GuildPreviewData.features"]},{"name":"val features: List<GuildFeature>","description":"dev.kord.core.cache.data.PartialGuildData.features","location":"core/dev.kord.core.cache.data/-partial-guild-data/features.html","searchKeys":["features","val features: List<GuildFeature>","dev.kord.core.cache.data.PartialGuildData.features"]},{"name":"val features: Set<GuildFeature>","description":"dev.kord.core.entity.Guild.features","location":"core/dev.kord.core.entity/-guild/features.html","searchKeys":["features","val features: Set<GuildFeature>","dev.kord.core.entity.Guild.features"]},{"name":"val features: Set<GuildFeature>","description":"dev.kord.core.entity.GuildPreview.features","location":"core/dev.kord.core.entity/-guild-preview/features.html","searchKeys":["features","val features: Set<GuildFeature>","dev.kord.core.entity.GuildPreview.features"]},{"name":"val fields: List<Embed.Field>","description":"dev.kord.core.entity.Embed.fields","location":"core/dev.kord.core.entity/-embed/fields.html","searchKeys":["fields","val fields: List<Embed.Field>","dev.kord.core.entity.Embed.fields"]},{"name":"val fields: Optional<List<EmbedFieldData>>","description":"dev.kord.core.cache.data.EmbedData.fields","location":"core/dev.kord.core.cache.data/-embed-data/fields.html","searchKeys":["fields","val fields: Optional<List<EmbedFieldData>>","dev.kord.core.cache.data.EmbedData.fields"]},{"name":"val filename: String","description":"dev.kord.core.cache.data.AttachmentData.filename","location":"core/dev.kord.core.cache.data/-attachment-data/filename.html","searchKeys":["filename","val filename: String","dev.kord.core.cache.data.AttachmentData.filename"]},{"name":"val filename: String","description":"dev.kord.core.entity.Attachment.filename","location":"core/dev.kord.core.entity/-attachment/filename.html","searchKeys":["filename","val filename: String","dev.kord.core.entity.Attachment.filename"]},{"name":"val flags: ActivityFlags?","description":"dev.kord.core.entity.Activity.flags","location":"core/dev.kord.core.entity/-activity/flags.html","searchKeys":["flags","val flags: ActivityFlags?","dev.kord.core.entity.Activity.flags"]},{"name":"val flags: ApplicationFlags?","description":"dev.kord.core.entity.BaseApplication.flags","location":"core/dev.kord.core.entity/-base-application/flags.html","searchKeys":["flags","val flags: ApplicationFlags?","dev.kord.core.entity.BaseApplication.flags"]},{"name":"val flags: Int","description":"dev.kord.core.cache.data.ThreadMemberData.flags","location":"core/dev.kord.core.cache.data/-thread-member-data/flags.html","searchKeys":["flags","val flags: Int","dev.kord.core.cache.data.ThreadMemberData.flags"]},{"name":"val flags: Int","description":"dev.kord.core.entity.channel.thread.ThreadMember.flags","location":"core/dev.kord.core.entity.channel.thread/-thread-member/flags.html","searchKeys":["flags","val flags: Int","dev.kord.core.entity.channel.thread.ThreadMember.flags"]},{"name":"val flags: MessageFlags?","description":"dev.kord.core.entity.Message.flags","location":"core/dev.kord.core.entity/-message/flags.html","searchKeys":["flags","val flags: MessageFlags?","dev.kord.core.entity.Message.flags"]},{"name":"val flags: Optional<ActivityFlags>","description":"dev.kord.core.cache.data.ActivityData.flags","location":"core/dev.kord.core.cache.data/-activity-data/flags.html","searchKeys":["flags","val flags: Optional<ActivityFlags>","dev.kord.core.cache.data.ActivityData.flags"]},{"name":"val flags: Optional<MessageFlags>","description":"dev.kord.core.cache.data.MessageData.flags","location":"core/dev.kord.core.cache.data/-message-data/flags.html","searchKeys":["flags","val flags: Optional<MessageFlags>","dev.kord.core.cache.data.MessageData.flags"]},{"name":"val focused: OptionalBoolean","description":"dev.kord.core.cache.data.OptionData.focused","location":"core/dev.kord.core.cache.data/-option-data/focused.html","searchKeys":["focused","val focused: OptionalBoolean","dev.kord.core.cache.data.OptionData.focused"]},{"name":"val footer: Embed.Footer?","description":"dev.kord.core.entity.Embed.footer","location":"core/dev.kord.core.entity/-embed/footer.html","searchKeys":["footer","val footer: Embed.Footer?","dev.kord.core.entity.Embed.footer"]},{"name":"val footer: Optional<EmbedFooterData>","description":"dev.kord.core.cache.data.EmbedData.footer","location":"core/dev.kord.core.cache.data/-embed-data/footer.html","searchKeys":["footer","val footer: Optional<EmbedFooterData>","dev.kord.core.cache.data.EmbedData.footer"]},{"name":"val format: Image.Format","description":"dev.kord.core.entity.Icon.format","location":"core/dev.kord.core.entity/-icon/format.html","searchKeys":["format","val format: Image.Format","dev.kord.core.entity.Icon.format"]},{"name":"val formatType: MessageStickerType","description":"dev.kord.core.cache.data.StickerData.formatType","location":"core/dev.kord.core.cache.data/-sticker-data/format-type.html","searchKeys":["formatType","val formatType: MessageStickerType","dev.kord.core.cache.data.StickerData.formatType"]},{"name":"val formatType: MessageStickerType","description":"dev.kord.core.cache.data.StickerItemData.formatType","location":"core/dev.kord.core.cache.data/-sticker-item-data/format-type.html","searchKeys":["formatType","val formatType: MessageStickerType","dev.kord.core.cache.data.StickerItemData.formatType"]},{"name":"val formatType: MessageStickerType","description":"dev.kord.core.entity.Sticker.formatType","location":"core/dev.kord.core.entity/-sticker/format-type.html","searchKeys":["formatType","val formatType: MessageStickerType","dev.kord.core.entity.Sticker.formatType"]},{"name":"val formatType: MessageStickerType","description":"dev.kord.core.entity.StickerItem.formatType","location":"core/dev.kord.core.entity/-sticker-item/format-type.html","searchKeys":["formatType","val formatType: MessageStickerType","dev.kord.core.entity.StickerItem.formatType"]},{"name":"val gateway: Gateway","description":"dev.kord.core.gateway.ShardEvent.gateway","location":"core/dev.kord.core.gateway/-shard-event/gateway.html","searchKeys":["gateway","val gateway: Gateway","dev.kord.core.gateway.ShardEvent.gateway"]},{"name":"val gateway: MasterGateway","description":"dev.kord.core.Kord.gateway","location":"core/dev.kord.core/-kord/gateway.html","searchKeys":["gateway","val gateway: MasterGateway","dev.kord.core.Kord.gateway"]},{"name":"val gatewayVersion: Int","description":"dev.kord.core.event.gateway.ReadyEvent.gatewayVersion","location":"core/dev.kord.core.event.gateway/-ready-event/gateway-version.html","searchKeys":["gatewayVersion","val gatewayVersion: Int","dev.kord.core.event.gateway.ReadyEvent.gatewayVersion"]},{"name":"val groupName: String","description":"dev.kord.core.entity.interaction.GroupCommand.groupName","location":"core/dev.kord.core.entity.interaction/-group-command/group-name.html","searchKeys":["groupName","val groupName: String","dev.kord.core.entity.interaction.GroupCommand.groupName"]},{"name":"val guild: Guild","description":"dev.kord.core.event.guild.GuildCreateEvent.guild","location":"core/dev.kord.core.event.guild/-guild-create-event/guild.html","searchKeys":["guild","val guild: Guild","dev.kord.core.event.guild.GuildCreateEvent.guild"]},{"name":"val guild: Guild","description":"dev.kord.core.event.guild.GuildUpdateEvent.guild","location":"core/dev.kord.core.event.guild/-guild-update-event/guild.html","searchKeys":["guild","val guild: Guild","dev.kord.core.event.guild.GuildUpdateEvent.guild"]},{"name":"val guild: Guild?","description":"dev.kord.core.event.guild.GuildDeleteEvent.guild","location":"core/dev.kord.core.event.guild/-guild-delete-event/guild.html","searchKeys":["guild","val guild: Guild?","dev.kord.core.event.guild.GuildDeleteEvent.guild"]},{"name":"val guild: GuildBehavior","description":"dev.kord.core.entity.GuildWidget.guild","location":"core/dev.kord.core.entity/-guild-widget/guild.html","searchKeys":["guild","val guild: GuildBehavior","dev.kord.core.entity.GuildWidget.guild"]},{"name":"val guild: GuildBehavior","description":"dev.kord.core.entity.Integration.guild","location":"core/dev.kord.core.entity/-integration/guild.html","searchKeys":["guild","val guild: GuildBehavior","dev.kord.core.entity.Integration.guild"]},{"name":"val guild: GuildBehavior","description":"dev.kord.core.entity.PermissionOverwriteEntity.guild","location":"core/dev.kord.core.entity/-permission-overwrite-entity/guild.html","searchKeys":["guild","val guild: GuildBehavior","dev.kord.core.entity.PermissionOverwriteEntity.guild"]},{"name":"val guild: GuildBehavior","description":"dev.kord.core.entity.RoleTags.guild","location":"core/dev.kord.core.entity/-role-tags/guild.html","searchKeys":["guild","val guild: GuildBehavior","dev.kord.core.entity.RoleTags.guild"]},{"name":"val guild: GuildBehavior","description":"dev.kord.core.entity.channel.thread.DeletedThreadChannel.guild","location":"core/dev.kord.core.entity.channel.thread/-deleted-thread-channel/guild.html","searchKeys":["guild","val guild: GuildBehavior","dev.kord.core.entity.channel.thread.DeletedThreadChannel.guild"]},{"name":"val guild: GuildBehavior","description":"dev.kord.core.event.channel.thread.ThreadListSyncEvent.guild","location":"core/dev.kord.core.event.channel.thread/-thread-list-sync-event/guild.html","searchKeys":["guild","val guild: GuildBehavior","dev.kord.core.event.channel.thread.ThreadListSyncEvent.guild"]},{"name":"val guild: GuildBehavior","description":"dev.kord.core.event.guild.BanAddEvent.guild","location":"core/dev.kord.core.event.guild/-ban-add-event/guild.html","searchKeys":["guild","val guild: GuildBehavior","dev.kord.core.event.guild.BanAddEvent.guild"]},{"name":"val guild: GuildBehavior","description":"dev.kord.core.event.guild.BanRemoveEvent.guild","location":"core/dev.kord.core.event.guild/-ban-remove-event/guild.html","searchKeys":["guild","val guild: GuildBehavior","dev.kord.core.event.guild.BanRemoveEvent.guild"]},{"name":"val guild: GuildBehavior","description":"dev.kord.core.event.guild.EmojisUpdateEvent.guild","location":"core/dev.kord.core.event.guild/-emojis-update-event/guild.html","searchKeys":["guild","val guild: GuildBehavior","dev.kord.core.event.guild.EmojisUpdateEvent.guild"]},{"name":"val guild: GuildBehavior","description":"dev.kord.core.event.guild.IntegrationsUpdateEvent.guild","location":"core/dev.kord.core.event.guild/-integrations-update-event/guild.html","searchKeys":["guild","val guild: GuildBehavior","dev.kord.core.event.guild.IntegrationsUpdateEvent.guild"]},{"name":"val guild: GuildBehavior","description":"dev.kord.core.event.guild.MemberJoinEvent.guild","location":"core/dev.kord.core.event.guild/-member-join-event/guild.html","searchKeys":["guild","val guild: GuildBehavior","dev.kord.core.event.guild.MemberJoinEvent.guild"]},{"name":"val guild: GuildBehavior","description":"dev.kord.core.event.guild.MemberLeaveEvent.guild","location":"core/dev.kord.core.event.guild/-member-leave-event/guild.html","searchKeys":["guild","val guild: GuildBehavior","dev.kord.core.event.guild.MemberLeaveEvent.guild"]},{"name":"val guild: GuildBehavior","description":"dev.kord.core.event.guild.MemberUpdateEvent.guild","location":"core/dev.kord.core.event.guild/-member-update-event/guild.html","searchKeys":["guild","val guild: GuildBehavior","dev.kord.core.event.guild.MemberUpdateEvent.guild"]},{"name":"val guild: GuildBehavior","description":"dev.kord.core.event.guild.MembersChunkEvent.guild","location":"core/dev.kord.core.event.guild/-members-chunk-event/guild.html","searchKeys":["guild","val guild: GuildBehavior","dev.kord.core.event.guild.MembersChunkEvent.guild"]},{"name":"val guild: GuildBehavior","description":"dev.kord.core.event.guild.VoiceServerUpdateEvent.guild","location":"core/dev.kord.core.event.guild/-voice-server-update-event/guild.html","searchKeys":["guild","val guild: GuildBehavior","dev.kord.core.event.guild.VoiceServerUpdateEvent.guild"]},{"name":"val guild: GuildBehavior","description":"dev.kord.core.event.guild.WebhookUpdateEvent.guild","location":"core/dev.kord.core.event.guild/-webhook-update-event/guild.html","searchKeys":["guild","val guild: GuildBehavior","dev.kord.core.event.guild.WebhookUpdateEvent.guild"]},{"name":"val guild: GuildBehavior","description":"dev.kord.core.event.message.ReactionRemoveEmojiEvent.guild","location":"core/dev.kord.core.event.message/-reaction-remove-emoji-event/guild.html","searchKeys":["guild","val guild: GuildBehavior","dev.kord.core.event.message.ReactionRemoveEmojiEvent.guild"]},{"name":"val guild: GuildBehavior","description":"dev.kord.core.event.role.RoleCreateEvent.guild","location":"core/dev.kord.core.event.role/-role-create-event/guild.html","searchKeys":["guild","val guild: GuildBehavior","dev.kord.core.event.role.RoleCreateEvent.guild"]},{"name":"val guild: GuildBehavior","description":"dev.kord.core.event.role.RoleDeleteEvent.guild","location":"core/dev.kord.core.event.role/-role-delete-event/guild.html","searchKeys":["guild","val guild: GuildBehavior","dev.kord.core.event.role.RoleDeleteEvent.guild"]},{"name":"val guild: GuildBehavior","description":"dev.kord.core.event.role.RoleUpdateEvent.guild","location":"core/dev.kord.core.event.role/-role-update-event/guild.html","searchKeys":["guild","val guild: GuildBehavior","dev.kord.core.event.role.RoleUpdateEvent.guild"]},{"name":"val guild: GuildBehavior","description":"dev.kord.core.event.user.PresenceUpdateEvent.guild","location":"core/dev.kord.core.event.user/-presence-update-event/guild.html","searchKeys":["guild","val guild: GuildBehavior","dev.kord.core.event.user.PresenceUpdateEvent.guild"]},{"name":"val guild: GuildBehavior?","description":"dev.kord.core.entity.BaseApplication.guild","location":"core/dev.kord.core.entity/-base-application/guild.html","searchKeys":["guild","val guild: GuildBehavior?","dev.kord.core.entity.BaseApplication.guild"]},{"name":"val guild: GuildBehavior?","description":"dev.kord.core.entity.MessageReference.guild","location":"core/dev.kord.core.entity/-message-reference/guild.html","searchKeys":["guild","val guild: GuildBehavior?","dev.kord.core.entity.MessageReference.guild"]},{"name":"val guild: GuildBehavior?","description":"dev.kord.core.entity.Webhook.guild","location":"core/dev.kord.core.entity/-webhook/guild.html","searchKeys":["guild","val guild: GuildBehavior?","dev.kord.core.entity.Webhook.guild"]},{"name":"val guild: GuildBehavior?","description":"dev.kord.core.event.channel.ChannelPinsUpdateEvent.guild","location":"core/dev.kord.core.event.channel/-channel-pins-update-event/guild.html","searchKeys":["guild","val guild: GuildBehavior?","dev.kord.core.event.channel.ChannelPinsUpdateEvent.guild"]},{"name":"val guild: GuildBehavior?","description":"dev.kord.core.event.channel.TypingStartEvent.guild","location":"core/dev.kord.core.event.channel/-typing-start-event/guild.html","searchKeys":["guild","val guild: GuildBehavior?","dev.kord.core.event.channel.TypingStartEvent.guild"]},{"name":"val guild: GuildBehavior?","description":"dev.kord.core.event.guild.InviteCreateEvent.guild","location":"core/dev.kord.core.event.guild/-invite-create-event/guild.html","searchKeys":["guild","val guild: GuildBehavior?","dev.kord.core.event.guild.InviteCreateEvent.guild"]},{"name":"val guild: GuildBehavior?","description":"dev.kord.core.event.guild.InviteDeleteEvent.guild","location":"core/dev.kord.core.event.guild/-invite-delete-event/guild.html","searchKeys":["guild","val guild: GuildBehavior?","dev.kord.core.event.guild.InviteDeleteEvent.guild"]},{"name":"val guild: GuildBehavior?","description":"dev.kord.core.event.message.MessageBulkDeleteEvent.guild","location":"core/dev.kord.core.event.message/-message-bulk-delete-event/guild.html","searchKeys":["guild","val guild: GuildBehavior?","dev.kord.core.event.message.MessageBulkDeleteEvent.guild"]},{"name":"val guild: GuildBehavior?","description":"dev.kord.core.event.message.MessageDeleteEvent.guild","location":"core/dev.kord.core.event.message/-message-delete-event/guild.html","searchKeys":["guild","val guild: GuildBehavior?","dev.kord.core.event.message.MessageDeleteEvent.guild"]},{"name":"val guild: GuildBehavior?","description":"dev.kord.core.event.message.ReactionAddEvent.guild","location":"core/dev.kord.core.event.message/-reaction-add-event/guild.html","searchKeys":["guild","val guild: GuildBehavior?","dev.kord.core.event.message.ReactionAddEvent.guild"]},{"name":"val guild: GuildBehavior?","description":"dev.kord.core.event.message.ReactionRemoveAllEvent.guild","location":"core/dev.kord.core.event.message/-reaction-remove-all-event/guild.html","searchKeys":["guild","val guild: GuildBehavior?","dev.kord.core.event.message.ReactionRemoveAllEvent.guild"]},{"name":"val guild: GuildBehavior?","description":"dev.kord.core.event.message.ReactionRemoveEvent.guild","location":"core/dev.kord.core.event.message/-reaction-remove-event/guild.html","searchKeys":["guild","val guild: GuildBehavior?","dev.kord.core.event.message.ReactionRemoveEvent.guild"]},{"name":"val guildId: OptionalSnowflake","description":"dev.kord.core.cache.data.ApplicationCommandData.guildId","location":"core/dev.kord.core.cache.data/-application-command-data/guild-id.html","searchKeys":["guildId","val guildId: OptionalSnowflake","dev.kord.core.cache.data.ApplicationCommandData.guildId"]},{"name":"val guildId: OptionalSnowflake","description":"dev.kord.core.cache.data.ApplicationInteractionData.guildId","location":"core/dev.kord.core.cache.data/-application-interaction-data/guild-id.html","searchKeys":["guildId","val guildId: OptionalSnowflake","dev.kord.core.cache.data.ApplicationInteractionData.guildId"]},{"name":"val guildId: OptionalSnowflake","description":"dev.kord.core.cache.data.ChannelData.guildId","location":"core/dev.kord.core.cache.data/-channel-data/guild-id.html","searchKeys":["guildId","val guildId: OptionalSnowflake","dev.kord.core.cache.data.ChannelData.guildId"]},{"name":"val guildId: OptionalSnowflake","description":"dev.kord.core.cache.data.InteractionData.guildId","location":"core/dev.kord.core.cache.data/-interaction-data/guild-id.html","searchKeys":["guildId","val guildId: OptionalSnowflake","dev.kord.core.cache.data.InteractionData.guildId"]},{"name":"val guildId: OptionalSnowflake","description":"dev.kord.core.cache.data.InviteCreateData.guildId","location":"core/dev.kord.core.cache.data/-invite-create-data/guild-id.html","searchKeys":["guildId","val guildId: OptionalSnowflake","dev.kord.core.cache.data.InviteCreateData.guildId"]},{"name":"val guildId: OptionalSnowflake","description":"dev.kord.core.cache.data.InviteDeleteData.guildId","location":"core/dev.kord.core.cache.data/-invite-delete-data/guild-id.html","searchKeys":["guildId","val guildId: OptionalSnowflake","dev.kord.core.cache.data.InviteDeleteData.guildId"]},{"name":"val guildId: OptionalSnowflake","description":"dev.kord.core.cache.data.MessageData.guildId","location":"core/dev.kord.core.cache.data/-message-data/guild-id.html","searchKeys":["guildId","val guildId: OptionalSnowflake","dev.kord.core.cache.data.MessageData.guildId"]},{"name":"val guildId: OptionalSnowflake","description":"dev.kord.core.cache.data.MessageReferenceData.guildId","location":"core/dev.kord.core.cache.data/-message-reference-data/guild-id.html","searchKeys":["guildId","val guildId: OptionalSnowflake","dev.kord.core.cache.data.MessageReferenceData.guildId"]},{"name":"val guildId: OptionalSnowflake","description":"dev.kord.core.cache.data.RegionData.guildId","location":"core/dev.kord.core.cache.data/-region-data/guild-id.html","searchKeys":["guildId","val guildId: OptionalSnowflake","dev.kord.core.cache.data.RegionData.guildId"]},{"name":"val guildId: OptionalSnowflake","description":"dev.kord.core.cache.data.StickerData.guildId","location":"core/dev.kord.core.cache.data/-sticker-data/guild-id.html","searchKeys":["guildId","val guildId: OptionalSnowflake","dev.kord.core.cache.data.StickerData.guildId"]},{"name":"val guildId: OptionalSnowflake","description":"dev.kord.core.cache.data.WebhookData.guildId","location":"core/dev.kord.core.cache.data/-webhook-data/guild-id.html","searchKeys":["guildId","val guildId: OptionalSnowflake","dev.kord.core.cache.data.WebhookData.guildId"]},{"name":"val guildId: OptionalSnowflake","description":"dev.kord.core.event.channel.data.ChannelPinsUpdateEventData.guildId","location":"core/dev.kord.core.event.channel.data/-channel-pins-update-event-data/guild-id.html","searchKeys":["guildId","val guildId: OptionalSnowflake","dev.kord.core.event.channel.data.ChannelPinsUpdateEventData.guildId"]},{"name":"val guildId: OptionalSnowflake","description":"dev.kord.core.event.channel.data.TypingStartEventData.guildId","location":"core/dev.kord.core.event.channel.data/-typing-start-event-data/guild-id.html","searchKeys":["guildId","val guildId: OptionalSnowflake","dev.kord.core.event.channel.data.TypingStartEventData.guildId"]},{"name":"val guildId: Snowflake","description":"dev.kord.core.cache.data.AutoModerationRuleData.guildId","location":"core/dev.kord.core.cache.data/-auto-moderation-rule-data/guild-id.html","searchKeys":["guildId","val guildId: Snowflake","dev.kord.core.cache.data.AutoModerationRuleData.guildId"]},{"name":"val guildId: Snowflake","description":"dev.kord.core.cache.data.BanData.guildId","location":"core/dev.kord.core.cache.data/-ban-data/guild-id.html","searchKeys":["guildId","val guildId: Snowflake","dev.kord.core.cache.data.BanData.guildId"]},{"name":"val guildId: Snowflake","description":"dev.kord.core.cache.data.EmojiData.guildId","location":"core/dev.kord.core.cache.data/-emoji-data/guild-id.html","searchKeys":["guildId","val guildId: Snowflake","dev.kord.core.cache.data.EmojiData.guildId"]},{"name":"val guildId: Snowflake","description":"dev.kord.core.cache.data.GuildApplicationCommandPermissionsData.guildId","location":"core/dev.kord.core.cache.data/-guild-application-command-permissions-data/guild-id.html","searchKeys":["guildId","val guildId: Snowflake","dev.kord.core.cache.data.GuildApplicationCommandPermissionsData.guildId"]},{"name":"val guildId: Snowflake","description":"dev.kord.core.cache.data.GuildScheduledEventData.guildId","location":"core/dev.kord.core.cache.data/-guild-scheduled-event-data/guild-id.html","searchKeys":["guildId","val guildId: Snowflake","dev.kord.core.cache.data.GuildScheduledEventData.guildId"]},{"name":"val guildId: Snowflake","description":"dev.kord.core.cache.data.IntegrationData.guildId","location":"core/dev.kord.core.cache.data/-integration-data/guild-id.html","searchKeys":["guildId","val guildId: Snowflake","dev.kord.core.cache.data.IntegrationData.guildId"]},{"name":"val guildId: Snowflake","description":"dev.kord.core.cache.data.MemberData.guildId","location":"core/dev.kord.core.cache.data/-member-data/guild-id.html","searchKeys":["guildId","val guildId: Snowflake","dev.kord.core.cache.data.MemberData.guildId"]},{"name":"val guildId: Snowflake","description":"dev.kord.core.cache.data.MembersChunkData.guildId","location":"core/dev.kord.core.cache.data/-members-chunk-data/guild-id.html","searchKeys":["guildId","val guildId: Snowflake","dev.kord.core.cache.data.MembersChunkData.guildId"]},{"name":"val guildId: Snowflake","description":"dev.kord.core.cache.data.PresenceData.guildId","location":"core/dev.kord.core.cache.data/-presence-data/guild-id.html","searchKeys":["guildId","val guildId: Snowflake","dev.kord.core.cache.data.PresenceData.guildId"]},{"name":"val guildId: Snowflake","description":"dev.kord.core.cache.data.ReactionRemoveEmojiData.guildId","location":"core/dev.kord.core.cache.data/-reaction-remove-emoji-data/guild-id.html","searchKeys":["guildId","val guildId: Snowflake","dev.kord.core.cache.data.ReactionRemoveEmojiData.guildId"]},{"name":"val guildId: Snowflake","description":"dev.kord.core.cache.data.RoleData.guildId","location":"core/dev.kord.core.cache.data/-role-data/guild-id.html","searchKeys":["guildId","val guildId: Snowflake","dev.kord.core.cache.data.RoleData.guildId"]},{"name":"val guildId: Snowflake","description":"dev.kord.core.cache.data.StageInstanceData.guildId","location":"core/dev.kord.core.cache.data/-stage-instance-data/guild-id.html","searchKeys":["guildId","val guildId: Snowflake","dev.kord.core.cache.data.StageInstanceData.guildId"]},{"name":"val guildId: Snowflake","description":"dev.kord.core.cache.data.ThreadListSyncData.guildId","location":"core/dev.kord.core.cache.data/-thread-list-sync-data/guild-id.html","searchKeys":["guildId","val guildId: Snowflake","dev.kord.core.cache.data.ThreadListSyncData.guildId"]},{"name":"val guildId: Snowflake","description":"dev.kord.core.cache.data.ThreadMembersUpdateEventData.guildId","location":"core/dev.kord.core.cache.data/-thread-members-update-event-data/guild-id.html","searchKeys":["guildId","val guildId: Snowflake","dev.kord.core.cache.data.ThreadMembersUpdateEventData.guildId"]},{"name":"val guildId: Snowflake","description":"dev.kord.core.cache.data.VoiceStateData.guildId","location":"core/dev.kord.core.cache.data/-voice-state-data/guild-id.html","searchKeys":["guildId","val guildId: Snowflake","dev.kord.core.cache.data.VoiceStateData.guildId"]},{"name":"val guildId: Snowflake","description":"dev.kord.core.entity.AuditLog.guildId","location":"core/dev.kord.core.entity/-audit-log/guild-id.html","searchKeys":["guildId","val guildId: Snowflake","dev.kord.core.entity.AuditLog.guildId"]},{"name":"val guildId: Snowflake","description":"dev.kord.core.entity.GuildEmoji.guildId","location":"core/dev.kord.core.entity/-guild-emoji/guild-id.html","searchKeys":["guildId","val guildId: Snowflake","dev.kord.core.entity.GuildEmoji.guildId"]},{"name":"val guildId: Snowflake","description":"dev.kord.core.entity.GuildWidget.guildId","location":"core/dev.kord.core.entity/-guild-widget/guild-id.html","searchKeys":["guildId","val guildId: Snowflake","dev.kord.core.entity.GuildWidget.guildId"]},{"name":"val guildId: Snowflake","description":"dev.kord.core.entity.Integration.guildId","location":"core/dev.kord.core.entity/-integration/guild-id.html","searchKeys":["guildId","val guildId: Snowflake","dev.kord.core.entity.Integration.guildId"]},{"name":"val guildId: Snowflake","description":"dev.kord.core.entity.PermissionOverwriteEntity.guildId","location":"core/dev.kord.core.entity/-permission-overwrite-entity/guild-id.html","searchKeys":["guildId","val guildId: Snowflake","dev.kord.core.entity.PermissionOverwriteEntity.guildId"]},{"name":"val guildId: Snowflake","description":"dev.kord.core.entity.Presence.guildId","location":"core/dev.kord.core.entity/-presence/guild-id.html","searchKeys":["guildId","val guildId: Snowflake","dev.kord.core.entity.Presence.guildId"]},{"name":"val guildId: Snowflake","description":"dev.kord.core.entity.RoleTags.guildId","location":"core/dev.kord.core.entity/-role-tags/guild-id.html","searchKeys":["guildId","val guildId: Snowflake","dev.kord.core.entity.RoleTags.guildId"]},{"name":"val guildId: Snowflake","description":"dev.kord.core.entity.StageInstance.guildId","location":"core/dev.kord.core.entity/-stage-instance/guild-id.html","searchKeys":["guildId","val guildId: Snowflake","dev.kord.core.entity.StageInstance.guildId"]},{"name":"val guildId: Snowflake","description":"dev.kord.core.entity.VoiceState.guildId","location":"core/dev.kord.core.entity/-voice-state/guild-id.html","searchKeys":["guildId","val guildId: Snowflake","dev.kord.core.entity.VoiceState.guildId"]},{"name":"val guildId: Snowflake","description":"dev.kord.core.entity.application.ApplicationCommandPermissions.guildId","location":"core/dev.kord.core.entity.application/-application-command-permissions/guild-id.html","searchKeys":["guildId","val guildId: Snowflake","dev.kord.core.entity.application.ApplicationCommandPermissions.guildId"]},{"name":"val guildId: Snowflake","description":"dev.kord.core.entity.channel.thread.DeletedThreadChannel.guildId","location":"core/dev.kord.core.entity.channel.thread/-deleted-thread-channel/guild-id.html","searchKeys":["guildId","val guildId: Snowflake","dev.kord.core.entity.channel.thread.DeletedThreadChannel.guildId"]},{"name":"val guildId: Snowflake","description":"dev.kord.core.event.automoderation.data.AutoModerationActionExecutionEventData.guildId","location":"core/dev.kord.core.event.automoderation.data/-auto-moderation-action-execution-event-data/guild-id.html","searchKeys":["guildId","val guildId: Snowflake","dev.kord.core.event.automoderation.data.AutoModerationActionExecutionEventData.guildId"]},{"name":"val guildId: Snowflake","description":"dev.kord.core.event.channel.thread.ThreadListSyncEvent.guildId","location":"core/dev.kord.core.event.channel.thread/-thread-list-sync-event/guild-id.html","searchKeys":["guildId","val guildId: Snowflake","dev.kord.core.event.channel.thread.ThreadListSyncEvent.guildId"]},{"name":"val guildId: Snowflake","description":"dev.kord.core.event.channel.thread.ThreadMembersUpdateEvent.guildId","location":"core/dev.kord.core.event.channel.thread/-thread-members-update-event/guild-id.html","searchKeys":["guildId","val guildId: Snowflake","dev.kord.core.event.channel.thread.ThreadMembersUpdateEvent.guildId"]},{"name":"val guildId: Snowflake","description":"dev.kord.core.event.guild.BanAddEvent.guildId","location":"core/dev.kord.core.event.guild/-ban-add-event/guild-id.html","searchKeys":["guildId","val guildId: Snowflake","dev.kord.core.event.guild.BanAddEvent.guildId"]},{"name":"val guildId: Snowflake","description":"dev.kord.core.event.guild.BanRemoveEvent.guildId","location":"core/dev.kord.core.event.guild/-ban-remove-event/guild-id.html","searchKeys":["guildId","val guildId: Snowflake","dev.kord.core.event.guild.BanRemoveEvent.guildId"]},{"name":"val guildId: Snowflake","description":"dev.kord.core.event.guild.EmojisUpdateEvent.guildId","location":"core/dev.kord.core.event.guild/-emojis-update-event/guild-id.html","searchKeys":["guildId","val guildId: Snowflake","dev.kord.core.event.guild.EmojisUpdateEvent.guildId"]},{"name":"val guildId: Snowflake","description":"dev.kord.core.event.guild.GuildDeleteEvent.guildId","location":"core/dev.kord.core.event.guild/-guild-delete-event/guild-id.html","searchKeys":["guildId","val guildId: Snowflake","dev.kord.core.event.guild.GuildDeleteEvent.guildId"]},{"name":"val guildId: Snowflake","description":"dev.kord.core.event.guild.IntegrationsUpdateEvent.guildId","location":"core/dev.kord.core.event.guild/-integrations-update-event/guild-id.html","searchKeys":["guildId","val guildId: Snowflake","dev.kord.core.event.guild.IntegrationsUpdateEvent.guildId"]},{"name":"val guildId: Snowflake","description":"dev.kord.core.event.guild.MemberJoinEvent.guildId","location":"core/dev.kord.core.event.guild/-member-join-event/guild-id.html","searchKeys":["guildId","val guildId: Snowflake","dev.kord.core.event.guild.MemberJoinEvent.guildId"]},{"name":"val guildId: Snowflake","description":"dev.kord.core.event.guild.MemberLeaveEvent.guildId","location":"core/dev.kord.core.event.guild/-member-leave-event/guild-id.html","searchKeys":["guildId","val guildId: Snowflake","dev.kord.core.event.guild.MemberLeaveEvent.guildId"]},{"name":"val guildId: Snowflake","description":"dev.kord.core.event.guild.MemberUpdateEvent.guildId","location":"core/dev.kord.core.event.guild/-member-update-event/guild-id.html","searchKeys":["guildId","val guildId: Snowflake","dev.kord.core.event.guild.MemberUpdateEvent.guildId"]},{"name":"val guildId: Snowflake","description":"dev.kord.core.event.guild.MembersChunkEvent.guildId","location":"core/dev.kord.core.event.guild/-members-chunk-event/guild-id.html","searchKeys":["guildId","val guildId: Snowflake","dev.kord.core.event.guild.MembersChunkEvent.guildId"]},{"name":"val guildId: Snowflake","description":"dev.kord.core.event.guild.VoiceServerUpdateEvent.guildId","location":"core/dev.kord.core.event.guild/-voice-server-update-event/guild-id.html","searchKeys":["guildId","val guildId: Snowflake","dev.kord.core.event.guild.VoiceServerUpdateEvent.guildId"]},{"name":"val guildId: Snowflake","description":"dev.kord.core.event.guild.WebhookUpdateEvent.guildId","location":"core/dev.kord.core.event.guild/-webhook-update-event/guild-id.html","searchKeys":["guildId","val guildId: Snowflake","dev.kord.core.event.guild.WebhookUpdateEvent.guildId"]},{"name":"val guildId: Snowflake","description":"dev.kord.core.event.message.ReactionRemoveEmojiEvent.guildId","location":"core/dev.kord.core.event.message/-reaction-remove-emoji-event/guild-id.html","searchKeys":["guildId","val guildId: Snowflake","dev.kord.core.event.message.ReactionRemoveEmojiEvent.guildId"]},{"name":"val guildId: Snowflake","description":"dev.kord.core.event.role.RoleCreateEvent.guildId","location":"core/dev.kord.core.event.role/-role-create-event/guild-id.html","searchKeys":["guildId","val guildId: Snowflake","dev.kord.core.event.role.RoleCreateEvent.guildId"]},{"name":"val guildId: Snowflake","description":"dev.kord.core.event.role.RoleDeleteEvent.guildId","location":"core/dev.kord.core.event.role/-role-delete-event/guild-id.html","searchKeys":["guildId","val guildId: Snowflake","dev.kord.core.event.role.RoleDeleteEvent.guildId"]},{"name":"val guildId: Snowflake","description":"dev.kord.core.event.role.RoleUpdateEvent.guildId","location":"core/dev.kord.core.event.role/-role-update-event/guild-id.html","searchKeys":["guildId","val guildId: Snowflake","dev.kord.core.event.role.RoleUpdateEvent.guildId"]},{"name":"val guildId: Snowflake","description":"dev.kord.core.event.user.PresenceUpdateEvent.guildId","location":"core/dev.kord.core.event.user/-presence-update-event/guild-id.html","searchKeys":["guildId","val guildId: Snowflake","dev.kord.core.event.user.PresenceUpdateEvent.guildId"]},{"name":"val guildId: Snowflake?","description":"dev.kord.core.entity.BaseApplication.guildId","location":"core/dev.kord.core.entity/-base-application/guild-id.html","searchKeys":["guildId","val guildId: Snowflake?","dev.kord.core.entity.BaseApplication.guildId"]},{"name":"val guildId: Snowflake?","description":"dev.kord.core.entity.Webhook.guildId","location":"core/dev.kord.core.entity/-webhook/guild-id.html","searchKeys":["guildId","val guildId: Snowflake?","dev.kord.core.entity.Webhook.guildId"]},{"name":"val guildId: Snowflake?","description":"dev.kord.core.event.channel.ChannelPinsUpdateEvent.guildId","location":"core/dev.kord.core.event.channel/-channel-pins-update-event/guild-id.html","searchKeys":["guildId","val guildId: Snowflake?","dev.kord.core.event.channel.ChannelPinsUpdateEvent.guildId"]},{"name":"val guildId: Snowflake?","description":"dev.kord.core.event.channel.TypingStartEvent.guildId","location":"core/dev.kord.core.event.channel/-typing-start-event/guild-id.html","searchKeys":["guildId","val guildId: Snowflake?","dev.kord.core.event.channel.TypingStartEvent.guildId"]},{"name":"val guildId: Snowflake?","description":"dev.kord.core.event.guild.InviteCreateEvent.guildId","location":"core/dev.kord.core.event.guild/-invite-create-event/guild-id.html","searchKeys":["guildId","val guildId: Snowflake?","dev.kord.core.event.guild.InviteCreateEvent.guildId"]},{"name":"val guildId: Snowflake?","description":"dev.kord.core.event.guild.InviteDeleteEvent.guildId","location":"core/dev.kord.core.event.guild/-invite-delete-event/guild-id.html","searchKeys":["guildId","val guildId: Snowflake?","dev.kord.core.event.guild.InviteDeleteEvent.guildId"]},{"name":"val guildId: Snowflake?","description":"dev.kord.core.event.message.MessageBulkDeleteEvent.guildId","location":"core/dev.kord.core.event.message/-message-bulk-delete-event/guild-id.html","searchKeys":["guildId","val guildId: Snowflake?","dev.kord.core.event.message.MessageBulkDeleteEvent.guildId"]},{"name":"val guildId: Snowflake?","description":"dev.kord.core.event.message.MessageCreateEvent.guildId","location":"core/dev.kord.core.event.message/-message-create-event/guild-id.html","searchKeys":["guildId","val guildId: Snowflake?","dev.kord.core.event.message.MessageCreateEvent.guildId"]},{"name":"val guildId: Snowflake?","description":"dev.kord.core.event.message.MessageDeleteEvent.guildId","location":"core/dev.kord.core.event.message/-message-delete-event/guild-id.html","searchKeys":["guildId","val guildId: Snowflake?","dev.kord.core.event.message.MessageDeleteEvent.guildId"]},{"name":"val guildId: Snowflake?","description":"dev.kord.core.event.message.ReactionAddEvent.guildId","location":"core/dev.kord.core.event.message/-reaction-add-event/guild-id.html","searchKeys":["guildId","val guildId: Snowflake?","dev.kord.core.event.message.ReactionAddEvent.guildId"]},{"name":"val guildId: Snowflake?","description":"dev.kord.core.event.message.ReactionRemoveAllEvent.guildId","location":"core/dev.kord.core.event.message/-reaction-remove-all-event/guild-id.html","searchKeys":["guildId","val guildId: Snowflake?","dev.kord.core.event.message.ReactionRemoveAllEvent.guildId"]},{"name":"val guildId: Snowflake?","description":"dev.kord.core.event.message.ReactionRemoveEvent.guildId","location":"core/dev.kord.core.event.message/-reaction-remove-event/guild-id.html","searchKeys":["guildId","val guildId: Snowflake?","dev.kord.core.event.message.ReactionRemoveEvent.guildId"]},{"name":"val guildId: Snowflake?","description":"dev.kord.core.live.LiveMessage.guildId","location":"core/dev.kord.core.live/-live-message/guild-id.html","searchKeys":["guildId","val guildId: Snowflake?","dev.kord.core.live.LiveMessage.guildId"]},{"name":"val guildIds: Set<Snowflake>","description":"dev.kord.core.event.gateway.ReadyEvent.guildIds","location":"core/dev.kord.core.event.gateway/-ready-event/guild-ids.html","searchKeys":["guildIds","val guildIds: Set<Snowflake>","dev.kord.core.event.gateway.ReadyEvent.guildIds"]},{"name":"val guildLocale: Optional<Locale>","description":"dev.kord.core.cache.data.InteractionData.guildLocale","location":"core/dev.kord.core.cache.data/-interaction-data/guild-locale.html","searchKeys":["guildLocale","val guildLocale: Optional<Locale>","dev.kord.core.cache.data.InteractionData.guildLocale"]},{"name":"val guildScheduledEvent: GuildScheduledEvent?","description":"dev.kord.core.entity.Invite.guildScheduledEvent","location":"core/dev.kord.core.entity/-invite/guild-scheduled-event.html","searchKeys":["guildScheduledEvent","val guildScheduledEvent: GuildScheduledEvent?","dev.kord.core.entity.Invite.guildScheduledEvent"]},{"name":"val guildScheduledEventId: Snowflake?","description":"dev.kord.core.cache.data.StageInstanceData.guildScheduledEventId","location":"core/dev.kord.core.cache.data/-stage-instance-data/guild-scheduled-event-id.html","searchKeys":["guildScheduledEventId","val guildScheduledEventId: Snowflake?","dev.kord.core.cache.data.StageInstanceData.guildScheduledEventId"]},{"name":"val guildScheduledEventId: Snowflake?","description":"dev.kord.core.entity.StageInstance.guildScheduledEventId","location":"core/dev.kord.core.entity/-stage-instance/guild-scheduled-event-id.html","searchKeys":["guildScheduledEventId","val guildScheduledEventId: Snowflake?","dev.kord.core.entity.StageInstance.guildScheduledEventId"]},{"name":"val guildScheduledEvents: Optional<List<GuildScheduledEventData>>","description":"dev.kord.core.cache.data.GuildData.guildScheduledEvents","location":"core/dev.kord.core.cache.data/-guild-data/guild-scheduled-events.html","searchKeys":["guildScheduledEvents","val guildScheduledEvents: Optional<List<GuildScheduledEventData>>","dev.kord.core.cache.data.GuildData.guildScheduledEvents"]},{"name":"val guildScheduledEvents: Optional<List<GuildScheduledEventData>>","description":"dev.kord.core.cache.data.PartialGuildData.guildScheduledEvents","location":"core/dev.kord.core.cache.data/-partial-guild-data/guild-scheduled-events.html","searchKeys":["guildScheduledEvents","val guildScheduledEvents: Optional<List<GuildScheduledEventData>>","dev.kord.core.cache.data.PartialGuildData.guildScheduledEvents"]},{"name":"val guilds: Flow<Guild>","description":"dev.kord.core.Kord.guilds","location":"core/dev.kord.core/-kord/guilds.html","searchKeys":["guilds","val guilds: Flow<Guild>","dev.kord.core.Kord.guilds"]},{"name":"val guilds: Set<GuildBehavior>","description":"dev.kord.core.event.gateway.ReadyEvent.guilds","location":"core/dev.kord.core.event.gateway/-ready-event/guilds.html","searchKeys":["guilds","val guilds: Set<GuildBehavior>","dev.kord.core.event.gateway.ReadyEvent.guilds"]},{"name":"val height: Int?","description":"dev.kord.core.entity.Attachment.height","location":"core/dev.kord.core.entity/-attachment/height.html","searchKeys":["height","val height: Int?","dev.kord.core.entity.Attachment.height"]},{"name":"val height: Int?","description":"dev.kord.core.entity.Embed.Image.height","location":"core/dev.kord.core.entity/-embed/-image/height.html","searchKeys":["height","val height: Int?","dev.kord.core.entity.Embed.Image.height"]},{"name":"val height: Int?","description":"dev.kord.core.entity.Embed.Thumbnail.height","location":"core/dev.kord.core.entity/-embed/-thumbnail/height.html","searchKeys":["height","val height: Int?","dev.kord.core.entity.Embed.Thumbnail.height"]},{"name":"val height: Int?","description":"dev.kord.core.entity.Embed.Video.height","location":"core/dev.kord.core.entity/-embed/-video/height.html","searchKeys":["height","val height: Int?","dev.kord.core.entity.Embed.Video.height"]},{"name":"val height: OptionalInt","description":"dev.kord.core.cache.data.EmbedImageData.height","location":"core/dev.kord.core.cache.data/-embed-image-data/height.html","searchKeys":["height","val height: OptionalInt","dev.kord.core.cache.data.EmbedImageData.height"]},{"name":"val height: OptionalInt","description":"dev.kord.core.cache.data.EmbedThumbnailData.height","location":"core/dev.kord.core.cache.data/-embed-thumbnail-data/height.html","searchKeys":["height","val height: OptionalInt","dev.kord.core.cache.data.EmbedThumbnailData.height"]},{"name":"val height: OptionalInt","description":"dev.kord.core.cache.data.EmbedVideoData.height","location":"core/dev.kord.core.cache.data/-embed-video-data/height.html","searchKeys":["height","val height: OptionalInt","dev.kord.core.cache.data.EmbedVideoData.height"]},{"name":"val height: OptionalInt?","description":"dev.kord.core.cache.data.AttachmentData.height","location":"core/dev.kord.core.cache.data/-attachment-data/height.html","searchKeys":["height","val height: OptionalInt?","dev.kord.core.cache.data.AttachmentData.height"]},{"name":"val hoisted: Boolean","description":"dev.kord.core.cache.data.RoleData.hoisted","location":"core/dev.kord.core.cache.data/-role-data/hoisted.html","searchKeys":["hoisted","val hoisted: Boolean","dev.kord.core.cache.data.RoleData.hoisted"]},{"name":"val hoisted: Boolean","description":"dev.kord.core.entity.Role.hoisted","location":"core/dev.kord.core.entity/-role/hoisted.html","searchKeys":["hoisted","val hoisted: Boolean","dev.kord.core.entity.Role.hoisted"]},{"name":"val httpClient: HttpClient","description":"dev.kord.core.ClientResources.httpClient","location":"core/dev.kord.core/-client-resources/http-client.html","searchKeys":["httpClient","val httpClient: HttpClient","dev.kord.core.ClientResources.httpClient"]},{"name":"val icon: Icon?","description":"dev.kord.core.entity.Role.icon","location":"core/dev.kord.core.entity/-role/icon.html","searchKeys":["icon","val icon: Icon?","dev.kord.core.entity.Role.icon"]},{"name":"val icon: Optional<String?>","description":"dev.kord.core.cache.data.ChannelData.icon","location":"core/dev.kord.core.cache.data/-channel-data/icon.html","searchKeys":["icon","val icon: Optional<String?>","dev.kord.core.cache.data.ChannelData.icon"]},{"name":"val icon: Optional<String?>","description":"dev.kord.core.cache.data.RoleData.icon","location":"core/dev.kord.core.cache.data/-role-data/icon.html","searchKeys":["icon","val icon: Optional<String?>","dev.kord.core.cache.data.RoleData.icon"]},{"name":"val icon: String?","description":"dev.kord.core.entity.GuildPreview.icon","location":"core/dev.kord.core.entity/-guild-preview/icon.html","searchKeys":["icon","val icon: String?","dev.kord.core.entity.GuildPreview.icon"]},{"name":"val icon: String?","description":"dev.kord.core.entity.Team.icon","location":"core/dev.kord.core.entity/-team/icon.html","searchKeys":["icon","val icon: String?","dev.kord.core.entity.Team.icon"]},{"name":"val icon: String? = null","description":"dev.kord.core.cache.data.GuildData.icon","location":"core/dev.kord.core.cache.data/-guild-data/icon.html","searchKeys":["icon","val icon: String? = null","dev.kord.core.cache.data.GuildData.icon"]},{"name":"val icon: String? = null","description":"dev.kord.core.cache.data.GuildPreviewData.icon","location":"core/dev.kord.core.cache.data/-guild-preview-data/icon.html","searchKeys":["icon","val icon: String? = null","dev.kord.core.cache.data.GuildPreviewData.icon"]},{"name":"val icon: String? = null","description":"dev.kord.core.cache.data.PartialGuildData.icon","location":"core/dev.kord.core.cache.data/-partial-guild-data/icon.html","searchKeys":["icon","val icon: String? = null","dev.kord.core.cache.data.PartialGuildData.icon"]},{"name":"val icon: String? = null","description":"dev.kord.core.cache.data.TeamData.icon","location":"core/dev.kord.core.cache.data/-team-data/icon.html","searchKeys":["icon","val icon: String? = null","dev.kord.core.cache.data.TeamData.icon"]},{"name":"val iconHash: Optional<String?>","description":"dev.kord.core.cache.data.GuildData.iconHash","location":"core/dev.kord.core.cache.data/-guild-data/icon-hash.html","searchKeys":["iconHash","val iconHash: Optional<String?>","dev.kord.core.cache.data.GuildData.iconHash"]},{"name":"val iconHash: String?","description":"dev.kord.core.entity.BaseApplication.iconHash","location":"core/dev.kord.core.entity/-base-application/icon-hash.html","searchKeys":["iconHash","val iconHash: String?","dev.kord.core.entity.BaseApplication.iconHash"]},{"name":"val iconHash: String?","description":"dev.kord.core.entity.Guild.iconHash","location":"core/dev.kord.core.entity/-guild/icon-hash.html","searchKeys":["iconHash","val iconHash: String?","dev.kord.core.entity.Guild.iconHash"]},{"name":"val iconHash: String?","description":"dev.kord.core.entity.PartialGuild.iconHash","location":"core/dev.kord.core.entity/-partial-guild/icon-hash.html","searchKeys":["iconHash","val iconHash: String?","dev.kord.core.entity.PartialGuild.iconHash"]},{"name":"val iconUrl: Optional<String>","description":"dev.kord.core.cache.data.EmbedAuthorData.iconUrl","location":"core/dev.kord.core.cache.data/-embed-author-data/icon-url.html","searchKeys":["iconUrl","val iconUrl: Optional<String>","dev.kord.core.cache.data.EmbedAuthorData.iconUrl"]},{"name":"val iconUrl: Optional<String>","description":"dev.kord.core.cache.data.EmbedFooterData.iconUrl","location":"core/dev.kord.core.cache.data/-embed-footer-data/icon-url.html","searchKeys":["iconUrl","val iconUrl: Optional<String>","dev.kord.core.cache.data.EmbedFooterData.iconUrl"]},{"name":"val iconUrl: String?","description":"dev.kord.core.entity.Embed.Author.iconUrl","location":"core/dev.kord.core.entity/-embed/-author/icon-url.html","searchKeys":["iconUrl","val iconUrl: String?","dev.kord.core.entity.Embed.Author.iconUrl"]},{"name":"val iconUrl: String?","description":"dev.kord.core.entity.Embed.Footer.iconUrl","location":"core/dev.kord.core.entity/-embed/-footer/icon-url.html","searchKeys":["iconUrl","val iconUrl: String?","dev.kord.core.entity.Embed.Footer.iconUrl"]},{"name":"val id: OptionalSnowflake","description":"dev.kord.core.cache.data.ApplicationInteractionData.id","location":"core/dev.kord.core.cache.data/-application-interaction-data/id.html","searchKeys":["id","val id: OptionalSnowflake","dev.kord.core.cache.data.ApplicationInteractionData.id"]},{"name":"val id: OptionalSnowflake","description":"dev.kord.core.cache.data.MessageReferenceData.id","location":"core/dev.kord.core.cache.data/-message-reference-data/id.html","searchKeys":["id","val id: OptionalSnowflake","dev.kord.core.cache.data.MessageReferenceData.id"]},{"name":"val id: Snowflake","description":"dev.kord.core.cache.data.ApplicationCommandData.id","location":"core/dev.kord.core.cache.data/-application-command-data/id.html","searchKeys":["id","val id: Snowflake","dev.kord.core.cache.data.ApplicationCommandData.id"]},{"name":"val id: Snowflake","description":"dev.kord.core.cache.data.AttachmentData.id","location":"core/dev.kord.core.cache.data/-attachment-data/id.html","searchKeys":["id","val id: Snowflake","dev.kord.core.cache.data.AttachmentData.id"]},{"name":"val id: Snowflake","description":"dev.kord.core.cache.data.AutoModerationRuleData.id","location":"core/dev.kord.core.cache.data/-auto-moderation-rule-data/id.html","searchKeys":["id","val id: Snowflake","dev.kord.core.cache.data.AutoModerationRuleData.id"]},{"name":"val id: Snowflake","description":"dev.kord.core.cache.data.ChannelData.id","location":"core/dev.kord.core.cache.data/-channel-data/id.html","searchKeys":["id","val id: Snowflake","dev.kord.core.cache.data.ChannelData.id"]},{"name":"val id: Snowflake","description":"dev.kord.core.cache.data.EmojiData.id","location":"core/dev.kord.core.cache.data/-emoji-data/id.html","searchKeys":["id","val id: Snowflake","dev.kord.core.cache.data.EmojiData.id"]},{"name":"val id: Snowflake","description":"dev.kord.core.cache.data.GuildApplicationCommandPermissionData.id","location":"core/dev.kord.core.cache.data/-guild-application-command-permission-data/id.html","searchKeys":["id","val id: Snowflake","dev.kord.core.cache.data.GuildApplicationCommandPermissionData.id"]},{"name":"val id: Snowflake","description":"dev.kord.core.cache.data.GuildApplicationCommandPermissionsData.id","location":"core/dev.kord.core.cache.data/-guild-application-command-permissions-data/id.html","searchKeys":["id","val id: Snowflake","dev.kord.core.cache.data.GuildApplicationCommandPermissionsData.id"]},{"name":"val id: Snowflake","description":"dev.kord.core.cache.data.GuildData.id","location":"core/dev.kord.core.cache.data/-guild-data/id.html","searchKeys":["id","val id: Snowflake","dev.kord.core.cache.data.GuildData.id"]},{"name":"val id: Snowflake","description":"dev.kord.core.cache.data.GuildPreviewData.id","location":"core/dev.kord.core.cache.data/-guild-preview-data/id.html","searchKeys":["id","val id: Snowflake","dev.kord.core.cache.data.GuildPreviewData.id"]},{"name":"val id: Snowflake","description":"dev.kord.core.cache.data.GuildScheduledEventData.id","location":"core/dev.kord.core.cache.data/-guild-scheduled-event-data/id.html","searchKeys":["id","val id: Snowflake","dev.kord.core.cache.data.GuildScheduledEventData.id"]},{"name":"val id: Snowflake","description":"dev.kord.core.cache.data.IntegrationData.id","location":"core/dev.kord.core.cache.data/-integration-data/id.html","searchKeys":["id","val id: Snowflake","dev.kord.core.cache.data.IntegrationData.id"]},{"name":"val id: Snowflake","description":"dev.kord.core.cache.data.InteractionData.id","location":"core/dev.kord.core.cache.data/-interaction-data/id.html","searchKeys":["id","val id: Snowflake","dev.kord.core.cache.data.InteractionData.id"]},{"name":"val id: Snowflake","description":"dev.kord.core.cache.data.MessageData.id","location":"core/dev.kord.core.cache.data/-message-data/id.html","searchKeys":["id","val id: Snowflake","dev.kord.core.cache.data.MessageData.id"]},{"name":"val id: Snowflake","description":"dev.kord.core.cache.data.MessageInteractionData.id","location":"core/dev.kord.core.cache.data/-message-interaction-data/id.html","searchKeys":["id","val id: Snowflake","dev.kord.core.cache.data.MessageInteractionData.id"]},{"name":"val id: Snowflake","description":"dev.kord.core.cache.data.PartialGuildData.id","location":"core/dev.kord.core.cache.data/-partial-guild-data/id.html","searchKeys":["id","val id: Snowflake","dev.kord.core.cache.data.PartialGuildData.id"]},{"name":"val id: Snowflake","description":"dev.kord.core.cache.data.PermissionOverwriteData.id","location":"core/dev.kord.core.cache.data/-permission-overwrite-data/id.html","searchKeys":["id","val id: Snowflake","dev.kord.core.cache.data.PermissionOverwriteData.id"]},{"name":"val id: Snowflake","description":"dev.kord.core.cache.data.RoleData.id","location":"core/dev.kord.core.cache.data/-role-data/id.html","searchKeys":["id","val id: Snowflake","dev.kord.core.cache.data.RoleData.id"]},{"name":"val id: Snowflake","description":"dev.kord.core.cache.data.StageInstanceData.id","location":"core/dev.kord.core.cache.data/-stage-instance-data/id.html","searchKeys":["id","val id: Snowflake","dev.kord.core.cache.data.StageInstanceData.id"]},{"name":"val id: Snowflake","description":"dev.kord.core.cache.data.StickerData.id","location":"core/dev.kord.core.cache.data/-sticker-data/id.html","searchKeys":["id","val id: Snowflake","dev.kord.core.cache.data.StickerData.id"]},{"name":"val id: Snowflake","description":"dev.kord.core.cache.data.StickerItemData.id","location":"core/dev.kord.core.cache.data/-sticker-item-data/id.html","searchKeys":["id","val id: Snowflake","dev.kord.core.cache.data.StickerItemData.id"]},{"name":"val id: Snowflake","description":"dev.kord.core.cache.data.StickerPackData.id","location":"core/dev.kord.core.cache.data/-sticker-pack-data/id.html","searchKeys":["id","val id: Snowflake","dev.kord.core.cache.data.StickerPackData.id"]},{"name":"val id: Snowflake","description":"dev.kord.core.cache.data.TeamData.id","location":"core/dev.kord.core.cache.data/-team-data/id.html","searchKeys":["id","val id: Snowflake","dev.kord.core.cache.data.TeamData.id"]},{"name":"val id: Snowflake","description":"dev.kord.core.cache.data.ThreadMemberData.id","location":"core/dev.kord.core.cache.data/-thread-member-data/id.html","searchKeys":["id","val id: Snowflake","dev.kord.core.cache.data.ThreadMemberData.id"]},{"name":"val id: Snowflake","description":"dev.kord.core.cache.data.ThreadMembersUpdateEventData.id","location":"core/dev.kord.core.cache.data/-thread-members-update-event-data/id.html","searchKeys":["id","val id: Snowflake","dev.kord.core.cache.data.ThreadMembersUpdateEventData.id"]},{"name":"val id: Snowflake","description":"dev.kord.core.cache.data.UserData.id","location":"core/dev.kord.core.cache.data/-user-data/id.html","searchKeys":["id","val id: Snowflake","dev.kord.core.cache.data.UserData.id"]},{"name":"val id: Snowflake","description":"dev.kord.core.cache.data.WebhookData.id","location":"core/dev.kord.core.cache.data/-webhook-data/id.html","searchKeys":["id","val id: Snowflake","dev.kord.core.cache.data.WebhookData.id"]},{"name":"val id: Snowflake","description":"dev.kord.core.entity.AuditLogEntry.id","location":"core/dev.kord.core.entity/-audit-log-entry/id.html","searchKeys":["id","val id: Snowflake","dev.kord.core.entity.AuditLogEntry.id"]},{"name":"val id: Snowflake","description":"dev.kord.core.entity.ReactionEmoji.Custom.id","location":"core/dev.kord.core.entity/-reaction-emoji/-custom/id.html","searchKeys":["id","val id: Snowflake","dev.kord.core.entity.ReactionEmoji.Custom.id"]},{"name":"val id: Snowflake","description":"dev.kord.core.entity.application.ApplicationCommandPermissions.id","location":"core/dev.kord.core.entity.application/-application-command-permissions/id.html","searchKeys":["id","val id: Snowflake","dev.kord.core.entity.application.ApplicationCommandPermissions.id"]},{"name":"val id: Snowflake","description":"dev.kord.core.entity.application.GuildApplicationCommandPermission.id","location":"core/dev.kord.core.entity.application/-guild-application-command-permission/id.html","searchKeys":["id","val id: Snowflake","dev.kord.core.entity.application.GuildApplicationCommandPermission.id"]},{"name":"val id: Snowflake","description":"dev.kord.core.entity.channel.thread.DeletedThreadChannel.id","location":"core/dev.kord.core.entity.channel.thread/-deleted-thread-channel/id.html","searchKeys":["id","val id: Snowflake","dev.kord.core.entity.channel.thread.DeletedThreadChannel.id"]},{"name":"val id: Snowflake","description":"dev.kord.core.event.channel.thread.ThreadMembersUpdateEvent.id","location":"core/dev.kord.core.event.channel.thread/-thread-members-update-event/id.html","searchKeys":["id","val id: Snowflake","dev.kord.core.event.channel.thread.ThreadMembersUpdateEvent.id"]},{"name":"val id: Snowflake?","description":"dev.kord.core.entity.Reaction.id","location":"core/dev.kord.core.entity/-reaction/id.html","searchKeys":["id","val id: Snowflake?","dev.kord.core.entity.Reaction.id"]},{"name":"val id: Snowflake? = null","description":"dev.kord.core.cache.data.RemovedReactionData.id","location":"core/dev.kord.core.cache.data/-removed-reaction-data/id.html","searchKeys":["id","val id: Snowflake? = null","dev.kord.core.cache.data.RemovedReactionData.id"]},{"name":"val id: String","description":"dev.kord.core.cache.data.IntegrationsAccountData.id","location":"core/dev.kord.core.cache.data/-integrations-account-data/id.html","searchKeys":["id","val id: String","dev.kord.core.cache.data.IntegrationsAccountData.id"]},{"name":"val id: String","description":"dev.kord.core.cache.data.RegionData.id","location":"core/dev.kord.core.cache.data/-region-data/id.html","searchKeys":["id","val id: String","dev.kord.core.cache.data.RegionData.id"]},{"name":"val id: String","description":"dev.kord.core.entity.Region.id","location":"core/dev.kord.core.entity/-region/id.html","searchKeys":["id","val id: String","dev.kord.core.entity.Region.id"]},{"name":"val id: String?","description":"dev.kord.core.entity.Activity.Party.id","location":"core/dev.kord.core.entity/-activity/-party/id.html","searchKeys":["id","val id: String?","dev.kord.core.entity.Activity.Party.id"]},{"name":"val image: Embed.Image?","description":"dev.kord.core.entity.Embed.image","location":"core/dev.kord.core.entity/-embed/image.html","searchKeys":["image","val image: Embed.Image?","dev.kord.core.entity.Embed.image"]},{"name":"val image: Icon","description":"dev.kord.core.entity.GuildEmoji.image","location":"core/dev.kord.core.entity/-guild-emoji/image.html","searchKeys":["image","val image: Icon","dev.kord.core.entity.GuildEmoji.image"]},{"name":"val image: Optional<EmbedImageData>","description":"dev.kord.core.cache.data.EmbedData.image","location":"core/dev.kord.core.cache.data/-embed-data/image.html","searchKeys":["image","val image: Optional<EmbedImageData>","dev.kord.core.cache.data.EmbedData.image"]},{"name":"val image: Optional<String?>","description":"dev.kord.core.cache.data.GuildScheduledEventData.image","location":"core/dev.kord.core.cache.data/-guild-scheduled-event-data/image.html","searchKeys":["image","val image: Optional<String?>","dev.kord.core.cache.data.GuildScheduledEventData.image"]},{"name":"val imageHash: String?","description":"dev.kord.core.entity.GuildScheduledEvent.imageHash","location":"core/dev.kord.core.entity/-guild-scheduled-event/image-hash.html","searchKeys":["imageHash","val imageHash: String?","dev.kord.core.entity.GuildScheduledEvent.imageHash"]},{"name":"val inline: Boolean?","description":"dev.kord.core.entity.Embed.Field.inline","location":"core/dev.kord.core.entity/-embed/-field/inline.html","searchKeys":["inline","val inline: Boolean?","dev.kord.core.entity.Embed.Field.inline"]},{"name":"val inline: OptionalBoolean","description":"dev.kord.core.cache.data.EmbedFieldData.inline","location":"core/dev.kord.core.cache.data/-embed-field-data/inline.html","searchKeys":["inline","val inline: OptionalBoolean","dev.kord.core.cache.data.EmbedFieldData.inline"]},{"name":"val installParams: InstallParams?","description":"dev.kord.core.entity.BaseApplication.installParams","location":"core/dev.kord.core.entity/-base-application/install-params.html","searchKeys":["installParams","val installParams: InstallParams?","dev.kord.core.entity.BaseApplication.installParams"]},{"name":"val instance: OptionalBoolean","description":"dev.kord.core.cache.data.ActivityData.instance","location":"core/dev.kord.core.cache.data/-activity-data/instance.html","searchKeys":["instance","val instance: OptionalBoolean","dev.kord.core.cache.data.ActivityData.instance"]},{"name":"val integrationId: OptionalSnowflake","description":"dev.kord.core.cache.data.RoleTagsData.integrationId","location":"core/dev.kord.core.cache.data/-role-tags-data/integration-id.html","searchKeys":["integrationId","val integrationId: OptionalSnowflake","dev.kord.core.cache.data.RoleTagsData.integrationId"]},{"name":"val integrationId: Snowflake?","description":"dev.kord.core.entity.RoleTags.integrationId","location":"core/dev.kord.core.entity/-role-tags/integration-id.html","searchKeys":["integrationId","val integrationId: Snowflake?","dev.kord.core.entity.RoleTags.integrationId"]},{"name":"val integrations: List<Snowflake>","description":"dev.kord.core.entity.AuditLog.integrations","location":"core/dev.kord.core.entity/-audit-log/integrations.html","searchKeys":["integrations","val integrations: List<Snowflake>","dev.kord.core.entity.AuditLog.integrations"]},{"name":"val interaction: Message.Interaction?","description":"dev.kord.core.entity.Message.interaction","location":"core/dev.kord.core.entity/-message/interaction.html","searchKeys":["interaction","val interaction: Message.Interaction?","dev.kord.core.entity.Message.interaction"]},{"name":"val interaction: Optional<MessageInteractionData>","description":"dev.kord.core.cache.data.MessageData.interaction","location":"core/dev.kord.core.cache.data/-message-data/interaction.html","searchKeys":["interaction","val interaction: Optional<MessageInteractionData>","dev.kord.core.cache.data.MessageData.interaction"]},{"name":"val interactionButtons: Map<String, ButtonComponent>","description":"dev.kord.core.entity.component.ActionRowComponent.interactionButtons","location":"core/dev.kord.core.entity.component/-action-row-component/interaction-buttons.html","searchKeys":["interactionButtons","val interactionButtons: Map<String, ButtonComponent>","dev.kord.core.entity.component.ActionRowComponent.interactionButtons"]},{"name":"val invalidIds: Set<Snowflake>","description":"dev.kord.core.event.guild.MembersChunkEvent.invalidIds","location":"core/dev.kord.core.event.guild/-members-chunk-event/invalid-ids.html","searchKeys":["invalidIds","val invalidIds: Set<Snowflake>","dev.kord.core.event.guild.MembersChunkEvent.invalidIds"]},{"name":"val invitable: OptionalBoolean","description":"dev.kord.core.cache.data.ThreadMetadataData.invitable","location":"core/dev.kord.core.cache.data/-thread-metadata-data/invitable.html","searchKeys":["invitable","val invitable: OptionalBoolean","dev.kord.core.cache.data.ThreadMetadataData.invitable"]},{"name":"val inviter: UserBehavior?","description":"dev.kord.core.entity.Invite.inviter","location":"core/dev.kord.core.entity/-invite/inviter.html","searchKeys":["inviter","val inviter: UserBehavior?","dev.kord.core.entity.Invite.inviter"]},{"name":"val inviter: UserBehavior?","description":"dev.kord.core.event.guild.InviteCreateEvent.inviter","location":"core/dev.kord.core.event.guild/-invite-create-event/inviter.html","searchKeys":["inviter","val inviter: UserBehavior?","dev.kord.core.event.guild.InviteCreateEvent.inviter"]},{"name":"val inviterId: OptionalSnowflake","description":"dev.kord.core.cache.data.InviteCreateData.inviterId","location":"core/dev.kord.core.cache.data/-invite-create-data/inviter-id.html","searchKeys":["inviterId","val inviterId: OptionalSnowflake","dev.kord.core.cache.data.InviteCreateData.inviterId"]},{"name":"val inviterId: Snowflake?","description":"dev.kord.core.entity.Invite.inviterId","location":"core/dev.kord.core.entity/-invite/inviter-id.html","searchKeys":["inviterId","val inviterId: Snowflake?","dev.kord.core.entity.Invite.inviterId"]},{"name":"val inviterId: Snowflake?","description":"dev.kord.core.event.guild.InviteCreateEvent.inviterId","location":"core/dev.kord.core.event.guild/-invite-create-event/inviter-id.html","searchKeys":["inviterId","val inviterId: Snowflake?","dev.kord.core.event.guild.InviteCreateEvent.inviterId"]},{"name":"val inviterMember: MemberBehavior?","description":"dev.kord.core.event.guild.InviteCreateEvent.inviterMember","location":"core/dev.kord.core.event.guild/-invite-create-event/inviter-member.html","searchKeys":["inviterMember","val inviterMember: MemberBehavior?","dev.kord.core.event.guild.InviteCreateEvent.inviterMember"]},{"name":"val isAnimated: Boolean","description":"dev.kord.core.entity.GuildEmoji.isAnimated","location":"core/dev.kord.core.entity/-guild-emoji/is-animated.html","searchKeys":["isAnimated","val isAnimated: Boolean","dev.kord.core.entity.GuildEmoji.isAnimated"]},{"name":"val isAnimated: Boolean","description":"dev.kord.core.entity.Reaction.isAnimated","location":"core/dev.kord.core.entity/-reaction/is-animated.html","searchKeys":["isAnimated","val isAnimated: Boolean","dev.kord.core.entity.Reaction.isAnimated"]},{"name":"val isAnimated: Boolean","description":"dev.kord.core.entity.ReactionEmoji.Custom.isAnimated","location":"core/dev.kord.core.entity/-reaction-emoji/-custom/is-animated.html","searchKeys":["isAnimated","val isAnimated: Boolean","dev.kord.core.entity.ReactionEmoji.Custom.isAnimated"]},{"name":"val isAnimated: Boolean","description":"dev.kord.core.entity.User.Avatar.isAnimated","location":"core/dev.kord.core.entity/-user/-avatar/is-animated.html","searchKeys":["isAnimated","val isAnimated: Boolean","dev.kord.core.entity.User.Avatar.isAnimated"]},{"name":"val isAvailable: Boolean","description":"dev.kord.core.entity.GuildEmoji.isAvailable","location":"core/dev.kord.core.entity/-guild-emoji/is-available.html","searchKeys":["isAvailable","val isAvailable: Boolean","dev.kord.core.entity.GuildEmoji.isAvailable"]},{"name":"val isBot: Boolean","description":"dev.kord.core.entity.User.isBot","location":"core/dev.kord.core.entity/-user/is-bot.html","searchKeys":["isBot","val isBot: Boolean","dev.kord.core.entity.User.isBot"]},{"name":"val isCustom: Boolean","description":"dev.kord.core.entity.Region.isCustom","location":"core/dev.kord.core.entity/-region/is-custom.html","searchKeys":["isCustom","val isCustom: Boolean","dev.kord.core.entity.Region.isCustom"]},{"name":"val isCustom: Boolean","description":"dev.kord.core.entity.User.Avatar.isCustom","location":"core/dev.kord.core.entity/-user/-avatar/is-custom.html","searchKeys":["isCustom","val isCustom: Boolean","dev.kord.core.entity.User.Avatar.isCustom"]},{"name":"val isDeafened: Boolean","description":"dev.kord.core.entity.VoiceState.isDeafened","location":"core/dev.kord.core.entity/-voice-state/is-deafened.html","searchKeys":["isDeafened","val isDeafened: Boolean","dev.kord.core.entity.VoiceState.isDeafened"]},{"name":"val isDefault: OptionalBoolean","description":"dev.kord.core.cache.data.ApplicationCommandSubcommandData.isDefault","location":"core/dev.kord.core.cache.data/-application-command-subcommand-data/is-default.html","searchKeys":["isDefault","val isDefault: OptionalBoolean","dev.kord.core.cache.data.ApplicationCommandSubcommandData.isDefault"]},{"name":"val isDeprecated: Boolean","description":"dev.kord.core.entity.Region.isDeprecated","location":"core/dev.kord.core.entity/-region/is-deprecated.html","searchKeys":["isDeprecated","val isDeprecated: Boolean","dev.kord.core.entity.Region.isDeprecated"]},{"name":"val isDirty: Boolean?","description":"dev.kord.core.cache.data.TemplateData.isDirty","location":"core/dev.kord.core.cache.data/-template-data/is-dirty.html","searchKeys":["isDirty","val isDirty: Boolean?","dev.kord.core.cache.data.TemplateData.isDirty"]},{"name":"val isEnabled: Boolean","description":"dev.kord.core.entity.GuildWidget.isEnabled","location":"core/dev.kord.core.entity/-guild-widget/is-enabled.html","searchKeys":["isEnabled","val isEnabled: Boolean","dev.kord.core.entity.GuildWidget.isEnabled"]},{"name":"val isEnabled: Boolean","description":"dev.kord.core.entity.Integration.isEnabled","location":"core/dev.kord.core.entity/-integration/is-enabled.html","searchKeys":["isEnabled","val isEnabled: Boolean","dev.kord.core.entity.Integration.isEnabled"]},{"name":"val isEnabled: Boolean","description":"dev.kord.core.entity.automoderation.AutoModerationRule.isEnabled","location":"core/dev.kord.core.entity.automoderation/-auto-moderation-rule/is-enabled.html","searchKeys":["isEnabled","val isEnabled: Boolean","dev.kord.core.entity.automoderation.AutoModerationRule.isEnabled"]},{"name":"val isEphemeral: Boolean","description":"dev.kord.core.entity.Attachment.isEphemeral","location":"core/dev.kord.core.entity/-attachment/is-ephemeral.html","searchKeys":["isEphemeral","val isEphemeral: Boolean","dev.kord.core.entity.Attachment.isEphemeral"]},{"name":"val isImage: Boolean","description":"dev.kord.core.entity.Attachment.isImage","location":"core/dev.kord.core.entity/-attachment/is-image.html","searchKeys":["isImage","val isImage: Boolean","dev.kord.core.entity.Attachment.isImage"]},{"name":"val isInstance: Boolean?","description":"dev.kord.core.entity.Activity.isInstance","location":"core/dev.kord.core.entity/-activity/is-instance.html","searchKeys":["isInstance","val isInstance: Boolean?","dev.kord.core.entity.Activity.isInstance"]},{"name":"val isInvitable: Boolean","description":"dev.kord.core.entity.channel.thread.TextChannelThread.isInvitable","location":"core/dev.kord.core.entity.channel.thread/-text-channel-thread/is-invitable.html","searchKeys":["isInvitable","val isInvitable: Boolean","dev.kord.core.entity.channel.thread.TextChannelThread.isInvitable"]},{"name":"val isLarge: Boolean?","description":"dev.kord.core.entity.Guild.isLarge","location":"core/dev.kord.core.entity/-guild/is-large.html","searchKeys":["isLarge","val isLarge: Boolean?","dev.kord.core.entity.Guild.isLarge"]},{"name":"val isManaged: Boolean","description":"dev.kord.core.entity.GuildEmoji.isManaged","location":"core/dev.kord.core.entity/-guild-emoji/is-managed.html","searchKeys":["isManaged","val isManaged: Boolean","dev.kord.core.entity.GuildEmoji.isManaged"]},{"name":"val isMuted: Boolean","description":"dev.kord.core.entity.VoiceState.isMuted","location":"core/dev.kord.core.entity/-voice-state/is-muted.html","searchKeys":["isMuted","val isMuted: Boolean","dev.kord.core.entity.VoiceState.isMuted"]},{"name":"val isNsfw: Boolean","description":"dev.kord.core.entity.channel.TextChannel.isNsfw","location":"core/dev.kord.core.entity.channel/-text-channel/is-nsfw.html","searchKeys":["isNsfw","val isNsfw: Boolean","dev.kord.core.entity.channel.TextChannel.isNsfw"]},{"name":"val isOptimal: Boolean","description":"dev.kord.core.entity.Region.isOptimal","location":"core/dev.kord.core.entity/-region/is-optimal.html","searchKeys":["isOptimal","val isOptimal: Boolean","dev.kord.core.entity.Region.isOptimal"]},{"name":"val isOwner: Boolean","description":"dev.kord.core.entity.Guild.isOwner","location":"core/dev.kord.core.entity/-guild/is-owner.html","searchKeys":["isOwner","val isOwner: Boolean","dev.kord.core.entity.Guild.isOwner"]},{"name":"val isPending: Boolean","description":"dev.kord.core.entity.Member.isPending","location":"core/dev.kord.core.entity/-member/is-pending.html","searchKeys":["isPending","val isPending: Boolean","dev.kord.core.entity.Member.isPending"]},{"name":"val isPinned: Boolean","description":"dev.kord.core.entity.Message.isPinned","location":"core/dev.kord.core.entity/-message/is-pinned.html","searchKeys":["isPinned","val isPinned: Boolean","dev.kord.core.entity.Message.isPinned"]},{"name":"val isPremiumRole: Boolean","description":"dev.kord.core.entity.RoleTags.isPremiumRole","location":"core/dev.kord.core.entity/-role-tags/is-premium-role.html","searchKeys":["isPremiumRole","val isPremiumRole: Boolean","dev.kord.core.entity.RoleTags.isPremiumRole"]},{"name":"val isPrivate: Boolean","description":"dev.kord.core.entity.channel.thread.TextChannelThread.isPrivate","location":"core/dev.kord.core.entity.channel.thread/-text-channel-thread/is-private.html","searchKeys":["isPrivate","val isPrivate: Boolean","dev.kord.core.entity.channel.thread.TextChannelThread.isPrivate"]},{"name":"val isPublic: Boolean","description":"dev.kord.core.entity.Application.isPublic","location":"core/dev.kord.core.entity/-application/is-public.html","searchKeys":["isPublic","val isPublic: Boolean","dev.kord.core.entity.Application.isPublic"]},{"name":"val isRequired: Boolean","description":"dev.kord.core.entity.application.ApplicationCommandParameter.isRequired","location":"core/dev.kord.core.entity.application/-application-command-parameter/is-required.html","searchKeys":["isRequired","val isRequired: Boolean","dev.kord.core.entity.application.ApplicationCommandParameter.isRequired"]},{"name":"val isSelfDeafened: Boolean","description":"dev.kord.core.entity.VoiceState.isSelfDeafened","location":"core/dev.kord.core.entity/-voice-state/is-self-deafened.html","searchKeys":["isSelfDeafened","val isSelfDeafened: Boolean","dev.kord.core.entity.VoiceState.isSelfDeafened"]},{"name":"val isSelfMuted: Boolean","description":"dev.kord.core.entity.VoiceState.isSelfMuted","location":"core/dev.kord.core.entity/-voice-state/is-self-muted.html","searchKeys":["isSelfMuted","val isSelfMuted: Boolean","dev.kord.core.entity.VoiceState.isSelfMuted"]},{"name":"val isSelfStreaming: Boolean","description":"dev.kord.core.entity.VoiceState.isSelfStreaming","location":"core/dev.kord.core.entity/-voice-state/is-self-streaming.html","searchKeys":["isSelfStreaming","val isSelfStreaming: Boolean","dev.kord.core.entity.VoiceState.isSelfStreaming"]},{"name":"val isSelfVideo: Boolean","description":"dev.kord.core.entity.VoiceState.isSelfVideo","location":"core/dev.kord.core.entity/-voice-state/is-self-video.html","searchKeys":["isSelfVideo","val isSelfVideo: Boolean","dev.kord.core.entity.VoiceState.isSelfVideo"]},{"name":"val isSpoiler: Boolean","description":"dev.kord.core.entity.Attachment.isSpoiler","location":"core/dev.kord.core.entity/-attachment/is-spoiler.html","searchKeys":["isSpoiler","val isSpoiler: Boolean","dev.kord.core.entity.Attachment.isSpoiler"]},{"name":"val isSuppressed: Boolean","description":"dev.kord.core.entity.VoiceState.isSuppressed","location":"core/dev.kord.core.entity/-voice-state/is-suppressed.html","searchKeys":["isSuppressed","val isSuppressed: Boolean","dev.kord.core.entity.VoiceState.isSuppressed"]},{"name":"val isSyncing: Boolean","description":"dev.kord.core.entity.Integration.isSyncing","location":"core/dev.kord.core.entity/-integration/is-syncing.html","searchKeys":["isSyncing","val isSyncing: Boolean","dev.kord.core.entity.Integration.isSyncing"]},{"name":"val isTemporary: Boolean","description":"dev.kord.core.event.guild.InviteCreateEvent.isTemporary","location":"core/dev.kord.core.event.guild/-invite-create-event/is-temporary.html","searchKeys":["isTemporary","val isTemporary: Boolean","dev.kord.core.event.guild.InviteCreateEvent.isTemporary"]},{"name":"val isWidgetEnabled: Boolean","description":"dev.kord.core.entity.Guild.isWidgetEnabled","location":"core/dev.kord.core.entity/-guild/is-widget-enabled.html","searchKeys":["isWidgetEnabled","val isWidgetEnabled: Boolean","dev.kord.core.entity.Guild.isWidgetEnabled"]},{"name":"val join: String?","description":"dev.kord.core.entity.Activity.Secrets.join","location":"core/dev.kord.core.entity/-activity/-secrets/join.html","searchKeys":["join","val join: String?","dev.kord.core.entity.Activity.Secrets.join"]},{"name":"val joinTimestamp: Instant","description":"dev.kord.core.cache.data.ThreadMemberData.joinTimestamp","location":"core/dev.kord.core.cache.data/-thread-member-data/join-timestamp.html","searchKeys":["joinTimestamp","val joinTimestamp: Instant","dev.kord.core.cache.data.ThreadMemberData.joinTimestamp"]},{"name":"val joinTimestamp: Instant","description":"dev.kord.core.entity.channel.thread.ThreadMember.joinTimestamp","location":"core/dev.kord.core.entity.channel.thread/-thread-member/join-timestamp.html","searchKeys":["joinTimestamp","val joinTimestamp: Instant","dev.kord.core.entity.channel.thread.ThreadMember.joinTimestamp"]},{"name":"val joinedAt: Instant","description":"dev.kord.core.cache.data.MemberData.joinedAt","location":"core/dev.kord.core.cache.data/-member-data/joined-at.html","searchKeys":["joinedAt","val joinedAt: Instant","dev.kord.core.cache.data.MemberData.joinedAt"]},{"name":"val joinedAt: Instant","description":"dev.kord.core.entity.Member.joinedAt","location":"core/dev.kord.core.entity/-member/joined-at.html","searchKeys":["joinedAt","val joinedAt: Instant","dev.kord.core.entity.Member.joinedAt"]},{"name":"val joinedAt: Optional<Instant>","description":"dev.kord.core.cache.data.GuildData.joinedAt","location":"core/dev.kord.core.cache.data/-guild-data/joined-at.html","searchKeys":["joinedAt","val joinedAt: Optional<Instant>","dev.kord.core.cache.data.GuildData.joinedAt"]},{"name":"val joinedTime: Instant?","description":"dev.kord.core.entity.Guild.joinedTime","location":"core/dev.kord.core.entity/-guild/joined-time.html","searchKeys":["joinedTime","val joinedTime: Instant?","dev.kord.core.entity.Guild.joinedTime"]},{"name":"val keys: Set<Any>","description":"dev.kord.core.cache.ViewKeys.keys","location":"core/dev.kord.core.cache/-view-keys/keys.html","searchKeys":["keys","val keys: Set<Any>","dev.kord.core.cache.ViewKeys.keys"]},{"name":"val keywordFilter: Optional<List<String>>","description":"dev.kord.core.cache.data.AutoModerationRuleTriggerMetadataData.keywordFilter","location":"core/dev.kord.core.cache.data/-auto-moderation-rule-trigger-metadata-data/keyword-filter.html","searchKeys":["keywordFilter","val keywordFilter: Optional<List<String>>","dev.kord.core.cache.data.AutoModerationRuleTriggerMetadataData.keywordFilter"]},{"name":"val keywords: List<String>","description":"dev.kord.core.entity.automoderation.KeywordAutoModerationRule.keywords","location":"core/dev.kord.core.entity.automoderation/-keyword-auto-moderation-rule/keywords.html","searchKeys":["keywords","val keywords: List<String>","dev.kord.core.entity.automoderation.KeywordAutoModerationRule.keywords"]},{"name":"val kord: Kord","description":"dev.kord.core.entity.TeamMember.kord","location":"core/dev.kord.core.entity/-team-member/kord.html","searchKeys":["kord","val kord: Kord","dev.kord.core.entity.TeamMember.kord"]},{"name":"val kord: Kord","description":"dev.kord.core.entity.channel.thread.DeletedThreadChannel.kord","location":"core/dev.kord.core.entity.channel.thread/-deleted-thread-channel/kord.html","searchKeys":["kord","val kord: Kord","dev.kord.core.entity.channel.thread.DeletedThreadChannel.kord"]},{"name":"val kord: Kord","description":"dev.kord.core.entity.interaction.ResolvedObjects.kord","location":"core/dev.kord.core.entity.interaction/-resolved-objects/kord.html","searchKeys":["kord","val kord: Kord","dev.kord.core.entity.interaction.ResolvedObjects.kord"]},{"name":"val kord: Kord","description":"dev.kord.core.supplier.RestEntitySupplier.kord","location":"core/dev.kord.core.supplier/-rest-entity-supplier/kord.html","searchKeys":["kord","val kord: Kord","dev.kord.core.supplier.RestEntitySupplier.kord"]},{"name":"val kordLogger: KLogger","description":"dev.kord.core.kordLogger","location":"core/dev.kord.core/kord-logger.html","searchKeys":["kordLogger","val kordLogger: KLogger","dev.kord.core.kordLogger"]},{"name":"val label: String","description":"dev.kord.core.cache.data.SelectOptionData.label","location":"core/dev.kord.core.cache.data/-select-option-data/label.html","searchKeys":["label","val label: String","dev.kord.core.cache.data.SelectOptionData.label"]},{"name":"val label: String","description":"dev.kord.core.entity.component.SelectOption.label","location":"core/dev.kord.core.entity.component/-select-option/label.html","searchKeys":["label","val label: String","dev.kord.core.entity.component.SelectOption.label"]},{"name":"val label: String","description":"dev.kord.core.entity.component.TextInputComponent.label","location":"core/dev.kord.core.entity.component/-text-input-component/label.html","searchKeys":["label","val label: String","dev.kord.core.entity.component.TextInputComponent.label"]},{"name":"val label: String?","description":"dev.kord.core.entity.component.ButtonComponent.label","location":"core/dev.kord.core.entity.component/-button-component/label.html","searchKeys":["label","val label: String?","dev.kord.core.entity.component.ButtonComponent.label"]},{"name":"val large: OptionalBoolean","description":"dev.kord.core.cache.data.GuildData.large","location":"core/dev.kord.core.cache.data/-guild-data/large.html","searchKeys":["large","val large: OptionalBoolean","dev.kord.core.cache.data.GuildData.large"]},{"name":"val largeImage: String?","description":"dev.kord.core.entity.Activity.Assets.largeImage","location":"core/dev.kord.core.entity/-activity/-assets/large-image.html","searchKeys":["largeImage","val largeImage: String?","dev.kord.core.entity.Activity.Assets.largeImage"]},{"name":"val largeText: String?","description":"dev.kord.core.entity.Activity.Assets.largeText","location":"core/dev.kord.core.entity/-activity/-assets/large-text.html","searchKeys":["largeText","val largeText: String?","dev.kord.core.entity.Activity.Assets.largeText"]},{"name":"val lastMessageId: OptionalSnowflake?","description":"dev.kord.core.cache.data.ChannelData.lastMessageId","location":"core/dev.kord.core.cache.data/-channel-data/last-message-id.html","searchKeys":["lastMessageId","val lastMessageId: OptionalSnowflake?","dev.kord.core.cache.data.ChannelData.lastMessageId"]},{"name":"val lastPinTimestamp: Instant?","description":"dev.kord.core.event.channel.ChannelPinsUpdateEvent.lastPinTimestamp","location":"core/dev.kord.core.event.channel/-channel-pins-update-event/last-pin-timestamp.html","searchKeys":["lastPinTimestamp","val lastPinTimestamp: Instant?","dev.kord.core.event.channel.ChannelPinsUpdateEvent.lastPinTimestamp"]},{"name":"val lastPinTimestamp: Optional<Instant?>","description":"dev.kord.core.cache.data.ChannelData.lastPinTimestamp","location":"core/dev.kord.core.cache.data/-channel-data/last-pin-timestamp.html","searchKeys":["lastPinTimestamp","val lastPinTimestamp: Optional<Instant?>","dev.kord.core.cache.data.ChannelData.lastPinTimestamp"]},{"name":"val lastPinTimestamp: Optional<Instant?>","description":"dev.kord.core.event.channel.data.ChannelPinsUpdateEventData.lastPinTimestamp","location":"core/dev.kord.core.event.channel.data/-channel-pins-update-event-data/last-pin-timestamp.html","searchKeys":["lastPinTimestamp","val lastPinTimestamp: Optional<Instant?>","dev.kord.core.event.channel.data.ChannelPinsUpdateEventData.lastPinTimestamp"]},{"name":"val linkButtons: List<ButtonComponent>","description":"dev.kord.core.entity.component.ActionRowComponent.linkButtons","location":"core/dev.kord.core.entity.component/-action-row-component/link-buttons.html","searchKeys":["linkButtons","val linkButtons: List<ButtonComponent>","dev.kord.core.entity.component.ActionRowComponent.linkButtons"]},{"name":"val locale: Optional<Locale>","description":"dev.kord.core.cache.data.InteractionData.locale","location":"core/dev.kord.core.cache.data/-interaction-data/locale.html","searchKeys":["locale","val locale: Optional<Locale>","dev.kord.core.cache.data.InteractionData.locale"]},{"name":"val locked: OptionalBoolean","description":"dev.kord.core.cache.data.ThreadMetadataData.locked","location":"core/dev.kord.core.cache.data/-thread-metadata-data/locked.html","searchKeys":["locked","val locked: OptionalBoolean","dev.kord.core.cache.data.ThreadMetadataData.locked"]},{"name":"val managed: Boolean","description":"dev.kord.core.cache.data.RoleData.managed","location":"core/dev.kord.core.cache.data/-role-data/managed.html","searchKeys":["managed","val managed: Boolean","dev.kord.core.cache.data.RoleData.managed"]},{"name":"val managed: Boolean","description":"dev.kord.core.entity.Role.managed","location":"core/dev.kord.core.entity/-role/managed.html","searchKeys":["managed","val managed: Boolean","dev.kord.core.entity.Role.managed"]},{"name":"val managed: OptionalBoolean","description":"dev.kord.core.cache.data.EmojiData.managed","location":"core/dev.kord.core.cache.data/-emoji-data/managed.html","searchKeys":["managed","val managed: OptionalBoolean","dev.kord.core.cache.data.EmojiData.managed"]},{"name":"val match: String?","description":"dev.kord.core.entity.Activity.Secrets.match","location":"core/dev.kord.core.entity/-activity/-secrets/match.html","searchKeys":["match","val match: String?","dev.kord.core.entity.Activity.Secrets.match"]},{"name":"val matchedContent: String?","description":"dev.kord.core.event.automoderation.AutoModerationActionExecutionEvent.matchedContent","location":"core/dev.kord.core.event.automoderation/-auto-moderation-action-execution-event/matched-content.html","searchKeys":["matchedContent","val matchedContent: String?","dev.kord.core.event.automoderation.AutoModerationActionExecutionEvent.matchedContent"]},{"name":"val matchedContent: String?","description":"dev.kord.core.event.automoderation.data.AutoModerationActionExecutionEventData.matchedContent","location":"core/dev.kord.core.event.automoderation.data/-auto-moderation-action-execution-event-data/matched-content.html","searchKeys":["matchedContent","val matchedContent: String?","dev.kord.core.event.automoderation.data.AutoModerationActionExecutionEventData.matchedContent"]},{"name":"val matchedKeyword: String?","description":"dev.kord.core.event.automoderation.AutoModerationActionExecutionEvent.matchedKeyword","location":"core/dev.kord.core.event.automoderation/-auto-moderation-action-execution-event/matched-keyword.html","searchKeys":["matchedKeyword","val matchedKeyword: String?","dev.kord.core.event.automoderation.AutoModerationActionExecutionEvent.matchedKeyword"]},{"name":"val matchedKeyword: String?","description":"dev.kord.core.event.automoderation.data.AutoModerationActionExecutionEventData.matchedKeyword","location":"core/dev.kord.core.event.automoderation.data/-auto-moderation-action-execution-event-data/matched-keyword.html","searchKeys":["matchedKeyword","val matchedKeyword: String?","dev.kord.core.event.automoderation.data.AutoModerationActionExecutionEventData.matchedKeyword"]},{"name":"val maxAge: Duration","description":"dev.kord.core.entity.InviteWithMetadata.maxAge","location":"core/dev.kord.core.entity/-invite-with-metadata/max-age.html","searchKeys":["maxAge","val maxAge: Duration","dev.kord.core.entity.InviteWithMetadata.maxAge"]},{"name":"val maxAge: Duration","description":"dev.kord.core.event.guild.InviteCreateEvent.maxAge","location":"core/dev.kord.core.event.guild/-invite-create-event/max-age.html","searchKeys":["maxAge","val maxAge: Duration","dev.kord.core.event.guild.InviteCreateEvent.maxAge"]},{"name":"val maxAge: DurationInSeconds","description":"dev.kord.core.cache.data.InviteCreateData.maxAge","location":"core/dev.kord.core.cache.data/-invite-create-data/max-age.html","searchKeys":["maxAge","val maxAge: DurationInSeconds","dev.kord.core.cache.data.InviteCreateData.maxAge"]},{"name":"val maxAge: DurationInSeconds","description":"dev.kord.core.cache.data.InviteWithMetadataData.maxAge","location":"core/dev.kord.core.cache.data/-invite-with-metadata-data/max-age.html","searchKeys":["maxAge","val maxAge: DurationInSeconds","dev.kord.core.cache.data.InviteWithMetadataData.maxAge"]},{"name":"val maxConcurrency: Int","description":"dev.kord.core.ClientResources.maxConcurrency","location":"core/dev.kord.core/-client-resources/max-concurrency.html","searchKeys":["maxConcurrency","val maxConcurrency: Int","dev.kord.core.ClientResources.maxConcurrency"]},{"name":"val maxLength: Int?","description":"dev.kord.core.entity.component.TextInputComponent.maxLength","location":"core/dev.kord.core.entity.component/-text-input-component/max-length.html","searchKeys":["maxLength","val maxLength: Int?","dev.kord.core.entity.component.TextInputComponent.maxLength"]},{"name":"val maxLength: OptionalInt","description":"dev.kord.core.cache.data.ApplicationCommandOptionData.maxLength","location":"core/dev.kord.core.cache.data/-application-command-option-data/max-length.html","searchKeys":["maxLength","val maxLength: OptionalInt","dev.kord.core.cache.data.ApplicationCommandOptionData.maxLength"]},{"name":"val maxMembers: Int?","description":"dev.kord.core.entity.Guild.maxMembers","location":"core/dev.kord.core.entity/-guild/max-members.html","searchKeys":["maxMembers","val maxMembers: Int?","dev.kord.core.entity.Guild.maxMembers"]},{"name":"val maxMembers: OptionalInt","description":"dev.kord.core.cache.data.GuildData.maxMembers","location":"core/dev.kord.core.cache.data/-guild-data/max-members.html","searchKeys":["maxMembers","val maxMembers: OptionalInt","dev.kord.core.cache.data.GuildData.maxMembers"]},{"name":"val maxPresences: Int","description":"dev.kord.core.entity.Guild.maxPresences","location":"core/dev.kord.core.entity/-guild/max-presences.html","searchKeys":["maxPresences","val maxPresences: Int","dev.kord.core.entity.Guild.maxPresences"]},{"name":"val maxPresences: OptionalInt?","description":"dev.kord.core.cache.data.GuildData.maxPresences","location":"core/dev.kord.core.cache.data/-guild-data/max-presences.html","searchKeys":["maxPresences","val maxPresences: OptionalInt?","dev.kord.core.cache.data.GuildData.maxPresences"]},{"name":"val maxSize: Int?","description":"dev.kord.core.entity.Activity.Party.maxSize","location":"core/dev.kord.core.entity/-activity/-party/max-size.html","searchKeys":["maxSize","val maxSize: Int?","dev.kord.core.entity.Activity.Party.maxSize"]},{"name":"val maxUses: Int","description":"dev.kord.core.cache.data.InviteCreateData.maxUses","location":"core/dev.kord.core.cache.data/-invite-create-data/max-uses.html","searchKeys":["maxUses","val maxUses: Int","dev.kord.core.cache.data.InviteCreateData.maxUses"]},{"name":"val maxUses: Int","description":"dev.kord.core.cache.data.InviteWithMetadataData.maxUses","location":"core/dev.kord.core.cache.data/-invite-with-metadata-data/max-uses.html","searchKeys":["maxUses","val maxUses: Int","dev.kord.core.cache.data.InviteWithMetadataData.maxUses"]},{"name":"val maxUses: Int","description":"dev.kord.core.entity.InviteWithMetadata.maxUses","location":"core/dev.kord.core.entity/-invite-with-metadata/max-uses.html","searchKeys":["maxUses","val maxUses: Int","dev.kord.core.entity.InviteWithMetadata.maxUses"]},{"name":"val maxUses: Int","description":"dev.kord.core.event.guild.InviteCreateEvent.maxUses","location":"core/dev.kord.core.event.guild/-invite-create-event/max-uses.html","searchKeys":["maxUses","val maxUses: Int","dev.kord.core.event.guild.InviteCreateEvent.maxUses"]},{"name":"val maxValue: Optional<JsonPrimitive>","description":"dev.kord.core.cache.data.ApplicationCommandOptionData.maxValue","location":"core/dev.kord.core.cache.data/-application-command-option-data/max-value.html","searchKeys":["maxValue","val maxValue: Optional<JsonPrimitive>","dev.kord.core.cache.data.ApplicationCommandOptionData.maxValue"]},{"name":"val maxValues: Int","description":"dev.kord.core.entity.component.SelectMenuComponent.maxValues","location":"core/dev.kord.core.entity.component/-select-menu-component/max-values.html","searchKeys":["maxValues","val maxValues: Int","dev.kord.core.entity.component.SelectMenuComponent.maxValues"]},{"name":"val maxVideoChannelUsers: Int?","description":"dev.kord.core.entity.Guild.maxVideoChannelUsers","location":"core/dev.kord.core.entity/-guild/max-video-channel-users.html","searchKeys":["maxVideoChannelUsers","val maxVideoChannelUsers: Int?","dev.kord.core.entity.Guild.maxVideoChannelUsers"]},{"name":"val maxVideoChannelUsers: OptionalInt","description":"dev.kord.core.cache.data.GuildData.maxVideoChannelUsers","location":"core/dev.kord.core.cache.data/-guild-data/max-video-channel-users.html","searchKeys":["maxVideoChannelUsers","val maxVideoChannelUsers: OptionalInt","dev.kord.core.cache.data.GuildData.maxVideoChannelUsers"]},{"name":"val me: Boolean","description":"dev.kord.core.cache.data.ReactionData.me","location":"core/dev.kord.core.cache.data/-reaction-data/me.html","searchKeys":["me","val me: Boolean","dev.kord.core.cache.data.ReactionData.me"]},{"name":"val member: Member","description":"dev.kord.core.event.guild.MemberJoinEvent.member","location":"core/dev.kord.core.event.guild/-member-join-event/member.html","searchKeys":["member","val member: Member","dev.kord.core.event.guild.MemberJoinEvent.member"]},{"name":"val member: Member","description":"dev.kord.core.event.guild.MemberUpdateEvent.member","location":"core/dev.kord.core.event.guild/-member-update-event/member.html","searchKeys":["member","val member: Member","dev.kord.core.event.guild.MemberUpdateEvent.member"]},{"name":"val member: Member?","description":"dev.kord.core.event.message.MessageCreateEvent.member","location":"core/dev.kord.core.event.message/-message-create-event/member.html","searchKeys":["member","val member: Member?","dev.kord.core.event.message.MessageCreateEvent.member"]},{"name":"val member: MemberBehavior","description":"dev.kord.core.event.automoderation.AutoModerationActionExecutionEvent.member","location":"core/dev.kord.core.event.automoderation/-auto-moderation-action-execution-event/member.html","searchKeys":["member","val member: MemberBehavior","dev.kord.core.event.automoderation.AutoModerationActionExecutionEvent.member"]},{"name":"val member: MemberBehavior","description":"dev.kord.core.event.user.PresenceUpdateEvent.member","location":"core/dev.kord.core.event.user/-presence-update-event/member.html","searchKeys":["member","val member: MemberBehavior","dev.kord.core.event.user.PresenceUpdateEvent.member"]},{"name":"val member: MemberBehavior?","description":"dev.kord.core.entity.GuildEmoji.member","location":"core/dev.kord.core.entity/-guild-emoji/member.html","searchKeys":["member","val member: MemberBehavior?","dev.kord.core.entity.GuildEmoji.member"]},{"name":"val member: Optional<DiscordGuildMember>","description":"dev.kord.core.event.channel.data.TypingStartEventData.member","location":"core/dev.kord.core.event.channel.data/-typing-start-event-data/member.html","searchKeys":["member","val member: Optional<DiscordGuildMember>","dev.kord.core.event.channel.data.TypingStartEventData.member"]},{"name":"val member: Optional<MemberData>","description":"dev.kord.core.cache.data.InteractionData.member","location":"core/dev.kord.core.cache.data/-interaction-data/member.html","searchKeys":["member","val member: Optional<MemberData>","dev.kord.core.cache.data.InteractionData.member"]},{"name":"val member: Optional<ThreadMemberData>","description":"dev.kord.core.cache.data.ChannelData.member","location":"core/dev.kord.core.cache.data/-channel-data/member.html","searchKeys":["member","val member: Optional<ThreadMemberData>","dev.kord.core.cache.data.ChannelData.member"]},{"name":"val member: ThreadMember","description":"dev.kord.core.event.channel.thread.ThreadMemberUpdateEvent.member","location":"core/dev.kord.core.event.channel.thread/-thread-member-update-event/member.html","searchKeys":["member","val member: ThreadMember","dev.kord.core.event.channel.thread.ThreadMemberUpdateEvent.member"]},{"name":"val memberAvatar: Icon?","description":"dev.kord.core.entity.Member.memberAvatar","location":"core/dev.kord.core.entity/-member/member-avatar.html","searchKeys":["memberAvatar","val memberAvatar: Icon?","dev.kord.core.entity.Member.memberAvatar"]},{"name":"val memberCount: Int","description":"dev.kord.core.cache.data.ThreadMembersUpdateEventData.memberCount","location":"core/dev.kord.core.cache.data/-thread-members-update-event-data/member-count.html","searchKeys":["memberCount","val memberCount: Int","dev.kord.core.cache.data.ThreadMembersUpdateEventData.memberCount"]},{"name":"val memberCount: Int","description":"dev.kord.core.event.channel.thread.ThreadMembersUpdateEvent.memberCount","location":"core/dev.kord.core.event.channel.thread/-thread-members-update-event/member-count.html","searchKeys":["memberCount","val memberCount: Int","dev.kord.core.event.channel.thread.ThreadMembersUpdateEvent.memberCount"]},{"name":"val memberCount: Int?","description":"dev.kord.core.entity.Guild.memberCount","location":"core/dev.kord.core.entity/-guild/member-count.html","searchKeys":["memberCount","val memberCount: Int?","dev.kord.core.entity.Guild.memberCount"]},{"name":"val memberCount: OptionalInt","description":"dev.kord.core.cache.data.ChannelData.memberCount","location":"core/dev.kord.core.cache.data/-channel-data/member-count.html","searchKeys":["memberCount","val memberCount: OptionalInt","dev.kord.core.cache.data.ChannelData.memberCount"]},{"name":"val memberCount: OptionalInt","description":"dev.kord.core.cache.data.GuildData.memberCount","location":"core/dev.kord.core.cache.data/-guild-data/member-count.html","searchKeys":["memberCount","val memberCount: OptionalInt","dev.kord.core.cache.data.GuildData.memberCount"]},{"name":"val memberData: MemberData","description":"dev.kord.core.entity.Member.memberData","location":"core/dev.kord.core.entity/-member/member-data.html","searchKeys":["memberData","val memberData: MemberData","dev.kord.core.entity.Member.memberData"]},{"name":"val memberId: OptionalSnowflake","description":"dev.kord.core.cache.data.VoiceStateData.memberId","location":"core/dev.kord.core.cache.data/-voice-state-data/member-id.html","searchKeys":["memberId","val memberId: OptionalSnowflake","dev.kord.core.cache.data.VoiceStateData.memberId"]},{"name":"val memberId: Snowflake","description":"dev.kord.core.event.automoderation.AutoModerationActionExecutionEvent.memberId","location":"core/dev.kord.core.event.automoderation/-auto-moderation-action-execution-event/member-id.html","searchKeys":["memberId","val memberId: Snowflake","dev.kord.core.event.automoderation.AutoModerationActionExecutionEvent.memberId"]},{"name":"val members: Flow<Member>","description":"dev.kord.core.supplier.CacheEntitySupplier.members","location":"core/dev.kord.core.supplier/-cache-entity-supplier/members.html","searchKeys":["members","val members: Flow<Member>","dev.kord.core.supplier.CacheEntitySupplier.members"]},{"name":"val members: List<TeamMember>","description":"dev.kord.core.entity.Team.members","location":"core/dev.kord.core.entity/-team/members.html","searchKeys":["members","val members: List<TeamMember>","dev.kord.core.entity.Team.members"]},{"name":"val members: List<TeamMemberData>","description":"dev.kord.core.cache.data.TeamData.members","location":"core/dev.kord.core.cache.data/-team-data/members.html","searchKeys":["members","val members: List<TeamMemberData>","dev.kord.core.cache.data.TeamData.members"]},{"name":"val members: List<ThreadMember>","description":"dev.kord.core.event.channel.thread.ThreadListSyncEvent.members","location":"core/dev.kord.core.event.channel.thread/-thread-list-sync-event/members.html","searchKeys":["members","val members: List<ThreadMember>","dev.kord.core.event.channel.thread.ThreadListSyncEvent.members"]},{"name":"val members: List<ThreadMemberData>","description":"dev.kord.core.cache.data.ThreadListSyncData.members","location":"core/dev.kord.core.cache.data/-thread-list-sync-data/members.html","searchKeys":["members","val members: List<ThreadMemberData>","dev.kord.core.cache.data.ThreadListSyncData.members"]},{"name":"val members: Map<Snowflake, Member>?","description":"dev.kord.core.entity.interaction.ResolvedObjects.members","location":"core/dev.kord.core.entity.interaction/-resolved-objects/members.html","searchKeys":["members","val members: Map<Snowflake, Member>?","dev.kord.core.entity.interaction.ResolvedObjects.members"]},{"name":"val members: Optional<Map<Snowflake, MemberData>>","description":"dev.kord.core.cache.data.ResolvedObjectsData.members","location":"core/dev.kord.core.cache.data/-resolved-objects-data/members.html","searchKeys":["members","val members: Optional<Map<Snowflake, MemberData>>","dev.kord.core.cache.data.ResolvedObjectsData.members"]},{"name":"val members: Set<Member>","description":"dev.kord.core.event.guild.MembersChunkEvent.members","location":"core/dev.kord.core.event.guild/-members-chunk-event/members.html","searchKeys":["members","val members: Set<Member>","dev.kord.core.event.guild.MembersChunkEvent.members"]},{"name":"val members: Set<MemberData>","description":"dev.kord.core.cache.data.MembersChunkData.members","location":"core/dev.kord.core.cache.data/-members-chunk-data/members.html","searchKeys":["members","val members: Set<MemberData>","dev.kord.core.cache.data.MembersChunkData.members"]},{"name":"val membershipState: TeamMembershipState","description":"dev.kord.core.cache.data.TeamMemberData.membershipState","location":"core/dev.kord.core.cache.data/-team-member-data/membership-state.html","searchKeys":["membershipState","val membershipState: TeamMembershipState","dev.kord.core.cache.data.TeamMemberData.membershipState"]},{"name":"val membershipState: TeamMembershipState","description":"dev.kord.core.entity.TeamMember.membershipState","location":"core/dev.kord.core.entity/-team-member/membership-state.html","searchKeys":["membershipState","val membershipState: TeamMembershipState","dev.kord.core.entity.TeamMember.membershipState"]},{"name":"val mention: String","description":"dev.kord.core.entity.GuildEmoji.mention","location":"core/dev.kord.core.entity/-guild-emoji/mention.html","searchKeys":["mention","val mention: String","dev.kord.core.entity.GuildEmoji.mention"]},{"name":"val mentionEveryone: Boolean","description":"dev.kord.core.cache.data.MessageData.mentionEveryone","location":"core/dev.kord.core.cache.data/-message-data/mention-everyone.html","searchKeys":["mentionEveryone","val mentionEveryone: Boolean","dev.kord.core.cache.data.MessageData.mentionEveryone"]},{"name":"val mentionLimit: Int","description":"dev.kord.core.entity.automoderation.MentionSpamAutoModerationRule.mentionLimit","location":"core/dev.kord.core.entity.automoderation/-mention-spam-auto-moderation-rule/mention-limit.html","searchKeys":["mentionLimit","val mentionLimit: Int","dev.kord.core.entity.automoderation.MentionSpamAutoModerationRule.mentionLimit"]},{"name":"val mentionRoles: List<Snowflake>","description":"dev.kord.core.cache.data.MessageData.mentionRoles","location":"core/dev.kord.core.cache.data/-message-data/mention-roles.html","searchKeys":["mentionRoles","val mentionRoles: List<Snowflake>","dev.kord.core.cache.data.MessageData.mentionRoles"]},{"name":"val mentionTotalLimit: OptionalInt","description":"dev.kord.core.cache.data.AutoModerationRuleTriggerMetadataData.mentionTotalLimit","location":"core/dev.kord.core.cache.data/-auto-moderation-rule-trigger-metadata-data/mention-total-limit.html","searchKeys":["mentionTotalLimit","val mentionTotalLimit: OptionalInt","dev.kord.core.cache.data.AutoModerationRuleTriggerMetadataData.mentionTotalLimit"]},{"name":"val mentionable: Boolean","description":"dev.kord.core.cache.data.RoleData.mentionable","location":"core/dev.kord.core.cache.data/-role-data/mentionable.html","searchKeys":["mentionable","val mentionable: Boolean","dev.kord.core.cache.data.RoleData.mentionable"]},{"name":"val mentionable: Boolean","description":"dev.kord.core.entity.Role.mentionable","location":"core/dev.kord.core.entity/-role/mentionable.html","searchKeys":["mentionable","val mentionable: Boolean","dev.kord.core.entity.Role.mentionable"]},{"name":"val mentionedChannelBehaviors: Set<ChannelBehavior>","description":"dev.kord.core.entity.Message.mentionedChannelBehaviors","location":"core/dev.kord.core.entity/-message/mentioned-channel-behaviors.html","searchKeys":["mentionedChannelBehaviors","val mentionedChannelBehaviors: Set<ChannelBehavior>","dev.kord.core.entity.Message.mentionedChannelBehaviors"]},{"name":"val mentionedChannelIds: Set<Snowflake>","description":"dev.kord.core.entity.Message.mentionedChannelIds","location":"core/dev.kord.core.entity/-message/mentioned-channel-ids.html","searchKeys":["mentionedChannelIds","val mentionedChannelIds: Set<Snowflake>","dev.kord.core.entity.Message.mentionedChannelIds"]},{"name":"val mentionedChannels: Flow<Channel>","description":"dev.kord.core.entity.Message.mentionedChannels","location":"core/dev.kord.core.entity/-message/mentioned-channels.html","searchKeys":["mentionedChannels","val mentionedChannels: Flow<Channel>","dev.kord.core.entity.Message.mentionedChannels"]},{"name":"val mentionedChannels: Optional<List<Snowflake>>","description":"dev.kord.core.cache.data.MessageData.mentionedChannels","location":"core/dev.kord.core.cache.data/-message-data/mentioned-channels.html","searchKeys":["mentionedChannels","val mentionedChannels: Optional<List<Snowflake>>","dev.kord.core.cache.data.MessageData.mentionedChannels"]},{"name":"val mentionedRoleIds: Set<Snowflake>","description":"dev.kord.core.entity.Message.mentionedRoleIds","location":"core/dev.kord.core.entity/-message/mentioned-role-ids.html","searchKeys":["mentionedRoleIds","val mentionedRoleIds: Set<Snowflake>","dev.kord.core.entity.Message.mentionedRoleIds"]},{"name":"val mentionedRoles: Flow<Role>","description":"dev.kord.core.entity.Message.mentionedRoles","location":"core/dev.kord.core.entity/-message/mentioned-roles.html","searchKeys":["mentionedRoles","val mentionedRoles: Flow<Role>","dev.kord.core.entity.Message.mentionedRoles"]},{"name":"val mentionedUserBehaviors: Set<UserBehavior>","description":"dev.kord.core.entity.Message.mentionedUserBehaviors","location":"core/dev.kord.core.entity/-message/mentioned-user-behaviors.html","searchKeys":["mentionedUserBehaviors","val mentionedUserBehaviors: Set<UserBehavior>","dev.kord.core.entity.Message.mentionedUserBehaviors"]},{"name":"val mentionedUserIds: Set<Snowflake>","description":"dev.kord.core.entity.Message.mentionedUserIds","location":"core/dev.kord.core.entity/-message/mentioned-user-ids.html","searchKeys":["mentionedUserIds","val mentionedUserIds: Set<Snowflake>","dev.kord.core.entity.Message.mentionedUserIds"]},{"name":"val mentionedUsers: Flow<User>","description":"dev.kord.core.entity.Message.mentionedUsers","location":"core/dev.kord.core.entity/-message/mentioned-users.html","searchKeys":["mentionedUsers","val mentionedUsers: Flow<User>","dev.kord.core.entity.Message.mentionedUsers"]},{"name":"val mentions: List<Snowflake>","description":"dev.kord.core.cache.data.MessageData.mentions","location":"core/dev.kord.core.cache.data/-message-data/mentions.html","searchKeys":["mentions","val mentions: List<Snowflake>","dev.kord.core.cache.data.MessageData.mentions"]},{"name":"val mentionsEveryone: Boolean","description":"dev.kord.core.entity.Message.mentionsEveryone","location":"core/dev.kord.core.entity/-message/mentions-everyone.html","searchKeys":["mentionsEveryone","val mentionsEveryone: Boolean","dev.kord.core.entity.Message.mentionsEveryone"]},{"name":"val message: Message","description":"dev.kord.core.entity.interaction.followup.FollowupMessage.message","location":"core/dev.kord.core.entity.interaction.followup/-followup-message/message.html","searchKeys":["message","val message: Message","dev.kord.core.entity.interaction.followup.FollowupMessage.message"]},{"name":"val message: Message","description":"dev.kord.core.entity.interaction.response.MessageInteractionResponse.message","location":"core/dev.kord.core.entity.interaction.response/-message-interaction-response/message.html","searchKeys":["message","val message: Message","dev.kord.core.entity.interaction.response.MessageInteractionResponse.message"]},{"name":"val message: Message","description":"dev.kord.core.event.message.MessageCreateEvent.message","location":"core/dev.kord.core.event.message/-message-create-event/message.html","searchKeys":["message","val message: Message","dev.kord.core.event.message.MessageCreateEvent.message"]},{"name":"val message: Message?","description":"dev.kord.core.event.message.MessageDeleteEvent.message","location":"core/dev.kord.core.event.message/-message-delete-event/message.html","searchKeys":["message","val message: Message?","dev.kord.core.event.message.MessageDeleteEvent.message"]},{"name":"val message: MessageBehavior","description":"dev.kord.core.event.message.MessageUpdateEvent.message","location":"core/dev.kord.core.event.message/-message-update-event/message.html","searchKeys":["message","val message: MessageBehavior","dev.kord.core.event.message.MessageUpdateEvent.message"]},{"name":"val message: MessageBehavior","description":"dev.kord.core.event.message.ReactionAddEvent.message","location":"core/dev.kord.core.event.message/-reaction-add-event/message.html","searchKeys":["message","val message: MessageBehavior","dev.kord.core.event.message.ReactionAddEvent.message"]},{"name":"val message: MessageBehavior","description":"dev.kord.core.event.message.ReactionRemoveAllEvent.message","location":"core/dev.kord.core.event.message/-reaction-remove-all-event/message.html","searchKeys":["message","val message: MessageBehavior","dev.kord.core.event.message.ReactionRemoveAllEvent.message"]},{"name":"val message: MessageBehavior","description":"dev.kord.core.event.message.ReactionRemoveEmojiEvent.message","location":"core/dev.kord.core.event.message/-reaction-remove-emoji-event/message.html","searchKeys":["message","val message: MessageBehavior","dev.kord.core.event.message.ReactionRemoveEmojiEvent.message"]},{"name":"val message: MessageBehavior","description":"dev.kord.core.event.message.ReactionRemoveEvent.message","location":"core/dev.kord.core.event.message/-reaction-remove-event/message.html","searchKeys":["message","val message: MessageBehavior","dev.kord.core.event.message.ReactionRemoveEvent.message"]},{"name":"val message: MessageBehavior?","description":"dev.kord.core.entity.MessageReference.message","location":"core/dev.kord.core.entity/-message-reference/message.html","searchKeys":["message","val message: MessageBehavior?","dev.kord.core.entity.MessageReference.message"]},{"name":"val message: MessageBehavior?","description":"dev.kord.core.event.automoderation.AutoModerationActionExecutionEvent.message","location":"core/dev.kord.core.event.automoderation/-auto-moderation-action-execution-event/message.html","searchKeys":["message","val message: MessageBehavior?","dev.kord.core.event.automoderation.AutoModerationActionExecutionEvent.message"]},{"name":"val message: Optional<MessageData>","description":"dev.kord.core.cache.data.InteractionData.message","location":"core/dev.kord.core.cache.data/-interaction-data/message.html","searchKeys":["message","val message: Optional<MessageData>","dev.kord.core.cache.data.InteractionData.message"]},{"name":"val messageCount: OptionalInt","description":"dev.kord.core.cache.data.ChannelData.messageCount","location":"core/dev.kord.core.cache.data/-channel-data/message-count.html","searchKeys":["messageCount","val messageCount: OptionalInt","dev.kord.core.cache.data.ChannelData.messageCount"]},{"name":"val messageId: OptionalSnowflake","description":"dev.kord.core.event.automoderation.data.AutoModerationActionExecutionEventData.messageId","location":"core/dev.kord.core.event.automoderation.data/-auto-moderation-action-execution-event-data/message-id.html","searchKeys":["messageId","val messageId: OptionalSnowflake","dev.kord.core.event.automoderation.data.AutoModerationActionExecutionEventData.messageId"]},{"name":"val messageId: Snowflake","description":"dev.kord.core.cache.data.ReactionRemoveEmojiData.messageId","location":"core/dev.kord.core.cache.data/-reaction-remove-emoji-data/message-id.html","searchKeys":["messageId","val messageId: Snowflake","dev.kord.core.cache.data.ReactionRemoveEmojiData.messageId"]},{"name":"val messageId: Snowflake","description":"dev.kord.core.event.message.MessageDeleteEvent.messageId","location":"core/dev.kord.core.event.message/-message-delete-event/message-id.html","searchKeys":["messageId","val messageId: Snowflake","dev.kord.core.event.message.MessageDeleteEvent.messageId"]},{"name":"val messageId: Snowflake","description":"dev.kord.core.event.message.MessageUpdateEvent.messageId","location":"core/dev.kord.core.event.message/-message-update-event/message-id.html","searchKeys":["messageId","val messageId: Snowflake","dev.kord.core.event.message.MessageUpdateEvent.messageId"]},{"name":"val messageId: Snowflake","description":"dev.kord.core.event.message.ReactionAddEvent.messageId","location":"core/dev.kord.core.event.message/-reaction-add-event/message-id.html","searchKeys":["messageId","val messageId: Snowflake","dev.kord.core.event.message.ReactionAddEvent.messageId"]},{"name":"val messageId: Snowflake","description":"dev.kord.core.event.message.ReactionRemoveAllEvent.messageId","location":"core/dev.kord.core.event.message/-reaction-remove-all-event/message-id.html","searchKeys":["messageId","val messageId: Snowflake","dev.kord.core.event.message.ReactionRemoveAllEvent.messageId"]},{"name":"val messageId: Snowflake","description":"dev.kord.core.event.message.ReactionRemoveEmojiEvent.messageId","location":"core/dev.kord.core.event.message/-reaction-remove-emoji-event/message-id.html","searchKeys":["messageId","val messageId: Snowflake","dev.kord.core.event.message.ReactionRemoveEmojiEvent.messageId"]},{"name":"val messageId: Snowflake","description":"dev.kord.core.event.message.ReactionRemoveEvent.messageId","location":"core/dev.kord.core.event.message/-reaction-remove-event/message-id.html","searchKeys":["messageId","val messageId: Snowflake","dev.kord.core.event.message.ReactionRemoveEvent.messageId"]},{"name":"val messageId: Snowflake?","description":"dev.kord.core.event.automoderation.AutoModerationActionExecutionEvent.messageId","location":"core/dev.kord.core.event.automoderation/-auto-moderation-action-execution-event/message-id.html","searchKeys":["messageId","val messageId: Snowflake?","dev.kord.core.event.automoderation.AutoModerationActionExecutionEvent.messageId"]},{"name":"val messageIds: Set<Snowflake>","description":"dev.kord.core.event.message.MessageBulkDeleteEvent.messageIds","location":"core/dev.kord.core.event.message/-message-bulk-delete-event/message-ids.html","searchKeys":["messageIds","val messageIds: Set<Snowflake>","dev.kord.core.event.message.MessageBulkDeleteEvent.messageIds"]},{"name":"val messageReference: MessageReference?","description":"dev.kord.core.entity.Message.messageReference","location":"core/dev.kord.core.entity/-message/message-reference.html","searchKeys":["messageReference","val messageReference: MessageReference?","dev.kord.core.entity.Message.messageReference"]},{"name":"val messageReference: Optional<MessageReferenceData>","description":"dev.kord.core.cache.data.MessageData.messageReference","location":"core/dev.kord.core.cache.data/-message-data/message-reference.html","searchKeys":["messageReference","val messageReference: Optional<MessageReferenceData>","dev.kord.core.cache.data.MessageData.messageReference"]},{"name":"val messages: Map<Snowflake, Message>?","description":"dev.kord.core.entity.interaction.ResolvedObjects.messages","location":"core/dev.kord.core.entity.interaction/-resolved-objects/messages.html","searchKeys":["messages","val messages: Map<Snowflake, Message>?","dev.kord.core.entity.interaction.ResolvedObjects.messages"]},{"name":"val messages: Optional<Map<Snowflake, MessageData>>","description":"dev.kord.core.cache.data.ResolvedObjectsData.messages","location":"core/dev.kord.core.cache.data/-resolved-objects-data/messages.html","searchKeys":["messages","val messages: Optional<Map<Snowflake, MessageData>>","dev.kord.core.cache.data.ResolvedObjectsData.messages"]},{"name":"val messages: Set<Message>","description":"dev.kord.core.event.message.MessageBulkDeleteEvent.messages","location":"core/dev.kord.core.event.message/-message-bulk-delete-event/messages.html","searchKeys":["messages","val messages: Set<Message>","dev.kord.core.event.message.MessageBulkDeleteEvent.messages"]},{"name":"val metadata: Optional<AutoModerationActionMetadataData>","description":"dev.kord.core.cache.data.AutoModerationActionData.metadata","location":"core/dev.kord.core.cache.data/-auto-moderation-action-data/metadata.html","searchKeys":["metadata","val metadata: Optional<AutoModerationActionMetadataData>","dev.kord.core.cache.data.AutoModerationActionData.metadata"]},{"name":"val mfaLevel: MFALevel","description":"dev.kord.core.cache.data.GuildData.mfaLevel","location":"core/dev.kord.core.cache.data/-guild-data/mfa-level.html","searchKeys":["mfaLevel","val mfaLevel: MFALevel","dev.kord.core.cache.data.GuildData.mfaLevel"]},{"name":"val mfaLevel: MFALevel","description":"dev.kord.core.entity.Guild.mfaLevel","location":"core/dev.kord.core.entity/-guild/mfa-level.html","searchKeys":["mfaLevel","val mfaLevel: MFALevel","dev.kord.core.entity.Guild.mfaLevel"]},{"name":"val minLength: Int?","description":"dev.kord.core.entity.component.TextInputComponent.minLength","location":"core/dev.kord.core.entity.component/-text-input-component/min-length.html","searchKeys":["minLength","val minLength: Int?","dev.kord.core.entity.component.TextInputComponent.minLength"]},{"name":"val minLength: OptionalInt","description":"dev.kord.core.cache.data.ApplicationCommandOptionData.minLength","location":"core/dev.kord.core.cache.data/-application-command-option-data/min-length.html","searchKeys":["minLength","val minLength: OptionalInt","dev.kord.core.cache.data.ApplicationCommandOptionData.minLength"]},{"name":"val minValue: Optional<JsonPrimitive>","description":"dev.kord.core.cache.data.ApplicationCommandOptionData.minValue","location":"core/dev.kord.core.cache.data/-application-command-option-data/min-value.html","searchKeys":["minValue","val minValue: Optional<JsonPrimitive>","dev.kord.core.cache.data.ApplicationCommandOptionData.minValue"]},{"name":"val minValues: Int","description":"dev.kord.core.entity.component.SelectMenuComponent.minValues","location":"core/dev.kord.core.entity.component/-select-menu-component/min-values.html","searchKeys":["minValues","val minValues: Int","dev.kord.core.entity.component.SelectMenuComponent.minValues"]},{"name":"val mobile: ClientStatus.Client.Mobile?","description":"dev.kord.core.entity.ClientStatus.mobile","location":"core/dev.kord.core.entity/-client-status/mobile.html","searchKeys":["mobile","val mobile: ClientStatus.Client.Mobile?","dev.kord.core.entity.ClientStatus.mobile"]},{"name":"val mobile: Optional<PresenceStatus>","description":"dev.kord.core.cache.data.ClientStatusData.mobile","location":"core/dev.kord.core.cache.data/-client-status-data/mobile.html","searchKeys":["mobile","val mobile: Optional<PresenceStatus>","dev.kord.core.cache.data.ClientStatusData.mobile"]},{"name":"val mute: Boolean","description":"dev.kord.core.cache.data.VoiceStateData.mute","location":"core/dev.kord.core.cache.data/-voice-state-data/mute.html","searchKeys":["mute","val mute: Boolean","dev.kord.core.cache.data.VoiceStateData.mute"]},{"name":"val name: Optional<String>","description":"dev.kord.core.cache.data.ApplicationInteractionData.name","location":"core/dev.kord.core.cache.data/-application-interaction-data/name.html","searchKeys":["name","val name: Optional<String>","dev.kord.core.cache.data.ApplicationInteractionData.name"]},{"name":"val name: Optional<String>","description":"dev.kord.core.cache.data.EmbedAuthorData.name","location":"core/dev.kord.core.cache.data/-embed-author-data/name.html","searchKeys":["name","val name: Optional<String>","dev.kord.core.cache.data.EmbedAuthorData.name"]},{"name":"val name: Optional<String>","description":"dev.kord.core.cache.data.EmbedProviderData.name","location":"core/dev.kord.core.cache.data/-embed-provider-data/name.html","searchKeys":["name","val name: Optional<String>","dev.kord.core.cache.data.EmbedProviderData.name"]},{"name":"val name: Optional<String?>","description":"dev.kord.core.cache.data.ChannelData.name","location":"core/dev.kord.core.cache.data/-channel-data/name.html","searchKeys":["name","val name: Optional<String?>","dev.kord.core.cache.data.ChannelData.name"]},{"name":"val name: String","description":"dev.kord.core.cache.data.ActivityData.name","location":"core/dev.kord.core.cache.data/-activity-data/name.html","searchKeys":["name","val name: String","dev.kord.core.cache.data.ActivityData.name"]},{"name":"val name: String","description":"dev.kord.core.cache.data.ApplicationCommandData.name","location":"core/dev.kord.core.cache.data/-application-command-data/name.html","searchKeys":["name","val name: String","dev.kord.core.cache.data.ApplicationCommandData.name"]},{"name":"val name: String","description":"dev.kord.core.cache.data.ApplicationCommandGroupData.name","location":"core/dev.kord.core.cache.data/-application-command-group-data/name.html","searchKeys":["name","val name: String","dev.kord.core.cache.data.ApplicationCommandGroupData.name"]},{"name":"val name: String","description":"dev.kord.core.cache.data.ApplicationCommandOptionChoiceData.name","location":"core/dev.kord.core.cache.data/-application-command-option-choice-data/name.html","searchKeys":["name","val name: String","dev.kord.core.cache.data.ApplicationCommandOptionChoiceData.name"]},{"name":"val name: String","description":"dev.kord.core.cache.data.ApplicationCommandOptionData.name","location":"core/dev.kord.core.cache.data/-application-command-option-data/name.html","searchKeys":["name","val name: String","dev.kord.core.cache.data.ApplicationCommandOptionData.name"]},{"name":"val name: String","description":"dev.kord.core.cache.data.ApplicationCommandParameterData.name","location":"core/dev.kord.core.cache.data/-application-command-parameter-data/name.html","searchKeys":["name","val name: String","dev.kord.core.cache.data.ApplicationCommandParameterData.name"]},{"name":"val name: String","description":"dev.kord.core.cache.data.ApplicationCommandSubcommandData.name","location":"core/dev.kord.core.cache.data/-application-command-subcommand-data/name.html","searchKeys":["name","val name: String","dev.kord.core.cache.data.ApplicationCommandSubcommandData.name"]},{"name":"val name: String","description":"dev.kord.core.cache.data.AutoModerationRuleData.name","location":"core/dev.kord.core.cache.data/-auto-moderation-rule-data/name.html","searchKeys":["name","val name: String","dev.kord.core.cache.data.AutoModerationRuleData.name"]},{"name":"val name: String","description":"dev.kord.core.cache.data.EmbedFieldData.name","location":"core/dev.kord.core.cache.data/-embed-field-data/name.html","searchKeys":["name","val name: String","dev.kord.core.cache.data.EmbedFieldData.name"]},{"name":"val name: String","description":"dev.kord.core.cache.data.GuildData.name","location":"core/dev.kord.core.cache.data/-guild-data/name.html","searchKeys":["name","val name: String","dev.kord.core.cache.data.GuildData.name"]},{"name":"val name: String","description":"dev.kord.core.cache.data.GuildPreviewData.name","location":"core/dev.kord.core.cache.data/-guild-preview-data/name.html","searchKeys":["name","val name: String","dev.kord.core.cache.data.GuildPreviewData.name"]},{"name":"val name: String","description":"dev.kord.core.cache.data.GuildScheduledEventData.name","location":"core/dev.kord.core.cache.data/-guild-scheduled-event-data/name.html","searchKeys":["name","val name: String","dev.kord.core.cache.data.GuildScheduledEventData.name"]},{"name":"val name: String","description":"dev.kord.core.cache.data.IntegrationData.name","location":"core/dev.kord.core.cache.data/-integration-data/name.html","searchKeys":["name","val name: String","dev.kord.core.cache.data.IntegrationData.name"]},{"name":"val name: String","description":"dev.kord.core.cache.data.IntegrationsAccountData.name","location":"core/dev.kord.core.cache.data/-integrations-account-data/name.html","searchKeys":["name","val name: String","dev.kord.core.cache.data.IntegrationsAccountData.name"]},{"name":"val name: String","description":"dev.kord.core.cache.data.MessageInteractionData.name","location":"core/dev.kord.core.cache.data/-message-interaction-data/name.html","searchKeys":["name","val name: String","dev.kord.core.cache.data.MessageInteractionData.name"]},{"name":"val name: String","description":"dev.kord.core.cache.data.OptionData.name","location":"core/dev.kord.core.cache.data/-option-data/name.html","searchKeys":["name","val name: String","dev.kord.core.cache.data.OptionData.name"]},{"name":"val name: String","description":"dev.kord.core.cache.data.PartialGuildData.name","location":"core/dev.kord.core.cache.data/-partial-guild-data/name.html","searchKeys":["name","val name: String","dev.kord.core.cache.data.PartialGuildData.name"]},{"name":"val name: String","description":"dev.kord.core.cache.data.RegionData.name","location":"core/dev.kord.core.cache.data/-region-data/name.html","searchKeys":["name","val name: String","dev.kord.core.cache.data.RegionData.name"]},{"name":"val name: String","description":"dev.kord.core.cache.data.RoleData.name","location":"core/dev.kord.core.cache.data/-role-data/name.html","searchKeys":["name","val name: String","dev.kord.core.cache.data.RoleData.name"]},{"name":"val name: String","description":"dev.kord.core.cache.data.StickerData.name","location":"core/dev.kord.core.cache.data/-sticker-data/name.html","searchKeys":["name","val name: String","dev.kord.core.cache.data.StickerData.name"]},{"name":"val name: String","description":"dev.kord.core.cache.data.StickerItemData.name","location":"core/dev.kord.core.cache.data/-sticker-item-data/name.html","searchKeys":["name","val name: String","dev.kord.core.cache.data.StickerItemData.name"]},{"name":"val name: String","description":"dev.kord.core.cache.data.StickerPackData.name","location":"core/dev.kord.core.cache.data/-sticker-pack-data/name.html","searchKeys":["name","val name: String","dev.kord.core.cache.data.StickerPackData.name"]},{"name":"val name: String","description":"dev.kord.core.cache.data.TemplateData.name","location":"core/dev.kord.core.cache.data/-template-data/name.html","searchKeys":["name","val name: String","dev.kord.core.cache.data.TemplateData.name"]},{"name":"val name: String","description":"dev.kord.core.entity.Activity.name","location":"core/dev.kord.core.entity/-activity/name.html","searchKeys":["name","val name: String","dev.kord.core.entity.Activity.name"]},{"name":"val name: String","description":"dev.kord.core.entity.BaseApplication.name","location":"core/dev.kord.core.entity/-base-application/name.html","searchKeys":["name","val name: String","dev.kord.core.entity.BaseApplication.name"]},{"name":"val name: String","description":"dev.kord.core.entity.Embed.Field.name","location":"core/dev.kord.core.entity/-embed/-field/name.html","searchKeys":["name","val name: String","dev.kord.core.entity.Embed.Field.name"]},{"name":"val name: String","description":"dev.kord.core.entity.Guild.name","location":"core/dev.kord.core.entity/-guild/name.html","searchKeys":["name","val name: String","dev.kord.core.entity.Guild.name"]},{"name":"val name: String","description":"dev.kord.core.entity.GuildPreview.name","location":"core/dev.kord.core.entity/-guild-preview/name.html","searchKeys":["name","val name: String","dev.kord.core.entity.GuildPreview.name"]},{"name":"val name: String","description":"dev.kord.core.entity.GuildScheduledEvent.name","location":"core/dev.kord.core.entity/-guild-scheduled-event/name.html","searchKeys":["name","val name: String","dev.kord.core.entity.GuildScheduledEvent.name"]},{"name":"val name: String","description":"dev.kord.core.entity.Integration.name","location":"core/dev.kord.core.entity/-integration/name.html","searchKeys":["name","val name: String","dev.kord.core.entity.Integration.name"]},{"name":"val name: String","description":"dev.kord.core.entity.Message.Interaction.name","location":"core/dev.kord.core.entity/-message/-interaction/name.html","searchKeys":["name","val name: String","dev.kord.core.entity.Message.Interaction.name"]},{"name":"val name: String","description":"dev.kord.core.entity.PartialGuild.name","location":"core/dev.kord.core.entity/-partial-guild/name.html","searchKeys":["name","val name: String","dev.kord.core.entity.PartialGuild.name"]},{"name":"val name: String","description":"dev.kord.core.entity.Region.name","location":"core/dev.kord.core.entity/-region/name.html","searchKeys":["name","val name: String","dev.kord.core.entity.Region.name"]},{"name":"val name: String","description":"dev.kord.core.entity.Role.name","location":"core/dev.kord.core.entity/-role/name.html","searchKeys":["name","val name: String","dev.kord.core.entity.Role.name"]},{"name":"val name: String","description":"dev.kord.core.entity.Sticker.name","location":"core/dev.kord.core.entity/-sticker/name.html","searchKeys":["name","val name: String","dev.kord.core.entity.Sticker.name"]},{"name":"val name: String","description":"dev.kord.core.entity.StickerItem.name","location":"core/dev.kord.core.entity/-sticker-item/name.html","searchKeys":["name","val name: String","dev.kord.core.entity.StickerItem.name"]},{"name":"val name: String","description":"dev.kord.core.entity.StickerPack.name","location":"core/dev.kord.core.entity/-sticker-pack/name.html","searchKeys":["name","val name: String","dev.kord.core.entity.StickerPack.name"]},{"name":"val name: String","description":"dev.kord.core.entity.Template.name","location":"core/dev.kord.core.entity/-template/name.html","searchKeys":["name","val name: String","dev.kord.core.entity.Template.name"]},{"name":"val name: String","description":"dev.kord.core.entity.application.ApplicationCommandParameter.name","location":"core/dev.kord.core.entity.application/-application-command-parameter/name.html","searchKeys":["name","val name: String","dev.kord.core.entity.application.ApplicationCommandParameter.name"]},{"name":"val name: String","description":"dev.kord.core.entity.application.ChatInputGroup.name","location":"core/dev.kord.core.entity.application/-chat-input-group/name.html","searchKeys":["name","val name: String","dev.kord.core.entity.application.ChatInputGroup.name"]},{"name":"val name: String","description":"dev.kord.core.entity.application.ChatInputSubCommand.name","location":"core/dev.kord.core.entity.application/-chat-input-sub-command/name.html","searchKeys":["name","val name: String","dev.kord.core.entity.application.ChatInputSubCommand.name"]},{"name":"val name: String","description":"dev.kord.core.entity.automoderation.AutoModerationRule.name","location":"core/dev.kord.core.entity.automoderation/-auto-moderation-rule/name.html","searchKeys":["name","val name: String","dev.kord.core.entity.automoderation.AutoModerationRule.name"]},{"name":"val name: String","description":"dev.kord.core.entity.channel.ResolvedChannel.name","location":"core/dev.kord.core.entity.channel/-resolved-channel/name.html","searchKeys":["name","val name: String","dev.kord.core.entity.channel.ResolvedChannel.name"]},{"name":"val name: String","description":"dev.kord.core.entity.interaction.GroupCommand.name","location":"core/dev.kord.core.entity.interaction/-group-command/name.html","searchKeys":["name","val name: String","dev.kord.core.entity.interaction.GroupCommand.name"]},{"name":"val name: String","description":"dev.kord.core.entity.interaction.SubCommand.name","location":"core/dev.kord.core.entity.interaction/-sub-command/name.html","searchKeys":["name","val name: String","dev.kord.core.entity.interaction.SubCommand.name"]},{"name":"val name: String?","description":"dev.kord.core.cache.data.RemovedReactionData.name","location":"core/dev.kord.core.cache.data/-removed-reaction-data/name.html","searchKeys":["name","val name: String?","dev.kord.core.cache.data.RemovedReactionData.name"]},{"name":"val name: String?","description":"dev.kord.core.entity.Embed.Author.name","location":"core/dev.kord.core.entity/-embed/-author/name.html","searchKeys":["name","val name: String?","dev.kord.core.entity.Embed.Author.name"]},{"name":"val name: String?","description":"dev.kord.core.entity.Embed.Provider.name","location":"core/dev.kord.core.entity/-embed/-provider/name.html","searchKeys":["name","val name: String?","dev.kord.core.entity.Embed.Provider.name"]},{"name":"val name: String?","description":"dev.kord.core.entity.GuildEmoji.name","location":"core/dev.kord.core.entity/-guild-emoji/name.html","searchKeys":["name","val name: String?","dev.kord.core.entity.GuildEmoji.name"]},{"name":"val name: String?","description":"dev.kord.core.entity.Webhook.name","location":"core/dev.kord.core.entity/-webhook/name.html","searchKeys":["name","val name: String?","dev.kord.core.entity.Webhook.name"]},{"name":"val name: String? = null","description":"dev.kord.core.cache.data.EmojiData.name","location":"core/dev.kord.core.cache.data/-emoji-data/name.html","searchKeys":["name","val name: String? = null","dev.kord.core.cache.data.EmojiData.name"]},{"name":"val name: String? = null","description":"dev.kord.core.cache.data.WebhookData.name","location":"core/dev.kord.core.cache.data/-webhook-data/name.html","searchKeys":["name","val name: String? = null","dev.kord.core.cache.data.WebhookData.name"]},{"name":"val nameLocalizations: Optional<Map<Locale, String>?>","description":"dev.kord.core.cache.data.ApplicationCommandData.nameLocalizations","location":"core/dev.kord.core.cache.data/-application-command-data/name-localizations.html","searchKeys":["nameLocalizations","val nameLocalizations: Optional<Map<Locale, String>?>","dev.kord.core.cache.data.ApplicationCommandData.nameLocalizations"]},{"name":"val new: DiscordPartialMessage","description":"dev.kord.core.event.message.MessageUpdateEvent.new","location":"core/dev.kord.core.event.message/-message-update-event/new.html","searchKeys":["new","val new: DiscordPartialMessage","dev.kord.core.event.message.MessageUpdateEvent.new"]},{"name":"val nick: Optional<String?>","description":"dev.kord.core.cache.data.MemberData.nick","location":"core/dev.kord.core.cache.data/-member-data/nick.html","searchKeys":["nick","val nick: Optional<String?>","dev.kord.core.cache.data.MemberData.nick"]},{"name":"val nickname: String?","description":"dev.kord.core.entity.Member.nickname","location":"core/dev.kord.core.entity/-member/nickname.html","searchKeys":["nickname","val nickname: String?","dev.kord.core.entity.Member.nickname"]},{"name":"val nitroStickerPacks: Flow<StickerPack>","description":"dev.kord.core.Kord.nitroStickerPacks","location":"core/dev.kord.core/-kord/nitro-sticker-packs.html","searchKeys":["nitroStickerPacks","val nitroStickerPacks: Flow<StickerPack>","dev.kord.core.Kord.nitroStickerPacks"]},{"name":"val nonce: Optional<String>","description":"dev.kord.core.cache.data.MembersChunkData.nonce","location":"core/dev.kord.core.cache.data/-members-chunk-data/nonce.html","searchKeys":["nonce","val nonce: Optional<String>","dev.kord.core.cache.data.MembersChunkData.nonce"]},{"name":"val nonce: Optional<String>","description":"dev.kord.core.cache.data.MessageData.nonce","location":"core/dev.kord.core.cache.data/-message-data/nonce.html","searchKeys":["nonce","val nonce: Optional<String>","dev.kord.core.cache.data.MessageData.nonce"]},{"name":"val nonce: String?","description":"dev.kord.core.event.guild.MembersChunkEvent.nonce","location":"core/dev.kord.core.event.guild/-members-chunk-event/nonce.html","searchKeys":["nonce","val nonce: String?","dev.kord.core.event.guild.MembersChunkEvent.nonce"]},{"name":"val notFound: Optional<Set<Snowflake>>","description":"dev.kord.core.cache.data.MembersChunkData.notFound","location":"core/dev.kord.core.cache.data/-members-chunk-data/not-found.html","searchKeys":["notFound","val notFound: Optional<Set<Snowflake>>","dev.kord.core.cache.data.MembersChunkData.notFound"]},{"name":"val nsfw: NsfwLevel","description":"dev.kord.core.entity.Guild.nsfw","location":"core/dev.kord.core.entity/-guild/nsfw.html","searchKeys":["nsfw","val nsfw: NsfwLevel","dev.kord.core.entity.Guild.nsfw"]},{"name":"val nsfw: NsfwLevel?","description":"dev.kord.core.entity.PartialGuild.nsfw","location":"core/dev.kord.core.entity/-partial-guild/nsfw.html","searchKeys":["nsfw","val nsfw: NsfwLevel?","dev.kord.core.entity.PartialGuild.nsfw"]},{"name":"val nsfw: OptionalBoolean","description":"dev.kord.core.cache.data.ChannelData.nsfw","location":"core/dev.kord.core.cache.data/-channel-data/nsfw.html","searchKeys":["nsfw","val nsfw: OptionalBoolean","dev.kord.core.cache.data.ChannelData.nsfw"]},{"name":"val nsfwLevel: NsfwLevel","description":"dev.kord.core.cache.data.GuildData.nsfwLevel","location":"core/dev.kord.core.cache.data/-guild-data/nsfw-level.html","searchKeys":["nsfwLevel","val nsfwLevel: NsfwLevel","dev.kord.core.cache.data.GuildData.nsfwLevel"]},{"name":"val nsfwLevel: Optional<NsfwLevel>","description":"dev.kord.core.cache.data.PartialGuildData.nsfwLevel","location":"core/dev.kord.core.cache.data/-partial-guild-data/nsfw-level.html","searchKeys":["nsfwLevel","val nsfwLevel: Optional<NsfwLevel>","dev.kord.core.cache.data.PartialGuildData.nsfwLevel"]},{"name":"val old: AutoModerationRule?","description":"dev.kord.core.event.automoderation.AutoModerationRuleUpdateEvent.old","location":"core/dev.kord.core.event.automoderation/-auto-moderation-rule-update-event/old.html","searchKeys":["old","val old: AutoModerationRule?","dev.kord.core.event.automoderation.AutoModerationRuleUpdateEvent.old"]},{"name":"val old: Guild?","description":"dev.kord.core.event.guild.GuildUpdateEvent.old","location":"core/dev.kord.core.event.guild/-guild-update-event/old.html","searchKeys":["old","val old: Guild?","dev.kord.core.event.guild.GuildUpdateEvent.old"]},{"name":"val old: Member?","description":"dev.kord.core.event.guild.MemberLeaveEvent.old","location":"core/dev.kord.core.event.guild/-member-leave-event/old.html","searchKeys":["old","val old: Member?","dev.kord.core.event.guild.MemberLeaveEvent.old"]},{"name":"val old: Member?","description":"dev.kord.core.event.guild.MemberUpdateEvent.old","location":"core/dev.kord.core.event.guild/-member-update-event/old.html","searchKeys":["old","val old: Member?","dev.kord.core.event.guild.MemberUpdateEvent.old"]},{"name":"val old: Message?","description":"dev.kord.core.event.message.MessageUpdateEvent.old","location":"core/dev.kord.core.event.message/-message-update-event/old.html","searchKeys":["old","val old: Message?","dev.kord.core.event.message.MessageUpdateEvent.old"]},{"name":"val old: Presence?","description":"dev.kord.core.event.user.PresenceUpdateEvent.old","location":"core/dev.kord.core.event.user/-presence-update-event/old.html","searchKeys":["old","val old: Presence?","dev.kord.core.event.user.PresenceUpdateEvent.old"]},{"name":"val old: Role?","description":"dev.kord.core.event.role.RoleUpdateEvent.old","location":"core/dev.kord.core.event.role/-role-update-event/old.html","searchKeys":["old","val old: Role?","dev.kord.core.event.role.RoleUpdateEvent.old"]},{"name":"val old: Set<GuildEmoji>?","description":"dev.kord.core.event.guild.EmojisUpdateEvent.old","location":"core/dev.kord.core.event.guild/-emojis-update-event/old.html","searchKeys":["old","val old: Set<GuildEmoji>?","dev.kord.core.event.guild.EmojisUpdateEvent.old"]},{"name":"val old: User?","description":"dev.kord.core.event.user.UserUpdateEvent.old","location":"core/dev.kord.core.event.user/-user-update-event/old.html","searchKeys":["old","val old: User?","dev.kord.core.event.user.UserUpdateEvent.old"]},{"name":"val old: VoiceState?","description":"dev.kord.core.event.user.VoiceStateUpdateEvent.old","location":"core/dev.kord.core.event.user/-voice-state-update-event/old.html","searchKeys":["old","val old: VoiceState?","dev.kord.core.event.user.VoiceStateUpdateEvent.old"]},{"name":"val oldEvent: GuildScheduledEvent?","description":"dev.kord.core.event.guild.GuildScheduledEventUpdateEvent.oldEvent","location":"core/dev.kord.core.event.guild/-guild-scheduled-event-update-event/old-event.html","searchKeys":["oldEvent","val oldEvent: GuildScheduledEvent?","dev.kord.core.event.guild.GuildScheduledEventUpdateEvent.oldEvent"]},{"name":"val oldUser: User?","description":"dev.kord.core.event.user.PresenceUpdateEvent.oldUser","location":"core/dev.kord.core.event.user/-presence-update-event/old-user.html","searchKeys":["oldUser","val oldUser: User?","dev.kord.core.event.user.PresenceUpdateEvent.oldUser"]},{"name":"val optimal: Boolean","description":"dev.kord.core.cache.data.RegionData.optimal","location":"core/dev.kord.core.cache.data/-region-data/optimal.html","searchKeys":["optimal","val optimal: Boolean","dev.kord.core.cache.data.RegionData.optimal"]},{"name":"val options: AuditLogEntryOptionalInfo?","description":"dev.kord.core.entity.AuditLogEntry.options","location":"core/dev.kord.core.entity/-audit-log-entry/options.html","searchKeys":["options","val options: AuditLogEntryOptionalInfo?","dev.kord.core.entity.AuditLogEntry.options"]},{"name":"val options: List<SelectOption>","description":"dev.kord.core.entity.component.SelectMenuComponent.options","location":"core/dev.kord.core.entity.component/-select-menu-component/options.html","searchKeys":["options","val options: List<SelectOption>","dev.kord.core.entity.component.SelectMenuComponent.options"]},{"name":"val options: Optional<List<ApplicationCommandOptionData>>","description":"dev.kord.core.cache.data.ApplicationCommandData.options","location":"core/dev.kord.core.cache.data/-application-command-data/options.html","searchKeys":["options","val options: Optional<List<ApplicationCommandOptionData>>","dev.kord.core.cache.data.ApplicationCommandData.options"]},{"name":"val options: Optional<List<ApplicationCommandOptionData>>","description":"dev.kord.core.cache.data.ApplicationCommandOptionData.options","location":"core/dev.kord.core.cache.data/-application-command-option-data/options.html","searchKeys":["options","val options: Optional<List<ApplicationCommandOptionData>>","dev.kord.core.cache.data.ApplicationCommandOptionData.options"]},{"name":"val options: Optional<List<OptionData>>","description":"dev.kord.core.cache.data.ApplicationInteractionData.options","location":"core/dev.kord.core.cache.data/-application-interaction-data/options.html","searchKeys":["options","val options: Optional<List<OptionData>>","dev.kord.core.cache.data.ApplicationInteractionData.options"]},{"name":"val owner: Boolean?","description":"dev.kord.core.entity.PartialGuild.owner","location":"core/dev.kord.core.entity/-partial-guild/owner.html","searchKeys":["owner","val owner: Boolean?","dev.kord.core.entity.PartialGuild.owner"]},{"name":"val owner: MemberBehavior","description":"dev.kord.core.entity.Guild.owner","location":"core/dev.kord.core.entity/-guild/owner.html","searchKeys":["owner","val owner: MemberBehavior","dev.kord.core.entity.Guild.owner"]},{"name":"val owner: OptionalBoolean","description":"dev.kord.core.cache.data.PartialGuildData.owner","location":"core/dev.kord.core.cache.data/-partial-guild-data/owner.html","searchKeys":["owner","val owner: OptionalBoolean","dev.kord.core.cache.data.PartialGuildData.owner"]},{"name":"val owner: UserBehavior?","description":"dev.kord.core.entity.BaseApplication.owner","location":"core/dev.kord.core.entity/-base-application/owner.html","searchKeys":["owner","val owner: UserBehavior?","dev.kord.core.entity.BaseApplication.owner"]},{"name":"val ownerId: OptionalSnowflake","description":"dev.kord.core.cache.data.ChannelData.ownerId","location":"core/dev.kord.core.cache.data/-channel-data/owner-id.html","searchKeys":["ownerId","val ownerId: OptionalSnowflake","dev.kord.core.cache.data.ChannelData.ownerId"]},{"name":"val ownerId: Snowflake","description":"dev.kord.core.cache.data.GuildData.ownerId","location":"core/dev.kord.core.cache.data/-guild-data/owner-id.html","searchKeys":["ownerId","val ownerId: Snowflake","dev.kord.core.cache.data.GuildData.ownerId"]},{"name":"val ownerId: Snowflake","description":"dev.kord.core.entity.Guild.ownerId","location":"core/dev.kord.core.entity/-guild/owner-id.html","searchKeys":["ownerId","val ownerId: Snowflake","dev.kord.core.entity.Guild.ownerId"]},{"name":"val ownerId: Snowflake?","description":"dev.kord.core.entity.BaseApplication.ownerId","location":"core/dev.kord.core.entity/-base-application/owner-id.html","searchKeys":["ownerId","val ownerId: Snowflake?","dev.kord.core.entity.BaseApplication.ownerId"]},{"name":"val ownerUserId: Snowflake","description":"dev.kord.core.cache.data.TeamData.ownerUserId","location":"core/dev.kord.core.cache.data/-team-data/owner-user-id.html","searchKeys":["ownerUserId","val ownerUserId: Snowflake","dev.kord.core.cache.data.TeamData.ownerUserId"]},{"name":"val ownerUserId: Snowflake","description":"dev.kord.core.entity.Team.ownerUserId","location":"core/dev.kord.core.entity/-team/owner-user-id.html","searchKeys":["ownerUserId","val ownerUserId: Snowflake","dev.kord.core.entity.Team.ownerUserId"]},{"name":"val packId: OptionalSnowflake","description":"dev.kord.core.cache.data.StickerData.packId","location":"core/dev.kord.core.cache.data/-sticker-data/pack-id.html","searchKeys":["packId","val packId: OptionalSnowflake","dev.kord.core.cache.data.StickerData.packId"]},{"name":"val packId: Snowflake?","description":"dev.kord.core.entity.Sticker.packId","location":"core/dev.kord.core.entity/-sticker/pack-id.html","searchKeys":["packId","val packId: Snowflake?","dev.kord.core.entity.Sticker.packId"]},{"name":"val parameters: Map<String, ApplicationCommandParameter>","description":"dev.kord.core.entity.application.ChatInputSubCommand.parameters","location":"core/dev.kord.core.entity.application/-chat-input-sub-command/parameters.html","searchKeys":["parameters","val parameters: Map<String, ApplicationCommandParameter>","dev.kord.core.entity.application.ChatInputSubCommand.parameters"]},{"name":"val parameters: Optional<List<ApplicationCommandParameterData>>","description":"dev.kord.core.cache.data.ApplicationCommandSubcommandData.parameters","location":"core/dev.kord.core.cache.data/-application-command-subcommand-data/parameters.html","searchKeys":["parameters","val parameters: Optional<List<ApplicationCommandParameterData>>","dev.kord.core.cache.data.ApplicationCommandSubcommandData.parameters"]},{"name":"val parent: ThreadParentChannelBehavior","description":"dev.kord.core.entity.channel.thread.DeletedThreadChannel.parent","location":"core/dev.kord.core.entity.channel.thread/-deleted-thread-channel/parent.html","searchKeys":["parent","val parent: ThreadParentChannelBehavior","dev.kord.core.entity.channel.thread.DeletedThreadChannel.parent"]},{"name":"val parentId: OptionalSnowflake?","description":"dev.kord.core.cache.data.ChannelData.parentId","location":"core/dev.kord.core.cache.data/-channel-data/parent-id.html","searchKeys":["parentId","val parentId: OptionalSnowflake?","dev.kord.core.cache.data.ChannelData.parentId"]},{"name":"val parentId: Snowflake","description":"dev.kord.core.entity.channel.thread.DeletedThreadChannel.parentId","location":"core/dev.kord.core.entity.channel.thread/-deleted-thread-channel/parent-id.html","searchKeys":["parentId","val parentId: Snowflake","dev.kord.core.entity.channel.thread.DeletedThreadChannel.parentId"]},{"name":"val partialGuild: PartialGuild","description":"dev.kord.core.entity.Template.partialGuild","location":"core/dev.kord.core.entity/-template/partial-guild.html","searchKeys":["partialGuild","val partialGuild: PartialGuild","dev.kord.core.entity.Template.partialGuild"]},{"name":"val partialGuild: PartialGuild?","description":"dev.kord.core.entity.Invite.partialGuild","location":"core/dev.kord.core.entity/-invite/partial-guild.html","searchKeys":["partialGuild","val partialGuild: PartialGuild?","dev.kord.core.entity.Invite.partialGuild"]},{"name":"val party: Activity.Party?","description":"dev.kord.core.entity.Activity.party","location":"core/dev.kord.core.entity/-activity/party.html","searchKeys":["party","val party: Activity.Party?","dev.kord.core.entity.Activity.party"]},{"name":"val party: Optional<DiscordActivityParty>","description":"dev.kord.core.cache.data.ActivityData.party","location":"core/dev.kord.core.cache.data/-activity-data/party.html","searchKeys":["party","val party: Optional<DiscordActivityParty>","dev.kord.core.cache.data.ActivityData.party"]},{"name":"val pending: OptionalBoolean","description":"dev.kord.core.cache.data.MemberData.pending","location":"core/dev.kord.core.cache.data/-member-data/pending.html","searchKeys":["pending","val pending: OptionalBoolean","dev.kord.core.cache.data.MemberData.pending"]},{"name":"val permission: Boolean","description":"dev.kord.core.cache.data.GuildApplicationCommandPermissionData.permission","location":"core/dev.kord.core.cache.data/-guild-application-command-permission-data/permission.html","searchKeys":["permission","val permission: Boolean","dev.kord.core.cache.data.GuildApplicationCommandPermissionData.permission"]},{"name":"val permission: Boolean","description":"dev.kord.core.entity.application.GuildApplicationCommandPermission.permission","location":"core/dev.kord.core.entity.application/-guild-application-command-permission/permission.html","searchKeys":["permission","val permission: Boolean","dev.kord.core.entity.application.GuildApplicationCommandPermission.permission"]},{"name":"val permissionOverwrites: Optional<List<Overwrite>>","description":"dev.kord.core.cache.data.ChannelData.permissionOverwrites","location":"core/dev.kord.core.cache.data/-channel-data/permission-overwrites.html","searchKeys":["permissionOverwrites","val permissionOverwrites: Optional<List<Overwrite>>","dev.kord.core.cache.data.ChannelData.permissionOverwrites"]},{"name":"val permissions: ApplicationCommandPermissions","description":"dev.kord.core.event.interaction.ApplicationCommandPermissionsUpdateEvent.permissions","location":"core/dev.kord.core.event.interaction/-application-command-permissions-update-event/permissions.html","searchKeys":["permissions","val permissions: ApplicationCommandPermissions","dev.kord.core.event.interaction.ApplicationCommandPermissionsUpdateEvent.permissions"]},{"name":"val permissions: Flow<GuildApplicationCommandPermission>","description":"dev.kord.core.entity.application.ApplicationCommandPermissions.permissions","location":"core/dev.kord.core.entity.application/-application-command-permissions/permissions.html","searchKeys":["permissions","val permissions: Flow<GuildApplicationCommandPermission>","dev.kord.core.entity.application.ApplicationCommandPermissions.permissions"]},{"name":"val permissions: List<GuildApplicationCommandPermissionData>","description":"dev.kord.core.cache.data.GuildApplicationCommandPermissionsData.permissions","location":"core/dev.kord.core.cache.data/-guild-application-command-permissions-data/permissions.html","searchKeys":["permissions","val permissions: List<GuildApplicationCommandPermissionData>","dev.kord.core.cache.data.GuildApplicationCommandPermissionsData.permissions"]},{"name":"val permissions: List<String>","description":"dev.kord.core.cache.data.TeamMemberData.permissions","location":"core/dev.kord.core.cache.data/-team-member-data/permissions.html","searchKeys":["permissions","val permissions: List<String>","dev.kord.core.cache.data.TeamMemberData.permissions"]},{"name":"val permissions: List<String>","description":"dev.kord.core.entity.TeamMember.permissions","location":"core/dev.kord.core.entity/-team-member/permissions.html","searchKeys":["permissions","val permissions: List<String>","dev.kord.core.entity.TeamMember.permissions"]},{"name":"val permissions: Optional<Permissions>","description":"dev.kord.core.cache.data.ChannelData.permissions","location":"core/dev.kord.core.cache.data/-channel-data/permissions.html","searchKeys":["permissions","val permissions: Optional<Permissions>","dev.kord.core.cache.data.ChannelData.permissions"]},{"name":"val permissions: Optional<Permissions>","description":"dev.kord.core.cache.data.GuildData.permissions","location":"core/dev.kord.core.cache.data/-guild-data/permissions.html","searchKeys":["permissions","val permissions: Optional<Permissions>","dev.kord.core.cache.data.GuildData.permissions"]},{"name":"val permissions: Optional<Permissions>","description":"dev.kord.core.cache.data.InteractionData.permissions","location":"core/dev.kord.core.cache.data/-interaction-data/permissions.html","searchKeys":["permissions","val permissions: Optional<Permissions>","dev.kord.core.cache.data.InteractionData.permissions"]},{"name":"val permissions: Optional<Permissions>","description":"dev.kord.core.cache.data.PartialGuildData.permissions","location":"core/dev.kord.core.cache.data/-partial-guild-data/permissions.html","searchKeys":["permissions","val permissions: Optional<Permissions>","dev.kord.core.cache.data.PartialGuildData.permissions"]},{"name":"val permissions: Permissions","description":"dev.kord.core.cache.data.RoleData.permissions","location":"core/dev.kord.core.cache.data/-role-data/permissions.html","searchKeys":["permissions","val permissions: Permissions","dev.kord.core.cache.data.RoleData.permissions"]},{"name":"val permissions: Permissions","description":"dev.kord.core.entity.Role.permissions","location":"core/dev.kord.core.entity/-role/permissions.html","searchKeys":["permissions","val permissions: Permissions","dev.kord.core.entity.Role.permissions"]},{"name":"val permissions: Permissions","description":"dev.kord.core.entity.channel.ResolvedChannel.permissions","location":"core/dev.kord.core.entity.channel/-resolved-channel/permissions.html","searchKeys":["permissions","val permissions: Permissions","dev.kord.core.entity.channel.ResolvedChannel.permissions"]},{"name":"val permissions: Permissions?","description":"dev.kord.core.entity.Guild.permissions","location":"core/dev.kord.core.entity/-guild/permissions.html","searchKeys":["permissions","val permissions: Permissions?","dev.kord.core.entity.Guild.permissions"]},{"name":"val permissions: Permissions?","description":"dev.kord.core.entity.PartialGuild.permissions","location":"core/dev.kord.core.entity/-partial-guild/permissions.html","searchKeys":["permissions","val permissions: Permissions?","dev.kord.core.entity.PartialGuild.permissions"]},{"name":"val pinned: Boolean","description":"dev.kord.core.cache.data.MessageData.pinned","location":"core/dev.kord.core.cache.data/-message-data/pinned.html","searchKeys":["pinned","val pinned: Boolean","dev.kord.core.cache.data.MessageData.pinned"]},{"name":"val placeholder: String?","description":"dev.kord.core.entity.component.SelectMenuComponent.placeholder","location":"core/dev.kord.core.entity.component/-select-menu-component/placeholder.html","searchKeys":["placeholder","val placeholder: String?","dev.kord.core.entity.component.SelectMenuComponent.placeholder"]},{"name":"val placeholder: String?","description":"dev.kord.core.entity.component.TextInputComponent.placeholder","location":"core/dev.kord.core.entity.component/-text-input-component/placeholder.html","searchKeys":["placeholder","val placeholder: String?","dev.kord.core.entity.component.TextInputComponent.placeholder"]},{"name":"val position: Int","description":"dev.kord.core.cache.data.RoleData.position","location":"core/dev.kord.core.cache.data/-role-data/position.html","searchKeys":["position","val position: Int","dev.kord.core.cache.data.RoleData.position"]},{"name":"val position: OptionalInt","description":"dev.kord.core.cache.data.ChannelData.position","location":"core/dev.kord.core.cache.data/-channel-data/position.html","searchKeys":["position","val position: OptionalInt","dev.kord.core.cache.data.ChannelData.position"]},{"name":"val preferredLocale: Locale","description":"dev.kord.core.entity.Guild.preferredLocale","location":"core/dev.kord.core.entity/-guild/preferred-locale.html","searchKeys":["preferredLocale","val preferredLocale: Locale","dev.kord.core.entity.Guild.preferredLocale"]},{"name":"val preferredLocale: String","description":"dev.kord.core.cache.data.GuildData.preferredLocale","location":"core/dev.kord.core.cache.data/-guild-data/preferred-locale.html","searchKeys":["preferredLocale","val preferredLocale: String","dev.kord.core.cache.data.GuildData.preferredLocale"]},{"name":"val premiumProgressBarEnabled: Boolean","description":"dev.kord.core.cache.data.GuildData.premiumProgressBarEnabled","location":"core/dev.kord.core.cache.data/-guild-data/premium-progress-bar-enabled.html","searchKeys":["premiumProgressBarEnabled","val premiumProgressBarEnabled: Boolean","dev.kord.core.cache.data.GuildData.premiumProgressBarEnabled"]},{"name":"val premiumProgressBarEnabled: Boolean","description":"dev.kord.core.entity.Guild.premiumProgressBarEnabled","location":"core/dev.kord.core.entity/-guild/premium-progress-bar-enabled.html","searchKeys":["premiumProgressBarEnabled","val premiumProgressBarEnabled: Boolean","dev.kord.core.entity.Guild.premiumProgressBarEnabled"]},{"name":"val premiumProgressBarEnabled: OptionalBoolean","description":"dev.kord.core.cache.data.PartialGuildData.premiumProgressBarEnabled","location":"core/dev.kord.core.cache.data/-partial-guild-data/premium-progress-bar-enabled.html","searchKeys":["premiumProgressBarEnabled","val premiumProgressBarEnabled: OptionalBoolean","dev.kord.core.cache.data.PartialGuildData.premiumProgressBarEnabled"]},{"name":"val premiumSince: Instant?","description":"dev.kord.core.entity.Member.premiumSince","location":"core/dev.kord.core.entity/-member/premium-since.html","searchKeys":["premiumSince","val premiumSince: Instant?","dev.kord.core.entity.Member.premiumSince"]},{"name":"val premiumSince: Optional<Instant?>","description":"dev.kord.core.cache.data.MemberData.premiumSince","location":"core/dev.kord.core.cache.data/-member-data/premium-since.html","searchKeys":["premiumSince","val premiumSince: Optional<Instant?>","dev.kord.core.cache.data.MemberData.premiumSince"]},{"name":"val premiumSubscriber: Boolean","description":"dev.kord.core.cache.data.RoleTagsData.premiumSubscriber","location":"core/dev.kord.core.cache.data/-role-tags-data/premium-subscriber.html","searchKeys":["premiumSubscriber","val premiumSubscriber: Boolean","dev.kord.core.cache.data.RoleTagsData.premiumSubscriber"]},{"name":"val premiumSubscriptionCount: Int?","description":"dev.kord.core.entity.Guild.premiumSubscriptionCount","location":"core/dev.kord.core.entity/-guild/premium-subscription-count.html","searchKeys":["premiumSubscriptionCount","val premiumSubscriptionCount: Int?","dev.kord.core.entity.Guild.premiumSubscriptionCount"]},{"name":"val premiumSubscriptionCount: OptionalInt","description":"dev.kord.core.cache.data.GuildData.premiumSubscriptionCount","location":"core/dev.kord.core.cache.data/-guild-data/premium-subscription-count.html","searchKeys":["premiumSubscriptionCount","val premiumSubscriptionCount: OptionalInt","dev.kord.core.cache.data.GuildData.premiumSubscriptionCount"]},{"name":"val premiumTier: PremiumTier","description":"dev.kord.core.cache.data.GuildData.premiumTier","location":"core/dev.kord.core.cache.data/-guild-data/premium-tier.html","searchKeys":["premiumTier","val premiumTier: PremiumTier","dev.kord.core.cache.data.GuildData.premiumTier"]},{"name":"val premiumTier: PremiumTier","description":"dev.kord.core.entity.Guild.premiumTier","location":"core/dev.kord.core.entity/-guild/premium-tier.html","searchKeys":["premiumTier","val premiumTier: PremiumTier","dev.kord.core.entity.Guild.premiumTier"]},{"name":"val presence: Presence","description":"dev.kord.core.event.user.PresenceUpdateEvent.presence","location":"core/dev.kord.core.event.user/-presence-update-event/presence.html","searchKeys":["presence","val presence: Presence","dev.kord.core.event.user.PresenceUpdateEvent.presence"]},{"name":"val presences: List<Presence>","description":"dev.kord.core.event.guild.MembersChunkEvent.presences","location":"core/dev.kord.core.event.guild/-members-chunk-event/presences.html","searchKeys":["presences","val presences: List<Presence>","dev.kord.core.event.guild.MembersChunkEvent.presences"]},{"name":"val presences: Optional<List<PresenceData>>","description":"dev.kord.core.cache.data.MembersChunkData.presences","location":"core/dev.kord.core.cache.data/-members-chunk-data/presences.html","searchKeys":["presences","val presences: Optional<List<PresenceData>>","dev.kord.core.cache.data.MembersChunkData.presences"]},{"name":"val presets: List<AutoModerationRuleKeywordPresetType>","description":"dev.kord.core.entity.automoderation.KeywordPresetAutoModerationRule.presets","location":"core/dev.kord.core.entity.automoderation/-keyword-preset-auto-moderation-rule/presets.html","searchKeys":["presets","val presets: List<AutoModerationRuleKeywordPresetType>","dev.kord.core.entity.automoderation.KeywordPresetAutoModerationRule.presets"]},{"name":"val presets: Optional<List<AutoModerationRuleKeywordPresetType>>","description":"dev.kord.core.cache.data.AutoModerationRuleTriggerMetadataData.presets","location":"core/dev.kord.core.cache.data/-auto-moderation-rule-trigger-metadata-data/presets.html","searchKeys":["presets","val presets: Optional<List<AutoModerationRuleKeywordPresetType>>","dev.kord.core.cache.data.AutoModerationRuleTriggerMetadataData.presets"]},{"name":"val primarySkuId: Snowflake?","description":"dev.kord.core.entity.BaseApplication.primarySkuId","location":"core/dev.kord.core.entity/-base-application/primary-sku-id.html","searchKeys":["primarySkuId","val primarySkuId: Snowflake?","dev.kord.core.entity.BaseApplication.primarySkuId"]},{"name":"val privacyLevel: GuildScheduledEventPrivacyLevel","description":"dev.kord.core.cache.data.GuildScheduledEventData.privacyLevel","location":"core/dev.kord.core.cache.data/-guild-scheduled-event-data/privacy-level.html","searchKeys":["privacyLevel","val privacyLevel: GuildScheduledEventPrivacyLevel","dev.kord.core.cache.data.GuildScheduledEventData.privacyLevel"]},{"name":"val privacyLevel: GuildScheduledEventPrivacyLevel","description":"dev.kord.core.entity.GuildScheduledEvent.privacyLevel","location":"core/dev.kord.core.entity/-guild-scheduled-event/privacy-level.html","searchKeys":["privacyLevel","val privacyLevel: GuildScheduledEventPrivacyLevel","dev.kord.core.entity.GuildScheduledEvent.privacyLevel"]},{"name":"val privacyLevel: StageInstancePrivacyLevel","description":"dev.kord.core.cache.data.StageInstanceData.privacyLevel","location":"core/dev.kord.core.cache.data/-stage-instance-data/privacy-level.html","searchKeys":["privacyLevel","val privacyLevel: StageInstancePrivacyLevel","dev.kord.core.cache.data.StageInstanceData.privacyLevel"]},{"name":"val privacyLevel: StageInstancePrivacyLevel","description":"dev.kord.core.entity.StageInstance.privacyLevel","location":"core/dev.kord.core.entity/-stage-instance/privacy-level.html","searchKeys":["privacyLevel","val privacyLevel: StageInstancePrivacyLevel","dev.kord.core.entity.StageInstance.privacyLevel"]},{"name":"val privacyPolicyUrl: String?","description":"dev.kord.core.entity.BaseApplication.privacyPolicyUrl","location":"core/dev.kord.core.entity/-base-application/privacy-policy-url.html","searchKeys":["privacyPolicyUrl","val privacyPolicyUrl: String?","dev.kord.core.entity.BaseApplication.privacyPolicyUrl"]},{"name":"val provider: Embed.Provider?","description":"dev.kord.core.entity.Embed.provider","location":"core/dev.kord.core.entity/-embed/provider.html","searchKeys":["provider","val provider: Embed.Provider?","dev.kord.core.entity.Embed.provider"]},{"name":"val provider: Optional<EmbedProviderData>","description":"dev.kord.core.cache.data.EmbedData.provider","location":"core/dev.kord.core.cache.data/-embed-data/provider.html","searchKeys":["provider","val provider: Optional<EmbedProviderData>","dev.kord.core.cache.data.EmbedData.provider"]},{"name":"val proxyIconUrl: Optional<String>","description":"dev.kord.core.cache.data.EmbedAuthorData.proxyIconUrl","location":"core/dev.kord.core.cache.data/-embed-author-data/proxy-icon-url.html","searchKeys":["proxyIconUrl","val proxyIconUrl: Optional<String>","dev.kord.core.cache.data.EmbedAuthorData.proxyIconUrl"]},{"name":"val proxyIconUrl: Optional<String>","description":"dev.kord.core.cache.data.EmbedFooterData.proxyIconUrl","location":"core/dev.kord.core.cache.data/-embed-footer-data/proxy-icon-url.html","searchKeys":["proxyIconUrl","val proxyIconUrl: Optional<String>","dev.kord.core.cache.data.EmbedFooterData.proxyIconUrl"]},{"name":"val proxyIconUrl: String?","description":"dev.kord.core.entity.Embed.Author.proxyIconUrl","location":"core/dev.kord.core.entity/-embed/-author/proxy-icon-url.html","searchKeys":["proxyIconUrl","val proxyIconUrl: String?","dev.kord.core.entity.Embed.Author.proxyIconUrl"]},{"name":"val proxyIconUrl: String?","description":"dev.kord.core.entity.Embed.Footer.proxyIconUrl","location":"core/dev.kord.core.entity/-embed/-footer/proxy-icon-url.html","searchKeys":["proxyIconUrl","val proxyIconUrl: String?","dev.kord.core.entity.Embed.Footer.proxyIconUrl"]},{"name":"val proxyUrl: Optional<String>","description":"dev.kord.core.cache.data.EmbedImageData.proxyUrl","location":"core/dev.kord.core.cache.data/-embed-image-data/proxy-url.html","searchKeys":["proxyUrl","val proxyUrl: Optional<String>","dev.kord.core.cache.data.EmbedImageData.proxyUrl"]},{"name":"val proxyUrl: Optional<String>","description":"dev.kord.core.cache.data.EmbedThumbnailData.proxyUrl","location":"core/dev.kord.core.cache.data/-embed-thumbnail-data/proxy-url.html","searchKeys":["proxyUrl","val proxyUrl: Optional<String>","dev.kord.core.cache.data.EmbedThumbnailData.proxyUrl"]},{"name":"val proxyUrl: String","description":"dev.kord.core.cache.data.AttachmentData.proxyUrl","location":"core/dev.kord.core.cache.data/-attachment-data/proxy-url.html","searchKeys":["proxyUrl","val proxyUrl: String","dev.kord.core.cache.data.AttachmentData.proxyUrl"]},{"name":"val proxyUrl: String","description":"dev.kord.core.entity.Attachment.proxyUrl","location":"core/dev.kord.core.entity/-attachment/proxy-url.html","searchKeys":["proxyUrl","val proxyUrl: String","dev.kord.core.entity.Attachment.proxyUrl"]},{"name":"val proxyUrl: String?","description":"dev.kord.core.entity.Embed.Image.proxyUrl","location":"core/dev.kord.core.entity/-embed/-image/proxy-url.html","searchKeys":["proxyUrl","val proxyUrl: String?","dev.kord.core.entity.Embed.Image.proxyUrl"]},{"name":"val proxyUrl: String?","description":"dev.kord.core.entity.Embed.Thumbnail.proxyUrl","location":"core/dev.kord.core.entity/-embed/-thumbnail/proxy-url.html","searchKeys":["proxyUrl","val proxyUrl: String?","dev.kord.core.entity.Embed.Thumbnail.proxyUrl"]},{"name":"val publicFlags: Optional<UserFlags>","description":"dev.kord.core.cache.data.UserData.publicFlags","location":"core/dev.kord.core.cache.data/-user-data/public-flags.html","searchKeys":["publicFlags","val publicFlags: Optional<UserFlags>","dev.kord.core.cache.data.UserData.publicFlags"]},{"name":"val publicFlags: UserFlags?","description":"dev.kord.core.entity.User.publicFlags","location":"core/dev.kord.core.entity/-user/public-flags.html","searchKeys":["publicFlags","val publicFlags: UserFlags?","dev.kord.core.entity.User.publicFlags"]},{"name":"val publicUpdatesChannel: TopGuildMessageChannelBehavior?","description":"dev.kord.core.entity.Guild.publicUpdatesChannel","location":"core/dev.kord.core.entity/-guild/public-updates-channel.html","searchKeys":["publicUpdatesChannel","val publicUpdatesChannel: TopGuildMessageChannelBehavior?","dev.kord.core.entity.Guild.publicUpdatesChannel"]},{"name":"val publicUpdatesChannelId: Snowflake?","description":"dev.kord.core.entity.Guild.publicUpdatesChannelId","location":"core/dev.kord.core.entity/-guild/public-updates-channel-id.html","searchKeys":["publicUpdatesChannelId","val publicUpdatesChannelId: Snowflake?","dev.kord.core.entity.Guild.publicUpdatesChannelId"]},{"name":"val publicUpdatesChannelId: Snowflake? = null","description":"dev.kord.core.cache.data.GuildData.publicUpdatesChannelId","location":"core/dev.kord.core.cache.data/-guild-data/public-updates-channel-id.html","searchKeys":["publicUpdatesChannelId","val publicUpdatesChannelId: Snowflake? = null","dev.kord.core.cache.data.GuildData.publicUpdatesChannelId"]},{"name":"val rateLimitPerUser: Optional<DurationInSeconds>","description":"dev.kord.core.cache.data.ChannelData.rateLimitPerUser","location":"core/dev.kord.core.cache.data/-channel-data/rate-limit-per-user.html","searchKeys":["rateLimitPerUser","val rateLimitPerUser: Optional<DurationInSeconds>","dev.kord.core.cache.data.ChannelData.rateLimitPerUser"]},{"name":"val rawPosition: Int","description":"dev.kord.core.entity.Role.rawPosition","location":"core/dev.kord.core.entity/-role/raw-position.html","searchKeys":["rawPosition","val rawPosition: Int","dev.kord.core.entity.Role.rawPosition"]},{"name":"val reactions: Optional<List<ReactionData>>","description":"dev.kord.core.cache.data.MessageData.reactions","location":"core/dev.kord.core.cache.data/-message-data/reactions.html","searchKeys":["reactions","val reactions: Optional<List<ReactionData>>","dev.kord.core.cache.data.MessageData.reactions"]},{"name":"val reactions: Set<Reaction>","description":"dev.kord.core.entity.Message.reactions","location":"core/dev.kord.core.entity/-message/reactions.html","searchKeys":["reactions","val reactions: Set<Reaction>","dev.kord.core.entity.Message.reactions"]},{"name":"val reason: String?","description":"dev.kord.core.entity.AuditLogEntry.reason","location":"core/dev.kord.core.entity/-audit-log-entry/reason.html","searchKeys":["reason","val reason: String?","dev.kord.core.entity.AuditLogEntry.reason"]},{"name":"val reason: String?","description":"dev.kord.core.entity.Ban.reason","location":"core/dev.kord.core.entity/-ban/reason.html","searchKeys":["reason","val reason: String?","dev.kord.core.entity.Ban.reason"]},{"name":"val reason: String? = null","description":"dev.kord.core.cache.data.BanData.reason","location":"core/dev.kord.core.cache.data/-ban-data/reason.html","searchKeys":["reason","val reason: String? = null","dev.kord.core.cache.data.BanData.reason"]},{"name":"val recipientBehaviors: Set<UserBehavior>","description":"dev.kord.core.entity.channel.DmChannel.recipientBehaviors","location":"core/dev.kord.core.entity.channel/-dm-channel/recipient-behaviors.html","searchKeys":["recipientBehaviors","val recipientBehaviors: Set<UserBehavior>","dev.kord.core.entity.channel.DmChannel.recipientBehaviors"]},{"name":"val recipientIds: Set<Snowflake>","description":"dev.kord.core.entity.channel.DmChannel.recipientIds","location":"core/dev.kord.core.entity.channel/-dm-channel/recipient-ids.html","searchKeys":["recipientIds","val recipientIds: Set<Snowflake>","dev.kord.core.entity.channel.DmChannel.recipientIds"]},{"name":"val recipients: Flow<User>","description":"dev.kord.core.entity.channel.DmChannel.recipients","location":"core/dev.kord.core.entity.channel/-dm-channel/recipients.html","searchKeys":["recipients","val recipients: Flow<User>","dev.kord.core.entity.channel.DmChannel.recipients"]},{"name":"val recipients: Optional<List<Snowflake>>","description":"dev.kord.core.cache.data.ChannelData.recipients","location":"core/dev.kord.core.cache.data/-channel-data/recipients.html","searchKeys":["recipients","val recipients: Optional<List<Snowflake>>","dev.kord.core.cache.data.ChannelData.recipients"]},{"name":"val recoverable: Boolean","description":"dev.kord.core.event.gateway.DisconnectEvent.DiscordCloseEvent.recoverable","location":"core/dev.kord.core.event.gateway/-disconnect-event/-discord-close-event/recoverable.html","searchKeys":["recoverable","val recoverable: Boolean","dev.kord.core.event.gateway.DisconnectEvent.DiscordCloseEvent.recoverable"]},{"name":"val referencedMessage: Message?","description":"dev.kord.core.entity.Message.referencedMessage","location":"core/dev.kord.core.entity/-message/referenced-message.html","searchKeys":["referencedMessage","val referencedMessage: Message?","dev.kord.core.entity.Message.referencedMessage"]},{"name":"val referencedMessage: Optional<MessageData?>","description":"dev.kord.core.cache.data.MessageData.referencedMessage","location":"core/dev.kord.core.cache.data/-message-data/referenced-message.html","searchKeys":["referencedMessage","val referencedMessage: Optional<MessageData?>","dev.kord.core.cache.data.MessageData.referencedMessage"]},{"name":"val regexPatterns: List<String>","description":"dev.kord.core.entity.automoderation.KeywordAutoModerationRule.regexPatterns","location":"core/dev.kord.core.entity.automoderation/-keyword-auto-moderation-rule/regex-patterns.html","searchKeys":["regexPatterns","val regexPatterns: List<String>","dev.kord.core.entity.automoderation.KeywordAutoModerationRule.regexPatterns"]},{"name":"val regexPatterns: Optional<List<String>>","description":"dev.kord.core.cache.data.AutoModerationRuleTriggerMetadataData.regexPatterns","location":"core/dev.kord.core.cache.data/-auto-moderation-rule-trigger-metadata-data/regex-patterns.html","searchKeys":["regexPatterns","val regexPatterns: Optional<List<String>>","dev.kord.core.cache.data.AutoModerationRuleTriggerMetadataData.regexPatterns"]},{"name":"val region: String","description":"dev.kord.core.cache.data.GuildData.region","location":"core/dev.kord.core.cache.data/-guild-data/region.html","searchKeys":["region","val region: String","dev.kord.core.cache.data.GuildData.region"]},{"name":"val regionId: String","description":"dev.kord.core.entity.Guild.regionId","location":"core/dev.kord.core.entity/-guild/region-id.html","searchKeys":["regionId","val regionId: String","dev.kord.core.entity.Guild.regionId"]},{"name":"val regions: Flow<Region>","description":"dev.kord.core.Kord.regions","location":"core/dev.kord.core/-kord/regions.html","searchKeys":["regions","val regions: Flow<Region>","dev.kord.core.Kord.regions"]},{"name":"val removedMemberBehaviors: List<MemberBehavior>","description":"dev.kord.core.event.channel.thread.ThreadMembersUpdateEvent.removedMemberBehaviors","location":"core/dev.kord.core.event.channel.thread/-thread-members-update-event/removed-member-behaviors.html","searchKeys":["removedMemberBehaviors","val removedMemberBehaviors: List<MemberBehavior>","dev.kord.core.event.channel.thread.ThreadMembersUpdateEvent.removedMemberBehaviors"]},{"name":"val removedMemberIds: List<Snowflake>","description":"dev.kord.core.event.channel.thread.ThreadMembersUpdateEvent.removedMemberIds","location":"core/dev.kord.core.event.channel.thread/-thread-members-update-event/removed-member-ids.html","searchKeys":["removedMemberIds","val removedMemberIds: List<Snowflake>","dev.kord.core.event.channel.thread.ThreadMembersUpdateEvent.removedMemberIds"]},{"name":"val removedMemberIds: Optional<List<Snowflake>>","description":"dev.kord.core.cache.data.ThreadMembersUpdateEventData.removedMemberIds","location":"core/dev.kord.core.cache.data/-thread-members-update-event-data/removed-member-ids.html","searchKeys":["removedMemberIds","val removedMemberIds: Optional<List<Snowflake>>","dev.kord.core.cache.data.ThreadMembersUpdateEventData.removedMemberIds"]},{"name":"val requestToSpeakTimestamp: Instant?","description":"dev.kord.core.cache.data.VoiceStateData.requestToSpeakTimestamp","location":"core/dev.kord.core.cache.data/-voice-state-data/request-to-speak-timestamp.html","searchKeys":["requestToSpeakTimestamp","val requestToSpeakTimestamp: Instant?","dev.kord.core.cache.data.VoiceStateData.requestToSpeakTimestamp"]},{"name":"val requestToSpeakTimestamp: Instant?","description":"dev.kord.core.entity.VoiceState.requestToSpeakTimestamp","location":"core/dev.kord.core.entity/-voice-state/request-to-speak-timestamp.html","searchKeys":["requestToSpeakTimestamp","val requestToSpeakTimestamp: Instant?","dev.kord.core.entity.VoiceState.requestToSpeakTimestamp"]},{"name":"val requireCodeGrant: Boolean","description":"dev.kord.core.entity.Application.requireCodeGrant","location":"core/dev.kord.core.entity/-application/require-code-grant.html","searchKeys":["requireCodeGrant","val requireCodeGrant: Boolean","dev.kord.core.entity.Application.requireCodeGrant"]},{"name":"val requireColons: OptionalBoolean","description":"dev.kord.core.cache.data.EmojiData.requireColons","location":"core/dev.kord.core.cache.data/-emoji-data/require-colons.html","searchKeys":["requireColons","val requireColons: OptionalBoolean","dev.kord.core.cache.data.EmojiData.requireColons"]},{"name":"val required: Boolean","description":"dev.kord.core.entity.component.TextInputComponent.required","location":"core/dev.kord.core.entity.component/-text-input-component/required.html","searchKeys":["required","val required: Boolean","dev.kord.core.entity.component.TextInputComponent.required"]},{"name":"val required: OptionalBoolean","description":"dev.kord.core.cache.data.ApplicationCommandOptionData.required","location":"core/dev.kord.core.cache.data/-application-command-option-data/required.html","searchKeys":["required","val required: OptionalBoolean","dev.kord.core.cache.data.ApplicationCommandOptionData.required"]},{"name":"val required: OptionalBoolean","description":"dev.kord.core.cache.data.ApplicationCommandParameterData.required","location":"core/dev.kord.core.cache.data/-application-command-parameter-data/required.html","searchKeys":["required","val required: OptionalBoolean","dev.kord.core.cache.data.ApplicationCommandParameterData.required"]},{"name":"val requiresColons: Boolean","description":"dev.kord.core.entity.GuildEmoji.requiresColons","location":"core/dev.kord.core.entity/-guild-emoji/requires-colons.html","searchKeys":["requiresColons","val requiresColons: Boolean","dev.kord.core.entity.GuildEmoji.requiresColons"]},{"name":"val resolvedObjectsData: Optional<ResolvedObjectsData>","description":"dev.kord.core.cache.data.ApplicationInteractionData.resolvedObjectsData","location":"core/dev.kord.core.cache.data/-application-interaction-data/resolved-objects-data.html","searchKeys":["resolvedObjectsData","val resolvedObjectsData: Optional<ResolvedObjectsData>","dev.kord.core.cache.data.ApplicationInteractionData.resolvedObjectsData"]},{"name":"val resources: ClientResources","description":"dev.kord.core.Kord.resources","location":"core/dev.kord.core/-kord/resources.html","searchKeys":["resources","val resources: ClientResources","dev.kord.core.Kord.resources"]},{"name":"val rest: EntitySupplyStrategy<RestEntitySupplier>","description":"dev.kord.core.supplier.EntitySupplyStrategy.Companion.rest","location":"core/dev.kord.core.supplier/-entity-supply-strategy/-companion/rest.html","searchKeys":["rest","val rest: EntitySupplyStrategy<RestEntitySupplier>","dev.kord.core.supplier.EntitySupplyStrategy.Companion.rest"]},{"name":"val rest: RestClient","description":"dev.kord.core.Kord.rest","location":"core/dev.kord.core/-kord/rest.html","searchKeys":["rest","val rest: RestClient","dev.kord.core.Kord.rest"]},{"name":"val resumeGatewayUrl: String","description":"dev.kord.core.event.gateway.ReadyEvent.resumeGatewayUrl","location":"core/dev.kord.core.event.gateway/-ready-event/resume-gateway-url.html","searchKeys":["resumeGatewayUrl","val resumeGatewayUrl: String","dev.kord.core.event.gateway.ReadyEvent.resumeGatewayUrl"]},{"name":"val revoked: Boolean","description":"dev.kord.core.cache.data.IntegrationData.revoked","location":"core/dev.kord.core.cache.data/-integration-data/revoked.html","searchKeys":["revoked","val revoked: Boolean","dev.kord.core.cache.data.IntegrationData.revoked"]},{"name":"val role: Role","description":"dev.kord.core.event.role.RoleCreateEvent.role","location":"core/dev.kord.core.event.role/-role-create-event/role.html","searchKeys":["role","val role: Role","dev.kord.core.event.role.RoleCreateEvent.role"]},{"name":"val role: Role","description":"dev.kord.core.event.role.RoleUpdateEvent.role","location":"core/dev.kord.core.event.role/-role-update-event/role.html","searchKeys":["role","val role: Role","dev.kord.core.event.role.RoleUpdateEvent.role"]},{"name":"val role: Role?","description":"dev.kord.core.event.role.RoleDeleteEvent.role","location":"core/dev.kord.core.event.role/-role-delete-event/role.html","searchKeys":["role","val role: Role?","dev.kord.core.event.role.RoleDeleteEvent.role"]},{"name":"val role: RoleBehavior","description":"dev.kord.core.entity.Integration.role","location":"core/dev.kord.core.entity/-integration/role.html","searchKeys":["role","val role: RoleBehavior","dev.kord.core.entity.Integration.role"]},{"name":"val roleBehaviors: Set<RoleBehavior>","description":"dev.kord.core.entity.Guild.roleBehaviors","location":"core/dev.kord.core.entity/-guild/role-behaviors.html","searchKeys":["roleBehaviors","val roleBehaviors: Set<RoleBehavior>","dev.kord.core.entity.Guild.roleBehaviors"]},{"name":"val roleBehaviors: Set<RoleBehavior>","description":"dev.kord.core.entity.GuildEmoji.roleBehaviors","location":"core/dev.kord.core.entity/-guild-emoji/role-behaviors.html","searchKeys":["roleBehaviors","val roleBehaviors: Set<RoleBehavior>","dev.kord.core.entity.GuildEmoji.roleBehaviors"]},{"name":"val roleBehaviors: Set<RoleBehavior>","description":"dev.kord.core.entity.Member.roleBehaviors","location":"core/dev.kord.core.entity/-member/role-behaviors.html","searchKeys":["roleBehaviors","val roleBehaviors: Set<RoleBehavior>","dev.kord.core.entity.Member.roleBehaviors"]},{"name":"val roleId: Snowflake","description":"dev.kord.core.cache.data.IntegrationData.roleId","location":"core/dev.kord.core.cache.data/-integration-data/role-id.html","searchKeys":["roleId","val roleId: Snowflake","dev.kord.core.cache.data.IntegrationData.roleId"]},{"name":"val roleId: Snowflake","description":"dev.kord.core.entity.Integration.roleId","location":"core/dev.kord.core.entity/-integration/role-id.html","searchKeys":["roleId","val roleId: Snowflake","dev.kord.core.entity.Integration.roleId"]},{"name":"val roleId: Snowflake","description":"dev.kord.core.event.role.RoleDeleteEvent.roleId","location":"core/dev.kord.core.event.role/-role-delete-event/role-id.html","searchKeys":["roleId","val roleId: Snowflake","dev.kord.core.event.role.RoleDeleteEvent.roleId"]},{"name":"val roleIds: Set<Snowflake>","description":"dev.kord.core.entity.Guild.roleIds","location":"core/dev.kord.core.entity/-guild/role-ids.html","searchKeys":["roleIds","val roleIds: Set<Snowflake>","dev.kord.core.entity.Guild.roleIds"]},{"name":"val roleIds: Set<Snowflake>","description":"dev.kord.core.entity.GuildEmoji.roleIds","location":"core/dev.kord.core.entity/-guild-emoji/role-ids.html","searchKeys":["roleIds","val roleIds: Set<Snowflake>","dev.kord.core.entity.GuildEmoji.roleIds"]},{"name":"val roleIds: Set<Snowflake>","description":"dev.kord.core.entity.Member.roleIds","location":"core/dev.kord.core.entity/-member/role-ids.html","searchKeys":["roleIds","val roleIds: Set<Snowflake>","dev.kord.core.entity.Member.roleIds"]},{"name":"val roles: Flow<Role>","description":"dev.kord.core.entity.GuildEmoji.roles","location":"core/dev.kord.core.entity/-guild-emoji/roles.html","searchKeys":["roles","val roles: Flow<Role>","dev.kord.core.entity.GuildEmoji.roles"]},{"name":"val roles: Flow<Role>","description":"dev.kord.core.entity.Member.roles","location":"core/dev.kord.core.entity/-member/roles.html","searchKeys":["roles","val roles: Flow<Role>","dev.kord.core.entity.Member.roles"]},{"name":"val roles: Flow<Role>","description":"dev.kord.core.supplier.CacheEntitySupplier.roles","location":"core/dev.kord.core.supplier/-cache-entity-supplier/roles.html","searchKeys":["roles","val roles: Flow<Role>","dev.kord.core.supplier.CacheEntitySupplier.roles"]},{"name":"val roles: List<Snowflake>","description":"dev.kord.core.cache.data.GuildData.roles","location":"core/dev.kord.core.cache.data/-guild-data/roles.html","searchKeys":["roles","val roles: List<Snowflake>","dev.kord.core.cache.data.GuildData.roles"]},{"name":"val roles: List<Snowflake>","description":"dev.kord.core.cache.data.MemberData.roles","location":"core/dev.kord.core.cache.data/-member-data/roles.html","searchKeys":["roles","val roles: List<Snowflake>","dev.kord.core.cache.data.MemberData.roles"]},{"name":"val roles: Map<Snowflake, Role>?","description":"dev.kord.core.entity.interaction.ResolvedObjects.roles","location":"core/dev.kord.core.entity.interaction/-resolved-objects/roles.html","searchKeys":["roles","val roles: Map<Snowflake, Role>?","dev.kord.core.entity.interaction.ResolvedObjects.roles"]},{"name":"val roles: Optional<List<Snowflake>>","description":"dev.kord.core.cache.data.EmojiData.roles","location":"core/dev.kord.core.cache.data/-emoji-data/roles.html","searchKeys":["roles","val roles: Optional<List<Snowflake>>","dev.kord.core.cache.data.EmojiData.roles"]},{"name":"val roles: Optional<Map<Snowflake, RoleData>>","description":"dev.kord.core.cache.data.ResolvedObjectsData.roles","location":"core/dev.kord.core.cache.data/-resolved-objects-data/roles.html","searchKeys":["roles","val roles: Optional<Map<Snowflake, RoleData>>","dev.kord.core.cache.data.ResolvedObjectsData.roles"]},{"name":"val rpcOrigins: List<String>","description":"dev.kord.core.entity.BaseApplication.rpcOrigins","location":"core/dev.kord.core.entity/-base-application/rpc-origins.html","searchKeys":["rpcOrigins","val rpcOrigins: List<String>","dev.kord.core.entity.BaseApplication.rpcOrigins"]},{"name":"val rtcRegion: Optional<String?>","description":"dev.kord.core.cache.data.ChannelData.rtcRegion","location":"core/dev.kord.core.cache.data/-channel-data/rtc-region.html","searchKeys":["rtcRegion","val rtcRegion: Optional<String?>","dev.kord.core.cache.data.ChannelData.rtcRegion"]},{"name":"val rtcRegion: String?","description":"dev.kord.core.entity.channel.VoiceChannel.rtcRegion","location":"core/dev.kord.core.entity.channel/-voice-channel/rtc-region.html","searchKeys":["rtcRegion","val rtcRegion: String?","dev.kord.core.entity.channel.VoiceChannel.rtcRegion"]},{"name":"val ruleId: Snowflake","description":"dev.kord.core.event.automoderation.data.AutoModerationActionExecutionEventData.ruleId","location":"core/dev.kord.core.event.automoderation.data/-auto-moderation-action-execution-event-data/rule-id.html","searchKeys":["ruleId","val ruleId: Snowflake","dev.kord.core.event.automoderation.data.AutoModerationActionExecutionEventData.ruleId"]},{"name":"val ruleTriggerType: AutoModerationRuleTriggerType","description":"dev.kord.core.event.automoderation.data.AutoModerationActionExecutionEventData.ruleTriggerType","location":"core/dev.kord.core.event.automoderation.data/-auto-moderation-action-execution-event-data/rule-trigger-type.html","searchKeys":["ruleTriggerType","val ruleTriggerType: AutoModerationRuleTriggerType","dev.kord.core.event.automoderation.data.AutoModerationActionExecutionEventData.ruleTriggerType"]},{"name":"val rulesChannel: TopGuildMessageChannelBehavior?","description":"dev.kord.core.entity.Guild.rulesChannel","location":"core/dev.kord.core.entity/-guild/rules-channel.html","searchKeys":["rulesChannel","val rulesChannel: TopGuildMessageChannelBehavior?","dev.kord.core.entity.Guild.rulesChannel"]},{"name":"val rulesChannelId: Snowflake?","description":"dev.kord.core.entity.Guild.rulesChannelId","location":"core/dev.kord.core.entity/-guild/rules-channel-id.html","searchKeys":["rulesChannelId","val rulesChannelId: Snowflake?","dev.kord.core.entity.Guild.rulesChannelId"]},{"name":"val rulesChannelId: Snowflake? = null","description":"dev.kord.core.cache.data.GuildData.rulesChannelId","location":"core/dev.kord.core.cache.data/-guild-data/rules-channel-id.html","searchKeys":["rulesChannelId","val rulesChannelId: Snowflake? = null","dev.kord.core.cache.data.GuildData.rulesChannelId"]},{"name":"val scheduledEndTime: Instant?","description":"dev.kord.core.cache.data.GuildScheduledEventData.scheduledEndTime","location":"core/dev.kord.core.cache.data/-guild-scheduled-event-data/scheduled-end-time.html","searchKeys":["scheduledEndTime","val scheduledEndTime: Instant?","dev.kord.core.cache.data.GuildScheduledEventData.scheduledEndTime"]},{"name":"val scheduledEndTime: Instant?","description":"dev.kord.core.entity.GuildScheduledEvent.scheduledEndTime","location":"core/dev.kord.core.entity/-guild-scheduled-event/scheduled-end-time.html","searchKeys":["scheduledEndTime","val scheduledEndTime: Instant?","dev.kord.core.entity.GuildScheduledEvent.scheduledEndTime"]},{"name":"val scheduledStartTime: Instant","description":"dev.kord.core.cache.data.GuildScheduledEventData.scheduledStartTime","location":"core/dev.kord.core.cache.data/-guild-scheduled-event-data/scheduled-start-time.html","searchKeys":["scheduledStartTime","val scheduledStartTime: Instant","dev.kord.core.cache.data.GuildScheduledEventData.scheduledStartTime"]},{"name":"val scheduledStartTime: Instant","description":"dev.kord.core.entity.GuildScheduledEvent.scheduledStartTime","location":"core/dev.kord.core.entity/-guild-scheduled-event/scheduled-start-time.html","searchKeys":["scheduledStartTime","val scheduledStartTime: Instant","dev.kord.core.entity.GuildScheduledEvent.scheduledStartTime"]},{"name":"val secrets: Activity.Secrets","description":"dev.kord.core.entity.Activity.secrets","location":"core/dev.kord.core.entity/-activity/secrets.html","searchKeys":["secrets","val secrets: Activity.Secrets","dev.kord.core.entity.Activity.secrets"]},{"name":"val secrets: Optional<DiscordActivitySecrets>","description":"dev.kord.core.cache.data.ActivityData.secrets","location":"core/dev.kord.core.cache.data/-activity-data/secrets.html","searchKeys":["secrets","val secrets: Optional<DiscordActivitySecrets>","dev.kord.core.cache.data.ActivityData.secrets"]},{"name":"val selectMenus: Map<String, SelectMenuComponent>","description":"dev.kord.core.entity.component.ActionRowComponent.selectMenus","location":"core/dev.kord.core.entity.component/-action-row-component/select-menus.html","searchKeys":["selectMenus","val selectMenus: Map<String, SelectMenuComponent>","dev.kord.core.entity.component.ActionRowComponent.selectMenus"]},{"name":"val self: User","description":"dev.kord.core.event.gateway.ReadyEvent.self","location":"core/dev.kord.core.event.gateway/-ready-event/self.html","searchKeys":["self","val self: User","dev.kord.core.event.gateway.ReadyEvent.self"]},{"name":"val selfDeaf: Boolean","description":"dev.kord.core.cache.data.VoiceStateData.selfDeaf","location":"core/dev.kord.core.cache.data/-voice-state-data/self-deaf.html","searchKeys":["selfDeaf","val selfDeaf: Boolean","dev.kord.core.cache.data.VoiceStateData.selfDeaf"]},{"name":"val selfId: Snowflake","description":"dev.kord.core.Kord.selfId","location":"core/dev.kord.core/-kord/self-id.html","searchKeys":["selfId","val selfId: Snowflake","dev.kord.core.Kord.selfId"]},{"name":"val selfMute: Boolean","description":"dev.kord.core.cache.data.VoiceStateData.selfMute","location":"core/dev.kord.core.cache.data/-voice-state-data/self-mute.html","searchKeys":["selfMute","val selfMute: Boolean","dev.kord.core.cache.data.VoiceStateData.selfMute"]},{"name":"val selfReacted: Boolean","description":"dev.kord.core.entity.Reaction.selfReacted","location":"core/dev.kord.core.entity/-reaction/self-reacted.html","searchKeys":["selfReacted","val selfReacted: Boolean","dev.kord.core.entity.Reaction.selfReacted"]},{"name":"val selfStream: OptionalBoolean","description":"dev.kord.core.cache.data.VoiceStateData.selfStream","location":"core/dev.kord.core.cache.data/-voice-state-data/self-stream.html","searchKeys":["selfStream","val selfStream: OptionalBoolean","dev.kord.core.cache.data.VoiceStateData.selfStream"]},{"name":"val selfVideo: Boolean","description":"dev.kord.core.cache.data.VoiceStateData.selfVideo","location":"core/dev.kord.core.cache.data/-voice-state-data/self-video.html","searchKeys":["selfVideo","val selfVideo: Boolean","dev.kord.core.cache.data.VoiceStateData.selfVideo"]},{"name":"val serializedSourceGuild: PartialGuildData","description":"dev.kord.core.cache.data.TemplateData.serializedSourceGuild","location":"core/dev.kord.core.cache.data/-template-data/serialized-source-guild.html","searchKeys":["serializedSourceGuild","val serializedSourceGuild: PartialGuildData","dev.kord.core.cache.data.TemplateData.serializedSourceGuild"]},{"name":"val sessionId: String","description":"dev.kord.core.cache.data.VoiceStateData.sessionId","location":"core/dev.kord.core.cache.data/-voice-state-data/session-id.html","searchKeys":["sessionId","val sessionId: String","dev.kord.core.cache.data.VoiceStateData.sessionId"]},{"name":"val sessionId: String","description":"dev.kord.core.entity.VoiceState.sessionId","location":"core/dev.kord.core.entity/-voice-state/session-id.html","searchKeys":["sessionId","val sessionId: String","dev.kord.core.entity.VoiceState.sessionId"]},{"name":"val sessionId: String","description":"dev.kord.core.event.gateway.ReadyEvent.sessionId","location":"core/dev.kord.core.event.gateway/-ready-event/session-id.html","searchKeys":["sessionId","val sessionId: String","dev.kord.core.event.gateway.ReadyEvent.sessionId"]},{"name":"val shard: Int","description":"dev.kord.core.gateway.ShardEvent.shard","location":"core/dev.kord.core.gateway/-shard-event/shard.html","searchKeys":["shard","val shard: Int","dev.kord.core.gateway.ShardEvent.shard"]},{"name":"val shards: Shards","description":"dev.kord.core.ClientResources.shards","location":"core/dev.kord.core/-client-resources/shards.html","searchKeys":["shards","val shards: Shards","dev.kord.core.ClientResources.shards"]},{"name":"val size: Int","description":"dev.kord.core.cache.data.AttachmentData.size","location":"core/dev.kord.core.cache.data/-attachment-data/size.html","searchKeys":["size","val size: Int","dev.kord.core.cache.data.AttachmentData.size"]},{"name":"val size: Int","description":"dev.kord.core.entity.Attachment.size","location":"core/dev.kord.core.entity/-attachment/size.html","searchKeys":["size","val size: Int","dev.kord.core.entity.Attachment.size"]},{"name":"val skuId: Snowflake","description":"dev.kord.core.cache.data.StickerPackData.skuId","location":"core/dev.kord.core.cache.data/-sticker-pack-data/sku-id.html","searchKeys":["skuId","val skuId: Snowflake","dev.kord.core.cache.data.StickerPackData.skuId"]},{"name":"val skuId: Snowflake","description":"dev.kord.core.entity.StickerPack.skuId","location":"core/dev.kord.core.entity/-sticker-pack/sku-id.html","searchKeys":["skuId","val skuId: Snowflake","dev.kord.core.entity.StickerPack.skuId"]},{"name":"val slug: String?","description":"dev.kord.core.entity.BaseApplication.slug","location":"core/dev.kord.core.entity/-base-application/slug.html","searchKeys":["slug","val slug: String?","dev.kord.core.entity.BaseApplication.slug"]},{"name":"val smallImage: String?","description":"dev.kord.core.entity.Activity.Assets.smallImage","location":"core/dev.kord.core.entity/-activity/-assets/small-image.html","searchKeys":["smallImage","val smallImage: String?","dev.kord.core.entity.Activity.Assets.smallImage"]},{"name":"val smallText: String?","description":"dev.kord.core.entity.Activity.Assets.smallText","location":"core/dev.kord.core.entity/-activity/-assets/small-text.html","searchKeys":["smallText","val smallText: String?","dev.kord.core.entity.Activity.Assets.smallText"]},{"name":"val sortValue: Int?","description":"dev.kord.core.entity.Sticker.sortValue","location":"core/dev.kord.core.entity/-sticker/sort-value.html","searchKeys":["sortValue","val sortValue: Int?","dev.kord.core.entity.Sticker.sortValue"]},{"name":"val sortValue: OptionalInt","description":"dev.kord.core.cache.data.StickerData.sortValue","location":"core/dev.kord.core.cache.data/-sticker-data/sort-value.html","searchKeys":["sortValue","val sortValue: OptionalInt","dev.kord.core.cache.data.StickerData.sortValue"]},{"name":"val sourceGuildId: Snowflake","description":"dev.kord.core.cache.data.TemplateData.sourceGuildId","location":"core/dev.kord.core.cache.data/-template-data/source-guild-id.html","searchKeys":["sourceGuildId","val sourceGuildId: Snowflake","dev.kord.core.cache.data.TemplateData.sourceGuildId"]},{"name":"val spectate: String?","description":"dev.kord.core.entity.Activity.Secrets.spectate","location":"core/dev.kord.core.entity/-activity/-secrets/spectate.html","searchKeys":["spectate","val spectate: String?","dev.kord.core.entity.Activity.Secrets.spectate"]},{"name":"val splash: Optional<String?>","description":"dev.kord.core.cache.data.GuildData.splash","location":"core/dev.kord.core.cache.data/-guild-data/splash.html","searchKeys":["splash","val splash: Optional<String?>","dev.kord.core.cache.data.GuildData.splash"]},{"name":"val splash: Optional<String?>","description":"dev.kord.core.cache.data.PartialGuildData.splash","location":"core/dev.kord.core.cache.data/-partial-guild-data/splash.html","searchKeys":["splash","val splash: Optional<String?>","dev.kord.core.cache.data.PartialGuildData.splash"]},{"name":"val splash: String?","description":"dev.kord.core.entity.GuildPreview.splash","location":"core/dev.kord.core.entity/-guild-preview/splash.html","searchKeys":["splash","val splash: String?","dev.kord.core.entity.GuildPreview.splash"]},{"name":"val splash: String? = null","description":"dev.kord.core.cache.data.GuildPreviewData.splash","location":"core/dev.kord.core.cache.data/-guild-preview-data/splash.html","searchKeys":["splash","val splash: String? = null","dev.kord.core.cache.data.GuildPreviewData.splash"]},{"name":"val splashHash: String?","description":"dev.kord.core.entity.Guild.splashHash","location":"core/dev.kord.core.entity/-guild/splash-hash.html","searchKeys":["splashHash","val splashHash: String?","dev.kord.core.entity.Guild.splashHash"]},{"name":"val splashHash: String?","description":"dev.kord.core.entity.PartialGuild.splashHash","location":"core/dev.kord.core.entity/-partial-guild/splash-hash.html","searchKeys":["splashHash","val splashHash: String?","dev.kord.core.entity.PartialGuild.splashHash"]},{"name":"val stageInstances: Optional<List<StageInstanceData>>","description":"dev.kord.core.cache.data.GuildData.stageInstances","location":"core/dev.kord.core.cache.data/-guild-data/stage-instances.html","searchKeys":["stageInstances","val stageInstances: Optional<List<StageInstanceData>>","dev.kord.core.cache.data.GuildData.stageInstances"]},{"name":"val stageInstances: Optional<List<StageInstanceData>>","description":"dev.kord.core.cache.data.PartialGuildData.stageInstances","location":"core/dev.kord.core.cache.data/-partial-guild-data/stage-instances.html","searchKeys":["stageInstances","val stageInstances: Optional<List<StageInstanceData>>","dev.kord.core.cache.data.PartialGuildData.stageInstances"]},{"name":"val stageInstances: Set<StageInstance>","description":"dev.kord.core.entity.Guild.stageInstances","location":"core/dev.kord.core.entity/-guild/stage-instances.html","searchKeys":["stageInstances","val stageInstances: Set<StageInstance>","dev.kord.core.entity.Guild.stageInstances"]},{"name":"val start: Instant?","description":"dev.kord.core.entity.Activity.start","location":"core/dev.kord.core.entity/-activity/start.html","searchKeys":["start","val start: Instant?","dev.kord.core.entity.Activity.start"]},{"name":"val started: Instant","description":"dev.kord.core.event.channel.TypingStartEvent.started","location":"core/dev.kord.core.event.channel/-typing-start-event/started.html","searchKeys":["started","val started: Instant","dev.kord.core.event.channel.TypingStartEvent.started"]},{"name":"val state: Optional<String?>","description":"dev.kord.core.cache.data.ActivityData.state","location":"core/dev.kord.core.cache.data/-activity-data/state.html","searchKeys":["state","val state: Optional<String?>","dev.kord.core.cache.data.ActivityData.state"]},{"name":"val state: String?","description":"dev.kord.core.entity.Activity.state","location":"core/dev.kord.core.entity/-activity/state.html","searchKeys":["state","val state: String?","dev.kord.core.entity.Activity.state"]},{"name":"val state: VoiceState","description":"dev.kord.core.event.user.VoiceStateUpdateEvent.state","location":"core/dev.kord.core.event.user/-voice-state-update-event/state.html","searchKeys":["state","val state: VoiceState","dev.kord.core.event.user.VoiceStateUpdateEvent.state"]},{"name":"val status: GuildScheduledEventStatus","description":"dev.kord.core.cache.data.GuildScheduledEventData.status","location":"core/dev.kord.core.cache.data/-guild-scheduled-event-data/status.html","searchKeys":["status","val status: GuildScheduledEventStatus","dev.kord.core.cache.data.GuildScheduledEventData.status"]},{"name":"val status: GuildScheduledEventStatus","description":"dev.kord.core.entity.GuildScheduledEvent.status","location":"core/dev.kord.core.entity/-guild-scheduled-event/status.html","searchKeys":["status","val status: GuildScheduledEventStatus","dev.kord.core.entity.GuildScheduledEvent.status"]},{"name":"val status: PresenceStatus","description":"dev.kord.core.cache.data.PresenceData.status","location":"core/dev.kord.core.cache.data/-presence-data/status.html","searchKeys":["status","val status: PresenceStatus","dev.kord.core.cache.data.PresenceData.status"]},{"name":"val status: PresenceStatus","description":"dev.kord.core.entity.ClientStatus.Client.status","location":"core/dev.kord.core.entity/-client-status/-client/status.html","searchKeys":["status","val status: PresenceStatus","dev.kord.core.entity.ClientStatus.Client.status"]},{"name":"val status: PresenceStatus","description":"dev.kord.core.entity.Presence.status","location":"core/dev.kord.core.entity/-presence/status.html","searchKeys":["status","val status: PresenceStatus","dev.kord.core.entity.Presence.status"]},{"name":"val stickers: List<Sticker>","description":"dev.kord.core.entity.StickerPack.stickers","location":"core/dev.kord.core.entity/-sticker-pack/stickers.html","searchKeys":["stickers","val stickers: List<Sticker>","dev.kord.core.entity.StickerPack.stickers"]},{"name":"val stickers: List<StickerData>","description":"dev.kord.core.cache.data.GuildPreviewData.stickers","location":"core/dev.kord.core.cache.data/-guild-preview-data/stickers.html","searchKeys":["stickers","val stickers: List<StickerData>","dev.kord.core.cache.data.GuildPreviewData.stickers"]},{"name":"val stickers: List<StickerData>","description":"dev.kord.core.cache.data.StickerPackData.stickers","location":"core/dev.kord.core.cache.data/-sticker-pack-data/stickers.html","searchKeys":["stickers","val stickers: List<StickerData>","dev.kord.core.cache.data.StickerPackData.stickers"]},{"name":"val stickers: List<StickerItem>","description":"dev.kord.core.entity.Message.stickers","location":"core/dev.kord.core.entity/-message/stickers.html","searchKeys":["stickers","val stickers: List<StickerItem>","dev.kord.core.entity.Message.stickers"]},{"name":"val stickers: Optional<List<StickerData>>","description":"dev.kord.core.cache.data.GuildData.stickers","location":"core/dev.kord.core.cache.data/-guild-data/stickers.html","searchKeys":["stickers","val stickers: Optional<List<StickerData>>","dev.kord.core.cache.data.GuildData.stickers"]},{"name":"val stickers: Optional<List<StickerData>>","description":"dev.kord.core.cache.data.PartialGuildData.stickers","location":"core/dev.kord.core.cache.data/-partial-guild-data/stickers.html","searchKeys":["stickers","val stickers: Optional<List<StickerData>>","dev.kord.core.cache.data.PartialGuildData.stickers"]},{"name":"val stickers: Optional<List<StickerItemData>>","description":"dev.kord.core.cache.data.MessageData.stickers","location":"core/dev.kord.core.cache.data/-message-data/stickers.html","searchKeys":["stickers","val stickers: Optional<List<StickerItemData>>","dev.kord.core.cache.data.MessageData.stickers"]},{"name":"val stickers: Set<Sticker>","description":"dev.kord.core.entity.GuildPreview.stickers","location":"core/dev.kord.core.entity/-guild-preview/stickers.html","searchKeys":["stickers","val stickers: Set<Sticker>","dev.kord.core.entity.GuildPreview.stickers"]},{"name":"val strategy: EntitySupplyStrategy<*>","description":"dev.kord.core.entity.channel.ResolvedChannel.strategy","location":"core/dev.kord.core.entity.channel/-resolved-channel/strategy.html","searchKeys":["strategy","val strategy: EntitySupplyStrategy<*>","dev.kord.core.entity.channel.ResolvedChannel.strategy"]},{"name":"val strategy: EntitySupplyStrategy<*>","description":"dev.kord.core.entity.interaction.ResolvedObjects.strategy","location":"core/dev.kord.core.entity.interaction/-resolved-objects/strategy.html","searchKeys":["strategy","val strategy: EntitySupplyStrategy<*>","dev.kord.core.entity.interaction.ResolvedObjects.strategy"]},{"name":"val style: ButtonStyle","description":"dev.kord.core.entity.component.ButtonComponent.style","location":"core/dev.kord.core.entity.component/-button-component/style.html","searchKeys":["style","val style: ButtonStyle","dev.kord.core.entity.component.ButtonComponent.style"]},{"name":"val style: Optional<ButtonStyle>","description":"dev.kord.core.cache.data.ChatComponentData.style","location":"core/dev.kord.core.cache.data/-chat-component-data/style.html","searchKeys":["style","val style: Optional<ButtonStyle>","dev.kord.core.cache.data.ChatComponentData.style"]},{"name":"val style: Optional<TextInputStyle>","description":"dev.kord.core.cache.data.TextInputComponentData.style","location":"core/dev.kord.core.cache.data/-text-input-component-data/style.html","searchKeys":["style","val style: Optional<TextInputStyle>","dev.kord.core.cache.data.TextInputComponentData.style"]},{"name":"val style: TextInputStyle","description":"dev.kord.core.entity.component.TextInputComponent.style","location":"core/dev.kord.core.entity.component/-text-input-component/style.html","searchKeys":["style","val style: TextInputStyle","dev.kord.core.entity.component.TextInputComponent.style"]},{"name":"val subCommands: List<ApplicationCommandSubcommandData>","description":"dev.kord.core.cache.data.ApplicationCommandGroupData.subCommands","location":"core/dev.kord.core.cache.data/-application-command-group-data/sub-commands.html","searchKeys":["subCommands","val subCommands: List<ApplicationCommandSubcommandData>","dev.kord.core.cache.data.ApplicationCommandGroupData.subCommands"]},{"name":"val subCommands: Optional<List<SubCommand>>","description":"dev.kord.core.cache.data.OptionData.subCommands","location":"core/dev.kord.core.cache.data/-option-data/sub-commands.html","searchKeys":["subCommands","val subCommands: Optional<List<SubCommand>>","dev.kord.core.cache.data.OptionData.subCommands"]},{"name":"val subcommands: Map<String, ChatInputSubCommand>","description":"dev.kord.core.entity.application.ChatInputGroup.subcommands","location":"core/dev.kord.core.entity.application/-chat-input-group/subcommands.html","searchKeys":["subcommands","val subcommands: Map<String, ChatInputSubCommand>","dev.kord.core.entity.application.ChatInputGroup.subcommands"]},{"name":"val subscriberCount: Int","description":"dev.kord.core.cache.data.IntegrationData.subscriberCount","location":"core/dev.kord.core.cache.data/-integration-data/subscriber-count.html","searchKeys":["subscriberCount","val subscriberCount: Int","dev.kord.core.cache.data.IntegrationData.subscriberCount"]},{"name":"val supportedFormat: Image.Format","description":"dev.kord.core.entity.User.Avatar.supportedFormat","location":"core/dev.kord.core.entity/-user/-avatar/supported-format.html","searchKeys":["supportedFormat","val supportedFormat: Image.Format","dev.kord.core.entity.User.Avatar.supportedFormat"]},{"name":"val suppress: Boolean","description":"dev.kord.core.cache.data.VoiceStateData.suppress","location":"core/dev.kord.core.cache.data/-voice-state-data/suppress.html","searchKeys":["suppress","val suppress: Boolean","dev.kord.core.cache.data.VoiceStateData.suppress"]},{"name":"val syncedAt: Instant","description":"dev.kord.core.cache.data.IntegrationData.syncedAt","location":"core/dev.kord.core.cache.data/-integration-data/synced-at.html","searchKeys":["syncedAt","val syncedAt: Instant","dev.kord.core.cache.data.IntegrationData.syncedAt"]},{"name":"val syncedAt: Instant","description":"dev.kord.core.entity.Integration.syncedAt","location":"core/dev.kord.core.entity/-integration/synced-at.html","searchKeys":["syncedAt","val syncedAt: Instant","dev.kord.core.entity.Integration.syncedAt"]},{"name":"val syncing: Boolean","description":"dev.kord.core.cache.data.IntegrationData.syncing","location":"core/dev.kord.core.cache.data/-integration-data/syncing.html","searchKeys":["syncing","val syncing: Boolean","dev.kord.core.cache.data.IntegrationData.syncing"]},{"name":"val systemChannel: TextChannelBehavior?","description":"dev.kord.core.entity.Guild.systemChannel","location":"core/dev.kord.core.entity/-guild/system-channel.html","searchKeys":["systemChannel","val systemChannel: TextChannelBehavior?","dev.kord.core.entity.Guild.systemChannel"]},{"name":"val systemChannelFlags: SystemChannelFlags","description":"dev.kord.core.cache.data.GuildData.systemChannelFlags","location":"core/dev.kord.core.cache.data/-guild-data/system-channel-flags.html","searchKeys":["systemChannelFlags","val systemChannelFlags: SystemChannelFlags","dev.kord.core.cache.data.GuildData.systemChannelFlags"]},{"name":"val systemChannelFlags: SystemChannelFlags","description":"dev.kord.core.entity.Guild.systemChannelFlags","location":"core/dev.kord.core.entity/-guild/system-channel-flags.html","searchKeys":["systemChannelFlags","val systemChannelFlags: SystemChannelFlags","dev.kord.core.entity.Guild.systemChannelFlags"]},{"name":"val systemChannelId: Snowflake?","description":"dev.kord.core.entity.Guild.systemChannelId","location":"core/dev.kord.core.entity/-guild/system-channel-id.html","searchKeys":["systemChannelId","val systemChannelId: Snowflake?","dev.kord.core.entity.Guild.systemChannelId"]},{"name":"val systemChannelId: Snowflake? = null","description":"dev.kord.core.cache.data.GuildData.systemChannelId","location":"core/dev.kord.core.cache.data/-guild-data/system-channel-id.html","searchKeys":["systemChannelId","val systemChannelId: Snowflake? = null","dev.kord.core.cache.data.GuildData.systemChannelId"]},{"name":"val tag: String","description":"dev.kord.core.entity.User.tag","location":"core/dev.kord.core.entity/-user/tag.html","searchKeys":["tag","val tag: String","dev.kord.core.entity.User.tag"]},{"name":"val tags: List<String>","description":"dev.kord.core.entity.BaseApplication.tags","location":"core/dev.kord.core.entity/-base-application/tags.html","searchKeys":["tags","val tags: List<String>","dev.kord.core.entity.BaseApplication.tags"]},{"name":"val tags: List<String>","description":"dev.kord.core.entity.Sticker.tags","location":"core/dev.kord.core.entity/-sticker/tags.html","searchKeys":["tags","val tags: List<String>","dev.kord.core.entity.Sticker.tags"]},{"name":"val tags: Optional<RoleTagsData>","description":"dev.kord.core.cache.data.RoleData.tags","location":"core/dev.kord.core.cache.data/-role-data/tags.html","searchKeys":["tags","val tags: Optional<RoleTagsData>","dev.kord.core.cache.data.RoleData.tags"]},{"name":"val tags: Optional<String>","description":"dev.kord.core.cache.data.StickerData.tags","location":"core/dev.kord.core.cache.data/-sticker-data/tags.html","searchKeys":["tags","val tags: Optional<String>","dev.kord.core.cache.data.StickerData.tags"]},{"name":"val tags: RoleTags?","description":"dev.kord.core.entity.Role.tags","location":"core/dev.kord.core.entity/-role/tags.html","searchKeys":["tags","val tags: RoleTags?","dev.kord.core.entity.Role.tags"]},{"name":"val target: Snowflake","description":"dev.kord.core.entity.PermissionOverwrite.target","location":"core/dev.kord.core.entity/-permission-overwrite/target.html","searchKeys":["target","val target: Snowflake","dev.kord.core.entity.PermissionOverwrite.target"]},{"name":"val targetApplication: Optional<PartialApplicationData>","description":"dev.kord.core.cache.data.InviteCreateData.targetApplication","location":"core/dev.kord.core.cache.data/-invite-create-data/target-application.html","searchKeys":["targetApplication","val targetApplication: Optional<PartialApplicationData>","dev.kord.core.cache.data.InviteCreateData.targetApplication"]},{"name":"val targetApplication: PartialApplication?","description":"dev.kord.core.entity.Invite.targetApplication","location":"core/dev.kord.core.entity/-invite/target-application.html","searchKeys":["targetApplication","val targetApplication: PartialApplication?","dev.kord.core.entity.Invite.targetApplication"]},{"name":"val targetApplication: PartialApplication?","description":"dev.kord.core.event.guild.InviteCreateEvent.targetApplication","location":"core/dev.kord.core.event.guild/-invite-create-event/target-application.html","searchKeys":["targetApplication","val targetApplication: PartialApplication?","dev.kord.core.event.guild.InviteCreateEvent.targetApplication"]},{"name":"val targetId: OptionalSnowflake","description":"dev.kord.core.cache.data.ApplicationInteractionData.targetId","location":"core/dev.kord.core.cache.data/-application-interaction-data/target-id.html","searchKeys":["targetId","val targetId: OptionalSnowflake","dev.kord.core.cache.data.ApplicationInteractionData.targetId"]},{"name":"val targetId: Snowflake?","description":"dev.kord.core.entity.AuditLogEntry.targetId","location":"core/dev.kord.core.entity/-audit-log-entry/target-id.html","searchKeys":["targetId","val targetId: Snowflake?","dev.kord.core.entity.AuditLogEntry.targetId"]},{"name":"val targetMember: MemberBehavior?","description":"dev.kord.core.event.guild.InviteCreateEvent.targetMember","location":"core/dev.kord.core.event.guild/-invite-create-event/target-member.html","searchKeys":["targetMember","val targetMember: MemberBehavior?","dev.kord.core.event.guild.InviteCreateEvent.targetMember"]},{"name":"val targetType: InviteTargetType?","description":"dev.kord.core.entity.Invite.targetType","location":"core/dev.kord.core.entity/-invite/target-type.html","searchKeys":["targetType","val targetType: InviteTargetType?","dev.kord.core.entity.Invite.targetType"]},{"name":"val targetType: InviteTargetType?","description":"dev.kord.core.event.guild.InviteCreateEvent.targetType","location":"core/dev.kord.core.event.guild/-invite-create-event/target-type.html","searchKeys":["targetType","val targetType: InviteTargetType?","dev.kord.core.event.guild.InviteCreateEvent.targetType"]},{"name":"val targetType: Optional<InviteTargetType>","description":"dev.kord.core.cache.data.InviteCreateData.targetType","location":"core/dev.kord.core.cache.data/-invite-create-data/target-type.html","searchKeys":["targetType","val targetType: Optional<InviteTargetType>","dev.kord.core.cache.data.InviteCreateData.targetType"]},{"name":"val targetUser: UserBehavior?","description":"dev.kord.core.entity.Invite.targetUser","location":"core/dev.kord.core.entity/-invite/target-user.html","searchKeys":["targetUser","val targetUser: UserBehavior?","dev.kord.core.entity.Invite.targetUser"]},{"name":"val targetUser: UserBehavior?","description":"dev.kord.core.event.guild.InviteCreateEvent.targetUser","location":"core/dev.kord.core.event.guild/-invite-create-event/target-user.html","searchKeys":["targetUser","val targetUser: UserBehavior?","dev.kord.core.event.guild.InviteCreateEvent.targetUser"]},{"name":"val targetUserId: OptionalSnowflake","description":"dev.kord.core.cache.data.InviteCreateData.targetUserId","location":"core/dev.kord.core.cache.data/-invite-create-data/target-user-id.html","searchKeys":["targetUserId","val targetUserId: OptionalSnowflake","dev.kord.core.cache.data.InviteCreateData.targetUserId"]},{"name":"val targetUserId: Snowflake?","description":"dev.kord.core.entity.Invite.targetUserId","location":"core/dev.kord.core.entity/-invite/target-user-id.html","searchKeys":["targetUserId","val targetUserId: Snowflake?","dev.kord.core.entity.Invite.targetUserId"]},{"name":"val targetUserId: Snowflake?","description":"dev.kord.core.event.guild.InviteCreateEvent.targetUserId","location":"core/dev.kord.core.event.guild/-invite-create-event/target-user-id.html","searchKeys":["targetUserId","val targetUserId: Snowflake?","dev.kord.core.event.guild.InviteCreateEvent.targetUserId"]},{"name":"val team: Team?","description":"dev.kord.core.entity.Application.team","location":"core/dev.kord.core.entity/-application/team.html","searchKeys":["team","val team: Team?","dev.kord.core.entity.Application.team"]},{"name":"val team: TeamData?","description":"dev.kord.core.cache.data.ApplicationData.team","location":"core/dev.kord.core.cache.data/-application-data/team.html","searchKeys":["team","val team: TeamData?","dev.kord.core.cache.data.ApplicationData.team"]},{"name":"val teamId: Snowflake","description":"dev.kord.core.cache.data.TeamMemberData.teamId","location":"core/dev.kord.core.cache.data/-team-member-data/team-id.html","searchKeys":["teamId","val teamId: Snowflake","dev.kord.core.cache.data.TeamMemberData.teamId"]},{"name":"val teamId: Snowflake","description":"dev.kord.core.entity.TeamMember.teamId","location":"core/dev.kord.core.entity/-team-member/team-id.html","searchKeys":["teamId","val teamId: Snowflake","dev.kord.core.entity.TeamMember.teamId"]},{"name":"val teamId: Snowflake?","description":"dev.kord.core.entity.Application.teamId","location":"core/dev.kord.core.entity/-application/team-id.html","searchKeys":["teamId","val teamId: Snowflake?","dev.kord.core.entity.Application.teamId"]},{"name":"val temporary: Boolean","description":"dev.kord.core.cache.data.InviteCreateData.temporary","location":"core/dev.kord.core.cache.data/-invite-create-data/temporary.html","searchKeys":["temporary","val temporary: Boolean","dev.kord.core.cache.data.InviteCreateData.temporary"]},{"name":"val temporary: Boolean","description":"dev.kord.core.cache.data.InviteWithMetadataData.temporary","location":"core/dev.kord.core.cache.data/-invite-with-metadata-data/temporary.html","searchKeys":["temporary","val temporary: Boolean","dev.kord.core.cache.data.InviteWithMetadataData.temporary"]},{"name":"val temporary: Boolean","description":"dev.kord.core.entity.InviteWithMetadata.temporary","location":"core/dev.kord.core.entity/-invite-with-metadata/temporary.html","searchKeys":["temporary","val temporary: Boolean","dev.kord.core.entity.InviteWithMetadata.temporary"]},{"name":"val termsOfServiceUrl: String?","description":"dev.kord.core.entity.BaseApplication.termsOfServiceUrl","location":"core/dev.kord.core.entity/-base-application/terms-of-service-url.html","searchKeys":["termsOfServiceUrl","val termsOfServiceUrl: String?","dev.kord.core.entity.BaseApplication.termsOfServiceUrl"]},{"name":"val text: String","description":"dev.kord.core.cache.data.EmbedFooterData.text","location":"core/dev.kord.core.cache.data/-embed-footer-data/text.html","searchKeys":["text","val text: String","dev.kord.core.cache.data.EmbedFooterData.text"]},{"name":"val text: String","description":"dev.kord.core.entity.Embed.Footer.text","location":"core/dev.kord.core.entity/-embed/-footer/text.html","searchKeys":["text","val text: String","dev.kord.core.entity.Embed.Footer.text"]},{"name":"val textInputs: Map<String, TextInputComponent>","description":"dev.kord.core.entity.component.ActionRowComponent.textInputs","location":"core/dev.kord.core.entity.component/-action-row-component/text-inputs.html","searchKeys":["textInputs","val textInputs: Map<String, TextInputComponent>","dev.kord.core.entity.component.ActionRowComponent.textInputs"]},{"name":"val threadMetadata: Optional<ThreadMetadataData>","description":"dev.kord.core.cache.data.ChannelData.threadMetadata","location":"core/dev.kord.core.cache.data/-channel-data/thread-metadata.html","searchKeys":["threadMetadata","val threadMetadata: Optional<ThreadMetadataData>","dev.kord.core.cache.data.ChannelData.threadMetadata"]},{"name":"val threads: Flow<ThreadChannel>","description":"dev.kord.core.entity.Guild.threads","location":"core/dev.kord.core.entity/-guild/threads.html","searchKeys":["threads","val threads: Flow<ThreadChannel>","dev.kord.core.entity.Guild.threads"]},{"name":"val threads: List<ChannelData>","description":"dev.kord.core.cache.data.ThreadListSyncData.threads","location":"core/dev.kord.core.cache.data/-thread-list-sync-data/threads.html","searchKeys":["threads","val threads: List<ChannelData>","dev.kord.core.cache.data.ThreadListSyncData.threads"]},{"name":"val threads: List<ThreadChannel>","description":"dev.kord.core.entity.AuditLog.threads","location":"core/dev.kord.core.entity/-audit-log/threads.html","searchKeys":["threads","val threads: List<ThreadChannel>","dev.kord.core.entity.AuditLog.threads"]},{"name":"val threads: List<ThreadChannel>","description":"dev.kord.core.event.channel.thread.ThreadListSyncEvent.threads","location":"core/dev.kord.core.event.channel.thread/-thread-list-sync-event/threads.html","searchKeys":["threads","val threads: List<ThreadChannel>","dev.kord.core.event.channel.thread.ThreadListSyncEvent.threads"]},{"name":"val threads: Optional<List<ChannelData>>","description":"dev.kord.core.cache.data.GuildData.threads","location":"core/dev.kord.core.cache.data/-guild-data/threads.html","searchKeys":["threads","val threads: Optional<List<ChannelData>>","dev.kord.core.cache.data.GuildData.threads"]},{"name":"val thumbnail: Embed.Thumbnail?","description":"dev.kord.core.entity.Embed.thumbnail","location":"core/dev.kord.core.entity/-embed/thumbnail.html","searchKeys":["thumbnail","val thumbnail: Embed.Thumbnail?","dev.kord.core.entity.Embed.thumbnail"]},{"name":"val thumbnail: Optional<EmbedThumbnailData>","description":"dev.kord.core.cache.data.EmbedData.thumbnail","location":"core/dev.kord.core.cache.data/-embed-data/thumbnail.html","searchKeys":["thumbnail","val thumbnail: Optional<EmbedThumbnailData>","dev.kord.core.cache.data.EmbedData.thumbnail"]},{"name":"val timestamp: Instant","description":"dev.kord.core.cache.data.MessageData.timestamp","location":"core/dev.kord.core.cache.data/-message-data/timestamp.html","searchKeys":["timestamp","val timestamp: Instant","dev.kord.core.cache.data.MessageData.timestamp"]},{"name":"val timestamp: Instant","description":"dev.kord.core.entity.Message.timestamp","location":"core/dev.kord.core.entity/-message/timestamp.html","searchKeys":["timestamp","val timestamp: Instant","dev.kord.core.entity.Message.timestamp"]},{"name":"val timestamp: Instant","description":"dev.kord.core.event.channel.data.TypingStartEventData.timestamp","location":"core/dev.kord.core.event.channel.data/-typing-start-event-data/timestamp.html","searchKeys":["timestamp","val timestamp: Instant","dev.kord.core.event.channel.data.TypingStartEventData.timestamp"]},{"name":"val timestamp: Instant?","description":"dev.kord.core.entity.Embed.timestamp","location":"core/dev.kord.core.entity/-embed/timestamp.html","searchKeys":["timestamp","val timestamp: Instant?","dev.kord.core.entity.Embed.timestamp"]},{"name":"val timestamp: Optional<Instant>","description":"dev.kord.core.cache.data.EmbedData.timestamp","location":"core/dev.kord.core.cache.data/-embed-data/timestamp.html","searchKeys":["timestamp","val timestamp: Optional<Instant>","dev.kord.core.cache.data.EmbedData.timestamp"]},{"name":"val timestamps: Optional<DiscordActivityTimestamps>","description":"dev.kord.core.cache.data.ActivityData.timestamps","location":"core/dev.kord.core.cache.data/-activity-data/timestamps.html","searchKeys":["timestamps","val timestamps: Optional<DiscordActivityTimestamps>","dev.kord.core.cache.data.ActivityData.timestamps"]},{"name":"val title: Optional<String>","description":"dev.kord.core.cache.data.EmbedData.title","location":"core/dev.kord.core.cache.data/-embed-data/title.html","searchKeys":["title","val title: Optional<String>","dev.kord.core.cache.data.EmbedData.title"]},{"name":"val title: String?","description":"dev.kord.core.entity.Embed.title","location":"core/dev.kord.core.entity/-embed/title.html","searchKeys":["title","val title: String?","dev.kord.core.entity.Embed.title"]},{"name":"val token: Optional<String>","description":"dev.kord.core.cache.data.WebhookData.token","location":"core/dev.kord.core.cache.data/-webhook-data/token.html","searchKeys":["token","val token: Optional<String>","dev.kord.core.cache.data.WebhookData.token"]},{"name":"val token: String","description":"dev.kord.core.ClientResources.token","location":"core/dev.kord.core/-client-resources/token.html","searchKeys":["token","val token: String","dev.kord.core.ClientResources.token"]},{"name":"val token: String","description":"dev.kord.core.builder.kord.KordBuilder.token","location":"core/dev.kord.core.builder.kord/-kord-builder/token.html","searchKeys":["token","val token: String","dev.kord.core.builder.kord.KordBuilder.token"]},{"name":"val token: String","description":"dev.kord.core.cache.data.InteractionData.token","location":"core/dev.kord.core.cache.data/-interaction-data/token.html","searchKeys":["token","val token: String","dev.kord.core.cache.data.InteractionData.token"]},{"name":"val token: String","description":"dev.kord.core.event.guild.VoiceServerUpdateEvent.token","location":"core/dev.kord.core.event.guild/-voice-server-update-event/token.html","searchKeys":["token","val token: String","dev.kord.core.event.guild.VoiceServerUpdateEvent.token"]},{"name":"val token: String?","description":"dev.kord.core.entity.Webhook.token","location":"core/dev.kord.core.entity/-webhook/token.html","searchKeys":["token","val token: String?","dev.kord.core.entity.Webhook.token"]},{"name":"val topic: Optional<String?>","description":"dev.kord.core.cache.data.ChannelData.topic","location":"core/dev.kord.core.cache.data/-channel-data/topic.html","searchKeys":["topic","val topic: Optional<String?>","dev.kord.core.cache.data.ChannelData.topic"]},{"name":"val topic: String","description":"dev.kord.core.cache.data.StageInstanceData.topic","location":"core/dev.kord.core.cache.data/-stage-instance-data/topic.html","searchKeys":["topic","val topic: String","dev.kord.core.cache.data.StageInstanceData.topic"]},{"name":"val topic: String","description":"dev.kord.core.entity.StageInstance.topic","location":"core/dev.kord.core.entity/-stage-instance/topic.html","searchKeys":["topic","val topic: String","dev.kord.core.entity.StageInstance.topic"]},{"name":"val triggerMetadata: AutoModerationRuleTriggerMetadataData","description":"dev.kord.core.cache.data.AutoModerationRuleData.triggerMetadata","location":"core/dev.kord.core.cache.data/-auto-moderation-rule-data/trigger-metadata.html","searchKeys":["triggerMetadata","val triggerMetadata: AutoModerationRuleTriggerMetadataData","dev.kord.core.cache.data.AutoModerationRuleData.triggerMetadata"]},{"name":"val triggerType: AutoModerationRuleTriggerType","description":"dev.kord.core.cache.data.AutoModerationRuleData.triggerType","location":"core/dev.kord.core.cache.data/-auto-moderation-rule-data/trigger-type.html","searchKeys":["triggerType","val triggerType: AutoModerationRuleTriggerType","dev.kord.core.cache.data.AutoModerationRuleData.triggerType"]},{"name":"val tts: Boolean","description":"dev.kord.core.cache.data.MessageData.tts","location":"core/dev.kord.core.cache.data/-message-data/tts.html","searchKeys":["tts","val tts: Boolean","dev.kord.core.cache.data.MessageData.tts"]},{"name":"val tts: Boolean","description":"dev.kord.core.entity.Message.tts","location":"core/dev.kord.core.entity/-message/tts.html","searchKeys":["tts","val tts: Boolean","dev.kord.core.entity.Message.tts"]},{"name":"val type: ActivityType","description":"dev.kord.core.cache.data.ActivityData.type","location":"core/dev.kord.core.cache.data/-activity-data/type.html","searchKeys":["type","val type: ActivityType","dev.kord.core.cache.data.ActivityData.type"]},{"name":"val type: ActivityType","description":"dev.kord.core.entity.Activity.type","location":"core/dev.kord.core.entity/-activity/type.html","searchKeys":["type","val type: ActivityType","dev.kord.core.entity.Activity.type"]},{"name":"val type: ApplicationCommandOptionType","description":"dev.kord.core.cache.data.ApplicationCommandOptionData.type","location":"core/dev.kord.core.cache.data/-application-command-option-data/type.html","searchKeys":["type","val type: ApplicationCommandOptionType","dev.kord.core.cache.data.ApplicationCommandOptionData.type"]},{"name":"val type: ApplicationCommandPermissionType","description":"dev.kord.core.cache.data.GuildApplicationCommandPermissionData.type","location":"core/dev.kord.core.cache.data/-guild-application-command-permission-data/type.html","searchKeys":["type","val type: ApplicationCommandPermissionType","dev.kord.core.cache.data.GuildApplicationCommandPermissionData.type"]},{"name":"val type: ApplicationCommandPermissionType","description":"dev.kord.core.entity.application.GuildApplicationCommandPermission.type","location":"core/dev.kord.core.entity.application/-guild-application-command-permission/type.html","searchKeys":["type","val type: ApplicationCommandPermissionType","dev.kord.core.entity.application.GuildApplicationCommandPermission.type"]},{"name":"val type: AutoModerationActionType","description":"dev.kord.core.cache.data.AutoModerationActionData.type","location":"core/dev.kord.core.cache.data/-auto-moderation-action-data/type.html","searchKeys":["type","val type: AutoModerationActionType","dev.kord.core.cache.data.AutoModerationActionData.type"]},{"name":"val type: ChannelType","description":"dev.kord.core.cache.data.ChannelData.type","location":"core/dev.kord.core.cache.data/-channel-data/type.html","searchKeys":["type","val type: ChannelType","dev.kord.core.cache.data.ChannelData.type"]},{"name":"val type: ChannelType","description":"dev.kord.core.entity.channel.thread.DeletedThreadChannel.type","location":"core/dev.kord.core.entity.channel.thread/-deleted-thread-channel/type.html","searchKeys":["type","val type: ChannelType","dev.kord.core.entity.channel.thread.DeletedThreadChannel.type"]},{"name":"val type: EmbedType?","description":"dev.kord.core.entity.Embed.type","location":"core/dev.kord.core.entity/-embed/type.html","searchKeys":["type","val type: EmbedType?","dev.kord.core.entity.Embed.type"]},{"name":"val type: InteractionType","description":"dev.kord.core.cache.data.InteractionData.type","location":"core/dev.kord.core.cache.data/-interaction-data/type.html","searchKeys":["type","val type: InteractionType","dev.kord.core.cache.data.InteractionData.type"]},{"name":"val type: InteractionType","description":"dev.kord.core.cache.data.MessageInteractionData.type","location":"core/dev.kord.core.cache.data/-message-interaction-data/type.html","searchKeys":["type","val type: InteractionType","dev.kord.core.cache.data.MessageInteractionData.type"]},{"name":"val type: InteractionType","description":"dev.kord.core.entity.Message.Interaction.type","location":"core/dev.kord.core.entity/-message/-interaction/type.html","searchKeys":["type","val type: InteractionType","dev.kord.core.entity.Message.Interaction.type"]},{"name":"val type: MessageType","description":"dev.kord.core.cache.data.MessageData.type","location":"core/dev.kord.core.cache.data/-message-data/type.html","searchKeys":["type","val type: MessageType","dev.kord.core.cache.data.MessageData.type"]},{"name":"val type: MessageType","description":"dev.kord.core.entity.Message.type","location":"core/dev.kord.core.entity/-message/type.html","searchKeys":["type","val type: MessageType","dev.kord.core.entity.Message.type"]},{"name":"val type: Optional<ApplicationCommandType>","description":"dev.kord.core.cache.data.ApplicationCommandData.type","location":"core/dev.kord.core.cache.data/-application-command-data/type.html","searchKeys":["type","val type: Optional<ApplicationCommandType>","dev.kord.core.cache.data.ApplicationCommandData.type"]},{"name":"val type: Optional<ApplicationCommandType>","description":"dev.kord.core.cache.data.ApplicationInteractionData.type","location":"core/dev.kord.core.cache.data/-application-interaction-data/type.html","searchKeys":["type","val type: Optional<ApplicationCommandType>","dev.kord.core.cache.data.ApplicationInteractionData.type"]},{"name":"val type: Optional<EmbedType>","description":"dev.kord.core.cache.data.EmbedData.type","location":"core/dev.kord.core.cache.data/-embed-data/type.html","searchKeys":["type","val type: Optional<EmbedType>","dev.kord.core.cache.data.EmbedData.type"]},{"name":"val type: OverwriteType","description":"dev.kord.core.cache.data.PermissionOverwriteData.type","location":"core/dev.kord.core.cache.data/-permission-overwrite-data/type.html","searchKeys":["type","val type: OverwriteType","dev.kord.core.cache.data.PermissionOverwriteData.type"]},{"name":"val type: OverwriteType","description":"dev.kord.core.entity.PermissionOverwrite.type","location":"core/dev.kord.core.entity/-permission-overwrite/type.html","searchKeys":["type","val type: OverwriteType","dev.kord.core.entity.PermissionOverwrite.type"]},{"name":"val type: String","description":"dev.kord.core.cache.data.IntegrationData.type","location":"core/dev.kord.core.cache.data/-integration-data/type.html","searchKeys":["type","val type: String","dev.kord.core.cache.data.IntegrationData.type"]},{"name":"val type: String","description":"dev.kord.core.entity.Integration.type","location":"core/dev.kord.core.entity/-integration/type.html","searchKeys":["type","val type: String","dev.kord.core.entity.Integration.type"]},{"name":"val type: WebhookType","description":"dev.kord.core.cache.data.WebhookData.type","location":"core/dev.kord.core.cache.data/-webhook-data/type.html","searchKeys":["type","val type: WebhookType","dev.kord.core.cache.data.WebhookData.type"]},{"name":"val type: WebhookType","description":"dev.kord.core.entity.Webhook.type","location":"core/dev.kord.core.entity/-webhook/type.html","searchKeys":["type","val type: WebhookType","dev.kord.core.entity.Webhook.type"]},{"name":"val unavailable: Boolean","description":"dev.kord.core.event.guild.GuildDeleteEvent.unavailable","location":"core/dev.kord.core.event.guild/-guild-delete-event/unavailable.html","searchKeys":["unavailable","val unavailable: Boolean","dev.kord.core.event.guild.GuildDeleteEvent.unavailable"]},{"name":"val unicodeEmoji: Optional<String?>","description":"dev.kord.core.cache.data.RoleData.unicodeEmoji","location":"core/dev.kord.core.cache.data/-role-data/unicode-emoji.html","searchKeys":["unicodeEmoji","val unicodeEmoji: Optional<String?>","dev.kord.core.cache.data.RoleData.unicodeEmoji"]},{"name":"val unicodeEmoji: String?","description":"dev.kord.core.entity.Role.unicodeEmoji","location":"core/dev.kord.core.entity/-role/unicode-emoji.html","searchKeys":["unicodeEmoji","val unicodeEmoji: String?","dev.kord.core.entity.Role.unicodeEmoji"]},{"name":"val unsafe: Unsafe","description":"dev.kord.core.Kord.unsafe","location":"core/dev.kord.core/-kord/unsafe.html","searchKeys":["unsafe","val unsafe: Unsafe","dev.kord.core.Kord.unsafe"]},{"name":"val updatedAt: Instant","description":"dev.kord.core.cache.data.TemplateData.updatedAt","location":"core/dev.kord.core.cache.data/-template-data/updated-at.html","searchKeys":["updatedAt","val updatedAt: Instant","dev.kord.core.cache.data.TemplateData.updatedAt"]},{"name":"val updatedAt: Instant","description":"dev.kord.core.entity.Template.updatedAt","location":"core/dev.kord.core.entity/-template/updated-at.html","searchKeys":["updatedAt","val updatedAt: Instant","dev.kord.core.entity.Template.updatedAt"]},{"name":"val url: Optional<String>","description":"dev.kord.core.cache.data.EmbedAuthorData.url","location":"core/dev.kord.core.cache.data/-embed-author-data/url.html","searchKeys":["url","val url: Optional<String>","dev.kord.core.cache.data.EmbedAuthorData.url"]},{"name":"val url: Optional<String>","description":"dev.kord.core.cache.data.EmbedData.url","location":"core/dev.kord.core.cache.data/-embed-data/url.html","searchKeys":["url","val url: Optional<String>","dev.kord.core.cache.data.EmbedData.url"]},{"name":"val url: Optional<String>","description":"dev.kord.core.cache.data.EmbedImageData.url","location":"core/dev.kord.core.cache.data/-embed-image-data/url.html","searchKeys":["url","val url: Optional<String>","dev.kord.core.cache.data.EmbedImageData.url"]},{"name":"val url: Optional<String>","description":"dev.kord.core.cache.data.EmbedThumbnailData.url","location":"core/dev.kord.core.cache.data/-embed-thumbnail-data/url.html","searchKeys":["url","val url: Optional<String>","dev.kord.core.cache.data.EmbedThumbnailData.url"]},{"name":"val url: Optional<String>","description":"dev.kord.core.cache.data.EmbedVideoData.url","location":"core/dev.kord.core.cache.data/-embed-video-data/url.html","searchKeys":["url","val url: Optional<String>","dev.kord.core.cache.data.EmbedVideoData.url"]},{"name":"val url: Optional<String?>","description":"dev.kord.core.cache.data.ActivityData.url","location":"core/dev.kord.core.cache.data/-activity-data/url.html","searchKeys":["url","val url: Optional<String?>","dev.kord.core.cache.data.ActivityData.url"]},{"name":"val url: Optional<String?>","description":"dev.kord.core.cache.data.EmbedProviderData.url","location":"core/dev.kord.core.cache.data/-embed-provider-data/url.html","searchKeys":["url","val url: Optional<String?>","dev.kord.core.cache.data.EmbedProviderData.url"]},{"name":"val url: String","description":"dev.kord.core.cache.data.AttachmentData.url","location":"core/dev.kord.core.cache.data/-attachment-data/url.html","searchKeys":["url","val url: String","dev.kord.core.cache.data.AttachmentData.url"]},{"name":"val url: String","description":"dev.kord.core.entity.Attachment.url","location":"core/dev.kord.core.entity/-attachment/url.html","searchKeys":["url","val url: String","dev.kord.core.entity.Attachment.url"]},{"name":"val url: String","description":"dev.kord.core.entity.Icon.url","location":"core/dev.kord.core.entity/-icon/url.html","searchKeys":["url","val url: String","dev.kord.core.entity.Icon.url"]},{"name":"val url: String","description":"dev.kord.core.entity.User.Avatar.url","location":"core/dev.kord.core.entity/-user/-avatar/url.html","searchKeys":["url","val url: String","dev.kord.core.entity.User.Avatar.url"]},{"name":"val url: String?","description":"dev.kord.core.entity.Activity.url","location":"core/dev.kord.core.entity/-activity/url.html","searchKeys":["url","val url: String?","dev.kord.core.entity.Activity.url"]},{"name":"val url: String?","description":"dev.kord.core.entity.Embed.Author.url","location":"core/dev.kord.core.entity/-embed/-author/url.html","searchKeys":["url","val url: String?","dev.kord.core.entity.Embed.Author.url"]},{"name":"val url: String?","description":"dev.kord.core.entity.Embed.Image.url","location":"core/dev.kord.core.entity/-embed/-image/url.html","searchKeys":["url","val url: String?","dev.kord.core.entity.Embed.Image.url"]},{"name":"val url: String?","description":"dev.kord.core.entity.Embed.Provider.url","location":"core/dev.kord.core.entity/-embed/-provider/url.html","searchKeys":["url","val url: String?","dev.kord.core.entity.Embed.Provider.url"]},{"name":"val url: String?","description":"dev.kord.core.entity.Embed.Thumbnail.url","location":"core/dev.kord.core.entity/-embed/-thumbnail/url.html","searchKeys":["url","val url: String?","dev.kord.core.entity.Embed.Thumbnail.url"]},{"name":"val url: String?","description":"dev.kord.core.entity.Embed.Video.url","location":"core/dev.kord.core.entity/-embed/-video/url.html","searchKeys":["url","val url: String?","dev.kord.core.entity.Embed.Video.url"]},{"name":"val url: String?","description":"dev.kord.core.entity.Embed.url","location":"core/dev.kord.core.entity/-embed/url.html","searchKeys":["url","val url: String?","dev.kord.core.entity.Embed.url"]},{"name":"val url: String?","description":"dev.kord.core.entity.component.ButtonComponent.url","location":"core/dev.kord.core.entity.component/-button-component/url.html","searchKeys":["url","val url: String?","dev.kord.core.entity.component.ButtonComponent.url"]},{"name":"val usageCount: Int","description":"dev.kord.core.cache.data.TemplateData.usageCount","location":"core/dev.kord.core.cache.data/-template-data/usage-count.html","searchKeys":["usageCount","val usageCount: Int","dev.kord.core.cache.data.TemplateData.usageCount"]},{"name":"val usageCount: Int","description":"dev.kord.core.entity.Template.usageCount","location":"core/dev.kord.core.entity/-template/usage-count.html","searchKeys":["usageCount","val usageCount: Int","dev.kord.core.entity.Template.usageCount"]},{"name":"val user: DiscordPresenceUser","description":"dev.kord.core.event.user.PresenceUpdateEvent.user","location":"core/dev.kord.core.event.user/-presence-update-event/user.html","searchKeys":["user","val user: DiscordPresenceUser","dev.kord.core.event.user.PresenceUpdateEvent.user"]},{"name":"val user: DiscordUser","description":"dev.kord.core.cache.data.IntegrationData.user","location":"core/dev.kord.core.cache.data/-integration-data/user.html","searchKeys":["user","val user: DiscordUser","dev.kord.core.cache.data.IntegrationData.user"]},{"name":"val user: Optional<UserData>","description":"dev.kord.core.cache.data.InteractionData.user","location":"core/dev.kord.core.cache.data/-interaction-data/user.html","searchKeys":["user","val user: Optional<UserData>","dev.kord.core.cache.data.InteractionData.user"]},{"name":"val user: Optional<UserData>","description":"dev.kord.core.cache.data.StickerData.user","location":"core/dev.kord.core.cache.data/-sticker-data/user.html","searchKeys":["user","val user: Optional<UserData>","dev.kord.core.cache.data.StickerData.user"]},{"name":"val user: Snowflake","description":"dev.kord.core.cache.data.MessageInteractionData.user","location":"core/dev.kord.core.cache.data/-message-interaction-data/user.html","searchKeys":["user","val user: Snowflake","dev.kord.core.cache.data.MessageInteractionData.user"]},{"name":"val user: User","description":"dev.kord.core.event.guild.BanAddEvent.user","location":"core/dev.kord.core.event.guild/-ban-add-event/user.html","searchKeys":["user","val user: User","dev.kord.core.event.guild.BanAddEvent.user"]},{"name":"val user: User","description":"dev.kord.core.event.guild.BanRemoveEvent.user","location":"core/dev.kord.core.event.guild/-ban-remove-event/user.html","searchKeys":["user","val user: User","dev.kord.core.event.guild.BanRemoveEvent.user"]},{"name":"val user: User","description":"dev.kord.core.event.guild.MemberLeaveEvent.user","location":"core/dev.kord.core.event.guild/-member-leave-event/user.html","searchKeys":["user","val user: User","dev.kord.core.event.guild.MemberLeaveEvent.user"]},{"name":"val user: User","description":"dev.kord.core.event.user.UserUpdateEvent.user","location":"core/dev.kord.core.event.user/-user-update-event/user.html","searchKeys":["user","val user: User","dev.kord.core.event.user.UserUpdateEvent.user"]},{"name":"val user: User?","description":"dev.kord.core.entity.Sticker.user","location":"core/dev.kord.core.entity/-sticker/user.html","searchKeys":["user","val user: User?","dev.kord.core.entity.Sticker.user"]},{"name":"val user: UserBehavior","description":"dev.kord.core.entity.Ban.user","location":"core/dev.kord.core.entity/-ban/user.html","searchKeys":["user","val user: UserBehavior","dev.kord.core.entity.Ban.user"]},{"name":"val user: UserBehavior","description":"dev.kord.core.entity.Integration.user","location":"core/dev.kord.core.entity/-integration/user.html","searchKeys":["user","val user: UserBehavior","dev.kord.core.entity.Integration.user"]},{"name":"val user: UserBehavior","description":"dev.kord.core.entity.Message.Interaction.user","location":"core/dev.kord.core.entity/-message/-interaction/user.html","searchKeys":["user","val user: UserBehavior","dev.kord.core.entity.Message.Interaction.user"]},{"name":"val user: UserBehavior","description":"dev.kord.core.event.channel.TypingStartEvent.user","location":"core/dev.kord.core.event.channel/-typing-start-event/user.html","searchKeys":["user","val user: UserBehavior","dev.kord.core.event.channel.TypingStartEvent.user"]},{"name":"val user: UserBehavior","description":"dev.kord.core.event.message.ReactionAddEvent.user","location":"core/dev.kord.core.event.message/-reaction-add-event/user.html","searchKeys":["user","val user: UserBehavior","dev.kord.core.event.message.ReactionAddEvent.user"]},{"name":"val user: UserBehavior","description":"dev.kord.core.event.message.ReactionRemoveEvent.user","location":"core/dev.kord.core.event.message/-reaction-remove-event/user.html","searchKeys":["user","val user: UserBehavior","dev.kord.core.event.message.ReactionRemoveEvent.user"]},{"name":"val user: UserBehavior?","description":"dev.kord.core.entity.GuildEmoji.user","location":"core/dev.kord.core.entity/-guild-emoji/user.html","searchKeys":["user","val user: UserBehavior?","dev.kord.core.entity.GuildEmoji.user"]},{"name":"val userAsMember: MemberBehavior?","description":"dev.kord.core.event.message.ReactionAddEvent.userAsMember","location":"core/dev.kord.core.event.message/-reaction-add-event/user-as-member.html","searchKeys":["userAsMember","val userAsMember: MemberBehavior?","dev.kord.core.event.message.ReactionAddEvent.userAsMember"]},{"name":"val userAsMember: MemberBehavior?","description":"dev.kord.core.event.message.ReactionRemoveEvent.userAsMember","location":"core/dev.kord.core.event.message/-reaction-remove-event/user-as-member.html","searchKeys":["userAsMember","val userAsMember: MemberBehavior?","dev.kord.core.event.message.ReactionRemoveEvent.userAsMember"]},{"name":"val userCount: Int?","description":"dev.kord.core.entity.GuildScheduledEvent.userCount","location":"core/dev.kord.core.entity/-guild-scheduled-event/user-count.html","searchKeys":["userCount","val userCount: Int?","dev.kord.core.entity.GuildScheduledEvent.userCount"]},{"name":"val userCount: OptionalInt","description":"dev.kord.core.cache.data.GuildScheduledEventData.userCount","location":"core/dev.kord.core.cache.data/-guild-scheduled-event-data/user-count.html","searchKeys":["userCount","val userCount: OptionalInt","dev.kord.core.cache.data.GuildScheduledEventData.userCount"]},{"name":"val userId: OptionalSnowflake","description":"dev.kord.core.cache.data.EmojiData.userId","location":"core/dev.kord.core.cache.data/-emoji-data/user-id.html","searchKeys":["userId","val userId: OptionalSnowflake","dev.kord.core.cache.data.EmojiData.userId"]},{"name":"val userId: OptionalSnowflake","description":"dev.kord.core.cache.data.ThreadMemberData.userId","location":"core/dev.kord.core.cache.data/-thread-member-data/user-id.html","searchKeys":["userId","val userId: OptionalSnowflake","dev.kord.core.cache.data.ThreadMemberData.userId"]},{"name":"val userId: OptionalSnowflake","description":"dev.kord.core.cache.data.WebhookData.userId","location":"core/dev.kord.core.cache.data/-webhook-data/user-id.html","searchKeys":["userId","val userId: OptionalSnowflake","dev.kord.core.cache.data.WebhookData.userId"]},{"name":"val userId: Snowflake","description":"dev.kord.core.cache.data.BanData.userId","location":"core/dev.kord.core.cache.data/-ban-data/user-id.html","searchKeys":["userId","val userId: Snowflake","dev.kord.core.cache.data.BanData.userId"]},{"name":"val userId: Snowflake","description":"dev.kord.core.cache.data.MemberData.userId","location":"core/dev.kord.core.cache.data/-member-data/user-id.html","searchKeys":["userId","val userId: Snowflake","dev.kord.core.cache.data.MemberData.userId"]},{"name":"val userId: Snowflake","description":"dev.kord.core.cache.data.PresenceData.userId","location":"core/dev.kord.core.cache.data/-presence-data/user-id.html","searchKeys":["userId","val userId: Snowflake","dev.kord.core.cache.data.PresenceData.userId"]},{"name":"val userId: Snowflake","description":"dev.kord.core.cache.data.TeamMemberData.userId","location":"core/dev.kord.core.cache.data/-team-member-data/user-id.html","searchKeys":["userId","val userId: Snowflake","dev.kord.core.cache.data.TeamMemberData.userId"]},{"name":"val userId: Snowflake","description":"dev.kord.core.cache.data.VoiceStateData.userId","location":"core/dev.kord.core.cache.data/-voice-state-data/user-id.html","searchKeys":["userId","val userId: Snowflake","dev.kord.core.cache.data.VoiceStateData.userId"]},{"name":"val userId: Snowflake","description":"dev.kord.core.entity.AuditLogEntry.userId","location":"core/dev.kord.core.entity/-audit-log-entry/user-id.html","searchKeys":["userId","val userId: Snowflake","dev.kord.core.entity.AuditLogEntry.userId"]},{"name":"val userId: Snowflake","description":"dev.kord.core.entity.Ban.userId","location":"core/dev.kord.core.entity/-ban/user-id.html","searchKeys":["userId","val userId: Snowflake","dev.kord.core.entity.Ban.userId"]},{"name":"val userId: Snowflake","description":"dev.kord.core.entity.Integration.userId","location":"core/dev.kord.core.entity/-integration/user-id.html","searchKeys":["userId","val userId: Snowflake","dev.kord.core.entity.Integration.userId"]},{"name":"val userId: Snowflake","description":"dev.kord.core.entity.Presence.userId","location":"core/dev.kord.core.entity/-presence/user-id.html","searchKeys":["userId","val userId: Snowflake","dev.kord.core.entity.Presence.userId"]},{"name":"val userId: Snowflake","description":"dev.kord.core.entity.TeamMember.userId","location":"core/dev.kord.core.entity/-team-member/user-id.html","searchKeys":["userId","val userId: Snowflake","dev.kord.core.entity.TeamMember.userId"]},{"name":"val userId: Snowflake","description":"dev.kord.core.entity.VoiceState.userId","location":"core/dev.kord.core.entity/-voice-state/user-id.html","searchKeys":["userId","val userId: Snowflake","dev.kord.core.entity.VoiceState.userId"]},{"name":"val userId: Snowflake","description":"dev.kord.core.event.automoderation.data.AutoModerationActionExecutionEventData.userId","location":"core/dev.kord.core.event.automoderation.data/-auto-moderation-action-execution-event-data/user-id.html","searchKeys":["userId","val userId: Snowflake","dev.kord.core.event.automoderation.data.AutoModerationActionExecutionEventData.userId"]},{"name":"val userId: Snowflake","description":"dev.kord.core.event.channel.TypingStartEvent.userId","location":"core/dev.kord.core.event.channel/-typing-start-event/user-id.html","searchKeys":["userId","val userId: Snowflake","dev.kord.core.event.channel.TypingStartEvent.userId"]},{"name":"val userId: Snowflake","description":"dev.kord.core.event.channel.data.TypingStartEventData.userId","location":"core/dev.kord.core.event.channel.data/-typing-start-event-data/user-id.html","searchKeys":["userId","val userId: Snowflake","dev.kord.core.event.channel.data.TypingStartEventData.userId"]},{"name":"val userId: Snowflake","description":"dev.kord.core.event.message.ReactionAddEvent.userId","location":"core/dev.kord.core.event.message/-reaction-add-event/user-id.html","searchKeys":["userId","val userId: Snowflake","dev.kord.core.event.message.ReactionAddEvent.userId"]},{"name":"val userId: Snowflake","description":"dev.kord.core.event.message.ReactionRemoveEvent.userId","location":"core/dev.kord.core.event.message/-reaction-remove-event/user-id.html","searchKeys":["userId","val userId: Snowflake","dev.kord.core.event.message.ReactionRemoveEvent.userId"]},{"name":"val userId: Snowflake?","description":"dev.kord.core.entity.GuildEmoji.userId","location":"core/dev.kord.core.entity/-guild-emoji/user-id.html","searchKeys":["userId","val userId: Snowflake?","dev.kord.core.entity.GuildEmoji.userId"]},{"name":"val userLimit: Int","description":"dev.kord.core.entity.channel.StageChannel.userLimit","location":"core/dev.kord.core.entity.channel/-stage-channel/user-limit.html","searchKeys":["userLimit","val userLimit: Int","dev.kord.core.entity.channel.StageChannel.userLimit"]},{"name":"val userLimit: Int","description":"dev.kord.core.entity.channel.VoiceChannel.userLimit","location":"core/dev.kord.core.entity.channel/-voice-channel/user-limit.html","searchKeys":["userLimit","val userLimit: Int","dev.kord.core.entity.channel.VoiceChannel.userLimit"]},{"name":"val userLimit: OptionalInt","description":"dev.kord.core.cache.data.ChannelData.userLimit","location":"core/dev.kord.core.cache.data/-channel-data/user-limit.html","searchKeys":["userLimit","val userLimit: OptionalInt","dev.kord.core.cache.data.ChannelData.userLimit"]},{"name":"val userRateLimit: Duration?","description":"dev.kord.core.entity.channel.TextChannel.userRateLimit","location":"core/dev.kord.core.entity.channel/-text-channel/user-rate-limit.html","searchKeys":["userRateLimit","val userRateLimit: Duration?","dev.kord.core.entity.channel.TextChannel.userRateLimit"]},{"name":"val username: String","description":"dev.kord.core.cache.data.UserData.username","location":"core/dev.kord.core.cache.data/-user-data/username.html","searchKeys":["username","val username: String","dev.kord.core.cache.data.UserData.username"]},{"name":"val username: String","description":"dev.kord.core.entity.User.username","location":"core/dev.kord.core.entity/-user/username.html","searchKeys":["username","val username: String","dev.kord.core.entity.User.username"]},{"name":"val users: Flow<User>","description":"dev.kord.core.supplier.CacheEntitySupplier.users","location":"core/dev.kord.core.supplier/-cache-entity-supplier/users.html","searchKeys":["users","val users: Flow<User>","dev.kord.core.supplier.CacheEntitySupplier.users"]},{"name":"val users: List<User>","description":"dev.kord.core.entity.AuditLog.users","location":"core/dev.kord.core.entity/-audit-log/users.html","searchKeys":["users","val users: List<User>","dev.kord.core.entity.AuditLog.users"]},{"name":"val users: Map<Snowflake, User>?","description":"dev.kord.core.entity.interaction.ResolvedObjects.users","location":"core/dev.kord.core.entity.interaction/-resolved-objects/users.html","searchKeys":["users","val users: Map<Snowflake, User>?","dev.kord.core.entity.interaction.ResolvedObjects.users"]},{"name":"val users: Optional<Map<Snowflake, UserData>>","description":"dev.kord.core.cache.data.ResolvedObjectsData.users","location":"core/dev.kord.core.cache.data/-resolved-objects-data/users.html","searchKeys":["users","val users: Optional<Map<Snowflake, UserData>>","dev.kord.core.cache.data.ResolvedObjectsData.users"]},{"name":"val users: Set<UserData>","description":"dev.kord.core.cache.data.MembersChunkData.users","location":"core/dev.kord.core.cache.data/-members-chunk-data/users.html","searchKeys":["users","val users: Set<UserData>","dev.kord.core.cache.data.MembersChunkData.users"]},{"name":"val uses: Int","description":"dev.kord.core.cache.data.InviteCreateData.uses","location":"core/dev.kord.core.cache.data/-invite-create-data/uses.html","searchKeys":["uses","val uses: Int","dev.kord.core.cache.data.InviteCreateData.uses"]},{"name":"val uses: Int","description":"dev.kord.core.cache.data.InviteWithMetadataData.uses","location":"core/dev.kord.core.cache.data/-invite-with-metadata-data/uses.html","searchKeys":["uses","val uses: Int","dev.kord.core.cache.data.InviteWithMetadataData.uses"]},{"name":"val uses: Int","description":"dev.kord.core.entity.InviteWithMetadata.uses","location":"core/dev.kord.core.entity/-invite-with-metadata/uses.html","searchKeys":["uses","val uses: Int","dev.kord.core.entity.InviteWithMetadata.uses"]},{"name":"val uses: Int","description":"dev.kord.core.event.guild.InviteCreateEvent.uses","location":"core/dev.kord.core.event.guild/-invite-create-event/uses.html","searchKeys":["uses","val uses: Int","dev.kord.core.event.guild.InviteCreateEvent.uses"]},{"name":"val value: Optional<CommandArgument<Any?>>","description":"dev.kord.core.cache.data.OptionData.value","location":"core/dev.kord.core.cache.data/-option-data/value.html","searchKeys":["value","val value: Optional<CommandArgument<Any?>>","dev.kord.core.cache.data.OptionData.value"]},{"name":"val value: String","description":"dev.kord.core.cache.data.ApplicationCommandOptionChoiceData.value","location":"core/dev.kord.core.cache.data/-application-command-option-choice-data/value.html","searchKeys":["value","val value: String","dev.kord.core.cache.data.ApplicationCommandOptionChoiceData.value"]},{"name":"val value: String","description":"dev.kord.core.cache.data.EmbedFieldData.value","location":"core/dev.kord.core.cache.data/-embed-field-data/value.html","searchKeys":["value","val value: String","dev.kord.core.cache.data.EmbedFieldData.value"]},{"name":"val value: String","description":"dev.kord.core.cache.data.SelectOptionData.value","location":"core/dev.kord.core.cache.data/-select-option-data/value.html","searchKeys":["value","val value: String","dev.kord.core.cache.data.SelectOptionData.value"]},{"name":"val value: String","description":"dev.kord.core.entity.Embed.Field.value","location":"core/dev.kord.core.entity/-embed/-field/value.html","searchKeys":["value","val value: String","dev.kord.core.entity.Embed.Field.value"]},{"name":"val value: String","description":"dev.kord.core.entity.component.SelectOption.value","location":"core/dev.kord.core.entity.component/-select-option/value.html","searchKeys":["value","val value: String","dev.kord.core.entity.component.SelectOption.value"]},{"name":"val value: String?","description":"dev.kord.core.entity.component.TextInputComponent.value","location":"core/dev.kord.core.entity.component/-text-input-component/value.html","searchKeys":["value","val value: String?","dev.kord.core.entity.component.TextInputComponent.value"]},{"name":"val values: Optional<List<CommandArgument<Any?>>>","description":"dev.kord.core.cache.data.OptionData.values","location":"core/dev.kord.core.cache.data/-option-data/values.html","searchKeys":["values","val values: Optional<List<CommandArgument<Any?>>>","dev.kord.core.cache.data.OptionData.values"]},{"name":"val values: Optional<List<String>>","description":"dev.kord.core.cache.data.ApplicationInteractionData.values","location":"core/dev.kord.core.cache.data/-application-interaction-data/values.html","searchKeys":["values","val values: Optional<List<String>>","dev.kord.core.cache.data.ApplicationInteractionData.values"]},{"name":"val vanityCode: String?","description":"dev.kord.core.entity.Guild.vanityCode","location":"core/dev.kord.core.entity/-guild/vanity-code.html","searchKeys":["vanityCode","val vanityCode: String?","dev.kord.core.entity.Guild.vanityCode"]},{"name":"val vanityCode: String?","description":"dev.kord.core.entity.PartialGuild.vanityCode","location":"core/dev.kord.core.entity/-partial-guild/vanity-code.html","searchKeys":["vanityCode","val vanityCode: String?","dev.kord.core.entity.PartialGuild.vanityCode"]},{"name":"val vanityUrl: String?","description":"dev.kord.core.entity.Guild.vanityUrl","location":"core/dev.kord.core.entity/-guild/vanity-url.html","searchKeys":["vanityUrl","val vanityUrl: String?","dev.kord.core.entity.Guild.vanityUrl"]},{"name":"val vanityUrl: String?","description":"dev.kord.core.entity.PartialGuild.vanityUrl","location":"core/dev.kord.core.entity/-partial-guild/vanity-url.html","searchKeys":["vanityUrl","val vanityUrl: String?","dev.kord.core.entity.PartialGuild.vanityUrl"]},{"name":"val vanityUrlCode: Optional<String?>","description":"dev.kord.core.cache.data.PartialGuildData.vanityUrlCode","location":"core/dev.kord.core.cache.data/-partial-guild-data/vanity-url-code.html","searchKeys":["vanityUrlCode","val vanityUrlCode: Optional<String?>","dev.kord.core.cache.data.PartialGuildData.vanityUrlCode"]},{"name":"val vanityUrlCode: String? = null","description":"dev.kord.core.cache.data.GuildData.vanityUrlCode","location":"core/dev.kord.core.cache.data/-guild-data/vanity-url-code.html","searchKeys":["vanityUrlCode","val vanityUrlCode: String? = null","dev.kord.core.cache.data.GuildData.vanityUrlCode"]},{"name":"val verificationLevel: Optional<VerificationLevel>","description":"dev.kord.core.cache.data.PartialGuildData.verificationLevel","location":"core/dev.kord.core.cache.data/-partial-guild-data/verification-level.html","searchKeys":["verificationLevel","val verificationLevel: Optional<VerificationLevel>","dev.kord.core.cache.data.PartialGuildData.verificationLevel"]},{"name":"val verificationLevel: VerificationLevel","description":"dev.kord.core.cache.data.GuildData.verificationLevel","location":"core/dev.kord.core.cache.data/-guild-data/verification-level.html","searchKeys":["verificationLevel","val verificationLevel: VerificationLevel","dev.kord.core.cache.data.GuildData.verificationLevel"]},{"name":"val verificationLevel: VerificationLevel","description":"dev.kord.core.entity.Guild.verificationLevel","location":"core/dev.kord.core.entity/-guild/verification-level.html","searchKeys":["verificationLevel","val verificationLevel: VerificationLevel","dev.kord.core.entity.Guild.verificationLevel"]},{"name":"val verificationLevel: VerificationLevel?","description":"dev.kord.core.entity.PartialGuild.verificationLevel","location":"core/dev.kord.core.entity/-partial-guild/verification-level.html","searchKeys":["verificationLevel","val verificationLevel: VerificationLevel?","dev.kord.core.entity.PartialGuild.verificationLevel"]},{"name":"val verifyKey: String","description":"dev.kord.core.entity.BaseApplication.verifyKey","location":"core/dev.kord.core.entity/-base-application/verify-key.html","searchKeys":["verifyKey","val verifyKey: String","dev.kord.core.entity.BaseApplication.verifyKey"]},{"name":"val version: Int","description":"dev.kord.core.cache.data.InteractionData.version","location":"core/dev.kord.core.cache.data/-interaction-data/version.html","searchKeys":["version","val version: Int","dev.kord.core.cache.data.InteractionData.version"]},{"name":"val version: Snowflake","description":"dev.kord.core.cache.data.ApplicationCommandData.version","location":"core/dev.kord.core.cache.data/-application-command-data/version.html","searchKeys":["version","val version: Snowflake","dev.kord.core.cache.data.ApplicationCommandData.version"]},{"name":"val video: Embed.Video?","description":"dev.kord.core.entity.Embed.video","location":"core/dev.kord.core.entity/-embed/video.html","searchKeys":["video","val video: Embed.Video?","dev.kord.core.entity.Embed.video"]},{"name":"val video: Optional<EmbedVideoData>","description":"dev.kord.core.cache.data.EmbedData.video","location":"core/dev.kord.core.cache.data/-embed-data/video.html","searchKeys":["video","val video: Optional<EmbedVideoData>","dev.kord.core.cache.data.EmbedData.video"]},{"name":"val videoQualityMode: Optional<VideoQualityMode>","description":"dev.kord.core.cache.data.ChannelData.videoQualityMode","location":"core/dev.kord.core.cache.data/-channel-data/video-quality-mode.html","searchKeys":["videoQualityMode","val videoQualityMode: Optional<VideoQualityMode>","dev.kord.core.cache.data.ChannelData.videoQualityMode"]},{"name":"val videoQualityMode: VideoQualityMode?","description":"dev.kord.core.entity.channel.VoiceChannel.videoQualityMode","location":"core/dev.kord.core.entity.channel/-voice-channel/video-quality-mode.html","searchKeys":["videoQualityMode","val videoQualityMode: VideoQualityMode?","dev.kord.core.entity.channel.VoiceChannel.videoQualityMode"]},{"name":"val web: ClientStatus.Client.Web?","description":"dev.kord.core.entity.ClientStatus.web","location":"core/dev.kord.core.entity/-client-status/web.html","searchKeys":["web","val web: ClientStatus.Client.Web?","dev.kord.core.entity.ClientStatus.web"]},{"name":"val web: Optional<PresenceStatus>","description":"dev.kord.core.cache.data.ClientStatusData.web","location":"core/dev.kord.core.cache.data/-client-status-data/web.html","searchKeys":["web","val web: Optional<PresenceStatus>","dev.kord.core.cache.data.ClientStatusData.web"]},{"name":"val webhookId: OptionalSnowflake","description":"dev.kord.core.cache.data.MessageData.webhookId","location":"core/dev.kord.core.cache.data/-message-data/webhook-id.html","searchKeys":["webhookId","val webhookId: OptionalSnowflake","dev.kord.core.cache.data.MessageData.webhookId"]},{"name":"val webhookId: Snowflake?","description":"dev.kord.core.entity.Message.webhookId","location":"core/dev.kord.core.entity/-message/webhook-id.html","searchKeys":["webhookId","val webhookId: Snowflake?","dev.kord.core.entity.Message.webhookId"]},{"name":"val webhooks: List<Webhook>","description":"dev.kord.core.entity.AuditLog.webhooks","location":"core/dev.kord.core.entity/-audit-log/webhooks.html","searchKeys":["webhooks","val webhooks: List<Webhook>","dev.kord.core.entity.AuditLog.webhooks"]},{"name":"val welcomeChannels: List<WelcomeScreenChannelData>","description":"dev.kord.core.cache.data.WelcomeScreenData.welcomeChannels","location":"core/dev.kord.core.cache.data/-welcome-screen-data/welcome-channels.html","searchKeys":["welcomeChannels","val welcomeChannels: List<WelcomeScreenChannelData>","dev.kord.core.cache.data.WelcomeScreenData.welcomeChannels"]},{"name":"val welcomeScreen: Optional<WelcomeScreenData>","description":"dev.kord.core.cache.data.GuildData.welcomeScreen","location":"core/dev.kord.core.cache.data/-guild-data/welcome-screen.html","searchKeys":["welcomeScreen","val welcomeScreen: Optional<WelcomeScreenData>","dev.kord.core.cache.data.GuildData.welcomeScreen"]},{"name":"val welcomeScreen: Optional<WelcomeScreenData>","description":"dev.kord.core.cache.data.PartialGuildData.welcomeScreen","location":"core/dev.kord.core.cache.data/-partial-guild-data/welcome-screen.html","searchKeys":["welcomeScreen","val welcomeScreen: Optional<WelcomeScreenData>","dev.kord.core.cache.data.PartialGuildData.welcomeScreen"]},{"name":"val welcomeScreen: WelcomeScreen?","description":"dev.kord.core.entity.Guild.welcomeScreen","location":"core/dev.kord.core.entity/-guild/welcome-screen.html","searchKeys":["welcomeScreen","val welcomeScreen: WelcomeScreen?","dev.kord.core.entity.Guild.welcomeScreen"]},{"name":"val welcomeScreen: WelcomeScreen?","description":"dev.kord.core.entity.PartialGuild.welcomeScreen","location":"core/dev.kord.core.entity/-partial-guild/welcome-screen.html","searchKeys":["welcomeScreen","val welcomeScreen: WelcomeScreen?","dev.kord.core.entity.PartialGuild.welcomeScreen"]},{"name":"val welcomeScreenChannels: List<WelcomeScreenChannel>","description":"dev.kord.core.entity.WelcomeScreen.welcomeScreenChannels","location":"core/dev.kord.core.entity/-welcome-screen/welcome-screen-channels.html","searchKeys":["welcomeScreenChannels","val welcomeScreenChannels: List<WelcomeScreenChannel>","dev.kord.core.entity.WelcomeScreen.welcomeScreenChannels"]},{"name":"val widgetChannel: TopGuildChannelBehavior?","description":"dev.kord.core.entity.Guild.widgetChannel","location":"core/dev.kord.core.entity/-guild/widget-channel.html","searchKeys":["widgetChannel","val widgetChannel: TopGuildChannelBehavior?","dev.kord.core.entity.Guild.widgetChannel"]},{"name":"val widgetChannelId: OptionalSnowflake?","description":"dev.kord.core.cache.data.GuildData.widgetChannelId","location":"core/dev.kord.core.cache.data/-guild-data/widget-channel-id.html","searchKeys":["widgetChannelId","val widgetChannelId: OptionalSnowflake?","dev.kord.core.cache.data.GuildData.widgetChannelId"]},{"name":"val widgetChannelId: Snowflake?","description":"dev.kord.core.entity.Guild.widgetChannelId","location":"core/dev.kord.core.entity/-guild/widget-channel-id.html","searchKeys":["widgetChannelId","val widgetChannelId: Snowflake?","dev.kord.core.entity.Guild.widgetChannelId"]},{"name":"val widgetEnabled: OptionalBoolean","description":"dev.kord.core.cache.data.GuildData.widgetEnabled","location":"core/dev.kord.core.cache.data/-guild-data/widget-enabled.html","searchKeys":["widgetEnabled","val widgetEnabled: OptionalBoolean","dev.kord.core.cache.data.GuildData.widgetEnabled"]},{"name":"val width: Int?","description":"dev.kord.core.entity.Attachment.width","location":"core/dev.kord.core.entity/-attachment/width.html","searchKeys":["width","val width: Int?","dev.kord.core.entity.Attachment.width"]},{"name":"val width: Int?","description":"dev.kord.core.entity.Embed.Image.width","location":"core/dev.kord.core.entity/-embed/-image/width.html","searchKeys":["width","val width: Int?","dev.kord.core.entity.Embed.Image.width"]},{"name":"val width: Int?","description":"dev.kord.core.entity.Embed.Thumbnail.width","location":"core/dev.kord.core.entity/-embed/-thumbnail/width.html","searchKeys":["width","val width: Int?","dev.kord.core.entity.Embed.Thumbnail.width"]},{"name":"val width: Int?","description":"dev.kord.core.entity.Embed.Video.width","location":"core/dev.kord.core.entity/-embed/-video/width.html","searchKeys":["width","val width: Int?","dev.kord.core.entity.Embed.Video.width"]},{"name":"val width: OptionalInt","description":"dev.kord.core.cache.data.EmbedImageData.width","location":"core/dev.kord.core.cache.data/-embed-image-data/width.html","searchKeys":["width","val width: OptionalInt","dev.kord.core.cache.data.EmbedImageData.width"]},{"name":"val width: OptionalInt","description":"dev.kord.core.cache.data.EmbedThumbnailData.width","location":"core/dev.kord.core.cache.data/-embed-thumbnail-data/width.html","searchKeys":["width","val width: OptionalInt","dev.kord.core.cache.data.EmbedThumbnailData.width"]},{"name":"val width: OptionalInt","description":"dev.kord.core.cache.data.EmbedVideoData.width","location":"core/dev.kord.core.cache.data/-embed-video-data/width.html","searchKeys":["width","val width: OptionalInt","dev.kord.core.cache.data.EmbedVideoData.width"]},{"name":"val width: OptionalInt?","description":"dev.kord.core.cache.data.AttachmentData.width","location":"core/dev.kord.core.cache.data/-attachment-data/width.html","searchKeys":["width","val width: OptionalInt?","dev.kord.core.cache.data.AttachmentData.width"]},{"name":"var applicationId: Snowflake? = null","description":"dev.kord.core.builder.kord.KordBuilder.applicationId","location":"core/dev.kord.core.builder.kord/-kord-builder/application-id.html","searchKeys":["applicationId","var applicationId: Snowflake? = null","dev.kord.core.builder.kord.KordBuilder.applicationId"]},{"name":"var defaultDispatcher: CoroutineDispatcher","description":"dev.kord.core.builder.kord.KordBuilder.defaultDispatcher","location":"core/dev.kord.core.builder.kord/-kord-builder/default-dispatcher.html","searchKeys":["defaultDispatcher","var defaultDispatcher: CoroutineDispatcher","dev.kord.core.builder.kord.KordBuilder.defaultDispatcher"]},{"name":"var defaultDispatcher: CoroutineDispatcher","description":"dev.kord.core.builder.kord.RestOnlyBuilder.defaultDispatcher","location":"core/dev.kord.core.builder.kord/-rest-only-builder/default-dispatcher.html","searchKeys":["defaultDispatcher","var defaultDispatcher: CoroutineDispatcher","dev.kord.core.builder.kord.RestOnlyBuilder.defaultDispatcher"]},{"name":"var defaultGenerator: Generator<Any, Any>","description":"dev.kord.core.cache.KordCacheBuilder.defaultGenerator","location":"core/dev.kord.core.cache/-kord-cache-builder/default-generator.html","searchKeys":["defaultGenerator","var defaultGenerator: Generator<Any, Any>","dev.kord.core.cache.KordCacheBuilder.defaultGenerator"]},{"name":"var defaultStrategy: EntitySupplyStrategy<*>","description":"dev.kord.core.builder.kord.KordBuilder.defaultStrategy","location":"core/dev.kord.core.builder.kord/-kord-builder/default-strategy.html","searchKeys":["defaultStrategy","var defaultStrategy: EntitySupplyStrategy<*>","dev.kord.core.builder.kord.KordBuilder.defaultStrategy"]},{"name":"var enableShutdownHook: Boolean = true","description":"dev.kord.core.builder.kord.KordBuilder.enableShutdownHook","location":"core/dev.kord.core.builder.kord/-kord-builder/enable-shutdown-hook.html","searchKeys":["enableShutdownHook","var enableShutdownHook: Boolean = true","dev.kord.core.builder.kord.KordBuilder.enableShutdownHook"]},{"name":"var eventFlow: MutableSharedFlow<Event>","description":"dev.kord.core.builder.kord.KordBuilder.eventFlow","location":"core/dev.kord.core.builder.kord/-kord-builder/event-flow.html","searchKeys":["eventFlow","var eventFlow: MutableSharedFlow<Event>","dev.kord.core.builder.kord.KordBuilder.eventFlow"]},{"name":"var gatewayEventInterceptor: GatewayEventInterceptor? = null","description":"dev.kord.core.builder.kord.KordBuilder.gatewayEventInterceptor","location":"core/dev.kord.core.builder.kord/-kord-builder/gateway-event-interceptor.html","searchKeys":["gatewayEventInterceptor","var gatewayEventInterceptor: GatewayEventInterceptor? = null","dev.kord.core.builder.kord.KordBuilder.gatewayEventInterceptor"]},{"name":"var guild: Guild","description":"dev.kord.core.live.LiveGuild.guild","location":"core/dev.kord.core.live/-live-guild/guild.html","searchKeys":["guild","var guild: Guild","dev.kord.core.live.LiveGuild.guild"]},{"name":"var httpClient: HttpClient? = null","description":"dev.kord.core.builder.kord.KordBuilder.httpClient","location":"core/dev.kord.core.builder.kord/-kord-builder/http-client.html","searchKeys":["httpClient","var httpClient: HttpClient? = null","dev.kord.core.builder.kord.KordBuilder.httpClient"]},{"name":"var httpClient: HttpClient? = null","description":"dev.kord.core.builder.kord.RestOnlyBuilder.httpClient","location":"core/dev.kord.core.builder.kord/-rest-only-builder/http-client.html","searchKeys":["httpClient","var httpClient: HttpClient? = null","dev.kord.core.builder.kord.RestOnlyBuilder.httpClient"]},{"name":"var member: Member","description":"dev.kord.core.live.LiveMember.member","location":"core/dev.kord.core.live/-live-member/member.html","searchKeys":["member","var member: Member","dev.kord.core.live.LiveMember.member"]},{"name":"var message: Message","description":"dev.kord.core.live.LiveMessage.message","location":"core/dev.kord.core.live/-live-message/message.html","searchKeys":["message","var message: Message","dev.kord.core.live.LiveMessage.message"]},{"name":"var role: Role","description":"dev.kord.core.live.LiveRole.role","location":"core/dev.kord.core.live/-live-role/role.html","searchKeys":["role","var role: Role","dev.kord.core.live.LiveRole.role"]},{"name":"var stackTraceRecovery: Boolean = false","description":"dev.kord.core.builder.kord.KordBuilder.stackTraceRecovery","location":"core/dev.kord.core.builder.kord/-kord-builder/stack-trace-recovery.html","searchKeys":["stackTraceRecovery","var stackTraceRecovery: Boolean = false","dev.kord.core.builder.kord.KordBuilder.stackTraceRecovery"]},{"name":"var user: User","description":"dev.kord.core.live.LiveUser.user","location":"core/dev.kord.core.live/-live-user/user.html","searchKeys":["user","var user: User","dev.kord.core.live.LiveUser.user"]},{"name":"APIResourceOverloaded","description":"dev.kord.rest.json.JsonErrorCode.APIResourceOverloaded","location":"rest/dev.kord.rest.json/-json-error-code/-a-p-i-resource-overloaded/index.html","searchKeys":["APIResourceOverloaded","APIResourceOverloaded","dev.kord.rest.json.JsonErrorCode.APIResourceOverloaded"]},{"name":"AlreadyCrossposted","description":"dev.kord.rest.json.JsonErrorCode.AlreadyCrossposted","location":"rest/dev.kord.rest.json/-json-error-code/-already-crossposted/index.html","searchKeys":["AlreadyCrossposted","AlreadyCrossposted","dev.kord.rest.json.JsonErrorCode.AlreadyCrossposted"]},{"name":"AnnouncementRateLimit","description":"dev.kord.rest.json.JsonErrorCode.AnnouncementRateLimit","location":"rest/dev.kord.rest.json/-json-error-code/-announcement-rate-limit/index.html","searchKeys":["AnnouncementRateLimit","AnnouncementRateLimit","dev.kord.rest.json.JsonErrorCode.AnnouncementRateLimit"]},{"name":"ApplicationCommandNameExists","description":"dev.kord.rest.json.JsonErrorCode.ApplicationCommandNameExists","location":"rest/dev.kord.rest.json/-json-error-code/-application-command-name-exists/index.html","searchKeys":["ApplicationCommandNameExists","ApplicationCommandNameExists","dev.kord.rest.json.JsonErrorCode.ApplicationCommandNameExists"]},{"name":"ApplicationNotAvailable","description":"dev.kord.rest.json.JsonErrorCode.ApplicationNotAvailable","location":"rest/dev.kord.rest.json/-json-error-code/-application-not-available/index.html","searchKeys":["ApplicationNotAvailable","ApplicationNotAvailable","dev.kord.rest.json.JsonErrorCode.ApplicationNotAvailable"]},{"name":"BeforeValueBeforeThreadCreate","description":"dev.kord.rest.json.JsonErrorCode.BeforeValueBeforeThreadCreate","location":"rest/dev.kord.rest.json/-json-error-code/-before-value-before-thread-create/index.html","searchKeys":["BeforeValueBeforeThreadCreate","BeforeValueBeforeThreadCreate","dev.kord.rest.json.JsonErrorCode.BeforeValueBeforeThreadCreate"]},{"name":"BitrateTooHigh","description":"dev.kord.rest.json.JsonErrorCode.BitrateTooHigh","location":"rest/dev.kord.rest.json/-json-error-code/-bitrate-too-high/index.html","searchKeys":["BitrateTooHigh","BitrateTooHigh","dev.kord.rest.json.JsonErrorCode.BitrateTooHigh"]},{"name":"BotsEndpoint","description":"dev.kord.rest.json.JsonErrorCode.BotsEndpoint","location":"rest/dev.kord.rest.json/-json-error-code/-bots-endpoint/index.html","searchKeys":["BotsEndpoint","BotsEndpoint","dev.kord.rest.json.JsonErrorCode.BotsEndpoint"]},{"name":"BulkDeleteOldMessage","description":"dev.kord.rest.json.JsonErrorCode.BulkDeleteOldMessage","location":"rest/dev.kord.rest.json/-json-error-code/-bulk-delete-old-message/index.html","searchKeys":["BulkDeleteOldMessage","BulkDeleteOldMessage","dev.kord.rest.json.JsonErrorCode.BulkDeleteOldMessage"]},{"name":"CannotDeleteRequiredCommunityChannel","description":"dev.kord.rest.json.JsonErrorCode.CannotDeleteRequiredCommunityChannel","location":"rest/dev.kord.rest.json/-json-error-code/-cannot-delete-required-community-channel/index.html","searchKeys":["CannotDeleteRequiredCommunityChannel","CannotDeleteRequiredCommunityChannel","dev.kord.rest.json.JsonErrorCode.CannotDeleteRequiredCommunityChannel"]},{"name":"CannotEditMessageByAnotherUser","description":"dev.kord.rest.json.JsonErrorCode.CannotEditMessageByAnotherUser","location":"rest/dev.kord.rest.json/-json-error-code/-cannot-edit-message-by-another-user/index.html","searchKeys":["CannotEditMessageByAnotherUser","CannotEditMessageByAnotherUser","dev.kord.rest.json.JsonErrorCode.CannotEditMessageByAnotherUser"]},{"name":"CannotEditStickersWithinMessage","description":"dev.kord.rest.json.JsonErrorCode.CannotEditStickersWithinMessage","location":"rest/dev.kord.rest.json/-json-error-code/-cannot-edit-stickers-within-message/index.html","searchKeys":["CannotEditStickersWithinMessage","CannotEditStickersWithinMessage","dev.kord.rest.json.JsonErrorCode.CannotEditStickersWithinMessage"]},{"name":"CannotExecuteOnDM","description":"dev.kord.rest.json.JsonErrorCode.CannotExecuteOnDM","location":"rest/dev.kord.rest.json/-json-error-code/-cannot-execute-on-d-m/index.html","searchKeys":["CannotExecuteOnDM","CannotExecuteOnDM","dev.kord.rest.json.JsonErrorCode.CannotExecuteOnDM"]},{"name":"CannotExecuteOnSystemMessage","description":"dev.kord.rest.json.JsonErrorCode.CannotExecuteOnSystemMessage","location":"rest/dev.kord.rest.json/-json-error-code/-cannot-execute-on-system-message/index.html","searchKeys":["CannotExecuteOnSystemMessage","CannotExecuteOnSystemMessage","dev.kord.rest.json.JsonErrorCode.CannotExecuteOnSystemMessage"]},{"name":"CannotPinMessageFromAnotherChannel","description":"dev.kord.rest.json.JsonErrorCode.CannotPinMessageFromAnotherChannel","location":"rest/dev.kord.rest.json/-json-error-code/-cannot-pin-message-from-another-channel/index.html","searchKeys":["CannotPinMessageFromAnotherChannel","CannotPinMessageFromAnotherChannel","dev.kord.rest.json.JsonErrorCode.CannotPinMessageFromAnotherChannel"]},{"name":"CannotReplyWithoutMessageHistoryPermission","description":"dev.kord.rest.json.JsonErrorCode.CannotReplyWithoutMessageHistoryPermission","location":"rest/dev.kord.rest.json/-json-error-code/-cannot-reply-without-message-history-permission/index.html","searchKeys":["CannotReplyWithoutMessageHistoryPermission","CannotReplyWithoutMessageHistoryPermission","dev.kord.rest.json.JsonErrorCode.CannotReplyWithoutMessageHistoryPermission"]},{"name":"CannotSelfRedeemGift","description":"dev.kord.rest.json.JsonErrorCode.CannotSelfRedeemGift","location":"rest/dev.kord.rest.json/-json-error-code/-cannot-self-redeem-gift/index.html","searchKeys":["CannotSelfRedeemGift","CannotSelfRedeemGift","dev.kord.rest.json.JsonErrorCode.CannotSelfRedeemGift"]},{"name":"CannotSendEmptyMessage","description":"dev.kord.rest.json.JsonErrorCode.CannotSendEmptyMessage","location":"rest/dev.kord.rest.json/-json-error-code/-cannot-send-empty-message/index.html","searchKeys":["CannotSendEmptyMessage","CannotSendEmptyMessage","dev.kord.rest.json.JsonErrorCode.CannotSendEmptyMessage"]},{"name":"CannotSendExplicitContent","description":"dev.kord.rest.json.JsonErrorCode.CannotSendExplicitContent","location":"rest/dev.kord.rest.json/-json-error-code/-cannot-send-explicit-content/index.html","searchKeys":["CannotSendExplicitContent","CannotSendExplicitContent","dev.kord.rest.json.JsonErrorCode.CannotSendExplicitContent"]},{"name":"CannotSendMessagesInNonTextChannel","description":"dev.kord.rest.json.JsonErrorCode.CannotSendMessagesInNonTextChannel","location":"rest/dev.kord.rest.json/-json-error-code/-cannot-send-messages-in-non-text-channel/index.html","searchKeys":["CannotSendMessagesInNonTextChannel","CannotSendMessagesInNonTextChannel","dev.kord.rest.json.JsonErrorCode.CannotSendMessagesInNonTextChannel"]},{"name":"CannotSendMessagesToUser","description":"dev.kord.rest.json.JsonErrorCode.CannotSendMessagesToUser","location":"rest/dev.kord.rest.json/-json-error-code/-cannot-send-messages-to-user/index.html","searchKeys":["CannotSendMessagesToUser","CannotSendMessagesToUser","dev.kord.rest.json.JsonErrorCode.CannotSendMessagesToUser"]},{"name":"CannotUpdateFinishedEvent","description":"dev.kord.rest.json.JsonErrorCode.CannotUpdateFinishedEvent","location":"rest/dev.kord.rest.json/-json-error-code/-cannot-update-finished-event/index.html","searchKeys":["CannotUpdateFinishedEvent","CannotUpdateFinishedEvent","dev.kord.rest.json.JsonErrorCode.CannotUpdateFinishedEvent"]},{"name":"ChannelVerificationTooHigh","description":"dev.kord.rest.json.JsonErrorCode.ChannelVerificationTooHigh","location":"rest/dev.kord.rest.json/-json-error-code/-channel-verification-too-high/index.html","searchKeys":["ChannelVerificationTooHigh","ChannelVerificationTooHigh","dev.kord.rest.json.JsonErrorCode.ChannelVerificationTooHigh"]},{"name":"ChannelWriteRateLimit","description":"dev.kord.rest.json.JsonErrorCode.ChannelWriteRateLimit","location":"rest/dev.kord.rest.json/-json-error-code/-channel-write-rate-limit/index.html","searchKeys":["ChannelWriteRateLimit","ChannelWriteRateLimit","dev.kord.rest.json.JsonErrorCode.ChannelWriteRateLimit"]},{"name":"CommunityServerChannelMustBeTextChannel","description":"dev.kord.rest.json.JsonErrorCode.CommunityServerChannelMustBeTextChannel","location":"rest/dev.kord.rest.json/-json-error-code/-community-server-channel-must-be-text-channel/index.html","searchKeys":["CommunityServerChannelMustBeTextChannel","CommunityServerChannelMustBeTextChannel","dev.kord.rest.json.JsonErrorCode.CommunityServerChannelMustBeTextChannel"]},{"name":"ConnectionRevoked","description":"dev.kord.rest.json.JsonErrorCode.ConnectionRevoked","location":"rest/dev.kord.rest.json/-json-error-code/-connection-revoked/index.html","searchKeys":["ConnectionRevoked","ConnectionRevoked","dev.kord.rest.json.JsonErrorCode.ConnectionRevoked"]},{"name":"DisallowedName","description":"dev.kord.rest.json.JsonErrorCode.DisallowedName","location":"rest/dev.kord.rest.json/-json-error-code/-disallowed-name/index.html","searchKeys":["DisallowedName","DisallowedName","dev.kord.rest.json.JsonErrorCode.DisallowedName"]},{"name":"FailedToCreateStage","description":"dev.kord.rest.json.JsonErrorCode.FailedToCreateStage","location":"rest/dev.kord.rest.json/-json-error-code/-failed-to-create-stage/index.html","searchKeys":["FailedToCreateStage","FailedToCreateStage","dev.kord.rest.json.JsonErrorCode.FailedToCreateStage"]},{"name":"FailedToResizeAssetBelowMaximumSize","description":"dev.kord.rest.json.JsonErrorCode.FailedToResizeAssetBelowMaximumSize","location":"rest/dev.kord.rest.json/-json-error-code/-failed-to-resize-asset-below-maximum-size/index.html","searchKeys":["FailedToResizeAssetBelowMaximumSize","FailedToResizeAssetBelowMaximumSize","dev.kord.rest.json.JsonErrorCode.FailedToResizeAssetBelowMaximumSize"]},{"name":"FileTooLarge","description":"dev.kord.rest.json.JsonErrorCode.FileTooLarge","location":"rest/dev.kord.rest.json/-json-error-code/-file-too-large/index.html","searchKeys":["FileTooLarge","FileTooLarge","dev.kord.rest.json.JsonErrorCode.FileTooLarge"]},{"name":"General","description":"dev.kord.rest.json.JsonErrorCode.General","location":"rest/dev.kord.rest.json/-json-error-code/-general/index.html","searchKeys":["General","General","dev.kord.rest.json.JsonErrorCode.General"]},{"name":"GiftRequiresPaymentSource","description":"dev.kord.rest.json.JsonErrorCode.GiftRequiresPaymentSource","location":"rest/dev.kord.rest.json/-json-error-code/-gift-requires-payment-source/index.html","searchKeys":["GiftRequiresPaymentSource","GiftRequiresPaymentSource","dev.kord.rest.json.JsonErrorCode.GiftRequiresPaymentSource"]},{"name":"GuildAlreadyHadTemplate","description":"dev.kord.rest.json.JsonErrorCode.GuildAlreadyHadTemplate","location":"rest/dev.kord.rest.json/-json-error-code/-guild-already-had-template/index.html","searchKeys":["GuildAlreadyHadTemplate","GuildAlreadyHadTemplate","dev.kord.rest.json.JsonErrorCode.GuildAlreadyHadTemplate"]},{"name":"GuildSubscriptionTooLow","description":"dev.kord.rest.json.JsonErrorCode.GuildSubscriptionTooLow","location":"rest/dev.kord.rest.json/-json-error-code/-guild-subscription-too-low/index.html","searchKeys":["GuildSubscriptionTooLow","GuildSubscriptionTooLow","dev.kord.rest.json.JsonErrorCode.GuildSubscriptionTooLow"]},{"name":"GuildWidgetDisabled","description":"dev.kord.rest.json.JsonErrorCode.GuildWidgetDisabled","location":"rest/dev.kord.rest.json/-json-error-code/-guild-widget-disabled/index.html","searchKeys":["GuildWidgetDisabled","GuildWidgetDisabled","dev.kord.rest.json.JsonErrorCode.GuildWidgetDisabled"]},{"name":"InteractionAlreadyAcknowledged","description":"dev.kord.rest.json.JsonErrorCode.InteractionAlreadyAcknowledged","location":"rest/dev.kord.rest.json/-json-error-code/-interaction-already-acknowledged/index.html","searchKeys":["InteractionAlreadyAcknowledged","InteractionAlreadyAcknowledged","dev.kord.rest.json.JsonErrorCode.InteractionAlreadyAcknowledged"]},{"name":"InteractionFailedToSend","description":"dev.kord.rest.json.JsonErrorCode.InteractionFailedToSend","location":"rest/dev.kord.rest.json/-json-error-code/-interaction-failed-to-send/index.html","searchKeys":["InteractionFailedToSend","InteractionFailedToSend","dev.kord.rest.json.JsonErrorCode.InteractionFailedToSend"]},{"name":"InvalidAPIVersion","description":"dev.kord.rest.json.JsonErrorCode.InvalidAPIVersion","location":"rest/dev.kord.rest.json/-json-error-code/-invalid-a-p-i-version/index.html","searchKeys":["InvalidAPIVersion","InvalidAPIVersion","dev.kord.rest.json.JsonErrorCode.InvalidAPIVersion"]},{"name":"InvalidAccountType","description":"dev.kord.rest.json.JsonErrorCode.InvalidAccountType","location":"rest/dev.kord.rest.json/-json-error-code/-invalid-account-type/index.html","searchKeys":["InvalidAccountType","InvalidAccountType","dev.kord.rest.json.JsonErrorCode.InvalidAccountType"]},{"name":"InvalidAuthToken","description":"dev.kord.rest.json.JsonErrorCode.InvalidAuthToken","location":"rest/dev.kord.rest.json/-json-error-code/-invalid-auth-token/index.html","searchKeys":["InvalidAuthToken","InvalidAuthToken","dev.kord.rest.json.JsonErrorCode.InvalidAuthToken"]},{"name":"InvalidFile","description":"dev.kord.rest.json.JsonErrorCode.InvalidFile","location":"rest/dev.kord.rest.json/-json-error-code/-invalid-file/index.html","searchKeys":["InvalidFile","InvalidFile","dev.kord.rest.json.JsonErrorCode.InvalidFile"]},{"name":"InvalidFormBody","description":"dev.kord.rest.json.JsonErrorCode.InvalidFormBody","location":"rest/dev.kord.rest.json/-json-error-code/-invalid-form-body/index.html","searchKeys":["InvalidFormBody","InvalidFormBody","dev.kord.rest.json.JsonErrorCode.InvalidFormBody"]},{"name":"InvalidGuild","description":"dev.kord.rest.json.JsonErrorCode.InvalidGuild","location":"rest/dev.kord.rest.json/-json-error-code/-invalid-guild/index.html","searchKeys":["InvalidGuild","InvalidGuild","dev.kord.rest.json.JsonErrorCode.InvalidGuild"]},{"name":"InvalidJsonForLottieFile","description":"dev.kord.rest.json.JsonErrorCode.InvalidJsonForLottieFile","location":"rest/dev.kord.rest.json/-json-error-code/-invalid-json-for-lottie-file/index.html","searchKeys":["InvalidJsonForLottieFile","InvalidJsonForLottieFile","dev.kord.rest.json.JsonErrorCode.InvalidJsonForLottieFile"]},{"name":"InvalidJsonInRequestBody","description":"dev.kord.rest.json.JsonErrorCode.InvalidJsonInRequestBody","location":"rest/dev.kord.rest.json/-json-error-code/-invalid-json-in-request-body/index.html","searchKeys":["InvalidJsonInRequestBody","InvalidJsonInRequestBody","dev.kord.rest.json.JsonErrorCode.InvalidJsonInRequestBody"]},{"name":"InvalidMFALevel","description":"dev.kord.rest.json.JsonErrorCode.InvalidMFALevel","location":"rest/dev.kord.rest.json/-json-error-code/-invalid-m-f-a-level/index.html","searchKeys":["InvalidMFALevel","InvalidMFALevel","dev.kord.rest.json.JsonErrorCode.InvalidMFALevel"]},{"name":"InvalidMessageType","description":"dev.kord.rest.json.JsonErrorCode.InvalidMessageType","location":"rest/dev.kord.rest.json/-json-error-code/-invalid-message-type/index.html","searchKeys":["InvalidMessageType","InvalidMessageType","dev.kord.rest.json.JsonErrorCode.InvalidMessageType"]},{"name":"InvalidOAuth2AccessToken","description":"dev.kord.rest.json.JsonErrorCode.InvalidOAuth2AccessToken","location":"rest/dev.kord.rest.json/-json-error-code/-invalid-o-auth2-access-token/index.html","searchKeys":["InvalidOAuth2AccessToken","InvalidOAuth2AccessToken","dev.kord.rest.json.JsonErrorCode.InvalidOAuth2AccessToken"]},{"name":"InvalidOAuth2State","description":"dev.kord.rest.json.JsonErrorCode.InvalidOAuth2State","location":"rest/dev.kord.rest.json/-json-error-code/-invalid-o-auth2-state/index.html","searchKeys":["InvalidOAuth2State","InvalidOAuth2State","dev.kord.rest.json.JsonErrorCode.InvalidOAuth2State"]},{"name":"InvalidRecipients","description":"dev.kord.rest.json.JsonErrorCode.InvalidRecipients","location":"rest/dev.kord.rest.json/-json-error-code/-invalid-recipients/index.html","searchKeys":["InvalidRecipients","InvalidRecipients","dev.kord.rest.json.JsonErrorCode.InvalidRecipients"]},{"name":"InvalidRole","description":"dev.kord.rest.json.JsonErrorCode.InvalidRole","location":"rest/dev.kord.rest.json/-json-error-code/-invalid-role/index.html","searchKeys":["InvalidRole","InvalidRole","dev.kord.rest.json.JsonErrorCode.InvalidRole"]},{"name":"InvalidStickerFrameRate","description":"dev.kord.rest.json.JsonErrorCode.InvalidStickerFrameRate","location":"rest/dev.kord.rest.json/-json-error-code/-invalid-sticker-frame-rate/index.html","searchKeys":["InvalidStickerFrameRate","InvalidStickerFrameRate","dev.kord.rest.json.JsonErrorCode.InvalidStickerFrameRate"]},{"name":"InvalidStickerSent","description":"dev.kord.rest.json.JsonErrorCode.InvalidStickerSent","location":"rest/dev.kord.rest.json/-json-error-code/-invalid-sticker-sent/index.html","searchKeys":["InvalidStickerSent","InvalidStickerSent","dev.kord.rest.json.JsonErrorCode.InvalidStickerSent"]},{"name":"InvalidThreadNotificationSettings","description":"dev.kord.rest.json.JsonErrorCode.InvalidThreadNotificationSettings","location":"rest/dev.kord.rest.json/-json-error-code/-invalid-thread-notification-settings/index.html","searchKeys":["InvalidThreadNotificationSettings","InvalidThreadNotificationSettings","dev.kord.rest.json.JsonErrorCode.InvalidThreadNotificationSettings"]},{"name":"InvalidWebhookToken","description":"dev.kord.rest.json.JsonErrorCode.InvalidWebhookToken","location":"rest/dev.kord.rest.json/-json-error-code/-invalid-webhook-token/index.html","searchKeys":["InvalidWebhookToken","InvalidWebhookToken","dev.kord.rest.json.JsonErrorCode.InvalidWebhookToken"]},{"name":"InviteCodeInvalidOrTaken","description":"dev.kord.rest.json.JsonErrorCode.InviteCodeInvalidOrTaken","location":"rest/dev.kord.rest.json/-json-error-code/-invite-code-invalid-or-taken/index.html","searchKeys":["InviteCodeInvalidOrTaken","InviteCodeInvalidOrTaken","dev.kord.rest.json.JsonErrorCode.InviteCodeInvalidOrTaken"]},{"name":"MaxActiveAnnouncementThreads","description":"dev.kord.rest.json.JsonErrorCode.MaxActiveAnnouncementThreads","location":"rest/dev.kord.rest.json/-json-error-code/-max-active-announcement-threads/index.html","searchKeys":["MaxActiveAnnouncementThreads","MaxActiveAnnouncementThreads","dev.kord.rest.json.JsonErrorCode.MaxActiveAnnouncementThreads"]},{"name":"MaxActiveThreads","description":"dev.kord.rest.json.JsonErrorCode.MaxActiveThreads","location":"rest/dev.kord.rest.json/-json-error-code/-max-active-threads/index.html","searchKeys":["MaxActiveThreads","MaxActiveThreads","dev.kord.rest.json.JsonErrorCode.MaxActiveThreads"]},{"name":"MaxAnimatedEmojis","description":"dev.kord.rest.json.JsonErrorCode.MaxAnimatedEmojis","location":"rest/dev.kord.rest.json/-json-error-code/-max-animated-emojis/index.html","searchKeys":["MaxAnimatedEmojis","MaxAnimatedEmojis","dev.kord.rest.json.JsonErrorCode.MaxAnimatedEmojis"]},{"name":"MaxApplicationCommands","description":"dev.kord.rest.json.JsonErrorCode.MaxApplicationCommands","location":"rest/dev.kord.rest.json/-json-error-code/-max-application-commands/index.html","searchKeys":["MaxApplicationCommands","MaxApplicationCommands","dev.kord.rest.json.JsonErrorCode.MaxApplicationCommands"]},{"name":"MaxAttachments","description":"dev.kord.rest.json.JsonErrorCode.MaxAttachments","location":"rest/dev.kord.rest.json/-json-error-code/-max-attachments/index.html","searchKeys":["MaxAttachments","MaxAttachments","dev.kord.rest.json.JsonErrorCode.MaxAttachments"]},{"name":"MaxBanFetches","description":"dev.kord.rest.json.JsonErrorCode.MaxBanFetches","location":"rest/dev.kord.rest.json/-json-error-code/-max-ban-fetches/index.html","searchKeys":["MaxBanFetches","MaxBanFetches","dev.kord.rest.json.JsonErrorCode.MaxBanFetches"]},{"name":"MaxDailyApplicationCommandCreates","description":"dev.kord.rest.json.JsonErrorCode.MaxDailyApplicationCommandCreates","location":"rest/dev.kord.rest.json/-json-error-code/-max-daily-application-command-creates/index.html","searchKeys":["MaxDailyApplicationCommandCreates","MaxDailyApplicationCommandCreates","dev.kord.rest.json.JsonErrorCode.MaxDailyApplicationCommandCreates"]},{"name":"MaxEmojis","description":"dev.kord.rest.json.JsonErrorCode.MaxEmojis","location":"rest/dev.kord.rest.json/-json-error-code/-max-emojis/index.html","searchKeys":["MaxEmojis","MaxEmojis","dev.kord.rest.json.JsonErrorCode.MaxEmojis"]},{"name":"MaxFriends","description":"dev.kord.rest.json.JsonErrorCode.MaxFriends","location":"rest/dev.kord.rest.json/-json-error-code/-max-friends/index.html","searchKeys":["MaxFriends","MaxFriends","dev.kord.rest.json.JsonErrorCode.MaxFriends"]},{"name":"MaxGuildChannels","description":"dev.kord.rest.json.JsonErrorCode.MaxGuildChannels","location":"rest/dev.kord.rest.json/-json-error-code/-max-guild-channels/index.html","searchKeys":["MaxGuildChannels","MaxGuildChannels","dev.kord.rest.json.JsonErrorCode.MaxGuildChannels"]},{"name":"MaxGuildRoles","description":"dev.kord.rest.json.JsonErrorCode.MaxGuildRoles","location":"rest/dev.kord.rest.json/-json-error-code/-max-guild-roles/index.html","searchKeys":["MaxGuildRoles","MaxGuildRoles","dev.kord.rest.json.JsonErrorCode.MaxGuildRoles"]},{"name":"MaxGuildWidgetSettingsUpdates","description":"dev.kord.rest.json.JsonErrorCode.MaxGuildWidgetSettingsUpdates","location":"rest/dev.kord.rest.json/-json-error-code/-max-guild-widget-settings-updates/index.html","searchKeys":["MaxGuildWidgetSettingsUpdates","MaxGuildWidgetSettingsUpdates","dev.kord.rest.json.JsonErrorCode.MaxGuildWidgetSettingsUpdates"]},{"name":"MaxGuilds","description":"dev.kord.rest.json.JsonErrorCode.MaxGuilds","location":"rest/dev.kord.rest.json/-json-error-code/-max-guilds/index.html","searchKeys":["MaxGuilds","MaxGuilds","dev.kord.rest.json.JsonErrorCode.MaxGuilds"]},{"name":"MaxInvites","description":"dev.kord.rest.json.JsonErrorCode.MaxInvites","location":"rest/dev.kord.rest.json/-json-error-code/-max-invites/index.html","searchKeys":["MaxInvites","MaxInvites","dev.kord.rest.json.JsonErrorCode.MaxInvites"]},{"name":"MaxLottieAnimationDimensions","description":"dev.kord.rest.json.JsonErrorCode.MaxLottieAnimationDimensions","location":"rest/dev.kord.rest.json/-json-error-code/-max-lottie-animation-dimensions/index.html","searchKeys":["MaxLottieAnimationDimensions","MaxLottieAnimationDimensions","dev.kord.rest.json.JsonErrorCode.MaxLottieAnimationDimensions"]},{"name":"MaxNonMemberBans","description":"dev.kord.rest.json.JsonErrorCode.MaxNonMemberBans","location":"rest/dev.kord.rest.json/-json-error-code/-max-non-member-bans/index.html","searchKeys":["MaxNonMemberBans","MaxNonMemberBans","dev.kord.rest.json.JsonErrorCode.MaxNonMemberBans"]},{"name":"MaxOldMessageEdits","description":"dev.kord.rest.json.JsonErrorCode.MaxOldMessageEdits","location":"rest/dev.kord.rest.json/-json-error-code/-max-old-message-edits/index.html","searchKeys":["MaxOldMessageEdits","MaxOldMessageEdits","dev.kord.rest.json.JsonErrorCode.MaxOldMessageEdits"]},{"name":"MaxPins","description":"dev.kord.rest.json.JsonErrorCode.MaxPins","location":"rest/dev.kord.rest.json/-json-error-code/-max-pins/index.html","searchKeys":["MaxPins","MaxPins","dev.kord.rest.json.JsonErrorCode.MaxPins"]},{"name":"MaxPruneRequests","description":"dev.kord.rest.json.JsonErrorCode.MaxPruneRequests","location":"rest/dev.kord.rest.json/-json-error-code/-max-prune-requests/index.html","searchKeys":["MaxPruneRequests","MaxPruneRequests","dev.kord.rest.json.JsonErrorCode.MaxPruneRequests"]},{"name":"MaxReactions","description":"dev.kord.rest.json.JsonErrorCode.MaxReactions","location":"rest/dev.kord.rest.json/-json-error-code/-max-reactions/index.html","searchKeys":["MaxReactions","MaxReactions","dev.kord.rest.json.JsonErrorCode.MaxReactions"]},{"name":"MaxRecipients","description":"dev.kord.rest.json.JsonErrorCode.MaxRecipients","location":"rest/dev.kord.rest.json/-json-error-code/-max-recipients/index.html","searchKeys":["MaxRecipients","MaxRecipients","dev.kord.rest.json.JsonErrorCode.MaxRecipients"]},{"name":"MaxServerCategories","description":"dev.kord.rest.json.JsonErrorCode.MaxServerCategories","location":"rest/dev.kord.rest.json/-json-error-code/-max-server-categories/index.html","searchKeys":["MaxServerCategories","MaxServerCategories","dev.kord.rest.json.JsonErrorCode.MaxServerCategories"]},{"name":"MaxServerMembers","description":"dev.kord.rest.json.JsonErrorCode.MaxServerMembers","location":"rest/dev.kord.rest.json/-json-error-code/-max-server-members/index.html","searchKeys":["MaxServerMembers","MaxServerMembers","dev.kord.rest.json.JsonErrorCode.MaxServerMembers"]},{"name":"MaxStickerAnimationDuration","description":"dev.kord.rest.json.JsonErrorCode.MaxStickerAnimationDuration","location":"rest/dev.kord.rest.json/-json-error-code/-max-sticker-animation-duration/index.html","searchKeys":["MaxStickerAnimationDuration","MaxStickerAnimationDuration","dev.kord.rest.json.JsonErrorCode.MaxStickerAnimationDuration"]},{"name":"MaxStickerFrameCount","description":"dev.kord.rest.json.JsonErrorCode.MaxStickerFrameCount","location":"rest/dev.kord.rest.json/-json-error-code/-max-sticker-frame-count/index.html","searchKeys":["MaxStickerFrameCount","MaxStickerFrameCount","dev.kord.rest.json.JsonErrorCode.MaxStickerFrameCount"]},{"name":"MaxStickerFrameRate","description":"dev.kord.rest.json.JsonErrorCode.MaxStickerFrameRate","location":"rest/dev.kord.rest.json/-json-error-code/-max-sticker-frame-rate/index.html","searchKeys":["MaxStickerFrameRate","MaxStickerFrameRate","dev.kord.rest.json.JsonErrorCode.MaxStickerFrameRate"]},{"name":"MaxStickers","description":"dev.kord.rest.json.JsonErrorCode.MaxStickers","location":"rest/dev.kord.rest.json/-json-error-code/-max-stickers/index.html","searchKeys":["MaxStickers","MaxStickers","dev.kord.rest.json.JsonErrorCode.MaxStickers"]},{"name":"MaxThreadParticipants","description":"dev.kord.rest.json.JsonErrorCode.MaxThreadParticipants","location":"rest/dev.kord.rest.json/-json-error-code/-max-thread-participants/index.html","searchKeys":["MaxThreadParticipants","MaxThreadParticipants","dev.kord.rest.json.JsonErrorCode.MaxThreadParticipants"]},{"name":"MaxUncompletedGuildScheduledEvents","description":"dev.kord.rest.json.JsonErrorCode.MaxUncompletedGuildScheduledEvents","location":"rest/dev.kord.rest.json/-json-error-code/-max-uncompleted-guild-scheduled-events/index.html","searchKeys":["MaxUncompletedGuildScheduledEvents","MaxUncompletedGuildScheduledEvents","dev.kord.rest.json.JsonErrorCode.MaxUncompletedGuildScheduledEvents"]},{"name":"MaxWebhooks","description":"dev.kord.rest.json.JsonErrorCode.MaxWebhooks","location":"rest/dev.kord.rest.json/-json-error-code/-max-webhooks/index.html","searchKeys":["MaxWebhooks","MaxWebhooks","dev.kord.rest.json.JsonErrorCode.MaxWebhooks"]},{"name":"MessageAlreadyHasThread","description":"dev.kord.rest.json.JsonErrorCode.MessageAlreadyHasThread","location":"rest/dev.kord.rest.json/-json-error-code/-message-already-has-thread/index.html","searchKeys":["MessageAlreadyHasThread","MessageAlreadyHasThread","dev.kord.rest.json.JsonErrorCode.MessageAlreadyHasThread"]},{"name":"MessageBlockedByAutomaticModeration","description":"dev.kord.rest.json.JsonErrorCode.MessageBlockedByAutomaticModeration","location":"rest/dev.kord.rest.json/-json-error-code/-message-blocked-by-automatic-moderation/index.html","searchKeys":["MessageBlockedByAutomaticModeration","MessageBlockedByAutomaticModeration","dev.kord.rest.json.JsonErrorCode.MessageBlockedByAutomaticModeration"]},{"name":"MessageBlockedByHarmfulLinksFilter","description":"dev.kord.rest.json.JsonErrorCode.MessageBlockedByHarmfulLinksFilter","location":"rest/dev.kord.rest.json/-json-error-code/-message-blocked-by-harmful-links-filter/index.html","searchKeys":["MessageBlockedByHarmfulLinksFilter","MessageBlockedByHarmfulLinksFilter","dev.kord.rest.json.JsonErrorCode.MessageBlockedByHarmfulLinksFilter"]},{"name":"MissingAccess","description":"dev.kord.rest.json.JsonErrorCode.MissingAccess","location":"rest/dev.kord.rest.json/-json-error-code/-missing-access/index.html","searchKeys":["MissingAccess","MissingAccess","dev.kord.rest.json.JsonErrorCode.MissingAccess"]},{"name":"MissingOAuthScope","description":"dev.kord.rest.json.JsonErrorCode.MissingOAuthScope","location":"rest/dev.kord.rest.json/-json-error-code/-missing-o-auth-scope/index.html","searchKeys":["MissingOAuthScope","MissingOAuthScope","dev.kord.rest.json.JsonErrorCode.MissingOAuthScope"]},{"name":"NoUsersWithDiscordTag","description":"dev.kord.rest.json.JsonErrorCode.NoUsersWithDiscordTag","location":"rest/dev.kord.rest.json/-json-error-code/-no-users-with-discord-tag/index.html","searchKeys":["NoUsersWithDiscordTag","NoUsersWithDiscordTag","dev.kord.rest.json.JsonErrorCode.NoUsersWithDiscordTag"]},{"name":"NonBotEndpoint","description":"dev.kord.rest.json.JsonErrorCode.NonBotEndpoint","location":"rest/dev.kord.rest.json/-json-error-code/-non-bot-endpoint/index.html","searchKeys":["NonBotEndpoint","NonBotEndpoint","dev.kord.rest.json.JsonErrorCode.NonBotEndpoint"]},{"name":"NonBotGuildInviteAccepted","description":"dev.kord.rest.json.JsonErrorCode.NonBotGuildInviteAccepted","location":"rest/dev.kord.rest.json/-json-error-code/-non-bot-guild-invite-accepted/index.html","searchKeys":["NonBotGuildInviteAccepted","NonBotGuildInviteAccepted","dev.kord.rest.json.JsonErrorCode.NonBotGuildInviteAccepted"]},{"name":"OAuth2ApplicationLimit","description":"dev.kord.rest.json.JsonErrorCode.OAuth2ApplicationLimit","location":"rest/dev.kord.rest.json/-json-error-code/-o-auth2-application-limit/index.html","searchKeys":["OAuth2ApplicationLimit","OAuth2ApplicationLimit","dev.kord.rest.json.JsonErrorCode.OAuth2ApplicationLimit"]},{"name":"OAuth2HasNoBot","description":"dev.kord.rest.json.JsonErrorCode.OAuth2HasNoBot","location":"rest/dev.kord.rest.json/-json-error-code/-o-auth2-has-no-bot/index.html","searchKeys":["OAuth2HasNoBot","OAuth2HasNoBot","dev.kord.rest.json.JsonErrorCode.OAuth2HasNoBot"]},{"name":"OnlyOwner","description":"dev.kord.rest.json.JsonErrorCode.OnlyOwner","location":"rest/dev.kord.rest.json/-json-error-code/-only-owner/index.html","searchKeys":["OnlyOwner","OnlyOwner","dev.kord.rest.json.JsonErrorCode.OnlyOwner"]},{"name":"OperationOnArchivedThread","description":"dev.kord.rest.json.JsonErrorCode.OperationOnArchivedThread","location":"rest/dev.kord.rest.json/-json-error-code/-operation-on-archived-thread/index.html","searchKeys":["OperationOnArchivedThread","OperationOnArchivedThread","dev.kord.rest.json.JsonErrorCode.OperationOnArchivedThread"]},{"name":"OwnershipCannotBeTransferredToBot","description":"dev.kord.rest.json.JsonErrorCode.OwnershipCannotBeTransferredToBot","location":"rest/dev.kord.rest.json/-json-error-code/-ownership-cannot-be-transferred-to-bot/index.html","searchKeys":["OwnershipCannotBeTransferredToBot","OwnershipCannotBeTransferredToBot","dev.kord.rest.json.JsonErrorCode.OwnershipCannotBeTransferredToBot"]},{"name":"PermissionLack","description":"dev.kord.rest.json.JsonErrorCode.PermissionLack","location":"rest/dev.kord.rest.json/-json-error-code/-permission-lack/index.html","searchKeys":["PermissionLack","PermissionLack","dev.kord.rest.json.JsonErrorCode.PermissionLack"]},{"name":"ProvidedMessageCountInsufficient","description":"dev.kord.rest.json.JsonErrorCode.ProvidedMessageCountInsufficient","location":"rest/dev.kord.rest.json/-json-error-code/-provided-message-count-insufficient/index.html","searchKeys":["ProvidedMessageCountInsufficient","ProvidedMessageCountInsufficient","dev.kord.rest.json.JsonErrorCode.ProvidedMessageCountInsufficient"]},{"name":"RasterizedImagesInLotties","description":"dev.kord.rest.json.JsonErrorCode.RasterizedImagesInLotties","location":"rest/dev.kord.rest.json/-json-error-code/-rasterized-images-in-lotties/index.html","searchKeys":["RasterizedImagesInLotties","RasterizedImagesInLotties","dev.kord.rest.json.JsonErrorCode.RasterizedImagesInLotties"]},{"name":"ReactionBlocked","description":"dev.kord.rest.json.JsonErrorCode.ReactionBlocked","location":"rest/dev.kord.rest.json/-json-error-code/-reaction-blocked/index.html","searchKeys":["ReactionBlocked","ReactionBlocked","dev.kord.rest.json.JsonErrorCode.ReactionBlocked"]},{"name":"RequestEntityTooLarge","description":"dev.kord.rest.json.JsonErrorCode.RequestEntityTooLarge","location":"rest/dev.kord.rest.json/-json-error-code/-request-entity-too-large/index.html","searchKeys":["RequestEntityTooLarge","RequestEntityTooLarge","dev.kord.rest.json.JsonErrorCode.RequestEntityTooLarge"]},{"name":"Require2FA","description":"dev.kord.rest.json.JsonErrorCode.Require2FA","location":"rest/dev.kord.rest.json/-json-error-code/-require2-f-a/index.html","searchKeys":["Require2FA","Require2FA","dev.kord.rest.json.JsonErrorCode.Require2FA"]},{"name":"SendMessagesTemporarilyDisabled","description":"dev.kord.rest.json.JsonErrorCode.SendMessagesTemporarilyDisabled","location":"rest/dev.kord.rest.json/-json-error-code/-send-messages-temporarily-disabled/index.html","searchKeys":["SendMessagesTemporarilyDisabled","SendMessagesTemporarilyDisabled","dev.kord.rest.json.JsonErrorCode.SendMessagesTemporarilyDisabled"]},{"name":"ServerNeedsMonetizationEnabled","description":"dev.kord.rest.json.JsonErrorCode.ServerNeedsMonetizationEnabled","location":"rest/dev.kord.rest.json/-json-error-code/-server-needs-monetization-enabled/index.html","searchKeys":["ServerNeedsMonetizationEnabled","ServerNeedsMonetizationEnabled","dev.kord.rest.json.JsonErrorCode.ServerNeedsMonetizationEnabled"]},{"name":"ServerNeedsMoreBoosts","description":"dev.kord.rest.json.JsonErrorCode.ServerNeedsMoreBoosts","location":"rest/dev.kord.rest.json/-json-error-code/-server-needs-more-boosts/index.html","searchKeys":["ServerNeedsMoreBoosts","ServerNeedsMoreBoosts","dev.kord.rest.json.JsonErrorCode.ServerNeedsMoreBoosts"]},{"name":"ServerNotAvailableInLocation","description":"dev.kord.rest.json.JsonErrorCode.ServerNotAvailableInLocation","location":"rest/dev.kord.rest.json/-json-error-code/-server-not-available-in-location/index.html","searchKeys":["ServerNotAvailableInLocation","ServerNotAvailableInLocation","dev.kord.rest.json.JsonErrorCode.ServerNotAvailableInLocation"]},{"name":"ServerWriteRateLimit","description":"dev.kord.rest.json.JsonErrorCode.ServerWriteRateLimit","location":"rest/dev.kord.rest.json/-json-error-code/-server-write-rate-limit/index.html","searchKeys":["ServerWriteRateLimit","ServerWriteRateLimit","dev.kord.rest.json.JsonErrorCode.ServerWriteRateLimit"]},{"name":"Size1024","description":"dev.kord.rest.Image.Size.Size1024","location":"rest/dev.kord.rest/-image/-size/-size1024/index.html","searchKeys":["Size1024","Size1024","dev.kord.rest.Image.Size.Size1024"]},{"name":"Size128","description":"dev.kord.rest.Image.Size.Size128","location":"rest/dev.kord.rest/-image/-size/-size128/index.html","searchKeys":["Size128","Size128","dev.kord.rest.Image.Size.Size128"]},{"name":"Size16","description":"dev.kord.rest.Image.Size.Size16","location":"rest/dev.kord.rest/-image/-size/-size16/index.html","searchKeys":["Size16","Size16","dev.kord.rest.Image.Size.Size16"]},{"name":"Size2048","description":"dev.kord.rest.Image.Size.Size2048","location":"rest/dev.kord.rest/-image/-size/-size2048/index.html","searchKeys":["Size2048","Size2048","dev.kord.rest.Image.Size.Size2048"]},{"name":"Size256","description":"dev.kord.rest.Image.Size.Size256","location":"rest/dev.kord.rest/-image/-size/-size256/index.html","searchKeys":["Size256","Size256","dev.kord.rest.Image.Size.Size256"]},{"name":"Size32","description":"dev.kord.rest.Image.Size.Size32","location":"rest/dev.kord.rest/-image/-size/-size32/index.html","searchKeys":["Size32","Size32","dev.kord.rest.Image.Size.Size32"]},{"name":"Size4096","description":"dev.kord.rest.Image.Size.Size4096","location":"rest/dev.kord.rest/-image/-size/-size4096/index.html","searchKeys":["Size4096","Size4096","dev.kord.rest.Image.Size.Size4096"]},{"name":"Size512","description":"dev.kord.rest.Image.Size.Size512","location":"rest/dev.kord.rest/-image/-size/-size512/index.html","searchKeys":["Size512","Size512","dev.kord.rest.Image.Size.Size512"]},{"name":"Size64","description":"dev.kord.rest.Image.Size.Size64","location":"rest/dev.kord.rest/-image/-size/-size64/index.html","searchKeys":["Size64","Size64","dev.kord.rest.Image.Size.Size64"]},{"name":"SlowModeRateLimit","description":"dev.kord.rest.json.JsonErrorCode.SlowModeRateLimit","location":"rest/dev.kord.rest.json/-json-error-code/-slow-mode-rate-limit/index.html","searchKeys":["SlowModeRateLimit","SlowModeRateLimit","dev.kord.rest.json.JsonErrorCode.SlowModeRateLimit"]},{"name":"StageAlreadyOpen","description":"dev.kord.rest.json.JsonErrorCode.StageAlreadyOpen","location":"rest/dev.kord.rest.json/-json-error-code/-stage-already-open/index.html","searchKeys":["StageAlreadyOpen","StageAlreadyOpen","dev.kord.rest.json.JsonErrorCode.StageAlreadyOpen"]},{"name":"StickerPermissionLack","description":"dev.kord.rest.json.JsonErrorCode.StickerPermissionLack","location":"rest/dev.kord.rest.json/-json-error-code/-sticker-permission-lack/index.html","searchKeys":["StickerPermissionLack","StickerPermissionLack","dev.kord.rest.json.JsonErrorCode.StickerPermissionLack"]},{"name":"TemporarilyDisabled","description":"dev.kord.rest.json.JsonErrorCode.TemporarilyDisabled","location":"rest/dev.kord.rest.json/-json-error-code/-temporarily-disabled/index.html","searchKeys":["TemporarilyDisabled","TemporarilyDisabled","dev.kord.rest.json.JsonErrorCode.TemporarilyDisabled"]},{"name":"TheadLocked","description":"dev.kord.rest.json.JsonErrorCode.TheadLocked","location":"rest/dev.kord.rest.json/-json-error-code/-thead-locked/index.html","searchKeys":["TheadLocked","TheadLocked","dev.kord.rest.json.JsonErrorCode.TheadLocked"]},{"name":"TitleBlockedByAutomaticModeration","description":"dev.kord.rest.json.JsonErrorCode.TitleBlockedByAutomaticModeration","location":"rest/dev.kord.rest.json/-json-error-code/-title-blocked-by-automatic-moderation/index.html","searchKeys":["TitleBlockedByAutomaticModeration","TitleBlockedByAutomaticModeration","dev.kord.rest.json.JsonErrorCode.TitleBlockedByAutomaticModeration"]},{"name":"TooFastDM","description":"dev.kord.rest.json.JsonErrorCode.TooFastDM","location":"rest/dev.kord.rest.json/-json-error-code/-too-fast-d-m/index.html","searchKeys":["TooFastDM","TooFastDM","dev.kord.rest.json.JsonErrorCode.TooFastDM"]},{"name":"TooLongNote","description":"dev.kord.rest.json.JsonErrorCode.TooLongNote","location":"rest/dev.kord.rest.json/-json-error-code/-too-long-note/index.html","searchKeys":["TooLongNote","TooLongNote","dev.kord.rest.json.JsonErrorCode.TooLongNote"]},{"name":"Unauthorized","description":"dev.kord.rest.json.JsonErrorCode.Unauthorized","location":"rest/dev.kord.rest.json/-json-error-code/-unauthorized/index.html","searchKeys":["Unauthorized","Unauthorized","dev.kord.rest.json.JsonErrorCode.Unauthorized"]},{"name":"UnauthorizedForAction","description":"dev.kord.rest.json.JsonErrorCode.UnauthorizedForAction","location":"rest/dev.kord.rest.json/-json-error-code/-unauthorized-for-action/index.html","searchKeys":["UnauthorizedForAction","UnauthorizedForAction","dev.kord.rest.json.JsonErrorCode.UnauthorizedForAction"]},{"name":"UnderMinimumAge","description":"dev.kord.rest.json.JsonErrorCode.UnderMinimumAge","location":"rest/dev.kord.rest.json/-json-error-code/-under-minimum-age/index.html","searchKeys":["UnderMinimumAge","UnderMinimumAge","dev.kord.rest.json.JsonErrorCode.UnderMinimumAge"]},{"name":"Unknown","description":"dev.kord.rest.json.JsonErrorCode.Unknown","location":"rest/dev.kord.rest.json/-json-error-code/-unknown/index.html","searchKeys":["Unknown","Unknown","dev.kord.rest.json.JsonErrorCode.Unknown"]},{"name":"UnknownAccount","description":"dev.kord.rest.json.JsonErrorCode.UnknownAccount","location":"rest/dev.kord.rest.json/-json-error-code/-unknown-account/index.html","searchKeys":["UnknownAccount","UnknownAccount","dev.kord.rest.json.JsonErrorCode.UnknownAccount"]},{"name":"UnknownApplication","description":"dev.kord.rest.json.JsonErrorCode.UnknownApplication","location":"rest/dev.kord.rest.json/-json-error-code/-unknown-application/index.html","searchKeys":["UnknownApplication","UnknownApplication","dev.kord.rest.json.JsonErrorCode.UnknownApplication"]},{"name":"UnknownApplicationCommand","description":"dev.kord.rest.json.JsonErrorCode.UnknownApplicationCommand","location":"rest/dev.kord.rest.json/-json-error-code/-unknown-application-command/index.html","searchKeys":["UnknownApplicationCommand","UnknownApplicationCommand","dev.kord.rest.json.JsonErrorCode.UnknownApplicationCommand"]},{"name":"UnknownApplicationCommandPermissions","description":"dev.kord.rest.json.JsonErrorCode.UnknownApplicationCommandPermissions","location":"rest/dev.kord.rest.json/-json-error-code/-unknown-application-command-permissions/index.html","searchKeys":["UnknownApplicationCommandPermissions","UnknownApplicationCommandPermissions","dev.kord.rest.json.JsonErrorCode.UnknownApplicationCommandPermissions"]},{"name":"UnknownBan","description":"dev.kord.rest.json.JsonErrorCode.UnknownBan","location":"rest/dev.kord.rest.json/-json-error-code/-unknown-ban/index.html","searchKeys":["UnknownBan","UnknownBan","dev.kord.rest.json.JsonErrorCode.UnknownBan"]},{"name":"UnknownBranch","description":"dev.kord.rest.json.JsonErrorCode.UnknownBranch","location":"rest/dev.kord.rest.json/-json-error-code/-unknown-branch/index.html","searchKeys":["UnknownBranch","UnknownBranch","dev.kord.rest.json.JsonErrorCode.UnknownBranch"]},{"name":"UnknownBuild","description":"dev.kord.rest.json.JsonErrorCode.UnknownBuild","location":"rest/dev.kord.rest.json/-json-error-code/-unknown-build/index.html","searchKeys":["UnknownBuild","UnknownBuild","dev.kord.rest.json.JsonErrorCode.UnknownBuild"]},{"name":"UnknownChannel","description":"dev.kord.rest.json.JsonErrorCode.UnknownChannel","location":"rest/dev.kord.rest.json/-json-error-code/-unknown-channel/index.html","searchKeys":["UnknownChannel","UnknownChannel","dev.kord.rest.json.JsonErrorCode.UnknownChannel"]},{"name":"UnknownDiscoverableServerCategory","description":"dev.kord.rest.json.JsonErrorCode.UnknownDiscoverableServerCategory","location":"rest/dev.kord.rest.json/-json-error-code/-unknown-discoverable-server-category/index.html","searchKeys":["UnknownDiscoverableServerCategory","UnknownDiscoverableServerCategory","dev.kord.rest.json.JsonErrorCode.UnknownDiscoverableServerCategory"]},{"name":"UnknownEmoji","description":"dev.kord.rest.json.JsonErrorCode.UnknownEmoji","location":"rest/dev.kord.rest.json/-json-error-code/-unknown-emoji/index.html","searchKeys":["UnknownEmoji","UnknownEmoji","dev.kord.rest.json.JsonErrorCode.UnknownEmoji"]},{"name":"UnknownEntitlement","description":"dev.kord.rest.json.JsonErrorCode.UnknownEntitlement","location":"rest/dev.kord.rest.json/-json-error-code/-unknown-entitlement/index.html","searchKeys":["UnknownEntitlement","UnknownEntitlement","dev.kord.rest.json.JsonErrorCode.UnknownEntitlement"]},{"name":"UnknownGiftCode","description":"dev.kord.rest.json.JsonErrorCode.UnknownGiftCode","location":"rest/dev.kord.rest.json/-json-error-code/-unknown-gift-code/index.html","searchKeys":["UnknownGiftCode","UnknownGiftCode","dev.kord.rest.json.JsonErrorCode.UnknownGiftCode"]},{"name":"UnknownGuild","description":"dev.kord.rest.json.JsonErrorCode.UnknownGuild","location":"rest/dev.kord.rest.json/-json-error-code/-unknown-guild/index.html","searchKeys":["UnknownGuild","UnknownGuild","dev.kord.rest.json.JsonErrorCode.UnknownGuild"]},{"name":"UnknownGuildMemberVerificationForm","description":"dev.kord.rest.json.JsonErrorCode.UnknownGuildMemberVerificationForm","location":"rest/dev.kord.rest.json/-json-error-code/-unknown-guild-member-verification-form/index.html","searchKeys":["UnknownGuildMemberVerificationForm","UnknownGuildMemberVerificationForm","dev.kord.rest.json.JsonErrorCode.UnknownGuildMemberVerificationForm"]},{"name":"UnknownGuildScheduledEvent","description":"dev.kord.rest.json.JsonErrorCode.UnknownGuildScheduledEvent","location":"rest/dev.kord.rest.json/-json-error-code/-unknown-guild-scheduled-event/index.html","searchKeys":["UnknownGuildScheduledEvent","UnknownGuildScheduledEvent","dev.kord.rest.json.JsonErrorCode.UnknownGuildScheduledEvent"]},{"name":"UnknownGuildScheduledEventUser","description":"dev.kord.rest.json.JsonErrorCode.UnknownGuildScheduledEventUser","location":"rest/dev.kord.rest.json/-json-error-code/-unknown-guild-scheduled-event-user/index.html","searchKeys":["UnknownGuildScheduledEventUser","UnknownGuildScheduledEventUser","dev.kord.rest.json.JsonErrorCode.UnknownGuildScheduledEventUser"]},{"name":"UnknownGuildTemplate","description":"dev.kord.rest.json.JsonErrorCode.UnknownGuildTemplate","location":"rest/dev.kord.rest.json/-json-error-code/-unknown-guild-template/index.html","searchKeys":["UnknownGuildTemplate","UnknownGuildTemplate","dev.kord.rest.json.JsonErrorCode.UnknownGuildTemplate"]},{"name":"UnknownGuildWelcomeScreen","description":"dev.kord.rest.json.JsonErrorCode.UnknownGuildWelcomeScreen","location":"rest/dev.kord.rest.json/-json-error-code/-unknown-guild-welcome-screen/index.html","searchKeys":["UnknownGuildWelcomeScreen","UnknownGuildWelcomeScreen","dev.kord.rest.json.JsonErrorCode.UnknownGuildWelcomeScreen"]},{"name":"UnknownIntegration","description":"dev.kord.rest.json.JsonErrorCode.UnknownIntegration","location":"rest/dev.kord.rest.json/-json-error-code/-unknown-integration/index.html","searchKeys":["UnknownIntegration","UnknownIntegration","dev.kord.rest.json.JsonErrorCode.UnknownIntegration"]},{"name":"UnknownInteraction","description":"dev.kord.rest.json.JsonErrorCode.UnknownInteraction","location":"rest/dev.kord.rest.json/-json-error-code/-unknown-interaction/index.html","searchKeys":["UnknownInteraction","UnknownInteraction","dev.kord.rest.json.JsonErrorCode.UnknownInteraction"]},{"name":"UnknownInvite","description":"dev.kord.rest.json.JsonErrorCode.UnknownInvite","location":"rest/dev.kord.rest.json/-json-error-code/-unknown-invite/index.html","searchKeys":["UnknownInvite","UnknownInvite","dev.kord.rest.json.JsonErrorCode.UnknownInvite"]},{"name":"UnknownLobby","description":"dev.kord.rest.json.JsonErrorCode.UnknownLobby","location":"rest/dev.kord.rest.json/-json-error-code/-unknown-lobby/index.html","searchKeys":["UnknownLobby","UnknownLobby","dev.kord.rest.json.JsonErrorCode.UnknownLobby"]},{"name":"UnknownMember","description":"dev.kord.rest.json.JsonErrorCode.UnknownMember","location":"rest/dev.kord.rest.json/-json-error-code/-unknown-member/index.html","searchKeys":["UnknownMember","UnknownMember","dev.kord.rest.json.JsonErrorCode.UnknownMember"]},{"name":"UnknownMessage","description":"dev.kord.rest.json.JsonErrorCode.UnknownMessage","location":"rest/dev.kord.rest.json/-json-error-code/-unknown-message/index.html","searchKeys":["UnknownMessage","UnknownMessage","dev.kord.rest.json.JsonErrorCode.UnknownMessage"]},{"name":"UnknownPermissionOverwrite","description":"dev.kord.rest.json.JsonErrorCode.UnknownPermissionOverwrite","location":"rest/dev.kord.rest.json/-json-error-code/-unknown-permission-overwrite/index.html","searchKeys":["UnknownPermissionOverwrite","UnknownPermissionOverwrite","dev.kord.rest.json.JsonErrorCode.UnknownPermissionOverwrite"]},{"name":"UnknownPremiumServerSubscribeCooldown","description":"dev.kord.rest.json.JsonErrorCode.UnknownPremiumServerSubscribeCooldown","location":"rest/dev.kord.rest.json/-json-error-code/-unknown-premium-server-subscribe-cooldown/index.html","searchKeys":["UnknownPremiumServerSubscribeCooldown","UnknownPremiumServerSubscribeCooldown","dev.kord.rest.json.JsonErrorCode.UnknownPremiumServerSubscribeCooldown"]},{"name":"UnknownProvider","description":"dev.kord.rest.json.JsonErrorCode.UnknownProvider","location":"rest/dev.kord.rest.json/-json-error-code/-unknown-provider/index.html","searchKeys":["UnknownProvider","UnknownProvider","dev.kord.rest.json.JsonErrorCode.UnknownProvider"]},{"name":"UnknownRedistributable","description":"dev.kord.rest.json.JsonErrorCode.UnknownRedistributable","location":"rest/dev.kord.rest.json/-json-error-code/-unknown-redistributable/index.html","searchKeys":["UnknownRedistributable","UnknownRedistributable","dev.kord.rest.json.JsonErrorCode.UnknownRedistributable"]},{"name":"UnknownRole","description":"dev.kord.rest.json.JsonErrorCode.UnknownRole","location":"rest/dev.kord.rest.json/-json-error-code/-unknown-role/index.html","searchKeys":["UnknownRole","UnknownRole","dev.kord.rest.json.JsonErrorCode.UnknownRole"]},{"name":"UnknownSKU","description":"dev.kord.rest.json.JsonErrorCode.UnknownSKU","location":"rest/dev.kord.rest.json/-json-error-code/-unknown-s-k-u/index.html","searchKeys":["UnknownSKU","UnknownSKU","dev.kord.rest.json.JsonErrorCode.UnknownSKU"]},{"name":"UnknownSession","description":"dev.kord.rest.json.JsonErrorCode.UnknownSession","location":"rest/dev.kord.rest.json/-json-error-code/-unknown-session/index.html","searchKeys":["UnknownSession","UnknownSession","dev.kord.rest.json.JsonErrorCode.UnknownSession"]},{"name":"UnknownStageInstance","description":"dev.kord.rest.json.JsonErrorCode.UnknownStageInstance","location":"rest/dev.kord.rest.json/-json-error-code/-unknown-stage-instance/index.html","searchKeys":["UnknownStageInstance","UnknownStageInstance","dev.kord.rest.json.JsonErrorCode.UnknownStageInstance"]},{"name":"UnknownSticker","description":"dev.kord.rest.json.JsonErrorCode.UnknownSticker","location":"rest/dev.kord.rest.json/-json-error-code/-unknown-sticker/index.html","searchKeys":["UnknownSticker","UnknownSticker","dev.kord.rest.json.JsonErrorCode.UnknownSticker"]},{"name":"UnknownStoreDirectoryLayout","description":"dev.kord.rest.json.JsonErrorCode.UnknownStoreDirectoryLayout","location":"rest/dev.kord.rest.json/-json-error-code/-unknown-store-directory-layout/index.html","searchKeys":["UnknownStoreDirectoryLayout","UnknownStoreDirectoryLayout","dev.kord.rest.json.JsonErrorCode.UnknownStoreDirectoryLayout"]},{"name":"UnknownStoreListing","description":"dev.kord.rest.json.JsonErrorCode.UnknownStoreListing","location":"rest/dev.kord.rest.json/-json-error-code/-unknown-store-listing/index.html","searchKeys":["UnknownStoreListing","UnknownStoreListing","dev.kord.rest.json.JsonErrorCode.UnknownStoreListing"]},{"name":"UnknownStream","description":"dev.kord.rest.json.JsonErrorCode.UnknownStream","location":"rest/dev.kord.rest.json/-json-error-code/-unknown-stream/index.html","searchKeys":["UnknownStream","UnknownStream","dev.kord.rest.json.JsonErrorCode.UnknownStream"]},{"name":"UnknownToken","description":"dev.kord.rest.json.JsonErrorCode.UnknownToken","location":"rest/dev.kord.rest.json/-json-error-code/-unknown-token/index.html","searchKeys":["UnknownToken","UnknownToken","dev.kord.rest.json.JsonErrorCode.UnknownToken"]},{"name":"UnknownUpload","description":"dev.kord.rest.json.JsonErrorCode.UnknownUpload","location":"rest/dev.kord.rest.json/-json-error-code/-unknown-upload/index.html","searchKeys":["UnknownUpload","UnknownUpload","dev.kord.rest.json.JsonErrorCode.UnknownUpload"]},{"name":"UnknownUser","description":"dev.kord.rest.json.JsonErrorCode.UnknownUser","location":"rest/dev.kord.rest.json/-json-error-code/-unknown-user/index.html","searchKeys":["UnknownUser","UnknownUser","dev.kord.rest.json.JsonErrorCode.UnknownUser"]},{"name":"UnknownVoiceState","description":"dev.kord.rest.json.JsonErrorCode.UnknownVoiceState","location":"rest/dev.kord.rest.json/-json-error-code/-unknown-voice-state/index.html","searchKeys":["UnknownVoiceState","UnknownVoiceState","dev.kord.rest.json.JsonErrorCode.UnknownVoiceState"]},{"name":"UnknownWebhook","description":"dev.kord.rest.json.JsonErrorCode.UnknownWebhook","location":"rest/dev.kord.rest.json/-json-error-code/-unknown-webhook/index.html","searchKeys":["UnknownWebhook","UnknownWebhook","dev.kord.rest.json.JsonErrorCode.UnknownWebhook"]},{"name":"UnknownWebhookService","description":"dev.kord.rest.json.JsonErrorCode.UnknownWebhookService","location":"rest/dev.kord.rest.json/-json-error-code/-unknown-webhook-service/index.html","searchKeys":["UnknownWebhookService","UnknownWebhookService","dev.kord.rest.json.JsonErrorCode.UnknownWebhookService"]},{"name":"UserBannedFromGuild","description":"dev.kord.rest.json.JsonErrorCode.UserBannedFromGuild","location":"rest/dev.kord.rest.json/-json-error-code/-user-banned-from-guild/index.html","searchKeys":["UserBannedFromGuild","UserBannedFromGuild","dev.kord.rest.json.JsonErrorCode.UserBannedFromGuild"]},{"name":"UserNotInVoice","description":"dev.kord.rest.json.JsonErrorCode.UserNotInVoice","location":"rest/dev.kord.rest.json/-json-error-code/-user-not-in-voice/index.html","searchKeys":["UserNotInVoice","UserNotInVoice","dev.kord.rest.json.JsonErrorCode.UserNotInVoice"]},{"name":"VerifyAccount","description":"dev.kord.rest.json.JsonErrorCode.VerifyAccount","location":"rest/dev.kord.rest.json/-json-error-code/-verify-account/index.html","searchKeys":["VerifyAccount","VerifyAccount","dev.kord.rest.json.JsonErrorCode.VerifyAccount"]},{"name":"WrongChannelType","description":"dev.kord.rest.json.JsonErrorCode.WrongChannelType","location":"rest/dev.kord.rest.json/-json-error-code/-wrong-channel-type/index.html","searchKeys":["WrongChannelType","WrongChannelType","dev.kord.rest.json.JsonErrorCode.WrongChannelType"]},{"name":"abstract class AbstractRateLimiter : RequestRateLimiter","description":"dev.kord.rest.ratelimit.AbstractRateLimiter","location":"rest/dev.kord.rest.ratelimit/-abstract-rate-limiter/index.html","searchKeys":["AbstractRateLimiter","abstract class AbstractRateLimiter : RequestRateLimiter","dev.kord.rest.ratelimit.AbstractRateLimiter"]},{"name":"abstract class RestRequestException(val request: Request<*, *>, val status: HttpStatus, val error: DiscordErrorResponse? = null) : RequestException","description":"dev.kord.rest.request.RestRequestException","location":"rest/dev.kord.rest.request/-rest-request-exception/index.html","searchKeys":["RestRequestException","abstract class RestRequestException(val request: Request<*, *>, val status: HttpStatus, val error: DiscordErrorResponse? = null) : RequestException","dev.kord.rest.request.RestRequestException"]},{"name":"abstract class RestService(requestHandler: RequestHandler)","description":"dev.kord.rest.service.RestService","location":"rest/dev.kord.rest.service/-rest-service/index.html","searchKeys":["RestService","abstract class RestService(requestHandler: RequestHandler)","dev.kord.rest.service.RestService"]},{"name":"abstract fun addOverwrite(overwrite: Overwrite)","description":"dev.kord.rest.builder.channel.PermissionOverwritesBuilder.addOverwrite","location":"rest/dev.kord.rest.builder.channel/-permission-overwrites-builder/add-overwrite.html","searchKeys":["addOverwrite","abstract fun addOverwrite(overwrite: Overwrite)","dev.kord.rest.builder.channel.PermissionOverwritesBuilder.addOverwrite"]},{"name":"abstract fun assignActions(actions: MutableList<AutoModerationActionBuilder>)","description":"dev.kord.rest.builder.automoderation.AutoModerationRuleBuilder.assignActions","location":"rest/dev.kord.rest.builder.automoderation/-auto-moderation-rule-builder/assign-actions.html","searchKeys":["assignActions","abstract fun assignActions(actions: MutableList<AutoModerationActionBuilder>)","dev.kord.rest.builder.automoderation.AutoModerationRuleBuilder.assignActions"]},{"name":"abstract fun assignEventType(eventType: AutoModerationRuleEventType)","description":"dev.kord.rest.builder.automoderation.AutoModerationRuleBuilder.assignEventType","location":"rest/dev.kord.rest.builder.automoderation/-auto-moderation-rule-builder/assign-event-type.html","searchKeys":["assignEventType","abstract fun assignEventType(eventType: AutoModerationRuleEventType)","dev.kord.rest.builder.automoderation.AutoModerationRuleBuilder.assignEventType"]},{"name":"abstract fun assignMentionLimit(mentionLimit: Int)","description":"dev.kord.rest.builder.automoderation.MentionSpamAutoModerationRuleBuilder.assignMentionLimit","location":"rest/dev.kord.rest.builder.automoderation/-mention-spam-auto-moderation-rule-builder/assign-mention-limit.html","searchKeys":["assignMentionLimit","abstract fun assignMentionLimit(mentionLimit: Int)","dev.kord.rest.builder.automoderation.MentionSpamAutoModerationRuleBuilder.assignMentionLimit"]},{"name":"abstract fun assignName(name: String)","description":"dev.kord.rest.builder.automoderation.AutoModerationRuleBuilder.assignName","location":"rest/dev.kord.rest.builder.automoderation/-auto-moderation-rule-builder/assign-name.html","searchKeys":["assignName","abstract fun assignName(name: String)","dev.kord.rest.builder.automoderation.AutoModerationRuleBuilder.assignName"]},{"name":"abstract fun assignPresets(presets: MutableList<AutoModerationRuleKeywordPresetType>)","description":"dev.kord.rest.builder.automoderation.KeywordPresetAutoModerationRuleBuilder.assignPresets","location":"rest/dev.kord.rest.builder.automoderation/-keyword-preset-auto-moderation-rule-builder/assign-presets.html","searchKeys":["assignPresets","abstract fun assignPresets(presets: MutableList<AutoModerationRuleKeywordPresetType>)","dev.kord.rest.builder.automoderation.KeywordPresetAutoModerationRuleBuilder.assignPresets"]},{"name":"abstract fun build(): DiscordComponent","description":"dev.kord.rest.builder.component.ComponentBuilder.build","location":"rest/dev.kord.rest.builder.component/-component-builder/build.html","searchKeys":["build","abstract fun build(): DiscordComponent","dev.kord.rest.builder.component.ComponentBuilder.build"]},{"name":"abstract fun choice(name: String, value: T, nameLocalizations: Optional<Map<Locale, String>?> = Optional.Missing())","description":"dev.kord.rest.builder.interaction.BaseChoiceBuilder.choice","location":"rest/dev.kord.rest.builder.interaction/-base-choice-builder/choice.html","searchKeys":["choice","abstract fun choice(name: String, value: T, nameLocalizations: Optional<Map<Locale, String>?> = Optional.Missing())","dev.kord.rest.builder.interaction.BaseChoiceBuilder.choice"]},{"name":"abstract fun deserialize(json: Json, body: String): T","description":"dev.kord.rest.route.ResponseMapper.deserialize","location":"rest/dev.kord.rest.route/-response-mapper/deserialize.html","searchKeys":["deserialize","abstract fun deserialize(json: Json, body: String): T","dev.kord.rest.route.ResponseMapper.deserialize"]},{"name":"abstract fun toRequest(): T","description":"dev.kord.rest.builder.RequestBuilder.toRequest","location":"rest/dev.kord.rest.builder/-request-builder/to-request.html","searchKeys":["toRequest","abstract fun toRequest(): T","dev.kord.rest.builder.RequestBuilder.toRequest"]},{"name":"abstract override fun build(): DiscordChatComponent","description":"dev.kord.rest.builder.component.ButtonBuilder.build","location":"rest/dev.kord.rest.builder.component/-button-builder/build.html","searchKeys":["build","abstract override fun build(): DiscordChatComponent","dev.kord.rest.builder.component.ButtonBuilder.build"]},{"name":"abstract override val triggerType: AutoModerationRuleTriggerType","description":"dev.kord.rest.builder.automoderation.TypedAutoModerationRuleBuilder.triggerType","location":"rest/dev.kord.rest.builder.automoderation/-typed-auto-moderation-rule-builder/trigger-type.html","searchKeys":["triggerType","abstract override val triggerType: AutoModerationRuleTriggerType","dev.kord.rest.builder.automoderation.TypedAutoModerationRuleBuilder.triggerType"]},{"name":"abstract override var description: String","description":"dev.kord.rest.builder.interaction.LocalizedDescriptionCreateBuilder.description","location":"rest/dev.kord.rest.builder.interaction/-localized-description-create-builder/description.html","searchKeys":["description","abstract override var description: String","dev.kord.rest.builder.interaction.LocalizedDescriptionCreateBuilder.description"]},{"name":"abstract override var description: String?","description":"dev.kord.rest.builder.interaction.LocalizedDescriptionModifyBuilder.description","location":"rest/dev.kord.rest.builder.interaction/-localized-description-modify-builder/description.html","searchKeys":["description","abstract override var description: String?","dev.kord.rest.builder.interaction.LocalizedDescriptionModifyBuilder.description"]},{"name":"abstract override var name: String","description":"dev.kord.rest.builder.interaction.LocalizedNameCreateBuilder.name","location":"rest/dev.kord.rest.builder.interaction/-localized-name-create-builder/name.html","searchKeys":["name","abstract override var name: String","dev.kord.rest.builder.interaction.LocalizedNameCreateBuilder.name"]},{"name":"abstract override var name: String?","description":"dev.kord.rest.builder.interaction.LocalizedNameModifyBuilder.name","location":"rest/dev.kord.rest.builder.interaction/-localized-name-modify-builder/name.html","searchKeys":["name","abstract override var name: String?","dev.kord.rest.builder.interaction.LocalizedNameModifyBuilder.name"]},{"name":"abstract suspend fun <B : Any, R> handle(request: Request<B, R>): R","description":"dev.kord.rest.request.RequestHandler.handle","location":"rest/dev.kord.rest.request/-request-handler/handle.html","searchKeys":["handle","abstract suspend fun <B : Any, R> handle(request: Request<B, R>): R","dev.kord.rest.request.RequestHandler.handle"]},{"name":"abstract suspend fun await(request: Request<*, *>): RequestToken","description":"dev.kord.rest.ratelimit.RequestRateLimiter.await","location":"rest/dev.kord.rest.ratelimit/-request-rate-limiter/await.html","searchKeys":["await","abstract suspend fun await(request: Request<*, *>): RequestToken","dev.kord.rest.ratelimit.RequestRateLimiter.await"]},{"name":"abstract suspend fun complete(response: RequestResponse)","description":"dev.kord.rest.ratelimit.RequestToken.complete","location":"rest/dev.kord.rest.ratelimit/-request-token/complete.html","searchKeys":["complete","abstract suspend fun complete(response: RequestResponse)","dev.kord.rest.ratelimit.RequestToken.complete"]},{"name":"abstract val actions: MutableList<AutoModerationActionBuilder>?","description":"dev.kord.rest.builder.automoderation.AutoModerationRuleBuilder.actions","location":"rest/dev.kord.rest.builder.automoderation/-auto-moderation-rule-builder/actions.html","searchKeys":["actions","abstract val actions: MutableList<AutoModerationActionBuilder>?","dev.kord.rest.builder.automoderation.AutoModerationRuleBuilder.actions"]},{"name":"abstract val body: RequestBody<B>?","description":"dev.kord.rest.request.Request.body","location":"rest/dev.kord.rest.request/-request/body.html","searchKeys":["body","abstract val body: RequestBody<B>?","dev.kord.rest.request.Request.body"]},{"name":"abstract val bucketKey: BucketKey?","description":"dev.kord.rest.ratelimit.RequestResponse.bucketKey","location":"rest/dev.kord.rest.ratelimit/-request-response/bucket-key.html","searchKeys":["bucketKey","abstract val bucketKey: BucketKey?","dev.kord.rest.ratelimit.RequestResponse.bucketKey"]},{"name":"abstract val completed: Boolean","description":"dev.kord.rest.ratelimit.RequestToken.completed","location":"rest/dev.kord.rest.ratelimit/-request-token/completed.html","searchKeys":["completed","abstract val completed: Boolean","dev.kord.rest.ratelimit.RequestToken.completed"]},{"name":"abstract val components: MutableList<MessageComponentBuilder>","description":"dev.kord.rest.builder.message.create.MessageCreateBuilder.components","location":"rest/dev.kord.rest.builder.message.create/-message-create-builder/components.html","searchKeys":["components","abstract val components: MutableList<MessageComponentBuilder>","dev.kord.rest.builder.message.create.MessageCreateBuilder.components"]},{"name":"abstract val description: String?","description":"dev.kord.rest.builder.interaction.LocalizedDescriptionBuilder.description","location":"rest/dev.kord.rest.builder.interaction/-localized-description-builder/description.html","searchKeys":["description","abstract val description: String?","dev.kord.rest.builder.interaction.LocalizedDescriptionBuilder.description"]},{"name":"abstract val embeds: MutableList<EmbedBuilder>","description":"dev.kord.rest.builder.message.create.MessageCreateBuilder.embeds","location":"rest/dev.kord.rest.builder.message.create/-message-create-builder/embeds.html","searchKeys":["embeds","abstract val embeds: MutableList<EmbedBuilder>","dev.kord.rest.builder.message.create.MessageCreateBuilder.embeds"]},{"name":"abstract val eventType: AutoModerationRuleEventType?","description":"dev.kord.rest.builder.automoderation.AutoModerationRuleBuilder.eventType","location":"rest/dev.kord.rest.builder.automoderation/-auto-moderation-rule-builder/event-type.html","searchKeys":["eventType","abstract val eventType: AutoModerationRuleEventType?","dev.kord.rest.builder.automoderation.AutoModerationRuleBuilder.eventType"]},{"name":"abstract val files: List<NamedFile>?","description":"dev.kord.rest.request.Request.files","location":"rest/dev.kord.rest.request/-request/files.html","searchKeys":["files","abstract val files: List<NamedFile>?","dev.kord.rest.request.Request.files"]},{"name":"abstract val files: MutableList<NamedFile>","description":"dev.kord.rest.builder.message.create.MessageCreateBuilder.files","location":"rest/dev.kord.rest.builder.message.create/-message-create-builder/files.html","searchKeys":["files","abstract val files: MutableList<NamedFile>","dev.kord.rest.builder.message.create.MessageCreateBuilder.files"]},{"name":"abstract val headers: StringValues","description":"dev.kord.rest.request.Request.headers","location":"rest/dev.kord.rest.request/-request/headers.html","searchKeys":["headers","abstract val headers: StringValues","dev.kord.rest.request.Request.headers"]},{"name":"abstract val key: String","description":"dev.kord.rest.route.Position.key","location":"rest/dev.kord.rest.route/-position/key.html","searchKeys":["key","abstract val key: String","dev.kord.rest.route.Position.key"]},{"name":"abstract val mentionLimit: Int?","description":"dev.kord.rest.builder.automoderation.MentionSpamAutoModerationRuleBuilder.mentionLimit","location":"rest/dev.kord.rest.builder.automoderation/-mention-spam-auto-moderation-rule-builder/mention-limit.html","searchKeys":["mentionLimit","abstract val mentionLimit: Int?","dev.kord.rest.builder.automoderation.MentionSpamAutoModerationRuleBuilder.mentionLimit"]},{"name":"abstract val name: String?","description":"dev.kord.rest.builder.automoderation.AutoModerationRuleBuilder.name","location":"rest/dev.kord.rest.builder.automoderation/-auto-moderation-rule-builder/name.html","searchKeys":["name","abstract val name: String?","dev.kord.rest.builder.automoderation.AutoModerationRuleBuilder.name"]},{"name":"abstract val name: String?","description":"dev.kord.rest.builder.interaction.LocalizedNameBuilder.name","location":"rest/dev.kord.rest.builder.interaction/-localized-name-builder/name.html","searchKeys":["name","abstract val name: String?","dev.kord.rest.builder.interaction.LocalizedNameBuilder.name"]},{"name":"abstract val parameters: StringValues","description":"dev.kord.rest.request.Request.parameters","location":"rest/dev.kord.rest.request/-request/parameters.html","searchKeys":["parameters","abstract val parameters: StringValues","dev.kord.rest.request.Request.parameters"]},{"name":"abstract val presets: MutableList<AutoModerationRuleKeywordPresetType>?","description":"dev.kord.rest.builder.automoderation.KeywordPresetAutoModerationRuleBuilder.presets","location":"rest/dev.kord.rest.builder.automoderation/-keyword-preset-auto-moderation-rule-builder/presets.html","searchKeys":["presets","abstract val presets: MutableList<AutoModerationRuleKeywordPresetType>?","dev.kord.rest.builder.automoderation.KeywordPresetAutoModerationRuleBuilder.presets"]},{"name":"abstract val rateLimit: RateLimit?","description":"dev.kord.rest.ratelimit.RequestResponse.rateLimit","location":"rest/dev.kord.rest.ratelimit/-request-response/rate-limit.html","searchKeys":["rateLimit","abstract val rateLimit: RateLimit?","dev.kord.rest.ratelimit.RequestResponse.rateLimit"]},{"name":"abstract val reset: Reset?","description":"dev.kord.rest.ratelimit.RequestResponse.reset","location":"rest/dev.kord.rest.ratelimit/-request-response/reset.html","searchKeys":["reset","abstract val reset: Reset?","dev.kord.rest.ratelimit.RequestResponse.reset"]},{"name":"abstract val route: Route<R>","description":"dev.kord.rest.request.Request.route","location":"rest/dev.kord.rest.request/-request/route.html","searchKeys":["route","abstract val route: Route<R>","dev.kord.rest.request.Request.route"]},{"name":"abstract val routeParams: Map<Route.Key, String>","description":"dev.kord.rest.request.Request.routeParams","location":"rest/dev.kord.rest.request/-request/route-params.html","searchKeys":["routeParams","abstract val routeParams: Map<Route.Key, String>","dev.kord.rest.request.Request.routeParams"]},{"name":"abstract val token: String","description":"dev.kord.rest.request.RequestHandler.token","location":"rest/dev.kord.rest.request/-request-handler/token.html","searchKeys":["token","abstract val token: String","dev.kord.rest.request.RequestHandler.token"]},{"name":"abstract val triggerType: AutoModerationRuleTriggerType?","description":"dev.kord.rest.builder.automoderation.AutoModerationRuleBuilder.triggerType","location":"rest/dev.kord.rest.builder.automoderation/-auto-moderation-rule-builder/trigger-type.html","searchKeys":["triggerType","abstract val triggerType: AutoModerationRuleTriggerType?","dev.kord.rest.builder.automoderation.AutoModerationRuleBuilder.triggerType"]},{"name":"abstract val type: ApplicationCommandType","description":"dev.kord.rest.builder.interaction.ApplicationCommandCreateBuilder.type","location":"rest/dev.kord.rest.builder.interaction/-application-command-create-builder/type.html","searchKeys":["type","abstract val type: ApplicationCommandType","dev.kord.rest.builder.interaction.ApplicationCommandCreateBuilder.type"]},{"name":"abstract val type: AutoModerationActionType","description":"dev.kord.rest.builder.automoderation.AutoModerationActionBuilder.type","location":"rest/dev.kord.rest.builder.automoderation/-auto-moderation-action-builder/type.html","searchKeys":["type","abstract val type: AutoModerationActionType","dev.kord.rest.builder.automoderation.AutoModerationActionBuilder.type"]},{"name":"abstract val value: Snowflake","description":"dev.kord.rest.route.Position.value","location":"rest/dev.kord.rest.route/-position/value.html","searchKeys":["value","abstract val value: Snowflake","dev.kord.rest.route.Position.value"]},{"name":"abstract var allowedKeywords: MutableList<String>?","description":"dev.kord.rest.builder.automoderation.KeywordPresetAutoModerationRuleBuilder.allowedKeywords","location":"rest/dev.kord.rest.builder.automoderation/-keyword-preset-auto-moderation-rule-builder/allowed-keywords.html","searchKeys":["allowedKeywords","abstract var allowedKeywords: MutableList<String>?","dev.kord.rest.builder.automoderation.KeywordPresetAutoModerationRuleBuilder.allowedKeywords"]},{"name":"abstract var allowedMentions: AllowedMentionsBuilder?","description":"dev.kord.rest.builder.message.create.MessageCreateBuilder.allowedMentions","location":"rest/dev.kord.rest.builder.message.create/-message-create-builder/allowed-mentions.html","searchKeys":["allowedMentions","abstract var allowedMentions: AllowedMentionsBuilder?","dev.kord.rest.builder.message.create.MessageCreateBuilder.allowedMentions"]},{"name":"abstract var allowedMentions: AllowedMentionsBuilder?","description":"dev.kord.rest.builder.message.modify.MessageModifyBuilder.allowedMentions","location":"rest/dev.kord.rest.builder.message.modify/-message-modify-builder/allowed-mentions.html","searchKeys":["allowedMentions","abstract var allowedMentions: AllowedMentionsBuilder?","dev.kord.rest.builder.message.modify.MessageModifyBuilder.allowedMentions"]},{"name":"abstract var attachments: MutableList<DiscordAttachment>?","description":"dev.kord.rest.builder.message.modify.MessageModifyBuilder.attachments","location":"rest/dev.kord.rest.builder.message.modify/-message-modify-builder/attachments.html","searchKeys":["attachments","abstract var attachments: MutableList<DiscordAttachment>?","dev.kord.rest.builder.message.modify.MessageModifyBuilder.attachments"]},{"name":"abstract var components: MutableList<MessageComponentBuilder>?","description":"dev.kord.rest.builder.message.modify.MessageModifyBuilder.components","location":"rest/dev.kord.rest.builder.message.modify/-message-modify-builder/components.html","searchKeys":["components","abstract var components: MutableList<MessageComponentBuilder>?","dev.kord.rest.builder.message.modify.MessageModifyBuilder.components"]},{"name":"abstract var content: String?","description":"dev.kord.rest.builder.message.create.MessageCreateBuilder.content","location":"rest/dev.kord.rest.builder.message.create/-message-create-builder/content.html","searchKeys":["content","abstract var content: String?","dev.kord.rest.builder.message.create.MessageCreateBuilder.content"]},{"name":"abstract var content: String?","description":"dev.kord.rest.builder.message.modify.MessageModifyBuilder.content","location":"rest/dev.kord.rest.builder.message.modify/-message-modify-builder/content.html","searchKeys":["content","abstract var content: String?","dev.kord.rest.builder.message.modify.MessageModifyBuilder.content"]},{"name":"abstract var defaultMemberPermissions: Permissions?","description":"dev.kord.rest.builder.interaction.ApplicationCommandCreateBuilder.defaultMemberPermissions","location":"rest/dev.kord.rest.builder.interaction/-application-command-create-builder/default-member-permissions.html","searchKeys":["defaultMemberPermissions","abstract var defaultMemberPermissions: Permissions?","dev.kord.rest.builder.interaction.ApplicationCommandCreateBuilder.defaultMemberPermissions"]},{"name":"abstract var defaultMemberPermissions: Permissions?","description":"dev.kord.rest.builder.interaction.ApplicationCommandModifyBuilder.defaultMemberPermissions","location":"rest/dev.kord.rest.builder.interaction/-application-command-modify-builder/default-member-permissions.html","searchKeys":["defaultMemberPermissions","abstract var defaultMemberPermissions: Permissions?","dev.kord.rest.builder.interaction.ApplicationCommandModifyBuilder.defaultMemberPermissions"]},{"name":"abstract var defaultPermission: Boolean?","description":"dev.kord.rest.builder.interaction.ApplicationCommandCreateBuilder.defaultPermission","location":"rest/dev.kord.rest.builder.interaction/-application-command-create-builder/default-permission.html","searchKeys":["defaultPermission","abstract var defaultPermission: Boolean?","dev.kord.rest.builder.interaction.ApplicationCommandCreateBuilder.defaultPermission"]},{"name":"abstract var defaultPermission: Boolean?","description":"dev.kord.rest.builder.interaction.ApplicationCommandModifyBuilder.defaultPermission","location":"rest/dev.kord.rest.builder.interaction/-application-command-modify-builder/default-permission.html","searchKeys":["defaultPermission","abstract var defaultPermission: Boolean?","dev.kord.rest.builder.interaction.ApplicationCommandModifyBuilder.defaultPermission"]},{"name":"abstract var descriptionLocalizations: MutableMap<Locale, String>?","description":"dev.kord.rest.builder.interaction.LocalizedDescriptionBuilder.descriptionLocalizations","location":"rest/dev.kord.rest.builder.interaction/-localized-description-builder/description-localizations.html","searchKeys":["descriptionLocalizations","abstract var descriptionLocalizations: MutableMap<Locale, String>?","dev.kord.rest.builder.interaction.LocalizedDescriptionBuilder.descriptionLocalizations"]},{"name":"abstract var dmPermission: Boolean?","description":"dev.kord.rest.builder.interaction.GlobalApplicationCommandCreateBuilder.dmPermission","location":"rest/dev.kord.rest.builder.interaction/-global-application-command-create-builder/dm-permission.html","searchKeys":["dmPermission","abstract var dmPermission: Boolean?","dev.kord.rest.builder.interaction.GlobalApplicationCommandCreateBuilder.dmPermission"]},{"name":"abstract var dmPermission: Boolean?","description":"dev.kord.rest.builder.interaction.GlobalApplicationCommandModifyBuilder.dmPermission","location":"rest/dev.kord.rest.builder.interaction/-global-application-command-modify-builder/dm-permission.html","searchKeys":["dmPermission","abstract var dmPermission: Boolean?","dev.kord.rest.builder.interaction.GlobalApplicationCommandModifyBuilder.dmPermission"]},{"name":"abstract var embeds: MutableList<EmbedBuilder>?","description":"dev.kord.rest.builder.message.modify.MessageModifyBuilder.embeds","location":"rest/dev.kord.rest.builder.message.modify/-message-modify-builder/embeds.html","searchKeys":["embeds","abstract var embeds: MutableList<EmbedBuilder>?","dev.kord.rest.builder.message.modify.MessageModifyBuilder.embeds"]},{"name":"abstract var enabled: Boolean?","description":"dev.kord.rest.builder.automoderation.AutoModerationRuleBuilder.enabled","location":"rest/dev.kord.rest.builder.automoderation/-auto-moderation-rule-builder/enabled.html","searchKeys":["enabled","abstract var enabled: Boolean?","dev.kord.rest.builder.automoderation.AutoModerationRuleBuilder.enabled"]},{"name":"abstract var exemptChannels: MutableList<Snowflake>?","description":"dev.kord.rest.builder.automoderation.AutoModerationRuleBuilder.exemptChannels","location":"rest/dev.kord.rest.builder.automoderation/-auto-moderation-rule-builder/exempt-channels.html","searchKeys":["exemptChannels","abstract var exemptChannels: MutableList<Snowflake>?","dev.kord.rest.builder.automoderation.AutoModerationRuleBuilder.exemptChannels"]},{"name":"abstract var exemptRoles: MutableList<Snowflake>?","description":"dev.kord.rest.builder.automoderation.AutoModerationRuleBuilder.exemptRoles","location":"rest/dev.kord.rest.builder.automoderation/-auto-moderation-rule-builder/exempt-roles.html","searchKeys":["exemptRoles","abstract var exemptRoles: MutableList<Snowflake>?","dev.kord.rest.builder.automoderation.AutoModerationRuleBuilder.exemptRoles"]},{"name":"abstract var files: MutableList<NamedFile>?","description":"dev.kord.rest.builder.message.modify.MessageModifyBuilder.files","location":"rest/dev.kord.rest.builder.message.modify/-message-modify-builder/files.html","searchKeys":["files","abstract var files: MutableList<NamedFile>?","dev.kord.rest.builder.message.modify.MessageModifyBuilder.files"]},{"name":"abstract var keywords: MutableList<String>?","description":"dev.kord.rest.builder.automoderation.KeywordAutoModerationRuleBuilder.keywords","location":"rest/dev.kord.rest.builder.automoderation/-keyword-auto-moderation-rule-builder/keywords.html","searchKeys":["keywords","abstract var keywords: MutableList<String>?","dev.kord.rest.builder.automoderation.KeywordAutoModerationRuleBuilder.keywords"]},{"name":"abstract var nameLocalizations: MutableMap<Locale, String>?","description":"dev.kord.rest.builder.interaction.LocalizedNameBuilder.nameLocalizations","location":"rest/dev.kord.rest.builder.interaction/-localized-name-builder/name-localizations.html","searchKeys":["nameLocalizations","abstract var nameLocalizations: MutableMap<Locale, String>?","dev.kord.rest.builder.interaction.LocalizedNameBuilder.nameLocalizations"]},{"name":"abstract var options: MutableList<OptionsBuilder>?","description":"dev.kord.rest.builder.interaction.BaseInputChatBuilder.options","location":"rest/dev.kord.rest.builder.interaction/-base-input-chat-builder/options.html","searchKeys":["options","abstract var options: MutableList<OptionsBuilder>?","dev.kord.rest.builder.interaction.BaseInputChatBuilder.options"]},{"name":"abstract var permissionOverwrites: MutableSet<Overwrite>","description":"dev.kord.rest.builder.channel.PermissionOverwritesCreateBuilder.permissionOverwrites","location":"rest/dev.kord.rest.builder.channel/-permission-overwrites-create-builder/permission-overwrites.html","searchKeys":["permissionOverwrites","abstract var permissionOverwrites: MutableSet<Overwrite>","dev.kord.rest.builder.channel.PermissionOverwritesCreateBuilder.permissionOverwrites"]},{"name":"abstract var permissionOverwrites: MutableSet<Overwrite>?","description":"dev.kord.rest.builder.channel.PermissionOverwritesModifyBuilder.permissionOverwrites","location":"rest/dev.kord.rest.builder.channel/-permission-overwrites-modify-builder/permission-overwrites.html","searchKeys":["permissionOverwrites","abstract var permissionOverwrites: MutableSet<Overwrite>?","dev.kord.rest.builder.channel.PermissionOverwritesModifyBuilder.permissionOverwrites"]},{"name":"abstract var reason: String?","description":"dev.kord.rest.builder.AuditBuilder.reason","location":"rest/dev.kord.rest.builder/-audit-builder/reason.html","searchKeys":["reason","abstract var reason: String?","dev.kord.rest.builder.AuditBuilder.reason"]},{"name":"abstract var regexPatterns: MutableList<String>?","description":"dev.kord.rest.builder.automoderation.KeywordAutoModerationRuleBuilder.regexPatterns","location":"rest/dev.kord.rest.builder.automoderation/-keyword-auto-moderation-rule-builder/regex-patterns.html","searchKeys":["regexPatterns","abstract var regexPatterns: MutableList<String>?","dev.kord.rest.builder.automoderation.KeywordAutoModerationRuleBuilder.regexPatterns"]},{"name":"abstract var tts: Boolean?","description":"dev.kord.rest.builder.message.create.MessageCreateBuilder.tts","location":"rest/dev.kord.rest.builder.message.create/-message-create-builder/tts.html","searchKeys":["tts","abstract var tts: Boolean?","dev.kord.rest.builder.message.create.MessageCreateBuilder.tts"]},{"name":"class ActionRowBuilder : MessageComponentBuilder","description":"dev.kord.rest.builder.component.ActionRowBuilder","location":"rest/dev.kord.rest.builder.component/-action-row-builder/index.html","searchKeys":["ActionRowBuilder","class ActionRowBuilder : MessageComponentBuilder","dev.kord.rest.builder.component.ActionRowBuilder"]},{"name":"class After(id: Snowflake) : Position.BeforeOrAfter","description":"dev.kord.rest.route.Position.After","location":"rest/dev.kord.rest.route/-position/-after/index.html","searchKeys":["After","class After(id: Snowflake) : Position.BeforeOrAfter","dev.kord.rest.route.Position.After"]},{"name":"class AllowedMentionsBuilder","description":"dev.kord.rest.builder.message.AllowedMentionsBuilder","location":"rest/dev.kord.rest.builder.message/-allowed-mentions-builder/index.html","searchKeys":["AllowedMentionsBuilder","class AllowedMentionsBuilder","dev.kord.rest.builder.message.AllowedMentionsBuilder"]},{"name":"class ApplicationService(handler: RequestHandler) : RestService","description":"dev.kord.rest.service.ApplicationService","location":"rest/dev.kord.rest.service/-application-service/index.html","searchKeys":["ApplicationService","class ApplicationService(handler: RequestHandler) : RestService","dev.kord.rest.service.ApplicationService"]},{"name":"class Around(id: Snowflake) : Position","description":"dev.kord.rest.route.Position.Around","location":"rest/dev.kord.rest.route/-position/-around/index.html","searchKeys":["Around","class Around(id: Snowflake) : Position","dev.kord.rest.route.Position.Around"]},{"name":"class AttachmentBuilder(var name: String, var description: String) : OptionsBuilder","description":"dev.kord.rest.builder.interaction.AttachmentBuilder","location":"rest/dev.kord.rest.builder.interaction/-attachment-builder/index.html","searchKeys":["AttachmentBuilder","class AttachmentBuilder(var name: String, var description: String) : OptionsBuilder","dev.kord.rest.builder.interaction.AttachmentBuilder"]},{"name":"class AuditLogGetRequestBuilder : RequestBuilder<AuditLogGetRequest> ","description":"dev.kord.rest.builder.auditlog.AuditLogGetRequestBuilder","location":"rest/dev.kord.rest.builder.auditlog/-audit-log-get-request-builder/index.html","searchKeys":["AuditLogGetRequestBuilder","class AuditLogGetRequestBuilder : RequestBuilder<AuditLogGetRequest> ","dev.kord.rest.builder.auditlog.AuditLogGetRequestBuilder"]},{"name":"class AuditLogService(requestHandler: RequestHandler) : RestService","description":"dev.kord.rest.service.AuditLogService","location":"rest/dev.kord.rest.service/-audit-log-service/index.html","searchKeys":["AuditLogService","class AuditLogService(requestHandler: RequestHandler) : RestService","dev.kord.rest.service.AuditLogService"]},{"name":"class Author : RequestBuilder<EmbedAuthorRequest> ","description":"dev.kord.rest.builder.message.EmbedBuilder.Author","location":"rest/dev.kord.rest.builder.message/-embed-builder/-author/index.html","searchKeys":["Author","class Author : RequestBuilder<EmbedAuthorRequest> ","dev.kord.rest.builder.message.EmbedBuilder.Author"]},{"name":"class AutoModerationService(requestHandler: RequestHandler) : RestService","description":"dev.kord.rest.service.AutoModerationService","location":"rest/dev.kord.rest.service/-auto-moderation-service/index.html","searchKeys":["AutoModerationService","class AutoModerationService(requestHandler: RequestHandler) : RestService","dev.kord.rest.service.AutoModerationService"]},{"name":"class BanCreateBuilder : AuditRequestBuilder<GuildBanCreateRequest> ","description":"dev.kord.rest.builder.ban.BanCreateBuilder","location":"rest/dev.kord.rest.builder.ban/-ban-create-builder/index.html","searchKeys":["BanCreateBuilder","class BanCreateBuilder : AuditRequestBuilder<GuildBanCreateRequest> ","dev.kord.rest.builder.ban.BanCreateBuilder"]},{"name":"class Before(id: Snowflake) : Position.BeforeOrAfter","description":"dev.kord.rest.route.Position.Before","location":"rest/dev.kord.rest.route/-position/-before/index.html","searchKeys":["Before","class Before(id: Snowflake) : Position.BeforeOrAfter","dev.kord.rest.route.Position.Before"]},{"name":"class BlockMessageAutoModerationActionBuilder : AutoModerationActionBuilder","description":"dev.kord.rest.builder.automoderation.BlockMessageAutoModerationActionBuilder","location":"rest/dev.kord.rest.builder.automoderation/-block-message-auto-moderation-action-builder/index.html","searchKeys":["BlockMessageAutoModerationActionBuilder","class BlockMessageAutoModerationActionBuilder : AutoModerationActionBuilder","dev.kord.rest.builder.automoderation.BlockMessageAutoModerationActionBuilder"]},{"name":"class BooleanBuilder(var name: String, var description: String) : OptionsBuilder","description":"dev.kord.rest.builder.interaction.BooleanBuilder","location":"rest/dev.kord.rest.builder.interaction/-boolean-builder/index.html","searchKeys":["BooleanBuilder","class BooleanBuilder(var name: String, var description: String) : OptionsBuilder","dev.kord.rest.builder.interaction.BooleanBuilder"]},{"name":"class CategoryCreateBuilder(var name: String) : PermissionOverwritesCreateBuilder, AuditRequestBuilder<GuildChannelCreateRequest> ","description":"dev.kord.rest.builder.channel.CategoryCreateBuilder","location":"rest/dev.kord.rest.builder.channel/-category-create-builder/index.html","searchKeys":["CategoryCreateBuilder","class CategoryCreateBuilder(var name: String) : PermissionOverwritesCreateBuilder, AuditRequestBuilder<GuildChannelCreateRequest> ","dev.kord.rest.builder.channel.CategoryCreateBuilder"]},{"name":"class CategoryModifyBuilder : PermissionOverwritesModifyBuilder, AuditRequestBuilder<ChannelModifyPatchRequest> ","description":"dev.kord.rest.builder.channel.CategoryModifyBuilder","location":"rest/dev.kord.rest.builder.channel/-category-modify-builder/index.html","searchKeys":["CategoryModifyBuilder","class CategoryModifyBuilder : PermissionOverwritesModifyBuilder, AuditRequestBuilder<ChannelModifyPatchRequest> ","dev.kord.rest.builder.channel.CategoryModifyBuilder"]},{"name":"class CdnUrl(rawAssetUri: String)","description":"dev.kord.rest.route.CdnUrl","location":"rest/dev.kord.rest.route/-cdn-url/index.html","searchKeys":["CdnUrl","class CdnUrl(rawAssetUri: String)","dev.kord.rest.route.CdnUrl"]},{"name":"class ChannelBuilder(var name: String, var description: String) : OptionsBuilder","description":"dev.kord.rest.builder.interaction.ChannelBuilder","location":"rest/dev.kord.rest.builder.interaction/-channel-builder/index.html","searchKeys":["ChannelBuilder","class ChannelBuilder(var name: String, var description: String) : OptionsBuilder","dev.kord.rest.builder.interaction.ChannelBuilder"]},{"name":"class ChannelPermissionModifyBuilder(type: OverwriteType) : AuditRequestBuilder<ChannelPermissionEditRequest> ","description":"dev.kord.rest.builder.channel.ChannelPermissionModifyBuilder","location":"rest/dev.kord.rest.builder.channel/-channel-permission-modify-builder/index.html","searchKeys":["ChannelPermissionModifyBuilder","class ChannelPermissionModifyBuilder(type: OverwriteType) : AuditRequestBuilder<ChannelPermissionEditRequest> ","dev.kord.rest.builder.channel.ChannelPermissionModifyBuilder"]},{"name":"class ChannelService(requestHandler: RequestHandler) : RestService","description":"dev.kord.rest.service.ChannelService","location":"rest/dev.kord.rest.service/-channel-service/index.html","searchKeys":["ChannelService","class ChannelService(requestHandler: RequestHandler) : RestService","dev.kord.rest.service.ChannelService"]},{"name":"class ChoiceLocalizationsBuilder(var name: String) : LocalizedNameCreateBuilder","description":"dev.kord.rest.builder.interaction.ChoiceLocalizationsBuilder","location":"rest/dev.kord.rest.builder.interaction/-choice-localizations-builder/index.html","searchKeys":["ChoiceLocalizationsBuilder","class ChoiceLocalizationsBuilder(var name: String) : LocalizedNameCreateBuilder","dev.kord.rest.builder.interaction.ChoiceLocalizationsBuilder"]},{"name":"class CurrentUserModifyBuilder : RequestBuilder<CurrentUserModifyRequest> ","description":"dev.kord.rest.builder.user.CurrentUserModifyBuilder","location":"rest/dev.kord.rest.builder.user/-current-user-modify-builder/index.html","searchKeys":["CurrentUserModifyBuilder","class CurrentUserModifyBuilder : RequestBuilder<CurrentUserModifyRequest> ","dev.kord.rest.builder.user.CurrentUserModifyBuilder"]},{"name":"class CurrentVoiceStateModifyBuilder : RequestBuilder<CurrentVoiceStateModifyRequest> ","description":"dev.kord.rest.builder.guild.CurrentVoiceStateModifyBuilder","location":"rest/dev.kord.rest.builder.guild/-current-voice-state-modify-builder/index.html","searchKeys":["CurrentVoiceStateModifyBuilder","class CurrentVoiceStateModifyBuilder : RequestBuilder<CurrentVoiceStateModifyRequest> ","dev.kord.rest.builder.guild.CurrentVoiceStateModifyBuilder"]},{"name":"class EmbedBuilder : RequestBuilder<EmbedRequest> ","description":"dev.kord.rest.builder.message.EmbedBuilder","location":"rest/dev.kord.rest.builder.message/-embed-builder/index.html","searchKeys":["EmbedBuilder","class EmbedBuilder : RequestBuilder<EmbedRequest> ","dev.kord.rest.builder.message.EmbedBuilder"]},{"name":"class EmojiCreateBuilder(var name: String, var image: Image) : AuditRequestBuilder<EmojiCreateRequest> ","description":"dev.kord.rest.builder.guild.EmojiCreateBuilder","location":"rest/dev.kord.rest.builder.guild/-emoji-create-builder/index.html","searchKeys":["EmojiCreateBuilder","class EmojiCreateBuilder(var name: String, var image: Image) : AuditRequestBuilder<EmojiCreateRequest> ","dev.kord.rest.builder.guild.EmojiCreateBuilder"]},{"name":"class EmojiModifyBuilder : AuditRequestBuilder<EmojiModifyRequest> ","description":"dev.kord.rest.builder.guild.EmojiModifyBuilder","location":"rest/dev.kord.rest.builder.guild/-emoji-modify-builder/index.html","searchKeys":["EmojiModifyBuilder","class EmojiModifyBuilder : AuditRequestBuilder<EmojiModifyRequest> ","dev.kord.rest.builder.guild.EmojiModifyBuilder"]},{"name":"class EmojiService(requestHandler: RequestHandler) : RestService","description":"dev.kord.rest.service.EmojiService","location":"rest/dev.kord.rest.service/-emoji-service/index.html","searchKeys":["EmojiService","class EmojiService(requestHandler: RequestHandler) : RestService","dev.kord.rest.service.EmojiService"]},{"name":"class ExclusionRequestRateLimiter(val clock: Clock = Clock.System) : AbstractRateLimiter","description":"dev.kord.rest.ratelimit.ExclusionRequestRateLimiter","location":"rest/dev.kord.rest.ratelimit/-exclusion-request-rate-limiter/index.html","searchKeys":["ExclusionRequestRateLimiter","class ExclusionRequestRateLimiter(val clock: Clock = Clock.System) : AbstractRateLimiter","dev.kord.rest.ratelimit.ExclusionRequestRateLimiter"]},{"name":"class Field : RequestBuilder<EmbedFieldRequest> ","description":"dev.kord.rest.builder.message.EmbedBuilder.Field","location":"rest/dev.kord.rest.builder.message/-embed-builder/-field/index.html","searchKeys":["Field","class Field : RequestBuilder<EmbedFieldRequest> ","dev.kord.rest.builder.message.EmbedBuilder.Field"]},{"name":"class FollowupMessageCreateBuilder(val ephemeral: Boolean) : MessageCreateBuilder, RequestBuilder<MultipartFollowupMessageCreateRequest> ","description":"dev.kord.rest.builder.message.create.FollowupMessageCreateBuilder","location":"rest/dev.kord.rest.builder.message.create/-followup-message-create-builder/index.html","searchKeys":["FollowupMessageCreateBuilder","class FollowupMessageCreateBuilder(val ephemeral: Boolean) : MessageCreateBuilder, RequestBuilder<MultipartFollowupMessageCreateRequest> ","dev.kord.rest.builder.message.create.FollowupMessageCreateBuilder"]},{"name":"class FollowupMessageModifyBuilder : MessageModifyBuilder, RequestBuilder<MultipartFollowupMessageModifyRequest> ","description":"dev.kord.rest.builder.message.modify.FollowupMessageModifyBuilder","location":"rest/dev.kord.rest.builder.message.modify/-followup-message-modify-builder/index.html","searchKeys":["FollowupMessageModifyBuilder","class FollowupMessageModifyBuilder : MessageModifyBuilder, RequestBuilder<MultipartFollowupMessageModifyRequest> ","dev.kord.rest.builder.message.modify.FollowupMessageModifyBuilder"]},{"name":"class Footer : RequestBuilder<EmbedFooterRequest> ","description":"dev.kord.rest.builder.message.EmbedBuilder.Footer","location":"rest/dev.kord.rest.builder.message/-embed-builder/-footer/index.html","searchKeys":["Footer","class Footer : RequestBuilder<EmbedFooterRequest> ","dev.kord.rest.builder.message.EmbedBuilder.Footer"]},{"name":"class GlobalMultiApplicationCommandBuilder : MultiApplicationCommandBuilder","description":"dev.kord.rest.builder.interaction.GlobalMultiApplicationCommandBuilder","location":"rest/dev.kord.rest.builder.interaction/-global-multi-application-command-builder/index.html","searchKeys":["GlobalMultiApplicationCommandBuilder","class GlobalMultiApplicationCommandBuilder : MultiApplicationCommandBuilder","dev.kord.rest.builder.interaction.GlobalMultiApplicationCommandBuilder"]},{"name":"class GroupCommandBuilder(var name: String, var description: String) : BaseCommandOptionBuilder","description":"dev.kord.rest.builder.interaction.GroupCommandBuilder","location":"rest/dev.kord.rest.builder.interaction/-group-command-builder/index.html","searchKeys":["GroupCommandBuilder","class GroupCommandBuilder(var name: String, var description: String) : BaseCommandOptionBuilder","dev.kord.rest.builder.interaction.GroupCommandBuilder"]},{"name":"class GroupDMCreateBuilder : RequestBuilder<GroupDMCreateRequest> ","description":"dev.kord.rest.builder.user.GroupDMCreateBuilder","location":"rest/dev.kord.rest.builder.user/-group-d-m-create-builder/index.html","searchKeys":["GroupDMCreateBuilder","class GroupDMCreateBuilder : RequestBuilder<GroupDMCreateRequest> ","dev.kord.rest.builder.user.GroupDMCreateBuilder"]},{"name":"class GuildChannelPositionModifyBuilder : RequestBuilder<GuildChannelPositionModifyRequest> ","description":"dev.kord.rest.builder.channel.GuildChannelPositionModifyBuilder","location":"rest/dev.kord.rest.builder.channel/-guild-channel-position-modify-builder/index.html","searchKeys":["GuildChannelPositionModifyBuilder","class GuildChannelPositionModifyBuilder : RequestBuilder<GuildChannelPositionModifyRequest> ","dev.kord.rest.builder.channel.GuildChannelPositionModifyBuilder"]},{"name":"class GuildChannelSwapBuilder(var channelId: Snowflake)","description":"dev.kord.rest.builder.channel.GuildChannelSwapBuilder","location":"rest/dev.kord.rest.builder.channel/-guild-channel-swap-builder/index.html","searchKeys":["GuildChannelSwapBuilder","class GuildChannelSwapBuilder(var channelId: Snowflake)","dev.kord.rest.builder.channel.GuildChannelSwapBuilder"]},{"name":"class GuildCreateBuilder(var name: String) : RequestBuilder<GuildCreateRequest> ","description":"dev.kord.rest.builder.guild.GuildCreateBuilder","location":"rest/dev.kord.rest.builder.guild/-guild-create-builder/index.html","searchKeys":["GuildCreateBuilder","class GuildCreateBuilder(var name: String) : RequestBuilder<GuildCreateRequest> ","dev.kord.rest.builder.guild.GuildCreateBuilder"]},{"name":"class GuildFromTemplateCreateBuilder(var name: String) : RequestBuilder<GuildFromTemplateCreateRequest> ","description":"dev.kord.rest.builder.template.GuildFromTemplateCreateBuilder","location":"rest/dev.kord.rest.builder.template/-guild-from-template-create-builder/index.html","searchKeys":["GuildFromTemplateCreateBuilder","class GuildFromTemplateCreateBuilder(var name: String) : RequestBuilder<GuildFromTemplateCreateRequest> ","dev.kord.rest.builder.template.GuildFromTemplateCreateBuilder"]},{"name":"class GuildModifyBuilder : AuditRequestBuilder<GuildModifyRequest> ","description":"dev.kord.rest.builder.guild.GuildModifyBuilder","location":"rest/dev.kord.rest.builder.guild/-guild-modify-builder/index.html","searchKeys":["GuildModifyBuilder","class GuildModifyBuilder : AuditRequestBuilder<GuildModifyRequest> ","dev.kord.rest.builder.guild.GuildModifyBuilder"]},{"name":"class GuildMultiApplicationCommandBuilder : MultiApplicationCommandBuilder","description":"dev.kord.rest.builder.interaction.GuildMultiApplicationCommandBuilder","location":"rest/dev.kord.rest.builder.interaction/-guild-multi-application-command-builder/index.html","searchKeys":["GuildMultiApplicationCommandBuilder","class GuildMultiApplicationCommandBuilder : MultiApplicationCommandBuilder","dev.kord.rest.builder.interaction.GuildMultiApplicationCommandBuilder"]},{"name":"class GuildService(requestHandler: RequestHandler) : RestService","description":"dev.kord.rest.service.GuildService","location":"rest/dev.kord.rest.service/-guild-service/index.html","searchKeys":["GuildService","class GuildService(requestHandler: RequestHandler) : RestService","dev.kord.rest.service.GuildService"]},{"name":"class GuildTemplateCreateBuilder(var name: String) : RequestBuilder<GuildTemplateCreateRequest> ","description":"dev.kord.rest.builder.template.GuildTemplateCreateBuilder","location":"rest/dev.kord.rest.builder.template/-guild-template-create-builder/index.html","searchKeys":["GuildTemplateCreateBuilder","class GuildTemplateCreateBuilder(var name: String) : RequestBuilder<GuildTemplateCreateRequest> ","dev.kord.rest.builder.template.GuildTemplateCreateBuilder"]},{"name":"class GuildTemplateModifyBuilder : RequestBuilder<GuildTemplateModifyRequest> ","description":"dev.kord.rest.builder.template.GuildTemplateModifyBuilder","location":"rest/dev.kord.rest.builder.template/-guild-template-modify-builder/index.html","searchKeys":["GuildTemplateModifyBuilder","class GuildTemplateModifyBuilder : RequestBuilder<GuildTemplateModifyRequest> ","dev.kord.rest.builder.template.GuildTemplateModifyBuilder"]},{"name":"class GuildWidgetModifyBuilder : AuditRequestBuilder<GuildWidgetModifyRequest> ","description":"dev.kord.rest.builder.guild.GuildWidgetModifyBuilder","location":"rest/dev.kord.rest.builder.guild/-guild-widget-modify-builder/index.html","searchKeys":["GuildWidgetModifyBuilder","class GuildWidgetModifyBuilder : AuditRequestBuilder<GuildWidgetModifyRequest> ","dev.kord.rest.builder.guild.GuildWidgetModifyBuilder"]},{"name":"class Image","description":"dev.kord.rest.Image","location":"rest/dev.kord.rest/-image/index.html","searchKeys":["Image","class Image","dev.kord.rest.Image"]},{"name":"class IntegerOptionBuilder(name: String, description: String) : NumericOptionBuilder<Long> ","description":"dev.kord.rest.builder.interaction.IntegerOptionBuilder","location":"rest/dev.kord.rest.builder.interaction/-integer-option-builder/index.html","searchKeys":["IntegerOptionBuilder","class IntegerOptionBuilder(name: String, description: String) : NumericOptionBuilder<Long> ","dev.kord.rest.builder.interaction.IntegerOptionBuilder"]},{"name":"class IntegrationModifyBuilder : AuditRequestBuilder<GuildIntegrationModifyRequest> ","description":"dev.kord.rest.builder.integration.IntegrationModifyBuilder","location":"rest/dev.kord.rest.builder.integration/-integration-modify-builder/index.html","searchKeys":["IntegrationModifyBuilder","class IntegrationModifyBuilder : AuditRequestBuilder<GuildIntegrationModifyRequest> ","dev.kord.rest.builder.integration.IntegrationModifyBuilder"]},{"name":"class InteractionButtonBuilder(var style: ButtonStyle, var customId: String) : ButtonBuilder","description":"dev.kord.rest.builder.component.ButtonBuilder.InteractionButtonBuilder","location":"rest/dev.kord.rest.builder.component/-button-builder/-interaction-button-builder/index.html","searchKeys":["InteractionButtonBuilder","class InteractionButtonBuilder(var style: ButtonStyle, var customId: String) : ButtonBuilder","dev.kord.rest.builder.component.ButtonBuilder.InteractionButtonBuilder"]},{"name":"class InteractionResponseCreateBuilder(val ephemeral: Boolean = false) : MessageCreateBuilder, RequestBuilder<MultipartInteractionResponseCreateRequest> ","description":"dev.kord.rest.builder.message.create.InteractionResponseCreateBuilder","location":"rest/dev.kord.rest.builder.message.create/-interaction-response-create-builder/index.html","searchKeys":["InteractionResponseCreateBuilder","class InteractionResponseCreateBuilder(val ephemeral: Boolean = false) : MessageCreateBuilder, RequestBuilder<MultipartInteractionResponseCreateRequest> ","dev.kord.rest.builder.message.create.InteractionResponseCreateBuilder"]},{"name":"class InteractionResponseModifyBuilder : MessageModifyBuilder, RequestBuilder<MultipartInteractionResponseModifyRequest> ","description":"dev.kord.rest.builder.message.modify.InteractionResponseModifyBuilder","location":"rest/dev.kord.rest.builder.message.modify/-interaction-response-modify-builder/index.html","searchKeys":["InteractionResponseModifyBuilder","class InteractionResponseModifyBuilder : MessageModifyBuilder, RequestBuilder<MultipartInteractionResponseModifyRequest> ","dev.kord.rest.builder.message.modify.InteractionResponseModifyBuilder"]},{"name":"class InteractionService(requestHandler: RequestHandler) : RestService","description":"dev.kord.rest.service.InteractionService","location":"rest/dev.kord.rest.service/-interaction-service/index.html","searchKeys":["InteractionService","class InteractionService(requestHandler: RequestHandler) : RestService","dev.kord.rest.service.InteractionService"]},{"name":"class InviteCreateBuilder : AuditRequestBuilder<InviteCreateRequest> ","description":"dev.kord.rest.builder.channel.InviteCreateBuilder","location":"rest/dev.kord.rest.builder.channel/-invite-create-builder/index.html","searchKeys":["InviteCreateBuilder","class InviteCreateBuilder : AuditRequestBuilder<InviteCreateRequest> ","dev.kord.rest.builder.channel.InviteCreateBuilder"]},{"name":"class InviteService(requestHandler: RequestHandler) : RestService","description":"dev.kord.rest.service.InviteService","location":"rest/dev.kord.rest.service/-invite-service/index.html","searchKeys":["InviteService","class InviteService(requestHandler: RequestHandler) : RestService","dev.kord.rest.service.InviteService"]},{"name":"class JsonRequest<B : Any, R>(val route: Route<R>, val routeParams: Map<Route.Key, String>, val parameters: StringValues, val headers: StringValues, val body: RequestBody<B>?, baseUrl: String = Route.baseUrl) : Request<B, R> ","description":"dev.kord.rest.request.JsonRequest","location":"rest/dev.kord.rest.request/-json-request/index.html","searchKeys":["JsonRequest","class JsonRequest<B : Any, R>(val route: Route<R>, val routeParams: Map<Route.Key, String>, val parameters: StringValues, val headers: StringValues, val body: RequestBody<B>?, baseUrl: String = Route.baseUrl) : Request<B, R> ","dev.kord.rest.request.JsonRequest"]},{"name":"class KeywordAutoModerationRuleCreateBuilder(var name: String, var eventType: AutoModerationRuleEventType) : AutoModerationRuleCreateBuilder, KeywordAutoModerationRuleBuilder","description":"dev.kord.rest.builder.automoderation.KeywordAutoModerationRuleCreateBuilder","location":"rest/dev.kord.rest.builder.automoderation/-keyword-auto-moderation-rule-create-builder/index.html","searchKeys":["KeywordAutoModerationRuleCreateBuilder","class KeywordAutoModerationRuleCreateBuilder(var name: String, var eventType: AutoModerationRuleEventType) : AutoModerationRuleCreateBuilder, KeywordAutoModerationRuleBuilder","dev.kord.rest.builder.automoderation.KeywordAutoModerationRuleCreateBuilder"]},{"name":"class KeywordAutoModerationRuleModifyBuilder : AutoModerationRuleModifyBuilder, KeywordAutoModerationRuleBuilder","description":"dev.kord.rest.builder.automoderation.KeywordAutoModerationRuleModifyBuilder","location":"rest/dev.kord.rest.builder.automoderation/-keyword-auto-moderation-rule-modify-builder/index.html","searchKeys":["KeywordAutoModerationRuleModifyBuilder","class KeywordAutoModerationRuleModifyBuilder : AutoModerationRuleModifyBuilder, KeywordAutoModerationRuleBuilder","dev.kord.rest.builder.automoderation.KeywordAutoModerationRuleModifyBuilder"]},{"name":"class KeywordPresetAutoModerationRuleCreateBuilder(var name: String, var eventType: AutoModerationRuleEventType) : AutoModerationRuleCreateBuilder, KeywordPresetAutoModerationRuleBuilder","description":"dev.kord.rest.builder.automoderation.KeywordPresetAutoModerationRuleCreateBuilder","location":"rest/dev.kord.rest.builder.automoderation/-keyword-preset-auto-moderation-rule-create-builder/index.html","searchKeys":["KeywordPresetAutoModerationRuleCreateBuilder","class KeywordPresetAutoModerationRuleCreateBuilder(var name: String, var eventType: AutoModerationRuleEventType) : AutoModerationRuleCreateBuilder, KeywordPresetAutoModerationRuleBuilder","dev.kord.rest.builder.automoderation.KeywordPresetAutoModerationRuleCreateBuilder"]},{"name":"class KeywordPresetAutoModerationRuleModifyBuilder : AutoModerationRuleModifyBuilder, KeywordPresetAutoModerationRuleBuilder","description":"dev.kord.rest.builder.automoderation.KeywordPresetAutoModerationRuleModifyBuilder","location":"rest/dev.kord.rest.builder.automoderation/-keyword-preset-auto-moderation-rule-modify-builder/index.html","searchKeys":["KeywordPresetAutoModerationRuleModifyBuilder","class KeywordPresetAutoModerationRuleModifyBuilder : AutoModerationRuleModifyBuilder, KeywordPresetAutoModerationRuleBuilder","dev.kord.rest.builder.automoderation.KeywordPresetAutoModerationRuleModifyBuilder"]},{"name":"class KtorRequestException(val httpResponse: HttpResponse, val request: Request<*, *>, discordError: DiscordErrorResponse?) : RestRequestException","description":"dev.kord.rest.request.KtorRequestException","location":"rest/dev.kord.rest.request/-ktor-request-exception/index.html","searchKeys":["KtorRequestException","class KtorRequestException(val httpResponse: HttpResponse, val request: Request<*, *>, discordError: DiscordErrorResponse?) : RestRequestException","dev.kord.rest.request.KtorRequestException"]},{"name":"class KtorRequestHandler(client: HttpClient, requestRateLimiter: RequestRateLimiter = ExclusionRequestRateLimiter(), clock: Clock = Clock.System, parser: Json = jsonDefault, val token: String) : RequestHandler","description":"dev.kord.rest.request.KtorRequestHandler","location":"rest/dev.kord.rest.request/-ktor-request-handler/index.html","searchKeys":["KtorRequestHandler","class KtorRequestHandler(client: HttpClient, requestRateLimiter: RequestRateLimiter = ExclusionRequestRateLimiter(), clock: Clock = Clock.System, parser: Json = jsonDefault, val token: String) : RequestHandler","dev.kord.rest.request.KtorRequestHandler"]},{"name":"class LinkButtonBuilder(var url: String) : ButtonBuilder","description":"dev.kord.rest.builder.component.ButtonBuilder.LinkButtonBuilder","location":"rest/dev.kord.rest.builder.component/-button-builder/-link-button-builder/index.html","searchKeys":["LinkButtonBuilder","class LinkButtonBuilder(var url: String) : ButtonBuilder","dev.kord.rest.builder.component.ButtonBuilder.LinkButtonBuilder"]},{"name":"class MemberAddBuilder(var token: String) : RequestBuilder<GuildMemberAddRequest> ","description":"dev.kord.rest.builder.member.MemberAddBuilder","location":"rest/dev.kord.rest.builder.member/-member-add-builder/index.html","searchKeys":["MemberAddBuilder","class MemberAddBuilder(var token: String) : RequestBuilder<GuildMemberAddRequest> ","dev.kord.rest.builder.member.MemberAddBuilder"]},{"name":"class MemberModifyBuilder : AuditRequestBuilder<GuildMemberModifyRequest> ","description":"dev.kord.rest.builder.member.MemberModifyBuilder","location":"rest/dev.kord.rest.builder.member/-member-modify-builder/index.html","searchKeys":["MemberModifyBuilder","class MemberModifyBuilder : AuditRequestBuilder<GuildMemberModifyRequest> ","dev.kord.rest.builder.member.MemberModifyBuilder"]},{"name":"class MentionSpamAutoModerationRuleCreateBuilder(var name: String, var eventType: AutoModerationRuleEventType, var mentionLimit: Int) : AutoModerationRuleCreateBuilder, MentionSpamAutoModerationRuleBuilder","description":"dev.kord.rest.builder.automoderation.MentionSpamAutoModerationRuleCreateBuilder","location":"rest/dev.kord.rest.builder.automoderation/-mention-spam-auto-moderation-rule-create-builder/index.html","searchKeys":["MentionSpamAutoModerationRuleCreateBuilder","class MentionSpamAutoModerationRuleCreateBuilder(var name: String, var eventType: AutoModerationRuleEventType, var mentionLimit: Int) : AutoModerationRuleCreateBuilder, MentionSpamAutoModerationRuleBuilder","dev.kord.rest.builder.automoderation.MentionSpamAutoModerationRuleCreateBuilder"]},{"name":"class MentionSpamAutoModerationRuleModifyBuilder : AutoModerationRuleModifyBuilder, MentionSpamAutoModerationRuleBuilder","description":"dev.kord.rest.builder.automoderation.MentionSpamAutoModerationRuleModifyBuilder","location":"rest/dev.kord.rest.builder.automoderation/-mention-spam-auto-moderation-rule-modify-builder/index.html","searchKeys":["MentionSpamAutoModerationRuleModifyBuilder","class MentionSpamAutoModerationRuleModifyBuilder : AutoModerationRuleModifyBuilder, MentionSpamAutoModerationRuleBuilder","dev.kord.rest.builder.automoderation.MentionSpamAutoModerationRuleModifyBuilder"]},{"name":"class MentionableBuilder(var name: String, var description: String) : OptionsBuilder","description":"dev.kord.rest.builder.interaction.MentionableBuilder","location":"rest/dev.kord.rest.builder.interaction/-mentionable-builder/index.html","searchKeys":["MentionableBuilder","class MentionableBuilder(var name: String, var description: String) : OptionsBuilder","dev.kord.rest.builder.interaction.MentionableBuilder"]},{"name":"class ModalBuilder(var title: String, var customId: String) : RequestBuilder<DiscordModal> ","description":"dev.kord.rest.builder.interaction.ModalBuilder","location":"rest/dev.kord.rest.builder.interaction/-modal-builder/index.html","searchKeys":["ModalBuilder","class ModalBuilder(var title: String, var customId: String) : RequestBuilder<DiscordModal> ","dev.kord.rest.builder.interaction.ModalBuilder"]},{"name":"class MultipartRequest<B : Any, R>(val route: Route<R>, val routeParams: Map<Route.Key, String>, val parameters: StringValues, val headers: StringValues, val body: RequestBody<B>?, val files: List<NamedFile> = emptyList(), baseUrl: String = Route.baseUrl) : Request<B, R> ","description":"dev.kord.rest.request.MultipartRequest","location":"rest/dev.kord.rest.request/-multipart-request/index.html","searchKeys":["MultipartRequest","class MultipartRequest<B : Any, R>(val route: Route<R>, val routeParams: Map<Route.Key, String>, val parameters: StringValues, val headers: StringValues, val body: RequestBody<B>?, val files: List<NamedFile> = emptyList(), baseUrl: String = Route.baseUrl) : Request<B, R> ","dev.kord.rest.request.MultipartRequest"]},{"name":"class NamedFile(val name: String, val contentProvider: ChannelProvider)","description":"dev.kord.rest.NamedFile","location":"rest/dev.kord.rest/-named-file/index.html","searchKeys":["NamedFile","class NamedFile(val name: String, val contentProvider: ChannelProvider)","dev.kord.rest.NamedFile"]},{"name":"class NewsChannelCreateBuilder(var name: String) : PermissionOverwritesCreateBuilder, AuditRequestBuilder<GuildChannelCreateRequest> ","description":"dev.kord.rest.builder.channel.NewsChannelCreateBuilder","location":"rest/dev.kord.rest.builder.channel/-news-channel-create-builder/index.html","searchKeys":["NewsChannelCreateBuilder","class NewsChannelCreateBuilder(var name: String) : PermissionOverwritesCreateBuilder, AuditRequestBuilder<GuildChannelCreateRequest> ","dev.kord.rest.builder.channel.NewsChannelCreateBuilder"]},{"name":"class NewsChannelModifyBuilder : PermissionOverwritesModifyBuilder, AuditRequestBuilder<ChannelModifyPatchRequest> ","description":"dev.kord.rest.builder.channel.NewsChannelModifyBuilder","location":"rest/dev.kord.rest.builder.channel/-news-channel-modify-builder/index.html","searchKeys":["NewsChannelModifyBuilder","class NewsChannelModifyBuilder : PermissionOverwritesModifyBuilder, AuditRequestBuilder<ChannelModifyPatchRequest> ","dev.kord.rest.builder.channel.NewsChannelModifyBuilder"]},{"name":"class NumberOptionBuilder(name: String, description: String) : NumericOptionBuilder<Double> ","description":"dev.kord.rest.builder.interaction.NumberOptionBuilder","location":"rest/dev.kord.rest.builder.interaction/-number-option-builder/index.html","searchKeys":["NumberOptionBuilder","class NumberOptionBuilder(name: String, description: String) : NumericOptionBuilder<Double> ","dev.kord.rest.builder.interaction.NumberOptionBuilder"]},{"name":"class ParallelRequestRateLimiter(val clock: Clock = Clock.System) : AbstractRateLimiter","description":"dev.kord.rest.ratelimit.ParallelRequestRateLimiter","location":"rest/dev.kord.rest.ratelimit/-parallel-request-rate-limiter/index.html","searchKeys":["ParallelRequestRateLimiter","class ParallelRequestRateLimiter(val clock: Clock = Clock.System) : AbstractRateLimiter","dev.kord.rest.ratelimit.ParallelRequestRateLimiter"]},{"name":"class PermissionOverwriteBuilder(type: OverwriteType, id: Snowflake)","description":"dev.kord.rest.builder.channel.PermissionOverwriteBuilder","location":"rest/dev.kord.rest.builder.channel/-permission-overwrite-builder/index.html","searchKeys":["PermissionOverwriteBuilder","class PermissionOverwriteBuilder(type: OverwriteType, id: Snowflake)","dev.kord.rest.builder.channel.PermissionOverwriteBuilder"]},{"name":"class RequestBuilder<T>(val route: Route<T>, keySize: Int = 2)","description":"dev.kord.rest.request.RequestBuilder","location":"rest/dev.kord.rest.request/-request-builder/index.html","searchKeys":["RequestBuilder","class RequestBuilder<T>(val route: Route<T>, keySize: Int = 2)","dev.kord.rest.request.RequestBuilder"]},{"name":"class RestClient(requestHandler: RequestHandler) : RestService","description":"dev.kord.rest.service.RestClient","location":"rest/dev.kord.rest.service/-rest-client/index.html","searchKeys":["RestClient","class RestClient(requestHandler: RequestHandler) : RestService","dev.kord.rest.service.RestClient"]},{"name":"class RoleBuilder(var name: String, var description: String) : OptionsBuilder","description":"dev.kord.rest.builder.interaction.RoleBuilder","location":"rest/dev.kord.rest.builder.interaction/-role-builder/index.html","searchKeys":["RoleBuilder","class RoleBuilder(var name: String, var description: String) : OptionsBuilder","dev.kord.rest.builder.interaction.RoleBuilder"]},{"name":"class RoleCreateBuilder : AuditRequestBuilder<GuildRoleCreateRequest> ","description":"dev.kord.rest.builder.role.RoleCreateBuilder","location":"rest/dev.kord.rest.builder.role/-role-create-builder/index.html","searchKeys":["RoleCreateBuilder","class RoleCreateBuilder : AuditRequestBuilder<GuildRoleCreateRequest> ","dev.kord.rest.builder.role.RoleCreateBuilder"]},{"name":"class RoleModifyBuilder : AuditRequestBuilder<GuildRoleModifyRequest> ","description":"dev.kord.rest.builder.role.RoleModifyBuilder","location":"rest/dev.kord.rest.builder.role/-role-modify-builder/index.html","searchKeys":["RoleModifyBuilder","class RoleModifyBuilder : AuditRequestBuilder<GuildRoleModifyRequest> ","dev.kord.rest.builder.role.RoleModifyBuilder"]},{"name":"class RolePositionsModifyBuilder : AuditRequestBuilder<GuildRolePositionModifyRequest> ","description":"dev.kord.rest.builder.role.RolePositionsModifyBuilder","location":"rest/dev.kord.rest.builder.role/-role-positions-modify-builder/index.html","searchKeys":["RolePositionsModifyBuilder","class RolePositionsModifyBuilder : AuditRequestBuilder<GuildRolePositionModifyRequest> ","dev.kord.rest.builder.role.RolePositionsModifyBuilder"]},{"name":"class ScheduledEventCreateBuilder(var name: String, var privacyLevel: GuildScheduledEventPrivacyLevel, var scheduledStartTime: Instant, var entityType: ScheduledEntityType) : AuditRequestBuilder<GuildScheduledEventCreateRequest> ","description":"dev.kord.rest.builder.guild.ScheduledEventCreateBuilder","location":"rest/dev.kord.rest.builder.guild/-scheduled-event-create-builder/index.html","searchKeys":["ScheduledEventCreateBuilder","class ScheduledEventCreateBuilder(var name: String, var privacyLevel: GuildScheduledEventPrivacyLevel, var scheduledStartTime: Instant, var entityType: ScheduledEntityType) : AuditRequestBuilder<GuildScheduledEventCreateRequest> ","dev.kord.rest.builder.guild.ScheduledEventCreateBuilder"]},{"name":"class ScheduledEventModifyBuilder : AuditRequestBuilder<ScheduledEventModifyRequest> ","description":"dev.kord.rest.builder.scheduled_events.ScheduledEventModifyBuilder","location":"rest/dev.kord.rest.builder.scheduled_events/-scheduled-event-modify-builder/index.html","searchKeys":["ScheduledEventModifyBuilder","class ScheduledEventModifyBuilder : AuditRequestBuilder<ScheduledEventModifyRequest> ","dev.kord.rest.builder.scheduled_events.ScheduledEventModifyBuilder"]},{"name":"class SelectMenuBuilder(var customId: String) : ActionRowComponentBuilder","description":"dev.kord.rest.builder.component.SelectMenuBuilder","location":"rest/dev.kord.rest.builder.component/-select-menu-builder/index.html","searchKeys":["SelectMenuBuilder","class SelectMenuBuilder(var customId: String) : ActionRowComponentBuilder","dev.kord.rest.builder.component.SelectMenuBuilder"]},{"name":"class SelectOptionBuilder(var label: String, var value: String)","description":"dev.kord.rest.builder.component.SelectOptionBuilder","location":"rest/dev.kord.rest.builder.component/-select-option-builder/index.html","searchKeys":["SelectOptionBuilder","class SelectOptionBuilder(var label: String, var value: String)","dev.kord.rest.builder.component.SelectOptionBuilder"]},{"name":"class SendAlertMessageAutoModerationActionBuilder(var channelId: Snowflake) : AutoModerationActionBuilder","description":"dev.kord.rest.builder.automoderation.SendAlertMessageAutoModerationActionBuilder","location":"rest/dev.kord.rest.builder.automoderation/-send-alert-message-auto-moderation-action-builder/index.html","searchKeys":["SendAlertMessageAutoModerationActionBuilder","class SendAlertMessageAutoModerationActionBuilder(var channelId: Snowflake) : AutoModerationActionBuilder","dev.kord.rest.builder.automoderation.SendAlertMessageAutoModerationActionBuilder"]},{"name":"class SpamAutoModerationRuleCreateBuilder(var name: String, var eventType: AutoModerationRuleEventType) : AutoModerationRuleCreateBuilder, SpamAutoModerationRuleBuilder","description":"dev.kord.rest.builder.automoderation.SpamAutoModerationRuleCreateBuilder","location":"rest/dev.kord.rest.builder.automoderation/-spam-auto-moderation-rule-create-builder/index.html","searchKeys":["SpamAutoModerationRuleCreateBuilder","class SpamAutoModerationRuleCreateBuilder(var name: String, var eventType: AutoModerationRuleEventType) : AutoModerationRuleCreateBuilder, SpamAutoModerationRuleBuilder","dev.kord.rest.builder.automoderation.SpamAutoModerationRuleCreateBuilder"]},{"name":"class SpamAutoModerationRuleModifyBuilder : AutoModerationRuleModifyBuilder, SpamAutoModerationRuleBuilder","description":"dev.kord.rest.builder.automoderation.SpamAutoModerationRuleModifyBuilder","location":"rest/dev.kord.rest.builder.automoderation/-spam-auto-moderation-rule-modify-builder/index.html","searchKeys":["SpamAutoModerationRuleModifyBuilder","class SpamAutoModerationRuleModifyBuilder : AutoModerationRuleModifyBuilder, SpamAutoModerationRuleBuilder","dev.kord.rest.builder.automoderation.SpamAutoModerationRuleModifyBuilder"]},{"name":"class StackTraceRecoveringKtorRequestHandler(delegate: KtorRequestHandler) : RequestHandler","description":"dev.kord.rest.request.StackTraceRecoveringKtorRequestHandler","location":"rest/dev.kord.rest.request/-stack-trace-recovering-ktor-request-handler/index.html","searchKeys":["StackTraceRecoveringKtorRequestHandler","class StackTraceRecoveringKtorRequestHandler(delegate: KtorRequestHandler) : RequestHandler","dev.kord.rest.request.StackTraceRecoveringKtorRequestHandler"]},{"name":"class StageInstanceCreateBuilder(var channelId: Snowflake, var topic: String) : AuditRequestBuilder<StageInstanceCreateRequest> ","description":"dev.kord.rest.builder.stage.StageInstanceCreateBuilder","location":"rest/dev.kord.rest.builder.stage/-stage-instance-create-builder/index.html","searchKeys":["StageInstanceCreateBuilder","class StageInstanceCreateBuilder(var channelId: Snowflake, var topic: String) : AuditRequestBuilder<StageInstanceCreateRequest> ","dev.kord.rest.builder.stage.StageInstanceCreateBuilder"]},{"name":"class StageInstanceModifyBuilder : AuditRequestBuilder<StageInstanceModifyRequest> ","description":"dev.kord.rest.builder.stage.StageInstanceModifyBuilder","location":"rest/dev.kord.rest.builder.stage/-stage-instance-modify-builder/index.html","searchKeys":["StageInstanceModifyBuilder","class StageInstanceModifyBuilder : AuditRequestBuilder<StageInstanceModifyRequest> ","dev.kord.rest.builder.stage.StageInstanceModifyBuilder"]},{"name":"class StageInstanceService(requestHandler: RequestHandler) : RestService","description":"dev.kord.rest.service.StageInstanceService","location":"rest/dev.kord.rest.service/-stage-instance-service/index.html","searchKeys":["StageInstanceService","class StageInstanceService(requestHandler: RequestHandler) : RestService","dev.kord.rest.service.StageInstanceService"]},{"name":"class StageVoiceChannelModifyBuilder : PermissionOverwritesModifyBuilder, AuditRequestBuilder<ChannelModifyPatchRequest> ","description":"dev.kord.rest.builder.channel.StageVoiceChannelModifyBuilder","location":"rest/dev.kord.rest.builder.channel/-stage-voice-channel-modify-builder/index.html","searchKeys":["StageVoiceChannelModifyBuilder","class StageVoiceChannelModifyBuilder : PermissionOverwritesModifyBuilder, AuditRequestBuilder<ChannelModifyPatchRequest> ","dev.kord.rest.builder.channel.StageVoiceChannelModifyBuilder"]},{"name":"class StartThreadBuilder(var name: String, var autoArchiveDuration: ArchiveDuration, val type: ChannelType) : AuditRequestBuilder<StartThreadRequest> ","description":"dev.kord.rest.builder.channel.thread.StartThreadBuilder","location":"rest/dev.kord.rest.builder.channel.thread/-start-thread-builder/index.html","searchKeys":["StartThreadBuilder","class StartThreadBuilder(var name: String, var autoArchiveDuration: ArchiveDuration, val type: ChannelType) : AuditRequestBuilder<StartThreadRequest> ","dev.kord.rest.builder.channel.thread.StartThreadBuilder"]},{"name":"class StartThreadWithMessageBuilder(var name: String, var autoArchiveDuration: ArchiveDuration) : AuditRequestBuilder<StartThreadRequest> ","description":"dev.kord.rest.builder.channel.thread.StartThreadWithMessageBuilder","location":"rest/dev.kord.rest.builder.channel.thread/-start-thread-with-message-builder/index.html","searchKeys":["StartThreadWithMessageBuilder","class StartThreadWithMessageBuilder(var name: String, var autoArchiveDuration: ArchiveDuration) : AuditRequestBuilder<StartThreadRequest> ","dev.kord.rest.builder.channel.thread.StartThreadWithMessageBuilder"]},{"name":"class StickerModifyBuilder : RequestBuilder<GuildStickerModifyRequest> ","description":"dev.kord.rest.builder.guild.StickerModifyBuilder","location":"rest/dev.kord.rest.builder.guild/-sticker-modify-builder/index.html","searchKeys":["StickerModifyBuilder","class StickerModifyBuilder : RequestBuilder<GuildStickerModifyRequest> ","dev.kord.rest.builder.guild.StickerModifyBuilder"]},{"name":"class StickerService(requestHandler: RequestHandler) : RestService","description":"dev.kord.rest.service.StickerService","location":"rest/dev.kord.rest.service/-sticker-service/index.html","searchKeys":["StickerService","class StickerService(requestHandler: RequestHandler) : RestService","dev.kord.rest.service.StickerService"]},{"name":"class StringChoiceBuilder(name: String, description: String) : BaseChoiceBuilder<String> ","description":"dev.kord.rest.builder.interaction.StringChoiceBuilder","location":"rest/dev.kord.rest.builder.interaction/-string-choice-builder/index.html","searchKeys":["StringChoiceBuilder","class StringChoiceBuilder(name: String, description: String) : BaseChoiceBuilder<String> ","dev.kord.rest.builder.interaction.StringChoiceBuilder"]},{"name":"class SubCommandBuilder(var name: String, var description: String) : BaseCommandOptionBuilder, BaseInputChatBuilder","description":"dev.kord.rest.builder.interaction.SubCommandBuilder","location":"rest/dev.kord.rest.builder.interaction/-sub-command-builder/index.html","searchKeys":["SubCommandBuilder","class SubCommandBuilder(var name: String, var description: String) : BaseCommandOptionBuilder, BaseInputChatBuilder","dev.kord.rest.builder.interaction.SubCommandBuilder"]},{"name":"class TemplateService(requestHandler: RequestHandler) : RestService","description":"dev.kord.rest.service.TemplateService","location":"rest/dev.kord.rest.service/-template-service/index.html","searchKeys":["TemplateService","class TemplateService(requestHandler: RequestHandler) : RestService","dev.kord.rest.service.TemplateService"]},{"name":"class TextChannelCreateBuilder(var name: String) : PermissionOverwritesCreateBuilder, AuditRequestBuilder<GuildChannelCreateRequest> ","description":"dev.kord.rest.builder.channel.TextChannelCreateBuilder","location":"rest/dev.kord.rest.builder.channel/-text-channel-create-builder/index.html","searchKeys":["TextChannelCreateBuilder","class TextChannelCreateBuilder(var name: String) : PermissionOverwritesCreateBuilder, AuditRequestBuilder<GuildChannelCreateRequest> ","dev.kord.rest.builder.channel.TextChannelCreateBuilder"]},{"name":"class TextChannelModifyBuilder : PermissionOverwritesModifyBuilder, AuditRequestBuilder<ChannelModifyPatchRequest> ","description":"dev.kord.rest.builder.channel.TextChannelModifyBuilder","location":"rest/dev.kord.rest.builder.channel/-text-channel-modify-builder/index.html","searchKeys":["TextChannelModifyBuilder","class TextChannelModifyBuilder : PermissionOverwritesModifyBuilder, AuditRequestBuilder<ChannelModifyPatchRequest> ","dev.kord.rest.builder.channel.TextChannelModifyBuilder"]},{"name":"class TextInputBuilder(var style: TextInputStyle, var customId: String, var label: String) : ActionRowComponentBuilder","description":"dev.kord.rest.builder.component.TextInputBuilder","location":"rest/dev.kord.rest.builder.component/-text-input-builder/index.html","searchKeys":["TextInputBuilder","class TextInputBuilder(var style: TextInputStyle, var customId: String, var label: String) : ActionRowComponentBuilder","dev.kord.rest.builder.component.TextInputBuilder"]},{"name":"class ThreadModifyBuilder : AuditRequestBuilder<ChannelModifyPatchRequest> ","description":"dev.kord.rest.builder.channel.thread.ThreadModifyBuilder","location":"rest/dev.kord.rest.builder.channel.thread/-thread-modify-builder/index.html","searchKeys":["ThreadModifyBuilder","class ThreadModifyBuilder : AuditRequestBuilder<ChannelModifyPatchRequest> ","dev.kord.rest.builder.channel.thread.ThreadModifyBuilder"]},{"name":"class Thumbnail : RequestBuilder<EmbedThumbnailRequest> ","description":"dev.kord.rest.builder.message.EmbedBuilder.Thumbnail","location":"rest/dev.kord.rest.builder.message/-embed-builder/-thumbnail/index.html","searchKeys":["Thumbnail","class Thumbnail : RequestBuilder<EmbedThumbnailRequest> ","dev.kord.rest.builder.message.EmbedBuilder.Thumbnail"]},{"name":"class TimeoutAutoModerationActionBuilder(var duration: Duration) : AutoModerationActionBuilder","description":"dev.kord.rest.builder.automoderation.TimeoutAutoModerationActionBuilder","location":"rest/dev.kord.rest.builder.automoderation/-timeout-auto-moderation-action-builder/index.html","searchKeys":["TimeoutAutoModerationActionBuilder","class TimeoutAutoModerationActionBuilder(var duration: Duration) : AutoModerationActionBuilder","dev.kord.rest.builder.automoderation.TimeoutAutoModerationActionBuilder"]},{"name":"class UntypedAutoModerationRuleModifyBuilder : AutoModerationRuleModifyBuilder","description":"dev.kord.rest.builder.automoderation.UntypedAutoModerationRuleModifyBuilder","location":"rest/dev.kord.rest.builder.automoderation/-untyped-auto-moderation-rule-modify-builder/index.html","searchKeys":["UntypedAutoModerationRuleModifyBuilder","class UntypedAutoModerationRuleModifyBuilder : AutoModerationRuleModifyBuilder","dev.kord.rest.builder.automoderation.UntypedAutoModerationRuleModifyBuilder"]},{"name":"class UpdateMessageInteractionResponseCreateBuilder : MessageCreateBuilder, RequestBuilder<MultipartInteractionResponseCreateRequest> ","description":"dev.kord.rest.builder.message.create.UpdateMessageInteractionResponseCreateBuilder","location":"rest/dev.kord.rest.builder.message.create/-update-message-interaction-response-create-builder/index.html","searchKeys":["UpdateMessageInteractionResponseCreateBuilder","class UpdateMessageInteractionResponseCreateBuilder : MessageCreateBuilder, RequestBuilder<MultipartInteractionResponseCreateRequest> ","dev.kord.rest.builder.message.create.UpdateMessageInteractionResponseCreateBuilder"]},{"name":"class UrlFormatBuilder","description":"dev.kord.rest.route.CdnUrl.UrlFormatBuilder","location":"rest/dev.kord.rest.route/-cdn-url/-url-format-builder/index.html","searchKeys":["UrlFormatBuilder","class UrlFormatBuilder","dev.kord.rest.route.CdnUrl.UrlFormatBuilder"]},{"name":"class UserBuilder(var name: String, var description: String) : OptionsBuilder","description":"dev.kord.rest.builder.interaction.UserBuilder","location":"rest/dev.kord.rest.builder.interaction/-user-builder/index.html","searchKeys":["UserBuilder","class UserBuilder(var name: String, var description: String) : OptionsBuilder","dev.kord.rest.builder.interaction.UserBuilder"]},{"name":"class UserMessageCreateBuilder : MessageCreateBuilder, RequestBuilder<MultipartMessageCreateRequest> ","description":"dev.kord.rest.builder.message.create.UserMessageCreateBuilder","location":"rest/dev.kord.rest.builder.message.create/-user-message-create-builder/index.html","searchKeys":["UserMessageCreateBuilder","class UserMessageCreateBuilder : MessageCreateBuilder, RequestBuilder<MultipartMessageCreateRequest> ","dev.kord.rest.builder.message.create.UserMessageCreateBuilder"]},{"name":"class UserMessageModifyBuilder : MessageModifyBuilder, RequestBuilder<MultipartMessagePatchRequest> ","description":"dev.kord.rest.builder.message.modify.UserMessageModifyBuilder","location":"rest/dev.kord.rest.builder.message.modify/-user-message-modify-builder/index.html","searchKeys":["UserMessageModifyBuilder","class UserMessageModifyBuilder : MessageModifyBuilder, RequestBuilder<MultipartMessagePatchRequest> ","dev.kord.rest.builder.message.modify.UserMessageModifyBuilder"]},{"name":"class UserService(requestHandler: RequestHandler) : RestService","description":"dev.kord.rest.service.UserService","location":"rest/dev.kord.rest.service/-user-service/index.html","searchKeys":["UserService","class UserService(requestHandler: RequestHandler) : RestService","dev.kord.rest.service.UserService"]},{"name":"class VoiceChannelCreateBuilder(var name: String) : PermissionOverwritesCreateBuilder, AuditRequestBuilder<GuildChannelCreateRequest> ","description":"dev.kord.rest.builder.channel.VoiceChannelCreateBuilder","location":"rest/dev.kord.rest.builder.channel/-voice-channel-create-builder/index.html","searchKeys":["VoiceChannelCreateBuilder","class VoiceChannelCreateBuilder(var name: String) : PermissionOverwritesCreateBuilder, AuditRequestBuilder<GuildChannelCreateRequest> ","dev.kord.rest.builder.channel.VoiceChannelCreateBuilder"]},{"name":"class VoiceChannelModifyBuilder : PermissionOverwritesModifyBuilder, AuditRequestBuilder<ChannelModifyPatchRequest> ","description":"dev.kord.rest.builder.channel.VoiceChannelModifyBuilder","location":"rest/dev.kord.rest.builder.channel/-voice-channel-modify-builder/index.html","searchKeys":["VoiceChannelModifyBuilder","class VoiceChannelModifyBuilder : PermissionOverwritesModifyBuilder, AuditRequestBuilder<ChannelModifyPatchRequest> ","dev.kord.rest.builder.channel.VoiceChannelModifyBuilder"]},{"name":"class VoiceService(requestHandler: RequestHandler) : RestService","description":"dev.kord.rest.service.VoiceService","location":"rest/dev.kord.rest.service/-voice-service/index.html","searchKeys":["VoiceService","class VoiceService(requestHandler: RequestHandler) : RestService","dev.kord.rest.service.VoiceService"]},{"name":"class VoiceStateModifyBuilder(var channelId: Snowflake) : RequestBuilder<VoiceStateModifyRequest> ","description":"dev.kord.rest.builder.guild.VoiceStateModifyBuilder","location":"rest/dev.kord.rest.builder.guild/-voice-state-modify-builder/index.html","searchKeys":["VoiceStateModifyBuilder","class VoiceStateModifyBuilder(var channelId: Snowflake) : RequestBuilder<VoiceStateModifyRequest> ","dev.kord.rest.builder.guild.VoiceStateModifyBuilder"]},{"name":"class WebhookCreateBuilder(var name: String) : AuditRequestBuilder<WebhookCreateRequest> ","description":"dev.kord.rest.builder.webhook.WebhookCreateBuilder","location":"rest/dev.kord.rest.builder.webhook/-webhook-create-builder/index.html","searchKeys":["WebhookCreateBuilder","class WebhookCreateBuilder(var name: String) : AuditRequestBuilder<WebhookCreateRequest> ","dev.kord.rest.builder.webhook.WebhookCreateBuilder"]},{"name":"class WebhookMessageCreateBuilder : MessageCreateBuilder, RequestBuilder<MultiPartWebhookExecuteRequest> ","description":"dev.kord.rest.builder.message.create.WebhookMessageCreateBuilder","location":"rest/dev.kord.rest.builder.message.create/-webhook-message-create-builder/index.html","searchKeys":["WebhookMessageCreateBuilder","class WebhookMessageCreateBuilder : MessageCreateBuilder, RequestBuilder<MultiPartWebhookExecuteRequest> ","dev.kord.rest.builder.message.create.WebhookMessageCreateBuilder"]},{"name":"class WebhookMessageModifyBuilder : MessageModifyBuilder, RequestBuilder<MultipartWebhookEditMessageRequest> ","description":"dev.kord.rest.builder.message.modify.WebhookMessageModifyBuilder","location":"rest/dev.kord.rest.builder.message.modify/-webhook-message-modify-builder/index.html","searchKeys":["WebhookMessageModifyBuilder","class WebhookMessageModifyBuilder : MessageModifyBuilder, RequestBuilder<MultipartWebhookEditMessageRequest> ","dev.kord.rest.builder.message.modify.WebhookMessageModifyBuilder"]},{"name":"class WebhookModifyBuilder : AuditRequestBuilder<WebhookModifyRequest> ","description":"dev.kord.rest.builder.webhook.WebhookModifyBuilder","location":"rest/dev.kord.rest.builder.webhook/-webhook-modify-builder/index.html","searchKeys":["WebhookModifyBuilder","class WebhookModifyBuilder : AuditRequestBuilder<WebhookModifyRequest> ","dev.kord.rest.builder.webhook.WebhookModifyBuilder"]},{"name":"class WebhookService(requestHandler: RequestHandler) : RestService","description":"dev.kord.rest.service.WebhookService","location":"rest/dev.kord.rest.service/-webhook-service/index.html","searchKeys":["WebhookService","class WebhookService(requestHandler: RequestHandler) : RestService","dev.kord.rest.service.WebhookService"]},{"name":"class WelcomeScreenChannelBuilder(var channelId: Snowflake, var description: String, var emojiId: Snowflake?, var emojiName: String?) : RequestBuilder<DiscordWelcomeScreenChannel> ","description":"dev.kord.rest.builder.guild.WelcomeScreenChannelBuilder","location":"rest/dev.kord.rest.builder.guild/-welcome-screen-channel-builder/index.html","searchKeys":["WelcomeScreenChannelBuilder","class WelcomeScreenChannelBuilder(var channelId: Snowflake, var description: String, var emojiId: Snowflake?, var emojiName: String?) : RequestBuilder<DiscordWelcomeScreenChannel> ","dev.kord.rest.builder.guild.WelcomeScreenChannelBuilder"]},{"name":"class WelcomeScreenModifyBuilder : AuditRequestBuilder<GuildWelcomeScreenModifyRequest> ","description":"dev.kord.rest.builder.guild.WelcomeScreenModifyBuilder","location":"rest/dev.kord.rest.builder.guild/-welcome-screen-modify-builder/index.html","searchKeys":["WelcomeScreenModifyBuilder","class WelcomeScreenModifyBuilder : AuditRequestBuilder<GuildWelcomeScreenModifyRequest> ","dev.kord.rest.builder.guild.WelcomeScreenModifyBuilder"]},{"name":"const val ZERO_WIDTH_SPACE: String","description":"dev.kord.rest.builder.message.EmbedBuilder.Companion.ZERO_WIDTH_SPACE","location":"rest/dev.kord.rest.builder.message/-embed-builder/-companion/-z-e-r-o_-w-i-d-t-h_-s-p-a-c-e.html","searchKeys":["ZERO_WIDTH_SPACE","const val ZERO_WIDTH_SPACE: String","dev.kord.rest.builder.message.EmbedBuilder.Companion.ZERO_WIDTH_SPACE"]},{"name":"const val description: Int = 4096","description":"dev.kord.rest.builder.message.EmbedBuilder.Limits.description","location":"rest/dev.kord.rest.builder.message/-embed-builder/-limits/description.html","searchKeys":["description","const val description: Int = 4096","dev.kord.rest.builder.message.EmbedBuilder.Limits.description"]},{"name":"const val fieldCount: Int = 25","description":"dev.kord.rest.builder.message.EmbedBuilder.Limits.fieldCount","location":"rest/dev.kord.rest.builder.message/-embed-builder/-limits/field-count.html","searchKeys":["fieldCount","const val fieldCount: Int = 25","dev.kord.rest.builder.message.EmbedBuilder.Limits.fieldCount"]},{"name":"const val name: Int = 256","description":"dev.kord.rest.builder.message.EmbedBuilder.Author.Limits.name","location":"rest/dev.kord.rest.builder.message/-embed-builder/-author/-limits/name.html","searchKeys":["name","const val name: Int = 256","dev.kord.rest.builder.message.EmbedBuilder.Author.Limits.name"]},{"name":"const val name: Int = 256","description":"dev.kord.rest.builder.message.EmbedBuilder.Field.Limits.name","location":"rest/dev.kord.rest.builder.message/-embed-builder/-field/-limits/name.html","searchKeys":["name","const val name: Int = 256","dev.kord.rest.builder.message.EmbedBuilder.Field.Limits.name"]},{"name":"const val text: Int = 2048","description":"dev.kord.rest.builder.message.EmbedBuilder.Footer.Limits.text","location":"rest/dev.kord.rest.builder.message/-embed-builder/-footer/-limits/text.html","searchKeys":["text","const val text: Int = 2048","dev.kord.rest.builder.message.EmbedBuilder.Footer.Limits.text"]},{"name":"const val title: Int = 256","description":"dev.kord.rest.builder.message.EmbedBuilder.Limits.title","location":"rest/dev.kord.rest.builder.message/-embed-builder/-limits/title.html","searchKeys":["title","const val title: Int = 256","dev.kord.rest.builder.message.EmbedBuilder.Limits.title"]},{"name":"const val total: Int = 6000","description":"dev.kord.rest.builder.message.EmbedBuilder.Limits.total","location":"rest/dev.kord.rest.builder.message/-embed-builder/-limits/total.html","searchKeys":["total","const val total: Int = 6000","dev.kord.rest.builder.message.EmbedBuilder.Limits.total"]},{"name":"const val value: Int = 1024","description":"dev.kord.rest.builder.message.EmbedBuilder.Field.Limits.value","location":"rest/dev.kord.rest.builder.message/-embed-builder/-field/-limits/value.html","searchKeys":["value","const val value: Int = 1024","dev.kord.rest.builder.message.EmbedBuilder.Field.Limits.value"]},{"name":"data class Accepted(val bucketKey: BucketKey?, val rateLimit: RateLimit?, val reset: Reset) : RequestResponse","description":"dev.kord.rest.ratelimit.RequestResponse.Accepted","location":"rest/dev.kord.rest.ratelimit/-request-response/-accepted/index.html","searchKeys":["Accepted","data class Accepted(val bucketKey: BucketKey?, val rateLimit: RateLimit?, val reset: Reset) : RequestResponse","dev.kord.rest.ratelimit.RequestResponse.Accepted"]},{"name":"data class ApplicationCommandCreateRequest(val name: String, val nameLocalizations: Optional<Map<Locale, String>?> = Optional.Missing(), val type: ApplicationCommandType, val description: Optional<String> = Optional.Missing(), val descriptionLocalizations: Optional<Map<Locale, String>?> = Optional.Missing(), val options: Optional<List<ApplicationCommandOption>> = Optional.Missing(), val defaultMemberPermissions: Optional<Permissions?> = Optional.Missing(), val dmPermission: OptionalBoolean? = OptionalBoolean.Missing, val defaultPermission: OptionalBoolean = OptionalBoolean.Missing)","description":"dev.kord.rest.json.request.ApplicationCommandCreateRequest","location":"rest/dev.kord.rest.json.request/-application-command-create-request/index.html","searchKeys":["ApplicationCommandCreateRequest","data class ApplicationCommandCreateRequest(val name: String, val nameLocalizations: Optional<Map<Locale, String>?> = Optional.Missing(), val type: ApplicationCommandType, val description: Optional<String> = Optional.Missing(), val descriptionLocalizations: Optional<Map<Locale, String>?> = Optional.Missing(), val options: Optional<List<ApplicationCommandOption>> = Optional.Missing(), val defaultMemberPermissions: Optional<Permissions?> = Optional.Missing(), val dmPermission: OptionalBoolean? = OptionalBoolean.Missing, val defaultPermission: OptionalBoolean = OptionalBoolean.Missing)","dev.kord.rest.json.request.ApplicationCommandCreateRequest"]},{"name":"data class ApplicationCommandModifyRequest(val name: Optional<String> = Optional.Missing(), val nameLocalizations: Optional<Map<Locale, String>?> = Optional.Missing(), val description: Optional<String> = Optional.Missing(), val descriptionLocalizations: Optional<Map<Locale, String>?> = Optional.Missing(), val options: Optional<List<ApplicationCommandOption>> = Optional.Missing(), val defaultMemberPermissions: Optional<Permissions?> = Optional.Missing(), val dmPermission: OptionalBoolean? = OptionalBoolean.Missing, val defaultPermission: OptionalBoolean = OptionalBoolean.Missing)","description":"dev.kord.rest.json.request.ApplicationCommandModifyRequest","location":"rest/dev.kord.rest.json.request/-application-command-modify-request/index.html","searchKeys":["ApplicationCommandModifyRequest","data class ApplicationCommandModifyRequest(val name: Optional<String> = Optional.Missing(), val nameLocalizations: Optional<Map<Locale, String>?> = Optional.Missing(), val description: Optional<String> = Optional.Missing(), val descriptionLocalizations: Optional<Map<Locale, String>?> = Optional.Missing(), val options: Optional<List<ApplicationCommandOption>> = Optional.Missing(), val defaultMemberPermissions: Optional<Permissions?> = Optional.Missing(), val dmPermission: OptionalBoolean? = OptionalBoolean.Missing, val defaultPermission: OptionalBoolean = OptionalBoolean.Missing)","dev.kord.rest.json.request.ApplicationCommandModifyRequest"]},{"name":"data class AuditLogGetRequest(val userId: Snowflake? = null, val action: AuditLogEvent? = null, val before: Snowflake? = null, val limit: Int? = null)","description":"dev.kord.rest.json.request.AuditLogGetRequest","location":"rest/dev.kord.rest.json.request/-audit-log-get-request/index.html","searchKeys":["AuditLogGetRequest","data class AuditLogGetRequest(val userId: Snowflake? = null, val action: AuditLogEvent? = null, val before: Snowflake? = null, val limit: Int? = null)","dev.kord.rest.json.request.AuditLogGetRequest"]},{"name":"data class AutoCompleteResponseCreateRequest<T>(val type: InteractionResponseType, val data: DiscordAutoComplete<T>)","description":"dev.kord.rest.json.request.AutoCompleteResponseCreateRequest","location":"rest/dev.kord.rest.json.request/-auto-complete-response-create-request/index.html","searchKeys":["AutoCompleteResponseCreateRequest","data class AutoCompleteResponseCreateRequest<T>(val type: InteractionResponseType, val data: DiscordAutoComplete<T>)","dev.kord.rest.json.request.AutoCompleteResponseCreateRequest"]},{"name":"data class AutoModerationRuleCreateRequest(val name: String, val eventType: AutoModerationRuleEventType, val triggerType: AutoModerationRuleTriggerType, val triggerMetadata: Optional<DiscordAutoModerationRuleTriggerMetadata> = Optional.Missing(), val actions: List<DiscordAutoModerationAction>, val enabled: OptionalBoolean = OptionalBoolean.Missing, val exemptRoles: Optional<List<Snowflake>> = Optional.Missing(), val exemptChannels: Optional<List<Snowflake>> = Optional.Missing())","description":"dev.kord.rest.json.request.AutoModerationRuleCreateRequest","location":"rest/dev.kord.rest.json.request/-auto-moderation-rule-create-request/index.html","searchKeys":["AutoModerationRuleCreateRequest","data class AutoModerationRuleCreateRequest(val name: String, val eventType: AutoModerationRuleEventType, val triggerType: AutoModerationRuleTriggerType, val triggerMetadata: Optional<DiscordAutoModerationRuleTriggerMetadata> = Optional.Missing(), val actions: List<DiscordAutoModerationAction>, val enabled: OptionalBoolean = OptionalBoolean.Missing, val exemptRoles: Optional<List<Snowflake>> = Optional.Missing(), val exemptChannels: Optional<List<Snowflake>> = Optional.Missing())","dev.kord.rest.json.request.AutoModerationRuleCreateRequest"]},{"name":"data class AutoModerationRuleModifyRequest(val name: Optional<String> = Optional.Missing(), val eventType: Optional<AutoModerationRuleEventType> = Optional.Missing(), val triggerMetadata: Optional<DiscordAutoModerationRuleTriggerMetadata> = Optional.Missing(), val actions: Optional<List<DiscordAutoModerationAction>> = Optional.Missing(), val enabled: OptionalBoolean = OptionalBoolean.Missing, val exemptRoles: Optional<List<Snowflake>> = Optional.Missing(), val exemptChannels: Optional<List<Snowflake>> = Optional.Missing())","description":"dev.kord.rest.json.request.AutoModerationRuleModifyRequest","location":"rest/dev.kord.rest.json.request/-auto-moderation-rule-modify-request/index.html","searchKeys":["AutoModerationRuleModifyRequest","data class AutoModerationRuleModifyRequest(val name: Optional<String> = Optional.Missing(), val eventType: Optional<AutoModerationRuleEventType> = Optional.Missing(), val triggerMetadata: Optional<DiscordAutoModerationRuleTriggerMetadata> = Optional.Missing(), val actions: Optional<List<DiscordAutoModerationAction>> = Optional.Missing(), val enabled: OptionalBoolean = OptionalBoolean.Missing, val exemptRoles: Optional<List<Snowflake>> = Optional.Missing(), val exemptChannels: Optional<List<Snowflake>> = Optional.Missing())","dev.kord.rest.json.request.AutoModerationRuleModifyRequest"]},{"name":"data class BanResponse(val reason: String?, val user: DiscordUser)","description":"dev.kord.rest.json.response.BanResponse","location":"rest/dev.kord.rest.json.response/-ban-response/index.html","searchKeys":["BanResponse","data class BanResponse(val reason: String?, val user: DiscordUser)","dev.kord.rest.json.response.BanResponse"]},{"name":"data class BotGatewayResponse(val url: String, val shards: Int, val sessionStartLimit: SessionStartLimitResponse)","description":"dev.kord.rest.json.response.BotGatewayResponse","location":"rest/dev.kord.rest.json.response/-bot-gateway-response/index.html","searchKeys":["BotGatewayResponse","data class BotGatewayResponse(val url: String, val shards: Int, val sessionStartLimit: SessionStartLimitResponse)","dev.kord.rest.json.response.BotGatewayResponse"]},{"name":"data class BucketRateLimit(val bucketKey: BucketKey, val rateLimit: RateLimit?, val reset: Reset) : RequestResponse","description":"dev.kord.rest.ratelimit.RequestResponse.BucketRateLimit","location":"rest/dev.kord.rest.ratelimit/-request-response/-bucket-rate-limit/index.html","searchKeys":["BucketRateLimit","data class BucketRateLimit(val bucketKey: BucketKey, val rateLimit: RateLimit?, val reset: Reset) : RequestResponse","dev.kord.rest.ratelimit.RequestResponse.BucketRateLimit"]},{"name":"data class BulkDeleteRequest(val messages: List<Snowflake>)","description":"dev.kord.rest.json.request.BulkDeleteRequest","location":"rest/dev.kord.rest.json.request/-bulk-delete-request/index.html","searchKeys":["BulkDeleteRequest","data class BulkDeleteRequest(val messages: List<Snowflake>)","dev.kord.rest.json.request.BulkDeleteRequest"]},{"name":"data class ChannelFollowRequest(val webhookChannelId: Snowflake)","description":"dev.kord.rest.json.request.ChannelFollowRequest","location":"rest/dev.kord.rest.json.request/-channel-follow-request/index.html","searchKeys":["ChannelFollowRequest","data class ChannelFollowRequest(val webhookChannelId: Snowflake)","dev.kord.rest.json.request.ChannelFollowRequest"]},{"name":"data class ChannelModifyPatchRequest(val name: Optional<String> = Optional.Missing(), val position: OptionalInt? = OptionalInt.Missing, val topic: Optional<String?> = Optional.Missing(), val nsfw: OptionalBoolean? = OptionalBoolean.Missing, val rateLimitPerUser: Optional<DurationInSeconds?> = Optional.Missing(), val bitrate: OptionalInt? = OptionalInt.Missing, val userLimit: OptionalInt? = OptionalInt.Missing, val permissionOverwrites: Optional<Set<Overwrite>?> = Optional.Missing(), val parentId: OptionalSnowflake? = OptionalSnowflake.Missing, val archived: OptionalBoolean = OptionalBoolean.Missing, val autoArchiveDuration: Optional<ArchiveDuration> = Optional.Missing(), val locked: OptionalBoolean = OptionalBoolean.Missing, val rtcRegion: Optional<String?> = Optional.Missing(), val invitable: OptionalBoolean = OptionalBoolean.Missing, val videoQualityMode: Optional<VideoQualityMode?> = Optional.Missing(), val defaultAutoArchiveDuration: Optional<ArchiveDuration?> = Optional.Missing())","description":"dev.kord.rest.json.request.ChannelModifyPatchRequest","location":"rest/dev.kord.rest.json.request/-channel-modify-patch-request/index.html","searchKeys":["ChannelModifyPatchRequest","data class ChannelModifyPatchRequest(val name: Optional<String> = Optional.Missing(), val position: OptionalInt? = OptionalInt.Missing, val topic: Optional<String?> = Optional.Missing(), val nsfw: OptionalBoolean? = OptionalBoolean.Missing, val rateLimitPerUser: Optional<DurationInSeconds?> = Optional.Missing(), val bitrate: OptionalInt? = OptionalInt.Missing, val userLimit: OptionalInt? = OptionalInt.Missing, val permissionOverwrites: Optional<Set<Overwrite>?> = Optional.Missing(), val parentId: OptionalSnowflake? = OptionalSnowflake.Missing, val archived: OptionalBoolean = OptionalBoolean.Missing, val autoArchiveDuration: Optional<ArchiveDuration> = Optional.Missing(), val locked: OptionalBoolean = OptionalBoolean.Missing, val rtcRegion: Optional<String?> = Optional.Missing(), val invitable: OptionalBoolean = OptionalBoolean.Missing, val videoQualityMode: Optional<VideoQualityMode?> = Optional.Missing(), val defaultAutoArchiveDuration: Optional<ArchiveDuration?> = Optional.Missing())","dev.kord.rest.json.request.ChannelModifyPatchRequest"]},{"name":"data class ChannelModifyPutRequest(val name: String, val position: Int, val topic: String? = null, val nsfw: Boolean? = null, val rateLimitPerUser: Int? = null, val bitrate: Int? = null, val userLimit: Int? = null, val permissionOverwrites: List<Overwrite>, val parentId: String? = null)","description":"dev.kord.rest.json.request.ChannelModifyPutRequest","location":"rest/dev.kord.rest.json.request/-channel-modify-put-request/index.html","searchKeys":["ChannelModifyPutRequest","data class ChannelModifyPutRequest(val name: String, val position: Int, val topic: String? = null, val nsfw: Boolean? = null, val rateLimitPerUser: Int? = null, val bitrate: Int? = null, val userLimit: Int? = null, val permissionOverwrites: List<Overwrite>, val parentId: String? = null)","dev.kord.rest.json.request.ChannelModifyPutRequest"]},{"name":"data class ChannelPermissionEditRequest(val allow: Permissions, val deny: Permissions, val type: OverwriteType)","description":"dev.kord.rest.json.request.ChannelPermissionEditRequest","location":"rest/dev.kord.rest.json.request/-channel-permission-edit-request/index.html","searchKeys":["ChannelPermissionEditRequest","data class ChannelPermissionEditRequest(val allow: Permissions, val deny: Permissions, val type: OverwriteType)","dev.kord.rest.json.request.ChannelPermissionEditRequest"]},{"name":"data class ChannelPositionSwapRequest(val id: Snowflake, val position: OptionalInt? = OptionalInt.Missing, val lockPermissions: Boolean?, val parentId: Snowflake?)","description":"dev.kord.rest.json.request.ChannelPositionSwapRequest","location":"rest/dev.kord.rest.json.request/-channel-position-swap-request/index.html","searchKeys":["ChannelPositionSwapRequest","data class ChannelPositionSwapRequest(val id: Snowflake, val position: OptionalInt? = OptionalInt.Missing, val lockPermissions: Boolean?, val parentId: Snowflake?)","dev.kord.rest.json.request.ChannelPositionSwapRequest"]},{"name":"data class Connection(val id: String, val name: String, val type: String, val revoked: Boolean, val integrations: List<DiscordGuildIntegrations>, val verified: Boolean, val friendSync: Boolean, val showActivity: Boolean, val visibility: Int)","description":"dev.kord.rest.json.response.Connection","location":"rest/dev.kord.rest.json.response/-connection/index.html","searchKeys":["Connection","data class Connection(val id: String, val name: String, val type: String, val revoked: Boolean, val integrations: List<DiscordGuildIntegrations>, val verified: Boolean, val friendSync: Boolean, val showActivity: Boolean, val visibility: Int)","dev.kord.rest.json.response.Connection"]},{"name":"data class CurrentUserModifyRequest(val username: Optional<String> = Optional.Missing(), val avatar: Optional<String?> = Optional.Missing())","description":"dev.kord.rest.json.request.CurrentUserModifyRequest","location":"rest/dev.kord.rest.json.request/-current-user-modify-request/index.html","searchKeys":["CurrentUserModifyRequest","data class CurrentUserModifyRequest(val username: Optional<String> = Optional.Missing(), val avatar: Optional<String?> = Optional.Missing())","dev.kord.rest.json.request.CurrentUserModifyRequest"]},{"name":"data class CurrentUserNicknameModifyRequest(val nick: Optional<String?> = Optional.Missing())","description":"dev.kord.rest.json.request.CurrentUserNicknameModifyRequest","location":"rest/dev.kord.rest.json.request/-current-user-nickname-modify-request/index.html","searchKeys":["CurrentUserNicknameModifyRequest","data class CurrentUserNicknameModifyRequest(val nick: Optional<String?> = Optional.Missing())","dev.kord.rest.json.request.CurrentUserNicknameModifyRequest"]},{"name":"data class CurrentUserNicknameModifyResponse(val nick: String)","description":"dev.kord.rest.json.response.CurrentUserNicknameModifyResponse","location":"rest/dev.kord.rest.json.response/-current-user-nickname-modify-response/index.html","searchKeys":["CurrentUserNicknameModifyResponse","data class CurrentUserNicknameModifyResponse(val nick: String)","dev.kord.rest.json.response.CurrentUserNicknameModifyResponse"]},{"name":"data class CurrentVoiceStateModifyRequest(val channelId: OptionalSnowflake = OptionalSnowflake.Missing, val suppress: OptionalBoolean = OptionalBoolean.Missing, val requestToSpeakTimestamp: Optional<Instant?> = Optional.Missing())","description":"dev.kord.rest.json.request.CurrentVoiceStateModifyRequest","location":"rest/dev.kord.rest.json.request/-current-voice-state-modify-request/index.html","searchKeys":["CurrentVoiceStateModifyRequest","data class CurrentVoiceStateModifyRequest(val channelId: OptionalSnowflake = OptionalSnowflake.Missing, val suppress: OptionalBoolean = OptionalBoolean.Missing, val requestToSpeakTimestamp: Optional<Instant?> = Optional.Missing())","dev.kord.rest.json.request.CurrentVoiceStateModifyRequest"]},{"name":"data class DMCreateRequest(val userId: Snowflake)","description":"dev.kord.rest.json.request.DMCreateRequest","location":"rest/dev.kord.rest.json.request/-d-m-create-request/index.html","searchKeys":["DMCreateRequest","data class DMCreateRequest(val userId: Snowflake)","dev.kord.rest.json.request.DMCreateRequest"]},{"name":"data class DiscordErrorResponse(val code: JsonErrorCode = JsonErrorCode.Unknown, val errors: JsonElement? = null, val message: String? = null)","description":"dev.kord.rest.json.response.DiscordErrorResponse","location":"rest/dev.kord.rest.json.response/-discord-error-response/index.html","searchKeys":["DiscordErrorResponse","data class DiscordErrorResponse(val code: JsonErrorCode = JsonErrorCode.Unknown, val errors: JsonElement? = null, val message: String? = null)","dev.kord.rest.json.response.DiscordErrorResponse"]},{"name":"data class EmbedAuthorRequest(val name: Optional<String> = Optional.Missing(), val url: Optional<String> = Optional.Missing(), val iconUrl: Optional<String> = Optional.Missing())","description":"dev.kord.rest.json.request.EmbedAuthorRequest","location":"rest/dev.kord.rest.json.request/-embed-author-request/index.html","searchKeys":["EmbedAuthorRequest","data class EmbedAuthorRequest(val name: Optional<String> = Optional.Missing(), val url: Optional<String> = Optional.Missing(), val iconUrl: Optional<String> = Optional.Missing())","dev.kord.rest.json.request.EmbedAuthorRequest"]},{"name":"data class EmbedFieldRequest(val name: String, val value: String, val inline: OptionalBoolean = OptionalBoolean.Missing)","description":"dev.kord.rest.json.request.EmbedFieldRequest","location":"rest/dev.kord.rest.json.request/-embed-field-request/index.html","searchKeys":["EmbedFieldRequest","data class EmbedFieldRequest(val name: String, val value: String, val inline: OptionalBoolean = OptionalBoolean.Missing)","dev.kord.rest.json.request.EmbedFieldRequest"]},{"name":"data class EmbedFooterRequest(val text: String, val iconUrl: String? = null)","description":"dev.kord.rest.json.request.EmbedFooterRequest","location":"rest/dev.kord.rest.json.request/-embed-footer-request/index.html","searchKeys":["EmbedFooterRequest","data class EmbedFooterRequest(val text: String, val iconUrl: String? = null)","dev.kord.rest.json.request.EmbedFooterRequest"]},{"name":"data class EmbedImageRequest(val url: String)","description":"dev.kord.rest.json.request.EmbedImageRequest","location":"rest/dev.kord.rest.json.request/-embed-image-request/index.html","searchKeys":["EmbedImageRequest","data class EmbedImageRequest(val url: String)","dev.kord.rest.json.request.EmbedImageRequest"]},{"name":"data class EmbedRequest(val title: Optional<String> = Optional.Missing(), val type: Optional<String> = Optional.Missing(), val description: Optional<String> = Optional.Missing(), val url: Optional<String> = Optional.Missing(), val timestamp: Optional<Instant> = Optional.Missing(), val color: Optional<Color> = Optional.Missing(), val footer: Optional<EmbedFooterRequest> = Optional.Missing(), val image: Optional<EmbedImageRequest> = Optional.Missing(), val thumbnail: Optional<EmbedThumbnailRequest> = Optional.Missing(), val author: Optional<EmbedAuthorRequest> = Optional.Missing(), val fields: Optional<List<EmbedFieldRequest>> = Optional.Missing())","description":"dev.kord.rest.json.request.EmbedRequest","location":"rest/dev.kord.rest.json.request/-embed-request/index.html","searchKeys":["EmbedRequest","data class EmbedRequest(val title: Optional<String> = Optional.Missing(), val type: Optional<String> = Optional.Missing(), val description: Optional<String> = Optional.Missing(), val url: Optional<String> = Optional.Missing(), val timestamp: Optional<Instant> = Optional.Missing(), val color: Optional<Color> = Optional.Missing(), val footer: Optional<EmbedFooterRequest> = Optional.Missing(), val image: Optional<EmbedImageRequest> = Optional.Missing(), val thumbnail: Optional<EmbedThumbnailRequest> = Optional.Missing(), val author: Optional<EmbedAuthorRequest> = Optional.Missing(), val fields: Optional<List<EmbedFieldRequest>> = Optional.Missing())","dev.kord.rest.json.request.EmbedRequest"]},{"name":"data class EmbedThumbnailRequest(val url: String)","description":"dev.kord.rest.json.request.EmbedThumbnailRequest","location":"rest/dev.kord.rest.json.request/-embed-thumbnail-request/index.html","searchKeys":["EmbedThumbnailRequest","data class EmbedThumbnailRequest(val url: String)","dev.kord.rest.json.request.EmbedThumbnailRequest"]},{"name":"data class EmojiCreateRequest(val name: String, val image: String, val roles: Set<Snowflake>)","description":"dev.kord.rest.json.request.EmojiCreateRequest","location":"rest/dev.kord.rest.json.request/-emoji-create-request/index.html","searchKeys":["EmojiCreateRequest","data class EmojiCreateRequest(val name: String, val image: String, val roles: Set<Snowflake>)","dev.kord.rest.json.request.EmojiCreateRequest"]},{"name":"data class EmojiModifyRequest(val name: Optional<String> = Optional.Missing(), val roles: Optional<Set<Snowflake>?> = Optional.Missing())","description":"dev.kord.rest.json.request.EmojiModifyRequest","location":"rest/dev.kord.rest.json.request/-emoji-modify-request/index.html","searchKeys":["EmojiModifyRequest","data class EmojiModifyRequest(val name: Optional<String> = Optional.Missing(), val roles: Optional<Set<Snowflake>?> = Optional.Missing())","dev.kord.rest.json.request.EmojiModifyRequest"]},{"name":"data class FollowedChannelResponse(val channelId: Snowflake, val webhookId: Snowflake)","description":"dev.kord.rest.json.response.FollowedChannelResponse","location":"rest/dev.kord.rest.json.response/-followed-channel-response/index.html","searchKeys":["FollowedChannelResponse","data class FollowedChannelResponse(val channelId: Snowflake, val webhookId: Snowflake)","dev.kord.rest.json.response.FollowedChannelResponse"]},{"name":"data class FollowupMessageCreateRequest(val content: Optional<String> = Optional.Missing(), val username: Optional<String> = Optional.Missing(), val avatar: Optional<String> = Optional.Missing(), val tts: OptionalBoolean = OptionalBoolean.Missing, val embeds: Optional<List<EmbedRequest>> = Optional.Missing(), val allowedMentions: Optional<AllowedMentions> = Optional.Missing(), val components: Optional<List<DiscordComponent>> = Optional.Missing(), val flags: Optional<MessageFlags> = Optional.Missing())","description":"dev.kord.rest.json.request.FollowupMessageCreateRequest","location":"rest/dev.kord.rest.json.request/-followup-message-create-request/index.html","searchKeys":["FollowupMessageCreateRequest","data class FollowupMessageCreateRequest(val content: Optional<String> = Optional.Missing(), val username: Optional<String> = Optional.Missing(), val avatar: Optional<String> = Optional.Missing(), val tts: OptionalBoolean = OptionalBoolean.Missing, val embeds: Optional<List<EmbedRequest>> = Optional.Missing(), val allowedMentions: Optional<AllowedMentions> = Optional.Missing(), val components: Optional<List<DiscordComponent>> = Optional.Missing(), val flags: Optional<MessageFlags> = Optional.Missing())","dev.kord.rest.json.request.FollowupMessageCreateRequest"]},{"name":"data class FollowupMessageModifyRequest(val content: Optional<String?> = Optional.Missing(), val embeds: Optional<List<EmbedRequest>?> = Optional.Missing(), val allowedMentions: Optional<AllowedMentions?> = Optional.Missing(), val components: Optional<List<DiscordComponent>?> = Optional.Missing(), val attachments: Optional<List<DiscordAttachment>?> = Optional.Missing())","description":"dev.kord.rest.json.request.FollowupMessageModifyRequest","location":"rest/dev.kord.rest.json.request/-followup-message-modify-request/index.html","searchKeys":["FollowupMessageModifyRequest","data class FollowupMessageModifyRequest(val content: Optional<String?> = Optional.Missing(), val embeds: Optional<List<EmbedRequest>?> = Optional.Missing(), val allowedMentions: Optional<AllowedMentions?> = Optional.Missing(), val components: Optional<List<DiscordComponent>?> = Optional.Missing(), val attachments: Optional<List<DiscordAttachment>?> = Optional.Missing())","dev.kord.rest.json.request.FollowupMessageModifyRequest"]},{"name":"data class GatewayResponse(val url: String)","description":"dev.kord.rest.json.response.GatewayResponse","location":"rest/dev.kord.rest.json.response/-gateway-response/index.html","searchKeys":["GatewayResponse","data class GatewayResponse(val url: String)","dev.kord.rest.json.response.GatewayResponse"]},{"name":"data class GetPruneResponse(val pruned: Int)","description":"dev.kord.rest.json.response.GetPruneResponse","location":"rest/dev.kord.rest.json.response/-get-prune-response/index.html","searchKeys":["GetPruneResponse","data class GetPruneResponse(val pruned: Int)","dev.kord.rest.json.response.GetPruneResponse"]},{"name":"data class GlobalRateLimit(val bucketKey: BucketKey?, val rateLimit: RateLimit?, val reset: Reset) : RequestResponse","description":"dev.kord.rest.ratelimit.RequestResponse.GlobalRateLimit","location":"rest/dev.kord.rest.ratelimit/-request-response/-global-rate-limit/index.html","searchKeys":["GlobalRateLimit","data class GlobalRateLimit(val bucketKey: BucketKey?, val rateLimit: RateLimit?, val reset: Reset) : RequestResponse","dev.kord.rest.ratelimit.RequestResponse.GlobalRateLimit"]},{"name":"data class GroupDMCreateRequest(val tokens: List<String>, val nick: Map<String, String>)","description":"dev.kord.rest.json.request.GroupDMCreateRequest","location":"rest/dev.kord.rest.json.request/-group-d-m-create-request/index.html","searchKeys":["GroupDMCreateRequest","data class GroupDMCreateRequest(val tokens: List<String>, val nick: Map<String, String>)","dev.kord.rest.json.request.GroupDMCreateRequest"]},{"name":"data class GuildBanCreateRequest constructor(reason: Optional<String> = Optional.Missing(), deleteMessagesDays: OptionalInt = OptionalInt.Missing, val deleteMessageSeconds: Optional<DurationInSeconds> = Optional.Missing())","description":"dev.kord.rest.json.request.GuildBanCreateRequest","location":"rest/dev.kord.rest.json.request/-guild-ban-create-request/index.html","searchKeys":["GuildBanCreateRequest","data class GuildBanCreateRequest constructor(reason: Optional<String> = Optional.Missing(), deleteMessagesDays: OptionalInt = OptionalInt.Missing, val deleteMessageSeconds: Optional<DurationInSeconds> = Optional.Missing())","dev.kord.rest.json.request.GuildBanCreateRequest"]},{"name":"data class GuildChannelCreateRequest(val name: String, val type: ChannelType, val topic: Optional<String> = Optional.Missing(), val bitrate: OptionalInt = OptionalInt.Missing, val userLimit: OptionalInt = OptionalInt.Missing, val rateLimitPerUser: Optional<DurationInSeconds> = Optional.Missing(), val position: OptionalInt = OptionalInt.Missing, val permissionOverwrite: Optional<Set<Overwrite>> = Optional.Missing(), val parentId: OptionalSnowflake = OptionalSnowflake.Missing, val nsfw: OptionalBoolean = OptionalBoolean.Missing, val id: OptionalSnowflake = OptionalSnowflake.Missing, val defaultAutoArchiveDuration: Optional<ArchiveDuration> = Optional.Missing())","description":"dev.kord.rest.json.request.GuildChannelCreateRequest","location":"rest/dev.kord.rest.json.request/-guild-channel-create-request/index.html","searchKeys":["GuildChannelCreateRequest","data class GuildChannelCreateRequest(val name: String, val type: ChannelType, val topic: Optional<String> = Optional.Missing(), val bitrate: OptionalInt = OptionalInt.Missing, val userLimit: OptionalInt = OptionalInt.Missing, val rateLimitPerUser: Optional<DurationInSeconds> = Optional.Missing(), val position: OptionalInt = OptionalInt.Missing, val permissionOverwrite: Optional<Set<Overwrite>> = Optional.Missing(), val parentId: OptionalSnowflake = OptionalSnowflake.Missing, val nsfw: OptionalBoolean = OptionalBoolean.Missing, val id: OptionalSnowflake = OptionalSnowflake.Missing, val defaultAutoArchiveDuration: Optional<ArchiveDuration> = Optional.Missing())","dev.kord.rest.json.request.GuildChannelCreateRequest"]},{"name":"data class GuildChannelPositionModifyRequest(val swaps: List<ChannelPositionSwapRequest>)","description":"dev.kord.rest.json.request.GuildChannelPositionModifyRequest","location":"rest/dev.kord.rest.json.request/-guild-channel-position-modify-request/index.html","searchKeys":["GuildChannelPositionModifyRequest","data class GuildChannelPositionModifyRequest(val swaps: List<ChannelPositionSwapRequest>)","dev.kord.rest.json.request.GuildChannelPositionModifyRequest"]},{"name":"data class GuildCreateRequest(val name: String, val region: Optional<String> = Optional.Missing(), val icon: Optional<String> = Optional.Missing(), val verificationLevel: Optional<VerificationLevel> = Optional.Missing(), val defaultNotificationLevel: Optional<DefaultMessageNotificationLevel> = Optional.Missing(), val explicitContentFilter: Optional<ExplicitContentFilter> = Optional.Missing(), val roles: Optional<List<GuildRoleCreateRequest>> = Optional.Missing(), val channels: Optional<List<GuildChannelCreateRequest>> = Optional.Missing(), val afkChannelId: OptionalSnowflake = OptionalSnowflake.Missing, val afkTimeout: Optional<DurationInSeconds> = Optional.Missing(), val systemChannelId: OptionalSnowflake = OptionalSnowflake.Missing)","description":"dev.kord.rest.json.request.GuildCreateRequest","location":"rest/dev.kord.rest.json.request/-guild-create-request/index.html","searchKeys":["GuildCreateRequest","data class GuildCreateRequest(val name: String, val region: Optional<String> = Optional.Missing(), val icon: Optional<String> = Optional.Missing(), val verificationLevel: Optional<VerificationLevel> = Optional.Missing(), val defaultNotificationLevel: Optional<DefaultMessageNotificationLevel> = Optional.Missing(), val explicitContentFilter: Optional<ExplicitContentFilter> = Optional.Missing(), val roles: Optional<List<GuildRoleCreateRequest>> = Optional.Missing(), val channels: Optional<List<GuildChannelCreateRequest>> = Optional.Missing(), val afkChannelId: OptionalSnowflake = OptionalSnowflake.Missing, val afkTimeout: Optional<DurationInSeconds> = Optional.Missing(), val systemChannelId: OptionalSnowflake = OptionalSnowflake.Missing)","dev.kord.rest.json.request.GuildCreateRequest"]},{"name":"data class GuildFromTemplateCreateRequest(val name: String, val image: Optional<String> = Optional.Missing())","description":"dev.kord.rest.json.request.GuildFromTemplateCreateRequest","location":"rest/dev.kord.rest.json.request/-guild-from-template-create-request/index.html","searchKeys":["GuildFromTemplateCreateRequest","data class GuildFromTemplateCreateRequest(val name: String, val image: Optional<String> = Optional.Missing())","dev.kord.rest.json.request.GuildFromTemplateCreateRequest"]},{"name":"data class GuildIntegrationCreateRequest(val type: Int, val id: String)","description":"dev.kord.rest.json.request.GuildIntegrationCreateRequest","location":"rest/dev.kord.rest.json.request/-guild-integration-create-request/index.html","searchKeys":["GuildIntegrationCreateRequest","data class GuildIntegrationCreateRequest(val type: Int, val id: String)","dev.kord.rest.json.request.GuildIntegrationCreateRequest"]},{"name":"data class GuildIntegrationModifyRequest(val expireBehavior: Optional<IntegrationExpireBehavior> = Optional.Missing(), val expirePeriod: OptionalInt? = OptionalInt.Missing, val emoticons: OptionalBoolean = OptionalBoolean.Missing)","description":"dev.kord.rest.json.request.GuildIntegrationModifyRequest","location":"rest/dev.kord.rest.json.request/-guild-integration-modify-request/index.html","searchKeys":["GuildIntegrationModifyRequest","data class GuildIntegrationModifyRequest(val expireBehavior: Optional<IntegrationExpireBehavior> = Optional.Missing(), val expirePeriod: OptionalInt? = OptionalInt.Missing, val emoticons: OptionalBoolean = OptionalBoolean.Missing)","dev.kord.rest.json.request.GuildIntegrationModifyRequest"]},{"name":"data class GuildMFALevelModifyRequest(val level: MFALevel)","description":"dev.kord.rest.json.request.GuildMFALevelModifyRequest","location":"rest/dev.kord.rest.json.request/-guild-m-f-a-level-modify-request/index.html","searchKeys":["GuildMFALevelModifyRequest","data class GuildMFALevelModifyRequest(val level: MFALevel)","dev.kord.rest.json.request.GuildMFALevelModifyRequest"]},{"name":"data class GuildMFALevelModifyResponse(val level: MFALevel)","description":"dev.kord.rest.json.response.GuildMFALevelModifyResponse","location":"rest/dev.kord.rest.json.response/-guild-m-f-a-level-modify-response/index.html","searchKeys":["GuildMFALevelModifyResponse","data class GuildMFALevelModifyResponse(val level: MFALevel)","dev.kord.rest.json.response.GuildMFALevelModifyResponse"]},{"name":"data class GuildMemberAddRequest(val token: String, val nick: Optional<String> = Optional.Missing(), val roles: Optional<Set<Snowflake>> = Optional.Missing(), val mute: OptionalBoolean = OptionalBoolean.Missing, val deaf: OptionalBoolean = OptionalBoolean.Missing, val communicationDisabledUntil: Optional<Instant> = Optional.Missing())","description":"dev.kord.rest.json.request.GuildMemberAddRequest","location":"rest/dev.kord.rest.json.request/-guild-member-add-request/index.html","searchKeys":["GuildMemberAddRequest","data class GuildMemberAddRequest(val token: String, val nick: Optional<String> = Optional.Missing(), val roles: Optional<Set<Snowflake>> = Optional.Missing(), val mute: OptionalBoolean = OptionalBoolean.Missing, val deaf: OptionalBoolean = OptionalBoolean.Missing, val communicationDisabledUntil: Optional<Instant> = Optional.Missing())","dev.kord.rest.json.request.GuildMemberAddRequest"]},{"name":"data class GuildMemberModifyRequest(val nick: Optional<String?> = Optional.Missing(), val roles: Optional<Set<Snowflake>?> = Optional.Missing(), val mute: OptionalBoolean? = OptionalBoolean.Missing, val deaf: OptionalBoolean? = OptionalBoolean.Missing, val channelId: OptionalSnowflake? = OptionalSnowflake.Missing, val communicationDisabledUntil: Optional<Instant?> = Optional.Missing())","description":"dev.kord.rest.json.request.GuildMemberModifyRequest","location":"rest/dev.kord.rest.json.request/-guild-member-modify-request/index.html","searchKeys":["GuildMemberModifyRequest","data class GuildMemberModifyRequest(val nick: Optional<String?> = Optional.Missing(), val roles: Optional<Set<Snowflake>?> = Optional.Missing(), val mute: OptionalBoolean? = OptionalBoolean.Missing, val deaf: OptionalBoolean? = OptionalBoolean.Missing, val channelId: OptionalSnowflake? = OptionalSnowflake.Missing, val communicationDisabledUntil: Optional<Instant?> = Optional.Missing())","dev.kord.rest.json.request.GuildMemberModifyRequest"]},{"name":"data class GuildModifyRequest(val name: Optional<String> = Optional.Missing(), val region: Optional<String?> = Optional.Missing(), val verificationLevel: Optional<VerificationLevel?> = Optional.Missing(), val defaultMessageNotificationLevel: Optional<DefaultMessageNotificationLevel?> = Optional.Missing(), val contentFilter: Optional<ExplicitContentFilter?> = Optional.Missing(), val afkChannelId: OptionalSnowflake? = OptionalSnowflake.Missing, val afkTimeout: Optional<DurationInSeconds> = Optional.Missing(), val icon: Optional<String?> = Optional.Missing(), val ownerId: OptionalSnowflake = OptionalSnowflake.Missing, val splash: Optional<String?> = Optional.Missing(), val banner: Optional<String?> = Optional.Missing(), val systemChannelId: OptionalSnowflake? = OptionalSnowflake.Missing, val rulesChannelId: OptionalSnowflake? = OptionalSnowflake.Missing, val publicUpdatesChannelId: OptionalSnowflake? = OptionalSnowflake.Missing, val preferredLocale: Optional<String?> = Optional.Missing())","description":"dev.kord.rest.json.request.GuildModifyRequest","location":"rest/dev.kord.rest.json.request/-guild-modify-request/index.html","searchKeys":["GuildModifyRequest","data class GuildModifyRequest(val name: Optional<String> = Optional.Missing(), val region: Optional<String?> = Optional.Missing(), val verificationLevel: Optional<VerificationLevel?> = Optional.Missing(), val defaultMessageNotificationLevel: Optional<DefaultMessageNotificationLevel?> = Optional.Missing(), val contentFilter: Optional<ExplicitContentFilter?> = Optional.Missing(), val afkChannelId: OptionalSnowflake? = OptionalSnowflake.Missing, val afkTimeout: Optional<DurationInSeconds> = Optional.Missing(), val icon: Optional<String?> = Optional.Missing(), val ownerId: OptionalSnowflake = OptionalSnowflake.Missing, val splash: Optional<String?> = Optional.Missing(), val banner: Optional<String?> = Optional.Missing(), val systemChannelId: OptionalSnowflake? = OptionalSnowflake.Missing, val rulesChannelId: OptionalSnowflake? = OptionalSnowflake.Missing, val publicUpdatesChannelId: OptionalSnowflake? = OptionalSnowflake.Missing, val preferredLocale: Optional<String?> = Optional.Missing())","dev.kord.rest.json.request.GuildModifyRequest"]},{"name":"data class GuildRoleCreateRequest(val name: Optional<String> = Optional.Missing(), val permissions: Optional<Permissions> = Optional.Missing(), val color: Optional<Color> = Optional.Missing(), val hoist: OptionalBoolean = OptionalBoolean.Missing, val icon: Optional<String?> = Optional.Missing(), val unicodeEmoji: Optional<String?> = Optional.Missing(), val mentionable: OptionalBoolean = OptionalBoolean.Missing, val id: OptionalSnowflake = OptionalSnowflake.Missing)","description":"dev.kord.rest.json.request.GuildRoleCreateRequest","location":"rest/dev.kord.rest.json.request/-guild-role-create-request/index.html","searchKeys":["GuildRoleCreateRequest","data class GuildRoleCreateRequest(val name: Optional<String> = Optional.Missing(), val permissions: Optional<Permissions> = Optional.Missing(), val color: Optional<Color> = Optional.Missing(), val hoist: OptionalBoolean = OptionalBoolean.Missing, val icon: Optional<String?> = Optional.Missing(), val unicodeEmoji: Optional<String?> = Optional.Missing(), val mentionable: OptionalBoolean = OptionalBoolean.Missing, val id: OptionalSnowflake = OptionalSnowflake.Missing)","dev.kord.rest.json.request.GuildRoleCreateRequest"]},{"name":"data class GuildRoleModifyRequest(val name: Optional<String?> = Optional.Missing(), val permissions: Optional<Permissions?> = Optional.Missing(), val color: Optional<Color?> = Optional.Missing(), val hoist: OptionalBoolean? = OptionalBoolean.Missing, val icon: Optional<String?> = Optional.Missing(), val unicodeEmoji: Optional<String?> = Optional.Missing(), val mentionable: OptionalBoolean? = OptionalBoolean.Missing)","description":"dev.kord.rest.json.request.GuildRoleModifyRequest","location":"rest/dev.kord.rest.json.request/-guild-role-modify-request/index.html","searchKeys":["GuildRoleModifyRequest","data class GuildRoleModifyRequest(val name: Optional<String?> = Optional.Missing(), val permissions: Optional<Permissions?> = Optional.Missing(), val color: Optional<Color?> = Optional.Missing(), val hoist: OptionalBoolean? = OptionalBoolean.Missing, val icon: Optional<String?> = Optional.Missing(), val unicodeEmoji: Optional<String?> = Optional.Missing(), val mentionable: OptionalBoolean? = OptionalBoolean.Missing)","dev.kord.rest.json.request.GuildRoleModifyRequest"]},{"name":"data class GuildRolePositionModifyRequest(val swaps: List<Pair<Snowflake, Int>>)","description":"dev.kord.rest.json.request.GuildRolePositionModifyRequest","location":"rest/dev.kord.rest.json.request/-guild-role-position-modify-request/index.html","searchKeys":["GuildRolePositionModifyRequest","data class GuildRolePositionModifyRequest(val swaps: List<Pair<Snowflake, Int>>)","dev.kord.rest.json.request.GuildRolePositionModifyRequest"]},{"name":"data class GuildScheduledEventCreateRequest(val channelId: OptionalSnowflake = OptionalSnowflake.Missing, val entityMetadata: Optional<GuildScheduledEventEntityMetadata> = Optional.Missing(), val name: String, val privacyLevel: GuildScheduledEventPrivacyLevel, val scheduledStartTime: Instant, val scheduledEndTime: Optional<Instant> = Optional.Missing(), val description: Optional<String> = Optional.Missing(), val entityType: ScheduledEntityType, val image: Optional<String> = Optional.Missing())","description":"dev.kord.rest.json.request.GuildScheduledEventCreateRequest","location":"rest/dev.kord.rest.json.request/-guild-scheduled-event-create-request/index.html","searchKeys":["GuildScheduledEventCreateRequest","data class GuildScheduledEventCreateRequest(val channelId: OptionalSnowflake = OptionalSnowflake.Missing, val entityMetadata: Optional<GuildScheduledEventEntityMetadata> = Optional.Missing(), val name: String, val privacyLevel: GuildScheduledEventPrivacyLevel, val scheduledStartTime: Instant, val scheduledEndTime: Optional<Instant> = Optional.Missing(), val description: Optional<String> = Optional.Missing(), val entityType: ScheduledEntityType, val image: Optional<String> = Optional.Missing())","dev.kord.rest.json.request.GuildScheduledEventCreateRequest"]},{"name":"data class GuildScheduledEventUsersResponse(val guildScheduledEventId: Snowflake, val user: DiscordUser, val member: Optional<DiscordGuildMember> = Optional.Missing())","description":"dev.kord.rest.json.request.GuildScheduledEventUsersResponse","location":"rest/dev.kord.rest.json.request/-guild-scheduled-event-users-response/index.html","searchKeys":["GuildScheduledEventUsersResponse","data class GuildScheduledEventUsersResponse(val guildScheduledEventId: Snowflake, val user: DiscordUser, val member: Optional<DiscordGuildMember> = Optional.Missing())","dev.kord.rest.json.request.GuildScheduledEventUsersResponse"]},{"name":"data class GuildStickerCreateRequest(val name: String, val description: String, val tags: String)","description":"dev.kord.rest.json.request.GuildStickerCreateRequest","location":"rest/dev.kord.rest.json.request/-guild-sticker-create-request/index.html","searchKeys":["GuildStickerCreateRequest","data class GuildStickerCreateRequest(val name: String, val description: String, val tags: String)","dev.kord.rest.json.request.GuildStickerCreateRequest"]},{"name":"data class GuildStickerModifyRequest(val name: Optional<String> = Optional.Missing(), val description: Optional<String> = Optional.Missing(), val tags: Optional<String> = Optional.Missing())","description":"dev.kord.rest.json.request.GuildStickerModifyRequest","location":"rest/dev.kord.rest.json.request/-guild-sticker-modify-request/index.html","searchKeys":["GuildStickerModifyRequest","data class GuildStickerModifyRequest(val name: Optional<String> = Optional.Missing(), val description: Optional<String> = Optional.Missing(), val tags: Optional<String> = Optional.Missing())","dev.kord.rest.json.request.GuildStickerModifyRequest"]},{"name":"data class GuildTemplateCreateRequest(val name: String, val description: Optional<String?> = Optional.Missing())","description":"dev.kord.rest.json.request.GuildTemplateCreateRequest","location":"rest/dev.kord.rest.json.request/-guild-template-create-request/index.html","searchKeys":["GuildTemplateCreateRequest","data class GuildTemplateCreateRequest(val name: String, val description: Optional<String?> = Optional.Missing())","dev.kord.rest.json.request.GuildTemplateCreateRequest"]},{"name":"data class GuildTemplateModifyRequest(val name: Optional<String> = Optional.Missing(), val description: Optional<String?> = Optional.Missing())","description":"dev.kord.rest.json.request.GuildTemplateModifyRequest","location":"rest/dev.kord.rest.json.request/-guild-template-modify-request/index.html","searchKeys":["GuildTemplateModifyRequest","data class GuildTemplateModifyRequest(val name: Optional<String> = Optional.Missing(), val description: Optional<String?> = Optional.Missing())","dev.kord.rest.json.request.GuildTemplateModifyRequest"]},{"name":"data class GuildWelcomeScreenModifyRequest(val enabled: OptionalBoolean = OptionalBoolean.Missing, val welcomeScreenChannels: Optional<List<DiscordWelcomeScreenChannel>> = Optional.Missing(), val description: Optional<String> = Optional.Missing())","description":"dev.kord.rest.json.request.GuildWelcomeScreenModifyRequest","location":"rest/dev.kord.rest.json.request/-guild-welcome-screen-modify-request/index.html","searchKeys":["GuildWelcomeScreenModifyRequest","data class GuildWelcomeScreenModifyRequest(val enabled: OptionalBoolean = OptionalBoolean.Missing, val welcomeScreenChannels: Optional<List<DiscordWelcomeScreenChannel>> = Optional.Missing(), val description: Optional<String> = Optional.Missing())","dev.kord.rest.json.request.GuildWelcomeScreenModifyRequest"]},{"name":"data class GuildWidgetModifyRequest(val enabled: OptionalBoolean = OptionalBoolean.Missing, val channelId: OptionalSnowflake? = OptionalSnowflake.Missing)","description":"dev.kord.rest.json.request.GuildWidgetModifyRequest","location":"rest/dev.kord.rest.json.request/-guild-widget-modify-request/index.html","searchKeys":["GuildWidgetModifyRequest","data class GuildWidgetModifyRequest(val enabled: OptionalBoolean = OptionalBoolean.Missing, val channelId: OptionalSnowflake? = OptionalSnowflake.Missing)","dev.kord.rest.json.request.GuildWidgetModifyRequest"]},{"name":"data class HttpStatus(val code: Int, val message: String)","description":"dev.kord.rest.request.HttpStatus","location":"rest/dev.kord.rest.request/-http-status/index.html","searchKeys":["HttpStatus","data class HttpStatus(val code: Int, val message: String)","dev.kord.rest.request.HttpStatus"]},{"name":"data class InteractionApplicationCommandCallbackData(val tts: OptionalBoolean = OptionalBoolean.Missing, val content: Optional<String?> = Optional.Missing(), val embeds: Optional<List<EmbedRequest>> = Optional.Missing(), val allowedMentions: Optional<AllowedMentions?> = Optional.Missing(), val flags: Optional<MessageFlags> = Optional.Missing(), val components: Optional<List<DiscordComponent>> = Optional.Missing())","description":"dev.kord.rest.json.request.InteractionApplicationCommandCallbackData","location":"rest/dev.kord.rest.json.request/-interaction-application-command-callback-data/index.html","searchKeys":["InteractionApplicationCommandCallbackData","data class InteractionApplicationCommandCallbackData(val tts: OptionalBoolean = OptionalBoolean.Missing, val content: Optional<String?> = Optional.Missing(), val embeds: Optional<List<EmbedRequest>> = Optional.Missing(), val allowedMentions: Optional<AllowedMentions?> = Optional.Missing(), val flags: Optional<MessageFlags> = Optional.Missing(), val components: Optional<List<DiscordComponent>> = Optional.Missing())","dev.kord.rest.json.request.InteractionApplicationCommandCallbackData"]},{"name":"data class InteractionResponseCreateRequest(val type: InteractionResponseType, val data: Optional<InteractionApplicationCommandCallbackData> = Optional.Missing())","description":"dev.kord.rest.json.request.InteractionResponseCreateRequest","location":"rest/dev.kord.rest.json.request/-interaction-response-create-request/index.html","searchKeys":["InteractionResponseCreateRequest","data class InteractionResponseCreateRequest(val type: InteractionResponseType, val data: Optional<InteractionApplicationCommandCallbackData> = Optional.Missing())","dev.kord.rest.json.request.InteractionResponseCreateRequest"]},{"name":"data class InteractionResponseModifyRequest(val content: Optional<String?> = Optional.Missing(), val embeds: Optional<List<EmbedRequest>?> = Optional.Missing(), val allowedMentions: Optional<AllowedMentions?> = Optional.Missing(), val flags: Optional<MessageFlags?> = Optional.Missing(), val components: Optional<List<DiscordComponent>?> = Optional.Missing(), val attachments: Optional<MutableList<DiscordAttachment>?> = Optional.Missing())","description":"dev.kord.rest.json.request.InteractionResponseModifyRequest","location":"rest/dev.kord.rest.json.request/-interaction-response-modify-request/index.html","searchKeys":["InteractionResponseModifyRequest","data class InteractionResponseModifyRequest(val content: Optional<String?> = Optional.Missing(), val embeds: Optional<List<EmbedRequest>?> = Optional.Missing(), val allowedMentions: Optional<AllowedMentions?> = Optional.Missing(), val flags: Optional<MessageFlags?> = Optional.Missing(), val components: Optional<List<DiscordComponent>?> = Optional.Missing(), val attachments: Optional<MutableList<DiscordAttachment>?> = Optional.Missing())","dev.kord.rest.json.request.InteractionResponseModifyRequest"]},{"name":"data class InviteCreateRequest(val maxAge: Optional<DurationInSeconds> = Optional.Missing(), val maxUses: OptionalInt = OptionalInt.Missing, val temporary: OptionalBoolean = OptionalBoolean.Missing, val unique: OptionalBoolean = OptionalBoolean.Missing, targetUser: OptionalSnowflake = OptionalSnowflake.Missing, targetUserType: Optional<TargetUserType> = Optional.Missing(), val targetType: Optional<InviteTargetType> = Optional.Missing(), val targetUserId: OptionalSnowflake = OptionalSnowflake.Missing, val targetApplicationId: OptionalSnowflake = OptionalSnowflake.Missing)","description":"dev.kord.rest.json.request.InviteCreateRequest","location":"rest/dev.kord.rest.json.request/-invite-create-request/index.html","searchKeys":["InviteCreateRequest","data class InviteCreateRequest(val maxAge: Optional<DurationInSeconds> = Optional.Missing(), val maxUses: OptionalInt = OptionalInt.Missing, val temporary: OptionalBoolean = OptionalBoolean.Missing, val unique: OptionalBoolean = OptionalBoolean.Missing, targetUser: OptionalSnowflake = OptionalSnowflake.Missing, targetUserType: Optional<TargetUserType> = Optional.Missing(), val targetType: Optional<InviteTargetType> = Optional.Missing(), val targetUserId: OptionalSnowflake = OptionalSnowflake.Missing, val targetApplicationId: OptionalSnowflake = OptionalSnowflake.Missing)","dev.kord.rest.json.request.InviteCreateRequest"]},{"name":"data class ListThreadsBySnowflakeRequest(val before: Snowflake? = null, val limit: Int? = null)","description":"dev.kord.rest.json.request.ListThreadsBySnowflakeRequest","location":"rest/dev.kord.rest.json.request/-list-threads-by-snowflake-request/index.html","searchKeys":["ListThreadsBySnowflakeRequest","data class ListThreadsBySnowflakeRequest(val before: Snowflake? = null, val limit: Int? = null)","dev.kord.rest.json.request.ListThreadsBySnowflakeRequest"]},{"name":"data class ListThreadsByTimestampRequest(val before: Instant? = null, val limit: Int? = null)","description":"dev.kord.rest.json.request.ListThreadsByTimestampRequest","location":"rest/dev.kord.rest.json.request/-list-threads-by-timestamp-request/index.html","searchKeys":["ListThreadsByTimestampRequest","data class ListThreadsByTimestampRequest(val before: Instant? = null, val limit: Int? = null)","dev.kord.rest.json.request.ListThreadsByTimestampRequest"]},{"name":"data class ListThreadsResponse(val threads: List<DiscordChannel>, val members: List<DiscordThreadMember>)","description":"dev.kord.rest.json.response.ListThreadsResponse","location":"rest/dev.kord.rest.json.response/-list-threads-response/index.html","searchKeys":["ListThreadsResponse","data class ListThreadsResponse(val threads: List<DiscordChannel>, val members: List<DiscordThreadMember>)","dev.kord.rest.json.response.ListThreadsResponse"]},{"name":"data class MajorParamIdentifier(val route: Route<*>, val param: String) : RequestIdentifier","description":"dev.kord.rest.request.RequestIdentifier.MajorParamIdentifier","location":"rest/dev.kord.rest.request/-request-identifier/-major-param-identifier/index.html","searchKeys":["MajorParamIdentifier","data class MajorParamIdentifier(val route: Route<*>, val param: String) : RequestIdentifier","dev.kord.rest.request.RequestIdentifier.MajorParamIdentifier"]},{"name":"data class MessageCreateRequest(val content: Optional<String> = Optional.Missing(), val nonce: Optional<String> = Optional.Missing(), val tts: OptionalBoolean = OptionalBoolean.Missing, val embeds: Optional<List<EmbedRequest>> = Optional.Missing(), val allowedMentions: Optional<AllowedMentions> = Optional.Missing(), val messageReference: Optional<DiscordMessageReference> = Optional.Missing(), val components: Optional<List<DiscordComponent>> = Optional.Missing())","description":"dev.kord.rest.json.request.MessageCreateRequest","location":"rest/dev.kord.rest.json.request/-message-create-request/index.html","searchKeys":["MessageCreateRequest","data class MessageCreateRequest(val content: Optional<String> = Optional.Missing(), val nonce: Optional<String> = Optional.Missing(), val tts: OptionalBoolean = OptionalBoolean.Missing, val embeds: Optional<List<EmbedRequest>> = Optional.Missing(), val allowedMentions: Optional<AllowedMentions> = Optional.Missing(), val messageReference: Optional<DiscordMessageReference> = Optional.Missing(), val components: Optional<List<DiscordComponent>> = Optional.Missing())","dev.kord.rest.json.request.MessageCreateRequest"]},{"name":"data class MessageEditPatchRequest(val content: Optional<String?> = Optional.Missing(), val embeds: Optional<List<EmbedRequest>?> = Optional.Missing(), val flags: Optional<MessageFlags?> = Optional.Missing(), val allowedMentions: Optional<AllowedMentions?> = Optional.Missing(), val components: Optional<List<DiscordComponent>> = Optional.Missing(), val attachments: Optional<MutableList<DiscordAttachment>> = Optional.Missing())","description":"dev.kord.rest.json.request.MessageEditPatchRequest","location":"rest/dev.kord.rest.json.request/-message-edit-patch-request/index.html","searchKeys":["MessageEditPatchRequest","data class MessageEditPatchRequest(val content: Optional<String?> = Optional.Missing(), val embeds: Optional<List<EmbedRequest>?> = Optional.Missing(), val flags: Optional<MessageFlags?> = Optional.Missing(), val allowedMentions: Optional<AllowedMentions?> = Optional.Missing(), val components: Optional<List<DiscordComponent>> = Optional.Missing(), val attachments: Optional<MutableList<DiscordAttachment>> = Optional.Missing())","dev.kord.rest.json.request.MessageEditPatchRequest"]},{"name":"data class ModalResponseCreateRequest(val type: InteractionResponseType, val data: DiscordModal)","description":"dev.kord.rest.json.request.ModalResponseCreateRequest","location":"rest/dev.kord.rest.json.request/-modal-response-create-request/index.html","searchKeys":["ModalResponseCreateRequest","data class ModalResponseCreateRequest(val type: InteractionResponseType, val data: DiscordModal)","dev.kord.rest.json.request.ModalResponseCreateRequest"]},{"name":"data class MultiPartWebhookExecuteRequest(val request: WebhookExecuteRequest, val files: List<NamedFile> = emptyList())","description":"dev.kord.rest.json.request.MultiPartWebhookExecuteRequest","location":"rest/dev.kord.rest.json.request/-multi-part-webhook-execute-request/index.html","searchKeys":["MultiPartWebhookExecuteRequest","data class MultiPartWebhookExecuteRequest(val request: WebhookExecuteRequest, val files: List<NamedFile> = emptyList())","dev.kord.rest.json.request.MultiPartWebhookExecuteRequest"]},{"name":"data class MultipartFollowupMessageCreateRequest(val request: FollowupMessageCreateRequest, val files: List<NamedFile> = emptyList())","description":"dev.kord.rest.json.request.MultipartFollowupMessageCreateRequest","location":"rest/dev.kord.rest.json.request/-multipart-followup-message-create-request/index.html","searchKeys":["MultipartFollowupMessageCreateRequest","data class MultipartFollowupMessageCreateRequest(val request: FollowupMessageCreateRequest, val files: List<NamedFile> = emptyList())","dev.kord.rest.json.request.MultipartFollowupMessageCreateRequest"]},{"name":"data class MultipartFollowupMessageModifyRequest(val request: FollowupMessageModifyRequest, val files: Optional<List<NamedFile>> = Optional.Missing())","description":"dev.kord.rest.json.request.MultipartFollowupMessageModifyRequest","location":"rest/dev.kord.rest.json.request/-multipart-followup-message-modify-request/index.html","searchKeys":["MultipartFollowupMessageModifyRequest","data class MultipartFollowupMessageModifyRequest(val request: FollowupMessageModifyRequest, val files: Optional<List<NamedFile>> = Optional.Missing())","dev.kord.rest.json.request.MultipartFollowupMessageModifyRequest"]},{"name":"data class MultipartGuildStickerCreateRequest(val request: GuildStickerCreateRequest, val file: NamedFile)","description":"dev.kord.rest.json.request.MultipartGuildStickerCreateRequest","location":"rest/dev.kord.rest.json.request/-multipart-guild-sticker-create-request/index.html","searchKeys":["MultipartGuildStickerCreateRequest","data class MultipartGuildStickerCreateRequest(val request: GuildStickerCreateRequest, val file: NamedFile)","dev.kord.rest.json.request.MultipartGuildStickerCreateRequest"]},{"name":"data class MultipartInteractionResponseCreateRequest(val request: InteractionResponseCreateRequest, val files: Optional<List<NamedFile>> = Optional.Missing())","description":"dev.kord.rest.json.request.MultipartInteractionResponseCreateRequest","location":"rest/dev.kord.rest.json.request/-multipart-interaction-response-create-request/index.html","searchKeys":["MultipartInteractionResponseCreateRequest","data class MultipartInteractionResponseCreateRequest(val request: InteractionResponseCreateRequest, val files: Optional<List<NamedFile>> = Optional.Missing())","dev.kord.rest.json.request.MultipartInteractionResponseCreateRequest"]},{"name":"data class MultipartInteractionResponseModifyRequest(val request: InteractionResponseModifyRequest, val files: Optional<List<NamedFile>> = Optional.Missing())","description":"dev.kord.rest.json.request.MultipartInteractionResponseModifyRequest","location":"rest/dev.kord.rest.json.request/-multipart-interaction-response-modify-request/index.html","searchKeys":["MultipartInteractionResponseModifyRequest","data class MultipartInteractionResponseModifyRequest(val request: InteractionResponseModifyRequest, val files: Optional<List<NamedFile>> = Optional.Missing())","dev.kord.rest.json.request.MultipartInteractionResponseModifyRequest"]},{"name":"data class MultipartMessageCreateRequest(val request: MessageCreateRequest, val files: List<NamedFile> = emptyList())","description":"dev.kord.rest.json.request.MultipartMessageCreateRequest","location":"rest/dev.kord.rest.json.request/-multipart-message-create-request/index.html","searchKeys":["MultipartMessageCreateRequest","data class MultipartMessageCreateRequest(val request: MessageCreateRequest, val files: List<NamedFile> = emptyList())","dev.kord.rest.json.request.MultipartMessageCreateRequest"]},{"name":"data class MultipartMessagePatchRequest(val requests: MessageEditPatchRequest, val files: Optional<List<NamedFile>> = Optional.Missing())","description":"dev.kord.rest.json.request.MultipartMessagePatchRequest","location":"rest/dev.kord.rest.json.request/-multipart-message-patch-request/index.html","searchKeys":["MultipartMessagePatchRequest","data class MultipartMessagePatchRequest(val requests: MessageEditPatchRequest, val files: Optional<List<NamedFile>> = Optional.Missing())","dev.kord.rest.json.request.MultipartMessagePatchRequest"]},{"name":"data class MultipartWebhookEditMessageRequest(val request: WebhookEditMessageRequest, val files: Optional<List<NamedFile>> = Optional.Missing())","description":"dev.kord.rest.json.request.MultipartWebhookEditMessageRequest","location":"rest/dev.kord.rest.json.request/-multipart-webhook-edit-message-request/index.html","searchKeys":["MultipartWebhookEditMessageRequest","data class MultipartWebhookEditMessageRequest(val request: WebhookEditMessageRequest, val files: Optional<List<NamedFile>> = Optional.Missing())","dev.kord.rest.json.request.MultipartWebhookEditMessageRequest"]},{"name":"data class PartialChannelResponse(val name: String, val type: ChannelType)","description":"dev.kord.rest.json.response.PartialChannelResponse","location":"rest/dev.kord.rest.json.response/-partial-channel-response/index.html","searchKeys":["PartialChannelResponse","data class PartialChannelResponse(val name: String, val type: ChannelType)","dev.kord.rest.json.response.PartialChannelResponse"]},{"name":"data class PruneResponse(val pruned: Int?)","description":"dev.kord.rest.json.response.PruneResponse","location":"rest/dev.kord.rest.json.response/-prune-response/index.html","searchKeys":["PruneResponse","data class PruneResponse(val pruned: Int?)","dev.kord.rest.json.response.PruneResponse"]},{"name":"data class RateLimit(val total: Total, val remaining: Remaining)","description":"dev.kord.rest.ratelimit.RateLimit","location":"rest/dev.kord.rest.ratelimit/-rate-limit/index.html","searchKeys":["RateLimit","data class RateLimit(val total: Total, val remaining: Remaining)","dev.kord.rest.ratelimit.RateLimit"]},{"name":"data class RequestBody<T : Any>(val strategy: SerializationStrategy<T>, val body: T)","description":"dev.kord.rest.request.RequestBody","location":"rest/dev.kord.rest.request/-request-body/index.html","searchKeys":["RequestBody","data class RequestBody<T : Any>(val strategy: SerializationStrategy<T>, val body: T)","dev.kord.rest.request.RequestBody"]},{"name":"data class RouteIdentifier(val route: Route<*>) : RequestIdentifier","description":"dev.kord.rest.request.RequestIdentifier.RouteIdentifier","location":"rest/dev.kord.rest.request/-request-identifier/-route-identifier/index.html","searchKeys":["RouteIdentifier","data class RouteIdentifier(val route: Route<*>) : RequestIdentifier","dev.kord.rest.request.RequestIdentifier.RouteIdentifier"]},{"name":"data class ScheduledEventModifyRequest(val channelId: OptionalSnowflake? = OptionalSnowflake.Missing, val entityMetadata: Optional<GuildScheduledEventEntityMetadata?> = Optional.Missing(), val name: Optional<String> = Optional.Missing(), val privacyLevel: Optional<GuildScheduledEventPrivacyLevel> = Optional.Missing(), val scheduledStartTime: Optional<Instant> = Optional.Missing(), val scheduledEndTime: Optional<Instant> = Optional.Missing(), val description: Optional<String?> = Optional.Missing(), val entityType: Optional<ScheduledEntityType> = Optional.Missing(), val status: Optional<GuildScheduledEventStatus> = Optional.Missing(), val image: Optional<String> = Optional.Missing())","description":"dev.kord.rest.json.request.ScheduledEventModifyRequest","location":"rest/dev.kord.rest.json.request/-scheduled-event-modify-request/index.html","searchKeys":["ScheduledEventModifyRequest","data class ScheduledEventModifyRequest(val channelId: OptionalSnowflake? = OptionalSnowflake.Missing, val entityMetadata: Optional<GuildScheduledEventEntityMetadata?> = Optional.Missing(), val name: Optional<String> = Optional.Missing(), val privacyLevel: Optional<GuildScheduledEventPrivacyLevel> = Optional.Missing(), val scheduledStartTime: Optional<Instant> = Optional.Missing(), val scheduledEndTime: Optional<Instant> = Optional.Missing(), val description: Optional<String?> = Optional.Missing(), val entityType: Optional<ScheduledEntityType> = Optional.Missing(), val status: Optional<GuildScheduledEventStatus> = Optional.Missing(), val image: Optional<String> = Optional.Missing())","dev.kord.rest.json.request.ScheduledEventModifyRequest"]},{"name":"data class SessionStartLimitResponse(val total: Int, val remaining: Int, val resetAfter: DurationInMilliseconds, val maxConcurrency: Int)","description":"dev.kord.rest.json.response.SessionStartLimitResponse","location":"rest/dev.kord.rest.json.response/-session-start-limit-response/index.html","searchKeys":["SessionStartLimitResponse","data class SessionStartLimitResponse(val total: Int, val remaining: Int, val resetAfter: DurationInMilliseconds, val maxConcurrency: Int)","dev.kord.rest.json.response.SessionStartLimitResponse"]},{"name":"data class StageInstanceCreateRequest(val channelId: Snowflake, val topic: String, val privacyLevel: Optional<StageInstancePrivacyLevel> = Optional.Missing(), val sendStartNotification: OptionalBoolean = OptionalBoolean.Missing)","description":"dev.kord.rest.json.request.StageInstanceCreateRequest","location":"rest/dev.kord.rest.json.request/-stage-instance-create-request/index.html","searchKeys":["StageInstanceCreateRequest","data class StageInstanceCreateRequest(val channelId: Snowflake, val topic: String, val privacyLevel: Optional<StageInstancePrivacyLevel> = Optional.Missing(), val sendStartNotification: OptionalBoolean = OptionalBoolean.Missing)","dev.kord.rest.json.request.StageInstanceCreateRequest"]},{"name":"data class StageInstanceModifyRequest(val topic: Optional<String> = Optional.Missing(), val privacyLevel: Optional<StageInstancePrivacyLevel> = Optional.Missing())","description":"dev.kord.rest.json.request.StageInstanceModifyRequest","location":"rest/dev.kord.rest.json.request/-stage-instance-modify-request/index.html","searchKeys":["StageInstanceModifyRequest","data class StageInstanceModifyRequest(val topic: Optional<String> = Optional.Missing(), val privacyLevel: Optional<StageInstancePrivacyLevel> = Optional.Missing())","dev.kord.rest.json.request.StageInstanceModifyRequest"]},{"name":"data class StartThreadRequest(val name: String, val autoArchiveDuration: ArchiveDuration, val type: Optional<ChannelType> = Optional.Missing(), val invitable: OptionalBoolean = OptionalBoolean.Missing)","description":"dev.kord.rest.json.request.StartThreadRequest","location":"rest/dev.kord.rest.json.request/-start-thread-request/index.html","searchKeys":["StartThreadRequest","data class StartThreadRequest(val name: String, val autoArchiveDuration: ArchiveDuration, val type: Optional<ChannelType> = Optional.Missing(), val invitable: OptionalBoolean = OptionalBoolean.Missing)","dev.kord.rest.json.request.StartThreadRequest"]},{"name":"data class UserAddDMRequest(val token: String, val nick: String)","description":"dev.kord.rest.json.request.UserAddDMRequest","location":"rest/dev.kord.rest.json.request/-user-add-d-m-request/index.html","searchKeys":["UserAddDMRequest","data class UserAddDMRequest(val token: String, val nick: String)","dev.kord.rest.json.request.UserAddDMRequest"]},{"name":"data class VoiceStateModifyRequest(val channelId: Snowflake, val suppress: OptionalBoolean = OptionalBoolean.Missing)","description":"dev.kord.rest.json.request.VoiceStateModifyRequest","location":"rest/dev.kord.rest.json.request/-voice-state-modify-request/index.html","searchKeys":["VoiceStateModifyRequest","data class VoiceStateModifyRequest(val channelId: Snowflake, val suppress: OptionalBoolean = OptionalBoolean.Missing)","dev.kord.rest.json.request.VoiceStateModifyRequest"]},{"name":"data class WebhookCreateRequest(val name: String, val avatar: Optional<String> = Optional.Missing())","description":"dev.kord.rest.json.request.WebhookCreateRequest","location":"rest/dev.kord.rest.json.request/-webhook-create-request/index.html","searchKeys":["WebhookCreateRequest","data class WebhookCreateRequest(val name: String, val avatar: Optional<String> = Optional.Missing())","dev.kord.rest.json.request.WebhookCreateRequest"]},{"name":"data class WebhookEditMessageRequest(val content: Optional<String?> = Optional.Missing(), val embeds: Optional<List<EmbedRequest>> = Optional.Missing(), val allowedMentions: Optional<AllowedMentions> = Optional.Missing(), val components: Optional<List<DiscordComponent>> = Optional.Missing(), val attachments: Optional<MutableList<DiscordAttachment>> = Optional.Missing())","description":"dev.kord.rest.json.request.WebhookEditMessageRequest","location":"rest/dev.kord.rest.json.request/-webhook-edit-message-request/index.html","searchKeys":["WebhookEditMessageRequest","data class WebhookEditMessageRequest(val content: Optional<String?> = Optional.Missing(), val embeds: Optional<List<EmbedRequest>> = Optional.Missing(), val allowedMentions: Optional<AllowedMentions> = Optional.Missing(), val components: Optional<List<DiscordComponent>> = Optional.Missing(), val attachments: Optional<MutableList<DiscordAttachment>> = Optional.Missing())","dev.kord.rest.json.request.WebhookEditMessageRequest"]},{"name":"data class WebhookExecuteRequest(val content: Optional<String> = Optional.Missing(), val username: Optional<String> = Optional.Missing(), val avatar: Optional<String> = Optional.Missing(), val tts: OptionalBoolean = OptionalBoolean.Missing, val embeds: Optional<List<EmbedRequest>> = Optional.Missing(), val allowedMentions: Optional<AllowedMentions> = Optional.Missing(), val components: Optional<List<DiscordComponent>> = Optional.Missing())","description":"dev.kord.rest.json.request.WebhookExecuteRequest","location":"rest/dev.kord.rest.json.request/-webhook-execute-request/index.html","searchKeys":["WebhookExecuteRequest","data class WebhookExecuteRequest(val content: Optional<String> = Optional.Missing(), val username: Optional<String> = Optional.Missing(), val avatar: Optional<String> = Optional.Missing(), val tts: OptionalBoolean = OptionalBoolean.Missing, val embeds: Optional<List<EmbedRequest>> = Optional.Missing(), val allowedMentions: Optional<AllowedMentions> = Optional.Missing(), val components: Optional<List<DiscordComponent>> = Optional.Missing())","dev.kord.rest.json.request.WebhookExecuteRequest"]},{"name":"data class WebhookModifyRequest(val name: Optional<String> = Optional.Missing(), val avatar: Optional<String?> = Optional.Missing(), val channelId: OptionalSnowflake = OptionalSnowflake.Missing)","description":"dev.kord.rest.json.request.WebhookModifyRequest","location":"rest/dev.kord.rest.json.request/-webhook-modify-request/index.html","searchKeys":["WebhookModifyRequest","data class WebhookModifyRequest(val name: Optional<String> = Optional.Missing(), val avatar: Optional<String?> = Optional.Missing(), val channelId: OptionalSnowflake = OptionalSnowflake.Missing)","dev.kord.rest.json.request.WebhookModifyRequest"]},{"name":"enum JsonErrorCode : Enum<JsonErrorCode> ","description":"dev.kord.rest.json.JsonErrorCode","location":"rest/dev.kord.rest.json/-json-error-code/index.html","searchKeys":["JsonErrorCode","enum JsonErrorCode : Enum<JsonErrorCode> ","dev.kord.rest.json.JsonErrorCode"]},{"name":"enum Size : Enum<Image.Size> ","description":"dev.kord.rest.Image.Size","location":"rest/dev.kord.rest/-image/-size/index.html","searchKeys":["Size","enum Size : Enum<Image.Size> ","dev.kord.rest.Image.Size"]},{"name":"fun <B : Any, R> JsonRequest(route: Route<R>, routeParams: Map<Route.Key, String>, parameters: StringValues, headers: StringValues, body: RequestBody<B>?, baseUrl: String = Route.baseUrl)","description":"dev.kord.rest.request.JsonRequest.JsonRequest","location":"rest/dev.kord.rest.request/-json-request/-json-request.html","searchKeys":["JsonRequest","fun <B : Any, R> JsonRequest(route: Route<R>, routeParams: Map<Route.Key, String>, parameters: StringValues, headers: StringValues, body: RequestBody<B>?, baseUrl: String = Route.baseUrl)","dev.kord.rest.request.JsonRequest.JsonRequest"]},{"name":"fun <B : Any, R> MultipartRequest(route: Route<R>, routeParams: Map<Route.Key, String>, parameters: StringValues, headers: StringValues, body: RequestBody<B>?, files: List<NamedFile> = emptyList(), baseUrl: String = Route.baseUrl)","description":"dev.kord.rest.request.MultipartRequest.MultipartRequest","location":"rest/dev.kord.rest.request/-multipart-request/-multipart-request.html","searchKeys":["MultipartRequest","fun <B : Any, R> MultipartRequest(route: Route<R>, routeParams: Map<Route.Key, String>, parameters: StringValues, headers: StringValues, body: RequestBody<B>?, files: List<NamedFile> = emptyList(), baseUrl: String = Route.baseUrl)","dev.kord.rest.request.MultipartRequest.MultipartRequest"]},{"name":"fun <E : Any> body(strategy: SerializationStrategy<E>, body: E)","description":"dev.kord.rest.request.RequestBuilder.body","location":"rest/dev.kord.rest.request/-request-builder/body.html","searchKeys":["body","fun <E : Any> body(strategy: SerializationStrategy<E>, body: E)","dev.kord.rest.request.RequestBuilder.body"]},{"name":"fun <T : Any> RequestBody(strategy: SerializationStrategy<T>, body: T)","description":"dev.kord.rest.request.RequestBody.RequestBody","location":"rest/dev.kord.rest.request/-request-body/-request-body.html","searchKeys":["RequestBody","fun <T : Any> RequestBody(strategy: SerializationStrategy<T>, body: T)","dev.kord.rest.request.RequestBody.RequestBody"]},{"name":"fun <T> AutoCompleteResponseCreateRequest(type: InteractionResponseType, data: DiscordAutoComplete<T>)","description":"dev.kord.rest.json.request.AutoCompleteResponseCreateRequest.AutoCompleteResponseCreateRequest","location":"rest/dev.kord.rest.json.request/-auto-complete-response-create-request/-auto-complete-response-create-request.html","searchKeys":["AutoCompleteResponseCreateRequest","fun <T> AutoCompleteResponseCreateRequest(type: InteractionResponseType, data: DiscordAutoComplete<T>)","dev.kord.rest.json.request.AutoCompleteResponseCreateRequest.AutoCompleteResponseCreateRequest"]},{"name":"fun <T> RequestBuilder(route: Route<T>, keySize: Int = 2)","description":"dev.kord.rest.request.RequestBuilder.RequestBuilder","location":"rest/dev.kord.rest.request/-request-builder/-request-builder.html","searchKeys":["RequestBuilder","fun <T> RequestBuilder(route: Route<T>, keySize: Int = 2)","dev.kord.rest.request.RequestBuilder.RequestBuilder"]},{"name":"fun <T> RequestBuilder<T>.auditLogReason(reason: String?)","description":"dev.kord.rest.request.auditLogReason","location":"rest/dev.kord.rest.request/audit-log-reason.html","searchKeys":["auditLogReason","fun <T> RequestBuilder<T>.auditLogReason(reason: String?)","dev.kord.rest.request.auditLogReason"]},{"name":"fun Accepted(bucketKey: BucketKey?, rateLimit: RateLimit?, reset: Reset)","description":"dev.kord.rest.ratelimit.RequestResponse.Accepted.Accepted","location":"rest/dev.kord.rest.ratelimit/-request-response/-accepted/-accepted.html","searchKeys":["Accepted","fun Accepted(bucketKey: BucketKey?, rateLimit: RateLimit?, reset: Reset)","dev.kord.rest.ratelimit.RequestResponse.Accepted.Accepted"]},{"name":"fun ActionRowBuilder()","description":"dev.kord.rest.builder.component.ActionRowBuilder.ActionRowBuilder","location":"rest/dev.kord.rest.builder.component/-action-row-builder/-action-row-builder.html","searchKeys":["ActionRowBuilder","fun ActionRowBuilder()","dev.kord.rest.builder.component.ActionRowBuilder.ActionRowBuilder"]},{"name":"fun After(id: Snowflake)","description":"dev.kord.rest.route.Position.After.After","location":"rest/dev.kord.rest.route/-position/-after/-after.html","searchKeys":["After","fun After(id: Snowflake)","dev.kord.rest.route.Position.After.After"]},{"name":"fun AllowedMentionsBuilder()","description":"dev.kord.rest.builder.message.AllowedMentionsBuilder.AllowedMentionsBuilder","location":"rest/dev.kord.rest.builder.message/-allowed-mentions-builder/-allowed-mentions-builder.html","searchKeys":["AllowedMentionsBuilder","fun AllowedMentionsBuilder()","dev.kord.rest.builder.message.AllowedMentionsBuilder.AllowedMentionsBuilder"]},{"name":"fun ApplicationCommandCreateRequest(name: String, nameLocalizations: Optional<Map<Locale, String>?> = Optional.Missing(), type: ApplicationCommandType, description: Optional<String> = Optional.Missing(), descriptionLocalizations: Optional<Map<Locale, String>?> = Optional.Missing(), options: Optional<List<ApplicationCommandOption>> = Optional.Missing(), defaultMemberPermissions: Optional<Permissions?> = Optional.Missing(), dmPermission: OptionalBoolean? = OptionalBoolean.Missing, defaultPermission: OptionalBoolean = OptionalBoolean.Missing)","description":"dev.kord.rest.json.request.ApplicationCommandCreateRequest.ApplicationCommandCreateRequest","location":"rest/dev.kord.rest.json.request/-application-command-create-request/-application-command-create-request.html","searchKeys":["ApplicationCommandCreateRequest","fun ApplicationCommandCreateRequest(name: String, nameLocalizations: Optional<Map<Locale, String>?> = Optional.Missing(), type: ApplicationCommandType, description: Optional<String> = Optional.Missing(), descriptionLocalizations: Optional<Map<Locale, String>?> = Optional.Missing(), options: Optional<List<ApplicationCommandOption>> = Optional.Missing(), defaultMemberPermissions: Optional<Permissions?> = Optional.Missing(), dmPermission: OptionalBoolean? = OptionalBoolean.Missing, defaultPermission: OptionalBoolean = OptionalBoolean.Missing)","dev.kord.rest.json.request.ApplicationCommandCreateRequest.ApplicationCommandCreateRequest"]},{"name":"fun ApplicationCommandModifyRequest(name: Optional<String> = Optional.Missing(), nameLocalizations: Optional<Map<Locale, String>?> = Optional.Missing(), description: Optional<String> = Optional.Missing(), descriptionLocalizations: Optional<Map<Locale, String>?> = Optional.Missing(), options: Optional<List<ApplicationCommandOption>> = Optional.Missing(), defaultMemberPermissions: Optional<Permissions?> = Optional.Missing(), dmPermission: OptionalBoolean? = OptionalBoolean.Missing, defaultPermission: OptionalBoolean = OptionalBoolean.Missing)","description":"dev.kord.rest.json.request.ApplicationCommandModifyRequest.ApplicationCommandModifyRequest","location":"rest/dev.kord.rest.json.request/-application-command-modify-request/-application-command-modify-request.html","searchKeys":["ApplicationCommandModifyRequest","fun ApplicationCommandModifyRequest(name: Optional<String> = Optional.Missing(), nameLocalizations: Optional<Map<Locale, String>?> = Optional.Missing(), description: Optional<String> = Optional.Missing(), descriptionLocalizations: Optional<Map<Locale, String>?> = Optional.Missing(), options: Optional<List<ApplicationCommandOption>> = Optional.Missing(), defaultMemberPermissions: Optional<Permissions?> = Optional.Missing(), dmPermission: OptionalBoolean? = OptionalBoolean.Missing, defaultPermission: OptionalBoolean = OptionalBoolean.Missing)","dev.kord.rest.json.request.ApplicationCommandModifyRequest.ApplicationCommandModifyRequest"]},{"name":"fun ApplicationService(handler: RequestHandler)","description":"dev.kord.rest.service.ApplicationService.ApplicationService","location":"rest/dev.kord.rest.service/-application-service/-application-service.html","searchKeys":["ApplicationService","fun ApplicationService(handler: RequestHandler)","dev.kord.rest.service.ApplicationService.ApplicationService"]},{"name":"fun Around(id: Snowflake)","description":"dev.kord.rest.route.Position.Around.Around","location":"rest/dev.kord.rest.route/-position/-around/-around.html","searchKeys":["Around","fun Around(id: Snowflake)","dev.kord.rest.route.Position.Around.Around"]},{"name":"fun AttachmentBuilder(name: String, description: String)","description":"dev.kord.rest.builder.interaction.AttachmentBuilder.AttachmentBuilder","location":"rest/dev.kord.rest.builder.interaction/-attachment-builder/-attachment-builder.html","searchKeys":["AttachmentBuilder","fun AttachmentBuilder(name: String, description: String)","dev.kord.rest.builder.interaction.AttachmentBuilder.AttachmentBuilder"]},{"name":"fun AuditLogGetRequest(userId: Snowflake? = null, action: AuditLogEvent? = null, before: Snowflake? = null, limit: Int? = null)","description":"dev.kord.rest.json.request.AuditLogGetRequest.AuditLogGetRequest","location":"rest/dev.kord.rest.json.request/-audit-log-get-request/-audit-log-get-request.html","searchKeys":["AuditLogGetRequest","fun AuditLogGetRequest(userId: Snowflake? = null, action: AuditLogEvent? = null, before: Snowflake? = null, limit: Int? = null)","dev.kord.rest.json.request.AuditLogGetRequest.AuditLogGetRequest"]},{"name":"fun AuditLogGetRequestBuilder()","description":"dev.kord.rest.builder.auditlog.AuditLogGetRequestBuilder.AuditLogGetRequestBuilder","location":"rest/dev.kord.rest.builder.auditlog/-audit-log-get-request-builder/-audit-log-get-request-builder.html","searchKeys":["AuditLogGetRequestBuilder","fun AuditLogGetRequestBuilder()","dev.kord.rest.builder.auditlog.AuditLogGetRequestBuilder.AuditLogGetRequestBuilder"]},{"name":"fun AuditLogService(requestHandler: RequestHandler)","description":"dev.kord.rest.service.AuditLogService.AuditLogService","location":"rest/dev.kord.rest.service/-audit-log-service/-audit-log-service.html","searchKeys":["AuditLogService","fun AuditLogService(requestHandler: RequestHandler)","dev.kord.rest.service.AuditLogService.AuditLogService"]},{"name":"fun Author()","description":"dev.kord.rest.builder.message.EmbedBuilder.Author.Author","location":"rest/dev.kord.rest.builder.message/-embed-builder/-author/-author.html","searchKeys":["Author","fun Author()","dev.kord.rest.builder.message.EmbedBuilder.Author.Author"]},{"name":"fun AutoModerationRuleBuilder.exemptChannel(channelId: Snowflake)","description":"dev.kord.rest.builder.automoderation.exemptChannel","location":"rest/dev.kord.rest.builder.automoderation/exempt-channel.html","searchKeys":["exemptChannel","fun AutoModerationRuleBuilder.exemptChannel(channelId: Snowflake)","dev.kord.rest.builder.automoderation.exemptChannel"]},{"name":"fun AutoModerationRuleBuilder.exemptRole(roleId: Snowflake)","description":"dev.kord.rest.builder.automoderation.exemptRole","location":"rest/dev.kord.rest.builder.automoderation/exempt-role.html","searchKeys":["exemptRole","fun AutoModerationRuleBuilder.exemptRole(roleId: Snowflake)","dev.kord.rest.builder.automoderation.exemptRole"]},{"name":"fun AutoModerationRuleCreateRequest(name: String, eventType: AutoModerationRuleEventType, triggerType: AutoModerationRuleTriggerType, triggerMetadata: Optional<DiscordAutoModerationRuleTriggerMetadata> = Optional.Missing(), actions: List<DiscordAutoModerationAction>, enabled: OptionalBoolean = OptionalBoolean.Missing, exemptRoles: Optional<List<Snowflake>> = Optional.Missing(), exemptChannels: Optional<List<Snowflake>> = Optional.Missing())","description":"dev.kord.rest.json.request.AutoModerationRuleCreateRequest.AutoModerationRuleCreateRequest","location":"rest/dev.kord.rest.json.request/-auto-moderation-rule-create-request/-auto-moderation-rule-create-request.html","searchKeys":["AutoModerationRuleCreateRequest","fun AutoModerationRuleCreateRequest(name: String, eventType: AutoModerationRuleEventType, triggerType: AutoModerationRuleTriggerType, triggerMetadata: Optional<DiscordAutoModerationRuleTriggerMetadata> = Optional.Missing(), actions: List<DiscordAutoModerationAction>, enabled: OptionalBoolean = OptionalBoolean.Missing, exemptRoles: Optional<List<Snowflake>> = Optional.Missing(), exemptChannels: Optional<List<Snowflake>> = Optional.Missing())","dev.kord.rest.json.request.AutoModerationRuleCreateRequest.AutoModerationRuleCreateRequest"]},{"name":"fun AutoModerationRuleModifyRequest(name: Optional<String> = Optional.Missing(), eventType: Optional<AutoModerationRuleEventType> = Optional.Missing(), triggerMetadata: Optional<DiscordAutoModerationRuleTriggerMetadata> = Optional.Missing(), actions: Optional<List<DiscordAutoModerationAction>> = Optional.Missing(), enabled: OptionalBoolean = OptionalBoolean.Missing, exemptRoles: Optional<List<Snowflake>> = Optional.Missing(), exemptChannels: Optional<List<Snowflake>> = Optional.Missing())","description":"dev.kord.rest.json.request.AutoModerationRuleModifyRequest.AutoModerationRuleModifyRequest","location":"rest/dev.kord.rest.json.request/-auto-moderation-rule-modify-request/-auto-moderation-rule-modify-request.html","searchKeys":["AutoModerationRuleModifyRequest","fun AutoModerationRuleModifyRequest(name: Optional<String> = Optional.Missing(), eventType: Optional<AutoModerationRuleEventType> = Optional.Missing(), triggerMetadata: Optional<DiscordAutoModerationRuleTriggerMetadata> = Optional.Missing(), actions: Optional<List<DiscordAutoModerationAction>> = Optional.Missing(), enabled: OptionalBoolean = OptionalBoolean.Missing, exemptRoles: Optional<List<Snowflake>> = Optional.Missing(), exemptChannels: Optional<List<Snowflake>> = Optional.Missing())","dev.kord.rest.json.request.AutoModerationRuleModifyRequest.AutoModerationRuleModifyRequest"]},{"name":"fun AutoModerationService(requestHandler: RequestHandler)","description":"dev.kord.rest.service.AutoModerationService.AutoModerationService","location":"rest/dev.kord.rest.service/-auto-moderation-service/-auto-moderation-service.html","searchKeys":["AutoModerationService","fun AutoModerationService(requestHandler: RequestHandler)","dev.kord.rest.service.AutoModerationService.AutoModerationService"]},{"name":"fun BanCreateBuilder()","description":"dev.kord.rest.builder.ban.BanCreateBuilder.BanCreateBuilder","location":"rest/dev.kord.rest.builder.ban/-ban-create-builder/-ban-create-builder.html","searchKeys":["BanCreateBuilder","fun BanCreateBuilder()","dev.kord.rest.builder.ban.BanCreateBuilder.BanCreateBuilder"]},{"name":"fun BanResponse(reason: String?, user: DiscordUser)","description":"dev.kord.rest.json.response.BanResponse.BanResponse","location":"rest/dev.kord.rest.json.response/-ban-response/-ban-response.html","searchKeys":["BanResponse","fun BanResponse(reason: String?, user: DiscordUser)","dev.kord.rest.json.response.BanResponse.BanResponse"]},{"name":"fun Before(id: Snowflake)","description":"dev.kord.rest.route.Position.Before.Before","location":"rest/dev.kord.rest.route/-position/-before/-before.html","searchKeys":["Before","fun Before(id: Snowflake)","dev.kord.rest.route.Position.Before.Before"]},{"name":"fun BlockMessageAutoModerationActionBuilder()","description":"dev.kord.rest.builder.automoderation.BlockMessageAutoModerationActionBuilder.BlockMessageAutoModerationActionBuilder","location":"rest/dev.kord.rest.builder.automoderation/-block-message-auto-moderation-action-builder/-block-message-auto-moderation-action-builder.html","searchKeys":["BlockMessageAutoModerationActionBuilder","fun BlockMessageAutoModerationActionBuilder()","dev.kord.rest.builder.automoderation.BlockMessageAutoModerationActionBuilder.BlockMessageAutoModerationActionBuilder"]},{"name":"fun BooleanBuilder(name: String, description: String)","description":"dev.kord.rest.builder.interaction.BooleanBuilder.BooleanBuilder","location":"rest/dev.kord.rest.builder.interaction/-boolean-builder/-boolean-builder.html","searchKeys":["BooleanBuilder","fun BooleanBuilder(name: String, description: String)","dev.kord.rest.builder.interaction.BooleanBuilder.BooleanBuilder"]},{"name":"fun BotGatewayResponse(url: String, shards: Int, sessionStartLimit: SessionStartLimitResponse)","description":"dev.kord.rest.json.response.BotGatewayResponse.BotGatewayResponse","location":"rest/dev.kord.rest.json.response/-bot-gateway-response/-bot-gateway-response.html","searchKeys":["BotGatewayResponse","fun BotGatewayResponse(url: String, shards: Int, sessionStartLimit: SessionStartLimitResponse)","dev.kord.rest.json.response.BotGatewayResponse.BotGatewayResponse"]},{"name":"fun BucketKey(value: String)","description":"dev.kord.rest.ratelimit.BucketKey.BucketKey","location":"rest/dev.kord.rest.ratelimit/-bucket-key/-bucket-key.html","searchKeys":["BucketKey","fun BucketKey(value: String)","dev.kord.rest.ratelimit.BucketKey.BucketKey"]},{"name":"fun BucketRateLimit(bucketKey: BucketKey, rateLimit: RateLimit?, reset: Reset)","description":"dev.kord.rest.ratelimit.RequestResponse.BucketRateLimit.BucketRateLimit","location":"rest/dev.kord.rest.ratelimit/-request-response/-bucket-rate-limit/-bucket-rate-limit.html","searchKeys":["BucketRateLimit","fun BucketRateLimit(bucketKey: BucketKey, rateLimit: RateLimit?, reset: Reset)","dev.kord.rest.ratelimit.RequestResponse.BucketRateLimit.BucketRateLimit"]},{"name":"fun BulkDeleteRequest(messages: List<Snowflake>)","description":"dev.kord.rest.json.request.BulkDeleteRequest.BulkDeleteRequest","location":"rest/dev.kord.rest.json.request/-bulk-delete-request/-bulk-delete-request.html","searchKeys":["BulkDeleteRequest","fun BulkDeleteRequest(messages: List<Snowflake>)","dev.kord.rest.json.request.BulkDeleteRequest.BulkDeleteRequest"]},{"name":"fun CategoryCreateBuilder(name: String)","description":"dev.kord.rest.builder.channel.CategoryCreateBuilder.CategoryCreateBuilder","location":"rest/dev.kord.rest.builder.channel/-category-create-builder/-category-create-builder.html","searchKeys":["CategoryCreateBuilder","fun CategoryCreateBuilder(name: String)","dev.kord.rest.builder.channel.CategoryCreateBuilder.CategoryCreateBuilder"]},{"name":"fun CategoryModifyBuilder()","description":"dev.kord.rest.builder.channel.CategoryModifyBuilder.CategoryModifyBuilder","location":"rest/dev.kord.rest.builder.channel/-category-modify-builder/-category-modify-builder.html","searchKeys":["CategoryModifyBuilder","fun CategoryModifyBuilder()","dev.kord.rest.builder.channel.CategoryModifyBuilder.CategoryModifyBuilder"]},{"name":"fun CdnUrl(rawAssetUri: String)","description":"dev.kord.rest.route.CdnUrl.CdnUrl","location":"rest/dev.kord.rest.route/-cdn-url/-cdn-url.html","searchKeys":["CdnUrl","fun CdnUrl(rawAssetUri: String)","dev.kord.rest.route.CdnUrl.CdnUrl"]},{"name":"fun ChannelBuilder(name: String, description: String)","description":"dev.kord.rest.builder.interaction.ChannelBuilder.ChannelBuilder","location":"rest/dev.kord.rest.builder.interaction/-channel-builder/-channel-builder.html","searchKeys":["ChannelBuilder","fun ChannelBuilder(name: String, description: String)","dev.kord.rest.builder.interaction.ChannelBuilder.ChannelBuilder"]},{"name":"fun ChannelFollowRequest(webhookChannelId: Snowflake)","description":"dev.kord.rest.json.request.ChannelFollowRequest.ChannelFollowRequest","location":"rest/dev.kord.rest.json.request/-channel-follow-request/-channel-follow-request.html","searchKeys":["ChannelFollowRequest","fun ChannelFollowRequest(webhookChannelId: Snowflake)","dev.kord.rest.json.request.ChannelFollowRequest.ChannelFollowRequest"]},{"name":"fun ChannelModifyPatchRequest(name: Optional<String> = Optional.Missing(), position: OptionalInt? = OptionalInt.Missing, topic: Optional<String?> = Optional.Missing(), nsfw: OptionalBoolean? = OptionalBoolean.Missing, rateLimitPerUser: Optional<DurationInSeconds?> = Optional.Missing(), bitrate: OptionalInt? = OptionalInt.Missing, userLimit: OptionalInt? = OptionalInt.Missing, permissionOverwrites: Optional<Set<Overwrite>?> = Optional.Missing(), parentId: OptionalSnowflake? = OptionalSnowflake.Missing, archived: OptionalBoolean = OptionalBoolean.Missing, autoArchiveDuration: Optional<ArchiveDuration> = Optional.Missing(), locked: OptionalBoolean = OptionalBoolean.Missing, rtcRegion: Optional<String?> = Optional.Missing(), invitable: OptionalBoolean = OptionalBoolean.Missing, videoQualityMode: Optional<VideoQualityMode?> = Optional.Missing(), defaultAutoArchiveDuration: Optional<ArchiveDuration?> = Optional.Missing())","description":"dev.kord.rest.json.request.ChannelModifyPatchRequest.ChannelModifyPatchRequest","location":"rest/dev.kord.rest.json.request/-channel-modify-patch-request/-channel-modify-patch-request.html","searchKeys":["ChannelModifyPatchRequest","fun ChannelModifyPatchRequest(name: Optional<String> = Optional.Missing(), position: OptionalInt? = OptionalInt.Missing, topic: Optional<String?> = Optional.Missing(), nsfw: OptionalBoolean? = OptionalBoolean.Missing, rateLimitPerUser: Optional<DurationInSeconds?> = Optional.Missing(), bitrate: OptionalInt? = OptionalInt.Missing, userLimit: OptionalInt? = OptionalInt.Missing, permissionOverwrites: Optional<Set<Overwrite>?> = Optional.Missing(), parentId: OptionalSnowflake? = OptionalSnowflake.Missing, archived: OptionalBoolean = OptionalBoolean.Missing, autoArchiveDuration: Optional<ArchiveDuration> = Optional.Missing(), locked: OptionalBoolean = OptionalBoolean.Missing, rtcRegion: Optional<String?> = Optional.Missing(), invitable: OptionalBoolean = OptionalBoolean.Missing, videoQualityMode: Optional<VideoQualityMode?> = Optional.Missing(), defaultAutoArchiveDuration: Optional<ArchiveDuration?> = Optional.Missing())","dev.kord.rest.json.request.ChannelModifyPatchRequest.ChannelModifyPatchRequest"]},{"name":"fun ChannelModifyPutRequest(name: String, position: Int, topic: String? = null, nsfw: Boolean? = null, rateLimitPerUser: Int? = null, bitrate: Int? = null, userLimit: Int? = null, permissionOverwrites: List<Overwrite>, parentId: String? = null)","description":"dev.kord.rest.json.request.ChannelModifyPutRequest.ChannelModifyPutRequest","location":"rest/dev.kord.rest.json.request/-channel-modify-put-request/-channel-modify-put-request.html","searchKeys":["ChannelModifyPutRequest","fun ChannelModifyPutRequest(name: String, position: Int, topic: String? = null, nsfw: Boolean? = null, rateLimitPerUser: Int? = null, bitrate: Int? = null, userLimit: Int? = null, permissionOverwrites: List<Overwrite>, parentId: String? = null)","dev.kord.rest.json.request.ChannelModifyPutRequest.ChannelModifyPutRequest"]},{"name":"fun ChannelPermissionEditRequest(allow: Permissions, deny: Permissions, type: OverwriteType)","description":"dev.kord.rest.json.request.ChannelPermissionEditRequest.ChannelPermissionEditRequest","location":"rest/dev.kord.rest.json.request/-channel-permission-edit-request/-channel-permission-edit-request.html","searchKeys":["ChannelPermissionEditRequest","fun ChannelPermissionEditRequest(allow: Permissions, deny: Permissions, type: OverwriteType)","dev.kord.rest.json.request.ChannelPermissionEditRequest.ChannelPermissionEditRequest"]},{"name":"fun ChannelPermissionModifyBuilder(type: OverwriteType)","description":"dev.kord.rest.builder.channel.ChannelPermissionModifyBuilder.ChannelPermissionModifyBuilder","location":"rest/dev.kord.rest.builder.channel/-channel-permission-modify-builder/-channel-permission-modify-builder.html","searchKeys":["ChannelPermissionModifyBuilder","fun ChannelPermissionModifyBuilder(type: OverwriteType)","dev.kord.rest.builder.channel.ChannelPermissionModifyBuilder.ChannelPermissionModifyBuilder"]},{"name":"fun ChannelPositionSwapRequest(id: Snowflake, position: OptionalInt? = OptionalInt.Missing, lockPermissions: Boolean?, parentId: Snowflake?)","description":"dev.kord.rest.json.request.ChannelPositionSwapRequest.ChannelPositionSwapRequest","location":"rest/dev.kord.rest.json.request/-channel-position-swap-request/-channel-position-swap-request.html","searchKeys":["ChannelPositionSwapRequest","fun ChannelPositionSwapRequest(id: Snowflake, position: OptionalInt? = OptionalInt.Missing, lockPermissions: Boolean?, parentId: Snowflake?)","dev.kord.rest.json.request.ChannelPositionSwapRequest.ChannelPositionSwapRequest"]},{"name":"fun ChannelService(requestHandler: RequestHandler)","description":"dev.kord.rest.service.ChannelService.ChannelService","location":"rest/dev.kord.rest.service/-channel-service/-channel-service.html","searchKeys":["ChannelService","fun ChannelService(requestHandler: RequestHandler)","dev.kord.rest.service.ChannelService.ChannelService"]},{"name":"fun ChoiceLocalizationsBuilder(name: String)","description":"dev.kord.rest.builder.interaction.ChoiceLocalizationsBuilder.ChoiceLocalizationsBuilder","location":"rest/dev.kord.rest.builder.interaction/-choice-localizations-builder/-choice-localizations-builder.html","searchKeys":["ChoiceLocalizationsBuilder","fun ChoiceLocalizationsBuilder(name: String)","dev.kord.rest.builder.interaction.ChoiceLocalizationsBuilder.ChoiceLocalizationsBuilder"]},{"name":"fun Connection(id: String, name: String, type: String, revoked: Boolean, integrations: List<DiscordGuildIntegrations>, verified: Boolean, friendSync: Boolean, showActivity: Boolean, visibility: Int)","description":"dev.kord.rest.json.response.Connection.Connection","location":"rest/dev.kord.rest.json.response/-connection/-connection.html","searchKeys":["Connection","fun Connection(id: String, name: String, type: String, revoked: Boolean, integrations: List<DiscordGuildIntegrations>, verified: Boolean, friendSync: Boolean, showActivity: Boolean, visibility: Int)","dev.kord.rest.json.response.Connection.Connection"]},{"name":"fun CurrentUserModifyBuilder()","description":"dev.kord.rest.builder.user.CurrentUserModifyBuilder.CurrentUserModifyBuilder","location":"rest/dev.kord.rest.builder.user/-current-user-modify-builder/-current-user-modify-builder.html","searchKeys":["CurrentUserModifyBuilder","fun CurrentUserModifyBuilder()","dev.kord.rest.builder.user.CurrentUserModifyBuilder.CurrentUserModifyBuilder"]},{"name":"fun CurrentUserModifyRequest(username: Optional<String> = Optional.Missing(), avatar: Optional<String?> = Optional.Missing())","description":"dev.kord.rest.json.request.CurrentUserModifyRequest.CurrentUserModifyRequest","location":"rest/dev.kord.rest.json.request/-current-user-modify-request/-current-user-modify-request.html","searchKeys":["CurrentUserModifyRequest","fun CurrentUserModifyRequest(username: Optional<String> = Optional.Missing(), avatar: Optional<String?> = Optional.Missing())","dev.kord.rest.json.request.CurrentUserModifyRequest.CurrentUserModifyRequest"]},{"name":"fun CurrentUserNicknameModifyRequest(nick: Optional<String?> = Optional.Missing())","description":"dev.kord.rest.json.request.CurrentUserNicknameModifyRequest.CurrentUserNicknameModifyRequest","location":"rest/dev.kord.rest.json.request/-current-user-nickname-modify-request/-current-user-nickname-modify-request.html","searchKeys":["CurrentUserNicknameModifyRequest","fun CurrentUserNicknameModifyRequest(nick: Optional<String?> = Optional.Missing())","dev.kord.rest.json.request.CurrentUserNicknameModifyRequest.CurrentUserNicknameModifyRequest"]},{"name":"fun CurrentUserNicknameModifyResponse(nick: String)","description":"dev.kord.rest.json.response.CurrentUserNicknameModifyResponse.CurrentUserNicknameModifyResponse","location":"rest/dev.kord.rest.json.response/-current-user-nickname-modify-response/-current-user-nickname-modify-response.html","searchKeys":["CurrentUserNicknameModifyResponse","fun CurrentUserNicknameModifyResponse(nick: String)","dev.kord.rest.json.response.CurrentUserNicknameModifyResponse.CurrentUserNicknameModifyResponse"]},{"name":"fun CurrentVoiceStateModifyBuilder()","description":"dev.kord.rest.builder.guild.CurrentVoiceStateModifyBuilder.CurrentVoiceStateModifyBuilder","location":"rest/dev.kord.rest.builder.guild/-current-voice-state-modify-builder/-current-voice-state-modify-builder.html","searchKeys":["CurrentVoiceStateModifyBuilder","fun CurrentVoiceStateModifyBuilder()","dev.kord.rest.builder.guild.CurrentVoiceStateModifyBuilder.CurrentVoiceStateModifyBuilder"]},{"name":"fun CurrentVoiceStateModifyRequest(channelId: OptionalSnowflake = OptionalSnowflake.Missing, suppress: OptionalBoolean = OptionalBoolean.Missing, requestToSpeakTimestamp: Optional<Instant?> = Optional.Missing())","description":"dev.kord.rest.json.request.CurrentVoiceStateModifyRequest.CurrentVoiceStateModifyRequest","location":"rest/dev.kord.rest.json.request/-current-voice-state-modify-request/-current-voice-state-modify-request.html","searchKeys":["CurrentVoiceStateModifyRequest","fun CurrentVoiceStateModifyRequest(channelId: OptionalSnowflake = OptionalSnowflake.Missing, suppress: OptionalBoolean = OptionalBoolean.Missing, requestToSpeakTimestamp: Optional<Instant?> = Optional.Missing())","dev.kord.rest.json.request.CurrentVoiceStateModifyRequest.CurrentVoiceStateModifyRequest"]},{"name":"fun DMCreateRequest(userId: Snowflake)","description":"dev.kord.rest.json.request.DMCreateRequest.DMCreateRequest","location":"rest/dev.kord.rest.json.request/-d-m-create-request/-d-m-create-request.html","searchKeys":["DMCreateRequest","fun DMCreateRequest(userId: Snowflake)","dev.kord.rest.json.request.DMCreateRequest.DMCreateRequest"]},{"name":"fun DiscordErrorResponse(code: JsonErrorCode = JsonErrorCode.Unknown, errors: JsonElement? = null, message: String? = null)","description":"dev.kord.rest.json.response.DiscordErrorResponse.DiscordErrorResponse","location":"rest/dev.kord.rest.json.response/-discord-error-response/-discord-error-response.html","searchKeys":["DiscordErrorResponse","fun DiscordErrorResponse(code: JsonErrorCode = JsonErrorCode.Unknown, errors: JsonElement? = null, message: String? = null)","dev.kord.rest.json.response.DiscordErrorResponse.DiscordErrorResponse"]},{"name":"fun EmbedAuthorRequest(name: Optional<String> = Optional.Missing(), url: Optional<String> = Optional.Missing(), iconUrl: Optional<String> = Optional.Missing())","description":"dev.kord.rest.json.request.EmbedAuthorRequest.EmbedAuthorRequest","location":"rest/dev.kord.rest.json.request/-embed-author-request/-embed-author-request.html","searchKeys":["EmbedAuthorRequest","fun EmbedAuthorRequest(name: Optional<String> = Optional.Missing(), url: Optional<String> = Optional.Missing(), iconUrl: Optional<String> = Optional.Missing())","dev.kord.rest.json.request.EmbedAuthorRequest.EmbedAuthorRequest"]},{"name":"fun EmbedBuilder()","description":"dev.kord.rest.builder.message.EmbedBuilder.EmbedBuilder","location":"rest/dev.kord.rest.builder.message/-embed-builder/-embed-builder.html","searchKeys":["EmbedBuilder","fun EmbedBuilder()","dev.kord.rest.builder.message.EmbedBuilder.EmbedBuilder"]},{"name":"fun EmbedFieldRequest(name: String, value: String, inline: OptionalBoolean = OptionalBoolean.Missing)","description":"dev.kord.rest.json.request.EmbedFieldRequest.EmbedFieldRequest","location":"rest/dev.kord.rest.json.request/-embed-field-request/-embed-field-request.html","searchKeys":["EmbedFieldRequest","fun EmbedFieldRequest(name: String, value: String, inline: OptionalBoolean = OptionalBoolean.Missing)","dev.kord.rest.json.request.EmbedFieldRequest.EmbedFieldRequest"]},{"name":"fun EmbedFooterRequest(text: String, iconUrl: String? = null)","description":"dev.kord.rest.json.request.EmbedFooterRequest.EmbedFooterRequest","location":"rest/dev.kord.rest.json.request/-embed-footer-request/-embed-footer-request.html","searchKeys":["EmbedFooterRequest","fun EmbedFooterRequest(text: String, iconUrl: String? = null)","dev.kord.rest.json.request.EmbedFooterRequest.EmbedFooterRequest"]},{"name":"fun EmbedImageRequest(url: String)","description":"dev.kord.rest.json.request.EmbedImageRequest.EmbedImageRequest","location":"rest/dev.kord.rest.json.request/-embed-image-request/-embed-image-request.html","searchKeys":["EmbedImageRequest","fun EmbedImageRequest(url: String)","dev.kord.rest.json.request.EmbedImageRequest.EmbedImageRequest"]},{"name":"fun EmbedRequest(title: Optional<String> = Optional.Missing(), type: Optional<String> = Optional.Missing(), description: Optional<String> = Optional.Missing(), url: Optional<String> = Optional.Missing(), timestamp: Optional<Instant> = Optional.Missing(), color: Optional<Color> = Optional.Missing(), footer: Optional<EmbedFooterRequest> = Optional.Missing(), image: Optional<EmbedImageRequest> = Optional.Missing(), thumbnail: Optional<EmbedThumbnailRequest> = Optional.Missing(), author: Optional<EmbedAuthorRequest> = Optional.Missing(), fields: Optional<List<EmbedFieldRequest>> = Optional.Missing())","description":"dev.kord.rest.json.request.EmbedRequest.EmbedRequest","location":"rest/dev.kord.rest.json.request/-embed-request/-embed-request.html","searchKeys":["EmbedRequest","fun EmbedRequest(title: Optional<String> = Optional.Missing(), type: Optional<String> = Optional.Missing(), description: Optional<String> = Optional.Missing(), url: Optional<String> = Optional.Missing(), timestamp: Optional<Instant> = Optional.Missing(), color: Optional<Color> = Optional.Missing(), footer: Optional<EmbedFooterRequest> = Optional.Missing(), image: Optional<EmbedImageRequest> = Optional.Missing(), thumbnail: Optional<EmbedThumbnailRequest> = Optional.Missing(), author: Optional<EmbedAuthorRequest> = Optional.Missing(), fields: Optional<List<EmbedFieldRequest>> = Optional.Missing())","dev.kord.rest.json.request.EmbedRequest.EmbedRequest"]},{"name":"fun EmbedThumbnailRequest(url: String)","description":"dev.kord.rest.json.request.EmbedThumbnailRequest.EmbedThumbnailRequest","location":"rest/dev.kord.rest.json.request/-embed-thumbnail-request/-embed-thumbnail-request.html","searchKeys":["EmbedThumbnailRequest","fun EmbedThumbnailRequest(url: String)","dev.kord.rest.json.request.EmbedThumbnailRequest.EmbedThumbnailRequest"]},{"name":"fun EmojiCreateBuilder(name: String, image: Image)","description":"dev.kord.rest.builder.guild.EmojiCreateBuilder.EmojiCreateBuilder","location":"rest/dev.kord.rest.builder.guild/-emoji-create-builder/-emoji-create-builder.html","searchKeys":["EmojiCreateBuilder","fun EmojiCreateBuilder(name: String, image: Image)","dev.kord.rest.builder.guild.EmojiCreateBuilder.EmojiCreateBuilder"]},{"name":"fun EmojiCreateRequest(name: String, image: String, roles: Set<Snowflake>)","description":"dev.kord.rest.json.request.EmojiCreateRequest.EmojiCreateRequest","location":"rest/dev.kord.rest.json.request/-emoji-create-request/-emoji-create-request.html","searchKeys":["EmojiCreateRequest","fun EmojiCreateRequest(name: String, image: String, roles: Set<Snowflake>)","dev.kord.rest.json.request.EmojiCreateRequest.EmojiCreateRequest"]},{"name":"fun EmojiModifyBuilder()","description":"dev.kord.rest.builder.guild.EmojiModifyBuilder.EmojiModifyBuilder","location":"rest/dev.kord.rest.builder.guild/-emoji-modify-builder/-emoji-modify-builder.html","searchKeys":["EmojiModifyBuilder","fun EmojiModifyBuilder()","dev.kord.rest.builder.guild.EmojiModifyBuilder.EmojiModifyBuilder"]},{"name":"fun EmojiModifyRequest(name: Optional<String> = Optional.Missing(), roles: Optional<Set<Snowflake>?> = Optional.Missing())","description":"dev.kord.rest.json.request.EmojiModifyRequest.EmojiModifyRequest","location":"rest/dev.kord.rest.json.request/-emoji-modify-request/-emoji-modify-request.html","searchKeys":["EmojiModifyRequest","fun EmojiModifyRequest(name: Optional<String> = Optional.Missing(), roles: Optional<Set<Snowflake>?> = Optional.Missing())","dev.kord.rest.json.request.EmojiModifyRequest.EmojiModifyRequest"]},{"name":"fun EmojiService(requestHandler: RequestHandler)","description":"dev.kord.rest.service.EmojiService.EmojiService","location":"rest/dev.kord.rest.service/-emoji-service/-emoji-service.html","searchKeys":["EmojiService","fun EmojiService(requestHandler: RequestHandler)","dev.kord.rest.service.EmojiService.EmojiService"]},{"name":"fun ExclusionRequestRateLimiter(clock: Clock = Clock.System)","description":"dev.kord.rest.ratelimit.ExclusionRequestRateLimiter.ExclusionRequestRateLimiter","location":"rest/dev.kord.rest.ratelimit/-exclusion-request-rate-limiter/-exclusion-request-rate-limiter.html","searchKeys":["ExclusionRequestRateLimiter","fun ExclusionRequestRateLimiter(clock: Clock = Clock.System)","dev.kord.rest.ratelimit.ExclusionRequestRateLimiter.ExclusionRequestRateLimiter"]},{"name":"fun Field()","description":"dev.kord.rest.builder.message.EmbedBuilder.Field.Field","location":"rest/dev.kord.rest.builder.message/-embed-builder/-field/-field.html","searchKeys":["Field","fun Field()","dev.kord.rest.builder.message.EmbedBuilder.Field.Field"]},{"name":"fun FollowedChannelResponse(channelId: Snowflake, webhookId: Snowflake)","description":"dev.kord.rest.json.response.FollowedChannelResponse.FollowedChannelResponse","location":"rest/dev.kord.rest.json.response/-followed-channel-response/-followed-channel-response.html","searchKeys":["FollowedChannelResponse","fun FollowedChannelResponse(channelId: Snowflake, webhookId: Snowflake)","dev.kord.rest.json.response.FollowedChannelResponse.FollowedChannelResponse"]},{"name":"fun FollowupMessageCreateBuilder(ephemeral: Boolean)","description":"dev.kord.rest.builder.message.create.FollowupMessageCreateBuilder.FollowupMessageCreateBuilder","location":"rest/dev.kord.rest.builder.message.create/-followup-message-create-builder/-followup-message-create-builder.html","searchKeys":["FollowupMessageCreateBuilder","fun FollowupMessageCreateBuilder(ephemeral: Boolean)","dev.kord.rest.builder.message.create.FollowupMessageCreateBuilder.FollowupMessageCreateBuilder"]},{"name":"fun FollowupMessageCreateRequest(content: Optional<String> = Optional.Missing(), username: Optional<String> = Optional.Missing(), avatar: Optional<String> = Optional.Missing(), tts: OptionalBoolean = OptionalBoolean.Missing, embeds: Optional<List<EmbedRequest>> = Optional.Missing(), allowedMentions: Optional<AllowedMentions> = Optional.Missing(), components: Optional<List<DiscordComponent>> = Optional.Missing(), flags: Optional<MessageFlags> = Optional.Missing())","description":"dev.kord.rest.json.request.FollowupMessageCreateRequest.FollowupMessageCreateRequest","location":"rest/dev.kord.rest.json.request/-followup-message-create-request/-followup-message-create-request.html","searchKeys":["FollowupMessageCreateRequest","fun FollowupMessageCreateRequest(content: Optional<String> = Optional.Missing(), username: Optional<String> = Optional.Missing(), avatar: Optional<String> = Optional.Missing(), tts: OptionalBoolean = OptionalBoolean.Missing, embeds: Optional<List<EmbedRequest>> = Optional.Missing(), allowedMentions: Optional<AllowedMentions> = Optional.Missing(), components: Optional<List<DiscordComponent>> = Optional.Missing(), flags: Optional<MessageFlags> = Optional.Missing())","dev.kord.rest.json.request.FollowupMessageCreateRequest.FollowupMessageCreateRequest"]},{"name":"fun FollowupMessageModifyBuilder()","description":"dev.kord.rest.builder.message.modify.FollowupMessageModifyBuilder.FollowupMessageModifyBuilder","location":"rest/dev.kord.rest.builder.message.modify/-followup-message-modify-builder/-followup-message-modify-builder.html","searchKeys":["FollowupMessageModifyBuilder","fun FollowupMessageModifyBuilder()","dev.kord.rest.builder.message.modify.FollowupMessageModifyBuilder.FollowupMessageModifyBuilder"]},{"name":"fun FollowupMessageModifyRequest(content: Optional<String?> = Optional.Missing(), embeds: Optional<List<EmbedRequest>?> = Optional.Missing(), allowedMentions: Optional<AllowedMentions?> = Optional.Missing(), components: Optional<List<DiscordComponent>?> = Optional.Missing(), attachments: Optional<List<DiscordAttachment>?> = Optional.Missing())","description":"dev.kord.rest.json.request.FollowupMessageModifyRequest.FollowupMessageModifyRequest","location":"rest/dev.kord.rest.json.request/-followup-message-modify-request/-followup-message-modify-request.html","searchKeys":["FollowupMessageModifyRequest","fun FollowupMessageModifyRequest(content: Optional<String?> = Optional.Missing(), embeds: Optional<List<EmbedRequest>?> = Optional.Missing(), allowedMentions: Optional<AllowedMentions?> = Optional.Missing(), components: Optional<List<DiscordComponent>?> = Optional.Missing(), attachments: Optional<List<DiscordAttachment>?> = Optional.Missing())","dev.kord.rest.json.request.FollowupMessageModifyRequest.FollowupMessageModifyRequest"]},{"name":"fun Footer()","description":"dev.kord.rest.builder.message.EmbedBuilder.Footer.Footer","location":"rest/dev.kord.rest.builder.message/-embed-builder/-footer/-footer.html","searchKeys":["Footer","fun Footer()","dev.kord.rest.builder.message.EmbedBuilder.Footer.Footer"]},{"name":"fun GatewayResponse(url: String)","description":"dev.kord.rest.json.response.GatewayResponse.GatewayResponse","location":"rest/dev.kord.rest.json.response/-gateway-response/-gateway-response.html","searchKeys":["GatewayResponse","fun GatewayResponse(url: String)","dev.kord.rest.json.response.GatewayResponse.GatewayResponse"]},{"name":"fun GetPruneResponse(pruned: Int)","description":"dev.kord.rest.json.response.GetPruneResponse.GetPruneResponse","location":"rest/dev.kord.rest.json.response/-get-prune-response/-get-prune-response.html","searchKeys":["GetPruneResponse","fun GetPruneResponse(pruned: Int)","dev.kord.rest.json.response.GetPruneResponse.GetPruneResponse"]},{"name":"fun GlobalMultiApplicationCommandBuilder()","description":"dev.kord.rest.builder.interaction.GlobalMultiApplicationCommandBuilder.GlobalMultiApplicationCommandBuilder","location":"rest/dev.kord.rest.builder.interaction/-global-multi-application-command-builder/-global-multi-application-command-builder.html","searchKeys":["GlobalMultiApplicationCommandBuilder","fun GlobalMultiApplicationCommandBuilder()","dev.kord.rest.builder.interaction.GlobalMultiApplicationCommandBuilder.GlobalMultiApplicationCommandBuilder"]},{"name":"fun GlobalRateLimit(bucketKey: BucketKey?, rateLimit: RateLimit?, reset: Reset)","description":"dev.kord.rest.ratelimit.RequestResponse.GlobalRateLimit.GlobalRateLimit","location":"rest/dev.kord.rest.ratelimit/-request-response/-global-rate-limit/-global-rate-limit.html","searchKeys":["GlobalRateLimit","fun GlobalRateLimit(bucketKey: BucketKey?, rateLimit: RateLimit?, reset: Reset)","dev.kord.rest.ratelimit.RequestResponse.GlobalRateLimit.GlobalRateLimit"]},{"name":"fun GroupCommandBuilder(name: String, description: String)","description":"dev.kord.rest.builder.interaction.GroupCommandBuilder.GroupCommandBuilder","location":"rest/dev.kord.rest.builder.interaction/-group-command-builder/-group-command-builder.html","searchKeys":["GroupCommandBuilder","fun GroupCommandBuilder(name: String, description: String)","dev.kord.rest.builder.interaction.GroupCommandBuilder.GroupCommandBuilder"]},{"name":"fun GroupDMCreateBuilder()","description":"dev.kord.rest.builder.user.GroupDMCreateBuilder.GroupDMCreateBuilder","location":"rest/dev.kord.rest.builder.user/-group-d-m-create-builder/-group-d-m-create-builder.html","searchKeys":["GroupDMCreateBuilder","fun GroupDMCreateBuilder()","dev.kord.rest.builder.user.GroupDMCreateBuilder.GroupDMCreateBuilder"]},{"name":"fun GroupDMCreateRequest(tokens: List<String>, nick: Map<String, String>)","description":"dev.kord.rest.json.request.GroupDMCreateRequest.GroupDMCreateRequest","location":"rest/dev.kord.rest.json.request/-group-d-m-create-request/-group-d-m-create-request.html","searchKeys":["GroupDMCreateRequest","fun GroupDMCreateRequest(tokens: List<String>, nick: Map<String, String>)","dev.kord.rest.json.request.GroupDMCreateRequest.GroupDMCreateRequest"]},{"name":"fun GuildBanCreateRequest(deleteMessageSeconds: Optional<DurationInSeconds> = Optional.Missing())","description":"dev.kord.rest.json.request.GuildBanCreateRequest.GuildBanCreateRequest","location":"rest/dev.kord.rest.json.request/-guild-ban-create-request/-guild-ban-create-request.html","searchKeys":["GuildBanCreateRequest","fun GuildBanCreateRequest(deleteMessageSeconds: Optional<DurationInSeconds> = Optional.Missing())","dev.kord.rest.json.request.GuildBanCreateRequest.GuildBanCreateRequest"]},{"name":"fun GuildBanCreateRequest(reason: Optional<String> = Optional.Missing(), deleteMessagesDays: OptionalInt = OptionalInt.Missing, deleteMessageSeconds: Optional<DurationInSeconds> = Optional.Missing())","description":"dev.kord.rest.json.request.GuildBanCreateRequest.GuildBanCreateRequest","location":"rest/dev.kord.rest.json.request/-guild-ban-create-request/-guild-ban-create-request.html","searchKeys":["GuildBanCreateRequest","fun GuildBanCreateRequest(reason: Optional<String> = Optional.Missing(), deleteMessagesDays: OptionalInt = OptionalInt.Missing, deleteMessageSeconds: Optional<DurationInSeconds> = Optional.Missing())","dev.kord.rest.json.request.GuildBanCreateRequest.GuildBanCreateRequest"]},{"name":"fun GuildChannelCreateRequest(name: String, type: ChannelType, topic: Optional<String> = Optional.Missing(), bitrate: OptionalInt = OptionalInt.Missing, userLimit: OptionalInt = OptionalInt.Missing, rateLimitPerUser: Optional<DurationInSeconds> = Optional.Missing(), position: OptionalInt = OptionalInt.Missing, permissionOverwrite: Optional<Set<Overwrite>> = Optional.Missing(), parentId: OptionalSnowflake = OptionalSnowflake.Missing, nsfw: OptionalBoolean = OptionalBoolean.Missing, id: OptionalSnowflake = OptionalSnowflake.Missing, defaultAutoArchiveDuration: Optional<ArchiveDuration> = Optional.Missing())","description":"dev.kord.rest.json.request.GuildChannelCreateRequest.GuildChannelCreateRequest","location":"rest/dev.kord.rest.json.request/-guild-channel-create-request/-guild-channel-create-request.html","searchKeys":["GuildChannelCreateRequest","fun GuildChannelCreateRequest(name: String, type: ChannelType, topic: Optional<String> = Optional.Missing(), bitrate: OptionalInt = OptionalInt.Missing, userLimit: OptionalInt = OptionalInt.Missing, rateLimitPerUser: Optional<DurationInSeconds> = Optional.Missing(), position: OptionalInt = OptionalInt.Missing, permissionOverwrite: Optional<Set<Overwrite>> = Optional.Missing(), parentId: OptionalSnowflake = OptionalSnowflake.Missing, nsfw: OptionalBoolean = OptionalBoolean.Missing, id: OptionalSnowflake = OptionalSnowflake.Missing, defaultAutoArchiveDuration: Optional<ArchiveDuration> = Optional.Missing())","dev.kord.rest.json.request.GuildChannelCreateRequest.GuildChannelCreateRequest"]},{"name":"fun GuildChannelPositionModifyBuilder()","description":"dev.kord.rest.builder.channel.GuildChannelPositionModifyBuilder.GuildChannelPositionModifyBuilder","location":"rest/dev.kord.rest.builder.channel/-guild-channel-position-modify-builder/-guild-channel-position-modify-builder.html","searchKeys":["GuildChannelPositionModifyBuilder","fun GuildChannelPositionModifyBuilder()","dev.kord.rest.builder.channel.GuildChannelPositionModifyBuilder.GuildChannelPositionModifyBuilder"]},{"name":"fun GuildChannelPositionModifyRequest(swaps: List<ChannelPositionSwapRequest>)","description":"dev.kord.rest.json.request.GuildChannelPositionModifyRequest.GuildChannelPositionModifyRequest","location":"rest/dev.kord.rest.json.request/-guild-channel-position-modify-request/-guild-channel-position-modify-request.html","searchKeys":["GuildChannelPositionModifyRequest","fun GuildChannelPositionModifyRequest(swaps: List<ChannelPositionSwapRequest>)","dev.kord.rest.json.request.GuildChannelPositionModifyRequest.GuildChannelPositionModifyRequest"]},{"name":"fun GuildChannelSwapBuilder(channelId: Snowflake)","description":"dev.kord.rest.builder.channel.GuildChannelSwapBuilder.GuildChannelSwapBuilder","location":"rest/dev.kord.rest.builder.channel/-guild-channel-swap-builder/-guild-channel-swap-builder.html","searchKeys":["GuildChannelSwapBuilder","fun GuildChannelSwapBuilder(channelId: Snowflake)","dev.kord.rest.builder.channel.GuildChannelSwapBuilder.GuildChannelSwapBuilder"]},{"name":"fun GuildCreateBuilder(name: String)","description":"dev.kord.rest.builder.guild.GuildCreateBuilder.GuildCreateBuilder","location":"rest/dev.kord.rest.builder.guild/-guild-create-builder/-guild-create-builder.html","searchKeys":["GuildCreateBuilder","fun GuildCreateBuilder(name: String)","dev.kord.rest.builder.guild.GuildCreateBuilder.GuildCreateBuilder"]},{"name":"fun GuildCreateRequest(name: String, region: Optional<String> = Optional.Missing(), icon: Optional<String> = Optional.Missing(), verificationLevel: Optional<VerificationLevel> = Optional.Missing(), defaultNotificationLevel: Optional<DefaultMessageNotificationLevel> = Optional.Missing(), explicitContentFilter: Optional<ExplicitContentFilter> = Optional.Missing(), roles: Optional<List<GuildRoleCreateRequest>> = Optional.Missing(), channels: Optional<List<GuildChannelCreateRequest>> = Optional.Missing(), afkChannelId: OptionalSnowflake = OptionalSnowflake.Missing, afkTimeout: Optional<DurationInSeconds> = Optional.Missing(), systemChannelId: OptionalSnowflake = OptionalSnowflake.Missing)","description":"dev.kord.rest.json.request.GuildCreateRequest.GuildCreateRequest","location":"rest/dev.kord.rest.json.request/-guild-create-request/-guild-create-request.html","searchKeys":["GuildCreateRequest","fun GuildCreateRequest(name: String, region: Optional<String> = Optional.Missing(), icon: Optional<String> = Optional.Missing(), verificationLevel: Optional<VerificationLevel> = Optional.Missing(), defaultNotificationLevel: Optional<DefaultMessageNotificationLevel> = Optional.Missing(), explicitContentFilter: Optional<ExplicitContentFilter> = Optional.Missing(), roles: Optional<List<GuildRoleCreateRequest>> = Optional.Missing(), channels: Optional<List<GuildChannelCreateRequest>> = Optional.Missing(), afkChannelId: OptionalSnowflake = OptionalSnowflake.Missing, afkTimeout: Optional<DurationInSeconds> = Optional.Missing(), systemChannelId: OptionalSnowflake = OptionalSnowflake.Missing)","dev.kord.rest.json.request.GuildCreateRequest.GuildCreateRequest"]},{"name":"fun GuildFromTemplateCreateBuilder(name: String)","description":"dev.kord.rest.builder.template.GuildFromTemplateCreateBuilder.GuildFromTemplateCreateBuilder","location":"rest/dev.kord.rest.builder.template/-guild-from-template-create-builder/-guild-from-template-create-builder.html","searchKeys":["GuildFromTemplateCreateBuilder","fun GuildFromTemplateCreateBuilder(name: String)","dev.kord.rest.builder.template.GuildFromTemplateCreateBuilder.GuildFromTemplateCreateBuilder"]},{"name":"fun GuildFromTemplateCreateRequest(name: String, image: Optional<String> = Optional.Missing())","description":"dev.kord.rest.json.request.GuildFromTemplateCreateRequest.GuildFromTemplateCreateRequest","location":"rest/dev.kord.rest.json.request/-guild-from-template-create-request/-guild-from-template-create-request.html","searchKeys":["GuildFromTemplateCreateRequest","fun GuildFromTemplateCreateRequest(name: String, image: Optional<String> = Optional.Missing())","dev.kord.rest.json.request.GuildFromTemplateCreateRequest.GuildFromTemplateCreateRequest"]},{"name":"fun GuildIntegrationCreateRequest(type: Int, id: String)","description":"dev.kord.rest.json.request.GuildIntegrationCreateRequest.GuildIntegrationCreateRequest","location":"rest/dev.kord.rest.json.request/-guild-integration-create-request/-guild-integration-create-request.html","searchKeys":["GuildIntegrationCreateRequest","fun GuildIntegrationCreateRequest(type: Int, id: String)","dev.kord.rest.json.request.GuildIntegrationCreateRequest.GuildIntegrationCreateRequest"]},{"name":"fun GuildIntegrationModifyRequest(expireBehavior: Optional<IntegrationExpireBehavior> = Optional.Missing(), expirePeriod: OptionalInt? = OptionalInt.Missing, emoticons: OptionalBoolean = OptionalBoolean.Missing)","description":"dev.kord.rest.json.request.GuildIntegrationModifyRequest.GuildIntegrationModifyRequest","location":"rest/dev.kord.rest.json.request/-guild-integration-modify-request/-guild-integration-modify-request.html","searchKeys":["GuildIntegrationModifyRequest","fun GuildIntegrationModifyRequest(expireBehavior: Optional<IntegrationExpireBehavior> = Optional.Missing(), expirePeriod: OptionalInt? = OptionalInt.Missing, emoticons: OptionalBoolean = OptionalBoolean.Missing)","dev.kord.rest.json.request.GuildIntegrationModifyRequest.GuildIntegrationModifyRequest"]},{"name":"fun GuildMFALevelModifyRequest(level: MFALevel)","description":"dev.kord.rest.json.request.GuildMFALevelModifyRequest.GuildMFALevelModifyRequest","location":"rest/dev.kord.rest.json.request/-guild-m-f-a-level-modify-request/-guild-m-f-a-level-modify-request.html","searchKeys":["GuildMFALevelModifyRequest","fun GuildMFALevelModifyRequest(level: MFALevel)","dev.kord.rest.json.request.GuildMFALevelModifyRequest.GuildMFALevelModifyRequest"]},{"name":"fun GuildMFALevelModifyResponse(level: MFALevel)","description":"dev.kord.rest.json.response.GuildMFALevelModifyResponse.GuildMFALevelModifyResponse","location":"rest/dev.kord.rest.json.response/-guild-m-f-a-level-modify-response/-guild-m-f-a-level-modify-response.html","searchKeys":["GuildMFALevelModifyResponse","fun GuildMFALevelModifyResponse(level: MFALevel)","dev.kord.rest.json.response.GuildMFALevelModifyResponse.GuildMFALevelModifyResponse"]},{"name":"fun GuildMemberAddRequest(token: String, nick: Optional<String> = Optional.Missing(), roles: Optional<Set<Snowflake>> = Optional.Missing(), mute: OptionalBoolean = OptionalBoolean.Missing, deaf: OptionalBoolean = OptionalBoolean.Missing, communicationDisabledUntil: Optional<Instant> = Optional.Missing())","description":"dev.kord.rest.json.request.GuildMemberAddRequest.GuildMemberAddRequest","location":"rest/dev.kord.rest.json.request/-guild-member-add-request/-guild-member-add-request.html","searchKeys":["GuildMemberAddRequest","fun GuildMemberAddRequest(token: String, nick: Optional<String> = Optional.Missing(), roles: Optional<Set<Snowflake>> = Optional.Missing(), mute: OptionalBoolean = OptionalBoolean.Missing, deaf: OptionalBoolean = OptionalBoolean.Missing, communicationDisabledUntil: Optional<Instant> = Optional.Missing())","dev.kord.rest.json.request.GuildMemberAddRequest.GuildMemberAddRequest"]},{"name":"fun GuildMemberModifyRequest(nick: Optional<String?> = Optional.Missing(), roles: Optional<Set<Snowflake>?> = Optional.Missing(), mute: OptionalBoolean? = OptionalBoolean.Missing, deaf: OptionalBoolean? = OptionalBoolean.Missing, channelId: OptionalSnowflake? = OptionalSnowflake.Missing, communicationDisabledUntil: Optional<Instant?> = Optional.Missing())","description":"dev.kord.rest.json.request.GuildMemberModifyRequest.GuildMemberModifyRequest","location":"rest/dev.kord.rest.json.request/-guild-member-modify-request/-guild-member-modify-request.html","searchKeys":["GuildMemberModifyRequest","fun GuildMemberModifyRequest(nick: Optional<String?> = Optional.Missing(), roles: Optional<Set<Snowflake>?> = Optional.Missing(), mute: OptionalBoolean? = OptionalBoolean.Missing, deaf: OptionalBoolean? = OptionalBoolean.Missing, channelId: OptionalSnowflake? = OptionalSnowflake.Missing, communicationDisabledUntil: Optional<Instant?> = Optional.Missing())","dev.kord.rest.json.request.GuildMemberModifyRequest.GuildMemberModifyRequest"]},{"name":"fun GuildModifyBuilder()","description":"dev.kord.rest.builder.guild.GuildModifyBuilder.GuildModifyBuilder","location":"rest/dev.kord.rest.builder.guild/-guild-modify-builder/-guild-modify-builder.html","searchKeys":["GuildModifyBuilder","fun GuildModifyBuilder()","dev.kord.rest.builder.guild.GuildModifyBuilder.GuildModifyBuilder"]},{"name":"fun GuildModifyRequest(name: Optional<String> = Optional.Missing(), region: Optional<String?> = Optional.Missing(), verificationLevel: Optional<VerificationLevel?> = Optional.Missing(), defaultMessageNotificationLevel: Optional<DefaultMessageNotificationLevel?> = Optional.Missing(), contentFilter: Optional<ExplicitContentFilter?> = Optional.Missing(), afkChannelId: OptionalSnowflake? = OptionalSnowflake.Missing, afkTimeout: Optional<DurationInSeconds> = Optional.Missing(), icon: Optional<String?> = Optional.Missing(), ownerId: OptionalSnowflake = OptionalSnowflake.Missing, splash: Optional<String?> = Optional.Missing(), banner: Optional<String?> = Optional.Missing(), systemChannelId: OptionalSnowflake? = OptionalSnowflake.Missing, rulesChannelId: OptionalSnowflake? = OptionalSnowflake.Missing, publicUpdatesChannelId: OptionalSnowflake? = OptionalSnowflake.Missing, preferredLocale: Optional<String?> = Optional.Missing())","description":"dev.kord.rest.json.request.GuildModifyRequest.GuildModifyRequest","location":"rest/dev.kord.rest.json.request/-guild-modify-request/-guild-modify-request.html","searchKeys":["GuildModifyRequest","fun GuildModifyRequest(name: Optional<String> = Optional.Missing(), region: Optional<String?> = Optional.Missing(), verificationLevel: Optional<VerificationLevel?> = Optional.Missing(), defaultMessageNotificationLevel: Optional<DefaultMessageNotificationLevel?> = Optional.Missing(), contentFilter: Optional<ExplicitContentFilter?> = Optional.Missing(), afkChannelId: OptionalSnowflake? = OptionalSnowflake.Missing, afkTimeout: Optional<DurationInSeconds> = Optional.Missing(), icon: Optional<String?> = Optional.Missing(), ownerId: OptionalSnowflake = OptionalSnowflake.Missing, splash: Optional<String?> = Optional.Missing(), banner: Optional<String?> = Optional.Missing(), systemChannelId: OptionalSnowflake? = OptionalSnowflake.Missing, rulesChannelId: OptionalSnowflake? = OptionalSnowflake.Missing, publicUpdatesChannelId: OptionalSnowflake? = OptionalSnowflake.Missing, preferredLocale: Optional<String?> = Optional.Missing())","dev.kord.rest.json.request.GuildModifyRequest.GuildModifyRequest"]},{"name":"fun GuildMultiApplicationCommandBuilder()","description":"dev.kord.rest.builder.interaction.GuildMultiApplicationCommandBuilder.GuildMultiApplicationCommandBuilder","location":"rest/dev.kord.rest.builder.interaction/-guild-multi-application-command-builder/-guild-multi-application-command-builder.html","searchKeys":["GuildMultiApplicationCommandBuilder","fun GuildMultiApplicationCommandBuilder()","dev.kord.rest.builder.interaction.GuildMultiApplicationCommandBuilder.GuildMultiApplicationCommandBuilder"]},{"name":"fun GuildRoleCreateRequest(name: Optional<String> = Optional.Missing(), permissions: Optional<Permissions> = Optional.Missing(), color: Optional<Color> = Optional.Missing(), hoist: OptionalBoolean = OptionalBoolean.Missing, icon: Optional<String?> = Optional.Missing(), unicodeEmoji: Optional<String?> = Optional.Missing(), mentionable: OptionalBoolean = OptionalBoolean.Missing, id: OptionalSnowflake = OptionalSnowflake.Missing)","description":"dev.kord.rest.json.request.GuildRoleCreateRequest.GuildRoleCreateRequest","location":"rest/dev.kord.rest.json.request/-guild-role-create-request/-guild-role-create-request.html","searchKeys":["GuildRoleCreateRequest","fun GuildRoleCreateRequest(name: Optional<String> = Optional.Missing(), permissions: Optional<Permissions> = Optional.Missing(), color: Optional<Color> = Optional.Missing(), hoist: OptionalBoolean = OptionalBoolean.Missing, icon: Optional<String?> = Optional.Missing(), unicodeEmoji: Optional<String?> = Optional.Missing(), mentionable: OptionalBoolean = OptionalBoolean.Missing, id: OptionalSnowflake = OptionalSnowflake.Missing)","dev.kord.rest.json.request.GuildRoleCreateRequest.GuildRoleCreateRequest"]},{"name":"fun GuildRoleModifyRequest(name: Optional<String?> = Optional.Missing(), permissions: Optional<Permissions?> = Optional.Missing(), color: Optional<Color?> = Optional.Missing(), hoist: OptionalBoolean? = OptionalBoolean.Missing, icon: Optional<String?> = Optional.Missing(), unicodeEmoji: Optional<String?> = Optional.Missing(), mentionable: OptionalBoolean? = OptionalBoolean.Missing)","description":"dev.kord.rest.json.request.GuildRoleModifyRequest.GuildRoleModifyRequest","location":"rest/dev.kord.rest.json.request/-guild-role-modify-request/-guild-role-modify-request.html","searchKeys":["GuildRoleModifyRequest","fun GuildRoleModifyRequest(name: Optional<String?> = Optional.Missing(), permissions: Optional<Permissions?> = Optional.Missing(), color: Optional<Color?> = Optional.Missing(), hoist: OptionalBoolean? = OptionalBoolean.Missing, icon: Optional<String?> = Optional.Missing(), unicodeEmoji: Optional<String?> = Optional.Missing(), mentionable: OptionalBoolean? = OptionalBoolean.Missing)","dev.kord.rest.json.request.GuildRoleModifyRequest.GuildRoleModifyRequest"]},{"name":"fun GuildRolePositionModifyRequest(swaps: List<Pair<Snowflake, Int>>)","description":"dev.kord.rest.json.request.GuildRolePositionModifyRequest.GuildRolePositionModifyRequest","location":"rest/dev.kord.rest.json.request/-guild-role-position-modify-request/-guild-role-position-modify-request.html","searchKeys":["GuildRolePositionModifyRequest","fun GuildRolePositionModifyRequest(swaps: List<Pair<Snowflake, Int>>)","dev.kord.rest.json.request.GuildRolePositionModifyRequest.GuildRolePositionModifyRequest"]},{"name":"fun GuildScheduledEventCreateRequest(channelId: OptionalSnowflake = OptionalSnowflake.Missing, entityMetadata: Optional<GuildScheduledEventEntityMetadata> = Optional.Missing(), name: String, privacyLevel: GuildScheduledEventPrivacyLevel, scheduledStartTime: Instant, scheduledEndTime: Optional<Instant> = Optional.Missing(), description: Optional<String> = Optional.Missing(), entityType: ScheduledEntityType, image: Optional<String> = Optional.Missing())","description":"dev.kord.rest.json.request.GuildScheduledEventCreateRequest.GuildScheduledEventCreateRequest","location":"rest/dev.kord.rest.json.request/-guild-scheduled-event-create-request/-guild-scheduled-event-create-request.html","searchKeys":["GuildScheduledEventCreateRequest","fun GuildScheduledEventCreateRequest(channelId: OptionalSnowflake = OptionalSnowflake.Missing, entityMetadata: Optional<GuildScheduledEventEntityMetadata> = Optional.Missing(), name: String, privacyLevel: GuildScheduledEventPrivacyLevel, scheduledStartTime: Instant, scheduledEndTime: Optional<Instant> = Optional.Missing(), description: Optional<String> = Optional.Missing(), entityType: ScheduledEntityType, image: Optional<String> = Optional.Missing())","dev.kord.rest.json.request.GuildScheduledEventCreateRequest.GuildScheduledEventCreateRequest"]},{"name":"fun GuildScheduledEventUsersResponse(guildScheduledEventId: Snowflake, user: DiscordUser, member: Optional<DiscordGuildMember> = Optional.Missing())","description":"dev.kord.rest.json.request.GuildScheduledEventUsersResponse.GuildScheduledEventUsersResponse","location":"rest/dev.kord.rest.json.request/-guild-scheduled-event-users-response/-guild-scheduled-event-users-response.html","searchKeys":["GuildScheduledEventUsersResponse","fun GuildScheduledEventUsersResponse(guildScheduledEventId: Snowflake, user: DiscordUser, member: Optional<DiscordGuildMember> = Optional.Missing())","dev.kord.rest.json.request.GuildScheduledEventUsersResponse.GuildScheduledEventUsersResponse"]},{"name":"fun GuildService(requestHandler: RequestHandler)","description":"dev.kord.rest.service.GuildService.GuildService","location":"rest/dev.kord.rest.service/-guild-service/-guild-service.html","searchKeys":["GuildService","fun GuildService(requestHandler: RequestHandler)","dev.kord.rest.service.GuildService.GuildService"]},{"name":"fun GuildStickerCreateRequest(name: String, description: String, tags: String)","description":"dev.kord.rest.json.request.GuildStickerCreateRequest.GuildStickerCreateRequest","location":"rest/dev.kord.rest.json.request/-guild-sticker-create-request/-guild-sticker-create-request.html","searchKeys":["GuildStickerCreateRequest","fun GuildStickerCreateRequest(name: String, description: String, tags: String)","dev.kord.rest.json.request.GuildStickerCreateRequest.GuildStickerCreateRequest"]},{"name":"fun GuildStickerModifyRequest(name: Optional<String> = Optional.Missing(), description: Optional<String> = Optional.Missing(), tags: Optional<String> = Optional.Missing())","description":"dev.kord.rest.json.request.GuildStickerModifyRequest.GuildStickerModifyRequest","location":"rest/dev.kord.rest.json.request/-guild-sticker-modify-request/-guild-sticker-modify-request.html","searchKeys":["GuildStickerModifyRequest","fun GuildStickerModifyRequest(name: Optional<String> = Optional.Missing(), description: Optional<String> = Optional.Missing(), tags: Optional<String> = Optional.Missing())","dev.kord.rest.json.request.GuildStickerModifyRequest.GuildStickerModifyRequest"]},{"name":"fun GuildTemplateCreateBuilder(name: String)","description":"dev.kord.rest.builder.template.GuildTemplateCreateBuilder.GuildTemplateCreateBuilder","location":"rest/dev.kord.rest.builder.template/-guild-template-create-builder/-guild-template-create-builder.html","searchKeys":["GuildTemplateCreateBuilder","fun GuildTemplateCreateBuilder(name: String)","dev.kord.rest.builder.template.GuildTemplateCreateBuilder.GuildTemplateCreateBuilder"]},{"name":"fun GuildTemplateCreateRequest(name: String, description: Optional<String?> = Optional.Missing())","description":"dev.kord.rest.json.request.GuildTemplateCreateRequest.GuildTemplateCreateRequest","location":"rest/dev.kord.rest.json.request/-guild-template-create-request/-guild-template-create-request.html","searchKeys":["GuildTemplateCreateRequest","fun GuildTemplateCreateRequest(name: String, description: Optional<String?> = Optional.Missing())","dev.kord.rest.json.request.GuildTemplateCreateRequest.GuildTemplateCreateRequest"]},{"name":"fun GuildTemplateModifyBuilder()","description":"dev.kord.rest.builder.template.GuildTemplateModifyBuilder.GuildTemplateModifyBuilder","location":"rest/dev.kord.rest.builder.template/-guild-template-modify-builder/-guild-template-modify-builder.html","searchKeys":["GuildTemplateModifyBuilder","fun GuildTemplateModifyBuilder()","dev.kord.rest.builder.template.GuildTemplateModifyBuilder.GuildTemplateModifyBuilder"]},{"name":"fun GuildTemplateModifyRequest(name: Optional<String> = Optional.Missing(), description: Optional<String?> = Optional.Missing())","description":"dev.kord.rest.json.request.GuildTemplateModifyRequest.GuildTemplateModifyRequest","location":"rest/dev.kord.rest.json.request/-guild-template-modify-request/-guild-template-modify-request.html","searchKeys":["GuildTemplateModifyRequest","fun GuildTemplateModifyRequest(name: Optional<String> = Optional.Missing(), description: Optional<String?> = Optional.Missing())","dev.kord.rest.json.request.GuildTemplateModifyRequest.GuildTemplateModifyRequest"]},{"name":"fun GuildWelcomeScreenModifyRequest(enabled: OptionalBoolean = OptionalBoolean.Missing, welcomeScreenChannels: Optional<List<DiscordWelcomeScreenChannel>> = Optional.Missing(), description: Optional<String> = Optional.Missing())","description":"dev.kord.rest.json.request.GuildWelcomeScreenModifyRequest.GuildWelcomeScreenModifyRequest","location":"rest/dev.kord.rest.json.request/-guild-welcome-screen-modify-request/-guild-welcome-screen-modify-request.html","searchKeys":["GuildWelcomeScreenModifyRequest","fun GuildWelcomeScreenModifyRequest(enabled: OptionalBoolean = OptionalBoolean.Missing, welcomeScreenChannels: Optional<List<DiscordWelcomeScreenChannel>> = Optional.Missing(), description: Optional<String> = Optional.Missing())","dev.kord.rest.json.request.GuildWelcomeScreenModifyRequest.GuildWelcomeScreenModifyRequest"]},{"name":"fun GuildWidgetModifyBuilder()","description":"dev.kord.rest.builder.guild.GuildWidgetModifyBuilder.GuildWidgetModifyBuilder","location":"rest/dev.kord.rest.builder.guild/-guild-widget-modify-builder/-guild-widget-modify-builder.html","searchKeys":["GuildWidgetModifyBuilder","fun GuildWidgetModifyBuilder()","dev.kord.rest.builder.guild.GuildWidgetModifyBuilder.GuildWidgetModifyBuilder"]},{"name":"fun GuildWidgetModifyRequest(enabled: OptionalBoolean = OptionalBoolean.Missing, channelId: OptionalSnowflake? = OptionalSnowflake.Missing)","description":"dev.kord.rest.json.request.GuildWidgetModifyRequest.GuildWidgetModifyRequest","location":"rest/dev.kord.rest.json.request/-guild-widget-modify-request/-guild-widget-modify-request.html","searchKeys":["GuildWidgetModifyRequest","fun GuildWidgetModifyRequest(enabled: OptionalBoolean = OptionalBoolean.Missing, channelId: OptionalSnowflake? = OptionalSnowflake.Missing)","dev.kord.rest.json.request.GuildWidgetModifyRequest.GuildWidgetModifyRequest"]},{"name":"fun HttpResponse.channelResetPoint(clock: Clock): Instant","description":"dev.kord.rest.request.channelResetPoint","location":"rest/dev.kord.rest.request/channel-reset-point.html","searchKeys":["channelResetPoint","fun HttpResponse.channelResetPoint(clock: Clock): Instant","dev.kord.rest.request.channelResetPoint"]},{"name":"fun HttpResponse.globalSuspensionPoint(clock: Clock): Long","description":"dev.kord.rest.request.globalSuspensionPoint","location":"rest/dev.kord.rest.request/global-suspension-point.html","searchKeys":["globalSuspensionPoint","fun HttpResponse.globalSuspensionPoint(clock: Clock): Long","dev.kord.rest.request.globalSuspensionPoint"]},{"name":"fun HttpResponse.logString(body: String): String","description":"dev.kord.rest.request.logString","location":"rest/dev.kord.rest.request/log-string.html","searchKeys":["logString","fun HttpResponse.logString(body: String): String","dev.kord.rest.request.logString"]},{"name":"fun HttpStatus(code: Int, message: String)","description":"dev.kord.rest.request.HttpStatus.HttpStatus","location":"rest/dev.kord.rest.request/-http-status/-http-status.html","searchKeys":["HttpStatus","fun HttpStatus(code: Int, message: String)","dev.kord.rest.request.HttpStatus.HttpStatus"]},{"name":"fun IntegerOptionBuilder(name: String, description: String)","description":"dev.kord.rest.builder.interaction.IntegerOptionBuilder.IntegerOptionBuilder","location":"rest/dev.kord.rest.builder.interaction/-integer-option-builder/-integer-option-builder.html","searchKeys":["IntegerOptionBuilder","fun IntegerOptionBuilder(name: String, description: String)","dev.kord.rest.builder.interaction.IntegerOptionBuilder.IntegerOptionBuilder"]},{"name":"fun IntegrationModifyBuilder()","description":"dev.kord.rest.builder.integration.IntegrationModifyBuilder.IntegrationModifyBuilder","location":"rest/dev.kord.rest.builder.integration/-integration-modify-builder/-integration-modify-builder.html","searchKeys":["IntegrationModifyBuilder","fun IntegrationModifyBuilder()","dev.kord.rest.builder.integration.IntegrationModifyBuilder.IntegrationModifyBuilder"]},{"name":"fun InteractionApplicationCommandCallbackData(tts: OptionalBoolean = OptionalBoolean.Missing, content: Optional<String?> = Optional.Missing(), embeds: Optional<List<EmbedRequest>> = Optional.Missing(), allowedMentions: Optional<AllowedMentions?> = Optional.Missing(), flags: Optional<MessageFlags> = Optional.Missing(), components: Optional<List<DiscordComponent>> = Optional.Missing())","description":"dev.kord.rest.json.request.InteractionApplicationCommandCallbackData.InteractionApplicationCommandCallbackData","location":"rest/dev.kord.rest.json.request/-interaction-application-command-callback-data/-interaction-application-command-callback-data.html","searchKeys":["InteractionApplicationCommandCallbackData","fun InteractionApplicationCommandCallbackData(tts: OptionalBoolean = OptionalBoolean.Missing, content: Optional<String?> = Optional.Missing(), embeds: Optional<List<EmbedRequest>> = Optional.Missing(), allowedMentions: Optional<AllowedMentions?> = Optional.Missing(), flags: Optional<MessageFlags> = Optional.Missing(), components: Optional<List<DiscordComponent>> = Optional.Missing())","dev.kord.rest.json.request.InteractionApplicationCommandCallbackData.InteractionApplicationCommandCallbackData"]},{"name":"fun InteractionButtonBuilder(style: ButtonStyle, customId: String)","description":"dev.kord.rest.builder.component.ButtonBuilder.InteractionButtonBuilder.InteractionButtonBuilder","location":"rest/dev.kord.rest.builder.component/-button-builder/-interaction-button-builder/-interaction-button-builder.html","searchKeys":["InteractionButtonBuilder","fun InteractionButtonBuilder(style: ButtonStyle, customId: String)","dev.kord.rest.builder.component.ButtonBuilder.InteractionButtonBuilder.InteractionButtonBuilder"]},{"name":"fun InteractionResponseCreateBuilder(ephemeral: Boolean = false)","description":"dev.kord.rest.builder.message.create.InteractionResponseCreateBuilder.InteractionResponseCreateBuilder","location":"rest/dev.kord.rest.builder.message.create/-interaction-response-create-builder/-interaction-response-create-builder.html","searchKeys":["InteractionResponseCreateBuilder","fun InteractionResponseCreateBuilder(ephemeral: Boolean = false)","dev.kord.rest.builder.message.create.InteractionResponseCreateBuilder.InteractionResponseCreateBuilder"]},{"name":"fun InteractionResponseCreateRequest(type: InteractionResponseType, data: Optional<InteractionApplicationCommandCallbackData> = Optional.Missing())","description":"dev.kord.rest.json.request.InteractionResponseCreateRequest.InteractionResponseCreateRequest","location":"rest/dev.kord.rest.json.request/-interaction-response-create-request/-interaction-response-create-request.html","searchKeys":["InteractionResponseCreateRequest","fun InteractionResponseCreateRequest(type: InteractionResponseType, data: Optional<InteractionApplicationCommandCallbackData> = Optional.Missing())","dev.kord.rest.json.request.InteractionResponseCreateRequest.InteractionResponseCreateRequest"]},{"name":"fun InteractionResponseModifyBuilder()","description":"dev.kord.rest.builder.message.modify.InteractionResponseModifyBuilder.InteractionResponseModifyBuilder","location":"rest/dev.kord.rest.builder.message.modify/-interaction-response-modify-builder/-interaction-response-modify-builder.html","searchKeys":["InteractionResponseModifyBuilder","fun InteractionResponseModifyBuilder()","dev.kord.rest.builder.message.modify.InteractionResponseModifyBuilder.InteractionResponseModifyBuilder"]},{"name":"fun InteractionResponseModifyRequest(content: Optional<String?> = Optional.Missing(), embeds: Optional<List<EmbedRequest>?> = Optional.Missing(), allowedMentions: Optional<AllowedMentions?> = Optional.Missing(), flags: Optional<MessageFlags?> = Optional.Missing(), components: Optional<List<DiscordComponent>?> = Optional.Missing(), attachments: Optional<MutableList<DiscordAttachment>?> = Optional.Missing())","description":"dev.kord.rest.json.request.InteractionResponseModifyRequest.InteractionResponseModifyRequest","location":"rest/dev.kord.rest.json.request/-interaction-response-modify-request/-interaction-response-modify-request.html","searchKeys":["InteractionResponseModifyRequest","fun InteractionResponseModifyRequest(content: Optional<String?> = Optional.Missing(), embeds: Optional<List<EmbedRequest>?> = Optional.Missing(), allowedMentions: Optional<AllowedMentions?> = Optional.Missing(), flags: Optional<MessageFlags?> = Optional.Missing(), components: Optional<List<DiscordComponent>?> = Optional.Missing(), attachments: Optional<MutableList<DiscordAttachment>?> = Optional.Missing())","dev.kord.rest.json.request.InteractionResponseModifyRequest.InteractionResponseModifyRequest"]},{"name":"fun InteractionService(requestHandler: RequestHandler)","description":"dev.kord.rest.service.InteractionService.InteractionService","location":"rest/dev.kord.rest.service/-interaction-service/-interaction-service.html","searchKeys":["InteractionService","fun InteractionService(requestHandler: RequestHandler)","dev.kord.rest.service.InteractionService.InteractionService"]},{"name":"fun InviteCreateBuilder()","description":"dev.kord.rest.builder.channel.InviteCreateBuilder.InviteCreateBuilder","location":"rest/dev.kord.rest.builder.channel/-invite-create-builder/-invite-create-builder.html","searchKeys":["InviteCreateBuilder","fun InviteCreateBuilder()","dev.kord.rest.builder.channel.InviteCreateBuilder.InviteCreateBuilder"]},{"name":"fun InviteCreateRequest(maxAge: Optional<DurationInSeconds> = Optional.Missing(), maxUses: OptionalInt = OptionalInt.Missing, temporary: OptionalBoolean = OptionalBoolean.Missing, unique: OptionalBoolean = OptionalBoolean.Missing, targetUser: OptionalSnowflake = OptionalSnowflake.Missing, targetUserType: Optional<TargetUserType> = Optional.Missing(), targetType: Optional<InviteTargetType> = Optional.Missing(), targetUserId: OptionalSnowflake = OptionalSnowflake.Missing, targetApplicationId: OptionalSnowflake = OptionalSnowflake.Missing)","description":"dev.kord.rest.json.request.InviteCreateRequest.InviteCreateRequest","location":"rest/dev.kord.rest.json.request/-invite-create-request/-invite-create-request.html","searchKeys":["InviteCreateRequest","fun InviteCreateRequest(maxAge: Optional<DurationInSeconds> = Optional.Missing(), maxUses: OptionalInt = OptionalInt.Missing, temporary: OptionalBoolean = OptionalBoolean.Missing, unique: OptionalBoolean = OptionalBoolean.Missing, targetUser: OptionalSnowflake = OptionalSnowflake.Missing, targetUserType: Optional<TargetUserType> = Optional.Missing(), targetType: Optional<InviteTargetType> = Optional.Missing(), targetUserId: OptionalSnowflake = OptionalSnowflake.Missing, targetApplicationId: OptionalSnowflake = OptionalSnowflake.Missing)","dev.kord.rest.json.request.InviteCreateRequest.InviteCreateRequest"]},{"name":"fun InviteService(requestHandler: RequestHandler)","description":"dev.kord.rest.service.InviteService.InviteService","location":"rest/dev.kord.rest.service/-invite-service/-invite-service.html","searchKeys":["InviteService","fun InviteService(requestHandler: RequestHandler)","dev.kord.rest.service.InviteService.InviteService"]},{"name":"fun Key(identifier: String, isMajor: Boolean = false)","description":"dev.kord.rest.route.Route.Key.Key","location":"rest/dev.kord.rest.route/-route/-key/-key.html","searchKeys":["Key","fun Key(identifier: String, isMajor: Boolean = false)","dev.kord.rest.route.Route.Key.Key"]},{"name":"fun KeywordAutoModerationRuleBuilder.anywhereKeyword(keyword: String)","description":"dev.kord.rest.builder.automoderation.anywhereKeyword","location":"rest/dev.kord.rest.builder.automoderation/anywhere-keyword.html","searchKeys":["anywhereKeyword","fun KeywordAutoModerationRuleBuilder.anywhereKeyword(keyword: String)","dev.kord.rest.builder.automoderation.anywhereKeyword"]},{"name":"fun KeywordAutoModerationRuleBuilder.keyword(keyword: String)","description":"dev.kord.rest.builder.automoderation.keyword","location":"rest/dev.kord.rest.builder.automoderation/keyword.html","searchKeys":["keyword","fun KeywordAutoModerationRuleBuilder.keyword(keyword: String)","dev.kord.rest.builder.automoderation.keyword"]},{"name":"fun KeywordAutoModerationRuleBuilder.prefixKeyword(keyword: String)","description":"dev.kord.rest.builder.automoderation.prefixKeyword","location":"rest/dev.kord.rest.builder.automoderation/prefix-keyword.html","searchKeys":["prefixKeyword","fun KeywordAutoModerationRuleBuilder.prefixKeyword(keyword: String)","dev.kord.rest.builder.automoderation.prefixKeyword"]},{"name":"fun KeywordAutoModerationRuleBuilder.regexPattern(pattern: String)","description":"dev.kord.rest.builder.automoderation.regexPattern","location":"rest/dev.kord.rest.builder.automoderation/regex-pattern.html","searchKeys":["regexPattern","fun KeywordAutoModerationRuleBuilder.regexPattern(pattern: String)","dev.kord.rest.builder.automoderation.regexPattern"]},{"name":"fun KeywordAutoModerationRuleBuilder.suffixKeyword(keyword: String)","description":"dev.kord.rest.builder.automoderation.suffixKeyword","location":"rest/dev.kord.rest.builder.automoderation/suffix-keyword.html","searchKeys":["suffixKeyword","fun KeywordAutoModerationRuleBuilder.suffixKeyword(keyword: String)","dev.kord.rest.builder.automoderation.suffixKeyword"]},{"name":"fun KeywordAutoModerationRuleCreateBuilder(name: String, eventType: AutoModerationRuleEventType)","description":"dev.kord.rest.builder.automoderation.KeywordAutoModerationRuleCreateBuilder.KeywordAutoModerationRuleCreateBuilder","location":"rest/dev.kord.rest.builder.automoderation/-keyword-auto-moderation-rule-create-builder/-keyword-auto-moderation-rule-create-builder.html","searchKeys":["KeywordAutoModerationRuleCreateBuilder","fun KeywordAutoModerationRuleCreateBuilder(name: String, eventType: AutoModerationRuleEventType)","dev.kord.rest.builder.automoderation.KeywordAutoModerationRuleCreateBuilder.KeywordAutoModerationRuleCreateBuilder"]},{"name":"fun KeywordAutoModerationRuleModifyBuilder()","description":"dev.kord.rest.builder.automoderation.KeywordAutoModerationRuleModifyBuilder.KeywordAutoModerationRuleModifyBuilder","location":"rest/dev.kord.rest.builder.automoderation/-keyword-auto-moderation-rule-modify-builder/-keyword-auto-moderation-rule-modify-builder.html","searchKeys":["KeywordAutoModerationRuleModifyBuilder","fun KeywordAutoModerationRuleModifyBuilder()","dev.kord.rest.builder.automoderation.KeywordAutoModerationRuleModifyBuilder.KeywordAutoModerationRuleModifyBuilder"]},{"name":"fun KeywordPresetAutoModerationRuleBuilder.allowKeyword(keyword: String)","description":"dev.kord.rest.builder.automoderation.allowKeyword","location":"rest/dev.kord.rest.builder.automoderation/allow-keyword.html","searchKeys":["allowKeyword","fun KeywordPresetAutoModerationRuleBuilder.allowKeyword(keyword: String)","dev.kord.rest.builder.automoderation.allowKeyword"]},{"name":"fun KeywordPresetAutoModerationRuleBuilder.preset(preset: AutoModerationRuleKeywordPresetType)","description":"dev.kord.rest.builder.automoderation.preset","location":"rest/dev.kord.rest.builder.automoderation/preset.html","searchKeys":["preset","fun KeywordPresetAutoModerationRuleBuilder.preset(preset: AutoModerationRuleKeywordPresetType)","dev.kord.rest.builder.automoderation.preset"]},{"name":"fun KeywordPresetAutoModerationRuleCreateBuilder(name: String, eventType: AutoModerationRuleEventType)","description":"dev.kord.rest.builder.automoderation.KeywordPresetAutoModerationRuleCreateBuilder.KeywordPresetAutoModerationRuleCreateBuilder","location":"rest/dev.kord.rest.builder.automoderation/-keyword-preset-auto-moderation-rule-create-builder/-keyword-preset-auto-moderation-rule-create-builder.html","searchKeys":["KeywordPresetAutoModerationRuleCreateBuilder","fun KeywordPresetAutoModerationRuleCreateBuilder(name: String, eventType: AutoModerationRuleEventType)","dev.kord.rest.builder.automoderation.KeywordPresetAutoModerationRuleCreateBuilder.KeywordPresetAutoModerationRuleCreateBuilder"]},{"name":"fun KeywordPresetAutoModerationRuleModifyBuilder()","description":"dev.kord.rest.builder.automoderation.KeywordPresetAutoModerationRuleModifyBuilder.KeywordPresetAutoModerationRuleModifyBuilder","location":"rest/dev.kord.rest.builder.automoderation/-keyword-preset-auto-moderation-rule-modify-builder/-keyword-preset-auto-moderation-rule-modify-builder.html","searchKeys":["KeywordPresetAutoModerationRuleModifyBuilder","fun KeywordPresetAutoModerationRuleModifyBuilder()","dev.kord.rest.builder.automoderation.KeywordPresetAutoModerationRuleModifyBuilder.KeywordPresetAutoModerationRuleModifyBuilder"]},{"name":"fun KtorRequestException(httpResponse: HttpResponse, request: Request<*, *>, discordError: DiscordErrorResponse?)","description":"dev.kord.rest.request.KtorRequestException.KtorRequestException","location":"rest/dev.kord.rest.request/-ktor-request-exception/-ktor-request-exception.html","searchKeys":["KtorRequestException","fun KtorRequestException(httpResponse: HttpResponse, request: Request<*, *>, discordError: DiscordErrorResponse?)","dev.kord.rest.request.KtorRequestException.KtorRequestException"]},{"name":"fun KtorRequestHandler(client: HttpClient, requestRateLimiter: RequestRateLimiter = ExclusionRequestRateLimiter(), clock: Clock = Clock.System, parser: Json = jsonDefault, token: String)","description":"dev.kord.rest.request.KtorRequestHandler.KtorRequestHandler","location":"rest/dev.kord.rest.request/-ktor-request-handler/-ktor-request-handler.html","searchKeys":["KtorRequestHandler","fun KtorRequestHandler(client: HttpClient, requestRateLimiter: RequestRateLimiter = ExclusionRequestRateLimiter(), clock: Clock = Clock.System, parser: Json = jsonDefault, token: String)","dev.kord.rest.request.KtorRequestHandler.KtorRequestHandler"]},{"name":"fun KtorRequestHandler(token: String, requestRateLimiter: RequestRateLimiter = ExclusionRequestRateLimiter(), clock: Clock = Clock.System, parser: Json = jsonDefault): KtorRequestHandler","description":"dev.kord.rest.request.KtorRequestHandler","location":"rest/dev.kord.rest.request/-ktor-request-handler.html","searchKeys":["KtorRequestHandler","fun KtorRequestHandler(token: String, requestRateLimiter: RequestRateLimiter = ExclusionRequestRateLimiter(), clock: Clock = Clock.System, parser: Json = jsonDefault): KtorRequestHandler","dev.kord.rest.request.KtorRequestHandler"]},{"name":"fun KtorRequestHandler.withStackTraceRecovery(): StackTraceRecoveringKtorRequestHandler","description":"dev.kord.rest.request.withStackTraceRecovery","location":"rest/dev.kord.rest.request/with-stack-trace-recovery.html","searchKeys":["withStackTraceRecovery","fun KtorRequestHandler.withStackTraceRecovery(): StackTraceRecoveringKtorRequestHandler","dev.kord.rest.request.withStackTraceRecovery"]},{"name":"fun LinkButtonBuilder(url: String)","description":"dev.kord.rest.builder.component.ButtonBuilder.LinkButtonBuilder.LinkButtonBuilder","location":"rest/dev.kord.rest.builder.component/-button-builder/-link-button-builder/-link-button-builder.html","searchKeys":["LinkButtonBuilder","fun LinkButtonBuilder(url: String)","dev.kord.rest.builder.component.ButtonBuilder.LinkButtonBuilder.LinkButtonBuilder"]},{"name":"fun ListThreadsBySnowflakeRequest(before: Snowflake? = null, limit: Int? = null)","description":"dev.kord.rest.json.request.ListThreadsBySnowflakeRequest.ListThreadsBySnowflakeRequest","location":"rest/dev.kord.rest.json.request/-list-threads-by-snowflake-request/-list-threads-by-snowflake-request.html","searchKeys":["ListThreadsBySnowflakeRequest","fun ListThreadsBySnowflakeRequest(before: Snowflake? = null, limit: Int? = null)","dev.kord.rest.json.request.ListThreadsBySnowflakeRequest.ListThreadsBySnowflakeRequest"]},{"name":"fun ListThreadsByTimestampRequest(before: Instant? = null, limit: Int? = null)","description":"dev.kord.rest.json.request.ListThreadsByTimestampRequest.ListThreadsByTimestampRequest","location":"rest/dev.kord.rest.json.request/-list-threads-by-timestamp-request/-list-threads-by-timestamp-request.html","searchKeys":["ListThreadsByTimestampRequest","fun ListThreadsByTimestampRequest(before: Instant? = null, limit: Int? = null)","dev.kord.rest.json.request.ListThreadsByTimestampRequest.ListThreadsByTimestampRequest"]},{"name":"fun ListThreadsResponse(threads: List<DiscordChannel>, members: List<DiscordThreadMember>)","description":"dev.kord.rest.json.response.ListThreadsResponse.ListThreadsResponse","location":"rest/dev.kord.rest.json.response/-list-threads-response/-list-threads-response.html","searchKeys":["ListThreadsResponse","fun ListThreadsResponse(threads: List<DiscordChannel>, members: List<DiscordThreadMember>)","dev.kord.rest.json.response.ListThreadsResponse.ListThreadsResponse"]},{"name":"fun MajorParamIdentifier(route: Route<*>, param: String)","description":"dev.kord.rest.request.RequestIdentifier.MajorParamIdentifier.MajorParamIdentifier","location":"rest/dev.kord.rest.request/-request-identifier/-major-param-identifier/-major-param-identifier.html","searchKeys":["MajorParamIdentifier","fun MajorParamIdentifier(route: Route<*>, param: String)","dev.kord.rest.request.RequestIdentifier.MajorParamIdentifier.MajorParamIdentifier"]},{"name":"fun MemberAddBuilder(token: String)","description":"dev.kord.rest.builder.member.MemberAddBuilder.MemberAddBuilder","location":"rest/dev.kord.rest.builder.member/-member-add-builder/-member-add-builder.html","searchKeys":["MemberAddBuilder","fun MemberAddBuilder(token: String)","dev.kord.rest.builder.member.MemberAddBuilder.MemberAddBuilder"]},{"name":"fun MemberModifyBuilder()","description":"dev.kord.rest.builder.member.MemberModifyBuilder.MemberModifyBuilder","location":"rest/dev.kord.rest.builder.member/-member-modify-builder/-member-modify-builder.html","searchKeys":["MemberModifyBuilder","fun MemberModifyBuilder()","dev.kord.rest.builder.member.MemberModifyBuilder.MemberModifyBuilder"]},{"name":"fun MentionSpamAutoModerationRuleCreateBuilder(name: String, eventType: AutoModerationRuleEventType, mentionLimit: Int)","description":"dev.kord.rest.builder.automoderation.MentionSpamAutoModerationRuleCreateBuilder.MentionSpamAutoModerationRuleCreateBuilder","location":"rest/dev.kord.rest.builder.automoderation/-mention-spam-auto-moderation-rule-create-builder/-mention-spam-auto-moderation-rule-create-builder.html","searchKeys":["MentionSpamAutoModerationRuleCreateBuilder","fun MentionSpamAutoModerationRuleCreateBuilder(name: String, eventType: AutoModerationRuleEventType, mentionLimit: Int)","dev.kord.rest.builder.automoderation.MentionSpamAutoModerationRuleCreateBuilder.MentionSpamAutoModerationRuleCreateBuilder"]},{"name":"fun MentionSpamAutoModerationRuleModifyBuilder()","description":"dev.kord.rest.builder.automoderation.MentionSpamAutoModerationRuleModifyBuilder.MentionSpamAutoModerationRuleModifyBuilder","location":"rest/dev.kord.rest.builder.automoderation/-mention-spam-auto-moderation-rule-modify-builder/-mention-spam-auto-moderation-rule-modify-builder.html","searchKeys":["MentionSpamAutoModerationRuleModifyBuilder","fun MentionSpamAutoModerationRuleModifyBuilder()","dev.kord.rest.builder.automoderation.MentionSpamAutoModerationRuleModifyBuilder.MentionSpamAutoModerationRuleModifyBuilder"]},{"name":"fun MentionableBuilder(name: String, description: String)","description":"dev.kord.rest.builder.interaction.MentionableBuilder.MentionableBuilder","location":"rest/dev.kord.rest.builder.interaction/-mentionable-builder/-mentionable-builder.html","searchKeys":["MentionableBuilder","fun MentionableBuilder(name: String, description: String)","dev.kord.rest.builder.interaction.MentionableBuilder.MentionableBuilder"]},{"name":"fun MessageCreateRequest(content: Optional<String> = Optional.Missing(), nonce: Optional<String> = Optional.Missing(), tts: OptionalBoolean = OptionalBoolean.Missing, embeds: Optional<List<EmbedRequest>> = Optional.Missing(), allowedMentions: Optional<AllowedMentions> = Optional.Missing(), messageReference: Optional<DiscordMessageReference> = Optional.Missing(), components: Optional<List<DiscordComponent>> = Optional.Missing())","description":"dev.kord.rest.json.request.MessageCreateRequest.MessageCreateRequest","location":"rest/dev.kord.rest.json.request/-message-create-request/-message-create-request.html","searchKeys":["MessageCreateRequest","fun MessageCreateRequest(content: Optional<String> = Optional.Missing(), nonce: Optional<String> = Optional.Missing(), tts: OptionalBoolean = OptionalBoolean.Missing, embeds: Optional<List<EmbedRequest>> = Optional.Missing(), allowedMentions: Optional<AllowedMentions> = Optional.Missing(), messageReference: Optional<DiscordMessageReference> = Optional.Missing(), components: Optional<List<DiscordComponent>> = Optional.Missing())","dev.kord.rest.json.request.MessageCreateRequest.MessageCreateRequest"]},{"name":"fun MessageEditPatchRequest(content: Optional<String?> = Optional.Missing(), embeds: Optional<List<EmbedRequest>?> = Optional.Missing(), flags: Optional<MessageFlags?> = Optional.Missing(), allowedMentions: Optional<AllowedMentions?> = Optional.Missing(), components: Optional<List<DiscordComponent>> = Optional.Missing(), attachments: Optional<MutableList<DiscordAttachment>> = Optional.Missing())","description":"dev.kord.rest.json.request.MessageEditPatchRequest.MessageEditPatchRequest","location":"rest/dev.kord.rest.json.request/-message-edit-patch-request/-message-edit-patch-request.html","searchKeys":["MessageEditPatchRequest","fun MessageEditPatchRequest(content: Optional<String?> = Optional.Missing(), embeds: Optional<List<EmbedRequest>?> = Optional.Missing(), flags: Optional<MessageFlags?> = Optional.Missing(), allowedMentions: Optional<AllowedMentions?> = Optional.Missing(), components: Optional<List<DiscordComponent>> = Optional.Missing(), attachments: Optional<MutableList<DiscordAttachment>> = Optional.Missing())","dev.kord.rest.json.request.MessageEditPatchRequest.MessageEditPatchRequest"]},{"name":"fun ModalBuilder(title: String, customId: String)","description":"dev.kord.rest.builder.interaction.ModalBuilder.ModalBuilder","location":"rest/dev.kord.rest.builder.interaction/-modal-builder/-modal-builder.html","searchKeys":["ModalBuilder","fun ModalBuilder(title: String, customId: String)","dev.kord.rest.builder.interaction.ModalBuilder.ModalBuilder"]},{"name":"fun ModalResponseCreateRequest(type: InteractionResponseType, data: DiscordModal)","description":"dev.kord.rest.json.request.ModalResponseCreateRequest.ModalResponseCreateRequest","location":"rest/dev.kord.rest.json.request/-modal-response-create-request/-modal-response-create-request.html","searchKeys":["ModalResponseCreateRequest","fun ModalResponseCreateRequest(type: InteractionResponseType, data: DiscordModal)","dev.kord.rest.json.request.ModalResponseCreateRequest.ModalResponseCreateRequest"]},{"name":"fun MultiPartWebhookExecuteRequest(request: WebhookExecuteRequest, files: List<NamedFile> = emptyList())","description":"dev.kord.rest.json.request.MultiPartWebhookExecuteRequest.MultiPartWebhookExecuteRequest","location":"rest/dev.kord.rest.json.request/-multi-part-webhook-execute-request/-multi-part-webhook-execute-request.html","searchKeys":["MultiPartWebhookExecuteRequest","fun MultiPartWebhookExecuteRequest(request: WebhookExecuteRequest, files: List<NamedFile> = emptyList())","dev.kord.rest.json.request.MultiPartWebhookExecuteRequest.MultiPartWebhookExecuteRequest"]},{"name":"fun MultipartFollowupMessageCreateRequest(request: FollowupMessageCreateRequest, files: List<NamedFile> = emptyList())","description":"dev.kord.rest.json.request.MultipartFollowupMessageCreateRequest.MultipartFollowupMessageCreateRequest","location":"rest/dev.kord.rest.json.request/-multipart-followup-message-create-request/-multipart-followup-message-create-request.html","searchKeys":["MultipartFollowupMessageCreateRequest","fun MultipartFollowupMessageCreateRequest(request: FollowupMessageCreateRequest, files: List<NamedFile> = emptyList())","dev.kord.rest.json.request.MultipartFollowupMessageCreateRequest.MultipartFollowupMessageCreateRequest"]},{"name":"fun MultipartFollowupMessageModifyRequest(request: FollowupMessageModifyRequest, files: Optional<List<NamedFile>> = Optional.Missing())","description":"dev.kord.rest.json.request.MultipartFollowupMessageModifyRequest.MultipartFollowupMessageModifyRequest","location":"rest/dev.kord.rest.json.request/-multipart-followup-message-modify-request/-multipart-followup-message-modify-request.html","searchKeys":["MultipartFollowupMessageModifyRequest","fun MultipartFollowupMessageModifyRequest(request: FollowupMessageModifyRequest, files: Optional<List<NamedFile>> = Optional.Missing())","dev.kord.rest.json.request.MultipartFollowupMessageModifyRequest.MultipartFollowupMessageModifyRequest"]},{"name":"fun MultipartGuildStickerCreateRequest(request: GuildStickerCreateRequest, file: NamedFile)","description":"dev.kord.rest.json.request.MultipartGuildStickerCreateRequest.MultipartGuildStickerCreateRequest","location":"rest/dev.kord.rest.json.request/-multipart-guild-sticker-create-request/-multipart-guild-sticker-create-request.html","searchKeys":["MultipartGuildStickerCreateRequest","fun MultipartGuildStickerCreateRequest(request: GuildStickerCreateRequest, file: NamedFile)","dev.kord.rest.json.request.MultipartGuildStickerCreateRequest.MultipartGuildStickerCreateRequest"]},{"name":"fun MultipartInteractionResponseCreateRequest(request: InteractionResponseCreateRequest, files: Optional<List<NamedFile>> = Optional.Missing())","description":"dev.kord.rest.json.request.MultipartInteractionResponseCreateRequest.MultipartInteractionResponseCreateRequest","location":"rest/dev.kord.rest.json.request/-multipart-interaction-response-create-request/-multipart-interaction-response-create-request.html","searchKeys":["MultipartInteractionResponseCreateRequest","fun MultipartInteractionResponseCreateRequest(request: InteractionResponseCreateRequest, files: Optional<List<NamedFile>> = Optional.Missing())","dev.kord.rest.json.request.MultipartInteractionResponseCreateRequest.MultipartInteractionResponseCreateRequest"]},{"name":"fun MultipartInteractionResponseModifyRequest(request: InteractionResponseModifyRequest, files: Optional<List<NamedFile>> = Optional.Missing())","description":"dev.kord.rest.json.request.MultipartInteractionResponseModifyRequest.MultipartInteractionResponseModifyRequest","location":"rest/dev.kord.rest.json.request/-multipart-interaction-response-modify-request/-multipart-interaction-response-modify-request.html","searchKeys":["MultipartInteractionResponseModifyRequest","fun MultipartInteractionResponseModifyRequest(request: InteractionResponseModifyRequest, files: Optional<List<NamedFile>> = Optional.Missing())","dev.kord.rest.json.request.MultipartInteractionResponseModifyRequest.MultipartInteractionResponseModifyRequest"]},{"name":"fun MultipartMessageCreateRequest(request: MessageCreateRequest, files: List<NamedFile> = emptyList())","description":"dev.kord.rest.json.request.MultipartMessageCreateRequest.MultipartMessageCreateRequest","location":"rest/dev.kord.rest.json.request/-multipart-message-create-request/-multipart-message-create-request.html","searchKeys":["MultipartMessageCreateRequest","fun MultipartMessageCreateRequest(request: MessageCreateRequest, files: List<NamedFile> = emptyList())","dev.kord.rest.json.request.MultipartMessageCreateRequest.MultipartMessageCreateRequest"]},{"name":"fun MultipartMessagePatchRequest(requests: MessageEditPatchRequest, files: Optional<List<NamedFile>> = Optional.Missing())","description":"dev.kord.rest.json.request.MultipartMessagePatchRequest.MultipartMessagePatchRequest","location":"rest/dev.kord.rest.json.request/-multipart-message-patch-request/-multipart-message-patch-request.html","searchKeys":["MultipartMessagePatchRequest","fun MultipartMessagePatchRequest(requests: MessageEditPatchRequest, files: Optional<List<NamedFile>> = Optional.Missing())","dev.kord.rest.json.request.MultipartMessagePatchRequest.MultipartMessagePatchRequest"]},{"name":"fun MultipartWebhookEditMessageRequest(request: WebhookEditMessageRequest, files: Optional<List<NamedFile>> = Optional.Missing())","description":"dev.kord.rest.json.request.MultipartWebhookEditMessageRequest.MultipartWebhookEditMessageRequest","location":"rest/dev.kord.rest.json.request/-multipart-webhook-edit-message-request/-multipart-webhook-edit-message-request.html","searchKeys":["MultipartWebhookEditMessageRequest","fun MultipartWebhookEditMessageRequest(request: WebhookEditMessageRequest, files: Optional<List<NamedFile>> = Optional.Missing())","dev.kord.rest.json.request.MultipartWebhookEditMessageRequest.MultipartWebhookEditMessageRequest"]},{"name":"fun NamedFile(name: String, contentProvider: ChannelProvider)","description":"dev.kord.rest.NamedFile.NamedFile","location":"rest/dev.kord.rest/-named-file/-named-file.html","searchKeys":["NamedFile","fun NamedFile(name: String, contentProvider: ChannelProvider)","dev.kord.rest.NamedFile.NamedFile"]},{"name":"fun NewsChannelCreateBuilder(name: String)","description":"dev.kord.rest.builder.channel.NewsChannelCreateBuilder.NewsChannelCreateBuilder","location":"rest/dev.kord.rest.builder.channel/-news-channel-create-builder/-news-channel-create-builder.html","searchKeys":["NewsChannelCreateBuilder","fun NewsChannelCreateBuilder(name: String)","dev.kord.rest.builder.channel.NewsChannelCreateBuilder.NewsChannelCreateBuilder"]},{"name":"fun NewsChannelModifyBuilder()","description":"dev.kord.rest.builder.channel.NewsChannelModifyBuilder.NewsChannelModifyBuilder","location":"rest/dev.kord.rest.builder.channel/-news-channel-modify-builder/-news-channel-modify-builder.html","searchKeys":["NewsChannelModifyBuilder","fun NewsChannelModifyBuilder()","dev.kord.rest.builder.channel.NewsChannelModifyBuilder.NewsChannelModifyBuilder"]},{"name":"fun NumberOptionBuilder(name: String, description: String)","description":"dev.kord.rest.builder.interaction.NumberOptionBuilder.NumberOptionBuilder","location":"rest/dev.kord.rest.builder.interaction/-number-option-builder/-number-option-builder.html","searchKeys":["NumberOptionBuilder","fun NumberOptionBuilder(name: String, description: String)","dev.kord.rest.builder.interaction.NumberOptionBuilder.NumberOptionBuilder"]},{"name":"fun ParallelRequestRateLimiter(clock: Clock = Clock.System)","description":"dev.kord.rest.ratelimit.ParallelRequestRateLimiter.ParallelRequestRateLimiter","location":"rest/dev.kord.rest.ratelimit/-parallel-request-rate-limiter/-parallel-request-rate-limiter.html","searchKeys":["ParallelRequestRateLimiter","fun ParallelRequestRateLimiter(clock: Clock = Clock.System)","dev.kord.rest.ratelimit.ParallelRequestRateLimiter.ParallelRequestRateLimiter"]},{"name":"fun PartialChannelResponse(name: String, type: ChannelType)","description":"dev.kord.rest.json.response.PartialChannelResponse.PartialChannelResponse","location":"rest/dev.kord.rest.json.response/-partial-channel-response/-partial-channel-response.html","searchKeys":["PartialChannelResponse","fun PartialChannelResponse(name: String, type: ChannelType)","dev.kord.rest.json.response.PartialChannelResponse.PartialChannelResponse"]},{"name":"fun PermissionOverwriteBuilder(type: OverwriteType, id: Snowflake)","description":"dev.kord.rest.builder.channel.PermissionOverwriteBuilder.PermissionOverwriteBuilder","location":"rest/dev.kord.rest.builder.channel/-permission-overwrite-builder/-permission-overwrite-builder.html","searchKeys":["PermissionOverwriteBuilder","fun PermissionOverwriteBuilder(type: OverwriteType, id: Snowflake)","dev.kord.rest.builder.channel.PermissionOverwriteBuilder.PermissionOverwriteBuilder"]},{"name":"fun PruneResponse(pruned: Int?)","description":"dev.kord.rest.json.response.PruneResponse.PruneResponse","location":"rest/dev.kord.rest.json.response/-prune-response/-prune-response.html","searchKeys":["PruneResponse","fun PruneResponse(pruned: Int?)","dev.kord.rest.json.response.PruneResponse.PruneResponse"]},{"name":"fun RateLimit(total: Total, remaining: Remaining)","description":"dev.kord.rest.ratelimit.RateLimit.RateLimit","location":"rest/dev.kord.rest.ratelimit/-rate-limit/-rate-limit.html","searchKeys":["RateLimit","fun RateLimit(total: Total, remaining: Remaining)","dev.kord.rest.ratelimit.RateLimit.RateLimit"]},{"name":"fun Remaining(value: Long)","description":"dev.kord.rest.ratelimit.Remaining.Remaining","location":"rest/dev.kord.rest.ratelimit/-remaining/-remaining.html","searchKeys":["Remaining","fun Remaining(value: Long)","dev.kord.rest.ratelimit.Remaining.Remaining"]},{"name":"fun Request<*, *>.logString(body: String): String","description":"dev.kord.rest.request.logString","location":"rest/dev.kord.rest.request/log-string.html","searchKeys":["logString","fun Request<*, *>.logString(body: String): String","dev.kord.rest.request.logString"]},{"name":"fun RequestResponse.Companion.from(response: HttpResponse, clock: Clock): RequestResponse","description":"dev.kord.rest.request.from","location":"rest/dev.kord.rest.request/from.html","searchKeys":["from","fun RequestResponse.Companion.from(response: HttpResponse, clock: Clock): RequestResponse","dev.kord.rest.request.from"]},{"name":"fun Reset(value: Instant)","description":"dev.kord.rest.ratelimit.Reset.Reset","location":"rest/dev.kord.rest.ratelimit/-reset/-reset.html","searchKeys":["Reset","fun Reset(value: Instant)","dev.kord.rest.ratelimit.Reset.Reset"]},{"name":"fun RestClient(requestHandler: RequestHandler)","description":"dev.kord.rest.service.RestClient.RestClient","location":"rest/dev.kord.rest.service/-rest-client/-rest-client.html","searchKeys":["RestClient","fun RestClient(requestHandler: RequestHandler)","dev.kord.rest.service.RestClient.RestClient"]},{"name":"fun RestClient(token: String): RestClient","description":"dev.kord.rest.service.RestClient","location":"rest/dev.kord.rest.service/-rest-client.html","searchKeys":["RestClient","fun RestClient(token: String): RestClient","dev.kord.rest.service.RestClient"]},{"name":"fun RestRequestException(request: Request<*, *>, status: HttpStatus, error: DiscordErrorResponse? = null)","description":"dev.kord.rest.request.RestRequestException.RestRequestException","location":"rest/dev.kord.rest.request/-rest-request-exception/-rest-request-exception.html","searchKeys":["RestRequestException","fun RestRequestException(request: Request<*, *>, status: HttpStatus, error: DiscordErrorResponse? = null)","dev.kord.rest.request.RestRequestException.RestRequestException"]},{"name":"fun RestService(requestHandler: RequestHandler)","description":"dev.kord.rest.service.RestService.RestService","location":"rest/dev.kord.rest.service/-rest-service/-rest-service.html","searchKeys":["RestService","fun RestService(requestHandler: RequestHandler)","dev.kord.rest.service.RestService.RestService"]},{"name":"fun RoleBuilder(name: String, description: String)","description":"dev.kord.rest.builder.interaction.RoleBuilder.RoleBuilder","location":"rest/dev.kord.rest.builder.interaction/-role-builder/-role-builder.html","searchKeys":["RoleBuilder","fun RoleBuilder(name: String, description: String)","dev.kord.rest.builder.interaction.RoleBuilder.RoleBuilder"]},{"name":"fun RoleCreateBuilder()","description":"dev.kord.rest.builder.role.RoleCreateBuilder.RoleCreateBuilder","location":"rest/dev.kord.rest.builder.role/-role-create-builder/-role-create-builder.html","searchKeys":["RoleCreateBuilder","fun RoleCreateBuilder()","dev.kord.rest.builder.role.RoleCreateBuilder.RoleCreateBuilder"]},{"name":"fun RoleModifyBuilder()","description":"dev.kord.rest.builder.role.RoleModifyBuilder.RoleModifyBuilder","location":"rest/dev.kord.rest.builder.role/-role-modify-builder/-role-modify-builder.html","searchKeys":["RoleModifyBuilder","fun RoleModifyBuilder()","dev.kord.rest.builder.role.RoleModifyBuilder.RoleModifyBuilder"]},{"name":"fun RolePositionsModifyBuilder()","description":"dev.kord.rest.builder.role.RolePositionsModifyBuilder.RolePositionsModifyBuilder","location":"rest/dev.kord.rest.builder.role/-role-positions-modify-builder/-role-positions-modify-builder.html","searchKeys":["RolePositionsModifyBuilder","fun RolePositionsModifyBuilder()","dev.kord.rest.builder.role.RolePositionsModifyBuilder.RolePositionsModifyBuilder"]},{"name":"fun RouteIdentifier(route: Route<*>)","description":"dev.kord.rest.request.RequestIdentifier.RouteIdentifier.RouteIdentifier","location":"rest/dev.kord.rest.request/-request-identifier/-route-identifier/-route-identifier.html","searchKeys":["RouteIdentifier","fun RouteIdentifier(route: Route<*>)","dev.kord.rest.request.RequestIdentifier.RouteIdentifier.RouteIdentifier"]},{"name":"fun ScheduledEventCreateBuilder(name: String, privacyLevel: GuildScheduledEventPrivacyLevel, scheduledStartTime: Instant, entityType: ScheduledEntityType)","description":"dev.kord.rest.builder.guild.ScheduledEventCreateBuilder.ScheduledEventCreateBuilder","location":"rest/dev.kord.rest.builder.guild/-scheduled-event-create-builder/-scheduled-event-create-builder.html","searchKeys":["ScheduledEventCreateBuilder","fun ScheduledEventCreateBuilder(name: String, privacyLevel: GuildScheduledEventPrivacyLevel, scheduledStartTime: Instant, entityType: ScheduledEntityType)","dev.kord.rest.builder.guild.ScheduledEventCreateBuilder.ScheduledEventCreateBuilder"]},{"name":"fun ScheduledEventModifyBuilder()","description":"dev.kord.rest.builder.scheduled_events.ScheduledEventModifyBuilder.ScheduledEventModifyBuilder","location":"rest/dev.kord.rest.builder.scheduled_events/-scheduled-event-modify-builder/-scheduled-event-modify-builder.html","searchKeys":["ScheduledEventModifyBuilder","fun ScheduledEventModifyBuilder()","dev.kord.rest.builder.scheduled_events.ScheduledEventModifyBuilder.ScheduledEventModifyBuilder"]},{"name":"fun ScheduledEventModifyRequest(channelId: OptionalSnowflake? = OptionalSnowflake.Missing, entityMetadata: Optional<GuildScheduledEventEntityMetadata?> = Optional.Missing(), name: Optional<String> = Optional.Missing(), privacyLevel: Optional<GuildScheduledEventPrivacyLevel> = Optional.Missing(), scheduledStartTime: Optional<Instant> = Optional.Missing(), scheduledEndTime: Optional<Instant> = Optional.Missing(), description: Optional<String?> = Optional.Missing(), entityType: Optional<ScheduledEntityType> = Optional.Missing(), status: Optional<GuildScheduledEventStatus> = Optional.Missing(), image: Optional<String> = Optional.Missing())","description":"dev.kord.rest.json.request.ScheduledEventModifyRequest.ScheduledEventModifyRequest","location":"rest/dev.kord.rest.json.request/-scheduled-event-modify-request/-scheduled-event-modify-request.html","searchKeys":["ScheduledEventModifyRequest","fun ScheduledEventModifyRequest(channelId: OptionalSnowflake? = OptionalSnowflake.Missing, entityMetadata: Optional<GuildScheduledEventEntityMetadata?> = Optional.Missing(), name: Optional<String> = Optional.Missing(), privacyLevel: Optional<GuildScheduledEventPrivacyLevel> = Optional.Missing(), scheduledStartTime: Optional<Instant> = Optional.Missing(), scheduledEndTime: Optional<Instant> = Optional.Missing(), description: Optional<String?> = Optional.Missing(), entityType: Optional<ScheduledEntityType> = Optional.Missing(), status: Optional<GuildScheduledEventStatus> = Optional.Missing(), image: Optional<String> = Optional.Missing())","dev.kord.rest.json.request.ScheduledEventModifyRequest.ScheduledEventModifyRequest"]},{"name":"fun SelectMenuBuilder(customId: String)","description":"dev.kord.rest.builder.component.SelectMenuBuilder.SelectMenuBuilder","location":"rest/dev.kord.rest.builder.component/-select-menu-builder/-select-menu-builder.html","searchKeys":["SelectMenuBuilder","fun SelectMenuBuilder(customId: String)","dev.kord.rest.builder.component.SelectMenuBuilder.SelectMenuBuilder"]},{"name":"fun SelectOptionBuilder(label: String, value: String)","description":"dev.kord.rest.builder.component.SelectOptionBuilder.SelectOptionBuilder","location":"rest/dev.kord.rest.builder.component/-select-option-builder/-select-option-builder.html","searchKeys":["SelectOptionBuilder","fun SelectOptionBuilder(label: String, value: String)","dev.kord.rest.builder.component.SelectOptionBuilder.SelectOptionBuilder"]},{"name":"fun SendAlertMessageAutoModerationActionBuilder(channelId: Snowflake)","description":"dev.kord.rest.builder.automoderation.SendAlertMessageAutoModerationActionBuilder.SendAlertMessageAutoModerationActionBuilder","location":"rest/dev.kord.rest.builder.automoderation/-send-alert-message-auto-moderation-action-builder/-send-alert-message-auto-moderation-action-builder.html","searchKeys":["SendAlertMessageAutoModerationActionBuilder","fun SendAlertMessageAutoModerationActionBuilder(channelId: Snowflake)","dev.kord.rest.builder.automoderation.SendAlertMessageAutoModerationActionBuilder.SendAlertMessageAutoModerationActionBuilder"]},{"name":"fun SessionStartLimitResponse(total: Int, remaining: Int, resetAfter: DurationInMilliseconds, maxConcurrency: Int)","description":"dev.kord.rest.json.response.SessionStartLimitResponse.SessionStartLimitResponse","location":"rest/dev.kord.rest.json.response/-session-start-limit-response/-session-start-limit-response.html","searchKeys":["SessionStartLimitResponse","fun SessionStartLimitResponse(total: Int, remaining: Int, resetAfter: DurationInMilliseconds, maxConcurrency: Int)","dev.kord.rest.json.response.SessionStartLimitResponse.SessionStartLimitResponse"]},{"name":"fun SpamAutoModerationRuleCreateBuilder(name: String, eventType: AutoModerationRuleEventType)","description":"dev.kord.rest.builder.automoderation.SpamAutoModerationRuleCreateBuilder.SpamAutoModerationRuleCreateBuilder","location":"rest/dev.kord.rest.builder.automoderation/-spam-auto-moderation-rule-create-builder/-spam-auto-moderation-rule-create-builder.html","searchKeys":["SpamAutoModerationRuleCreateBuilder","fun SpamAutoModerationRuleCreateBuilder(name: String, eventType: AutoModerationRuleEventType)","dev.kord.rest.builder.automoderation.SpamAutoModerationRuleCreateBuilder.SpamAutoModerationRuleCreateBuilder"]},{"name":"fun SpamAutoModerationRuleModifyBuilder()","description":"dev.kord.rest.builder.automoderation.SpamAutoModerationRuleModifyBuilder.SpamAutoModerationRuleModifyBuilder","location":"rest/dev.kord.rest.builder.automoderation/-spam-auto-moderation-rule-modify-builder/-spam-auto-moderation-rule-modify-builder.html","searchKeys":["SpamAutoModerationRuleModifyBuilder","fun SpamAutoModerationRuleModifyBuilder()","dev.kord.rest.builder.automoderation.SpamAutoModerationRuleModifyBuilder.SpamAutoModerationRuleModifyBuilder"]},{"name":"fun StackTraceRecoveringKtorRequestHandler(delegate: KtorRequestHandler)","description":"dev.kord.rest.request.StackTraceRecoveringKtorRequestHandler.StackTraceRecoveringKtorRequestHandler","location":"rest/dev.kord.rest.request/-stack-trace-recovering-ktor-request-handler/-stack-trace-recovering-ktor-request-handler.html","searchKeys":["StackTraceRecoveringKtorRequestHandler","fun StackTraceRecoveringKtorRequestHandler(delegate: KtorRequestHandler)","dev.kord.rest.request.StackTraceRecoveringKtorRequestHandler.StackTraceRecoveringKtorRequestHandler"]},{"name":"fun StageInstanceCreateBuilder(channelId: Snowflake, topic: String)","description":"dev.kord.rest.builder.stage.StageInstanceCreateBuilder.StageInstanceCreateBuilder","location":"rest/dev.kord.rest.builder.stage/-stage-instance-create-builder/-stage-instance-create-builder.html","searchKeys":["StageInstanceCreateBuilder","fun StageInstanceCreateBuilder(channelId: Snowflake, topic: String)","dev.kord.rest.builder.stage.StageInstanceCreateBuilder.StageInstanceCreateBuilder"]},{"name":"fun StageInstanceCreateRequest(channelId: Snowflake, topic: String, privacyLevel: Optional<StageInstancePrivacyLevel> = Optional.Missing(), sendStartNotification: OptionalBoolean = OptionalBoolean.Missing)","description":"dev.kord.rest.json.request.StageInstanceCreateRequest.StageInstanceCreateRequest","location":"rest/dev.kord.rest.json.request/-stage-instance-create-request/-stage-instance-create-request.html","searchKeys":["StageInstanceCreateRequest","fun StageInstanceCreateRequest(channelId: Snowflake, topic: String, privacyLevel: Optional<StageInstancePrivacyLevel> = Optional.Missing(), sendStartNotification: OptionalBoolean = OptionalBoolean.Missing)","dev.kord.rest.json.request.StageInstanceCreateRequest.StageInstanceCreateRequest"]},{"name":"fun StageInstanceModifyBuilder()","description":"dev.kord.rest.builder.stage.StageInstanceModifyBuilder.StageInstanceModifyBuilder","location":"rest/dev.kord.rest.builder.stage/-stage-instance-modify-builder/-stage-instance-modify-builder.html","searchKeys":["StageInstanceModifyBuilder","fun StageInstanceModifyBuilder()","dev.kord.rest.builder.stage.StageInstanceModifyBuilder.StageInstanceModifyBuilder"]},{"name":"fun StageInstanceModifyRequest(topic: Optional<String> = Optional.Missing(), privacyLevel: Optional<StageInstancePrivacyLevel> = Optional.Missing())","description":"dev.kord.rest.json.request.StageInstanceModifyRequest.StageInstanceModifyRequest","location":"rest/dev.kord.rest.json.request/-stage-instance-modify-request/-stage-instance-modify-request.html","searchKeys":["StageInstanceModifyRequest","fun StageInstanceModifyRequest(topic: Optional<String> = Optional.Missing(), privacyLevel: Optional<StageInstancePrivacyLevel> = Optional.Missing())","dev.kord.rest.json.request.StageInstanceModifyRequest.StageInstanceModifyRequest"]},{"name":"fun StageInstanceService(requestHandler: RequestHandler)","description":"dev.kord.rest.service.StageInstanceService.StageInstanceService","location":"rest/dev.kord.rest.service/-stage-instance-service/-stage-instance-service.html","searchKeys":["StageInstanceService","fun StageInstanceService(requestHandler: RequestHandler)","dev.kord.rest.service.StageInstanceService.StageInstanceService"]},{"name":"fun StageVoiceChannelModifyBuilder()","description":"dev.kord.rest.builder.channel.StageVoiceChannelModifyBuilder.StageVoiceChannelModifyBuilder","location":"rest/dev.kord.rest.builder.channel/-stage-voice-channel-modify-builder/-stage-voice-channel-modify-builder.html","searchKeys":["StageVoiceChannelModifyBuilder","fun StageVoiceChannelModifyBuilder()","dev.kord.rest.builder.channel.StageVoiceChannelModifyBuilder.StageVoiceChannelModifyBuilder"]},{"name":"fun StartThreadBuilder(name: String, autoArchiveDuration: ArchiveDuration, type: ChannelType)","description":"dev.kord.rest.builder.channel.thread.StartThreadBuilder.StartThreadBuilder","location":"rest/dev.kord.rest.builder.channel.thread/-start-thread-builder/-start-thread-builder.html","searchKeys":["StartThreadBuilder","fun StartThreadBuilder(name: String, autoArchiveDuration: ArchiveDuration, type: ChannelType)","dev.kord.rest.builder.channel.thread.StartThreadBuilder.StartThreadBuilder"]},{"name":"fun StartThreadRequest(name: String, autoArchiveDuration: ArchiveDuration, type: Optional<ChannelType> = Optional.Missing(), invitable: OptionalBoolean = OptionalBoolean.Missing)","description":"dev.kord.rest.json.request.StartThreadRequest.StartThreadRequest","location":"rest/dev.kord.rest.json.request/-start-thread-request/-start-thread-request.html","searchKeys":["StartThreadRequest","fun StartThreadRequest(name: String, autoArchiveDuration: ArchiveDuration, type: Optional<ChannelType> = Optional.Missing(), invitable: OptionalBoolean = OptionalBoolean.Missing)","dev.kord.rest.json.request.StartThreadRequest.StartThreadRequest"]},{"name":"fun StartThreadWithMessageBuilder(name: String, autoArchiveDuration: ArchiveDuration)","description":"dev.kord.rest.builder.channel.thread.StartThreadWithMessageBuilder.StartThreadWithMessageBuilder","location":"rest/dev.kord.rest.builder.channel.thread/-start-thread-with-message-builder/-start-thread-with-message-builder.html","searchKeys":["StartThreadWithMessageBuilder","fun StartThreadWithMessageBuilder(name: String, autoArchiveDuration: ArchiveDuration)","dev.kord.rest.builder.channel.thread.StartThreadWithMessageBuilder.StartThreadWithMessageBuilder"]},{"name":"fun StickerModifyBuilder()","description":"dev.kord.rest.builder.guild.StickerModifyBuilder.StickerModifyBuilder","location":"rest/dev.kord.rest.builder.guild/-sticker-modify-builder/-sticker-modify-builder.html","searchKeys":["StickerModifyBuilder","fun StickerModifyBuilder()","dev.kord.rest.builder.guild.StickerModifyBuilder.StickerModifyBuilder"]},{"name":"fun StickerService(requestHandler: RequestHandler)","description":"dev.kord.rest.service.StickerService.StickerService","location":"rest/dev.kord.rest.service/-sticker-service/-sticker-service.html","searchKeys":["StickerService","fun StickerService(requestHandler: RequestHandler)","dev.kord.rest.service.StickerService.StickerService"]},{"name":"fun StringChoiceBuilder(name: String, description: String)","description":"dev.kord.rest.builder.interaction.StringChoiceBuilder.StringChoiceBuilder","location":"rest/dev.kord.rest.builder.interaction/-string-choice-builder/-string-choice-builder.html","searchKeys":["StringChoiceBuilder","fun StringChoiceBuilder(name: String, description: String)","dev.kord.rest.builder.interaction.StringChoiceBuilder.StringChoiceBuilder"]},{"name":"fun SubCommandBuilder(name: String, description: String)","description":"dev.kord.rest.builder.interaction.SubCommandBuilder.SubCommandBuilder","location":"rest/dev.kord.rest.builder.interaction/-sub-command-builder/-sub-command-builder.html","searchKeys":["SubCommandBuilder","fun SubCommandBuilder(name: String, description: String)","dev.kord.rest.builder.interaction.SubCommandBuilder.SubCommandBuilder"]},{"name":"fun TemplateService(requestHandler: RequestHandler)","description":"dev.kord.rest.service.TemplateService.TemplateService","location":"rest/dev.kord.rest.service/-template-service/-template-service.html","searchKeys":["TemplateService","fun TemplateService(requestHandler: RequestHandler)","dev.kord.rest.service.TemplateService.TemplateService"]},{"name":"fun TextChannelCreateBuilder(name: String)","description":"dev.kord.rest.builder.channel.TextChannelCreateBuilder.TextChannelCreateBuilder","location":"rest/dev.kord.rest.builder.channel/-text-channel-create-builder/-text-channel-create-builder.html","searchKeys":["TextChannelCreateBuilder","fun TextChannelCreateBuilder(name: String)","dev.kord.rest.builder.channel.TextChannelCreateBuilder.TextChannelCreateBuilder"]},{"name":"fun TextChannelModifyBuilder()","description":"dev.kord.rest.builder.channel.TextChannelModifyBuilder.TextChannelModifyBuilder","location":"rest/dev.kord.rest.builder.channel/-text-channel-modify-builder/-text-channel-modify-builder.html","searchKeys":["TextChannelModifyBuilder","fun TextChannelModifyBuilder()","dev.kord.rest.builder.channel.TextChannelModifyBuilder.TextChannelModifyBuilder"]},{"name":"fun TextInputBuilder(style: TextInputStyle, customId: String, label: String)","description":"dev.kord.rest.builder.component.TextInputBuilder.TextInputBuilder","location":"rest/dev.kord.rest.builder.component/-text-input-builder/-text-input-builder.html","searchKeys":["TextInputBuilder","fun TextInputBuilder(style: TextInputStyle, customId: String, label: String)","dev.kord.rest.builder.component.TextInputBuilder.TextInputBuilder"]},{"name":"fun ThreadModifyBuilder()","description":"dev.kord.rest.builder.channel.thread.ThreadModifyBuilder.ThreadModifyBuilder","location":"rest/dev.kord.rest.builder.channel.thread/-thread-modify-builder/-thread-modify-builder.html","searchKeys":["ThreadModifyBuilder","fun ThreadModifyBuilder()","dev.kord.rest.builder.channel.thread.ThreadModifyBuilder.ThreadModifyBuilder"]},{"name":"fun Thumbnail()","description":"dev.kord.rest.builder.message.EmbedBuilder.Thumbnail.Thumbnail","location":"rest/dev.kord.rest.builder.message/-embed-builder/-thumbnail/-thumbnail.html","searchKeys":["Thumbnail","fun Thumbnail()","dev.kord.rest.builder.message.EmbedBuilder.Thumbnail.Thumbnail"]},{"name":"fun TimeoutAutoModerationActionBuilder(duration: Duration)","description":"dev.kord.rest.builder.automoderation.TimeoutAutoModerationActionBuilder.TimeoutAutoModerationActionBuilder","location":"rest/dev.kord.rest.builder.automoderation/-timeout-auto-moderation-action-builder/-timeout-auto-moderation-action-builder.html","searchKeys":["TimeoutAutoModerationActionBuilder","fun TimeoutAutoModerationActionBuilder(duration: Duration)","dev.kord.rest.builder.automoderation.TimeoutAutoModerationActionBuilder.TimeoutAutoModerationActionBuilder"]},{"name":"fun Total(value: Long)","description":"dev.kord.rest.ratelimit.Total.Total","location":"rest/dev.kord.rest.ratelimit/-total/-total.html","searchKeys":["Total","fun Total(value: Long)","dev.kord.rest.ratelimit.Total.Total"]},{"name":"fun UntypedAutoModerationRuleModifyBuilder()","description":"dev.kord.rest.builder.automoderation.UntypedAutoModerationRuleModifyBuilder.UntypedAutoModerationRuleModifyBuilder","location":"rest/dev.kord.rest.builder.automoderation/-untyped-auto-moderation-rule-modify-builder/-untyped-auto-moderation-rule-modify-builder.html","searchKeys":["UntypedAutoModerationRuleModifyBuilder","fun UntypedAutoModerationRuleModifyBuilder()","dev.kord.rest.builder.automoderation.UntypedAutoModerationRuleModifyBuilder.UntypedAutoModerationRuleModifyBuilder"]},{"name":"fun UpdateMessageInteractionResponseCreateBuilder()","description":"dev.kord.rest.builder.message.create.UpdateMessageInteractionResponseCreateBuilder.UpdateMessageInteractionResponseCreateBuilder","location":"rest/dev.kord.rest.builder.message.create/-update-message-interaction-response-create-builder/-update-message-interaction-response-create-builder.html","searchKeys":["UpdateMessageInteractionResponseCreateBuilder","fun UpdateMessageInteractionResponseCreateBuilder()","dev.kord.rest.builder.message.create.UpdateMessageInteractionResponseCreateBuilder.UpdateMessageInteractionResponseCreateBuilder"]},{"name":"fun UrlFormatBuilder()","description":"dev.kord.rest.route.CdnUrl.UrlFormatBuilder.UrlFormatBuilder","location":"rest/dev.kord.rest.route/-cdn-url/-url-format-builder/-url-format-builder.html","searchKeys":["UrlFormatBuilder","fun UrlFormatBuilder()","dev.kord.rest.route.CdnUrl.UrlFormatBuilder.UrlFormatBuilder"]},{"name":"fun UserAddDMRequest(token: String, nick: String)","description":"dev.kord.rest.json.request.UserAddDMRequest.UserAddDMRequest","location":"rest/dev.kord.rest.json.request/-user-add-d-m-request/-user-add-d-m-request.html","searchKeys":["UserAddDMRequest","fun UserAddDMRequest(token: String, nick: String)","dev.kord.rest.json.request.UserAddDMRequest.UserAddDMRequest"]},{"name":"fun UserBuilder(name: String, description: String)","description":"dev.kord.rest.builder.interaction.UserBuilder.UserBuilder","location":"rest/dev.kord.rest.builder.interaction/-user-builder/-user-builder.html","searchKeys":["UserBuilder","fun UserBuilder(name: String, description: String)","dev.kord.rest.builder.interaction.UserBuilder.UserBuilder"]},{"name":"fun UserMessageCreateBuilder()","description":"dev.kord.rest.builder.message.create.UserMessageCreateBuilder.UserMessageCreateBuilder","location":"rest/dev.kord.rest.builder.message.create/-user-message-create-builder/-user-message-create-builder.html","searchKeys":["UserMessageCreateBuilder","fun UserMessageCreateBuilder()","dev.kord.rest.builder.message.create.UserMessageCreateBuilder.UserMessageCreateBuilder"]},{"name":"fun UserMessageModifyBuilder()","description":"dev.kord.rest.builder.message.modify.UserMessageModifyBuilder.UserMessageModifyBuilder","location":"rest/dev.kord.rest.builder.message.modify/-user-message-modify-builder/-user-message-modify-builder.html","searchKeys":["UserMessageModifyBuilder","fun UserMessageModifyBuilder()","dev.kord.rest.builder.message.modify.UserMessageModifyBuilder.UserMessageModifyBuilder"]},{"name":"fun UserService(requestHandler: RequestHandler)","description":"dev.kord.rest.service.UserService.UserService","location":"rest/dev.kord.rest.service/-user-service/-user-service.html","searchKeys":["UserService","fun UserService(requestHandler: RequestHandler)","dev.kord.rest.service.UserService.UserService"]},{"name":"fun VoiceChannelCreateBuilder(name: String)","description":"dev.kord.rest.builder.channel.VoiceChannelCreateBuilder.VoiceChannelCreateBuilder","location":"rest/dev.kord.rest.builder.channel/-voice-channel-create-builder/-voice-channel-create-builder.html","searchKeys":["VoiceChannelCreateBuilder","fun VoiceChannelCreateBuilder(name: String)","dev.kord.rest.builder.channel.VoiceChannelCreateBuilder.VoiceChannelCreateBuilder"]},{"name":"fun VoiceChannelModifyBuilder()","description":"dev.kord.rest.builder.channel.VoiceChannelModifyBuilder.VoiceChannelModifyBuilder","location":"rest/dev.kord.rest.builder.channel/-voice-channel-modify-builder/-voice-channel-modify-builder.html","searchKeys":["VoiceChannelModifyBuilder","fun VoiceChannelModifyBuilder()","dev.kord.rest.builder.channel.VoiceChannelModifyBuilder.VoiceChannelModifyBuilder"]},{"name":"fun VoiceService(requestHandler: RequestHandler)","description":"dev.kord.rest.service.VoiceService.VoiceService","location":"rest/dev.kord.rest.service/-voice-service/-voice-service.html","searchKeys":["VoiceService","fun VoiceService(requestHandler: RequestHandler)","dev.kord.rest.service.VoiceService.VoiceService"]},{"name":"fun VoiceStateModifyBuilder(channelId: Snowflake)","description":"dev.kord.rest.builder.guild.VoiceStateModifyBuilder.VoiceStateModifyBuilder","location":"rest/dev.kord.rest.builder.guild/-voice-state-modify-builder/-voice-state-modify-builder.html","searchKeys":["VoiceStateModifyBuilder","fun VoiceStateModifyBuilder(channelId: Snowflake)","dev.kord.rest.builder.guild.VoiceStateModifyBuilder.VoiceStateModifyBuilder"]},{"name":"fun VoiceStateModifyRequest(channelId: Snowflake, suppress: OptionalBoolean = OptionalBoolean.Missing)","description":"dev.kord.rest.json.request.VoiceStateModifyRequest.VoiceStateModifyRequest","location":"rest/dev.kord.rest.json.request/-voice-state-modify-request/-voice-state-modify-request.html","searchKeys":["VoiceStateModifyRequest","fun VoiceStateModifyRequest(channelId: Snowflake, suppress: OptionalBoolean = OptionalBoolean.Missing)","dev.kord.rest.json.request.VoiceStateModifyRequest.VoiceStateModifyRequest"]},{"name":"fun WebhookCreateBuilder(name: String)","description":"dev.kord.rest.builder.webhook.WebhookCreateBuilder.WebhookCreateBuilder","location":"rest/dev.kord.rest.builder.webhook/-webhook-create-builder/-webhook-create-builder.html","searchKeys":["WebhookCreateBuilder","fun WebhookCreateBuilder(name: String)","dev.kord.rest.builder.webhook.WebhookCreateBuilder.WebhookCreateBuilder"]},{"name":"fun WebhookCreateRequest(name: String, avatar: Optional<String> = Optional.Missing())","description":"dev.kord.rest.json.request.WebhookCreateRequest.WebhookCreateRequest","location":"rest/dev.kord.rest.json.request/-webhook-create-request/-webhook-create-request.html","searchKeys":["WebhookCreateRequest","fun WebhookCreateRequest(name: String, avatar: Optional<String> = Optional.Missing())","dev.kord.rest.json.request.WebhookCreateRequest.WebhookCreateRequest"]},{"name":"fun WebhookEditMessageRequest(content: Optional<String?> = Optional.Missing(), embeds: Optional<List<EmbedRequest>> = Optional.Missing(), allowedMentions: Optional<AllowedMentions> = Optional.Missing(), components: Optional<List<DiscordComponent>> = Optional.Missing(), attachments: Optional<MutableList<DiscordAttachment>> = Optional.Missing())","description":"dev.kord.rest.json.request.WebhookEditMessageRequest.WebhookEditMessageRequest","location":"rest/dev.kord.rest.json.request/-webhook-edit-message-request/-webhook-edit-message-request.html","searchKeys":["WebhookEditMessageRequest","fun WebhookEditMessageRequest(content: Optional<String?> = Optional.Missing(), embeds: Optional<List<EmbedRequest>> = Optional.Missing(), allowedMentions: Optional<AllowedMentions> = Optional.Missing(), components: Optional<List<DiscordComponent>> = Optional.Missing(), attachments: Optional<MutableList<DiscordAttachment>> = Optional.Missing())","dev.kord.rest.json.request.WebhookEditMessageRequest.WebhookEditMessageRequest"]},{"name":"fun WebhookExecuteRequest(content: Optional<String> = Optional.Missing(), username: Optional<String> = Optional.Missing(), avatar: Optional<String> = Optional.Missing(), tts: OptionalBoolean = OptionalBoolean.Missing, embeds: Optional<List<EmbedRequest>> = Optional.Missing(), allowedMentions: Optional<AllowedMentions> = Optional.Missing(), components: Optional<List<DiscordComponent>> = Optional.Missing())","description":"dev.kord.rest.json.request.WebhookExecuteRequest.WebhookExecuteRequest","location":"rest/dev.kord.rest.json.request/-webhook-execute-request/-webhook-execute-request.html","searchKeys":["WebhookExecuteRequest","fun WebhookExecuteRequest(content: Optional<String> = Optional.Missing(), username: Optional<String> = Optional.Missing(), avatar: Optional<String> = Optional.Missing(), tts: OptionalBoolean = OptionalBoolean.Missing, embeds: Optional<List<EmbedRequest>> = Optional.Missing(), allowedMentions: Optional<AllowedMentions> = Optional.Missing(), components: Optional<List<DiscordComponent>> = Optional.Missing())","dev.kord.rest.json.request.WebhookExecuteRequest.WebhookExecuteRequest"]},{"name":"fun WebhookMessageCreateBuilder()","description":"dev.kord.rest.builder.message.create.WebhookMessageCreateBuilder.WebhookMessageCreateBuilder","location":"rest/dev.kord.rest.builder.message.create/-webhook-message-create-builder/-webhook-message-create-builder.html","searchKeys":["WebhookMessageCreateBuilder","fun WebhookMessageCreateBuilder()","dev.kord.rest.builder.message.create.WebhookMessageCreateBuilder.WebhookMessageCreateBuilder"]},{"name":"fun WebhookMessageModifyBuilder()","description":"dev.kord.rest.builder.message.modify.WebhookMessageModifyBuilder.WebhookMessageModifyBuilder","location":"rest/dev.kord.rest.builder.message.modify/-webhook-message-modify-builder/-webhook-message-modify-builder.html","searchKeys":["WebhookMessageModifyBuilder","fun WebhookMessageModifyBuilder()","dev.kord.rest.builder.message.modify.WebhookMessageModifyBuilder.WebhookMessageModifyBuilder"]},{"name":"fun WebhookModifyBuilder()","description":"dev.kord.rest.builder.webhook.WebhookModifyBuilder.WebhookModifyBuilder","location":"rest/dev.kord.rest.builder.webhook/-webhook-modify-builder/-webhook-modify-builder.html","searchKeys":["WebhookModifyBuilder","fun WebhookModifyBuilder()","dev.kord.rest.builder.webhook.WebhookModifyBuilder.WebhookModifyBuilder"]},{"name":"fun WebhookModifyRequest(name: Optional<String> = Optional.Missing(), avatar: Optional<String?> = Optional.Missing(), channelId: OptionalSnowflake = OptionalSnowflake.Missing)","description":"dev.kord.rest.json.request.WebhookModifyRequest.WebhookModifyRequest","location":"rest/dev.kord.rest.json.request/-webhook-modify-request/-webhook-modify-request.html","searchKeys":["WebhookModifyRequest","fun WebhookModifyRequest(name: Optional<String> = Optional.Missing(), avatar: Optional<String?> = Optional.Missing(), channelId: OptionalSnowflake = OptionalSnowflake.Missing)","dev.kord.rest.json.request.WebhookModifyRequest.WebhookModifyRequest"]},{"name":"fun WebhookService(requestHandler: RequestHandler)","description":"dev.kord.rest.service.WebhookService.WebhookService","location":"rest/dev.kord.rest.service/-webhook-service/-webhook-service.html","searchKeys":["WebhookService","fun WebhookService(requestHandler: RequestHandler)","dev.kord.rest.service.WebhookService.WebhookService"]},{"name":"fun WelcomeScreenChannelBuilder(channelId: Snowflake, description: String, emojiId: Snowflake?, emojiName: String?)","description":"dev.kord.rest.builder.guild.WelcomeScreenChannelBuilder.WelcomeScreenChannelBuilder","location":"rest/dev.kord.rest.builder.guild/-welcome-screen-channel-builder/-welcome-screen-channel-builder.html","searchKeys":["WelcomeScreenChannelBuilder","fun WelcomeScreenChannelBuilder(channelId: Snowflake, description: String, emojiId: Snowflake?, emojiName: String?)","dev.kord.rest.builder.guild.WelcomeScreenChannelBuilder.WelcomeScreenChannelBuilder"]},{"name":"fun WelcomeScreenModifyBuilder()","description":"dev.kord.rest.builder.guild.WelcomeScreenModifyBuilder.WelcomeScreenModifyBuilder","location":"rest/dev.kord.rest.builder.guild/-welcome-screen-modify-builder/-welcome-screen-modify-builder.html","searchKeys":["WelcomeScreenModifyBuilder","fun WelcomeScreenModifyBuilder()","dev.kord.rest.builder.guild.WelcomeScreenModifyBuilder.WelcomeScreenModifyBuilder"]},{"name":"fun add(type: AllowedMentionType)","description":"dev.kord.rest.builder.message.AllowedMentionsBuilder.add","location":"rest/dev.kord.rest.builder.message/-allowed-mentions-builder/add.html","searchKeys":["add","fun add(type: AllowedMentionType)","dev.kord.rest.builder.message.AllowedMentionsBuilder.add"]},{"name":"fun build(): AllowedMentions","description":"dev.kord.rest.builder.message.AllowedMentionsBuilder.build","location":"rest/dev.kord.rest.builder.message/-allowed-mentions-builder/build.html","searchKeys":["build","fun build(): AllowedMentions","dev.kord.rest.builder.message.AllowedMentionsBuilder.build"]},{"name":"fun build(): DiscordSelectOption","description":"dev.kord.rest.builder.component.SelectOptionBuilder.build","location":"rest/dev.kord.rest.builder.component/-select-option-builder/build.html","searchKeys":["build","fun build(): DiscordSelectOption","dev.kord.rest.builder.component.SelectOptionBuilder.build"]},{"name":"fun build(): List<ApplicationCommandCreateRequest>","description":"dev.kord.rest.builder.interaction.MultiApplicationCommandBuilder.build","location":"rest/dev.kord.rest.builder.interaction/-multi-application-command-builder/build.html","searchKeys":["build","fun build(): List<ApplicationCommandCreateRequest>","dev.kord.rest.builder.interaction.MultiApplicationCommandBuilder.build"]},{"name":"fun build(): Request<*, T>","description":"dev.kord.rest.request.RequestBuilder.build","location":"rest/dev.kord.rest.request/-request-builder/build.html","searchKeys":["build","fun build(): Request<*, T>","dev.kord.rest.request.RequestBuilder.build"]},{"name":"fun defaultAvatar(discriminator: Int): CdnUrl","description":"dev.kord.rest.route.DiscordCdn.defaultAvatar","location":"rest/dev.kord.rest.route/-discord-cdn/default-avatar.html","searchKeys":["defaultAvatar","fun defaultAvatar(discriminator: Int): CdnUrl","dev.kord.rest.route.DiscordCdn.defaultAvatar"]},{"name":"fun emoji(emojiId: Snowflake): CdnUrl","description":"dev.kord.rest.route.DiscordCdn.emoji","location":"rest/dev.kord.rest.route/-discord-cdn/emoji.html","searchKeys":["emoji","fun emoji(emojiId: Snowflake): CdnUrl","dev.kord.rest.route.DiscordCdn.emoji"]},{"name":"fun file(file: NamedFile)","description":"dev.kord.rest.request.RequestBuilder.file","location":"rest/dev.kord.rest.request/-request-builder/file.html","searchKeys":["file","fun file(file: NamedFile)","dev.kord.rest.request.RequestBuilder.file"]},{"name":"fun file(name: String, contentProvider: ChannelProvider)","description":"dev.kord.rest.request.RequestBuilder.file","location":"rest/dev.kord.rest.request/-request-builder/file.html","searchKeys":["file","fun file(name: String, contentProvider: ChannelProvider)","dev.kord.rest.request.RequestBuilder.file"]},{"name":"fun file(path: Path)","description":"dev.kord.rest.request.RequestBuilder.file","location":"rest/dev.kord.rest.request/-request-builder/file.html","searchKeys":["file","fun file(path: Path)","dev.kord.rest.request.RequestBuilder.file"]},{"name":"fun fromContentType(type: String): Image.Format","description":"dev.kord.rest.Image.Format.Companion.fromContentType","location":"rest/dev.kord.rest/-image/-format/-companion/from-content-type.html","searchKeys":["fromContentType","fun fromContentType(type: String): Image.Format","dev.kord.rest.Image.Format.Companion.fromContentType"]},{"name":"fun isSupported(fileName: String): Boolean","description":"dev.kord.rest.Image.Format.Companion.isSupported","location":"rest/dev.kord.rest/-image/-format/-companion/is-supported.html","searchKeys":["isSupported","fun isSupported(fileName: String): Boolean","dev.kord.rest.Image.Format.Companion.isSupported"]},{"name":"fun memberAvatar(guildId: Snowflake, userId: Snowflake, hash: String): CdnUrl","description":"dev.kord.rest.route.DiscordCdn.memberAvatar","location":"rest/dev.kord.rest.route/-discord-cdn/member-avatar.html","searchKeys":["memberAvatar","fun memberAvatar(guildId: Snowflake, userId: Snowflake, hash: String): CdnUrl","dev.kord.rest.route.DiscordCdn.memberAvatar"]},{"name":"fun move(pair: Pair<Snowflake, Int>)","description":"dev.kord.rest.builder.channel.GuildChannelPositionModifyBuilder.move","location":"rest/dev.kord.rest.builder.channel/-guild-channel-position-modify-builder/move.html","searchKeys":["move","fun move(pair: Pair<Snowflake, Int>)","dev.kord.rest.builder.channel.GuildChannelPositionModifyBuilder.move"]},{"name":"fun move(pair: Pair<Snowflake, Int>)","description":"dev.kord.rest.builder.role.RolePositionsModifyBuilder.move","location":"rest/dev.kord.rest.builder.role/-role-positions-modify-builder/move.html","searchKeys":["move","fun move(pair: Pair<Snowflake, Int>)","dev.kord.rest.builder.role.RolePositionsModifyBuilder.move"]},{"name":"fun move(vararg pairs: Pair<Snowflake, Int>)","description":"dev.kord.rest.builder.channel.GuildChannelPositionModifyBuilder.move","location":"rest/dev.kord.rest.builder.channel/-guild-channel-position-modify-builder/move.html","searchKeys":["move","fun move(vararg pairs: Pair<Snowflake, Int>)","dev.kord.rest.builder.channel.GuildChannelPositionModifyBuilder.move"]},{"name":"fun move(vararg pairs: Pair<Snowflake, Int>)","description":"dev.kord.rest.builder.role.RolePositionsModifyBuilder.move","location":"rest/dev.kord.rest.builder.role/-role-positions-modify-builder/move.html","searchKeys":["move","fun move(vararg pairs: Pair<Snowflake, Int>)","dev.kord.rest.builder.role.RolePositionsModifyBuilder.move"]},{"name":"fun newUniqueSnowflake(): Snowflake","description":"dev.kord.rest.builder.guild.GuildCreateBuilder.newUniqueSnowflake","location":"rest/dev.kord.rest.builder.guild/-guild-create-builder/new-unique-snowflake.html","searchKeys":["newUniqueSnowflake","fun newUniqueSnowflake(): Snowflake","dev.kord.rest.builder.guild.GuildCreateBuilder.newUniqueSnowflake"]},{"name":"fun parameter(key: String, value: Any)","description":"dev.kord.rest.request.RequestBuilder.parameter","location":"rest/dev.kord.rest.request/-request-builder/parameter.html","searchKeys":["parameter","fun parameter(key: String, value: Any)","dev.kord.rest.request.RequestBuilder.parameter"]},{"name":"fun parameter(key: String, value: Snowflake)","description":"dev.kord.rest.request.RequestBuilder.parameter","location":"rest/dev.kord.rest.request/-request-builder/parameter.html","searchKeys":["parameter","fun parameter(key: String, value: Snowflake)","dev.kord.rest.request.RequestBuilder.parameter"]},{"name":"fun raw(data: ByteArray, format: Image.Format): Image","description":"dev.kord.rest.Image.Companion.raw","location":"rest/dev.kord.rest/-image/-companion/raw.html","searchKeys":["raw","fun raw(data: ByteArray, format: Image.Format): Image","dev.kord.rest.Image.Companion.raw"]},{"name":"fun roleIcon(roleId: Snowflake, hash: String): CdnUrl","description":"dev.kord.rest.route.DiscordCdn.roleIcon","location":"rest/dev.kord.rest.route/-discord-cdn/role-icon.html","searchKeys":["roleIcon","fun roleIcon(roleId: Snowflake, hash: String): CdnUrl","dev.kord.rest.route.DiscordCdn.roleIcon"]},{"name":"fun toOverwrite(): Overwrite","description":"dev.kord.rest.builder.channel.PermissionOverwriteBuilder.toOverwrite","location":"rest/dev.kord.rest.builder.channel/-permission-overwrite-builder/to-overwrite.html","searchKeys":["toOverwrite","fun toOverwrite(): Overwrite","dev.kord.rest.builder.channel.PermissionOverwriteBuilder.toOverwrite"]},{"name":"fun toRequest(): ChannelPositionSwapRequest","description":"dev.kord.rest.builder.channel.GuildChannelSwapBuilder.toRequest","location":"rest/dev.kord.rest.builder.channel/-guild-channel-swap-builder/to-request.html","searchKeys":["toRequest","fun toRequest(): ChannelPositionSwapRequest","dev.kord.rest.builder.channel.GuildChannelSwapBuilder.toRequest"]},{"name":"fun toUrl(): String","description":"dev.kord.rest.route.CdnUrl.toUrl","location":"rest/dev.kord.rest.route/-cdn-url/to-url.html","searchKeys":["toUrl","fun toUrl(): String","dev.kord.rest.route.CdnUrl.toUrl"]},{"name":"fun toUrl(config: CdnUrl.UrlFormatBuilder): String","description":"dev.kord.rest.route.CdnUrl.toUrl","location":"rest/dev.kord.rest.route/-cdn-url/to-url.html","searchKeys":["toUrl","fun toUrl(config: CdnUrl.UrlFormatBuilder): String","dev.kord.rest.route.CdnUrl.toUrl"]},{"name":"fun unencodedHeader(key: String, value: String)","description":"dev.kord.rest.request.RequestBuilder.unencodedHeader","location":"rest/dev.kord.rest.request/-request-builder/unencoded-header.html","searchKeys":["unencodedHeader","fun unencodedHeader(key: String, value: String)","dev.kord.rest.request.RequestBuilder.unencodedHeader"]},{"name":"fun urlEncodedHeader(key: String, value: String)","description":"dev.kord.rest.request.RequestBuilder.urlEncodedHeader","location":"rest/dev.kord.rest.request/-request-builder/url-encoded-header.html","searchKeys":["urlEncodedHeader","fun urlEncodedHeader(key: String, value: String)","dev.kord.rest.request.RequestBuilder.urlEncodedHeader"]},{"name":"fun userAvatar(userId: Snowflake, hash: String): CdnUrl","description":"dev.kord.rest.route.DiscordCdn.userAvatar","location":"rest/dev.kord.rest.route/-discord-cdn/user-avatar.html","searchKeys":["userAvatar","fun userAvatar(userId: Snowflake, hash: String): CdnUrl","dev.kord.rest.route.DiscordCdn.userAvatar"]},{"name":"fun valueOf(value: String): Image.Size","description":"dev.kord.rest.Image.Size.valueOf","location":"rest/dev.kord.rest/-image/-size/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): Image.Size","dev.kord.rest.Image.Size.valueOf"]},{"name":"fun valueOf(value: String): JsonErrorCode","description":"dev.kord.rest.json.JsonErrorCode.valueOf","location":"rest/dev.kord.rest.json/-json-error-code/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): JsonErrorCode","dev.kord.rest.json.JsonErrorCode.valueOf"]},{"name":"fun values(): Array<Image.Size>","description":"dev.kord.rest.Image.Size.values","location":"rest/dev.kord.rest/-image/-size/values.html","searchKeys":["values","fun values(): Array<Image.Size>","dev.kord.rest.Image.Size.values"]},{"name":"fun values(): Array<JsonErrorCode>","description":"dev.kord.rest.json.JsonErrorCode.values","location":"rest/dev.kord.rest.json/-json-error-code/values.html","searchKeys":["values","fun values(): Array<JsonErrorCode>","dev.kord.rest.json.JsonErrorCode.values"]},{"name":"inline fun AutoModerationRuleBuilder.blockMessage(builder: BlockMessageAutoModerationActionBuilder.() -> Unit = {})","description":"dev.kord.rest.builder.automoderation.blockMessage","location":"rest/dev.kord.rest.builder.automoderation/block-message.html","searchKeys":["blockMessage","inline fun AutoModerationRuleBuilder.blockMessage(builder: BlockMessageAutoModerationActionBuilder.() -> Unit = {})","dev.kord.rest.builder.automoderation.blockMessage"]},{"name":"inline fun AutoModerationRuleBuilder.sendAlertMessage(channelId: Snowflake, builder: SendAlertMessageAutoModerationActionBuilder.() -> Unit = {})","description":"dev.kord.rest.builder.automoderation.sendAlertMessage","location":"rest/dev.kord.rest.builder.automoderation/send-alert-message.html","searchKeys":["sendAlertMessage","inline fun AutoModerationRuleBuilder.sendAlertMessage(channelId: Snowflake, builder: SendAlertMessageAutoModerationActionBuilder.() -> Unit = {})","dev.kord.rest.builder.automoderation.sendAlertMessage"]},{"name":"inline fun BaseInputChatBuilder.attachment(name: String, description: String, builder: AttachmentBuilder.() -> Unit = {})","description":"dev.kord.rest.builder.interaction.attachment","location":"rest/dev.kord.rest.builder.interaction/attachment.html","searchKeys":["attachment","inline fun BaseInputChatBuilder.attachment(name: String, description: String, builder: AttachmentBuilder.() -> Unit = {})","dev.kord.rest.builder.interaction.attachment"]},{"name":"inline fun BaseInputChatBuilder.boolean(name: String, description: String, builder: BooleanBuilder.() -> Unit = {})","description":"dev.kord.rest.builder.interaction.boolean","location":"rest/dev.kord.rest.builder.interaction/boolean.html","searchKeys":["boolean","inline fun BaseInputChatBuilder.boolean(name: String, description: String, builder: BooleanBuilder.() -> Unit = {})","dev.kord.rest.builder.interaction.boolean"]},{"name":"inline fun BaseInputChatBuilder.channel(name: String, description: String, builder: ChannelBuilder.() -> Unit = {})","description":"dev.kord.rest.builder.interaction.channel","location":"rest/dev.kord.rest.builder.interaction/channel.html","searchKeys":["channel","inline fun BaseInputChatBuilder.channel(name: String, description: String, builder: ChannelBuilder.() -> Unit = {})","dev.kord.rest.builder.interaction.channel"]},{"name":"inline fun BaseInputChatBuilder.int(name: String, description: String, builder: IntegerOptionBuilder.() -> Unit = {})","description":"dev.kord.rest.builder.interaction.int","location":"rest/dev.kord.rest.builder.interaction/int.html","searchKeys":["int","inline fun BaseInputChatBuilder.int(name: String, description: String, builder: IntegerOptionBuilder.() -> Unit = {})","dev.kord.rest.builder.interaction.int"]},{"name":"inline fun BaseInputChatBuilder.mentionable(name: String, description: String, builder: MentionableBuilder.() -> Unit = {})","description":"dev.kord.rest.builder.interaction.mentionable","location":"rest/dev.kord.rest.builder.interaction/mentionable.html","searchKeys":["mentionable","inline fun BaseInputChatBuilder.mentionable(name: String, description: String, builder: MentionableBuilder.() -> Unit = {})","dev.kord.rest.builder.interaction.mentionable"]},{"name":"inline fun BaseInputChatBuilder.number(name: String, description: String, builder: NumberOptionBuilder.() -> Unit = {})","description":"dev.kord.rest.builder.interaction.number","location":"rest/dev.kord.rest.builder.interaction/number.html","searchKeys":["number","inline fun BaseInputChatBuilder.number(name: String, description: String, builder: NumberOptionBuilder.() -> Unit = {})","dev.kord.rest.builder.interaction.number"]},{"name":"inline fun BaseInputChatBuilder.role(name: String, description: String, builder: RoleBuilder.() -> Unit = {})","description":"dev.kord.rest.builder.interaction.role","location":"rest/dev.kord.rest.builder.interaction/role.html","searchKeys":["role","inline fun BaseInputChatBuilder.role(name: String, description: String, builder: RoleBuilder.() -> Unit = {})","dev.kord.rest.builder.interaction.role"]},{"name":"inline fun BaseInputChatBuilder.string(name: String, description: String, builder: StringChoiceBuilder.() -> Unit = {})","description":"dev.kord.rest.builder.interaction.string","location":"rest/dev.kord.rest.builder.interaction/string.html","searchKeys":["string","inline fun BaseInputChatBuilder.string(name: String, description: String, builder: StringChoiceBuilder.() -> Unit = {})","dev.kord.rest.builder.interaction.string"]},{"name":"inline fun BaseInputChatBuilder.user(name: String, description: String, builder: UserBuilder.() -> Unit = {})","description":"dev.kord.rest.builder.interaction.user","location":"rest/dev.kord.rest.builder.interaction/user.html","searchKeys":["user","inline fun BaseInputChatBuilder.user(name: String, description: String, builder: UserBuilder.() -> Unit = {})","dev.kord.rest.builder.interaction.user"]},{"name":"inline fun MessageCreateBuilder.actionRow(builder: ActionRowBuilder.() -> Unit)","description":"dev.kord.rest.builder.message.create.actionRow","location":"rest/dev.kord.rest.builder.message.create/action-row.html","searchKeys":["actionRow","inline fun MessageCreateBuilder.actionRow(builder: ActionRowBuilder.() -> Unit)","dev.kord.rest.builder.message.create.actionRow"]},{"name":"inline fun MessageCreateBuilder.allowedMentions(block: AllowedMentionsBuilder.() -> Unit = {})","description":"dev.kord.rest.builder.message.create.allowedMentions","location":"rest/dev.kord.rest.builder.message.create/allowed-mentions.html","searchKeys":["allowedMentions","inline fun MessageCreateBuilder.allowedMentions(block: AllowedMentionsBuilder.() -> Unit = {})","dev.kord.rest.builder.message.create.allowedMentions"]},{"name":"inline fun MessageCreateBuilder.embed(block: EmbedBuilder.() -> Unit)","description":"dev.kord.rest.builder.message.create.embed","location":"rest/dev.kord.rest.builder.message.create/embed.html","searchKeys":["embed","inline fun MessageCreateBuilder.embed(block: EmbedBuilder.() -> Unit)","dev.kord.rest.builder.message.create.embed"]},{"name":"inline fun MessageModifyBuilder.actionRow(builder: ActionRowBuilder.() -> Unit)","description":"dev.kord.rest.builder.message.modify.actionRow","location":"rest/dev.kord.rest.builder.message.modify/action-row.html","searchKeys":["actionRow","inline fun MessageModifyBuilder.actionRow(builder: ActionRowBuilder.() -> Unit)","dev.kord.rest.builder.message.modify.actionRow"]},{"name":"inline fun MessageModifyBuilder.allowedMentions(block: AllowedMentionsBuilder.() -> Unit = {})","description":"dev.kord.rest.builder.message.modify.allowedMentions","location":"rest/dev.kord.rest.builder.message.modify/allowed-mentions.html","searchKeys":["allowedMentions","inline fun MessageModifyBuilder.allowedMentions(block: AllowedMentionsBuilder.() -> Unit = {})","dev.kord.rest.builder.message.modify.allowedMentions"]},{"name":"inline fun MessageModifyBuilder.embed(block: EmbedBuilder.() -> Unit)","description":"dev.kord.rest.builder.message.modify.embed","location":"rest/dev.kord.rest.builder.message.modify/embed.html","searchKeys":["embed","inline fun MessageModifyBuilder.embed(block: EmbedBuilder.() -> Unit)","dev.kord.rest.builder.message.modify.embed"]},{"name":"inline fun MultiApplicationCommandBuilder.input(name: String, description: String, builder: ChatInputCreateBuilder.() -> Unit = {})","description":"dev.kord.rest.builder.interaction.input","location":"rest/dev.kord.rest.builder.interaction/input.html","searchKeys":["input","inline fun MultiApplicationCommandBuilder.input(name: String, description: String, builder: ChatInputCreateBuilder.() -> Unit = {})","dev.kord.rest.builder.interaction.input"]},{"name":"inline fun MultiApplicationCommandBuilder.message(name: String, builder: MessageCommandCreateBuilder.() -> Unit = {})","description":"dev.kord.rest.builder.interaction.message","location":"rest/dev.kord.rest.builder.interaction/message.html","searchKeys":["message","inline fun MultiApplicationCommandBuilder.message(name: String, builder: MessageCommandCreateBuilder.() -> Unit = {})","dev.kord.rest.builder.interaction.message"]},{"name":"inline fun MultiApplicationCommandBuilder.user(name: String, builder: UserCommandCreateBuilder.() -> Unit = {})","description":"dev.kord.rest.builder.interaction.user","location":"rest/dev.kord.rest.builder.interaction/user.html","searchKeys":["user","inline fun MultiApplicationCommandBuilder.user(name: String, builder: UserCommandCreateBuilder.() -> Unit = {})","dev.kord.rest.builder.interaction.user"]},{"name":"inline fun PermissionOverwritesBuilder.addMemberOverwrite(memberId: Snowflake, builder: PermissionOverwriteBuilder.() -> Unit)","description":"dev.kord.rest.builder.channel.addMemberOverwrite","location":"rest/dev.kord.rest.builder.channel/add-member-overwrite.html","searchKeys":["addMemberOverwrite","inline fun PermissionOverwritesBuilder.addMemberOverwrite(memberId: Snowflake, builder: PermissionOverwriteBuilder.() -> Unit)","dev.kord.rest.builder.channel.addMemberOverwrite"]},{"name":"inline fun PermissionOverwritesBuilder.addRoleOverwrite(roleId: Snowflake, builder: PermissionOverwriteBuilder.() -> Unit)","description":"dev.kord.rest.builder.channel.addRoleOverwrite","location":"rest/dev.kord.rest.builder.channel/add-role-overwrite.html","searchKeys":["addRoleOverwrite","inline fun PermissionOverwritesBuilder.addRoleOverwrite(roleId: Snowflake, builder: PermissionOverwriteBuilder.() -> Unit)","dev.kord.rest.builder.channel.addRoleOverwrite"]},{"name":"inline fun RootInputChatBuilder.group(name: String, description: String, builder: GroupCommandBuilder.() -> Unit = {})","description":"dev.kord.rest.builder.interaction.group","location":"rest/dev.kord.rest.builder.interaction/group.html","searchKeys":["group","inline fun RootInputChatBuilder.group(name: String, description: String, builder: GroupCommandBuilder.() -> Unit = {})","dev.kord.rest.builder.interaction.group"]},{"name":"inline fun RootInputChatBuilder.subCommand(name: String, description: String, builder: SubCommandBuilder.() -> Unit = {})","description":"dev.kord.rest.builder.interaction.subCommand","location":"rest/dev.kord.rest.builder.interaction/sub-command.html","searchKeys":["subCommand","inline fun RootInputChatBuilder.subCommand(name: String, description: String, builder: SubCommandBuilder.() -> Unit = {})","dev.kord.rest.builder.interaction.subCommand"]},{"name":"inline fun TimeoutAutoModerationRuleBuilder.timeout(duration: Duration, builder: TimeoutAutoModerationActionBuilder.() -> Unit = {})","description":"dev.kord.rest.builder.automoderation.timeout","location":"rest/dev.kord.rest.builder.automoderation/timeout.html","searchKeys":["timeout","inline fun TimeoutAutoModerationRuleBuilder.timeout(duration: Duration, builder: TimeoutAutoModerationActionBuilder.() -> Unit = {})","dev.kord.rest.builder.automoderation.timeout"]},{"name":"inline fun actionRow(builder: ActionRowBuilder.() -> Unit)","description":"dev.kord.rest.builder.interaction.ModalBuilder.actionRow","location":"rest/dev.kord.rest.builder.interaction/-modal-builder/action-row.html","searchKeys":["actionRow","inline fun actionRow(builder: ActionRowBuilder.() -> Unit)","dev.kord.rest.builder.interaction.ModalBuilder.actionRow"]},{"name":"inline fun author(builder: EmbedBuilder.Author.() -> Unit)","description":"dev.kord.rest.builder.message.EmbedBuilder.author","location":"rest/dev.kord.rest.builder.message/-embed-builder/author.html","searchKeys":["author","inline fun author(builder: EmbedBuilder.Author.() -> Unit)","dev.kord.rest.builder.message.EmbedBuilder.author"]},{"name":"inline fun category(name: String, id: Snowflake = newUniqueSnowflake(), builder: CategoryCreateBuilder.() -> Unit): Snowflake","description":"dev.kord.rest.builder.guild.GuildCreateBuilder.category","location":"rest/dev.kord.rest.builder.guild/-guild-create-builder/category.html","searchKeys":["category","inline fun category(name: String, id: Snowflake = newUniqueSnowflake(), builder: CategoryCreateBuilder.() -> Unit): Snowflake","dev.kord.rest.builder.guild.GuildCreateBuilder.category"]},{"name":"inline fun choice(name: String, value: T, localizationsBuilder: ChoiceLocalizationsBuilder.() -> Unit)","description":"dev.kord.rest.builder.interaction.BaseChoiceBuilder.choice","location":"rest/dev.kord.rest.builder.interaction/-base-choice-builder/choice.html","searchKeys":["choice","inline fun choice(name: String, value: T, localizationsBuilder: ChoiceLocalizationsBuilder.() -> Unit)","dev.kord.rest.builder.interaction.BaseChoiceBuilder.choice"]},{"name":"inline fun everyoneRole(builder: RoleCreateBuilder.() -> Unit)","description":"dev.kord.rest.builder.guild.GuildCreateBuilder.everyoneRole","location":"rest/dev.kord.rest.builder.guild/-guild-create-builder/everyone-role.html","searchKeys":["everyoneRole","inline fun everyoneRole(builder: RoleCreateBuilder.() -> Unit)","dev.kord.rest.builder.guild.GuildCreateBuilder.everyoneRole"]},{"name":"inline fun field(builder: EmbedBuilder.Field.() -> Unit)","description":"dev.kord.rest.builder.message.EmbedBuilder.field","location":"rest/dev.kord.rest.builder.message/-embed-builder/field.html","searchKeys":["field","inline fun field(builder: EmbedBuilder.Field.() -> Unit)","dev.kord.rest.builder.message.EmbedBuilder.field"]},{"name":"inline fun field(name: String, inline: Boolean = false, value: () -> String = { ZERO_WIDTH_SPACE })","description":"dev.kord.rest.builder.message.EmbedBuilder.field","location":"rest/dev.kord.rest.builder.message/-embed-builder/field.html","searchKeys":["field","inline fun field(name: String, inline: Boolean = false, value: () -> String = { ZERO_WIDTH_SPACE })","dev.kord.rest.builder.message.EmbedBuilder.field"]},{"name":"inline fun footer(builder: EmbedBuilder.Footer.() -> Unit)","description":"dev.kord.rest.builder.message.EmbedBuilder.footer","location":"rest/dev.kord.rest.builder.message/-embed-builder/footer.html","searchKeys":["footer","inline fun footer(builder: EmbedBuilder.Footer.() -> Unit)","dev.kord.rest.builder.message.EmbedBuilder.footer"]},{"name":"inline fun input(name: String, description: String, builder: ChatInputCreateBuilder.() -> Unit = {})","description":"dev.kord.rest.builder.interaction.GuildMultiApplicationCommandBuilder.input","location":"rest/dev.kord.rest.builder.interaction/-guild-multi-application-command-builder/input.html","searchKeys":["input","inline fun input(name: String, description: String, builder: ChatInputCreateBuilder.() -> Unit = {})","dev.kord.rest.builder.interaction.GuildMultiApplicationCommandBuilder.input"]},{"name":"inline fun input(name: String, description: String, builder: GlobalChatInputCreateBuilder.() -> Unit = {})","description":"dev.kord.rest.builder.interaction.GlobalMultiApplicationCommandBuilder.input","location":"rest/dev.kord.rest.builder.interaction/-global-multi-application-command-builder/input.html","searchKeys":["input","inline fun input(name: String, description: String, builder: GlobalChatInputCreateBuilder.() -> Unit = {})","dev.kord.rest.builder.interaction.GlobalMultiApplicationCommandBuilder.input"]},{"name":"inline fun interactionButton(style: ButtonStyle, customId: String, builder: ButtonBuilder.InteractionButtonBuilder.() -> Unit)","description":"dev.kord.rest.builder.component.ActionRowBuilder.interactionButton","location":"rest/dev.kord.rest.builder.component/-action-row-builder/interaction-button.html","searchKeys":["interactionButton","inline fun interactionButton(style: ButtonStyle, customId: String, builder: ButtonBuilder.InteractionButtonBuilder.() -> Unit)","dev.kord.rest.builder.component.ActionRowBuilder.interactionButton"]},{"name":"inline fun linkButton(url: String, builder: ButtonBuilder.LinkButtonBuilder.() -> Unit)","description":"dev.kord.rest.builder.component.ActionRowBuilder.linkButton","location":"rest/dev.kord.rest.builder.component/-action-row-builder/link-button.html","searchKeys":["linkButton","inline fun linkButton(url: String, builder: ButtonBuilder.LinkButtonBuilder.() -> Unit)","dev.kord.rest.builder.component.ActionRowBuilder.linkButton"]},{"name":"inline fun message(name: String, builder: GlobalMessageCommandCreateBuilder.() -> Unit = {})","description":"dev.kord.rest.builder.interaction.GlobalMultiApplicationCommandBuilder.message","location":"rest/dev.kord.rest.builder.interaction/-global-multi-application-command-builder/message.html","searchKeys":["message","inline fun message(name: String, builder: GlobalMessageCommandCreateBuilder.() -> Unit = {})","dev.kord.rest.builder.interaction.GlobalMultiApplicationCommandBuilder.message"]},{"name":"inline fun message(name: String, builder: MessageCommandCreateBuilder.() -> Unit = {})","description":"dev.kord.rest.builder.interaction.GuildMultiApplicationCommandBuilder.message","location":"rest/dev.kord.rest.builder.interaction/-guild-multi-application-command-builder/message.html","searchKeys":["message","inline fun message(name: String, builder: MessageCommandCreateBuilder.() -> Unit = {})","dev.kord.rest.builder.interaction.GuildMultiApplicationCommandBuilder.message"]},{"name":"inline fun move(channel: Snowflake, builder: GuildChannelSwapBuilder.() -> Unit)","description":"dev.kord.rest.builder.channel.GuildChannelPositionModifyBuilder.move","location":"rest/dev.kord.rest.builder.channel/-guild-channel-position-modify-builder/move.html","searchKeys":["move","inline fun move(channel: Snowflake, builder: GuildChannelSwapBuilder.() -> Unit)","dev.kord.rest.builder.channel.GuildChannelPositionModifyBuilder.move"]},{"name":"inline fun newsChannel(name: String, id: Snowflake = newUniqueSnowflake(), builder: NewsChannelCreateBuilder.() -> Unit): Snowflake","description":"dev.kord.rest.builder.guild.GuildCreateBuilder.newsChannel","location":"rest/dev.kord.rest.builder.guild/-guild-create-builder/news-channel.html","searchKeys":["newsChannel","inline fun newsChannel(name: String, id: Snowflake = newUniqueSnowflake(), builder: NewsChannelCreateBuilder.() -> Unit): Snowflake","dev.kord.rest.builder.guild.GuildCreateBuilder.newsChannel"]},{"name":"inline fun option(label: String, value: String, builder: SelectOptionBuilder.() -> Unit = {})","description":"dev.kord.rest.builder.component.SelectMenuBuilder.option","location":"rest/dev.kord.rest.builder.component/-select-menu-builder/option.html","searchKeys":["option","inline fun option(label: String, value: String, builder: SelectOptionBuilder.() -> Unit = {})","dev.kord.rest.builder.component.SelectMenuBuilder.option"]},{"name":"inline fun role(id: Snowflake = newUniqueSnowflake(), builder: RoleCreateBuilder.() -> Unit): Snowflake","description":"dev.kord.rest.builder.guild.GuildCreateBuilder.role","location":"rest/dev.kord.rest.builder.guild/-guild-create-builder/role.html","searchKeys":["role","inline fun role(id: Snowflake = newUniqueSnowflake(), builder: RoleCreateBuilder.() -> Unit): Snowflake","dev.kord.rest.builder.guild.GuildCreateBuilder.role"]},{"name":"inline fun selectMenu(customId: String, builder: SelectMenuBuilder.() -> Unit)","description":"dev.kord.rest.builder.component.ActionRowBuilder.selectMenu","location":"rest/dev.kord.rest.builder.component/-action-row-builder/select-menu.html","searchKeys":["selectMenu","inline fun selectMenu(customId: String, builder: SelectMenuBuilder.() -> Unit)","dev.kord.rest.builder.component.ActionRowBuilder.selectMenu"]},{"name":"inline fun subCommand(name: String, description: String, builder: SubCommandBuilder.() -> Unit)","description":"dev.kord.rest.builder.interaction.GroupCommandBuilder.subCommand","location":"rest/dev.kord.rest.builder.interaction/-group-command-builder/sub-command.html","searchKeys":["subCommand","inline fun subCommand(name: String, description: String, builder: SubCommandBuilder.() -> Unit)","dev.kord.rest.builder.interaction.GroupCommandBuilder.subCommand"]},{"name":"inline fun textChannel(name: String, id: Snowflake = newUniqueSnowflake(), builder: TextChannelCreateBuilder.() -> Unit): Snowflake","description":"dev.kord.rest.builder.guild.GuildCreateBuilder.textChannel","location":"rest/dev.kord.rest.builder.guild/-guild-create-builder/text-channel.html","searchKeys":["textChannel","inline fun textChannel(name: String, id: Snowflake = newUniqueSnowflake(), builder: TextChannelCreateBuilder.() -> Unit): Snowflake","dev.kord.rest.builder.guild.GuildCreateBuilder.textChannel"]},{"name":"inline fun textInput(style: TextInputStyle, customId: String, label: String, builder: TextInputBuilder.() -> Unit = {})","description":"dev.kord.rest.builder.component.ActionRowBuilder.textInput","location":"rest/dev.kord.rest.builder.component/-action-row-builder/text-input.html","searchKeys":["textInput","inline fun textInput(style: TextInputStyle, customId: String, label: String, builder: TextInputBuilder.() -> Unit = {})","dev.kord.rest.builder.component.ActionRowBuilder.textInput"]},{"name":"inline fun thumbnail(builder: EmbedBuilder.Thumbnail.() -> Unit)","description":"dev.kord.rest.builder.message.EmbedBuilder.thumbnail","location":"rest/dev.kord.rest.builder.message/-embed-builder/thumbnail.html","searchKeys":["thumbnail","inline fun thumbnail(builder: EmbedBuilder.Thumbnail.() -> Unit)","dev.kord.rest.builder.message.EmbedBuilder.thumbnail"]},{"name":"inline fun toUrl(format: CdnUrl.UrlFormatBuilder.() -> Unit): String","description":"dev.kord.rest.route.CdnUrl.toUrl","location":"rest/dev.kord.rest.route/-cdn-url/to-url.html","searchKeys":["toUrl","inline fun toUrl(format: CdnUrl.UrlFormatBuilder.() -> Unit): String","dev.kord.rest.route.CdnUrl.toUrl"]},{"name":"inline fun user(name: String, builder: GlobalUserCommandCreateBuilder.() -> Unit = {})","description":"dev.kord.rest.builder.interaction.GlobalMultiApplicationCommandBuilder.user","location":"rest/dev.kord.rest.builder.interaction/-global-multi-application-command-builder/user.html","searchKeys":["user","inline fun user(name: String, builder: GlobalUserCommandCreateBuilder.() -> Unit = {})","dev.kord.rest.builder.interaction.GlobalMultiApplicationCommandBuilder.user"]},{"name":"inline fun user(name: String, builder: UserCommandCreateBuilder.() -> Unit = {})","description":"dev.kord.rest.builder.interaction.GuildMultiApplicationCommandBuilder.user","location":"rest/dev.kord.rest.builder.interaction/-guild-multi-application-command-builder/user.html","searchKeys":["user","inline fun user(name: String, builder: UserCommandCreateBuilder.() -> Unit = {})","dev.kord.rest.builder.interaction.GuildMultiApplicationCommandBuilder.user"]},{"name":"inline fun welcomeChannel(id: Snowflake, description: String, builder: WelcomeScreenChannelBuilder.() -> Unit)","description":"dev.kord.rest.builder.guild.WelcomeScreenModifyBuilder.welcomeChannel","location":"rest/dev.kord.rest.builder.guild/-welcome-screen-modify-builder/welcome-channel.html","searchKeys":["welcomeChannel","inline fun welcomeChannel(id: Snowflake, description: String, builder: WelcomeScreenChannelBuilder.() -> Unit)","dev.kord.rest.builder.guild.WelcomeScreenModifyBuilder.welcomeChannel"]},{"name":"inline suspend fun <T, Builder : BaseChoiceBuilder<T>> createBuilderAutoCompleteInteractionResponse(interactionId: Snowflake, interactionToken: String, builder: Builder, builderFunction: Builder.() -> Unit)","description":"dev.kord.rest.service.InteractionService.createBuilderAutoCompleteInteractionResponse","location":"rest/dev.kord.rest.service/-interaction-service/create-builder-auto-complete-interaction-response.html","searchKeys":["createBuilderAutoCompleteInteractionResponse","inline suspend fun <T, Builder : BaseChoiceBuilder<T>> createBuilderAutoCompleteInteractionResponse(interactionId: Snowflake, interactionToken: String, builder: Builder, builderFunction: Builder.() -> Unit)","dev.kord.rest.service.InteractionService.createBuilderAutoCompleteInteractionResponse"]},{"name":"inline suspend fun <T> RequestRateLimiter.consume(request: Request<*, *>, consumer: (token: RequestToken) -> T): T","description":"dev.kord.rest.ratelimit.consume","location":"rest/dev.kord.rest.ratelimit/consume.html","searchKeys":["consume","inline suspend fun <T> RequestRateLimiter.consume(request: Request<*, *>, consumer: (token: RequestToken) -> T): T","dev.kord.rest.ratelimit.consume"]},{"name":"inline suspend fun <T> createAutoCompleteInteractionResponse(interactionId: Snowflake, interactionToken: String, autoComplete: DiscordAutoComplete<T>, typeSerializer: KSerializer<T> = serializer())","description":"dev.kord.rest.service.InteractionService.createAutoCompleteInteractionResponse","location":"rest/dev.kord.rest.service/-interaction-service/create-auto-complete-interaction-response.html","searchKeys":["createAutoCompleteInteractionResponse","inline suspend fun <T> createAutoCompleteInteractionResponse(interactionId: Snowflake, interactionToken: String, autoComplete: DiscordAutoComplete<T>, typeSerializer: KSerializer<T> = serializer())","dev.kord.rest.service.InteractionService.createAutoCompleteInteractionResponse"]},{"name":"inline suspend fun <T> unsafe(route: Route<T>, block: RequestBuilder<T>.() -> Unit): T","description":"dev.kord.rest.service.RestClient.unsafe","location":"rest/dev.kord.rest.service/-rest-client/unsafe.html","searchKeys":["unsafe","inline suspend fun <T> unsafe(route: Route<T>, block: RequestBuilder<T>.() -> Unit): T","dev.kord.rest.service.RestClient.unsafe"]},{"name":"inline suspend fun ChannelService.editMemberPermissions(channelId: Snowflake, memberId: Snowflake, builder: ChannelPermissionModifyBuilder.() -> Unit)","description":"dev.kord.rest.service.editMemberPermissions","location":"rest/dev.kord.rest.service/edit-member-permissions.html","searchKeys":["editMemberPermissions","inline suspend fun ChannelService.editMemberPermissions(channelId: Snowflake, memberId: Snowflake, builder: ChannelPermissionModifyBuilder.() -> Unit)","dev.kord.rest.service.editMemberPermissions"]},{"name":"inline suspend fun ChannelService.editRolePermission(channelId: Snowflake, roleId: Snowflake, builder: ChannelPermissionModifyBuilder.() -> Unit)","description":"dev.kord.rest.service.editRolePermission","location":"rest/dev.kord.rest.service/edit-role-permission.html","searchKeys":["editRolePermission","inline suspend fun ChannelService.editRolePermission(channelId: Snowflake, roleId: Snowflake, builder: ChannelPermissionModifyBuilder.() -> Unit)","dev.kord.rest.service.editRolePermission"]},{"name":"inline suspend fun ChannelService.patchCategory(channelId: Snowflake, builder: CategoryModifyBuilder.() -> Unit): DiscordChannel","description":"dev.kord.rest.service.patchCategory","location":"rest/dev.kord.rest.service/patch-category.html","searchKeys":["patchCategory","inline suspend fun ChannelService.patchCategory(channelId: Snowflake, builder: CategoryModifyBuilder.() -> Unit): DiscordChannel","dev.kord.rest.service.patchCategory"]},{"name":"inline suspend fun ChannelService.patchNewsChannel(channelId: Snowflake, builder: NewsChannelModifyBuilder.() -> Unit): DiscordChannel","description":"dev.kord.rest.service.patchNewsChannel","location":"rest/dev.kord.rest.service/patch-news-channel.html","searchKeys":["patchNewsChannel","inline suspend fun ChannelService.patchNewsChannel(channelId: Snowflake, builder: NewsChannelModifyBuilder.() -> Unit): DiscordChannel","dev.kord.rest.service.patchNewsChannel"]},{"name":"inline suspend fun ChannelService.patchStageVoiceChannel(channelId: Snowflake, builder: StageVoiceChannelModifyBuilder.() -> Unit): DiscordChannel","description":"dev.kord.rest.service.patchStageVoiceChannel","location":"rest/dev.kord.rest.service/patch-stage-voice-channel.html","searchKeys":["patchStageVoiceChannel","inline suspend fun ChannelService.patchStageVoiceChannel(channelId: Snowflake, builder: StageVoiceChannelModifyBuilder.() -> Unit): DiscordChannel","dev.kord.rest.service.patchStageVoiceChannel"]},{"name":"inline suspend fun ChannelService.patchTextChannel(channelId: Snowflake, builder: TextChannelModifyBuilder.() -> Unit): DiscordChannel","description":"dev.kord.rest.service.patchTextChannel","location":"rest/dev.kord.rest.service/patch-text-channel.html","searchKeys":["patchTextChannel","inline suspend fun ChannelService.patchTextChannel(channelId: Snowflake, builder: TextChannelModifyBuilder.() -> Unit): DiscordChannel","dev.kord.rest.service.patchTextChannel"]},{"name":"inline suspend fun ChannelService.patchVoiceChannel(channelId: Snowflake, builder: VoiceChannelModifyBuilder.() -> Unit): DiscordChannel","description":"dev.kord.rest.service.patchVoiceChannel","location":"rest/dev.kord.rest.service/patch-voice-channel.html","searchKeys":["patchVoiceChannel","inline suspend fun ChannelService.patchVoiceChannel(channelId: Snowflake, builder: VoiceChannelModifyBuilder.() -> Unit): DiscordChannel","dev.kord.rest.service.patchVoiceChannel"]},{"name":"inline suspend fun GuildService.createCategory(guildId: Snowflake, name: String, builder: CategoryCreateBuilder.() -> Unit): DiscordChannel","description":"dev.kord.rest.service.createCategory","location":"rest/dev.kord.rest.service/create-category.html","searchKeys":["createCategory","inline suspend fun GuildService.createCategory(guildId: Snowflake, name: String, builder: CategoryCreateBuilder.() -> Unit): DiscordChannel","dev.kord.rest.service.createCategory"]},{"name":"inline suspend fun GuildService.createNewsChannel(guildId: Snowflake, name: String, builder: NewsChannelCreateBuilder.() -> Unit): DiscordChannel","description":"dev.kord.rest.service.createNewsChannel","location":"rest/dev.kord.rest.service/create-news-channel.html","searchKeys":["createNewsChannel","inline suspend fun GuildService.createNewsChannel(guildId: Snowflake, name: String, builder: NewsChannelCreateBuilder.() -> Unit): DiscordChannel","dev.kord.rest.service.createNewsChannel"]},{"name":"inline suspend fun GuildService.createScheduledEvent(guildId: Snowflake, name: String, privacyLevel: GuildScheduledEventPrivacyLevel, scheduledStartTime: Instant, entityType: ScheduledEntityType, builder: ScheduledEventCreateBuilder.() -> Unit = {}): DiscordGuildScheduledEvent","description":"dev.kord.rest.service.createScheduledEvent","location":"rest/dev.kord.rest.service/create-scheduled-event.html","searchKeys":["createScheduledEvent","inline suspend fun GuildService.createScheduledEvent(guildId: Snowflake, name: String, privacyLevel: GuildScheduledEventPrivacyLevel, scheduledStartTime: Instant, entityType: ScheduledEntityType, builder: ScheduledEventCreateBuilder.() -> Unit = {}): DiscordGuildScheduledEvent","dev.kord.rest.service.createScheduledEvent"]},{"name":"inline suspend fun GuildService.createTextChannel(guildId: Snowflake, name: String, builder: TextChannelCreateBuilder.() -> Unit): DiscordChannel","description":"dev.kord.rest.service.createTextChannel","location":"rest/dev.kord.rest.service/create-text-channel.html","searchKeys":["createTextChannel","inline suspend fun GuildService.createTextChannel(guildId: Snowflake, name: String, builder: TextChannelCreateBuilder.() -> Unit): DiscordChannel","dev.kord.rest.service.createTextChannel"]},{"name":"inline suspend fun GuildService.createVoiceChannel(guildId: Snowflake, name: String, builder: VoiceChannelCreateBuilder.() -> Unit): DiscordChannel","description":"dev.kord.rest.service.createVoiceChannel","location":"rest/dev.kord.rest.service/create-voice-channel.html","searchKeys":["createVoiceChannel","inline suspend fun GuildService.createVoiceChannel(guildId: Snowflake, name: String, builder: VoiceChannelCreateBuilder.() -> Unit): DiscordChannel","dev.kord.rest.service.createVoiceChannel"]},{"name":"inline suspend fun GuildService.modifyCurrentVoiceState(guildId: Snowflake, builder: CurrentVoiceStateModifyBuilder.() -> Unit)","description":"dev.kord.rest.service.modifyCurrentVoiceState","location":"rest/dev.kord.rest.service/modify-current-voice-state.html","searchKeys":["modifyCurrentVoiceState","inline suspend fun GuildService.modifyCurrentVoiceState(guildId: Snowflake, builder: CurrentVoiceStateModifyBuilder.() -> Unit)","dev.kord.rest.service.modifyCurrentVoiceState"]},{"name":"inline suspend fun GuildService.modifyCurrentVoiceState(guildId: Snowflake, channelId: Snowflake, builder: CurrentVoiceStateModifyBuilder.() -> Unit)","description":"dev.kord.rest.service.modifyCurrentVoiceState","location":"rest/dev.kord.rest.service/modify-current-voice-state.html","searchKeys":["modifyCurrentVoiceState","inline suspend fun GuildService.modifyCurrentVoiceState(guildId: Snowflake, channelId: Snowflake, builder: CurrentVoiceStateModifyBuilder.() -> Unit)","dev.kord.rest.service.modifyCurrentVoiceState"]},{"name":"inline suspend fun GuildService.modifyGuildWelcomeScreen(guildId: Snowflake, builder: WelcomeScreenModifyBuilder.() -> Unit): DiscordWelcomeScreen","description":"dev.kord.rest.service.modifyGuildWelcomeScreen","location":"rest/dev.kord.rest.service/modify-guild-welcome-screen.html","searchKeys":["modifyGuildWelcomeScreen","inline suspend fun GuildService.modifyGuildWelcomeScreen(guildId: Snowflake, builder: WelcomeScreenModifyBuilder.() -> Unit): DiscordWelcomeScreen","dev.kord.rest.service.modifyGuildWelcomeScreen"]},{"name":"inline suspend fun GuildService.modifyScheduledEvent(guildId: Snowflake, eventId: Snowflake, builder: ScheduledEventModifyBuilder.() -> Unit): DiscordGuildScheduledEvent","description":"dev.kord.rest.service.modifyScheduledEvent","location":"rest/dev.kord.rest.service/modify-scheduled-event.html","searchKeys":["modifyScheduledEvent","inline suspend fun GuildService.modifyScheduledEvent(guildId: Snowflake, eventId: Snowflake, builder: ScheduledEventModifyBuilder.() -> Unit): DiscordGuildScheduledEvent","dev.kord.rest.service.modifyScheduledEvent"]},{"name":"inline suspend fun GuildService.modifyVoiceState(guildId: Snowflake, channelId: Snowflake, userId: Snowflake, builder: VoiceStateModifyBuilder.() -> Unit)","description":"dev.kord.rest.service.modifyVoiceState","location":"rest/dev.kord.rest.service/modify-voice-state.html","searchKeys":["modifyVoiceState","inline suspend fun GuildService.modifyVoiceState(guildId: Snowflake, channelId: Snowflake, userId: Snowflake, builder: VoiceStateModifyBuilder.() -> Unit)","dev.kord.rest.service.modifyVoiceState"]},{"name":"inline suspend fun addGuildBan(guildId: Snowflake, userId: Snowflake, builder: BanCreateBuilder.() -> Unit)","description":"dev.kord.rest.service.GuildService.addGuildBan","location":"rest/dev.kord.rest.service/-guild-service/add-guild-ban.html","searchKeys":["addGuildBan","inline suspend fun addGuildBan(guildId: Snowflake, userId: Snowflake, builder: BanCreateBuilder.() -> Unit)","dev.kord.rest.service.GuildService.addGuildBan"]},{"name":"inline suspend fun createEmoji(guildId: Snowflake, name: String, image: Image, builder: EmojiCreateBuilder.() -> Unit = {}): DiscordEmoji","description":"dev.kord.rest.service.EmojiService.createEmoji","location":"rest/dev.kord.rest.service/-emoji-service/create-emoji.html","searchKeys":["createEmoji","inline suspend fun createEmoji(guildId: Snowflake, name: String, image: Image, builder: EmojiCreateBuilder.() -> Unit = {}): DiscordEmoji","dev.kord.rest.service.EmojiService.createEmoji"]},{"name":"inline suspend fun createFollowupMessage(applicationId: Snowflake, interactionToken: String, ephemeral: Boolean = false, builder: FollowupMessageCreateBuilder.() -> Unit): DiscordMessage","description":"dev.kord.rest.service.InteractionService.createFollowupMessage","location":"rest/dev.kord.rest.service/-interaction-service/create-followup-message.html","searchKeys":["createFollowupMessage","inline suspend fun createFollowupMessage(applicationId: Snowflake, interactionToken: String, ephemeral: Boolean = false, builder: FollowupMessageCreateBuilder.() -> Unit): DiscordMessage","dev.kord.rest.service.InteractionService.createFollowupMessage"]},{"name":"inline suspend fun createGlobalApplicationCommands(applicationId: Snowflake, builder: GlobalMultiApplicationCommandBuilder.() -> Unit): List<DiscordApplicationCommand>","description":"dev.kord.rest.service.InteractionService.createGlobalApplicationCommands","location":"rest/dev.kord.rest.service/-interaction-service/create-global-application-commands.html","searchKeys":["createGlobalApplicationCommands","inline suspend fun createGlobalApplicationCommands(applicationId: Snowflake, builder: GlobalMultiApplicationCommandBuilder.() -> Unit): List<DiscordApplicationCommand>","dev.kord.rest.service.InteractionService.createGlobalApplicationCommands"]},{"name":"inline suspend fun createGlobalChatInputApplicationCommand(applicationId: Snowflake, name: String, description: String, builder: GlobalChatInputCreateBuilder.() -> Unit = {}): DiscordApplicationCommand","description":"dev.kord.rest.service.InteractionService.createGlobalChatInputApplicationCommand","location":"rest/dev.kord.rest.service/-interaction-service/create-global-chat-input-application-command.html","searchKeys":["createGlobalChatInputApplicationCommand","inline suspend fun createGlobalChatInputApplicationCommand(applicationId: Snowflake, name: String, description: String, builder: GlobalChatInputCreateBuilder.() -> Unit = {}): DiscordApplicationCommand","dev.kord.rest.service.InteractionService.createGlobalChatInputApplicationCommand"]},{"name":"inline suspend fun createGlobalMessageCommandApplicationCommand(applicationId: Snowflake, name: String, builder: GlobalMessageCommandCreateBuilder.() -> Unit = {}): DiscordApplicationCommand","description":"dev.kord.rest.service.InteractionService.createGlobalMessageCommandApplicationCommand","location":"rest/dev.kord.rest.service/-interaction-service/create-global-message-command-application-command.html","searchKeys":["createGlobalMessageCommandApplicationCommand","inline suspend fun createGlobalMessageCommandApplicationCommand(applicationId: Snowflake, name: String, builder: GlobalMessageCommandCreateBuilder.() -> Unit = {}): DiscordApplicationCommand","dev.kord.rest.service.InteractionService.createGlobalMessageCommandApplicationCommand"]},{"name":"inline suspend fun createGlobalUserCommandApplicationCommand(applicationId: Snowflake, name: String, builder: GlobalUserCommandCreateBuilder.() -> Unit = {}): DiscordApplicationCommand","description":"dev.kord.rest.service.InteractionService.createGlobalUserCommandApplicationCommand","location":"rest/dev.kord.rest.service/-interaction-service/create-global-user-command-application-command.html","searchKeys":["createGlobalUserCommandApplicationCommand","inline suspend fun createGlobalUserCommandApplicationCommand(applicationId: Snowflake, name: String, builder: GlobalUserCommandCreateBuilder.() -> Unit = {}): DiscordApplicationCommand","dev.kord.rest.service.InteractionService.createGlobalUserCommandApplicationCommand"]},{"name":"inline suspend fun createGroupDM(builder: GroupDMCreateBuilder.() -> Unit): DiscordChannel","description":"dev.kord.rest.service.UserService.createGroupDM","location":"rest/dev.kord.rest.service/-user-service/create-group-d-m.html","searchKeys":["createGroupDM","inline suspend fun createGroupDM(builder: GroupDMCreateBuilder.() -> Unit): DiscordChannel","dev.kord.rest.service.UserService.createGroupDM"]},{"name":"inline suspend fun createGuild(name: String, builder: GuildCreateBuilder.() -> Unit): DiscordGuild","description":"dev.kord.rest.service.GuildService.createGuild","location":"rest/dev.kord.rest.service/-guild-service/create-guild.html","searchKeys":["createGuild","inline suspend fun createGuild(name: String, builder: GuildCreateBuilder.() -> Unit): DiscordGuild","dev.kord.rest.service.GuildService.createGuild"]},{"name":"inline suspend fun createGuildApplicationCommands(applicationId: Snowflake, guildId: Snowflake, builder: GuildMultiApplicationCommandBuilder.() -> Unit): List<DiscordApplicationCommand>","description":"dev.kord.rest.service.InteractionService.createGuildApplicationCommands","location":"rest/dev.kord.rest.service/-interaction-service/create-guild-application-commands.html","searchKeys":["createGuildApplicationCommands","inline suspend fun createGuildApplicationCommands(applicationId: Snowflake, guildId: Snowflake, builder: GuildMultiApplicationCommandBuilder.() -> Unit): List<DiscordApplicationCommand>","dev.kord.rest.service.InteractionService.createGuildApplicationCommands"]},{"name":"inline suspend fun createGuildChatInputApplicationCommand(applicationId: Snowflake, guildId: Snowflake, name: String, description: String, builder: ChatInputCreateBuilder.() -> Unit = {}): DiscordApplicationCommand","description":"dev.kord.rest.service.InteractionService.createGuildChatInputApplicationCommand","location":"rest/dev.kord.rest.service/-interaction-service/create-guild-chat-input-application-command.html","searchKeys":["createGuildChatInputApplicationCommand","inline suspend fun createGuildChatInputApplicationCommand(applicationId: Snowflake, guildId: Snowflake, name: String, description: String, builder: ChatInputCreateBuilder.() -> Unit = {}): DiscordApplicationCommand","dev.kord.rest.service.InteractionService.createGuildChatInputApplicationCommand"]},{"name":"inline suspend fun createGuildFromTemplate(code: String, name: String, builder: GuildFromTemplateCreateBuilder.() -> Unit): DiscordGuild","description":"dev.kord.rest.service.TemplateService.createGuildFromTemplate","location":"rest/dev.kord.rest.service/-template-service/create-guild-from-template.html","searchKeys":["createGuildFromTemplate","inline suspend fun createGuildFromTemplate(code: String, name: String, builder: GuildFromTemplateCreateBuilder.() -> Unit): DiscordGuild","dev.kord.rest.service.TemplateService.createGuildFromTemplate"]},{"name":"inline suspend fun createGuildMessageCommandApplicationCommand(applicationId: Snowflake, guildId: Snowflake, name: String, builder: MessageCommandCreateBuilder.() -> Unit = {}): DiscordApplicationCommand","description":"dev.kord.rest.service.InteractionService.createGuildMessageCommandApplicationCommand","location":"rest/dev.kord.rest.service/-interaction-service/create-guild-message-command-application-command.html","searchKeys":["createGuildMessageCommandApplicationCommand","inline suspend fun createGuildMessageCommandApplicationCommand(applicationId: Snowflake, guildId: Snowflake, name: String, builder: MessageCommandCreateBuilder.() -> Unit = {}): DiscordApplicationCommand","dev.kord.rest.service.InteractionService.createGuildMessageCommandApplicationCommand"]},{"name":"inline suspend fun createGuildRole(guildId: Snowflake, builder: RoleCreateBuilder.() -> Unit = {}): DiscordRole","description":"dev.kord.rest.service.GuildService.createGuildRole","location":"rest/dev.kord.rest.service/-guild-service/create-guild-role.html","searchKeys":["createGuildRole","inline suspend fun createGuildRole(guildId: Snowflake, builder: RoleCreateBuilder.() -> Unit = {}): DiscordRole","dev.kord.rest.service.GuildService.createGuildRole"]},{"name":"inline suspend fun createGuildTemplate(guildId: Snowflake, name: String, builder: GuildTemplateCreateBuilder.() -> Unit): DiscordTemplate","description":"dev.kord.rest.service.TemplateService.createGuildTemplate","location":"rest/dev.kord.rest.service/-template-service/create-guild-template.html","searchKeys":["createGuildTemplate","inline suspend fun createGuildTemplate(guildId: Snowflake, name: String, builder: GuildTemplateCreateBuilder.() -> Unit): DiscordTemplate","dev.kord.rest.service.TemplateService.createGuildTemplate"]},{"name":"inline suspend fun createGuildUserCommandApplicationCommand(applicationId: Snowflake, guildId: Snowflake, name: String, builder: UserCommandCreateBuilder.() -> Unit = {}): DiscordApplicationCommand","description":"dev.kord.rest.service.InteractionService.createGuildUserCommandApplicationCommand","location":"rest/dev.kord.rest.service/-interaction-service/create-guild-user-command-application-command.html","searchKeys":["createGuildUserCommandApplicationCommand","inline suspend fun createGuildUserCommandApplicationCommand(applicationId: Snowflake, guildId: Snowflake, name: String, builder: UserCommandCreateBuilder.() -> Unit = {}): DiscordApplicationCommand","dev.kord.rest.service.InteractionService.createGuildUserCommandApplicationCommand"]},{"name":"inline suspend fun createIntAutoCompleteInteractionResponse(interactionId: Snowflake, interactionToken: String, builderFunction: IntegerOptionBuilder.() -> Unit)","description":"dev.kord.rest.service.InteractionService.createIntAutoCompleteInteractionResponse","location":"rest/dev.kord.rest.service/-interaction-service/create-int-auto-complete-interaction-response.html","searchKeys":["createIntAutoCompleteInteractionResponse","inline suspend fun createIntAutoCompleteInteractionResponse(interactionId: Snowflake, interactionToken: String, builderFunction: IntegerOptionBuilder.() -> Unit)","dev.kord.rest.service.InteractionService.createIntAutoCompleteInteractionResponse"]},{"name":"inline suspend fun createInteractionResponse(interactionId: Snowflake, interactionToken: String, ephemeral: Boolean = false, builder: InteractionResponseCreateBuilder.() -> Unit)","description":"dev.kord.rest.service.InteractionService.createInteractionResponse","location":"rest/dev.kord.rest.service/-interaction-service/create-interaction-response.html","searchKeys":["createInteractionResponse","inline suspend fun createInteractionResponse(interactionId: Snowflake, interactionToken: String, ephemeral: Boolean = false, builder: InteractionResponseCreateBuilder.() -> Unit)","dev.kord.rest.service.InteractionService.createInteractionResponse"]},{"name":"inline suspend fun createInvite(channelId: Snowflake, builder: InviteCreateBuilder.() -> Unit = {}): DiscordInviteWithMetadata","description":"dev.kord.rest.service.ChannelService.createInvite","location":"rest/dev.kord.rest.service/-channel-service/create-invite.html","searchKeys":["createInvite","inline suspend fun createInvite(channelId: Snowflake, builder: InviteCreateBuilder.() -> Unit = {}): DiscordInviteWithMetadata","dev.kord.rest.service.ChannelService.createInvite"]},{"name":"inline suspend fun createKeywordAutoModerationRule(guildId: Snowflake, name: String, eventType: AutoModerationRuleEventType, builder: KeywordAutoModerationRuleCreateBuilder.() -> Unit): DiscordAutoModerationRule","description":"dev.kord.rest.service.AutoModerationService.createKeywordAutoModerationRule","location":"rest/dev.kord.rest.service/-auto-moderation-service/create-keyword-auto-moderation-rule.html","searchKeys":["createKeywordAutoModerationRule","inline suspend fun createKeywordAutoModerationRule(guildId: Snowflake, name: String, eventType: AutoModerationRuleEventType, builder: KeywordAutoModerationRuleCreateBuilder.() -> Unit): DiscordAutoModerationRule","dev.kord.rest.service.AutoModerationService.createKeywordAutoModerationRule"]},{"name":"inline suspend fun createKeywordPresetAutoModerationRule(guildId: Snowflake, name: String, eventType: AutoModerationRuleEventType, builder: KeywordPresetAutoModerationRuleCreateBuilder.() -> Unit): DiscordAutoModerationRule","description":"dev.kord.rest.service.AutoModerationService.createKeywordPresetAutoModerationRule","location":"rest/dev.kord.rest.service/-auto-moderation-service/create-keyword-preset-auto-moderation-rule.html","searchKeys":["createKeywordPresetAutoModerationRule","inline suspend fun createKeywordPresetAutoModerationRule(guildId: Snowflake, name: String, eventType: AutoModerationRuleEventType, builder: KeywordPresetAutoModerationRuleCreateBuilder.() -> Unit): DiscordAutoModerationRule","dev.kord.rest.service.AutoModerationService.createKeywordPresetAutoModerationRule"]},{"name":"inline suspend fun createMentionSpamAutoModerationRule(guildId: Snowflake, name: String, eventType: AutoModerationRuleEventType, mentionLimit: Int, builder: MentionSpamAutoModerationRuleCreateBuilder.() -> Unit): DiscordAutoModerationRule","description":"dev.kord.rest.service.AutoModerationService.createMentionSpamAutoModerationRule","location":"rest/dev.kord.rest.service/-auto-moderation-service/create-mention-spam-auto-moderation-rule.html","searchKeys":["createMentionSpamAutoModerationRule","inline suspend fun createMentionSpamAutoModerationRule(guildId: Snowflake, name: String, eventType: AutoModerationRuleEventType, mentionLimit: Int, builder: MentionSpamAutoModerationRuleCreateBuilder.() -> Unit): DiscordAutoModerationRule","dev.kord.rest.service.AutoModerationService.createMentionSpamAutoModerationRule"]},{"name":"inline suspend fun createMessage(channelId: Snowflake, builder: UserMessageCreateBuilder.() -> Unit): DiscordMessage","description":"dev.kord.rest.service.ChannelService.createMessage","location":"rest/dev.kord.rest.service/-channel-service/create-message.html","searchKeys":["createMessage","inline suspend fun createMessage(channelId: Snowflake, builder: UserMessageCreateBuilder.() -> Unit): DiscordMessage","dev.kord.rest.service.ChannelService.createMessage"]},{"name":"inline suspend fun createModalInteractionResponse(interactionId: Snowflake, interactionToken: String, title: String, customId: String, builder: ModalBuilder.() -> Unit)","description":"dev.kord.rest.service.InteractionService.createModalInteractionResponse","location":"rest/dev.kord.rest.service/-interaction-service/create-modal-interaction-response.html","searchKeys":["createModalInteractionResponse","inline suspend fun createModalInteractionResponse(interactionId: Snowflake, interactionToken: String, title: String, customId: String, builder: ModalBuilder.() -> Unit)","dev.kord.rest.service.InteractionService.createModalInteractionResponse"]},{"name":"inline suspend fun createNumberAutoCompleteInteractionResponse(interactionId: Snowflake, interactionToken: String, builderFunction: NumberOptionBuilder.() -> Unit)","description":"dev.kord.rest.service.InteractionService.createNumberAutoCompleteInteractionResponse","location":"rest/dev.kord.rest.service/-interaction-service/create-number-auto-complete-interaction-response.html","searchKeys":["createNumberAutoCompleteInteractionResponse","inline suspend fun createNumberAutoCompleteInteractionResponse(interactionId: Snowflake, interactionToken: String, builderFunction: NumberOptionBuilder.() -> Unit)","dev.kord.rest.service.InteractionService.createNumberAutoCompleteInteractionResponse"]},{"name":"inline suspend fun createSpamAutoModerationRule(guildId: Snowflake, name: String, eventType: AutoModerationRuleEventType, builder: SpamAutoModerationRuleCreateBuilder.() -> Unit): DiscordAutoModerationRule","description":"dev.kord.rest.service.AutoModerationService.createSpamAutoModerationRule","location":"rest/dev.kord.rest.service/-auto-moderation-service/create-spam-auto-moderation-rule.html","searchKeys":["createSpamAutoModerationRule","inline suspend fun createSpamAutoModerationRule(guildId: Snowflake, name: String, eventType: AutoModerationRuleEventType, builder: SpamAutoModerationRuleCreateBuilder.() -> Unit): DiscordAutoModerationRule","dev.kord.rest.service.AutoModerationService.createSpamAutoModerationRule"]},{"name":"inline suspend fun createStageInstance(channelId: Snowflake, topic: String, builder: StageInstanceCreateBuilder.() -> Unit = {}): DiscordStageInstance","description":"dev.kord.rest.service.StageInstanceService.createStageInstance","location":"rest/dev.kord.rest.service/-stage-instance-service/create-stage-instance.html","searchKeys":["createStageInstance","inline suspend fun createStageInstance(channelId: Snowflake, topic: String, builder: StageInstanceCreateBuilder.() -> Unit = {}): DiscordStageInstance","dev.kord.rest.service.StageInstanceService.createStageInstance"]},{"name":"inline suspend fun createStringAutoCompleteInteractionResponse(interactionId: Snowflake, interactionToken: String, builderFunction: StringChoiceBuilder.() -> Unit)","description":"dev.kord.rest.service.InteractionService.createStringAutoCompleteInteractionResponse","location":"rest/dev.kord.rest.service/-interaction-service/create-string-auto-complete-interaction-response.html","searchKeys":["createStringAutoCompleteInteractionResponse","inline suspend fun createStringAutoCompleteInteractionResponse(interactionId: Snowflake, interactionToken: String, builderFunction: StringChoiceBuilder.() -> Unit)","dev.kord.rest.service.InteractionService.createStringAutoCompleteInteractionResponse"]},{"name":"inline suspend fun createWebhook(channelId: Snowflake, name: String, builder: WebhookCreateBuilder.() -> Unit): DiscordWebhook","description":"dev.kord.rest.service.WebhookService.createWebhook","location":"rest/dev.kord.rest.service/-webhook-service/create-webhook.html","searchKeys":["createWebhook","inline suspend fun createWebhook(channelId: Snowflake, name: String, builder: WebhookCreateBuilder.() -> Unit): DiscordWebhook","dev.kord.rest.service.WebhookService.createWebhook"]},{"name":"inline suspend fun editMessage(channelId: Snowflake, messageId: Snowflake, builder: UserMessageModifyBuilder.() -> Unit): DiscordMessage","description":"dev.kord.rest.service.ChannelService.editMessage","location":"rest/dev.kord.rest.service/-channel-service/edit-message.html","searchKeys":["editMessage","inline suspend fun editMessage(channelId: Snowflake, messageId: Snowflake, builder: UserMessageModifyBuilder.() -> Unit): DiscordMessage","dev.kord.rest.service.ChannelService.editMessage"]},{"name":"inline suspend fun editWebhookMessage(webhookId: Snowflake, token: String, messageId: Snowflake, threadId: Snowflake? = null, builder: WebhookMessageModifyBuilder.() -> Unit): DiscordMessage","description":"dev.kord.rest.service.WebhookService.editWebhookMessage","location":"rest/dev.kord.rest.service/-webhook-service/edit-webhook-message.html","searchKeys":["editWebhookMessage","inline suspend fun editWebhookMessage(webhookId: Snowflake, token: String, messageId: Snowflake, threadId: Snowflake? = null, builder: WebhookMessageModifyBuilder.() -> Unit): DiscordMessage","dev.kord.rest.service.WebhookService.editWebhookMessage"]},{"name":"inline suspend fun executeWebhook(webhookId: Snowflake, token: String, wait: Boolean? = null, threadId: Snowflake? = null, builder: WebhookMessageCreateBuilder.() -> Unit): DiscordMessage?","description":"dev.kord.rest.service.WebhookService.executeWebhook","location":"rest/dev.kord.rest.service/-webhook-service/execute-webhook.html","searchKeys":["executeWebhook","inline suspend fun executeWebhook(webhookId: Snowflake, token: String, wait: Boolean? = null, threadId: Snowflake? = null, builder: WebhookMessageCreateBuilder.() -> Unit): DiscordMessage?","dev.kord.rest.service.WebhookService.executeWebhook"]},{"name":"inline suspend fun getAuditLogs(guildId: Snowflake, builder: AuditLogGetRequestBuilder.() -> Unit): DiscordAuditLog","description":"dev.kord.rest.service.AuditLogService.getAuditLogs","location":"rest/dev.kord.rest.service/-audit-log-service/get-audit-logs.html","searchKeys":["getAuditLogs","inline suspend fun getAuditLogs(guildId: Snowflake, builder: AuditLogGetRequestBuilder.() -> Unit): DiscordAuditLog","dev.kord.rest.service.AuditLogService.getAuditLogs"]},{"name":"inline suspend fun modifyCurrentUser(builder: CurrentUserModifyBuilder.() -> Unit): DiscordUser","description":"dev.kord.rest.service.UserService.modifyCurrentUser","location":"rest/dev.kord.rest.service/-user-service/modify-current-user.html","searchKeys":["modifyCurrentUser","inline suspend fun modifyCurrentUser(builder: CurrentUserModifyBuilder.() -> Unit): DiscordUser","dev.kord.rest.service.UserService.modifyCurrentUser"]},{"name":"inline suspend fun modifyEmoji(guildId: Snowflake, emojiId: Snowflake, builder: EmojiModifyBuilder.() -> Unit): DiscordEmoji","description":"dev.kord.rest.service.EmojiService.modifyEmoji","location":"rest/dev.kord.rest.service/-emoji-service/modify-emoji.html","searchKeys":["modifyEmoji","inline suspend fun modifyEmoji(guildId: Snowflake, emojiId: Snowflake, builder: EmojiModifyBuilder.() -> Unit): DiscordEmoji","dev.kord.rest.service.EmojiService.modifyEmoji"]},{"name":"inline suspend fun modifyFollowupMessage(applicationId: Snowflake, interactionToken: String, messageId: Snowflake, builder: FollowupMessageModifyBuilder.() -> Unit = {}): DiscordMessage","description":"dev.kord.rest.service.InteractionService.modifyFollowupMessage","location":"rest/dev.kord.rest.service/-interaction-service/modify-followup-message.html","searchKeys":["modifyFollowupMessage","inline suspend fun modifyFollowupMessage(applicationId: Snowflake, interactionToken: String, messageId: Snowflake, builder: FollowupMessageModifyBuilder.() -> Unit = {}): DiscordMessage","dev.kord.rest.service.InteractionService.modifyFollowupMessage"]},{"name":"inline suspend fun modifyGlobalChatInputApplicationCommand(applicationId: Snowflake, commandId: Snowflake, builder: GlobalChatInputModifyBuilder.() -> Unit): DiscordApplicationCommand","description":"dev.kord.rest.service.InteractionService.modifyGlobalChatInputApplicationCommand","location":"rest/dev.kord.rest.service/-interaction-service/modify-global-chat-input-application-command.html","searchKeys":["modifyGlobalChatInputApplicationCommand","inline suspend fun modifyGlobalChatInputApplicationCommand(applicationId: Snowflake, commandId: Snowflake, builder: GlobalChatInputModifyBuilder.() -> Unit): DiscordApplicationCommand","dev.kord.rest.service.InteractionService.modifyGlobalChatInputApplicationCommand"]},{"name":"inline suspend fun modifyGlobalMessageApplicationCommand(applicationId: Snowflake, commandId: Snowflake, builder: GlobalMessageCommandModifyBuilder.() -> Unit): DiscordApplicationCommand","description":"dev.kord.rest.service.InteractionService.modifyGlobalMessageApplicationCommand","location":"rest/dev.kord.rest.service/-interaction-service/modify-global-message-application-command.html","searchKeys":["modifyGlobalMessageApplicationCommand","inline suspend fun modifyGlobalMessageApplicationCommand(applicationId: Snowflake, commandId: Snowflake, builder: GlobalMessageCommandModifyBuilder.() -> Unit): DiscordApplicationCommand","dev.kord.rest.service.InteractionService.modifyGlobalMessageApplicationCommand"]},{"name":"inline suspend fun modifyGlobalUserApplicationCommand(applicationId: Snowflake, commandId: Snowflake, builder: GlobalUserCommandModifyBuilder.() -> Unit): DiscordApplicationCommand","description":"dev.kord.rest.service.InteractionService.modifyGlobalUserApplicationCommand","location":"rest/dev.kord.rest.service/-interaction-service/modify-global-user-application-command.html","searchKeys":["modifyGlobalUserApplicationCommand","inline suspend fun modifyGlobalUserApplicationCommand(applicationId: Snowflake, commandId: Snowflake, builder: GlobalUserCommandModifyBuilder.() -> Unit): DiscordApplicationCommand","dev.kord.rest.service.InteractionService.modifyGlobalUserApplicationCommand"]},{"name":"inline suspend fun modifyGuild(guildId: Snowflake, builder: GuildModifyBuilder.() -> Unit): DiscordGuild","description":"dev.kord.rest.service.GuildService.modifyGuild","location":"rest/dev.kord.rest.service/-guild-service/modify-guild.html","searchKeys":["modifyGuild","inline suspend fun modifyGuild(guildId: Snowflake, builder: GuildModifyBuilder.() -> Unit): DiscordGuild","dev.kord.rest.service.GuildService.modifyGuild"]},{"name":"inline suspend fun modifyGuildChannelPosition(guildId: Snowflake, builder: GuildChannelPositionModifyBuilder.() -> Unit)","description":"dev.kord.rest.service.GuildService.modifyGuildChannelPosition","location":"rest/dev.kord.rest.service/-guild-service/modify-guild-channel-position.html","searchKeys":["modifyGuildChannelPosition","inline suspend fun modifyGuildChannelPosition(guildId: Snowflake, builder: GuildChannelPositionModifyBuilder.() -> Unit)","dev.kord.rest.service.GuildService.modifyGuildChannelPosition"]},{"name":"inline suspend fun modifyGuildChatInputApplicationCommand(applicationId: Snowflake, guildId: Snowflake, commandId: Snowflake, builder: ChatInputModifyBuilder.() -> Unit): DiscordApplicationCommand","description":"dev.kord.rest.service.InteractionService.modifyGuildChatInputApplicationCommand","location":"rest/dev.kord.rest.service/-interaction-service/modify-guild-chat-input-application-command.html","searchKeys":["modifyGuildChatInputApplicationCommand","inline suspend fun modifyGuildChatInputApplicationCommand(applicationId: Snowflake, guildId: Snowflake, commandId: Snowflake, builder: ChatInputModifyBuilder.() -> Unit): DiscordApplicationCommand","dev.kord.rest.service.InteractionService.modifyGuildChatInputApplicationCommand"]},{"name":"inline suspend fun modifyGuildIntegration(guildId: Snowflake, integrationId: Snowflake, builder: IntegrationModifyBuilder.() -> Unit)","description":"dev.kord.rest.service.GuildService.modifyGuildIntegration","location":"rest/dev.kord.rest.service/-guild-service/modify-guild-integration.html","searchKeys":["modifyGuildIntegration","inline suspend fun modifyGuildIntegration(guildId: Snowflake, integrationId: Snowflake, builder: IntegrationModifyBuilder.() -> Unit)","dev.kord.rest.service.GuildService.modifyGuildIntegration"]},{"name":"inline suspend fun modifyGuildMember(guildId: Snowflake, userId: Snowflake, builder: MemberModifyBuilder.() -> Unit): DiscordGuildMember","description":"dev.kord.rest.service.GuildService.modifyGuildMember","location":"rest/dev.kord.rest.service/-guild-service/modify-guild-member.html","searchKeys":["modifyGuildMember","inline suspend fun modifyGuildMember(guildId: Snowflake, userId: Snowflake, builder: MemberModifyBuilder.() -> Unit): DiscordGuildMember","dev.kord.rest.service.GuildService.modifyGuildMember"]},{"name":"inline suspend fun modifyGuildMessageApplicationCommand(applicationId: Snowflake, guildId: Snowflake, commandId: Snowflake, builder: MessageCommandModifyBuilder.() -> Unit): DiscordApplicationCommand","description":"dev.kord.rest.service.InteractionService.modifyGuildMessageApplicationCommand","location":"rest/dev.kord.rest.service/-interaction-service/modify-guild-message-application-command.html","searchKeys":["modifyGuildMessageApplicationCommand","inline suspend fun modifyGuildMessageApplicationCommand(applicationId: Snowflake, guildId: Snowflake, commandId: Snowflake, builder: MessageCommandModifyBuilder.() -> Unit): DiscordApplicationCommand","dev.kord.rest.service.InteractionService.modifyGuildMessageApplicationCommand"]},{"name":"inline suspend fun modifyGuildRole(guildId: Snowflake, roleId: Snowflake, builder: RoleModifyBuilder.() -> Unit): DiscordRole","description":"dev.kord.rest.service.GuildService.modifyGuildRole","location":"rest/dev.kord.rest.service/-guild-service/modify-guild-role.html","searchKeys":["modifyGuildRole","inline suspend fun modifyGuildRole(guildId: Snowflake, roleId: Snowflake, builder: RoleModifyBuilder.() -> Unit): DiscordRole","dev.kord.rest.service.GuildService.modifyGuildRole"]},{"name":"inline suspend fun modifyGuildRolePosition(guildId: Snowflake, builder: RolePositionsModifyBuilder.() -> Unit): List<DiscordRole>","description":"dev.kord.rest.service.GuildService.modifyGuildRolePosition","location":"rest/dev.kord.rest.service/-guild-service/modify-guild-role-position.html","searchKeys":["modifyGuildRolePosition","inline suspend fun modifyGuildRolePosition(guildId: Snowflake, builder: RolePositionsModifyBuilder.() -> Unit): List<DiscordRole>","dev.kord.rest.service.GuildService.modifyGuildRolePosition"]},{"name":"inline suspend fun modifyGuildSticker(guildId: Snowflake, id: Snowflake, builder: StickerModifyBuilder.() -> Unit): DiscordMessageSticker","description":"dev.kord.rest.service.StickerService.modifyGuildSticker","location":"rest/dev.kord.rest.service/-sticker-service/modify-guild-sticker.html","searchKeys":["modifyGuildSticker","inline suspend fun modifyGuildSticker(guildId: Snowflake, id: Snowflake, builder: StickerModifyBuilder.() -> Unit): DiscordMessageSticker","dev.kord.rest.service.StickerService.modifyGuildSticker"]},{"name":"inline suspend fun modifyGuildTemplate(guildId: Snowflake, code: String, builder: GuildTemplateModifyBuilder.() -> Unit): DiscordTemplate","description":"dev.kord.rest.service.TemplateService.modifyGuildTemplate","location":"rest/dev.kord.rest.service/-template-service/modify-guild-template.html","searchKeys":["modifyGuildTemplate","inline suspend fun modifyGuildTemplate(guildId: Snowflake, code: String, builder: GuildTemplateModifyBuilder.() -> Unit): DiscordTemplate","dev.kord.rest.service.TemplateService.modifyGuildTemplate"]},{"name":"inline suspend fun modifyGuildUserApplicationCommand(applicationId: Snowflake, guildId: Snowflake, commandId: Snowflake, builder: UserCommandModifyBuilder.() -> Unit): DiscordApplicationCommand","description":"dev.kord.rest.service.InteractionService.modifyGuildUserApplicationCommand","location":"rest/dev.kord.rest.service/-interaction-service/modify-guild-user-application-command.html","searchKeys":["modifyGuildUserApplicationCommand","inline suspend fun modifyGuildUserApplicationCommand(applicationId: Snowflake, guildId: Snowflake, commandId: Snowflake, builder: UserCommandModifyBuilder.() -> Unit): DiscordApplicationCommand","dev.kord.rest.service.InteractionService.modifyGuildUserApplicationCommand"]},{"name":"inline suspend fun modifyGuildWidget(guildId: Snowflake, builder: GuildWidgetModifyBuilder.() -> Unit): DiscordGuildWidget","description":"dev.kord.rest.service.GuildService.modifyGuildWidget","location":"rest/dev.kord.rest.service/-guild-service/modify-guild-widget.html","searchKeys":["modifyGuildWidget","inline suspend fun modifyGuildWidget(guildId: Snowflake, builder: GuildWidgetModifyBuilder.() -> Unit): DiscordGuildWidget","dev.kord.rest.service.GuildService.modifyGuildWidget"]},{"name":"inline suspend fun modifyInteractionResponse(applicationId: Snowflake, interactionToken: String, builder: InteractionResponseModifyBuilder.() -> Unit): DiscordMessage","description":"dev.kord.rest.service.InteractionService.modifyInteractionResponse","location":"rest/dev.kord.rest.service/-interaction-service/modify-interaction-response.html","searchKeys":["modifyInteractionResponse","inline suspend fun modifyInteractionResponse(applicationId: Snowflake, interactionToken: String, builder: InteractionResponseModifyBuilder.() -> Unit): DiscordMessage","dev.kord.rest.service.InteractionService.modifyInteractionResponse"]},{"name":"inline suspend fun modifyKeywordAutoModerationRule(guildId: Snowflake, ruleId: Snowflake, builder: KeywordAutoModerationRuleModifyBuilder.() -> Unit): DiscordAutoModerationRule","description":"dev.kord.rest.service.AutoModerationService.modifyKeywordAutoModerationRule","location":"rest/dev.kord.rest.service/-auto-moderation-service/modify-keyword-auto-moderation-rule.html","searchKeys":["modifyKeywordAutoModerationRule","inline suspend fun modifyKeywordAutoModerationRule(guildId: Snowflake, ruleId: Snowflake, builder: KeywordAutoModerationRuleModifyBuilder.() -> Unit): DiscordAutoModerationRule","dev.kord.rest.service.AutoModerationService.modifyKeywordAutoModerationRule"]},{"name":"inline suspend fun modifyKeywordPresetAutoModerationRule(guildId: Snowflake, ruleId: Snowflake, builder: KeywordPresetAutoModerationRuleModifyBuilder.() -> Unit): DiscordAutoModerationRule","description":"dev.kord.rest.service.AutoModerationService.modifyKeywordPresetAutoModerationRule","location":"rest/dev.kord.rest.service/-auto-moderation-service/modify-keyword-preset-auto-moderation-rule.html","searchKeys":["modifyKeywordPresetAutoModerationRule","inline suspend fun modifyKeywordPresetAutoModerationRule(guildId: Snowflake, ruleId: Snowflake, builder: KeywordPresetAutoModerationRuleModifyBuilder.() -> Unit): DiscordAutoModerationRule","dev.kord.rest.service.AutoModerationService.modifyKeywordPresetAutoModerationRule"]},{"name":"inline suspend fun modifyMentionSpamAutoModerationRule(guildId: Snowflake, ruleId: Snowflake, builder: MentionSpamAutoModerationRuleModifyBuilder.() -> Unit): DiscordAutoModerationRule","description":"dev.kord.rest.service.AutoModerationService.modifyMentionSpamAutoModerationRule","location":"rest/dev.kord.rest.service/-auto-moderation-service/modify-mention-spam-auto-moderation-rule.html","searchKeys":["modifyMentionSpamAutoModerationRule","inline suspend fun modifyMentionSpamAutoModerationRule(guildId: Snowflake, ruleId: Snowflake, builder: MentionSpamAutoModerationRuleModifyBuilder.() -> Unit): DiscordAutoModerationRule","dev.kord.rest.service.AutoModerationService.modifyMentionSpamAutoModerationRule"]},{"name":"inline suspend fun modifySpamAutoModerationRule(guildId: Snowflake, ruleId: Snowflake, builder: SpamAutoModerationRuleModifyBuilder.() -> Unit): DiscordAutoModerationRule","description":"dev.kord.rest.service.AutoModerationService.modifySpamAutoModerationRule","location":"rest/dev.kord.rest.service/-auto-moderation-service/modify-spam-auto-moderation-rule.html","searchKeys":["modifySpamAutoModerationRule","inline suspend fun modifySpamAutoModerationRule(guildId: Snowflake, ruleId: Snowflake, builder: SpamAutoModerationRuleModifyBuilder.() -> Unit): DiscordAutoModerationRule","dev.kord.rest.service.AutoModerationService.modifySpamAutoModerationRule"]},{"name":"inline suspend fun modifyStageInstance(channelId: Snowflake, builder: StageInstanceModifyBuilder.() -> Unit): DiscordStageInstance","description":"dev.kord.rest.service.StageInstanceService.modifyStageInstance","location":"rest/dev.kord.rest.service/-stage-instance-service/modify-stage-instance.html","searchKeys":["modifyStageInstance","inline suspend fun modifyStageInstance(channelId: Snowflake, builder: StageInstanceModifyBuilder.() -> Unit): DiscordStageInstance","dev.kord.rest.service.StageInstanceService.modifyStageInstance"]},{"name":"inline suspend fun modifyUntypedAutoModerationRule(guildId: Snowflake, ruleId: Snowflake, builder: UntypedAutoModerationRuleModifyBuilder.() -> Unit): DiscordAutoModerationRule","description":"dev.kord.rest.service.AutoModerationService.modifyUntypedAutoModerationRule","location":"rest/dev.kord.rest.service/-auto-moderation-service/modify-untyped-auto-moderation-rule.html","searchKeys":["modifyUntypedAutoModerationRule","inline suspend fun modifyUntypedAutoModerationRule(guildId: Snowflake, ruleId: Snowflake, builder: UntypedAutoModerationRuleModifyBuilder.() -> Unit): DiscordAutoModerationRule","dev.kord.rest.service.AutoModerationService.modifyUntypedAutoModerationRule"]},{"name":"inline suspend fun modifyWebhook(webhookId: Snowflake, builder: WebhookModifyBuilder.() -> Unit): DiscordWebhook","description":"dev.kord.rest.service.WebhookService.modifyWebhook","location":"rest/dev.kord.rest.service/-webhook-service/modify-webhook.html","searchKeys":["modifyWebhook","inline suspend fun modifyWebhook(webhookId: Snowflake, builder: WebhookModifyBuilder.() -> Unit): DiscordWebhook","dev.kord.rest.service.WebhookService.modifyWebhook"]},{"name":"inline suspend fun modifyWebhookWithToken(webhookId: Snowflake, token: String, builder: WebhookModifyBuilder.() -> Unit): DiscordWebhook","description":"dev.kord.rest.service.WebhookService.modifyWebhookWithToken","location":"rest/dev.kord.rest.service/-webhook-service/modify-webhook-with-token.html","searchKeys":["modifyWebhookWithToken","inline suspend fun modifyWebhookWithToken(webhookId: Snowflake, token: String, builder: WebhookModifyBuilder.() -> Unit): DiscordWebhook","dev.kord.rest.service.WebhookService.modifyWebhookWithToken"]},{"name":"interface ApplicationCommandCreateBuilder : LocalizedNameCreateBuilder, RequestBuilder<ApplicationCommandCreateRequest> ","description":"dev.kord.rest.builder.interaction.ApplicationCommandCreateBuilder","location":"rest/dev.kord.rest.builder.interaction/-application-command-create-builder/index.html","searchKeys":["ApplicationCommandCreateBuilder","interface ApplicationCommandCreateBuilder : LocalizedNameCreateBuilder, RequestBuilder<ApplicationCommandCreateRequest> ","dev.kord.rest.builder.interaction.ApplicationCommandCreateBuilder"]},{"name":"interface ApplicationCommandModifyBuilder : LocalizedNameModifyBuilder, RequestBuilder<ApplicationCommandModifyRequest> ","description":"dev.kord.rest.builder.interaction.ApplicationCommandModifyBuilder","location":"rest/dev.kord.rest.builder.interaction/-application-command-modify-builder/index.html","searchKeys":["ApplicationCommandModifyBuilder","interface ApplicationCommandModifyBuilder : LocalizedNameModifyBuilder, RequestBuilder<ApplicationCommandModifyRequest> ","dev.kord.rest.builder.interaction.ApplicationCommandModifyBuilder"]},{"name":"interface AuditBuilder","description":"dev.kord.rest.builder.AuditBuilder","location":"rest/dev.kord.rest.builder/-audit-builder/index.html","searchKeys":["AuditBuilder","interface AuditBuilder","dev.kord.rest.builder.AuditBuilder"]},{"name":"interface AuditRequestBuilder<out T : Any> : AuditBuilder, RequestBuilder<T> ","description":"dev.kord.rest.builder.AuditRequestBuilder","location":"rest/dev.kord.rest.builder/-audit-request-builder/index.html","searchKeys":["AuditRequestBuilder","interface AuditRequestBuilder<out T : Any> : AuditBuilder, RequestBuilder<T> ","dev.kord.rest.builder.AuditRequestBuilder"]},{"name":"interface AutoModerationRuleBuilder : AuditBuilder","description":"dev.kord.rest.builder.automoderation.AutoModerationRuleBuilder","location":"rest/dev.kord.rest.builder.automoderation/-auto-moderation-rule-builder/index.html","searchKeys":["AutoModerationRuleBuilder","interface AutoModerationRuleBuilder : AuditBuilder","dev.kord.rest.builder.automoderation.AutoModerationRuleBuilder"]},{"name":"interface BaseInputChatBuilder","description":"dev.kord.rest.builder.interaction.BaseInputChatBuilder","location":"rest/dev.kord.rest.builder.interaction/-base-input-chat-builder/index.html","searchKeys":["BaseInputChatBuilder","interface BaseInputChatBuilder","dev.kord.rest.builder.interaction.BaseInputChatBuilder"]},{"name":"interface BeforeOrAfter : Position","description":"dev.kord.rest.route.Position.BeforeOrAfter","location":"rest/dev.kord.rest.route/-position/-before-or-after/index.html","searchKeys":["BeforeOrAfter","interface BeforeOrAfter : Position","dev.kord.rest.route.Position.BeforeOrAfter"]},{"name":"interface ChatInputCreateBuilder : LocalizedDescriptionCreateBuilder, ApplicationCommandCreateBuilder, RootInputChatBuilder","description":"dev.kord.rest.builder.interaction.ChatInputCreateBuilder","location":"rest/dev.kord.rest.builder.interaction/-chat-input-create-builder/index.html","searchKeys":["ChatInputCreateBuilder","interface ChatInputCreateBuilder : LocalizedDescriptionCreateBuilder, ApplicationCommandCreateBuilder, RootInputChatBuilder","dev.kord.rest.builder.interaction.ChatInputCreateBuilder"]},{"name":"interface ChatInputModifyBuilder : LocalizedDescriptionModifyBuilder, ApplicationCommandModifyBuilder, RootInputChatBuilder","description":"dev.kord.rest.builder.interaction.ChatInputModifyBuilder","location":"rest/dev.kord.rest.builder.interaction/-chat-input-modify-builder/index.html","searchKeys":["ChatInputModifyBuilder","interface ChatInputModifyBuilder : LocalizedDescriptionModifyBuilder, ApplicationCommandModifyBuilder, RootInputChatBuilder","dev.kord.rest.builder.interaction.ChatInputModifyBuilder"]},{"name":"interface ComponentBuilder","description":"dev.kord.rest.builder.component.ComponentBuilder","location":"rest/dev.kord.rest.builder.component/-component-builder/index.html","searchKeys":["ComponentBuilder","interface ComponentBuilder","dev.kord.rest.builder.component.ComponentBuilder"]},{"name":"interface GlobalApplicationCommandCreateBuilder : ApplicationCommandCreateBuilder","description":"dev.kord.rest.builder.interaction.GlobalApplicationCommandCreateBuilder","location":"rest/dev.kord.rest.builder.interaction/-global-application-command-create-builder/index.html","searchKeys":["GlobalApplicationCommandCreateBuilder","interface GlobalApplicationCommandCreateBuilder : ApplicationCommandCreateBuilder","dev.kord.rest.builder.interaction.GlobalApplicationCommandCreateBuilder"]},{"name":"interface GlobalApplicationCommandModifyBuilder : ApplicationCommandModifyBuilder","description":"dev.kord.rest.builder.interaction.GlobalApplicationCommandModifyBuilder","location":"rest/dev.kord.rest.builder.interaction/-global-application-command-modify-builder/index.html","searchKeys":["GlobalApplicationCommandModifyBuilder","interface GlobalApplicationCommandModifyBuilder : ApplicationCommandModifyBuilder","dev.kord.rest.builder.interaction.GlobalApplicationCommandModifyBuilder"]},{"name":"interface GlobalChatInputCreateBuilder : ChatInputCreateBuilder, GlobalApplicationCommandCreateBuilder","description":"dev.kord.rest.builder.interaction.GlobalChatInputCreateBuilder","location":"rest/dev.kord.rest.builder.interaction/-global-chat-input-create-builder/index.html","searchKeys":["GlobalChatInputCreateBuilder","interface GlobalChatInputCreateBuilder : ChatInputCreateBuilder, GlobalApplicationCommandCreateBuilder","dev.kord.rest.builder.interaction.GlobalChatInputCreateBuilder"]},{"name":"interface GlobalChatInputModifyBuilder : ChatInputModifyBuilder, GlobalApplicationCommandModifyBuilder","description":"dev.kord.rest.builder.interaction.GlobalChatInputModifyBuilder","location":"rest/dev.kord.rest.builder.interaction/-global-chat-input-modify-builder/index.html","searchKeys":["GlobalChatInputModifyBuilder","interface GlobalChatInputModifyBuilder : ChatInputModifyBuilder, GlobalApplicationCommandModifyBuilder","dev.kord.rest.builder.interaction.GlobalChatInputModifyBuilder"]},{"name":"interface GlobalMessageCommandCreateBuilder : MessageCommandCreateBuilder, GlobalApplicationCommandCreateBuilder","description":"dev.kord.rest.builder.interaction.GlobalMessageCommandCreateBuilder","location":"rest/dev.kord.rest.builder.interaction/-global-message-command-create-builder/index.html","searchKeys":["GlobalMessageCommandCreateBuilder","interface GlobalMessageCommandCreateBuilder : MessageCommandCreateBuilder, GlobalApplicationCommandCreateBuilder","dev.kord.rest.builder.interaction.GlobalMessageCommandCreateBuilder"]},{"name":"interface GlobalMessageCommandModifyBuilder : MessageCommandModifyBuilder, GlobalApplicationCommandModifyBuilder","description":"dev.kord.rest.builder.interaction.GlobalMessageCommandModifyBuilder","location":"rest/dev.kord.rest.builder.interaction/-global-message-command-modify-builder/index.html","searchKeys":["GlobalMessageCommandModifyBuilder","interface GlobalMessageCommandModifyBuilder : MessageCommandModifyBuilder, GlobalApplicationCommandModifyBuilder","dev.kord.rest.builder.interaction.GlobalMessageCommandModifyBuilder"]},{"name":"interface GlobalUserCommandCreateBuilder : UserCommandCreateBuilder, GlobalApplicationCommandCreateBuilder","description":"dev.kord.rest.builder.interaction.GlobalUserCommandCreateBuilder","location":"rest/dev.kord.rest.builder.interaction/-global-user-command-create-builder/index.html","searchKeys":["GlobalUserCommandCreateBuilder","interface GlobalUserCommandCreateBuilder : UserCommandCreateBuilder, GlobalApplicationCommandCreateBuilder","dev.kord.rest.builder.interaction.GlobalUserCommandCreateBuilder"]},{"name":"interface GlobalUserCommandModifyBuilder : UserCommandModifyBuilder, GlobalApplicationCommandModifyBuilder","description":"dev.kord.rest.builder.interaction.GlobalUserCommandModifyBuilder","location":"rest/dev.kord.rest.builder.interaction/-global-user-command-modify-builder/index.html","searchKeys":["GlobalUserCommandModifyBuilder","interface GlobalUserCommandModifyBuilder : UserCommandModifyBuilder, GlobalApplicationCommandModifyBuilder","dev.kord.rest.builder.interaction.GlobalUserCommandModifyBuilder"]},{"name":"interface KeywordAutoModerationRuleBuilder : TimeoutAutoModerationRuleBuilder","description":"dev.kord.rest.builder.automoderation.KeywordAutoModerationRuleBuilder","location":"rest/dev.kord.rest.builder.automoderation/-keyword-auto-moderation-rule-builder/index.html","searchKeys":["KeywordAutoModerationRuleBuilder","interface KeywordAutoModerationRuleBuilder : TimeoutAutoModerationRuleBuilder","dev.kord.rest.builder.automoderation.KeywordAutoModerationRuleBuilder"]},{"name":"interface KeywordPresetAutoModerationRuleBuilder : TypedAutoModerationRuleBuilder","description":"dev.kord.rest.builder.automoderation.KeywordPresetAutoModerationRuleBuilder","location":"rest/dev.kord.rest.builder.automoderation/-keyword-preset-auto-moderation-rule-builder/index.html","searchKeys":["KeywordPresetAutoModerationRuleBuilder","interface KeywordPresetAutoModerationRuleBuilder : TypedAutoModerationRuleBuilder","dev.kord.rest.builder.automoderation.KeywordPresetAutoModerationRuleBuilder"]},{"name":"interface LocalizedDescriptionBuilder","description":"dev.kord.rest.builder.interaction.LocalizedDescriptionBuilder","location":"rest/dev.kord.rest.builder.interaction/-localized-description-builder/index.html","searchKeys":["LocalizedDescriptionBuilder","interface LocalizedDescriptionBuilder","dev.kord.rest.builder.interaction.LocalizedDescriptionBuilder"]},{"name":"interface LocalizedDescriptionCreateBuilder : LocalizedDescriptionBuilder","description":"dev.kord.rest.builder.interaction.LocalizedDescriptionCreateBuilder","location":"rest/dev.kord.rest.builder.interaction/-localized-description-create-builder/index.html","searchKeys":["LocalizedDescriptionCreateBuilder","interface LocalizedDescriptionCreateBuilder : LocalizedDescriptionBuilder","dev.kord.rest.builder.interaction.LocalizedDescriptionCreateBuilder"]},{"name":"interface LocalizedDescriptionModifyBuilder : LocalizedDescriptionBuilder","description":"dev.kord.rest.builder.interaction.LocalizedDescriptionModifyBuilder","location":"rest/dev.kord.rest.builder.interaction/-localized-description-modify-builder/index.html","searchKeys":["LocalizedDescriptionModifyBuilder","interface LocalizedDescriptionModifyBuilder : LocalizedDescriptionBuilder","dev.kord.rest.builder.interaction.LocalizedDescriptionModifyBuilder"]},{"name":"interface LocalizedNameBuilder","description":"dev.kord.rest.builder.interaction.LocalizedNameBuilder","location":"rest/dev.kord.rest.builder.interaction/-localized-name-builder/index.html","searchKeys":["LocalizedNameBuilder","interface LocalizedNameBuilder","dev.kord.rest.builder.interaction.LocalizedNameBuilder"]},{"name":"interface LocalizedNameCreateBuilder : LocalizedNameBuilder","description":"dev.kord.rest.builder.interaction.LocalizedNameCreateBuilder","location":"rest/dev.kord.rest.builder.interaction/-localized-name-create-builder/index.html","searchKeys":["LocalizedNameCreateBuilder","interface LocalizedNameCreateBuilder : LocalizedNameBuilder","dev.kord.rest.builder.interaction.LocalizedNameCreateBuilder"]},{"name":"interface LocalizedNameModifyBuilder : LocalizedNameBuilder","description":"dev.kord.rest.builder.interaction.LocalizedNameModifyBuilder","location":"rest/dev.kord.rest.builder.interaction/-localized-name-modify-builder/index.html","searchKeys":["LocalizedNameModifyBuilder","interface LocalizedNameModifyBuilder : LocalizedNameBuilder","dev.kord.rest.builder.interaction.LocalizedNameModifyBuilder"]},{"name":"interface MentionSpamAutoModerationRuleBuilder : TimeoutAutoModerationRuleBuilder","description":"dev.kord.rest.builder.automoderation.MentionSpamAutoModerationRuleBuilder","location":"rest/dev.kord.rest.builder.automoderation/-mention-spam-auto-moderation-rule-builder/index.html","searchKeys":["MentionSpamAutoModerationRuleBuilder","interface MentionSpamAutoModerationRuleBuilder : TimeoutAutoModerationRuleBuilder","dev.kord.rest.builder.automoderation.MentionSpamAutoModerationRuleBuilder"]},{"name":"interface MessageCommandCreateBuilder : ApplicationCommandCreateBuilder","description":"dev.kord.rest.builder.interaction.MessageCommandCreateBuilder","location":"rest/dev.kord.rest.builder.interaction/-message-command-create-builder/index.html","searchKeys":["MessageCommandCreateBuilder","interface MessageCommandCreateBuilder : ApplicationCommandCreateBuilder","dev.kord.rest.builder.interaction.MessageCommandCreateBuilder"]},{"name":"interface MessageCommandModifyBuilder : ApplicationCommandModifyBuilder","description":"dev.kord.rest.builder.interaction.MessageCommandModifyBuilder","location":"rest/dev.kord.rest.builder.interaction/-message-command-modify-builder/index.html","searchKeys":["MessageCommandModifyBuilder","interface MessageCommandModifyBuilder : ApplicationCommandModifyBuilder","dev.kord.rest.builder.interaction.MessageCommandModifyBuilder"]},{"name":"interface MessageComponentBuilder : ComponentBuilder","description":"dev.kord.rest.builder.component.MessageComponentBuilder","location":"rest/dev.kord.rest.builder.component/-message-component-builder/index.html","searchKeys":["MessageComponentBuilder","interface MessageComponentBuilder : ComponentBuilder","dev.kord.rest.builder.component.MessageComponentBuilder"]},{"name":"interface MessageCreateBuilder","description":"dev.kord.rest.builder.message.create.MessageCreateBuilder","location":"rest/dev.kord.rest.builder.message.create/-message-create-builder/index.html","searchKeys":["MessageCreateBuilder","interface MessageCreateBuilder","dev.kord.rest.builder.message.create.MessageCreateBuilder"]},{"name":"interface MessageModifyBuilder","description":"dev.kord.rest.builder.message.modify.MessageModifyBuilder","location":"rest/dev.kord.rest.builder.message.modify/-message-modify-builder/index.html","searchKeys":["MessageModifyBuilder","interface MessageModifyBuilder","dev.kord.rest.builder.message.modify.MessageModifyBuilder"]},{"name":"interface PermissionOverwritesBuilder","description":"dev.kord.rest.builder.channel.PermissionOverwritesBuilder","location":"rest/dev.kord.rest.builder.channel/-permission-overwrites-builder/index.html","searchKeys":["PermissionOverwritesBuilder","interface PermissionOverwritesBuilder","dev.kord.rest.builder.channel.PermissionOverwritesBuilder"]},{"name":"interface PermissionOverwritesCreateBuilder : PermissionOverwritesBuilder","description":"dev.kord.rest.builder.channel.PermissionOverwritesCreateBuilder","location":"rest/dev.kord.rest.builder.channel/-permission-overwrites-create-builder/index.html","searchKeys":["PermissionOverwritesCreateBuilder","interface PermissionOverwritesCreateBuilder : PermissionOverwritesBuilder","dev.kord.rest.builder.channel.PermissionOverwritesCreateBuilder"]},{"name":"interface PermissionOverwritesModifyBuilder : PermissionOverwritesBuilder","description":"dev.kord.rest.builder.channel.PermissionOverwritesModifyBuilder","location":"rest/dev.kord.rest.builder.channel/-permission-overwrites-modify-builder/index.html","searchKeys":["PermissionOverwritesModifyBuilder","interface PermissionOverwritesModifyBuilder : PermissionOverwritesBuilder","dev.kord.rest.builder.channel.PermissionOverwritesModifyBuilder"]},{"name":"interface Position","description":"dev.kord.rest.route.Position","location":"rest/dev.kord.rest.route/-position/index.html","searchKeys":["Position","interface Position","dev.kord.rest.route.Position"]},{"name":"interface RequestBuilder<out T : Any>","description":"dev.kord.rest.builder.RequestBuilder","location":"rest/dev.kord.rest.builder/-request-builder/index.html","searchKeys":["RequestBuilder","interface RequestBuilder<out T : Any>","dev.kord.rest.builder.RequestBuilder"]},{"name":"interface RequestHandler","description":"dev.kord.rest.request.RequestHandler","location":"rest/dev.kord.rest.request/-request-handler/index.html","searchKeys":["RequestHandler","interface RequestHandler","dev.kord.rest.request.RequestHandler"]},{"name":"interface RequestRateLimiter","description":"dev.kord.rest.ratelimit.RequestRateLimiter","location":"rest/dev.kord.rest.ratelimit/-request-rate-limiter/index.html","searchKeys":["RequestRateLimiter","interface RequestRateLimiter","dev.kord.rest.ratelimit.RequestRateLimiter"]},{"name":"interface RequestToken","description":"dev.kord.rest.ratelimit.RequestToken","location":"rest/dev.kord.rest.ratelimit/-request-token/index.html","searchKeys":["RequestToken","interface RequestToken","dev.kord.rest.ratelimit.RequestToken"]},{"name":"interface ResponseMapper<T>","description":"dev.kord.rest.route.ResponseMapper","location":"rest/dev.kord.rest.route/-response-mapper/index.html","searchKeys":["ResponseMapper","interface ResponseMapper<T>","dev.kord.rest.route.ResponseMapper"]},{"name":"interface RootInputChatBuilder : BaseInputChatBuilder","description":"dev.kord.rest.builder.interaction.RootInputChatBuilder","location":"rest/dev.kord.rest.builder.interaction/-root-input-chat-builder/index.html","searchKeys":["RootInputChatBuilder","interface RootInputChatBuilder : BaseInputChatBuilder","dev.kord.rest.builder.interaction.RootInputChatBuilder"]},{"name":"interface SpamAutoModerationRuleBuilder : TypedAutoModerationRuleBuilder","description":"dev.kord.rest.builder.automoderation.SpamAutoModerationRuleBuilder","location":"rest/dev.kord.rest.builder.automoderation/-spam-auto-moderation-rule-builder/index.html","searchKeys":["SpamAutoModerationRuleBuilder","interface SpamAutoModerationRuleBuilder : TypedAutoModerationRuleBuilder","dev.kord.rest.builder.automoderation.SpamAutoModerationRuleBuilder"]},{"name":"interface TimeoutAutoModerationRuleBuilder : TypedAutoModerationRuleBuilder","description":"dev.kord.rest.builder.automoderation.TimeoutAutoModerationRuleBuilder","location":"rest/dev.kord.rest.builder.automoderation/-timeout-auto-moderation-rule-builder/index.html","searchKeys":["TimeoutAutoModerationRuleBuilder","interface TimeoutAutoModerationRuleBuilder : TypedAutoModerationRuleBuilder","dev.kord.rest.builder.automoderation.TimeoutAutoModerationRuleBuilder"]},{"name":"interface TypedAutoModerationRuleBuilder : AutoModerationRuleBuilder","description":"dev.kord.rest.builder.automoderation.TypedAutoModerationRuleBuilder","location":"rest/dev.kord.rest.builder.automoderation/-typed-auto-moderation-rule-builder/index.html","searchKeys":["TypedAutoModerationRuleBuilder","interface TypedAutoModerationRuleBuilder : AutoModerationRuleBuilder","dev.kord.rest.builder.automoderation.TypedAutoModerationRuleBuilder"]},{"name":"interface UserCommandCreateBuilder : ApplicationCommandCreateBuilder","description":"dev.kord.rest.builder.interaction.UserCommandCreateBuilder","location":"rest/dev.kord.rest.builder.interaction/-user-command-create-builder/index.html","searchKeys":["UserCommandCreateBuilder","interface UserCommandCreateBuilder : ApplicationCommandCreateBuilder","dev.kord.rest.builder.interaction.UserCommandCreateBuilder"]},{"name":"interface UserCommandModifyBuilder : ApplicationCommandModifyBuilder","description":"dev.kord.rest.builder.interaction.UserCommandModifyBuilder","location":"rest/dev.kord.rest.builder.interaction/-user-command-modify-builder/index.html","searchKeys":["UserCommandModifyBuilder","interface UserCommandModifyBuilder : ApplicationCommandModifyBuilder","dev.kord.rest.builder.interaction.UserCommandModifyBuilder"]},{"name":"lateinit var text: String","description":"dev.kord.rest.builder.message.EmbedBuilder.Footer.text","location":"rest/dev.kord.rest.builder.message/-embed-builder/-footer/text.html","searchKeys":["text","lateinit var text: String","dev.kord.rest.builder.message.EmbedBuilder.Footer.text"]},{"name":"lateinit var url: String","description":"dev.kord.rest.builder.message.EmbedBuilder.Thumbnail.url","location":"rest/dev.kord.rest.builder.message/-embed-builder/-thumbnail/url.html","searchKeys":["url","lateinit var url: String","dev.kord.rest.builder.message.EmbedBuilder.Thumbnail.url"]},{"name":"object ActiveThreadsGet : Route<ListThreadsResponse> ","description":"dev.kord.rest.route.Route.ActiveThreadsGet","location":"rest/dev.kord.rest.route/-route/-active-threads-get/index.html","searchKeys":["ActiveThreadsGet","object ActiveThreadsGet : Route<ListThreadsResponse> ","dev.kord.rest.route.Route.ActiveThreadsGet"]},{"name":"object AddThreadMemberPut : Route<Unit> ","description":"dev.kord.rest.route.Route.AddThreadMemberPut","location":"rest/dev.kord.rest.route/-route/-add-thread-member-put/index.html","searchKeys":["AddThreadMemberPut","object AddThreadMemberPut : Route<Unit> ","dev.kord.rest.route.Route.AddThreadMemberPut"]},{"name":"object AllReactionsDelete : Route<Unit> ","description":"dev.kord.rest.route.Route.AllReactionsDelete","location":"rest/dev.kord.rest.route/-route/-all-reactions-delete/index.html","searchKeys":["AllReactionsDelete","object AllReactionsDelete : Route<Unit> ","dev.kord.rest.route.Route.AllReactionsDelete"]},{"name":"object ApplicationCommandPermissionsGet : Route<DiscordGuildApplicationCommandPermissions> ","description":"dev.kord.rest.route.Route.ApplicationCommandPermissionsGet","location":"rest/dev.kord.rest.route/-route/-application-command-permissions-get/index.html","searchKeys":["ApplicationCommandPermissionsGet","object ApplicationCommandPermissionsGet : Route<DiscordGuildApplicationCommandPermissions> ","dev.kord.rest.route.Route.ApplicationCommandPermissionsGet"]},{"name":"object ApplicationId : Route.Key","description":"dev.kord.rest.route.Route.ApplicationId","location":"rest/dev.kord.rest.route/-route/-application-id/index.html","searchKeys":["ApplicationId","object ApplicationId : Route.Key","dev.kord.rest.route.Route.ApplicationId"]},{"name":"object AuditLogGet : Route<DiscordAuditLog> ","description":"dev.kord.rest.route.Route.AuditLogGet","location":"rest/dev.kord.rest.route/-route/-audit-log-get/index.html","searchKeys":["AuditLogGet","object AuditLogGet : Route<DiscordAuditLog> ","dev.kord.rest.route.Route.AuditLogGet"]},{"name":"object AutoModerationRuleCreate : Route<DiscordAutoModerationRule> ","description":"dev.kord.rest.route.Route.AutoModerationRuleCreate","location":"rest/dev.kord.rest.route/-route/-auto-moderation-rule-create/index.html","searchKeys":["AutoModerationRuleCreate","object AutoModerationRuleCreate : Route<DiscordAutoModerationRule> ","dev.kord.rest.route.Route.AutoModerationRuleCreate"]},{"name":"object AutoModerationRuleDelete : Route<Unit> ","description":"dev.kord.rest.route.Route.AutoModerationRuleDelete","location":"rest/dev.kord.rest.route/-route/-auto-moderation-rule-delete/index.html","searchKeys":["AutoModerationRuleDelete","object AutoModerationRuleDelete : Route<Unit> ","dev.kord.rest.route.Route.AutoModerationRuleDelete"]},{"name":"object AutoModerationRuleGet : Route<DiscordAutoModerationRule> ","description":"dev.kord.rest.route.Route.AutoModerationRuleGet","location":"rest/dev.kord.rest.route/-route/-auto-moderation-rule-get/index.html","searchKeys":["AutoModerationRuleGet","object AutoModerationRuleGet : Route<DiscordAutoModerationRule> ","dev.kord.rest.route.Route.AutoModerationRuleGet"]},{"name":"object AutoModerationRuleId : Route.Key","description":"dev.kord.rest.route.Route.AutoModerationRuleId","location":"rest/dev.kord.rest.route/-route/-auto-moderation-rule-id/index.html","searchKeys":["AutoModerationRuleId","object AutoModerationRuleId : Route.Key","dev.kord.rest.route.Route.AutoModerationRuleId"]},{"name":"object AutoModerationRuleModify : Route<DiscordAutoModerationRule> ","description":"dev.kord.rest.route.Route.AutoModerationRuleModify","location":"rest/dev.kord.rest.route/-route/-auto-moderation-rule-modify/index.html","searchKeys":["AutoModerationRuleModify","object AutoModerationRuleModify : Route<DiscordAutoModerationRule> ","dev.kord.rest.route.Route.AutoModerationRuleModify"]},{"name":"object AutoModerationRulesForGuildList : Route<List<DiscordAutoModerationRule>> ","description":"dev.kord.rest.route.Route.AutoModerationRulesForGuildList","location":"rest/dev.kord.rest.route/-route/-auto-moderation-rules-for-guild-list/index.html","searchKeys":["AutoModerationRulesForGuildList","object AutoModerationRulesForGuildList : Route<List<DiscordAutoModerationRule>> ","dev.kord.rest.route.Route.AutoModerationRulesForGuildList"]},{"name":"object BulkMessageDeletePost : Route<Unit> ","description":"dev.kord.rest.route.Route.BulkMessageDeletePost","location":"rest/dev.kord.rest.route/-route/-bulk-message-delete-post/index.html","searchKeys":["BulkMessageDeletePost","object BulkMessageDeletePost : Route<Unit> ","dev.kord.rest.route.Route.BulkMessageDeletePost"]},{"name":"object ChannelDelete : Route<DiscordChannel> ","description":"dev.kord.rest.route.Route.ChannelDelete","location":"rest/dev.kord.rest.route/-route/-channel-delete/index.html","searchKeys":["ChannelDelete","object ChannelDelete : Route<DiscordChannel> ","dev.kord.rest.route.Route.ChannelDelete"]},{"name":"object ChannelGet : Route<DiscordChannel> ","description":"dev.kord.rest.route.Route.ChannelGet","location":"rest/dev.kord.rest.route/-route/-channel-get/index.html","searchKeys":["ChannelGet","object ChannelGet : Route<DiscordChannel> ","dev.kord.rest.route.Route.ChannelGet"]},{"name":"object ChannelId : Route.Key","description":"dev.kord.rest.route.Route.ChannelId","location":"rest/dev.kord.rest.route/-route/-channel-id/index.html","searchKeys":["ChannelId","object ChannelId : Route.Key","dev.kord.rest.route.Route.ChannelId"]},{"name":"object ChannelPatch : Route<DiscordChannel> ","description":"dev.kord.rest.route.Route.ChannelPatch","location":"rest/dev.kord.rest.route/-route/-channel-patch/index.html","searchKeys":["ChannelPatch","object ChannelPatch : Route<DiscordChannel> ","dev.kord.rest.route.Route.ChannelPatch"]},{"name":"object ChannelPermissionDelete : Route<Unit> ","description":"dev.kord.rest.route.Route.ChannelPermissionDelete","location":"rest/dev.kord.rest.route/-route/-channel-permission-delete/index.html","searchKeys":["ChannelPermissionDelete","object ChannelPermissionDelete : Route<Unit> ","dev.kord.rest.route.Route.ChannelPermissionDelete"]},{"name":"object ChannelPermissionPut : Route<Unit> ","description":"dev.kord.rest.route.Route.ChannelPermissionPut","location":"rest/dev.kord.rest.route/-route/-channel-permission-put/index.html","searchKeys":["ChannelPermissionPut","object ChannelPermissionPut : Route<Unit> ","dev.kord.rest.route.Route.ChannelPermissionPut"]},{"name":"object ChannelPut : Route<DiscordChannel> ","description":"dev.kord.rest.route.Route.ChannelPut","location":"rest/dev.kord.rest.route/-route/-channel-put/index.html","searchKeys":["ChannelPut","object ChannelPut : Route<DiscordChannel> ","dev.kord.rest.route.Route.ChannelPut"]},{"name":"object ChannelWebhooksGet : Route<List<DiscordWebhook>> ","description":"dev.kord.rest.route.Route.ChannelWebhooksGet","location":"rest/dev.kord.rest.route/-route/-channel-webhooks-get/index.html","searchKeys":["ChannelWebhooksGet","object ChannelWebhooksGet : Route<List<DiscordWebhook>> ","dev.kord.rest.route.Route.ChannelWebhooksGet"]},{"name":"object CommandId : Route.Key","description":"dev.kord.rest.route.Route.CommandId","location":"rest/dev.kord.rest.route/-route/-command-id/index.html","searchKeys":["CommandId","object CommandId : Route.Key","dev.kord.rest.route.Route.CommandId"]},{"name":"object Companion","description":"dev.kord.rest.Image.Companion","location":"rest/dev.kord.rest/-image/-companion/index.html","searchKeys":["Companion","object Companion","dev.kord.rest.Image.Companion"]},{"name":"object Companion","description":"dev.kord.rest.Image.Format.Companion","location":"rest/dev.kord.rest/-image/-format/-companion/index.html","searchKeys":["Companion","object Companion","dev.kord.rest.Image.Format.Companion"]},{"name":"object Companion","description":"dev.kord.rest.builder.message.EmbedBuilder.Companion","location":"rest/dev.kord.rest.builder.message/-embed-builder/-companion/index.html","searchKeys":["Companion","object Companion","dev.kord.rest.builder.message.EmbedBuilder.Companion"]},{"name":"object Companion","description":"dev.kord.rest.ratelimit.RateLimit.Companion","location":"rest/dev.kord.rest.ratelimit/-rate-limit/-companion/index.html","searchKeys":["Companion","object Companion","dev.kord.rest.ratelimit.RateLimit.Companion"]},{"name":"object Companion","description":"dev.kord.rest.ratelimit.RequestResponse.Companion","location":"rest/dev.kord.rest.ratelimit/-request-response/-companion/index.html","searchKeys":["Companion","object Companion","dev.kord.rest.ratelimit.RequestResponse.Companion"]},{"name":"object Companion","description":"dev.kord.rest.route.Route.Companion","location":"rest/dev.kord.rest.route/-route/-companion/index.html","searchKeys":["Companion","object Companion","dev.kord.rest.route.Route.Companion"]},{"name":"object CurrentApplicationInfo : Route<DiscordApplication> ","description":"dev.kord.rest.route.Route.CurrentApplicationInfo","location":"rest/dev.kord.rest.route/-route/-current-application-info/index.html","searchKeys":["CurrentApplicationInfo","object CurrentApplicationInfo : Route<DiscordApplication> ","dev.kord.rest.route.Route.CurrentApplicationInfo"]},{"name":"object CurrentUserGet : Route<DiscordUser> ","description":"dev.kord.rest.route.Route.CurrentUserGet","location":"rest/dev.kord.rest.route/-route/-current-user-get/index.html","searchKeys":["CurrentUserGet","object CurrentUserGet : Route<DiscordUser> ","dev.kord.rest.route.Route.CurrentUserGet"]},{"name":"object CurrentUserPatch : Route<DiscordUser> ","description":"dev.kord.rest.route.Route.CurrentUserPatch","location":"rest/dev.kord.rest.route/-route/-current-user-patch/index.html","searchKeys":["CurrentUserPatch","object CurrentUserPatch : Route<DiscordUser> ","dev.kord.rest.route.Route.CurrentUserPatch"]},{"name":"object CurrentUsersGuildsGet : Route<List<DiscordPartialGuild>> ","description":"dev.kord.rest.route.Route.CurrentUsersGuildsGet","location":"rest/dev.kord.rest.route/-route/-current-users-guilds-get/index.html","searchKeys":["CurrentUsersGuildsGet","object CurrentUsersGuildsGet : Route<List<DiscordPartialGuild>> ","dev.kord.rest.route.Route.CurrentUsersGuildsGet"]},{"name":"object DMPost : Route<DiscordChannel> ","description":"dev.kord.rest.route.Route.DMPost","location":"rest/dev.kord.rest.route/-route/-d-m-post/index.html","searchKeys":["DMPost","object DMPost : Route<DiscordChannel> ","dev.kord.rest.route.Route.DMPost"]},{"name":"object DeleteAllReactionsForEmoji : Route<Unit> ","description":"dev.kord.rest.route.Route.DeleteAllReactionsForEmoji","location":"rest/dev.kord.rest.route/-route/-delete-all-reactions-for-emoji/index.html","searchKeys":["DeleteAllReactionsForEmoji","object DeleteAllReactionsForEmoji : Route<Unit> ","dev.kord.rest.route.Route.DeleteAllReactionsForEmoji"]},{"name":"object DeleteWebhookMessage : Route<Unit> ","description":"dev.kord.rest.route.Route.DeleteWebhookMessage","location":"rest/dev.kord.rest.route/-route/-delete-webhook-message/index.html","searchKeys":["DeleteWebhookMessage","object DeleteWebhookMessage : Route<Unit> ","dev.kord.rest.route.Route.DeleteWebhookMessage"]},{"name":"object DiscordCdn","description":"dev.kord.rest.route.DiscordCdn","location":"rest/dev.kord.rest.route/-discord-cdn/index.html","searchKeys":["DiscordCdn","object DiscordCdn","dev.kord.rest.route.DiscordCdn"]},{"name":"object EditMessagePatch : Route<DiscordMessage> ","description":"dev.kord.rest.route.Route.EditMessagePatch","location":"rest/dev.kord.rest.route/-route/-edit-message-patch/index.html","searchKeys":["EditMessagePatch","object EditMessagePatch : Route<DiscordMessage> ","dev.kord.rest.route.Route.EditMessagePatch"]},{"name":"object EditWebhookMessage : Route<DiscordMessage> ","description":"dev.kord.rest.route.Route.EditWebhookMessage","location":"rest/dev.kord.rest.route/-route/-edit-webhook-message/index.html","searchKeys":["EditWebhookMessage","object EditWebhookMessage : Route<DiscordMessage> ","dev.kord.rest.route.Route.EditWebhookMessage"]},{"name":"object Emoji : Route.Key","description":"dev.kord.rest.route.Route.Emoji","location":"rest/dev.kord.rest.route/-route/-emoji/index.html","searchKeys":["Emoji","object Emoji : Route.Key","dev.kord.rest.route.Route.Emoji"]},{"name":"object EmojiId : Route.Key","description":"dev.kord.rest.route.Route.EmojiId","location":"rest/dev.kord.rest.route/-route/-emoji-id/index.html","searchKeys":["EmojiId","object EmojiId : Route.Key","dev.kord.rest.route.Route.EmojiId"]},{"name":"object Error : RequestResponse","description":"dev.kord.rest.ratelimit.RequestResponse.Error","location":"rest/dev.kord.rest.ratelimit/-request-response/-error/index.html","searchKeys":["Error","object Error : RequestResponse","dev.kord.rest.ratelimit.RequestResponse.Error"]},{"name":"object ExecuteGithubWebhookPost : Route<Unit> ","description":"dev.kord.rest.route.Route.ExecuteGithubWebhookPost","location":"rest/dev.kord.rest.route/-route/-execute-github-webhook-post/index.html","searchKeys":["ExecuteGithubWebhookPost","object ExecuteGithubWebhookPost : Route<Unit> ","dev.kord.rest.route.Route.ExecuteGithubWebhookPost"]},{"name":"object ExecuteSlackWebhookPost : Route<Unit> ","description":"dev.kord.rest.route.Route.ExecuteSlackWebhookPost","location":"rest/dev.kord.rest.route/-route/-execute-slack-webhook-post/index.html","searchKeys":["ExecuteSlackWebhookPost","object ExecuteSlackWebhookPost : Route<Unit> ","dev.kord.rest.route.Route.ExecuteSlackWebhookPost"]},{"name":"object ExecuteWebhookPost : Route<DiscordMessage?> ","description":"dev.kord.rest.route.Route.ExecuteWebhookPost","location":"rest/dev.kord.rest.route/-route/-execute-webhook-post/index.html","searchKeys":["ExecuteWebhookPost","object ExecuteWebhookPost : Route<DiscordMessage?> ","dev.kord.rest.route.Route.ExecuteWebhookPost"]},{"name":"object FollowupMessageCreate : Route<DiscordMessage> ","description":"dev.kord.rest.route.Route.FollowupMessageCreate","location":"rest/dev.kord.rest.route/-route/-followup-message-create/index.html","searchKeys":["FollowupMessageCreate","object FollowupMessageCreate : Route<DiscordMessage> ","dev.kord.rest.route.Route.FollowupMessageCreate"]},{"name":"object FollowupMessageDelete : Route<Unit> ","description":"dev.kord.rest.route.Route.FollowupMessageDelete","location":"rest/dev.kord.rest.route/-route/-followup-message-delete/index.html","searchKeys":["FollowupMessageDelete","object FollowupMessageDelete : Route<Unit> ","dev.kord.rest.route.Route.FollowupMessageDelete"]},{"name":"object FollowupMessageGet : Route<DiscordMessage> ","description":"dev.kord.rest.route.Route.FollowupMessageGet","location":"rest/dev.kord.rest.route/-route/-followup-message-get/index.html","searchKeys":["FollowupMessageGet","object FollowupMessageGet : Route<DiscordMessage> ","dev.kord.rest.route.Route.FollowupMessageGet"]},{"name":"object FollowupMessageModify : Route<DiscordMessage> ","description":"dev.kord.rest.route.Route.FollowupMessageModify","location":"rest/dev.kord.rest.route/-route/-followup-message-modify/index.html","searchKeys":["FollowupMessageModify","object FollowupMessageModify : Route<DiscordMessage> ","dev.kord.rest.route.Route.FollowupMessageModify"]},{"name":"object GIF : Image.Format","description":"dev.kord.rest.Image.Format.GIF","location":"rest/dev.kord.rest/-image/-format/-g-i-f/index.html","searchKeys":["GIF","object GIF : Image.Format","dev.kord.rest.Image.Format.GIF"]},{"name":"object GatewayBotGet : Route<BotGatewayResponse> ","description":"dev.kord.rest.route.Route.GatewayBotGet","location":"rest/dev.kord.rest.route/-route/-gateway-bot-get/index.html","searchKeys":["GatewayBotGet","object GatewayBotGet : Route<BotGatewayResponse> ","dev.kord.rest.route.Route.GatewayBotGet"]},{"name":"object GatewayGet : Route<GatewayResponse> ","description":"dev.kord.rest.route.Route.GatewayGet","location":"rest/dev.kord.rest.route/-route/-gateway-get/index.html","searchKeys":["GatewayGet","object GatewayGet : Route<GatewayResponse> ","dev.kord.rest.route.Route.GatewayGet"]},{"name":"object GetWebhookMessage : Route<DiscordMessage> ","description":"dev.kord.rest.route.Route.GetWebhookMessage","location":"rest/dev.kord.rest.route/-route/-get-webhook-message/index.html","searchKeys":["GetWebhookMessage","object GetWebhookMessage : Route<DiscordMessage> ","dev.kord.rest.route.Route.GetWebhookMessage"]},{"name":"object GlobalApplicationCommandCreate : Route<DiscordApplicationCommand> ","description":"dev.kord.rest.route.Route.GlobalApplicationCommandCreate","location":"rest/dev.kord.rest.route/-route/-global-application-command-create/index.html","searchKeys":["GlobalApplicationCommandCreate","object GlobalApplicationCommandCreate : Route<DiscordApplicationCommand> ","dev.kord.rest.route.Route.GlobalApplicationCommandCreate"]},{"name":"object GlobalApplicationCommandDelete : Route<Unit> ","description":"dev.kord.rest.route.Route.GlobalApplicationCommandDelete","location":"rest/dev.kord.rest.route/-route/-global-application-command-delete/index.html","searchKeys":["GlobalApplicationCommandDelete","object GlobalApplicationCommandDelete : Route<Unit> ","dev.kord.rest.route.Route.GlobalApplicationCommandDelete"]},{"name":"object GlobalApplicationCommandGet : Route<DiscordApplicationCommand> ","description":"dev.kord.rest.route.Route.GlobalApplicationCommandGet","location":"rest/dev.kord.rest.route/-route/-global-application-command-get/index.html","searchKeys":["GlobalApplicationCommandGet","object GlobalApplicationCommandGet : Route<DiscordApplicationCommand> ","dev.kord.rest.route.Route.GlobalApplicationCommandGet"]},{"name":"object GlobalApplicationCommandModify : Route<DiscordApplicationCommand> ","description":"dev.kord.rest.route.Route.GlobalApplicationCommandModify","location":"rest/dev.kord.rest.route/-route/-global-application-command-modify/index.html","searchKeys":["GlobalApplicationCommandModify","object GlobalApplicationCommandModify : Route<DiscordApplicationCommand> ","dev.kord.rest.route.Route.GlobalApplicationCommandModify"]},{"name":"object GlobalApplicationCommandsCreate : Route<List<DiscordApplicationCommand>> ","description":"dev.kord.rest.route.Route.GlobalApplicationCommandsCreate","location":"rest/dev.kord.rest.route/-route/-global-application-commands-create/index.html","searchKeys":["GlobalApplicationCommandsCreate","object GlobalApplicationCommandsCreate : Route<List<DiscordApplicationCommand>> ","dev.kord.rest.route.Route.GlobalApplicationCommandsCreate"]},{"name":"object GlobalApplicationCommandsGet : Route<List<DiscordApplicationCommand>> ","description":"dev.kord.rest.route.Route.GlobalApplicationCommandsGet","location":"rest/dev.kord.rest.route/-route/-global-application-commands-get/index.html","searchKeys":["GlobalApplicationCommandsGet","object GlobalApplicationCommandsGet : Route<List<DiscordApplicationCommand>> ","dev.kord.rest.route.Route.GlobalApplicationCommandsGet"]},{"name":"object GroupDMUserDelete : Route<Unit> ","description":"dev.kord.rest.route.Route.GroupDMUserDelete","location":"rest/dev.kord.rest.route/-route/-group-d-m-user-delete/index.html","searchKeys":["GroupDMUserDelete","object GroupDMUserDelete : Route<Unit> ","dev.kord.rest.route.Route.GroupDMUserDelete"]},{"name":"object GroupDMUserPut : Route<Unit> ","description":"dev.kord.rest.route.Route.GroupDMUserPut","location":"rest/dev.kord.rest.route/-route/-group-d-m-user-put/index.html","searchKeys":["GroupDMUserPut","object GroupDMUserPut : Route<Unit> ","dev.kord.rest.route.Route.GroupDMUserPut"]},{"name":"object GuildApplicationCommandCreate : Route<DiscordApplicationCommand> ","description":"dev.kord.rest.route.Route.GuildApplicationCommandCreate","location":"rest/dev.kord.rest.route/-route/-guild-application-command-create/index.html","searchKeys":["GuildApplicationCommandCreate","object GuildApplicationCommandCreate : Route<DiscordApplicationCommand> ","dev.kord.rest.route.Route.GuildApplicationCommandCreate"]},{"name":"object GuildApplicationCommandDelete : Route<Unit> ","description":"dev.kord.rest.route.Route.GuildApplicationCommandDelete","location":"rest/dev.kord.rest.route/-route/-guild-application-command-delete/index.html","searchKeys":["GuildApplicationCommandDelete","object GuildApplicationCommandDelete : Route<Unit> ","dev.kord.rest.route.Route.GuildApplicationCommandDelete"]},{"name":"object GuildApplicationCommandGet : Route<DiscordApplicationCommand> ","description":"dev.kord.rest.route.Route.GuildApplicationCommandGet","location":"rest/dev.kord.rest.route/-route/-guild-application-command-get/index.html","searchKeys":["GuildApplicationCommandGet","object GuildApplicationCommandGet : Route<DiscordApplicationCommand> ","dev.kord.rest.route.Route.GuildApplicationCommandGet"]},{"name":"object GuildApplicationCommandModify : Route<DiscordApplicationCommand> ","description":"dev.kord.rest.route.Route.GuildApplicationCommandModify","location":"rest/dev.kord.rest.route/-route/-guild-application-command-modify/index.html","searchKeys":["GuildApplicationCommandModify","object GuildApplicationCommandModify : Route<DiscordApplicationCommand> ","dev.kord.rest.route.Route.GuildApplicationCommandModify"]},{"name":"object GuildApplicationCommandPermissionsGet : Route<List<DiscordGuildApplicationCommandPermissions>> ","description":"dev.kord.rest.route.Route.GuildApplicationCommandPermissionsGet","location":"rest/dev.kord.rest.route/-route/-guild-application-command-permissions-get/index.html","searchKeys":["GuildApplicationCommandPermissionsGet","object GuildApplicationCommandPermissionsGet : Route<List<DiscordGuildApplicationCommandPermissions>> ","dev.kord.rest.route.Route.GuildApplicationCommandPermissionsGet"]},{"name":"object GuildApplicationCommandsCreate : Route<List<DiscordApplicationCommand>> ","description":"dev.kord.rest.route.Route.GuildApplicationCommandsCreate","location":"rest/dev.kord.rest.route/-route/-guild-application-commands-create/index.html","searchKeys":["GuildApplicationCommandsCreate","object GuildApplicationCommandsCreate : Route<List<DiscordApplicationCommand>> ","dev.kord.rest.route.Route.GuildApplicationCommandsCreate"]},{"name":"object GuildApplicationCommandsGet : Route<List<DiscordApplicationCommand>> ","description":"dev.kord.rest.route.Route.GuildApplicationCommandsGet","location":"rest/dev.kord.rest.route/-route/-guild-application-commands-get/index.html","searchKeys":["GuildApplicationCommandsGet","object GuildApplicationCommandsGet : Route<List<DiscordApplicationCommand>> ","dev.kord.rest.route.Route.GuildApplicationCommandsGet"]},{"name":"object GuildBanDelete : Route<Unit> ","description":"dev.kord.rest.route.Route.GuildBanDelete","location":"rest/dev.kord.rest.route/-route/-guild-ban-delete/index.html","searchKeys":["GuildBanDelete","object GuildBanDelete : Route<Unit> ","dev.kord.rest.route.Route.GuildBanDelete"]},{"name":"object GuildBanGet : Route<BanResponse> ","description":"dev.kord.rest.route.Route.GuildBanGet","location":"rest/dev.kord.rest.route/-route/-guild-ban-get/index.html","searchKeys":["GuildBanGet","object GuildBanGet : Route<BanResponse> ","dev.kord.rest.route.Route.GuildBanGet"]},{"name":"object GuildBanPut : Route<Unit> ","description":"dev.kord.rest.route.Route.GuildBanPut","location":"rest/dev.kord.rest.route/-route/-guild-ban-put/index.html","searchKeys":["GuildBanPut","object GuildBanPut : Route<Unit> ","dev.kord.rest.route.Route.GuildBanPut"]},{"name":"object GuildBansGet : Route<List<BanResponse>> ","description":"dev.kord.rest.route.Route.GuildBansGet","location":"rest/dev.kord.rest.route/-route/-guild-bans-get/index.html","searchKeys":["GuildBansGet","object GuildBansGet : Route<List<BanResponse>> ","dev.kord.rest.route.Route.GuildBansGet"]},{"name":"object GuildChannelsGet : Route<List<DiscordChannel>> ","description":"dev.kord.rest.route.Route.GuildChannelsGet","location":"rest/dev.kord.rest.route/-route/-guild-channels-get/index.html","searchKeys":["GuildChannelsGet","object GuildChannelsGet : Route<List<DiscordChannel>> ","dev.kord.rest.route.Route.GuildChannelsGet"]},{"name":"object GuildChannelsPatch : Route<Unit> ","description":"dev.kord.rest.route.Route.GuildChannelsPatch","location":"rest/dev.kord.rest.route/-route/-guild-channels-patch/index.html","searchKeys":["GuildChannelsPatch","object GuildChannelsPatch : Route<Unit> ","dev.kord.rest.route.Route.GuildChannelsPatch"]},{"name":"object GuildChannelsPost : Route<DiscordChannel> ","description":"dev.kord.rest.route.Route.GuildChannelsPost","location":"rest/dev.kord.rest.route/-route/-guild-channels-post/index.html","searchKeys":["GuildChannelsPost","object GuildChannelsPost : Route<DiscordChannel> ","dev.kord.rest.route.Route.GuildChannelsPost"]},{"name":"object GuildCurrentUserNickPatch : Route<CurrentUserNicknameModifyResponse> ","description":"dev.kord.rest.route.Route.GuildCurrentUserNickPatch","location":"rest/dev.kord.rest.route/-route/-guild-current-user-nick-patch/index.html","searchKeys":["GuildCurrentUserNickPatch","object GuildCurrentUserNickPatch : Route<CurrentUserNicknameModifyResponse> ","dev.kord.rest.route.Route.GuildCurrentUserNickPatch"]},{"name":"object GuildDelete : Route<Unit> ","description":"dev.kord.rest.route.Route.GuildDelete","location":"rest/dev.kord.rest.route/-route/-guild-delete/index.html","searchKeys":["GuildDelete","object GuildDelete : Route<Unit> ","dev.kord.rest.route.Route.GuildDelete"]},{"name":"object GuildEmojiDelete : Route<Unit> ","description":"dev.kord.rest.route.Route.GuildEmojiDelete","location":"rest/dev.kord.rest.route/-route/-guild-emoji-delete/index.html","searchKeys":["GuildEmojiDelete","object GuildEmojiDelete : Route<Unit> ","dev.kord.rest.route.Route.GuildEmojiDelete"]},{"name":"object GuildEmojiGet : Route<DiscordEmoji> ","description":"dev.kord.rest.route.Route.GuildEmojiGet","location":"rest/dev.kord.rest.route/-route/-guild-emoji-get/index.html","searchKeys":["GuildEmojiGet","object GuildEmojiGet : Route<DiscordEmoji> ","dev.kord.rest.route.Route.GuildEmojiGet"]},{"name":"object GuildEmojiPatch : Route<DiscordEmoji> ","description":"dev.kord.rest.route.Route.GuildEmojiPatch","location":"rest/dev.kord.rest.route/-route/-guild-emoji-patch/index.html","searchKeys":["GuildEmojiPatch","object GuildEmojiPatch : Route<DiscordEmoji> ","dev.kord.rest.route.Route.GuildEmojiPatch"]},{"name":"object GuildEmojiPost : Route<DiscordEmoji> ","description":"dev.kord.rest.route.Route.GuildEmojiPost","location":"rest/dev.kord.rest.route/-route/-guild-emoji-post/index.html","searchKeys":["GuildEmojiPost","object GuildEmojiPost : Route<DiscordEmoji> ","dev.kord.rest.route.Route.GuildEmojiPost"]},{"name":"object GuildEmojisGet : Route<List<DiscordEmoji>> ","description":"dev.kord.rest.route.Route.GuildEmojisGet","location":"rest/dev.kord.rest.route/-route/-guild-emojis-get/index.html","searchKeys":["GuildEmojisGet","object GuildEmojisGet : Route<List<DiscordEmoji>> ","dev.kord.rest.route.Route.GuildEmojisGet"]},{"name":"object GuildFromTemplatePost : Route<DiscordGuild> ","description":"dev.kord.rest.route.Route.GuildFromTemplatePost","location":"rest/dev.kord.rest.route/-route/-guild-from-template-post/index.html","searchKeys":["GuildFromTemplatePost","object GuildFromTemplatePost : Route<DiscordGuild> ","dev.kord.rest.route.Route.GuildFromTemplatePost"]},{"name":"object GuildGet : Route<DiscordGuild> ","description":"dev.kord.rest.route.Route.GuildGet","location":"rest/dev.kord.rest.route/-route/-guild-get/index.html","searchKeys":["GuildGet","object GuildGet : Route<DiscordGuild> ","dev.kord.rest.route.Route.GuildGet"]},{"name":"object GuildId : Route.Key","description":"dev.kord.rest.route.Route.GuildId","location":"rest/dev.kord.rest.route/-route/-guild-id/index.html","searchKeys":["GuildId","object GuildId : Route.Key","dev.kord.rest.route.Route.GuildId"]},{"name":"object GuildIntegrationDelete : Route<Unit> ","description":"dev.kord.rest.route.Route.GuildIntegrationDelete","location":"rest/dev.kord.rest.route/-route/-guild-integration-delete/index.html","searchKeys":["GuildIntegrationDelete","object GuildIntegrationDelete : Route<Unit> ","dev.kord.rest.route.Route.GuildIntegrationDelete"]},{"name":"object GuildIntegrationGet : Route<List<DiscordIntegration>> ","description":"dev.kord.rest.route.Route.GuildIntegrationGet","location":"rest/dev.kord.rest.route/-route/-guild-integration-get/index.html","searchKeys":["GuildIntegrationGet","object GuildIntegrationGet : Route<List<DiscordIntegration>> ","dev.kord.rest.route.Route.GuildIntegrationGet"]},{"name":"object GuildIntegrationPatch : Route<Unit> ","description":"dev.kord.rest.route.Route.GuildIntegrationPatch","location":"rest/dev.kord.rest.route/-route/-guild-integration-patch/index.html","searchKeys":["GuildIntegrationPatch","object GuildIntegrationPatch : Route<Unit> ","dev.kord.rest.route.Route.GuildIntegrationPatch"]},{"name":"object GuildIntegrationPost : Route<Unit> ","description":"dev.kord.rest.route.Route.GuildIntegrationPost","location":"rest/dev.kord.rest.route/-route/-guild-integration-post/index.html","searchKeys":["GuildIntegrationPost","object GuildIntegrationPost : Route<Unit> ","dev.kord.rest.route.Route.GuildIntegrationPost"]},{"name":"object GuildIntegrationSyncPost : Route<Unit> ","description":"dev.kord.rest.route.Route.GuildIntegrationSyncPost","location":"rest/dev.kord.rest.route/-route/-guild-integration-sync-post/index.html","searchKeys":["GuildIntegrationSyncPost","object GuildIntegrationSyncPost : Route<Unit> ","dev.kord.rest.route.Route.GuildIntegrationSyncPost"]},{"name":"object GuildInvitesGet : Route<List<DiscordInviteWithMetadata>> ","description":"dev.kord.rest.route.Route.GuildInvitesGet","location":"rest/dev.kord.rest.route/-route/-guild-invites-get/index.html","searchKeys":["GuildInvitesGet","object GuildInvitesGet : Route<List<DiscordInviteWithMetadata>> ","dev.kord.rest.route.Route.GuildInvitesGet"]},{"name":"object GuildLeave : Route<Unit> ","description":"dev.kord.rest.route.Route.GuildLeave","location":"rest/dev.kord.rest.route/-route/-guild-leave/index.html","searchKeys":["GuildLeave","object GuildLeave : Route<Unit> ","dev.kord.rest.route.Route.GuildLeave"]},{"name":"object GuildMFALevelModify : Route<GuildMFALevelModifyResponse> ","description":"dev.kord.rest.route.Route.GuildMFALevelModify","location":"rest/dev.kord.rest.route/-route/-guild-m-f-a-level-modify/index.html","searchKeys":["GuildMFALevelModify","object GuildMFALevelModify : Route<GuildMFALevelModifyResponse> ","dev.kord.rest.route.Route.GuildMFALevelModify"]},{"name":"object GuildMemberDelete : Route<Unit> ","description":"dev.kord.rest.route.Route.GuildMemberDelete","location":"rest/dev.kord.rest.route/-route/-guild-member-delete/index.html","searchKeys":["GuildMemberDelete","object GuildMemberDelete : Route<Unit> ","dev.kord.rest.route.Route.GuildMemberDelete"]},{"name":"object GuildMemberGet : Route<DiscordGuildMember> ","description":"dev.kord.rest.route.Route.GuildMemberGet","location":"rest/dev.kord.rest.route/-route/-guild-member-get/index.html","searchKeys":["GuildMemberGet","object GuildMemberGet : Route<DiscordGuildMember> ","dev.kord.rest.route.Route.GuildMemberGet"]},{"name":"object GuildMemberPatch : Route<DiscordGuildMember> ","description":"dev.kord.rest.route.Route.GuildMemberPatch","location":"rest/dev.kord.rest.route/-route/-guild-member-patch/index.html","searchKeys":["GuildMemberPatch","object GuildMemberPatch : Route<DiscordGuildMember> ","dev.kord.rest.route.Route.GuildMemberPatch"]},{"name":"object GuildMemberPut : Route<DiscordGuildMember?> ","description":"dev.kord.rest.route.Route.GuildMemberPut","location":"rest/dev.kord.rest.route/-route/-guild-member-put/index.html","searchKeys":["GuildMemberPut","object GuildMemberPut : Route<DiscordGuildMember?> ","dev.kord.rest.route.Route.GuildMemberPut"]},{"name":"object GuildMemberRoleDelete : Route<Unit> ","description":"dev.kord.rest.route.Route.GuildMemberRoleDelete","location":"rest/dev.kord.rest.route/-route/-guild-member-role-delete/index.html","searchKeys":["GuildMemberRoleDelete","object GuildMemberRoleDelete : Route<Unit> ","dev.kord.rest.route.Route.GuildMemberRoleDelete"]},{"name":"object GuildMemberRolePut : Route<Unit> ","description":"dev.kord.rest.route.Route.GuildMemberRolePut","location":"rest/dev.kord.rest.route/-route/-guild-member-role-put/index.html","searchKeys":["GuildMemberRolePut","object GuildMemberRolePut : Route<Unit> ","dev.kord.rest.route.Route.GuildMemberRolePut"]},{"name":"object GuildMembersGet : Route<List<DiscordGuildMember>> ","description":"dev.kord.rest.route.Route.GuildMembersGet","location":"rest/dev.kord.rest.route/-route/-guild-members-get/index.html","searchKeys":["GuildMembersGet","object GuildMembersGet : Route<List<DiscordGuildMember>> ","dev.kord.rest.route.Route.GuildMembersGet"]},{"name":"object GuildMembersSearchGet : Route<List<DiscordGuildMember>> ","description":"dev.kord.rest.route.Route.GuildMembersSearchGet","location":"rest/dev.kord.rest.route/-route/-guild-members-search-get/index.html","searchKeys":["GuildMembersSearchGet","object GuildMembersSearchGet : Route<List<DiscordGuildMember>> ","dev.kord.rest.route.Route.GuildMembersSearchGet"]},{"name":"object GuildPatch : Route<DiscordGuild> ","description":"dev.kord.rest.route.Route.GuildPatch","location":"rest/dev.kord.rest.route/-route/-guild-patch/index.html","searchKeys":["GuildPatch","object GuildPatch : Route<DiscordGuild> ","dev.kord.rest.route.Route.GuildPatch"]},{"name":"object GuildPost : Route<DiscordGuild> ","description":"dev.kord.rest.route.Route.GuildPost","location":"rest/dev.kord.rest.route/-route/-guild-post/index.html","searchKeys":["GuildPost","object GuildPost : Route<DiscordGuild> ","dev.kord.rest.route.Route.GuildPost"]},{"name":"object GuildPreviewGet : Route<DiscordGuildPreview> ","description":"dev.kord.rest.route.Route.GuildPreviewGet","location":"rest/dev.kord.rest.route/-route/-guild-preview-get/index.html","searchKeys":["GuildPreviewGet","object GuildPreviewGet : Route<DiscordGuildPreview> ","dev.kord.rest.route.Route.GuildPreviewGet"]},{"name":"object GuildPruneCountGet : Route<GetPruneResponse> ","description":"dev.kord.rest.route.Route.GuildPruneCountGet","location":"rest/dev.kord.rest.route/-route/-guild-prune-count-get/index.html","searchKeys":["GuildPruneCountGet","object GuildPruneCountGet : Route<GetPruneResponse> ","dev.kord.rest.route.Route.GuildPruneCountGet"]},{"name":"object GuildPrunePost : Route<PruneResponse> ","description":"dev.kord.rest.route.Route.GuildPrunePost","location":"rest/dev.kord.rest.route/-route/-guild-prune-post/index.html","searchKeys":["GuildPrunePost","object GuildPrunePost : Route<PruneResponse> ","dev.kord.rest.route.Route.GuildPrunePost"]},{"name":"object GuildRoleDelete : Route<Unit> ","description":"dev.kord.rest.route.Route.GuildRoleDelete","location":"rest/dev.kord.rest.route/-route/-guild-role-delete/index.html","searchKeys":["GuildRoleDelete","object GuildRoleDelete : Route<Unit> ","dev.kord.rest.route.Route.GuildRoleDelete"]},{"name":"object GuildRolePatch : Route<DiscordRole> ","description":"dev.kord.rest.route.Route.GuildRolePatch","location":"rest/dev.kord.rest.route/-route/-guild-role-patch/index.html","searchKeys":["GuildRolePatch","object GuildRolePatch : Route<DiscordRole> ","dev.kord.rest.route.Route.GuildRolePatch"]},{"name":"object GuildRolePost : Route<DiscordRole> ","description":"dev.kord.rest.route.Route.GuildRolePost","location":"rest/dev.kord.rest.route/-route/-guild-role-post/index.html","searchKeys":["GuildRolePost","object GuildRolePost : Route<DiscordRole> ","dev.kord.rest.route.Route.GuildRolePost"]},{"name":"object GuildRolesGet : Route<List<DiscordRole>> ","description":"dev.kord.rest.route.Route.GuildRolesGet","location":"rest/dev.kord.rest.route/-route/-guild-roles-get/index.html","searchKeys":["GuildRolesGet","object GuildRolesGet : Route<List<DiscordRole>> ","dev.kord.rest.route.Route.GuildRolesGet"]},{"name":"object GuildRolesPatch : Route<List<DiscordRole>> ","description":"dev.kord.rest.route.Route.GuildRolesPatch","location":"rest/dev.kord.rest.route/-route/-guild-roles-patch/index.html","searchKeys":["GuildRolesPatch","object GuildRolesPatch : Route<List<DiscordRole>> ","dev.kord.rest.route.Route.GuildRolesPatch"]},{"name":"object GuildScheduledEventDelete : Route<Unit> ","description":"dev.kord.rest.route.Route.GuildScheduledEventDelete","location":"rest/dev.kord.rest.route/-route/-guild-scheduled-event-delete/index.html","searchKeys":["GuildScheduledEventDelete","object GuildScheduledEventDelete : Route<Unit> ","dev.kord.rest.route.Route.GuildScheduledEventDelete"]},{"name":"object GuildScheduledEventGet : Route<DiscordGuildScheduledEvent> ","description":"dev.kord.rest.route.Route.GuildScheduledEventGet","location":"rest/dev.kord.rest.route/-route/-guild-scheduled-event-get/index.html","searchKeys":["GuildScheduledEventGet","object GuildScheduledEventGet : Route<DiscordGuildScheduledEvent> ","dev.kord.rest.route.Route.GuildScheduledEventGet"]},{"name":"object GuildScheduledEventPatch : Route<DiscordGuildScheduledEvent> ","description":"dev.kord.rest.route.Route.GuildScheduledEventPatch","location":"rest/dev.kord.rest.route/-route/-guild-scheduled-event-patch/index.html","searchKeys":["GuildScheduledEventPatch","object GuildScheduledEventPatch : Route<DiscordGuildScheduledEvent> ","dev.kord.rest.route.Route.GuildScheduledEventPatch"]},{"name":"object GuildScheduledEventUsersGet : Route<List<GuildScheduledEventUsersResponse>> ","description":"dev.kord.rest.route.Route.GuildScheduledEventUsersGet","location":"rest/dev.kord.rest.route/-route/-guild-scheduled-event-users-get/index.html","searchKeys":["GuildScheduledEventUsersGet","object GuildScheduledEventUsersGet : Route<List<GuildScheduledEventUsersResponse>> ","dev.kord.rest.route.Route.GuildScheduledEventUsersGet"]},{"name":"object GuildScheduledEventsGet : Route<List<DiscordGuildScheduledEvent>> ","description":"dev.kord.rest.route.Route.GuildScheduledEventsGet","location":"rest/dev.kord.rest.route/-route/-guild-scheduled-events-get/index.html","searchKeys":["GuildScheduledEventsGet","object GuildScheduledEventsGet : Route<List<DiscordGuildScheduledEvent>> ","dev.kord.rest.route.Route.GuildScheduledEventsGet"]},{"name":"object GuildScheduledEventsPost : Route<DiscordGuildScheduledEvent> ","description":"dev.kord.rest.route.Route.GuildScheduledEventsPost","location":"rest/dev.kord.rest.route/-route/-guild-scheduled-events-post/index.html","searchKeys":["GuildScheduledEventsPost","object GuildScheduledEventsPost : Route<DiscordGuildScheduledEvent> ","dev.kord.rest.route.Route.GuildScheduledEventsPost"]},{"name":"object GuildStickerDelete : Route<Unit> ","description":"dev.kord.rest.route.Route.GuildStickerDelete","location":"rest/dev.kord.rest.route/-route/-guild-sticker-delete/index.html","searchKeys":["GuildStickerDelete","object GuildStickerDelete : Route<Unit> ","dev.kord.rest.route.Route.GuildStickerDelete"]},{"name":"object GuildStickerGet : Route<DiscordMessageSticker> ","description":"dev.kord.rest.route.Route.GuildStickerGet","location":"rest/dev.kord.rest.route/-route/-guild-sticker-get/index.html","searchKeys":["GuildStickerGet","object GuildStickerGet : Route<DiscordMessageSticker> ","dev.kord.rest.route.Route.GuildStickerGet"]},{"name":"object GuildStickerPatch : Route<DiscordMessageSticker> ","description":"dev.kord.rest.route.Route.GuildStickerPatch","location":"rest/dev.kord.rest.route/-route/-guild-sticker-patch/index.html","searchKeys":["GuildStickerPatch","object GuildStickerPatch : Route<DiscordMessageSticker> ","dev.kord.rest.route.Route.GuildStickerPatch"]},{"name":"object GuildStickerPost : Route<DiscordMessageSticker> ","description":"dev.kord.rest.route.Route.GuildStickerPost","location":"rest/dev.kord.rest.route/-route/-guild-sticker-post/index.html","searchKeys":["GuildStickerPost","object GuildStickerPost : Route<DiscordMessageSticker> ","dev.kord.rest.route.Route.GuildStickerPost"]},{"name":"object GuildStickersGet : Route<List<DiscordMessageSticker>> ","description":"dev.kord.rest.route.Route.GuildStickersGet","location":"rest/dev.kord.rest.route/-route/-guild-stickers-get/index.html","searchKeys":["GuildStickersGet","object GuildStickersGet : Route<List<DiscordMessageSticker>> ","dev.kord.rest.route.Route.GuildStickersGet"]},{"name":"object GuildTemplatePost : Route<DiscordTemplate> ","description":"dev.kord.rest.route.Route.GuildTemplatePost","location":"rest/dev.kord.rest.route/-route/-guild-template-post/index.html","searchKeys":["GuildTemplatePost","object GuildTemplatePost : Route<DiscordTemplate> ","dev.kord.rest.route.Route.GuildTemplatePost"]},{"name":"object GuildTemplatesGet : Route<List<DiscordTemplate>> ","description":"dev.kord.rest.route.Route.GuildTemplatesGet","location":"rest/dev.kord.rest.route/-route/-guild-templates-get/index.html","searchKeys":["GuildTemplatesGet","object GuildTemplatesGet : Route<List<DiscordTemplate>> ","dev.kord.rest.route.Route.GuildTemplatesGet"]},{"name":"object GuildVanityInviteGet : Route<DiscordPartialInvite> ","description":"dev.kord.rest.route.Route.GuildVanityInviteGet","location":"rest/dev.kord.rest.route/-route/-guild-vanity-invite-get/index.html","searchKeys":["GuildVanityInviteGet","object GuildVanityInviteGet : Route<DiscordPartialInvite> ","dev.kord.rest.route.Route.GuildVanityInviteGet"]},{"name":"object GuildVoiceRegionsGet : Route<List<DiscordVoiceRegion>> ","description":"dev.kord.rest.route.Route.GuildVoiceRegionsGet","location":"rest/dev.kord.rest.route/-route/-guild-voice-regions-get/index.html","searchKeys":["GuildVoiceRegionsGet","object GuildVoiceRegionsGet : Route<List<DiscordVoiceRegion>> ","dev.kord.rest.route.Route.GuildVoiceRegionsGet"]},{"name":"object GuildWebhooksGet : Route<List<DiscordWebhook>> ","description":"dev.kord.rest.route.Route.GuildWebhooksGet","location":"rest/dev.kord.rest.route/-route/-guild-webhooks-get/index.html","searchKeys":["GuildWebhooksGet","object GuildWebhooksGet : Route<List<DiscordWebhook>> ","dev.kord.rest.route.Route.GuildWebhooksGet"]},{"name":"object GuildWelcomeScreenGet : Route<DiscordWelcomeScreen> ","description":"dev.kord.rest.route.Route.GuildWelcomeScreenGet","location":"rest/dev.kord.rest.route/-route/-guild-welcome-screen-get/index.html","searchKeys":["GuildWelcomeScreenGet","object GuildWelcomeScreenGet : Route<DiscordWelcomeScreen> ","dev.kord.rest.route.Route.GuildWelcomeScreenGet"]},{"name":"object GuildWelcomeScreenPatch : Route<DiscordWelcomeScreen> ","description":"dev.kord.rest.route.Route.GuildWelcomeScreenPatch","location":"rest/dev.kord.rest.route/-route/-guild-welcome-screen-patch/index.html","searchKeys":["GuildWelcomeScreenPatch","object GuildWelcomeScreenPatch : Route<DiscordWelcomeScreen> ","dev.kord.rest.route.Route.GuildWelcomeScreenPatch"]},{"name":"object GuildWidgetGet : Route<DiscordGuildWidget> ","description":"dev.kord.rest.route.Route.GuildWidgetGet","location":"rest/dev.kord.rest.route/-route/-guild-widget-get/index.html","searchKeys":["GuildWidgetGet","object GuildWidgetGet : Route<DiscordGuildWidget> ","dev.kord.rest.route.Route.GuildWidgetGet"]},{"name":"object GuildWidgetPatch : Route<DiscordGuildWidget> ","description":"dev.kord.rest.route.Route.GuildWidgetPatch","location":"rest/dev.kord.rest.route/-route/-guild-widget-patch/index.html","searchKeys":["GuildWidgetPatch","object GuildWidgetPatch : Route<DiscordGuildWidget> ","dev.kord.rest.route.Route.GuildWidgetPatch"]},{"name":"object IntegrationId : Route.Key","description":"dev.kord.rest.route.Route.IntegrationId","location":"rest/dev.kord.rest.route/-route/-integration-id/index.html","searchKeys":["IntegrationId","object IntegrationId : Route.Key","dev.kord.rest.route.Route.IntegrationId"]},{"name":"object InteractionId : Route.Key","description":"dev.kord.rest.route.Route.InteractionId","location":"rest/dev.kord.rest.route/-route/-interaction-id/index.html","searchKeys":["InteractionId","object InteractionId : Route.Key","dev.kord.rest.route.Route.InteractionId"]},{"name":"object InteractionResponseCreate : Route<Unit> ","description":"dev.kord.rest.route.Route.InteractionResponseCreate","location":"rest/dev.kord.rest.route/-route/-interaction-response-create/index.html","searchKeys":["InteractionResponseCreate","object InteractionResponseCreate : Route<Unit> ","dev.kord.rest.route.Route.InteractionResponseCreate"]},{"name":"object InteractionToken : Route.Key","description":"dev.kord.rest.route.Route.InteractionToken","location":"rest/dev.kord.rest.route/-route/-interaction-token/index.html","searchKeys":["InteractionToken","object InteractionToken : Route.Key","dev.kord.rest.route.Route.InteractionToken"]},{"name":"object InviteCode : Route.Key","description":"dev.kord.rest.route.Route.InviteCode","location":"rest/dev.kord.rest.route/-route/-invite-code/index.html","searchKeys":["InviteCode","object InviteCode : Route.Key","dev.kord.rest.route.Route.InviteCode"]},{"name":"object InviteDelete : Route<DiscordInvite> ","description":"dev.kord.rest.route.Route.InviteDelete","location":"rest/dev.kord.rest.route/-route/-invite-delete/index.html","searchKeys":["InviteDelete","object InviteDelete : Route<DiscordInvite> ","dev.kord.rest.route.Route.InviteDelete"]},{"name":"object InviteGet : Route<DiscordInvite> ","description":"dev.kord.rest.route.Route.InviteGet","location":"rest/dev.kord.rest.route/-route/-invite-get/index.html","searchKeys":["InviteGet","object InviteGet : Route<DiscordInvite> ","dev.kord.rest.route.Route.InviteGet"]},{"name":"object InvitePost : Route<DiscordInviteWithMetadata> ","description":"dev.kord.rest.route.Route.InvitePost","location":"rest/dev.kord.rest.route/-route/-invite-post/index.html","searchKeys":["InvitePost","object InvitePost : Route<DiscordInviteWithMetadata> ","dev.kord.rest.route.Route.InvitePost"]},{"name":"object InvitesGet : Route<List<DiscordInviteWithMetadata>> ","description":"dev.kord.rest.route.Route.InvitesGet","location":"rest/dev.kord.rest.route/-route/-invites-get/index.html","searchKeys":["InvitesGet","object InvitesGet : Route<List<DiscordInviteWithMetadata>> ","dev.kord.rest.route.Route.InvitesGet"]},{"name":"object JPEG : Image.Format","description":"dev.kord.rest.Image.Format.JPEG","location":"rest/dev.kord.rest/-image/-format/-j-p-e-g/index.html","searchKeys":["JPEG","object JPEG : Image.Format","dev.kord.rest.Image.Format.JPEG"]},{"name":"object JoinThreadPut : Route<Unit> ","description":"dev.kord.rest.route.Route.JoinThreadPut","location":"rest/dev.kord.rest.route/-route/-join-thread-put/index.html","searchKeys":["JoinThreadPut","object JoinThreadPut : Route<Unit> ","dev.kord.rest.route.Route.JoinThreadPut"]},{"name":"object JoinedPrivateArchivedThreadsGet : Route<ListThreadsResponse> ","description":"dev.kord.rest.route.Route.JoinedPrivateArchivedThreadsGet","location":"rest/dev.kord.rest.route/-route/-joined-private-archived-threads-get/index.html","searchKeys":["JoinedPrivateArchivedThreadsGet","object JoinedPrivateArchivedThreadsGet : Route<ListThreadsResponse> ","dev.kord.rest.route.Route.JoinedPrivateArchivedThreadsGet"]},{"name":"object LeaveThreadDelete : Route<Unit> ","description":"dev.kord.rest.route.Route.LeaveThreadDelete","location":"rest/dev.kord.rest.route/-route/-leave-thread-delete/index.html","searchKeys":["LeaveThreadDelete","object LeaveThreadDelete : Route<Unit> ","dev.kord.rest.route.Route.LeaveThreadDelete"]},{"name":"object Limits","description":"dev.kord.rest.builder.message.EmbedBuilder.Author.Limits","location":"rest/dev.kord.rest.builder.message/-embed-builder/-author/-limits/index.html","searchKeys":["Limits","object Limits","dev.kord.rest.builder.message.EmbedBuilder.Author.Limits"]},{"name":"object Limits","description":"dev.kord.rest.builder.message.EmbedBuilder.Field.Limits","location":"rest/dev.kord.rest.builder.message/-embed-builder/-field/-limits/index.html","searchKeys":["Limits","object Limits","dev.kord.rest.builder.message.EmbedBuilder.Field.Limits"]},{"name":"object Limits","description":"dev.kord.rest.builder.message.EmbedBuilder.Footer.Limits","location":"rest/dev.kord.rest.builder.message/-embed-builder/-footer/-limits/index.html","searchKeys":["Limits","object Limits","dev.kord.rest.builder.message.EmbedBuilder.Footer.Limits"]},{"name":"object Limits","description":"dev.kord.rest.builder.message.EmbedBuilder.Limits","location":"rest/dev.kord.rest.builder.message/-embed-builder/-limits/index.html","searchKeys":["Limits","object Limits","dev.kord.rest.builder.message.EmbedBuilder.Limits"]},{"name":"object MessageCrosspost : Route<DiscordMessage> ","description":"dev.kord.rest.route.Route.MessageCrosspost","location":"rest/dev.kord.rest.route/-route/-message-crosspost/index.html","searchKeys":["MessageCrosspost","object MessageCrosspost : Route<DiscordMessage> ","dev.kord.rest.route.Route.MessageCrosspost"]},{"name":"object MessageDelete : Route<Unit> ","description":"dev.kord.rest.route.Route.MessageDelete","location":"rest/dev.kord.rest.route/-route/-message-delete/index.html","searchKeys":["MessageDelete","object MessageDelete : Route<Unit> ","dev.kord.rest.route.Route.MessageDelete"]},{"name":"object MessageGet : Route<DiscordMessage> ","description":"dev.kord.rest.route.Route.MessageGet","location":"rest/dev.kord.rest.route/-route/-message-get/index.html","searchKeys":["MessageGet","object MessageGet : Route<DiscordMessage> ","dev.kord.rest.route.Route.MessageGet"]},{"name":"object MessageId : Route.Key","description":"dev.kord.rest.route.Route.MessageId","location":"rest/dev.kord.rest.route/-route/-message-id/index.html","searchKeys":["MessageId","object MessageId : Route.Key","dev.kord.rest.route.Route.MessageId"]},{"name":"object MessagePost : Route<DiscordMessage> ","description":"dev.kord.rest.route.Route.MessagePost","location":"rest/dev.kord.rest.route/-route/-message-post/index.html","searchKeys":["MessagePost","object MessagePost : Route<DiscordMessage> ","dev.kord.rest.route.Route.MessagePost"]},{"name":"object MessagesGet : Route<List<DiscordMessage>> ","description":"dev.kord.rest.route.Route.MessagesGet","location":"rest/dev.kord.rest.route/-route/-messages-get/index.html","searchKeys":["MessagesGet","object MessagesGet : Route<List<DiscordMessage>> ","dev.kord.rest.route.Route.MessagesGet"]},{"name":"object NewsChannelFollow : Route<FollowedChannelResponse> ","description":"dev.kord.rest.route.Route.NewsChannelFollow","location":"rest/dev.kord.rest.route/-route/-news-channel-follow/index.html","searchKeys":["NewsChannelFollow","object NewsChannelFollow : Route<FollowedChannelResponse> ","dev.kord.rest.route.Route.NewsChannelFollow"]},{"name":"object NitroStickerPacks : Route<List<DiscordStickerPack>> ","description":"dev.kord.rest.route.Route.NitroStickerPacks","location":"rest/dev.kord.rest.route/-route/-nitro-sticker-packs/index.html","searchKeys":["NitroStickerPacks","object NitroStickerPacks : Route<List<DiscordStickerPack>> ","dev.kord.rest.route.Route.NitroStickerPacks"]},{"name":"object OriginalInteractionResponseDelete : Route<Unit> ","description":"dev.kord.rest.route.Route.OriginalInteractionResponseDelete","location":"rest/dev.kord.rest.route/-route/-original-interaction-response-delete/index.html","searchKeys":["OriginalInteractionResponseDelete","object OriginalInteractionResponseDelete : Route<Unit> ","dev.kord.rest.route.Route.OriginalInteractionResponseDelete"]},{"name":"object OriginalInteractionResponseGet : Route<DiscordMessage> ","description":"dev.kord.rest.route.Route.OriginalInteractionResponseGet","location":"rest/dev.kord.rest.route/-route/-original-interaction-response-get/index.html","searchKeys":["OriginalInteractionResponseGet","object OriginalInteractionResponseGet : Route<DiscordMessage> ","dev.kord.rest.route.Route.OriginalInteractionResponseGet"]},{"name":"object OriginalInteractionResponseModify : Route<DiscordMessage> ","description":"dev.kord.rest.route.Route.OriginalInteractionResponseModify","location":"rest/dev.kord.rest.route/-route/-original-interaction-response-modify/index.html","searchKeys":["OriginalInteractionResponseModify","object OriginalInteractionResponseModify : Route<DiscordMessage> ","dev.kord.rest.route.Route.OriginalInteractionResponseModify"]},{"name":"object OthersVoiceStatePatch : Route<Unit> ","description":"dev.kord.rest.route.Route.OthersVoiceStatePatch","location":"rest/dev.kord.rest.route/-route/-others-voice-state-patch/index.html","searchKeys":["OthersVoiceStatePatch","object OthersVoiceStatePatch : Route<Unit> ","dev.kord.rest.route.Route.OthersVoiceStatePatch"]},{"name":"object OverwriteId : Route.Key","description":"dev.kord.rest.route.Route.OverwriteId","location":"rest/dev.kord.rest.route/-route/-overwrite-id/index.html","searchKeys":["OverwriteId","object OverwriteId : Route.Key","dev.kord.rest.route.Route.OverwriteId"]},{"name":"object OwnReactionDelete : Route<Unit> ","description":"dev.kord.rest.route.Route.OwnReactionDelete","location":"rest/dev.kord.rest.route/-route/-own-reaction-delete/index.html","searchKeys":["OwnReactionDelete","object OwnReactionDelete : Route<Unit> ","dev.kord.rest.route.Route.OwnReactionDelete"]},{"name":"object PNG : Image.Format","description":"dev.kord.rest.Image.Format.PNG","location":"rest/dev.kord.rest/-image/-format/-p-n-g/index.html","searchKeys":["PNG","object PNG : Image.Format","dev.kord.rest.Image.Format.PNG"]},{"name":"object PinDelete : Route<Unit> ","description":"dev.kord.rest.route.Route.PinDelete","location":"rest/dev.kord.rest.route/-route/-pin-delete/index.html","searchKeys":["PinDelete","object PinDelete : Route<Unit> ","dev.kord.rest.route.Route.PinDelete"]},{"name":"object PinPut : Route<Unit> ","description":"dev.kord.rest.route.Route.PinPut","location":"rest/dev.kord.rest.route/-route/-pin-put/index.html","searchKeys":["PinPut","object PinPut : Route<Unit> ","dev.kord.rest.route.Route.PinPut"]},{"name":"object PinsGet : Route<List<DiscordMessage>> ","description":"dev.kord.rest.route.Route.PinsGet","location":"rest/dev.kord.rest.route/-route/-pins-get/index.html","searchKeys":["PinsGet","object PinsGet : Route<List<DiscordMessage>> ","dev.kord.rest.route.Route.PinsGet"]},{"name":"object PrivateArchivedThreadsGet : Route<ListThreadsResponse> ","description":"dev.kord.rest.route.Route.PrivateArchivedThreadsGet","location":"rest/dev.kord.rest.route/-route/-private-archived-threads-get/index.html","searchKeys":["PrivateArchivedThreadsGet","object PrivateArchivedThreadsGet : Route<ListThreadsResponse> ","dev.kord.rest.route.Route.PrivateArchivedThreadsGet"]},{"name":"object PrivateThreadsGet : Route<ListThreadsResponse> ","description":"dev.kord.rest.route.Route.PrivateThreadsGet","location":"rest/dev.kord.rest.route/-route/-private-threads-get/index.html","searchKeys":["PrivateThreadsGet","object PrivateThreadsGet : Route<ListThreadsResponse> ","dev.kord.rest.route.Route.PrivateThreadsGet"]},{"name":"object PublicArchivedThreadsGet : Route<ListThreadsResponse> ","description":"dev.kord.rest.route.Route.PublicArchivedThreadsGet","location":"rest/dev.kord.rest.route/-route/-public-archived-threads-get/index.html","searchKeys":["PublicArchivedThreadsGet","object PublicArchivedThreadsGet : Route<ListThreadsResponse> ","dev.kord.rest.route.Route.PublicArchivedThreadsGet"]},{"name":"object ReactionDelete : Route<Unit> ","description":"dev.kord.rest.route.Route.ReactionDelete","location":"rest/dev.kord.rest.route/-route/-reaction-delete/index.html","searchKeys":["ReactionDelete","object ReactionDelete : Route<Unit> ","dev.kord.rest.route.Route.ReactionDelete"]},{"name":"object ReactionPut : Route<Unit> ","description":"dev.kord.rest.route.Route.ReactionPut","location":"rest/dev.kord.rest.route/-route/-reaction-put/index.html","searchKeys":["ReactionPut","object ReactionPut : Route<Unit> ","dev.kord.rest.route.Route.ReactionPut"]},{"name":"object ReactionsGet : Route<List<DiscordUser>> ","description":"dev.kord.rest.route.Route.ReactionsGet","location":"rest/dev.kord.rest.route/-route/-reactions-get/index.html","searchKeys":["ReactionsGet","object ReactionsGet : Route<List<DiscordUser>> ","dev.kord.rest.route.Route.ReactionsGet"]},{"name":"object RemoveUserFromThreadDelete : Route<Unit> ","description":"dev.kord.rest.route.Route.RemoveUserFromThreadDelete","location":"rest/dev.kord.rest.route/-route/-remove-user-from-thread-delete/index.html","searchKeys":["RemoveUserFromThreadDelete","object RemoveUserFromThreadDelete : Route<Unit> ","dev.kord.rest.route.Route.RemoveUserFromThreadDelete"]},{"name":"object RoleId : Route.Key","description":"dev.kord.rest.route.Route.RoleId","location":"rest/dev.kord.rest.route/-route/-role-id/index.html","searchKeys":["RoleId","object RoleId : Route.Key","dev.kord.rest.route.Route.RoleId"]},{"name":"object ScheduledEventId : Route.Key","description":"dev.kord.rest.route.Route.ScheduledEventId","location":"rest/dev.kord.rest.route/-route/-scheduled-event-id/index.html","searchKeys":["ScheduledEventId","object ScheduledEventId : Route.Key","dev.kord.rest.route.Route.ScheduledEventId"]},{"name":"object SelfVoiceStatePatch : Route<Unit> ","description":"dev.kord.rest.route.Route.SelfVoiceStatePatch","location":"rest/dev.kord.rest.route/-route/-self-voice-state-patch/index.html","searchKeys":["SelfVoiceStatePatch","object SelfVoiceStatePatch : Route<Unit> ","dev.kord.rest.route.Route.SelfVoiceStatePatch"]},{"name":"object StageInstanceDelete : Route<Unit> ","description":"dev.kord.rest.route.Route.StageInstanceDelete","location":"rest/dev.kord.rest.route/-route/-stage-instance-delete/index.html","searchKeys":["StageInstanceDelete","object StageInstanceDelete : Route<Unit> ","dev.kord.rest.route.Route.StageInstanceDelete"]},{"name":"object StageInstanceGet : Route<DiscordStageInstance> ","description":"dev.kord.rest.route.Route.StageInstanceGet","location":"rest/dev.kord.rest.route/-route/-stage-instance-get/index.html","searchKeys":["StageInstanceGet","object StageInstanceGet : Route<DiscordStageInstance> ","dev.kord.rest.route.Route.StageInstanceGet"]},{"name":"object StageInstancePatch : Route<DiscordStageInstance> ","description":"dev.kord.rest.route.Route.StageInstancePatch","location":"rest/dev.kord.rest.route/-route/-stage-instance-patch/index.html","searchKeys":["StageInstancePatch","object StageInstancePatch : Route<DiscordStageInstance> ","dev.kord.rest.route.Route.StageInstancePatch"]},{"name":"object StageInstancePost : Route<DiscordStageInstance> ","description":"dev.kord.rest.route.Route.StageInstancePost","location":"rest/dev.kord.rest.route/-route/-stage-instance-post/index.html","searchKeys":["StageInstancePost","object StageInstancePost : Route<DiscordStageInstance> ","dev.kord.rest.route.Route.StageInstancePost"]},{"name":"object StartPublicThreadWithMessagePost : Route<DiscordChannel> ","description":"dev.kord.rest.route.Route.StartPublicThreadWithMessagePost","location":"rest/dev.kord.rest.route/-route/-start-public-thread-with-message-post/index.html","searchKeys":["StartPublicThreadWithMessagePost","object StartPublicThreadWithMessagePost : Route<DiscordChannel> ","dev.kord.rest.route.Route.StartPublicThreadWithMessagePost"]},{"name":"object StartThreadPost : Route<DiscordChannel> ","description":"dev.kord.rest.route.Route.StartThreadPost","location":"rest/dev.kord.rest.route/-route/-start-thread-post/index.html","searchKeys":["StartThreadPost","object StartThreadPost : Route<DiscordChannel> ","dev.kord.rest.route.Route.StartThreadPost"]},{"name":"object StickerGet : Route<DiscordMessageSticker> ","description":"dev.kord.rest.route.Route.StickerGet","location":"rest/dev.kord.rest.route/-route/-sticker-get/index.html","searchKeys":["StickerGet","object StickerGet : Route<DiscordMessageSticker> ","dev.kord.rest.route.Route.StickerGet"]},{"name":"object StickerId : Route.Key","description":"dev.kord.rest.route.Route.StickerId","location":"rest/dev.kord.rest.route/-route/-sticker-id/index.html","searchKeys":["StickerId","object StickerId : Route.Key","dev.kord.rest.route.Route.StickerId"]},{"name":"object TemplateCode : Route.Key","description":"dev.kord.rest.route.Route.TemplateCode","location":"rest/dev.kord.rest.route/-route/-template-code/index.html","searchKeys":["TemplateCode","object TemplateCode : Route.Key","dev.kord.rest.route.Route.TemplateCode"]},{"name":"object TemplateDelete : Route<DiscordTemplate> ","description":"dev.kord.rest.route.Route.TemplateDelete","location":"rest/dev.kord.rest.route/-route/-template-delete/index.html","searchKeys":["TemplateDelete","object TemplateDelete : Route<DiscordTemplate> ","dev.kord.rest.route.Route.TemplateDelete"]},{"name":"object TemplateGet : Route<DiscordTemplate> ","description":"dev.kord.rest.route.Route.TemplateGet","location":"rest/dev.kord.rest.route/-route/-template-get/index.html","searchKeys":["TemplateGet","object TemplateGet : Route<DiscordTemplate> ","dev.kord.rest.route.Route.TemplateGet"]},{"name":"object TemplatePatch : Route<DiscordTemplate> ","description":"dev.kord.rest.route.Route.TemplatePatch","location":"rest/dev.kord.rest.route/-route/-template-patch/index.html","searchKeys":["TemplatePatch","object TemplatePatch : Route<DiscordTemplate> ","dev.kord.rest.route.Route.TemplatePatch"]},{"name":"object TemplateSyncPut : Route<DiscordTemplate> ","description":"dev.kord.rest.route.Route.TemplateSyncPut","location":"rest/dev.kord.rest.route/-route/-template-sync-put/index.html","searchKeys":["TemplateSyncPut","object TemplateSyncPut : Route<DiscordTemplate> ","dev.kord.rest.route.Route.TemplateSyncPut"]},{"name":"object ThreadMembersGet : Route<List<DiscordThreadMember>> ","description":"dev.kord.rest.route.Route.ThreadMembersGet","location":"rest/dev.kord.rest.route/-route/-thread-members-get/index.html","searchKeys":["ThreadMembersGet","object ThreadMembersGet : Route<List<DiscordThreadMember>> ","dev.kord.rest.route.Route.ThreadMembersGet"]},{"name":"object TypingIndicatorPost : Route<Unit> ","description":"dev.kord.rest.route.Route.TypingIndicatorPost","location":"rest/dev.kord.rest.route/-route/-typing-indicator-post/index.html","searchKeys":["TypingIndicatorPost","object TypingIndicatorPost : Route<Unit> ","dev.kord.rest.route.Route.TypingIndicatorPost"]},{"name":"object UserConnectionsGet : Route<List<Connection>> ","description":"dev.kord.rest.route.Route.UserConnectionsGet","location":"rest/dev.kord.rest.route/-route/-user-connections-get/index.html","searchKeys":["UserConnectionsGet","object UserConnectionsGet : Route<List<Connection>> ","dev.kord.rest.route.Route.UserConnectionsGet"]},{"name":"object UserGet : Route<DiscordUser> ","description":"dev.kord.rest.route.Route.UserGet","location":"rest/dev.kord.rest.route/-route/-user-get/index.html","searchKeys":["UserGet","object UserGet : Route<DiscordUser> ","dev.kord.rest.route.Route.UserGet"]},{"name":"object UserId : Route.Key","description":"dev.kord.rest.route.Route.UserId","location":"rest/dev.kord.rest.route/-route/-user-id/index.html","searchKeys":["UserId","object UserId : Route.Key","dev.kord.rest.route.Route.UserId"]},{"name":"object VoiceRegionsGet : Route<List<DiscordVoiceRegion>> ","description":"dev.kord.rest.route.Route.VoiceRegionsGet","location":"rest/dev.kord.rest.route/-route/-voice-regions-get/index.html","searchKeys":["VoiceRegionsGet","object VoiceRegionsGet : Route<List<DiscordVoiceRegion>> ","dev.kord.rest.route.Route.VoiceRegionsGet"]},{"name":"object WEBP : Image.Format","description":"dev.kord.rest.Image.Format.WEBP","location":"rest/dev.kord.rest/-image/-format/-w-e-b-p/index.html","searchKeys":["WEBP","object WEBP : Image.Format","dev.kord.rest.Image.Format.WEBP"]},{"name":"object WebhookByTokenDelete : Route<Unit> ","description":"dev.kord.rest.route.Route.WebhookByTokenDelete","location":"rest/dev.kord.rest.route/-route/-webhook-by-token-delete/index.html","searchKeys":["WebhookByTokenDelete","object WebhookByTokenDelete : Route<Unit> ","dev.kord.rest.route.Route.WebhookByTokenDelete"]},{"name":"object WebhookByTokenGet : Route<DiscordWebhook> ","description":"dev.kord.rest.route.Route.WebhookByTokenGet","location":"rest/dev.kord.rest.route/-route/-webhook-by-token-get/index.html","searchKeys":["WebhookByTokenGet","object WebhookByTokenGet : Route<DiscordWebhook> ","dev.kord.rest.route.Route.WebhookByTokenGet"]},{"name":"object WebhookByTokenPatch : Route<DiscordWebhook> ","description":"dev.kord.rest.route.Route.WebhookByTokenPatch","location":"rest/dev.kord.rest.route/-route/-webhook-by-token-patch/index.html","searchKeys":["WebhookByTokenPatch","object WebhookByTokenPatch : Route<DiscordWebhook> ","dev.kord.rest.route.Route.WebhookByTokenPatch"]},{"name":"object WebhookDelete : Route<Unit> ","description":"dev.kord.rest.route.Route.WebhookDelete","location":"rest/dev.kord.rest.route/-route/-webhook-delete/index.html","searchKeys":["WebhookDelete","object WebhookDelete : Route<Unit> ","dev.kord.rest.route.Route.WebhookDelete"]},{"name":"object WebhookGet : Route<DiscordWebhook> ","description":"dev.kord.rest.route.Route.WebhookGet","location":"rest/dev.kord.rest.route/-route/-webhook-get/index.html","searchKeys":["WebhookGet","object WebhookGet : Route<DiscordWebhook> ","dev.kord.rest.route.Route.WebhookGet"]},{"name":"object WebhookId : Route.Key","description":"dev.kord.rest.route.Route.WebhookId","location":"rest/dev.kord.rest.route/-route/-webhook-id/index.html","searchKeys":["WebhookId","object WebhookId : Route.Key","dev.kord.rest.route.Route.WebhookId"]},{"name":"object WebhookPatch : Route<DiscordWebhook> ","description":"dev.kord.rest.route.Route.WebhookPatch","location":"rest/dev.kord.rest.route/-route/-webhook-patch/index.html","searchKeys":["WebhookPatch","object WebhookPatch : Route<DiscordWebhook> ","dev.kord.rest.route.Route.WebhookPatch"]},{"name":"object WebhookPost : Route<DiscordWebhook> ","description":"dev.kord.rest.route.Route.WebhookPost","location":"rest/dev.kord.rest.route/-route/-webhook-post/index.html","searchKeys":["WebhookPost","object WebhookPost : Route<DiscordWebhook> ","dev.kord.rest.route.Route.WebhookPost"]},{"name":"object WebhookToken : Route.Key","description":"dev.kord.rest.route.Route.WebhookToken","location":"rest/dev.kord.rest.route/-route/-webhook-token/index.html","searchKeys":["WebhookToken","object WebhookToken : Route.Key","dev.kord.rest.route.Route.WebhookToken"]},{"name":"open class Key(val identifier: String, val isMajor: Boolean = false)","description":"dev.kord.rest.route.Route.Key","location":"rest/dev.kord.rest.route/-route/-key/index.html","searchKeys":["Key","open class Key(val identifier: String, val isMajor: Boolean = false)","dev.kord.rest.route.Route.Key"]},{"name":"open fun addFile(name: String, contentProvider: ChannelProvider): NamedFile","description":"dev.kord.rest.builder.message.create.MessageCreateBuilder.addFile","location":"rest/dev.kord.rest.builder.message.create/-message-create-builder/add-file.html","searchKeys":["addFile","open fun addFile(name: String, contentProvider: ChannelProvider): NamedFile","dev.kord.rest.builder.message.create.MessageCreateBuilder.addFile"]},{"name":"open fun addFile(name: String, contentProvider: ChannelProvider): NamedFile","description":"dev.kord.rest.builder.message.modify.MessageModifyBuilder.addFile","location":"rest/dev.kord.rest.builder.message.modify/-message-modify-builder/add-file.html","searchKeys":["addFile","open fun addFile(name: String, contentProvider: ChannelProvider): NamedFile","dev.kord.rest.builder.message.modify.MessageModifyBuilder.addFile"]},{"name":"open fun description(locale: Locale, description: String)","description":"dev.kord.rest.builder.interaction.LocalizedDescriptionBuilder.description","location":"rest/dev.kord.rest.builder.interaction/-localized-description-builder/description.html","searchKeys":["description","open fun description(locale: Locale, description: String)","dev.kord.rest.builder.interaction.LocalizedDescriptionBuilder.description"]},{"name":"open fun disableCommandInGuilds()","description":"dev.kord.rest.builder.interaction.ApplicationCommandCreateBuilder.disableCommandInGuilds","location":"rest/dev.kord.rest.builder.interaction/-application-command-create-builder/disable-command-in-guilds.html","searchKeys":["disableCommandInGuilds","open fun disableCommandInGuilds()","dev.kord.rest.builder.interaction.ApplicationCommandCreateBuilder.disableCommandInGuilds"]},{"name":"open fun name(locale: Locale, name: String)","description":"dev.kord.rest.builder.interaction.LocalizedNameBuilder.name","location":"rest/dev.kord.rest.builder.interaction/-localized-name-builder/name.html","searchKeys":["name","open fun name(locale: Locale, name: String)","dev.kord.rest.builder.interaction.LocalizedNameBuilder.name"]},{"name":"open override fun addOverwrite(overwrite: Overwrite)","description":"dev.kord.rest.builder.channel.PermissionOverwritesCreateBuilder.addOverwrite","location":"rest/dev.kord.rest.builder.channel/-permission-overwrites-create-builder/add-overwrite.html","searchKeys":["addOverwrite","open override fun addOverwrite(overwrite: Overwrite)","dev.kord.rest.builder.channel.PermissionOverwritesCreateBuilder.addOverwrite"]},{"name":"open override fun addOverwrite(overwrite: Overwrite)","description":"dev.kord.rest.builder.channel.PermissionOverwritesModifyBuilder.addOverwrite","location":"rest/dev.kord.rest.builder.channel/-permission-overwrites-modify-builder/add-overwrite.html","searchKeys":["addOverwrite","open override fun addOverwrite(overwrite: Overwrite)","dev.kord.rest.builder.channel.PermissionOverwritesModifyBuilder.addOverwrite"]},{"name":"open override fun build(): DiscordChatComponent","description":"dev.kord.rest.builder.component.ActionRowBuilder.build","location":"rest/dev.kord.rest.builder.component/-action-row-builder/build.html","searchKeys":["build","open override fun build(): DiscordChatComponent","dev.kord.rest.builder.component.ActionRowBuilder.build"]},{"name":"open override fun build(): DiscordChatComponent","description":"dev.kord.rest.builder.component.ButtonBuilder.InteractionButtonBuilder.build","location":"rest/dev.kord.rest.builder.component/-button-builder/-interaction-button-builder/build.html","searchKeys":["build","open override fun build(): DiscordChatComponent","dev.kord.rest.builder.component.ButtonBuilder.InteractionButtonBuilder.build"]},{"name":"open override fun build(): DiscordChatComponent","description":"dev.kord.rest.builder.component.ButtonBuilder.LinkButtonBuilder.build","location":"rest/dev.kord.rest.builder.component/-button-builder/-link-button-builder/build.html","searchKeys":["build","open override fun build(): DiscordChatComponent","dev.kord.rest.builder.component.ButtonBuilder.LinkButtonBuilder.build"]},{"name":"open override fun build(): DiscordChatComponent","description":"dev.kord.rest.builder.component.SelectMenuBuilder.build","location":"rest/dev.kord.rest.builder.component/-select-menu-builder/build.html","searchKeys":["build","open override fun build(): DiscordChatComponent","dev.kord.rest.builder.component.SelectMenuBuilder.build"]},{"name":"open override fun build(): DiscordTextInputComponent","description":"dev.kord.rest.builder.component.TextInputBuilder.build","location":"rest/dev.kord.rest.builder.component/-text-input-builder/build.html","searchKeys":["build","open override fun build(): DiscordTextInputComponent","dev.kord.rest.builder.component.TextInputBuilder.build"]},{"name":"open override fun choice(name: String, value: Double, nameLocalizations: Optional<Map<Locale, String>?>)","description":"dev.kord.rest.builder.interaction.NumberOptionBuilder.choice","location":"rest/dev.kord.rest.builder.interaction/-number-option-builder/choice.html","searchKeys":["choice","open override fun choice(name: String, value: Double, nameLocalizations: Optional<Map<Locale, String>?>)","dev.kord.rest.builder.interaction.NumberOptionBuilder.choice"]},{"name":"open override fun choice(name: String, value: Long, nameLocalizations: Optional<Map<Locale, String>?>)","description":"dev.kord.rest.builder.interaction.IntegerOptionBuilder.choice","location":"rest/dev.kord.rest.builder.interaction/-integer-option-builder/choice.html","searchKeys":["choice","open override fun choice(name: String, value: Long, nameLocalizations: Optional<Map<Locale, String>?>)","dev.kord.rest.builder.interaction.IntegerOptionBuilder.choice"]},{"name":"open override fun choice(name: String, value: String, nameLocalizations: Optional<Map<Locale, String>?>)","description":"dev.kord.rest.builder.interaction.StringChoiceBuilder.choice","location":"rest/dev.kord.rest.builder.interaction/-string-choice-builder/choice.html","searchKeys":["choice","open override fun choice(name: String, value: String, nameLocalizations: Optional<Map<Locale, String>?>)","dev.kord.rest.builder.interaction.StringChoiceBuilder.choice"]},{"name":"open override fun toRequest(): ApplicationCommandOption","description":"dev.kord.rest.builder.interaction.BaseChoiceBuilder.toRequest","location":"rest/dev.kord.rest.builder.interaction/-base-choice-builder/to-request.html","searchKeys":["toRequest","open override fun toRequest(): ApplicationCommandOption","dev.kord.rest.builder.interaction.BaseChoiceBuilder.toRequest"]},{"name":"open override fun toRequest(): ApplicationCommandOption","description":"dev.kord.rest.builder.interaction.BaseCommandOptionBuilder.toRequest","location":"rest/dev.kord.rest.builder.interaction/-base-command-option-builder/to-request.html","searchKeys":["toRequest","open override fun toRequest(): ApplicationCommandOption","dev.kord.rest.builder.interaction.BaseCommandOptionBuilder.toRequest"]},{"name":"open override fun toRequest(): ApplicationCommandOption","description":"dev.kord.rest.builder.interaction.ChannelBuilder.toRequest","location":"rest/dev.kord.rest.builder.interaction/-channel-builder/to-request.html","searchKeys":["toRequest","open override fun toRequest(): ApplicationCommandOption","dev.kord.rest.builder.interaction.ChannelBuilder.toRequest"]},{"name":"open override fun toRequest(): ApplicationCommandOption","description":"dev.kord.rest.builder.interaction.NumericOptionBuilder.toRequest","location":"rest/dev.kord.rest.builder.interaction/-numeric-option-builder/to-request.html","searchKeys":["toRequest","open override fun toRequest(): ApplicationCommandOption","dev.kord.rest.builder.interaction.NumericOptionBuilder.toRequest"]},{"name":"open override fun toRequest(): ApplicationCommandOption","description":"dev.kord.rest.builder.interaction.OptionsBuilder.toRequest","location":"rest/dev.kord.rest.builder.interaction/-options-builder/to-request.html","searchKeys":["toRequest","open override fun toRequest(): ApplicationCommandOption","dev.kord.rest.builder.interaction.OptionsBuilder.toRequest"]},{"name":"open override fun toRequest(): ApplicationCommandOption","description":"dev.kord.rest.builder.interaction.StringChoiceBuilder.toRequest","location":"rest/dev.kord.rest.builder.interaction/-string-choice-builder/to-request.html","searchKeys":["toRequest","open override fun toRequest(): ApplicationCommandOption","dev.kord.rest.builder.interaction.StringChoiceBuilder.toRequest"]},{"name":"open override fun toRequest(): AuditLogGetRequest","description":"dev.kord.rest.builder.auditlog.AuditLogGetRequestBuilder.toRequest","location":"rest/dev.kord.rest.builder.auditlog/-audit-log-get-request-builder/to-request.html","searchKeys":["toRequest","open override fun toRequest(): AuditLogGetRequest","dev.kord.rest.builder.auditlog.AuditLogGetRequestBuilder.toRequest"]},{"name":"open override fun toRequest(): ChannelModifyPatchRequest","description":"dev.kord.rest.builder.channel.CategoryModifyBuilder.toRequest","location":"rest/dev.kord.rest.builder.channel/-category-modify-builder/to-request.html","searchKeys":["toRequest","open override fun toRequest(): ChannelModifyPatchRequest","dev.kord.rest.builder.channel.CategoryModifyBuilder.toRequest"]},{"name":"open override fun toRequest(): ChannelModifyPatchRequest","description":"dev.kord.rest.builder.channel.NewsChannelModifyBuilder.toRequest","location":"rest/dev.kord.rest.builder.channel/-news-channel-modify-builder/to-request.html","searchKeys":["toRequest","open override fun toRequest(): ChannelModifyPatchRequest","dev.kord.rest.builder.channel.NewsChannelModifyBuilder.toRequest"]},{"name":"open override fun toRequest(): ChannelModifyPatchRequest","description":"dev.kord.rest.builder.channel.StageVoiceChannelModifyBuilder.toRequest","location":"rest/dev.kord.rest.builder.channel/-stage-voice-channel-modify-builder/to-request.html","searchKeys":["toRequest","open override fun toRequest(): ChannelModifyPatchRequest","dev.kord.rest.builder.channel.StageVoiceChannelModifyBuilder.toRequest"]},{"name":"open override fun toRequest(): ChannelModifyPatchRequest","description":"dev.kord.rest.builder.channel.TextChannelModifyBuilder.toRequest","location":"rest/dev.kord.rest.builder.channel/-text-channel-modify-builder/to-request.html","searchKeys":["toRequest","open override fun toRequest(): ChannelModifyPatchRequest","dev.kord.rest.builder.channel.TextChannelModifyBuilder.toRequest"]},{"name":"open override fun toRequest(): ChannelModifyPatchRequest","description":"dev.kord.rest.builder.channel.VoiceChannelModifyBuilder.toRequest","location":"rest/dev.kord.rest.builder.channel/-voice-channel-modify-builder/to-request.html","searchKeys":["toRequest","open override fun toRequest(): ChannelModifyPatchRequest","dev.kord.rest.builder.channel.VoiceChannelModifyBuilder.toRequest"]},{"name":"open override fun toRequest(): ChannelModifyPatchRequest","description":"dev.kord.rest.builder.channel.thread.ThreadModifyBuilder.toRequest","location":"rest/dev.kord.rest.builder.channel.thread/-thread-modify-builder/to-request.html","searchKeys":["toRequest","open override fun toRequest(): ChannelModifyPatchRequest","dev.kord.rest.builder.channel.thread.ThreadModifyBuilder.toRequest"]},{"name":"open override fun toRequest(): ChannelPermissionEditRequest","description":"dev.kord.rest.builder.channel.ChannelPermissionModifyBuilder.toRequest","location":"rest/dev.kord.rest.builder.channel/-channel-permission-modify-builder/to-request.html","searchKeys":["toRequest","open override fun toRequest(): ChannelPermissionEditRequest","dev.kord.rest.builder.channel.ChannelPermissionModifyBuilder.toRequest"]},{"name":"open override fun toRequest(): CurrentUserModifyRequest","description":"dev.kord.rest.builder.user.CurrentUserModifyBuilder.toRequest","location":"rest/dev.kord.rest.builder.user/-current-user-modify-builder/to-request.html","searchKeys":["toRequest","open override fun toRequest(): CurrentUserModifyRequest","dev.kord.rest.builder.user.CurrentUserModifyBuilder.toRequest"]},{"name":"open override fun toRequest(): CurrentVoiceStateModifyRequest","description":"dev.kord.rest.builder.guild.CurrentVoiceStateModifyBuilder.toRequest","location":"rest/dev.kord.rest.builder.guild/-current-voice-state-modify-builder/to-request.html","searchKeys":["toRequest","open override fun toRequest(): CurrentVoiceStateModifyRequest","dev.kord.rest.builder.guild.CurrentVoiceStateModifyBuilder.toRequest"]},{"name":"open override fun toRequest(): DiscordModal","description":"dev.kord.rest.builder.interaction.ModalBuilder.toRequest","location":"rest/dev.kord.rest.builder.interaction/-modal-builder/to-request.html","searchKeys":["toRequest","open override fun toRequest(): DiscordModal","dev.kord.rest.builder.interaction.ModalBuilder.toRequest"]},{"name":"open override fun toRequest(): DiscordWelcomeScreenChannel","description":"dev.kord.rest.builder.guild.WelcomeScreenChannelBuilder.toRequest","location":"rest/dev.kord.rest.builder.guild/-welcome-screen-channel-builder/to-request.html","searchKeys":["toRequest","open override fun toRequest(): DiscordWelcomeScreenChannel","dev.kord.rest.builder.guild.WelcomeScreenChannelBuilder.toRequest"]},{"name":"open override fun toRequest(): EmbedAuthorRequest","description":"dev.kord.rest.builder.message.EmbedBuilder.Author.toRequest","location":"rest/dev.kord.rest.builder.message/-embed-builder/-author/to-request.html","searchKeys":["toRequest","open override fun toRequest(): EmbedAuthorRequest","dev.kord.rest.builder.message.EmbedBuilder.Author.toRequest"]},{"name":"open override fun toRequest(): EmbedFieldRequest","description":"dev.kord.rest.builder.message.EmbedBuilder.Field.toRequest","location":"rest/dev.kord.rest.builder.message/-embed-builder/-field/to-request.html","searchKeys":["toRequest","open override fun toRequest(): EmbedFieldRequest","dev.kord.rest.builder.message.EmbedBuilder.Field.toRequest"]},{"name":"open override fun toRequest(): EmbedFooterRequest","description":"dev.kord.rest.builder.message.EmbedBuilder.Footer.toRequest","location":"rest/dev.kord.rest.builder.message/-embed-builder/-footer/to-request.html","searchKeys":["toRequest","open override fun toRequest(): EmbedFooterRequest","dev.kord.rest.builder.message.EmbedBuilder.Footer.toRequest"]},{"name":"open override fun toRequest(): EmbedRequest","description":"dev.kord.rest.builder.message.EmbedBuilder.toRequest","location":"rest/dev.kord.rest.builder.message/-embed-builder/to-request.html","searchKeys":["toRequest","open override fun toRequest(): EmbedRequest","dev.kord.rest.builder.message.EmbedBuilder.toRequest"]},{"name":"open override fun toRequest(): EmbedThumbnailRequest","description":"dev.kord.rest.builder.message.EmbedBuilder.Thumbnail.toRequest","location":"rest/dev.kord.rest.builder.message/-embed-builder/-thumbnail/to-request.html","searchKeys":["toRequest","open override fun toRequest(): EmbedThumbnailRequest","dev.kord.rest.builder.message.EmbedBuilder.Thumbnail.toRequest"]},{"name":"open override fun toRequest(): EmojiCreateRequest","description":"dev.kord.rest.builder.guild.EmojiCreateBuilder.toRequest","location":"rest/dev.kord.rest.builder.guild/-emoji-create-builder/to-request.html","searchKeys":["toRequest","open override fun toRequest(): EmojiCreateRequest","dev.kord.rest.builder.guild.EmojiCreateBuilder.toRequest"]},{"name":"open override fun toRequest(): EmojiModifyRequest","description":"dev.kord.rest.builder.guild.EmojiModifyBuilder.toRequest","location":"rest/dev.kord.rest.builder.guild/-emoji-modify-builder/to-request.html","searchKeys":["toRequest","open override fun toRequest(): EmojiModifyRequest","dev.kord.rest.builder.guild.EmojiModifyBuilder.toRequest"]},{"name":"open override fun toRequest(): GroupDMCreateRequest","description":"dev.kord.rest.builder.user.GroupDMCreateBuilder.toRequest","location":"rest/dev.kord.rest.builder.user/-group-d-m-create-builder/to-request.html","searchKeys":["toRequest","open override fun toRequest(): GroupDMCreateRequest","dev.kord.rest.builder.user.GroupDMCreateBuilder.toRequest"]},{"name":"open override fun toRequest(): GuildBanCreateRequest","description":"dev.kord.rest.builder.ban.BanCreateBuilder.toRequest","location":"rest/dev.kord.rest.builder.ban/-ban-create-builder/to-request.html","searchKeys":["toRequest","open override fun toRequest(): GuildBanCreateRequest","dev.kord.rest.builder.ban.BanCreateBuilder.toRequest"]},{"name":"open override fun toRequest(): GuildChannelCreateRequest","description":"dev.kord.rest.builder.channel.CategoryCreateBuilder.toRequest","location":"rest/dev.kord.rest.builder.channel/-category-create-builder/to-request.html","searchKeys":["toRequest","open override fun toRequest(): GuildChannelCreateRequest","dev.kord.rest.builder.channel.CategoryCreateBuilder.toRequest"]},{"name":"open override fun toRequest(): GuildChannelCreateRequest","description":"dev.kord.rest.builder.channel.NewsChannelCreateBuilder.toRequest","location":"rest/dev.kord.rest.builder.channel/-news-channel-create-builder/to-request.html","searchKeys":["toRequest","open override fun toRequest(): GuildChannelCreateRequest","dev.kord.rest.builder.channel.NewsChannelCreateBuilder.toRequest"]},{"name":"open override fun toRequest(): GuildChannelCreateRequest","description":"dev.kord.rest.builder.channel.TextChannelCreateBuilder.toRequest","location":"rest/dev.kord.rest.builder.channel/-text-channel-create-builder/to-request.html","searchKeys":["toRequest","open override fun toRequest(): GuildChannelCreateRequest","dev.kord.rest.builder.channel.TextChannelCreateBuilder.toRequest"]},{"name":"open override fun toRequest(): GuildChannelCreateRequest","description":"dev.kord.rest.builder.channel.VoiceChannelCreateBuilder.toRequest","location":"rest/dev.kord.rest.builder.channel/-voice-channel-create-builder/to-request.html","searchKeys":["toRequest","open override fun toRequest(): GuildChannelCreateRequest","dev.kord.rest.builder.channel.VoiceChannelCreateBuilder.toRequest"]},{"name":"open override fun toRequest(): GuildChannelPositionModifyRequest","description":"dev.kord.rest.builder.channel.GuildChannelPositionModifyBuilder.toRequest","location":"rest/dev.kord.rest.builder.channel/-guild-channel-position-modify-builder/to-request.html","searchKeys":["toRequest","open override fun toRequest(): GuildChannelPositionModifyRequest","dev.kord.rest.builder.channel.GuildChannelPositionModifyBuilder.toRequest"]},{"name":"open override fun toRequest(): GuildCreateRequest","description":"dev.kord.rest.builder.guild.GuildCreateBuilder.toRequest","location":"rest/dev.kord.rest.builder.guild/-guild-create-builder/to-request.html","searchKeys":["toRequest","open override fun toRequest(): GuildCreateRequest","dev.kord.rest.builder.guild.GuildCreateBuilder.toRequest"]},{"name":"open override fun toRequest(): GuildFromTemplateCreateRequest","description":"dev.kord.rest.builder.template.GuildFromTemplateCreateBuilder.toRequest","location":"rest/dev.kord.rest.builder.template/-guild-from-template-create-builder/to-request.html","searchKeys":["toRequest","open override fun toRequest(): GuildFromTemplateCreateRequest","dev.kord.rest.builder.template.GuildFromTemplateCreateBuilder.toRequest"]},{"name":"open override fun toRequest(): GuildIntegrationModifyRequest","description":"dev.kord.rest.builder.integration.IntegrationModifyBuilder.toRequest","location":"rest/dev.kord.rest.builder.integration/-integration-modify-builder/to-request.html","searchKeys":["toRequest","open override fun toRequest(): GuildIntegrationModifyRequest","dev.kord.rest.builder.integration.IntegrationModifyBuilder.toRequest"]},{"name":"open override fun toRequest(): GuildMemberAddRequest","description":"dev.kord.rest.builder.member.MemberAddBuilder.toRequest","location":"rest/dev.kord.rest.builder.member/-member-add-builder/to-request.html","searchKeys":["toRequest","open override fun toRequest(): GuildMemberAddRequest","dev.kord.rest.builder.member.MemberAddBuilder.toRequest"]},{"name":"open override fun toRequest(): GuildMemberModifyRequest","description":"dev.kord.rest.builder.member.MemberModifyBuilder.toRequest","location":"rest/dev.kord.rest.builder.member/-member-modify-builder/to-request.html","searchKeys":["toRequest","open override fun toRequest(): GuildMemberModifyRequest","dev.kord.rest.builder.member.MemberModifyBuilder.toRequest"]},{"name":"open override fun toRequest(): GuildModifyRequest","description":"dev.kord.rest.builder.guild.GuildModifyBuilder.toRequest","location":"rest/dev.kord.rest.builder.guild/-guild-modify-builder/to-request.html","searchKeys":["toRequest","open override fun toRequest(): GuildModifyRequest","dev.kord.rest.builder.guild.GuildModifyBuilder.toRequest"]},{"name":"open override fun toRequest(): GuildRoleCreateRequest","description":"dev.kord.rest.builder.role.RoleCreateBuilder.toRequest","location":"rest/dev.kord.rest.builder.role/-role-create-builder/to-request.html","searchKeys":["toRequest","open override fun toRequest(): GuildRoleCreateRequest","dev.kord.rest.builder.role.RoleCreateBuilder.toRequest"]},{"name":"open override fun toRequest(): GuildRoleModifyRequest","description":"dev.kord.rest.builder.role.RoleModifyBuilder.toRequest","location":"rest/dev.kord.rest.builder.role/-role-modify-builder/to-request.html","searchKeys":["toRequest","open override fun toRequest(): GuildRoleModifyRequest","dev.kord.rest.builder.role.RoleModifyBuilder.toRequest"]},{"name":"open override fun toRequest(): GuildRolePositionModifyRequest","description":"dev.kord.rest.builder.role.RolePositionsModifyBuilder.toRequest","location":"rest/dev.kord.rest.builder.role/-role-positions-modify-builder/to-request.html","searchKeys":["toRequest","open override fun toRequest(): GuildRolePositionModifyRequest","dev.kord.rest.builder.role.RolePositionsModifyBuilder.toRequest"]},{"name":"open override fun toRequest(): GuildScheduledEventCreateRequest","description":"dev.kord.rest.builder.guild.ScheduledEventCreateBuilder.toRequest","location":"rest/dev.kord.rest.builder.guild/-scheduled-event-create-builder/to-request.html","searchKeys":["toRequest","open override fun toRequest(): GuildScheduledEventCreateRequest","dev.kord.rest.builder.guild.ScheduledEventCreateBuilder.toRequest"]},{"name":"open override fun toRequest(): GuildStickerModifyRequest","description":"dev.kord.rest.builder.guild.StickerModifyBuilder.toRequest","location":"rest/dev.kord.rest.builder.guild/-sticker-modify-builder/to-request.html","searchKeys":["toRequest","open override fun toRequest(): GuildStickerModifyRequest","dev.kord.rest.builder.guild.StickerModifyBuilder.toRequest"]},{"name":"open override fun toRequest(): GuildTemplateCreateRequest","description":"dev.kord.rest.builder.template.GuildTemplateCreateBuilder.toRequest","location":"rest/dev.kord.rest.builder.template/-guild-template-create-builder/to-request.html","searchKeys":["toRequest","open override fun toRequest(): GuildTemplateCreateRequest","dev.kord.rest.builder.template.GuildTemplateCreateBuilder.toRequest"]},{"name":"open override fun toRequest(): GuildTemplateModifyRequest","description":"dev.kord.rest.builder.template.GuildTemplateModifyBuilder.toRequest","location":"rest/dev.kord.rest.builder.template/-guild-template-modify-builder/to-request.html","searchKeys":["toRequest","open override fun toRequest(): GuildTemplateModifyRequest","dev.kord.rest.builder.template.GuildTemplateModifyBuilder.toRequest"]},{"name":"open override fun toRequest(): GuildWelcomeScreenModifyRequest","description":"dev.kord.rest.builder.guild.WelcomeScreenModifyBuilder.toRequest","location":"rest/dev.kord.rest.builder.guild/-welcome-screen-modify-builder/to-request.html","searchKeys":["toRequest","open override fun toRequest(): GuildWelcomeScreenModifyRequest","dev.kord.rest.builder.guild.WelcomeScreenModifyBuilder.toRequest"]},{"name":"open override fun toRequest(): GuildWidgetModifyRequest","description":"dev.kord.rest.builder.guild.GuildWidgetModifyBuilder.toRequest","location":"rest/dev.kord.rest.builder.guild/-guild-widget-modify-builder/to-request.html","searchKeys":["toRequest","open override fun toRequest(): GuildWidgetModifyRequest","dev.kord.rest.builder.guild.GuildWidgetModifyBuilder.toRequest"]},{"name":"open override fun toRequest(): InviteCreateRequest","description":"dev.kord.rest.builder.channel.InviteCreateBuilder.toRequest","location":"rest/dev.kord.rest.builder.channel/-invite-create-builder/to-request.html","searchKeys":["toRequest","open override fun toRequest(): InviteCreateRequest","dev.kord.rest.builder.channel.InviteCreateBuilder.toRequest"]},{"name":"open override fun toRequest(): MultiPartWebhookExecuteRequest","description":"dev.kord.rest.builder.message.create.WebhookMessageCreateBuilder.toRequest","location":"rest/dev.kord.rest.builder.message.create/-webhook-message-create-builder/to-request.html","searchKeys":["toRequest","open override fun toRequest(): MultiPartWebhookExecuteRequest","dev.kord.rest.builder.message.create.WebhookMessageCreateBuilder.toRequest"]},{"name":"open override fun toRequest(): MultipartFollowupMessageCreateRequest","description":"dev.kord.rest.builder.message.create.FollowupMessageCreateBuilder.toRequest","location":"rest/dev.kord.rest.builder.message.create/-followup-message-create-builder/to-request.html","searchKeys":["toRequest","open override fun toRequest(): MultipartFollowupMessageCreateRequest","dev.kord.rest.builder.message.create.FollowupMessageCreateBuilder.toRequest"]},{"name":"open override fun toRequest(): MultipartFollowupMessageModifyRequest","description":"dev.kord.rest.builder.message.modify.FollowupMessageModifyBuilder.toRequest","location":"rest/dev.kord.rest.builder.message.modify/-followup-message-modify-builder/to-request.html","searchKeys":["toRequest","open override fun toRequest(): MultipartFollowupMessageModifyRequest","dev.kord.rest.builder.message.modify.FollowupMessageModifyBuilder.toRequest"]},{"name":"open override fun toRequest(): MultipartInteractionResponseCreateRequest","description":"dev.kord.rest.builder.message.create.InteractionResponseCreateBuilder.toRequest","location":"rest/dev.kord.rest.builder.message.create/-interaction-response-create-builder/to-request.html","searchKeys":["toRequest","open override fun toRequest(): MultipartInteractionResponseCreateRequest","dev.kord.rest.builder.message.create.InteractionResponseCreateBuilder.toRequest"]},{"name":"open override fun toRequest(): MultipartInteractionResponseCreateRequest","description":"dev.kord.rest.builder.message.create.UpdateMessageInteractionResponseCreateBuilder.toRequest","location":"rest/dev.kord.rest.builder.message.create/-update-message-interaction-response-create-builder/to-request.html","searchKeys":["toRequest","open override fun toRequest(): MultipartInteractionResponseCreateRequest","dev.kord.rest.builder.message.create.UpdateMessageInteractionResponseCreateBuilder.toRequest"]},{"name":"open override fun toRequest(): MultipartInteractionResponseModifyRequest","description":"dev.kord.rest.builder.message.modify.InteractionResponseModifyBuilder.toRequest","location":"rest/dev.kord.rest.builder.message.modify/-interaction-response-modify-builder/to-request.html","searchKeys":["toRequest","open override fun toRequest(): MultipartInteractionResponseModifyRequest","dev.kord.rest.builder.message.modify.InteractionResponseModifyBuilder.toRequest"]},{"name":"open override fun toRequest(): MultipartMessageCreateRequest","description":"dev.kord.rest.builder.message.create.UserMessageCreateBuilder.toRequest","location":"rest/dev.kord.rest.builder.message.create/-user-message-create-builder/to-request.html","searchKeys":["toRequest","open override fun toRequest(): MultipartMessageCreateRequest","dev.kord.rest.builder.message.create.UserMessageCreateBuilder.toRequest"]},{"name":"open override fun toRequest(): MultipartMessagePatchRequest","description":"dev.kord.rest.builder.message.modify.UserMessageModifyBuilder.toRequest","location":"rest/dev.kord.rest.builder.message.modify/-user-message-modify-builder/to-request.html","searchKeys":["toRequest","open override fun toRequest(): MultipartMessagePatchRequest","dev.kord.rest.builder.message.modify.UserMessageModifyBuilder.toRequest"]},{"name":"open override fun toRequest(): MultipartWebhookEditMessageRequest","description":"dev.kord.rest.builder.message.modify.WebhookMessageModifyBuilder.toRequest","location":"rest/dev.kord.rest.builder.message.modify/-webhook-message-modify-builder/to-request.html","searchKeys":["toRequest","open override fun toRequest(): MultipartWebhookEditMessageRequest","dev.kord.rest.builder.message.modify.WebhookMessageModifyBuilder.toRequest"]},{"name":"open override fun toRequest(): ScheduledEventModifyRequest","description":"dev.kord.rest.builder.scheduled_events.ScheduledEventModifyBuilder.toRequest","location":"rest/dev.kord.rest.builder.scheduled_events/-scheduled-event-modify-builder/to-request.html","searchKeys":["toRequest","open override fun toRequest(): ScheduledEventModifyRequest","dev.kord.rest.builder.scheduled_events.ScheduledEventModifyBuilder.toRequest"]},{"name":"open override fun toRequest(): StageInstanceCreateRequest","description":"dev.kord.rest.builder.stage.StageInstanceCreateBuilder.toRequest","location":"rest/dev.kord.rest.builder.stage/-stage-instance-create-builder/to-request.html","searchKeys":["toRequest","open override fun toRequest(): StageInstanceCreateRequest","dev.kord.rest.builder.stage.StageInstanceCreateBuilder.toRequest"]},{"name":"open override fun toRequest(): StageInstanceModifyRequest","description":"dev.kord.rest.builder.stage.StageInstanceModifyBuilder.toRequest","location":"rest/dev.kord.rest.builder.stage/-stage-instance-modify-builder/to-request.html","searchKeys":["toRequest","open override fun toRequest(): StageInstanceModifyRequest","dev.kord.rest.builder.stage.StageInstanceModifyBuilder.toRequest"]},{"name":"open override fun toRequest(): StartThreadRequest","description":"dev.kord.rest.builder.channel.thread.StartThreadBuilder.toRequest","location":"rest/dev.kord.rest.builder.channel.thread/-start-thread-builder/to-request.html","searchKeys":["toRequest","open override fun toRequest(): StartThreadRequest","dev.kord.rest.builder.channel.thread.StartThreadBuilder.toRequest"]},{"name":"open override fun toRequest(): StartThreadRequest","description":"dev.kord.rest.builder.channel.thread.StartThreadWithMessageBuilder.toRequest","location":"rest/dev.kord.rest.builder.channel.thread/-start-thread-with-message-builder/to-request.html","searchKeys":["toRequest","open override fun toRequest(): StartThreadRequest","dev.kord.rest.builder.channel.thread.StartThreadWithMessageBuilder.toRequest"]},{"name":"open override fun toRequest(): VoiceStateModifyRequest","description":"dev.kord.rest.builder.guild.VoiceStateModifyBuilder.toRequest","location":"rest/dev.kord.rest.builder.guild/-voice-state-modify-builder/to-request.html","searchKeys":["toRequest","open override fun toRequest(): VoiceStateModifyRequest","dev.kord.rest.builder.guild.VoiceStateModifyBuilder.toRequest"]},{"name":"open override fun toRequest(): WebhookCreateRequest","description":"dev.kord.rest.builder.webhook.WebhookCreateBuilder.toRequest","location":"rest/dev.kord.rest.builder.webhook/-webhook-create-builder/to-request.html","searchKeys":["toRequest","open override fun toRequest(): WebhookCreateRequest","dev.kord.rest.builder.webhook.WebhookCreateBuilder.toRequest"]},{"name":"open override fun toRequest(): WebhookModifyRequest","description":"dev.kord.rest.builder.webhook.WebhookModifyBuilder.toRequest","location":"rest/dev.kord.rest.builder.webhook/-webhook-modify-builder/to-request.html","searchKeys":["toRequest","open override fun toRequest(): WebhookModifyRequest","dev.kord.rest.builder.webhook.WebhookModifyBuilder.toRequest"]},{"name":"open override fun toString(): String","description":"dev.kord.rest.route.CdnUrl.toString","location":"rest/dev.kord.rest.route/-cdn-url/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.kord.rest.route.CdnUrl.toString"]},{"name":"open override fun toString(): String","description":"dev.kord.rest.route.Route.Key.toString","location":"rest/dev.kord.rest.route/-route/-key/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.kord.rest.route.Route.Key.toString"]},{"name":"open override fun toString(): String","description":"dev.kord.rest.route.Route.toString","location":"rest/dev.kord.rest.route/-route/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.kord.rest.route.Route.toString"]},{"name":"open override val body: RequestBody<B>?","description":"dev.kord.rest.request.JsonRequest.body","location":"rest/dev.kord.rest.request/-json-request/body.html","searchKeys":["body","open override val body: RequestBody<B>?","dev.kord.rest.request.JsonRequest.body"]},{"name":"open override val body: RequestBody<B>?","description":"dev.kord.rest.request.MultipartRequest.body","location":"rest/dev.kord.rest.request/-multipart-request/body.html","searchKeys":["body","open override val body: RequestBody<B>?","dev.kord.rest.request.MultipartRequest.body"]},{"name":"open override val bucketKey: BucketKey","description":"dev.kord.rest.ratelimit.RequestResponse.BucketRateLimit.bucketKey","location":"rest/dev.kord.rest.ratelimit/-request-response/-bucket-rate-limit/bucket-key.html","searchKeys":["bucketKey","open override val bucketKey: BucketKey","dev.kord.rest.ratelimit.RequestResponse.BucketRateLimit.bucketKey"]},{"name":"open override val bucketKey: BucketKey?","description":"dev.kord.rest.ratelimit.RequestResponse.Accepted.bucketKey","location":"rest/dev.kord.rest.ratelimit/-request-response/-accepted/bucket-key.html","searchKeys":["bucketKey","open override val bucketKey: BucketKey?","dev.kord.rest.ratelimit.RequestResponse.Accepted.bucketKey"]},{"name":"open override val bucketKey: BucketKey?","description":"dev.kord.rest.ratelimit.RequestResponse.GlobalRateLimit.bucketKey","location":"rest/dev.kord.rest.ratelimit/-request-response/-global-rate-limit/bucket-key.html","searchKeys":["bucketKey","open override val bucketKey: BucketKey?","dev.kord.rest.ratelimit.RequestResponse.GlobalRateLimit.bucketKey"]},{"name":"open override val bucketKey: BucketKey? = null","description":"dev.kord.rest.ratelimit.RequestResponse.Error.bucketKey","location":"rest/dev.kord.rest.ratelimit/-request-response/-error/bucket-key.html","searchKeys":["bucketKey","open override val bucketKey: BucketKey? = null","dev.kord.rest.ratelimit.RequestResponse.Error.bucketKey"]},{"name":"open override val components: MutableList<MessageComponentBuilder>","description":"dev.kord.rest.builder.message.create.FollowupMessageCreateBuilder.components","location":"rest/dev.kord.rest.builder.message.create/-followup-message-create-builder/components.html","searchKeys":["components","open override val components: MutableList<MessageComponentBuilder>","dev.kord.rest.builder.message.create.FollowupMessageCreateBuilder.components"]},{"name":"open override val components: MutableList<MessageComponentBuilder>","description":"dev.kord.rest.builder.message.create.InteractionResponseCreateBuilder.components","location":"rest/dev.kord.rest.builder.message.create/-interaction-response-create-builder/components.html","searchKeys":["components","open override val components: MutableList<MessageComponentBuilder>","dev.kord.rest.builder.message.create.InteractionResponseCreateBuilder.components"]},{"name":"open override val components: MutableList<MessageComponentBuilder>","description":"dev.kord.rest.builder.message.create.UserMessageCreateBuilder.components","location":"rest/dev.kord.rest.builder.message.create/-user-message-create-builder/components.html","searchKeys":["components","open override val components: MutableList<MessageComponentBuilder>","dev.kord.rest.builder.message.create.UserMessageCreateBuilder.components"]},{"name":"open override val components: MutableList<MessageComponentBuilder>","description":"dev.kord.rest.builder.message.create.WebhookMessageCreateBuilder.components","location":"rest/dev.kord.rest.builder.message.create/-webhook-message-create-builder/components.html","searchKeys":["components","open override val components: MutableList<MessageComponentBuilder>","dev.kord.rest.builder.message.create.WebhookMessageCreateBuilder.components"]},{"name":"open override val embeds: MutableList<EmbedBuilder>","description":"dev.kord.rest.builder.message.create.FollowupMessageCreateBuilder.embeds","location":"rest/dev.kord.rest.builder.message.create/-followup-message-create-builder/embeds.html","searchKeys":["embeds","open override val embeds: MutableList<EmbedBuilder>","dev.kord.rest.builder.message.create.FollowupMessageCreateBuilder.embeds"]},{"name":"open override val embeds: MutableList<EmbedBuilder>","description":"dev.kord.rest.builder.message.create.InteractionResponseCreateBuilder.embeds","location":"rest/dev.kord.rest.builder.message.create/-interaction-response-create-builder/embeds.html","searchKeys":["embeds","open override val embeds: MutableList<EmbedBuilder>","dev.kord.rest.builder.message.create.InteractionResponseCreateBuilder.embeds"]},{"name":"open override val embeds: MutableList<EmbedBuilder>","description":"dev.kord.rest.builder.message.create.UserMessageCreateBuilder.embeds","location":"rest/dev.kord.rest.builder.message.create/-user-message-create-builder/embeds.html","searchKeys":["embeds","open override val embeds: MutableList<EmbedBuilder>","dev.kord.rest.builder.message.create.UserMessageCreateBuilder.embeds"]},{"name":"open override val embeds: MutableList<EmbedBuilder>","description":"dev.kord.rest.builder.message.create.WebhookMessageCreateBuilder.embeds","location":"rest/dev.kord.rest.builder.message.create/-webhook-message-create-builder/embeds.html","searchKeys":["embeds","open override val embeds: MutableList<EmbedBuilder>","dev.kord.rest.builder.message.create.WebhookMessageCreateBuilder.embeds"]},{"name":"open override val files: List<NamedFile>","description":"dev.kord.rest.request.MultipartRequest.files","location":"rest/dev.kord.rest.request/-multipart-request/files.html","searchKeys":["files","open override val files: List<NamedFile>","dev.kord.rest.request.MultipartRequest.files"]},{"name":"open override val files: List<NamedFile>? = null","description":"dev.kord.rest.request.JsonRequest.files","location":"rest/dev.kord.rest.request/-json-request/files.html","searchKeys":["files","open override val files: List<NamedFile>? = null","dev.kord.rest.request.JsonRequest.files"]},{"name":"open override val files: MutableList<NamedFile>","description":"dev.kord.rest.builder.message.create.FollowupMessageCreateBuilder.files","location":"rest/dev.kord.rest.builder.message.create/-followup-message-create-builder/files.html","searchKeys":["files","open override val files: MutableList<NamedFile>","dev.kord.rest.builder.message.create.FollowupMessageCreateBuilder.files"]},{"name":"open override val files: MutableList<NamedFile>","description":"dev.kord.rest.builder.message.create.InteractionResponseCreateBuilder.files","location":"rest/dev.kord.rest.builder.message.create/-interaction-response-create-builder/files.html","searchKeys":["files","open override val files: MutableList<NamedFile>","dev.kord.rest.builder.message.create.InteractionResponseCreateBuilder.files"]},{"name":"open override val files: MutableList<NamedFile>","description":"dev.kord.rest.builder.message.create.UserMessageCreateBuilder.files","location":"rest/dev.kord.rest.builder.message.create/-user-message-create-builder/files.html","searchKeys":["files","open override val files: MutableList<NamedFile>","dev.kord.rest.builder.message.create.UserMessageCreateBuilder.files"]},{"name":"open override val files: MutableList<NamedFile>","description":"dev.kord.rest.builder.message.create.WebhookMessageCreateBuilder.files","location":"rest/dev.kord.rest.builder.message.create/-webhook-message-create-builder/files.html","searchKeys":["files","open override val files: MutableList<NamedFile>","dev.kord.rest.builder.message.create.WebhookMessageCreateBuilder.files"]},{"name":"open override val headers: StringValues","description":"dev.kord.rest.request.JsonRequest.headers","location":"rest/dev.kord.rest.request/-json-request/headers.html","searchKeys":["headers","open override val headers: StringValues","dev.kord.rest.request.JsonRequest.headers"]},{"name":"open override val headers: StringValues","description":"dev.kord.rest.request.MultipartRequest.headers","location":"rest/dev.kord.rest.request/-multipart-request/headers.html","searchKeys":["headers","open override val headers: StringValues","dev.kord.rest.request.MultipartRequest.headers"]},{"name":"open override val key: String","description":"dev.kord.rest.route.Position.After.key","location":"rest/dev.kord.rest.route/-position/-after/key.html","searchKeys":["key","open override val key: String","dev.kord.rest.route.Position.After.key"]},{"name":"open override val key: String","description":"dev.kord.rest.route.Position.Around.key","location":"rest/dev.kord.rest.route/-position/-around/key.html","searchKeys":["key","open override val key: String","dev.kord.rest.route.Position.Around.key"]},{"name":"open override val key: String","description":"dev.kord.rest.route.Position.Before.key","location":"rest/dev.kord.rest.route/-position/-before/key.html","searchKeys":["key","open override val key: String","dev.kord.rest.route.Position.Before.key"]},{"name":"open override val parameters: StringValues","description":"dev.kord.rest.request.JsonRequest.parameters","location":"rest/dev.kord.rest.request/-json-request/parameters.html","searchKeys":["parameters","open override val parameters: StringValues","dev.kord.rest.request.JsonRequest.parameters"]},{"name":"open override val parameters: StringValues","description":"dev.kord.rest.request.MultipartRequest.parameters","location":"rest/dev.kord.rest.request/-multipart-request/parameters.html","searchKeys":["parameters","open override val parameters: StringValues","dev.kord.rest.request.MultipartRequest.parameters"]},{"name":"open override val rateLimit: RateLimit?","description":"dev.kord.rest.ratelimit.RequestResponse.Accepted.rateLimit","location":"rest/dev.kord.rest.ratelimit/-request-response/-accepted/rate-limit.html","searchKeys":["rateLimit","open override val rateLimit: RateLimit?","dev.kord.rest.ratelimit.RequestResponse.Accepted.rateLimit"]},{"name":"open override val rateLimit: RateLimit?","description":"dev.kord.rest.ratelimit.RequestResponse.BucketRateLimit.rateLimit","location":"rest/dev.kord.rest.ratelimit/-request-response/-bucket-rate-limit/rate-limit.html","searchKeys":["rateLimit","open override val rateLimit: RateLimit?","dev.kord.rest.ratelimit.RequestResponse.BucketRateLimit.rateLimit"]},{"name":"open override val rateLimit: RateLimit?","description":"dev.kord.rest.ratelimit.RequestResponse.GlobalRateLimit.rateLimit","location":"rest/dev.kord.rest.ratelimit/-request-response/-global-rate-limit/rate-limit.html","searchKeys":["rateLimit","open override val rateLimit: RateLimit?","dev.kord.rest.ratelimit.RequestResponse.GlobalRateLimit.rateLimit"]},{"name":"open override val rateLimit: RateLimit? = null","description":"dev.kord.rest.ratelimit.RequestResponse.Error.rateLimit","location":"rest/dev.kord.rest.ratelimit/-request-response/-error/rate-limit.html","searchKeys":["rateLimit","open override val rateLimit: RateLimit? = null","dev.kord.rest.ratelimit.RequestResponse.Error.rateLimit"]},{"name":"open override val reset: Reset","description":"dev.kord.rest.ratelimit.RequestResponse.Accepted.reset","location":"rest/dev.kord.rest.ratelimit/-request-response/-accepted/reset.html","searchKeys":["reset","open override val reset: Reset","dev.kord.rest.ratelimit.RequestResponse.Accepted.reset"]},{"name":"open override val reset: Reset","description":"dev.kord.rest.ratelimit.RequestResponse.BucketRateLimit.reset","location":"rest/dev.kord.rest.ratelimit/-request-response/-bucket-rate-limit/reset.html","searchKeys":["reset","open override val reset: Reset","dev.kord.rest.ratelimit.RequestResponse.BucketRateLimit.reset"]},{"name":"open override val reset: Reset","description":"dev.kord.rest.ratelimit.RequestResponse.GlobalRateLimit.reset","location":"rest/dev.kord.rest.ratelimit/-request-response/-global-rate-limit/reset.html","searchKeys":["reset","open override val reset: Reset","dev.kord.rest.ratelimit.RequestResponse.GlobalRateLimit.reset"]},{"name":"open override val reset: Reset? = null","description":"dev.kord.rest.ratelimit.RequestResponse.Error.reset","location":"rest/dev.kord.rest.ratelimit/-request-response/-error/reset.html","searchKeys":["reset","open override val reset: Reset? = null","dev.kord.rest.ratelimit.RequestResponse.Error.reset"]},{"name":"open override val route: Route<R>","description":"dev.kord.rest.request.JsonRequest.route","location":"rest/dev.kord.rest.request/-json-request/route.html","searchKeys":["route","open override val route: Route<R>","dev.kord.rest.request.JsonRequest.route"]},{"name":"open override val route: Route<R>","description":"dev.kord.rest.request.MultipartRequest.route","location":"rest/dev.kord.rest.request/-multipart-request/route.html","searchKeys":["route","open override val route: Route<R>","dev.kord.rest.request.MultipartRequest.route"]},{"name":"open override val routeParams: Map<Route.Key, String>","description":"dev.kord.rest.request.JsonRequest.routeParams","location":"rest/dev.kord.rest.request/-json-request/route-params.html","searchKeys":["routeParams","open override val routeParams: Map<Route.Key, String>","dev.kord.rest.request.JsonRequest.routeParams"]},{"name":"open override val routeParams: Map<Route.Key, String>","description":"dev.kord.rest.request.MultipartRequest.routeParams","location":"rest/dev.kord.rest.request/-multipart-request/route-params.html","searchKeys":["routeParams","open override val routeParams: Map<Route.Key, String>","dev.kord.rest.request.MultipartRequest.routeParams"]},{"name":"open override val token: String","description":"dev.kord.rest.request.KtorRequestHandler.token","location":"rest/dev.kord.rest.request/-ktor-request-handler/token.html","searchKeys":["token","open override val token: String","dev.kord.rest.request.KtorRequestHandler.token"]},{"name":"open override val triggerType: AutoModerationRuleTriggerType.Keyword","description":"dev.kord.rest.builder.automoderation.KeywordAutoModerationRuleBuilder.triggerType","location":"rest/dev.kord.rest.builder.automoderation/-keyword-auto-moderation-rule-builder/trigger-type.html","searchKeys":["triggerType","open override val triggerType: AutoModerationRuleTriggerType.Keyword","dev.kord.rest.builder.automoderation.KeywordAutoModerationRuleBuilder.triggerType"]},{"name":"open override val triggerType: AutoModerationRuleTriggerType.KeywordPreset","description":"dev.kord.rest.builder.automoderation.KeywordPresetAutoModerationRuleBuilder.triggerType","location":"rest/dev.kord.rest.builder.automoderation/-keyword-preset-auto-moderation-rule-builder/trigger-type.html","searchKeys":["triggerType","open override val triggerType: AutoModerationRuleTriggerType.KeywordPreset","dev.kord.rest.builder.automoderation.KeywordPresetAutoModerationRuleBuilder.triggerType"]},{"name":"open override val triggerType: AutoModerationRuleTriggerType.MentionSpam","description":"dev.kord.rest.builder.automoderation.MentionSpamAutoModerationRuleBuilder.triggerType","location":"rest/dev.kord.rest.builder.automoderation/-mention-spam-auto-moderation-rule-builder/trigger-type.html","searchKeys":["triggerType","open override val triggerType: AutoModerationRuleTriggerType.MentionSpam","dev.kord.rest.builder.automoderation.MentionSpamAutoModerationRuleBuilder.triggerType"]},{"name":"open override val triggerType: AutoModerationRuleTriggerType.Spam","description":"dev.kord.rest.builder.automoderation.SpamAutoModerationRuleBuilder.triggerType","location":"rest/dev.kord.rest.builder.automoderation/-spam-auto-moderation-rule-builder/trigger-type.html","searchKeys":["triggerType","open override val triggerType: AutoModerationRuleTriggerType.Spam","dev.kord.rest.builder.automoderation.SpamAutoModerationRuleBuilder.triggerType"]},{"name":"open override val triggerType: Nothing?","description":"dev.kord.rest.builder.automoderation.UntypedAutoModerationRuleModifyBuilder.triggerType","location":"rest/dev.kord.rest.builder.automoderation/-untyped-auto-moderation-rule-modify-builder/trigger-type.html","searchKeys":["triggerType","open override val triggerType: Nothing?","dev.kord.rest.builder.automoderation.UntypedAutoModerationRuleModifyBuilder.triggerType"]},{"name":"open override val type: AutoModerationActionType.BlockMessage","description":"dev.kord.rest.builder.automoderation.BlockMessageAutoModerationActionBuilder.type","location":"rest/dev.kord.rest.builder.automoderation/-block-message-auto-moderation-action-builder/type.html","searchKeys":["type","open override val type: AutoModerationActionType.BlockMessage","dev.kord.rest.builder.automoderation.BlockMessageAutoModerationActionBuilder.type"]},{"name":"open override val type: AutoModerationActionType.SendAlertMessage","description":"dev.kord.rest.builder.automoderation.SendAlertMessageAutoModerationActionBuilder.type","location":"rest/dev.kord.rest.builder.automoderation/-send-alert-message-auto-moderation-action-builder/type.html","searchKeys":["type","open override val type: AutoModerationActionType.SendAlertMessage","dev.kord.rest.builder.automoderation.SendAlertMessageAutoModerationActionBuilder.type"]},{"name":"open override val type: AutoModerationActionType.Timeout","description":"dev.kord.rest.builder.automoderation.TimeoutAutoModerationActionBuilder.type","location":"rest/dev.kord.rest.builder.automoderation/-timeout-auto-moderation-action-builder/type.html","searchKeys":["type","open override val type: AutoModerationActionType.Timeout","dev.kord.rest.builder.automoderation.TimeoutAutoModerationActionBuilder.type"]},{"name":"open override val value: Snowflake","description":"dev.kord.rest.route.Position.After.value","location":"rest/dev.kord.rest.route/-position/-after/value.html","searchKeys":["value","open override val value: Snowflake","dev.kord.rest.route.Position.After.value"]},{"name":"open override val value: Snowflake","description":"dev.kord.rest.route.Position.Around.value","location":"rest/dev.kord.rest.route/-position/-around/value.html","searchKeys":["value","open override val value: Snowflake","dev.kord.rest.route.Position.Around.value"]},{"name":"open override val value: Snowflake","description":"dev.kord.rest.route.Position.Before.value","location":"rest/dev.kord.rest.route/-position/-before/value.html","searchKeys":["value","open override val value: Snowflake","dev.kord.rest.route.Position.Before.value"]},{"name":"open override var allowedKeywords: MutableList<String>?","description":"dev.kord.rest.builder.automoderation.KeywordPresetAutoModerationRuleCreateBuilder.allowedKeywords","location":"rest/dev.kord.rest.builder.automoderation/-keyword-preset-auto-moderation-rule-create-builder/allowed-keywords.html","searchKeys":["allowedKeywords","open override var allowedKeywords: MutableList<String>?","dev.kord.rest.builder.automoderation.KeywordPresetAutoModerationRuleCreateBuilder.allowedKeywords"]},{"name":"open override var allowedKeywords: MutableList<String>?","description":"dev.kord.rest.builder.automoderation.KeywordPresetAutoModerationRuleModifyBuilder.allowedKeywords","location":"rest/dev.kord.rest.builder.automoderation/-keyword-preset-auto-moderation-rule-modify-builder/allowed-keywords.html","searchKeys":["allowedKeywords","open override var allowedKeywords: MutableList<String>?","dev.kord.rest.builder.automoderation.KeywordPresetAutoModerationRuleModifyBuilder.allowedKeywords"]},{"name":"open override var allowedMentions: AllowedMentionsBuilder?","description":"dev.kord.rest.builder.message.modify.FollowupMessageModifyBuilder.allowedMentions","location":"rest/dev.kord.rest.builder.message.modify/-followup-message-modify-builder/allowed-mentions.html","searchKeys":["allowedMentions","open override var allowedMentions: AllowedMentionsBuilder?","dev.kord.rest.builder.message.modify.FollowupMessageModifyBuilder.allowedMentions"]},{"name":"open override var allowedMentions: AllowedMentionsBuilder?","description":"dev.kord.rest.builder.message.modify.InteractionResponseModifyBuilder.allowedMentions","location":"rest/dev.kord.rest.builder.message.modify/-interaction-response-modify-builder/allowed-mentions.html","searchKeys":["allowedMentions","open override var allowedMentions: AllowedMentionsBuilder?","dev.kord.rest.builder.message.modify.InteractionResponseModifyBuilder.allowedMentions"]},{"name":"open override var allowedMentions: AllowedMentionsBuilder?","description":"dev.kord.rest.builder.message.modify.UserMessageModifyBuilder.allowedMentions","location":"rest/dev.kord.rest.builder.message.modify/-user-message-modify-builder/allowed-mentions.html","searchKeys":["allowedMentions","open override var allowedMentions: AllowedMentionsBuilder?","dev.kord.rest.builder.message.modify.UserMessageModifyBuilder.allowedMentions"]},{"name":"open override var allowedMentions: AllowedMentionsBuilder?","description":"dev.kord.rest.builder.message.modify.WebhookMessageModifyBuilder.allowedMentions","location":"rest/dev.kord.rest.builder.message.modify/-webhook-message-modify-builder/allowed-mentions.html","searchKeys":["allowedMentions","open override var allowedMentions: AllowedMentionsBuilder?","dev.kord.rest.builder.message.modify.WebhookMessageModifyBuilder.allowedMentions"]},{"name":"open override var allowedMentions: AllowedMentionsBuilder? = null","description":"dev.kord.rest.builder.message.create.FollowupMessageCreateBuilder.allowedMentions","location":"rest/dev.kord.rest.builder.message.create/-followup-message-create-builder/allowed-mentions.html","searchKeys":["allowedMentions","open override var allowedMentions: AllowedMentionsBuilder? = null","dev.kord.rest.builder.message.create.FollowupMessageCreateBuilder.allowedMentions"]},{"name":"open override var allowedMentions: AllowedMentionsBuilder? = null","description":"dev.kord.rest.builder.message.create.InteractionResponseCreateBuilder.allowedMentions","location":"rest/dev.kord.rest.builder.message.create/-interaction-response-create-builder/allowed-mentions.html","searchKeys":["allowedMentions","open override var allowedMentions: AllowedMentionsBuilder? = null","dev.kord.rest.builder.message.create.InteractionResponseCreateBuilder.allowedMentions"]},{"name":"open override var allowedMentions: AllowedMentionsBuilder? = null","description":"dev.kord.rest.builder.message.create.UpdateMessageInteractionResponseCreateBuilder.allowedMentions","location":"rest/dev.kord.rest.builder.message.create/-update-message-interaction-response-create-builder/allowed-mentions.html","searchKeys":["allowedMentions","open override var allowedMentions: AllowedMentionsBuilder? = null","dev.kord.rest.builder.message.create.UpdateMessageInteractionResponseCreateBuilder.allowedMentions"]},{"name":"open override var allowedMentions: AllowedMentionsBuilder? = null","description":"dev.kord.rest.builder.message.create.UserMessageCreateBuilder.allowedMentions","location":"rest/dev.kord.rest.builder.message.create/-user-message-create-builder/allowed-mentions.html","searchKeys":["allowedMentions","open override var allowedMentions: AllowedMentionsBuilder? = null","dev.kord.rest.builder.message.create.UserMessageCreateBuilder.allowedMentions"]},{"name":"open override var allowedMentions: AllowedMentionsBuilder? = null","description":"dev.kord.rest.builder.message.create.WebhookMessageCreateBuilder.allowedMentions","location":"rest/dev.kord.rest.builder.message.create/-webhook-message-create-builder/allowed-mentions.html","searchKeys":["allowedMentions","open override var allowedMentions: AllowedMentionsBuilder? = null","dev.kord.rest.builder.message.create.WebhookMessageCreateBuilder.allowedMentions"]},{"name":"open override var attachments: MutableList<DiscordAttachment>?","description":"dev.kord.rest.builder.message.modify.FollowupMessageModifyBuilder.attachments","location":"rest/dev.kord.rest.builder.message.modify/-followup-message-modify-builder/attachments.html","searchKeys":["attachments","open override var attachments: MutableList<DiscordAttachment>?","dev.kord.rest.builder.message.modify.FollowupMessageModifyBuilder.attachments"]},{"name":"open override var attachments: MutableList<DiscordAttachment>?","description":"dev.kord.rest.builder.message.modify.InteractionResponseModifyBuilder.attachments","location":"rest/dev.kord.rest.builder.message.modify/-interaction-response-modify-builder/attachments.html","searchKeys":["attachments","open override var attachments: MutableList<DiscordAttachment>?","dev.kord.rest.builder.message.modify.InteractionResponseModifyBuilder.attachments"]},{"name":"open override var attachments: MutableList<DiscordAttachment>?","description":"dev.kord.rest.builder.message.modify.UserMessageModifyBuilder.attachments","location":"rest/dev.kord.rest.builder.message.modify/-user-message-modify-builder/attachments.html","searchKeys":["attachments","open override var attachments: MutableList<DiscordAttachment>?","dev.kord.rest.builder.message.modify.UserMessageModifyBuilder.attachments"]},{"name":"open override var attachments: MutableList<DiscordAttachment>?","description":"dev.kord.rest.builder.message.modify.WebhookMessageModifyBuilder.attachments","location":"rest/dev.kord.rest.builder.message.modify/-webhook-message-modify-builder/attachments.html","searchKeys":["attachments","open override var attachments: MutableList<DiscordAttachment>?","dev.kord.rest.builder.message.modify.WebhookMessageModifyBuilder.attachments"]},{"name":"open override var components: MutableList<MessageComponentBuilder>","description":"dev.kord.rest.builder.message.create.UpdateMessageInteractionResponseCreateBuilder.components","location":"rest/dev.kord.rest.builder.message.create/-update-message-interaction-response-create-builder/components.html","searchKeys":["components","open override var components: MutableList<MessageComponentBuilder>","dev.kord.rest.builder.message.create.UpdateMessageInteractionResponseCreateBuilder.components"]},{"name":"open override var components: MutableList<MessageComponentBuilder>?","description":"dev.kord.rest.builder.message.modify.FollowupMessageModifyBuilder.components","location":"rest/dev.kord.rest.builder.message.modify/-followup-message-modify-builder/components.html","searchKeys":["components","open override var components: MutableList<MessageComponentBuilder>?","dev.kord.rest.builder.message.modify.FollowupMessageModifyBuilder.components"]},{"name":"open override var components: MutableList<MessageComponentBuilder>?","description":"dev.kord.rest.builder.message.modify.InteractionResponseModifyBuilder.components","location":"rest/dev.kord.rest.builder.message.modify/-interaction-response-modify-builder/components.html","searchKeys":["components","open override var components: MutableList<MessageComponentBuilder>?","dev.kord.rest.builder.message.modify.InteractionResponseModifyBuilder.components"]},{"name":"open override var components: MutableList<MessageComponentBuilder>?","description":"dev.kord.rest.builder.message.modify.UserMessageModifyBuilder.components","location":"rest/dev.kord.rest.builder.message.modify/-user-message-modify-builder/components.html","searchKeys":["components","open override var components: MutableList<MessageComponentBuilder>?","dev.kord.rest.builder.message.modify.UserMessageModifyBuilder.components"]},{"name":"open override var components: MutableList<MessageComponentBuilder>?","description":"dev.kord.rest.builder.message.modify.WebhookMessageModifyBuilder.components","location":"rest/dev.kord.rest.builder.message.modify/-webhook-message-modify-builder/components.html","searchKeys":["components","open override var components: MutableList<MessageComponentBuilder>?","dev.kord.rest.builder.message.modify.WebhookMessageModifyBuilder.components"]},{"name":"open override var content: String?","description":"dev.kord.rest.builder.message.modify.FollowupMessageModifyBuilder.content","location":"rest/dev.kord.rest.builder.message.modify/-followup-message-modify-builder/content.html","searchKeys":["content","open override var content: String?","dev.kord.rest.builder.message.modify.FollowupMessageModifyBuilder.content"]},{"name":"open override var content: String?","description":"dev.kord.rest.builder.message.modify.InteractionResponseModifyBuilder.content","location":"rest/dev.kord.rest.builder.message.modify/-interaction-response-modify-builder/content.html","searchKeys":["content","open override var content: String?","dev.kord.rest.builder.message.modify.InteractionResponseModifyBuilder.content"]},{"name":"open override var content: String?","description":"dev.kord.rest.builder.message.modify.UserMessageModifyBuilder.content","location":"rest/dev.kord.rest.builder.message.modify/-user-message-modify-builder/content.html","searchKeys":["content","open override var content: String?","dev.kord.rest.builder.message.modify.UserMessageModifyBuilder.content"]},{"name":"open override var content: String?","description":"dev.kord.rest.builder.message.modify.WebhookMessageModifyBuilder.content","location":"rest/dev.kord.rest.builder.message.modify/-webhook-message-modify-builder/content.html","searchKeys":["content","open override var content: String?","dev.kord.rest.builder.message.modify.WebhookMessageModifyBuilder.content"]},{"name":"open override var content: String? = null","description":"dev.kord.rest.builder.message.create.FollowupMessageCreateBuilder.content","location":"rest/dev.kord.rest.builder.message.create/-followup-message-create-builder/content.html","searchKeys":["content","open override var content: String? = null","dev.kord.rest.builder.message.create.FollowupMessageCreateBuilder.content"]},{"name":"open override var content: String? = null","description":"dev.kord.rest.builder.message.create.InteractionResponseCreateBuilder.content","location":"rest/dev.kord.rest.builder.message.create/-interaction-response-create-builder/content.html","searchKeys":["content","open override var content: String? = null","dev.kord.rest.builder.message.create.InteractionResponseCreateBuilder.content"]},{"name":"open override var content: String? = null","description":"dev.kord.rest.builder.message.create.UpdateMessageInteractionResponseCreateBuilder.content","location":"rest/dev.kord.rest.builder.message.create/-update-message-interaction-response-create-builder/content.html","searchKeys":["content","open override var content: String? = null","dev.kord.rest.builder.message.create.UpdateMessageInteractionResponseCreateBuilder.content"]},{"name":"open override var content: String? = null","description":"dev.kord.rest.builder.message.create.UserMessageCreateBuilder.content","location":"rest/dev.kord.rest.builder.message.create/-user-message-create-builder/content.html","searchKeys":["content","open override var content: String? = null","dev.kord.rest.builder.message.create.UserMessageCreateBuilder.content"]},{"name":"open override var content: String? = null","description":"dev.kord.rest.builder.message.create.WebhookMessageCreateBuilder.content","location":"rest/dev.kord.rest.builder.message.create/-webhook-message-create-builder/content.html","searchKeys":["content","open override var content: String? = null","dev.kord.rest.builder.message.create.WebhookMessageCreateBuilder.content"]},{"name":"open override var description: String","description":"dev.kord.rest.builder.interaction.OptionsBuilder.description","location":"rest/dev.kord.rest.builder.interaction/-options-builder/description.html","searchKeys":["description","open override var description: String","dev.kord.rest.builder.interaction.OptionsBuilder.description"]},{"name":"open override var descriptionLocalizations: MutableMap<Locale, String>?","description":"dev.kord.rest.builder.interaction.OptionsBuilder.descriptionLocalizations","location":"rest/dev.kord.rest.builder.interaction/-options-builder/description-localizations.html","searchKeys":["descriptionLocalizations","open override var descriptionLocalizations: MutableMap<Locale, String>?","dev.kord.rest.builder.interaction.OptionsBuilder.descriptionLocalizations"]},{"name":"open override var embeds: MutableList<EmbedBuilder>","description":"dev.kord.rest.builder.message.create.UpdateMessageInteractionResponseCreateBuilder.embeds","location":"rest/dev.kord.rest.builder.message.create/-update-message-interaction-response-create-builder/embeds.html","searchKeys":["embeds","open override var embeds: MutableList<EmbedBuilder>","dev.kord.rest.builder.message.create.UpdateMessageInteractionResponseCreateBuilder.embeds"]},{"name":"open override var embeds: MutableList<EmbedBuilder>?","description":"dev.kord.rest.builder.message.modify.FollowupMessageModifyBuilder.embeds","location":"rest/dev.kord.rest.builder.message.modify/-followup-message-modify-builder/embeds.html","searchKeys":["embeds","open override var embeds: MutableList<EmbedBuilder>?","dev.kord.rest.builder.message.modify.FollowupMessageModifyBuilder.embeds"]},{"name":"open override var embeds: MutableList<EmbedBuilder>?","description":"dev.kord.rest.builder.message.modify.InteractionResponseModifyBuilder.embeds","location":"rest/dev.kord.rest.builder.message.modify/-interaction-response-modify-builder/embeds.html","searchKeys":["embeds","open override var embeds: MutableList<EmbedBuilder>?","dev.kord.rest.builder.message.modify.InteractionResponseModifyBuilder.embeds"]},{"name":"open override var embeds: MutableList<EmbedBuilder>?","description":"dev.kord.rest.builder.message.modify.UserMessageModifyBuilder.embeds","location":"rest/dev.kord.rest.builder.message.modify/-user-message-modify-builder/embeds.html","searchKeys":["embeds","open override var embeds: MutableList<EmbedBuilder>?","dev.kord.rest.builder.message.modify.UserMessageModifyBuilder.embeds"]},{"name":"open override var embeds: MutableList<EmbedBuilder>?","description":"dev.kord.rest.builder.message.modify.WebhookMessageModifyBuilder.embeds","location":"rest/dev.kord.rest.builder.message.modify/-webhook-message-modify-builder/embeds.html","searchKeys":["embeds","open override var embeds: MutableList<EmbedBuilder>?","dev.kord.rest.builder.message.modify.WebhookMessageModifyBuilder.embeds"]},{"name":"open override var files: MutableList<NamedFile>","description":"dev.kord.rest.builder.message.create.UpdateMessageInteractionResponseCreateBuilder.files","location":"rest/dev.kord.rest.builder.message.create/-update-message-interaction-response-create-builder/files.html","searchKeys":["files","open override var files: MutableList<NamedFile>","dev.kord.rest.builder.message.create.UpdateMessageInteractionResponseCreateBuilder.files"]},{"name":"open override var files: MutableList<NamedFile>?","description":"dev.kord.rest.builder.message.modify.FollowupMessageModifyBuilder.files","location":"rest/dev.kord.rest.builder.message.modify/-followup-message-modify-builder/files.html","searchKeys":["files","open override var files: MutableList<NamedFile>?","dev.kord.rest.builder.message.modify.FollowupMessageModifyBuilder.files"]},{"name":"open override var files: MutableList<NamedFile>?","description":"dev.kord.rest.builder.message.modify.InteractionResponseModifyBuilder.files","location":"rest/dev.kord.rest.builder.message.modify/-interaction-response-modify-builder/files.html","searchKeys":["files","open override var files: MutableList<NamedFile>?","dev.kord.rest.builder.message.modify.InteractionResponseModifyBuilder.files"]},{"name":"open override var files: MutableList<NamedFile>?","description":"dev.kord.rest.builder.message.modify.UserMessageModifyBuilder.files","location":"rest/dev.kord.rest.builder.message.modify/-user-message-modify-builder/files.html","searchKeys":["files","open override var files: MutableList<NamedFile>?","dev.kord.rest.builder.message.modify.UserMessageModifyBuilder.files"]},{"name":"open override var files: MutableList<NamedFile>?","description":"dev.kord.rest.builder.message.modify.WebhookMessageModifyBuilder.files","location":"rest/dev.kord.rest.builder.message.modify/-webhook-message-modify-builder/files.html","searchKeys":["files","open override var files: MutableList<NamedFile>?","dev.kord.rest.builder.message.modify.WebhookMessageModifyBuilder.files"]},{"name":"open override var keywords: MutableList<String>?","description":"dev.kord.rest.builder.automoderation.KeywordAutoModerationRuleCreateBuilder.keywords","location":"rest/dev.kord.rest.builder.automoderation/-keyword-auto-moderation-rule-create-builder/keywords.html","searchKeys":["keywords","open override var keywords: MutableList<String>?","dev.kord.rest.builder.automoderation.KeywordAutoModerationRuleCreateBuilder.keywords"]},{"name":"open override var keywords: MutableList<String>?","description":"dev.kord.rest.builder.automoderation.KeywordAutoModerationRuleModifyBuilder.keywords","location":"rest/dev.kord.rest.builder.automoderation/-keyword-auto-moderation-rule-modify-builder/keywords.html","searchKeys":["keywords","open override var keywords: MutableList<String>?","dev.kord.rest.builder.automoderation.KeywordAutoModerationRuleModifyBuilder.keywords"]},{"name":"open override var mentionLimit: Int","description":"dev.kord.rest.builder.automoderation.MentionSpamAutoModerationRuleCreateBuilder.mentionLimit","location":"rest/dev.kord.rest.builder.automoderation/-mention-spam-auto-moderation-rule-create-builder/mention-limit.html","searchKeys":["mentionLimit","open override var mentionLimit: Int","dev.kord.rest.builder.automoderation.MentionSpamAutoModerationRuleCreateBuilder.mentionLimit"]},{"name":"open override var mentionLimit: Int?","description":"dev.kord.rest.builder.automoderation.MentionSpamAutoModerationRuleModifyBuilder.mentionLimit","location":"rest/dev.kord.rest.builder.automoderation/-mention-spam-auto-moderation-rule-modify-builder/mention-limit.html","searchKeys":["mentionLimit","open override var mentionLimit: Int?","dev.kord.rest.builder.automoderation.MentionSpamAutoModerationRuleModifyBuilder.mentionLimit"]},{"name":"open override var name: String","description":"dev.kord.rest.builder.interaction.ChoiceLocalizationsBuilder.name","location":"rest/dev.kord.rest.builder.interaction/-choice-localizations-builder/name.html","searchKeys":["name","open override var name: String","dev.kord.rest.builder.interaction.ChoiceLocalizationsBuilder.name"]},{"name":"open override var name: String","description":"dev.kord.rest.builder.interaction.OptionsBuilder.name","location":"rest/dev.kord.rest.builder.interaction/-options-builder/name.html","searchKeys":["name","open override var name: String","dev.kord.rest.builder.interaction.OptionsBuilder.name"]},{"name":"open override var nameLocalizations: MutableMap<Locale, String>?","description":"dev.kord.rest.builder.interaction.ChoiceLocalizationsBuilder.nameLocalizations","location":"rest/dev.kord.rest.builder.interaction/-choice-localizations-builder/name-localizations.html","searchKeys":["nameLocalizations","open override var nameLocalizations: MutableMap<Locale, String>?","dev.kord.rest.builder.interaction.ChoiceLocalizationsBuilder.nameLocalizations"]},{"name":"open override var nameLocalizations: MutableMap<Locale, String>?","description":"dev.kord.rest.builder.interaction.OptionsBuilder.nameLocalizations","location":"rest/dev.kord.rest.builder.interaction/-options-builder/name-localizations.html","searchKeys":["nameLocalizations","open override var nameLocalizations: MutableMap<Locale, String>?","dev.kord.rest.builder.interaction.OptionsBuilder.nameLocalizations"]},{"name":"open override var permissionOverwrites: MutableSet<Overwrite>","description":"dev.kord.rest.builder.channel.CategoryCreateBuilder.permissionOverwrites","location":"rest/dev.kord.rest.builder.channel/-category-create-builder/permission-overwrites.html","searchKeys":["permissionOverwrites","open override var permissionOverwrites: MutableSet<Overwrite>","dev.kord.rest.builder.channel.CategoryCreateBuilder.permissionOverwrites"]},{"name":"open override var permissionOverwrites: MutableSet<Overwrite>","description":"dev.kord.rest.builder.channel.NewsChannelCreateBuilder.permissionOverwrites","location":"rest/dev.kord.rest.builder.channel/-news-channel-create-builder/permission-overwrites.html","searchKeys":["permissionOverwrites","open override var permissionOverwrites: MutableSet<Overwrite>","dev.kord.rest.builder.channel.NewsChannelCreateBuilder.permissionOverwrites"]},{"name":"open override var permissionOverwrites: MutableSet<Overwrite>","description":"dev.kord.rest.builder.channel.TextChannelCreateBuilder.permissionOverwrites","location":"rest/dev.kord.rest.builder.channel/-text-channel-create-builder/permission-overwrites.html","searchKeys":["permissionOverwrites","open override var permissionOverwrites: MutableSet<Overwrite>","dev.kord.rest.builder.channel.TextChannelCreateBuilder.permissionOverwrites"]},{"name":"open override var permissionOverwrites: MutableSet<Overwrite>","description":"dev.kord.rest.builder.channel.VoiceChannelCreateBuilder.permissionOverwrites","location":"rest/dev.kord.rest.builder.channel/-voice-channel-create-builder/permission-overwrites.html","searchKeys":["permissionOverwrites","open override var permissionOverwrites: MutableSet<Overwrite>","dev.kord.rest.builder.channel.VoiceChannelCreateBuilder.permissionOverwrites"]},{"name":"open override var permissionOverwrites: MutableSet<Overwrite>?","description":"dev.kord.rest.builder.channel.CategoryModifyBuilder.permissionOverwrites","location":"rest/dev.kord.rest.builder.channel/-category-modify-builder/permission-overwrites.html","searchKeys":["permissionOverwrites","open override var permissionOverwrites: MutableSet<Overwrite>?","dev.kord.rest.builder.channel.CategoryModifyBuilder.permissionOverwrites"]},{"name":"open override var permissionOverwrites: MutableSet<Overwrite>?","description":"dev.kord.rest.builder.channel.NewsChannelModifyBuilder.permissionOverwrites","location":"rest/dev.kord.rest.builder.channel/-news-channel-modify-builder/permission-overwrites.html","searchKeys":["permissionOverwrites","open override var permissionOverwrites: MutableSet<Overwrite>?","dev.kord.rest.builder.channel.NewsChannelModifyBuilder.permissionOverwrites"]},{"name":"open override var permissionOverwrites: MutableSet<Overwrite>?","description":"dev.kord.rest.builder.channel.StageVoiceChannelModifyBuilder.permissionOverwrites","location":"rest/dev.kord.rest.builder.channel/-stage-voice-channel-modify-builder/permission-overwrites.html","searchKeys":["permissionOverwrites","open override var permissionOverwrites: MutableSet<Overwrite>?","dev.kord.rest.builder.channel.StageVoiceChannelModifyBuilder.permissionOverwrites"]},{"name":"open override var permissionOverwrites: MutableSet<Overwrite>?","description":"dev.kord.rest.builder.channel.TextChannelModifyBuilder.permissionOverwrites","location":"rest/dev.kord.rest.builder.channel/-text-channel-modify-builder/permission-overwrites.html","searchKeys":["permissionOverwrites","open override var permissionOverwrites: MutableSet<Overwrite>?","dev.kord.rest.builder.channel.TextChannelModifyBuilder.permissionOverwrites"]},{"name":"open override var permissionOverwrites: MutableSet<Overwrite>?","description":"dev.kord.rest.builder.channel.VoiceChannelModifyBuilder.permissionOverwrites","location":"rest/dev.kord.rest.builder.channel/-voice-channel-modify-builder/permission-overwrites.html","searchKeys":["permissionOverwrites","open override var permissionOverwrites: MutableSet<Overwrite>?","dev.kord.rest.builder.channel.VoiceChannelModifyBuilder.permissionOverwrites"]},{"name":"open override var presets: MutableList<AutoModerationRuleKeywordPresetType>","description":"dev.kord.rest.builder.automoderation.KeywordPresetAutoModerationRuleCreateBuilder.presets","location":"rest/dev.kord.rest.builder.automoderation/-keyword-preset-auto-moderation-rule-create-builder/presets.html","searchKeys":["presets","open override var presets: MutableList<AutoModerationRuleKeywordPresetType>","dev.kord.rest.builder.automoderation.KeywordPresetAutoModerationRuleCreateBuilder.presets"]},{"name":"open override var presets: MutableList<AutoModerationRuleKeywordPresetType>?","description":"dev.kord.rest.builder.automoderation.KeywordPresetAutoModerationRuleModifyBuilder.presets","location":"rest/dev.kord.rest.builder.automoderation/-keyword-preset-auto-moderation-rule-modify-builder/presets.html","searchKeys":["presets","open override var presets: MutableList<AutoModerationRuleKeywordPresetType>?","dev.kord.rest.builder.automoderation.KeywordPresetAutoModerationRuleModifyBuilder.presets"]},{"name":"open override var reason: String? = null","description":"dev.kord.rest.builder.ban.BanCreateBuilder.reason","location":"rest/dev.kord.rest.builder.ban/-ban-create-builder/reason.html","searchKeys":["reason","open override var reason: String? = null","dev.kord.rest.builder.ban.BanCreateBuilder.reason"]},{"name":"open override var reason: String? = null","description":"dev.kord.rest.builder.channel.CategoryCreateBuilder.reason","location":"rest/dev.kord.rest.builder.channel/-category-create-builder/reason.html","searchKeys":["reason","open override var reason: String? = null","dev.kord.rest.builder.channel.CategoryCreateBuilder.reason"]},{"name":"open override var reason: String? = null","description":"dev.kord.rest.builder.channel.CategoryModifyBuilder.reason","location":"rest/dev.kord.rest.builder.channel/-category-modify-builder/reason.html","searchKeys":["reason","open override var reason: String? = null","dev.kord.rest.builder.channel.CategoryModifyBuilder.reason"]},{"name":"open override var reason: String? = null","description":"dev.kord.rest.builder.channel.ChannelPermissionModifyBuilder.reason","location":"rest/dev.kord.rest.builder.channel/-channel-permission-modify-builder/reason.html","searchKeys":["reason","open override var reason: String? = null","dev.kord.rest.builder.channel.ChannelPermissionModifyBuilder.reason"]},{"name":"open override var reason: String? = null","description":"dev.kord.rest.builder.channel.InviteCreateBuilder.reason","location":"rest/dev.kord.rest.builder.channel/-invite-create-builder/reason.html","searchKeys":["reason","open override var reason: String? = null","dev.kord.rest.builder.channel.InviteCreateBuilder.reason"]},{"name":"open override var reason: String? = null","description":"dev.kord.rest.builder.channel.NewsChannelCreateBuilder.reason","location":"rest/dev.kord.rest.builder.channel/-news-channel-create-builder/reason.html","searchKeys":["reason","open override var reason: String? = null","dev.kord.rest.builder.channel.NewsChannelCreateBuilder.reason"]},{"name":"open override var reason: String? = null","description":"dev.kord.rest.builder.channel.NewsChannelModifyBuilder.reason","location":"rest/dev.kord.rest.builder.channel/-news-channel-modify-builder/reason.html","searchKeys":["reason","open override var reason: String? = null","dev.kord.rest.builder.channel.NewsChannelModifyBuilder.reason"]},{"name":"open override var reason: String? = null","description":"dev.kord.rest.builder.channel.StageVoiceChannelModifyBuilder.reason","location":"rest/dev.kord.rest.builder.channel/-stage-voice-channel-modify-builder/reason.html","searchKeys":["reason","open override var reason: String? = null","dev.kord.rest.builder.channel.StageVoiceChannelModifyBuilder.reason"]},{"name":"open override var reason: String? = null","description":"dev.kord.rest.builder.channel.TextChannelCreateBuilder.reason","location":"rest/dev.kord.rest.builder.channel/-text-channel-create-builder/reason.html","searchKeys":["reason","open override var reason: String? = null","dev.kord.rest.builder.channel.TextChannelCreateBuilder.reason"]},{"name":"open override var reason: String? = null","description":"dev.kord.rest.builder.channel.TextChannelModifyBuilder.reason","location":"rest/dev.kord.rest.builder.channel/-text-channel-modify-builder/reason.html","searchKeys":["reason","open override var reason: String? = null","dev.kord.rest.builder.channel.TextChannelModifyBuilder.reason"]},{"name":"open override var reason: String? = null","description":"dev.kord.rest.builder.channel.VoiceChannelCreateBuilder.reason","location":"rest/dev.kord.rest.builder.channel/-voice-channel-create-builder/reason.html","searchKeys":["reason","open override var reason: String? = null","dev.kord.rest.builder.channel.VoiceChannelCreateBuilder.reason"]},{"name":"open override var reason: String? = null","description":"dev.kord.rest.builder.channel.VoiceChannelModifyBuilder.reason","location":"rest/dev.kord.rest.builder.channel/-voice-channel-modify-builder/reason.html","searchKeys":["reason","open override var reason: String? = null","dev.kord.rest.builder.channel.VoiceChannelModifyBuilder.reason"]},{"name":"open override var reason: String? = null","description":"dev.kord.rest.builder.channel.thread.StartThreadBuilder.reason","location":"rest/dev.kord.rest.builder.channel.thread/-start-thread-builder/reason.html","searchKeys":["reason","open override var reason: String? = null","dev.kord.rest.builder.channel.thread.StartThreadBuilder.reason"]},{"name":"open override var reason: String? = null","description":"dev.kord.rest.builder.channel.thread.StartThreadWithMessageBuilder.reason","location":"rest/dev.kord.rest.builder.channel.thread/-start-thread-with-message-builder/reason.html","searchKeys":["reason","open override var reason: String? = null","dev.kord.rest.builder.channel.thread.StartThreadWithMessageBuilder.reason"]},{"name":"open override var reason: String? = null","description":"dev.kord.rest.builder.channel.thread.ThreadModifyBuilder.reason","location":"rest/dev.kord.rest.builder.channel.thread/-thread-modify-builder/reason.html","searchKeys":["reason","open override var reason: String? = null","dev.kord.rest.builder.channel.thread.ThreadModifyBuilder.reason"]},{"name":"open override var reason: String? = null","description":"dev.kord.rest.builder.guild.EmojiCreateBuilder.reason","location":"rest/dev.kord.rest.builder.guild/-emoji-create-builder/reason.html","searchKeys":["reason","open override var reason: String? = null","dev.kord.rest.builder.guild.EmojiCreateBuilder.reason"]},{"name":"open override var reason: String? = null","description":"dev.kord.rest.builder.guild.EmojiModifyBuilder.reason","location":"rest/dev.kord.rest.builder.guild/-emoji-modify-builder/reason.html","searchKeys":["reason","open override var reason: String? = null","dev.kord.rest.builder.guild.EmojiModifyBuilder.reason"]},{"name":"open override var reason: String? = null","description":"dev.kord.rest.builder.guild.GuildModifyBuilder.reason","location":"rest/dev.kord.rest.builder.guild/-guild-modify-builder/reason.html","searchKeys":["reason","open override var reason: String? = null","dev.kord.rest.builder.guild.GuildModifyBuilder.reason"]},{"name":"open override var reason: String? = null","description":"dev.kord.rest.builder.guild.GuildWidgetModifyBuilder.reason","location":"rest/dev.kord.rest.builder.guild/-guild-widget-modify-builder/reason.html","searchKeys":["reason","open override var reason: String? = null","dev.kord.rest.builder.guild.GuildWidgetModifyBuilder.reason"]},{"name":"open override var reason: String? = null","description":"dev.kord.rest.builder.guild.ScheduledEventCreateBuilder.reason","location":"rest/dev.kord.rest.builder.guild/-scheduled-event-create-builder/reason.html","searchKeys":["reason","open override var reason: String? = null","dev.kord.rest.builder.guild.ScheduledEventCreateBuilder.reason"]},{"name":"open override var reason: String? = null","description":"dev.kord.rest.builder.guild.WelcomeScreenModifyBuilder.reason","location":"rest/dev.kord.rest.builder.guild/-welcome-screen-modify-builder/reason.html","searchKeys":["reason","open override var reason: String? = null","dev.kord.rest.builder.guild.WelcomeScreenModifyBuilder.reason"]},{"name":"open override var reason: String? = null","description":"dev.kord.rest.builder.integration.IntegrationModifyBuilder.reason","location":"rest/dev.kord.rest.builder.integration/-integration-modify-builder/reason.html","searchKeys":["reason","open override var reason: String? = null","dev.kord.rest.builder.integration.IntegrationModifyBuilder.reason"]},{"name":"open override var reason: String? = null","description":"dev.kord.rest.builder.member.MemberModifyBuilder.reason","location":"rest/dev.kord.rest.builder.member/-member-modify-builder/reason.html","searchKeys":["reason","open override var reason: String? = null","dev.kord.rest.builder.member.MemberModifyBuilder.reason"]},{"name":"open override var reason: String? = null","description":"dev.kord.rest.builder.role.RoleCreateBuilder.reason","location":"rest/dev.kord.rest.builder.role/-role-create-builder/reason.html","searchKeys":["reason","open override var reason: String? = null","dev.kord.rest.builder.role.RoleCreateBuilder.reason"]},{"name":"open override var reason: String? = null","description":"dev.kord.rest.builder.role.RoleModifyBuilder.reason","location":"rest/dev.kord.rest.builder.role/-role-modify-builder/reason.html","searchKeys":["reason","open override var reason: String? = null","dev.kord.rest.builder.role.RoleModifyBuilder.reason"]},{"name":"open override var reason: String? = null","description":"dev.kord.rest.builder.role.RolePositionsModifyBuilder.reason","location":"rest/dev.kord.rest.builder.role/-role-positions-modify-builder/reason.html","searchKeys":["reason","open override var reason: String? = null","dev.kord.rest.builder.role.RolePositionsModifyBuilder.reason"]},{"name":"open override var reason: String? = null","description":"dev.kord.rest.builder.scheduled_events.ScheduledEventModifyBuilder.reason","location":"rest/dev.kord.rest.builder.scheduled_events/-scheduled-event-modify-builder/reason.html","searchKeys":["reason","open override var reason: String? = null","dev.kord.rest.builder.scheduled_events.ScheduledEventModifyBuilder.reason"]},{"name":"open override var reason: String? = null","description":"dev.kord.rest.builder.stage.StageInstanceCreateBuilder.reason","location":"rest/dev.kord.rest.builder.stage/-stage-instance-create-builder/reason.html","searchKeys":["reason","open override var reason: String? = null","dev.kord.rest.builder.stage.StageInstanceCreateBuilder.reason"]},{"name":"open override var reason: String? = null","description":"dev.kord.rest.builder.stage.StageInstanceModifyBuilder.reason","location":"rest/dev.kord.rest.builder.stage/-stage-instance-modify-builder/reason.html","searchKeys":["reason","open override var reason: String? = null","dev.kord.rest.builder.stage.StageInstanceModifyBuilder.reason"]},{"name":"open override var reason: String? = null","description":"dev.kord.rest.builder.webhook.WebhookCreateBuilder.reason","location":"rest/dev.kord.rest.builder.webhook/-webhook-create-builder/reason.html","searchKeys":["reason","open override var reason: String? = null","dev.kord.rest.builder.webhook.WebhookCreateBuilder.reason"]},{"name":"open override var reason: String? = null","description":"dev.kord.rest.builder.webhook.WebhookModifyBuilder.reason","location":"rest/dev.kord.rest.builder.webhook/-webhook-modify-builder/reason.html","searchKeys":["reason","open override var reason: String? = null","dev.kord.rest.builder.webhook.WebhookModifyBuilder.reason"]},{"name":"open override var regexPatterns: MutableList<String>?","description":"dev.kord.rest.builder.automoderation.KeywordAutoModerationRuleCreateBuilder.regexPatterns","location":"rest/dev.kord.rest.builder.automoderation/-keyword-auto-moderation-rule-create-builder/regex-patterns.html","searchKeys":["regexPatterns","open override var regexPatterns: MutableList<String>?","dev.kord.rest.builder.automoderation.KeywordAutoModerationRuleCreateBuilder.regexPatterns"]},{"name":"open override var regexPatterns: MutableList<String>?","description":"dev.kord.rest.builder.automoderation.KeywordAutoModerationRuleModifyBuilder.regexPatterns","location":"rest/dev.kord.rest.builder.automoderation/-keyword-auto-moderation-rule-modify-builder/regex-patterns.html","searchKeys":["regexPatterns","open override var regexPatterns: MutableList<String>?","dev.kord.rest.builder.automoderation.KeywordAutoModerationRuleModifyBuilder.regexPatterns"]},{"name":"open override var tts: Boolean? = null","description":"dev.kord.rest.builder.message.create.FollowupMessageCreateBuilder.tts","location":"rest/dev.kord.rest.builder.message.create/-followup-message-create-builder/tts.html","searchKeys":["tts","open override var tts: Boolean? = null","dev.kord.rest.builder.message.create.FollowupMessageCreateBuilder.tts"]},{"name":"open override var tts: Boolean? = null","description":"dev.kord.rest.builder.message.create.InteractionResponseCreateBuilder.tts","location":"rest/dev.kord.rest.builder.message.create/-interaction-response-create-builder/tts.html","searchKeys":["tts","open override var tts: Boolean? = null","dev.kord.rest.builder.message.create.InteractionResponseCreateBuilder.tts"]},{"name":"open override var tts: Boolean? = null","description":"dev.kord.rest.builder.message.create.UpdateMessageInteractionResponseCreateBuilder.tts","location":"rest/dev.kord.rest.builder.message.create/-update-message-interaction-response-create-builder/tts.html","searchKeys":["tts","open override var tts: Boolean? = null","dev.kord.rest.builder.message.create.UpdateMessageInteractionResponseCreateBuilder.tts"]},{"name":"open override var tts: Boolean? = null","description":"dev.kord.rest.builder.message.create.UserMessageCreateBuilder.tts","location":"rest/dev.kord.rest.builder.message.create/-user-message-create-builder/tts.html","searchKeys":["tts","open override var tts: Boolean? = null","dev.kord.rest.builder.message.create.UserMessageCreateBuilder.tts"]},{"name":"open override var tts: Boolean? = null","description":"dev.kord.rest.builder.message.create.WebhookMessageCreateBuilder.tts","location":"rest/dev.kord.rest.builder.message.create/-webhook-message-create-builder/tts.html","searchKeys":["tts","open override var tts: Boolean? = null","dev.kord.rest.builder.message.create.WebhookMessageCreateBuilder.tts"]},{"name":"open suspend fun <T> intercept(builder: RequestBuilder<T>)","description":"dev.kord.rest.request.RequestHandler.intercept","location":"rest/dev.kord.rest.request/-request-handler/intercept.html","searchKeys":["intercept","open suspend fun <T> intercept(builder: RequestBuilder<T>)","dev.kord.rest.request.RequestHandler.intercept"]},{"name":"open suspend fun addFile(path: Path): NamedFile","description":"dev.kord.rest.builder.message.create.MessageCreateBuilder.addFile","location":"rest/dev.kord.rest.builder.message.create/-message-create-builder/add-file.html","searchKeys":["addFile","open suspend fun addFile(path: Path): NamedFile","dev.kord.rest.builder.message.create.MessageCreateBuilder.addFile"]},{"name":"open suspend fun addFile(path: Path): NamedFile","description":"dev.kord.rest.builder.message.modify.MessageModifyBuilder.addFile","location":"rest/dev.kord.rest.builder.message.modify/-message-modify-builder/add-file.html","searchKeys":["addFile","open suspend fun addFile(path: Path): NamedFile","dev.kord.rest.builder.message.modify.MessageModifyBuilder.addFile"]},{"name":"open suspend override fun <B : Any, R> handle(request: Request<B, R>): R","description":"dev.kord.rest.request.StackTraceRecoveringKtorRequestHandler.handle","location":"rest/dev.kord.rest.request/-stack-trace-recovering-ktor-request-handler/handle.html","searchKeys":["handle","open suspend override fun <B : Any, R> handle(request: Request<B, R>): R","dev.kord.rest.request.StackTraceRecoveringKtorRequestHandler.handle"]},{"name":"open suspend override fun await(request: Request<*, *>): RequestToken","description":"dev.kord.rest.ratelimit.AbstractRateLimiter.await","location":"rest/dev.kord.rest.ratelimit/-abstract-rate-limiter/await.html","searchKeys":["await","open suspend override fun await(request: Request<*, *>): RequestToken","dev.kord.rest.ratelimit.AbstractRateLimiter.await"]},{"name":"open suspend override fun await(request: Request<*, *>): RequestToken","description":"dev.kord.rest.ratelimit.ExclusionRequestRateLimiter.await","location":"rest/dev.kord.rest.ratelimit/-exclusion-request-rate-limiter/await.html","searchKeys":["await","open suspend override fun await(request: Request<*, *>): RequestToken","dev.kord.rest.ratelimit.ExclusionRequestRateLimiter.await"]},{"name":"open suspend tailrec override fun <B : Any, R> handle(request: Request<B, R>): R","description":"dev.kord.rest.request.KtorRequestHandler.handle","location":"rest/dev.kord.rest.request/-ktor-request-handler/handle.html","searchKeys":["handle","open suspend tailrec override fun <B : Any, R> handle(request: Request<B, R>): R","dev.kord.rest.request.KtorRequestHandler.handle"]},{"name":"operator fun AllowedMentionType.unaryPlus()","description":"dev.kord.rest.builder.message.AllowedMentionsBuilder.unaryPlus","location":"rest/dev.kord.rest.builder.message/-allowed-mentions-builder/unary-plus.html","searchKeys":["unaryPlus","operator fun AllowedMentionType.unaryPlus()","dev.kord.rest.builder.message.AllowedMentionsBuilder.unaryPlus"]},{"name":"operator fun MutableMap<Route.Key, String>.set(key: Route.Key, value: Snowflake)","description":"dev.kord.rest.request.RequestBuilder.set","location":"rest/dev.kord.rest.request/-request-builder/set.html","searchKeys":["set","operator fun MutableMap<Route.Key, String>.set(key: Route.Key, value: Snowflake)","dev.kord.rest.request.RequestBuilder.set"]},{"name":"operator fun MutableMap<String, String>.set(key: Route.Key, value: String)","description":"dev.kord.rest.request.RequestBuilder.set","location":"rest/dev.kord.rest.request/-request-builder/set.html","searchKeys":["set","operator fun MutableMap<String, String>.set(key: Route.Key, value: String)","dev.kord.rest.request.RequestBuilder.set"]},{"name":"operator fun component1(): String","description":"dev.kord.rest.NamedFile.component1","location":"rest/dev.kord.rest/-named-file/component1.html","searchKeys":["component1","operator fun component1(): String","dev.kord.rest.NamedFile.component1"]},{"name":"operator fun component2(): ChannelProvider","description":"dev.kord.rest.NamedFile.component2","location":"rest/dev.kord.rest/-named-file/component2.html","searchKeys":["component2","operator fun component2(): ChannelProvider","dev.kord.rest.NamedFile.component2"]},{"name":"operator fun component3(): String","description":"dev.kord.rest.NamedFile.component3","location":"rest/dev.kord.rest/-named-file/component3.html","searchKeys":["component3","operator fun component3(): String","dev.kord.rest.NamedFile.component3"]},{"name":"override fun toRequest(): AutoModerationRuleCreateRequest","description":"dev.kord.rest.builder.automoderation.AutoModerationRuleCreateBuilder.toRequest","location":"rest/dev.kord.rest.builder.automoderation/-auto-moderation-rule-create-builder/to-request.html","searchKeys":["toRequest","override fun toRequest(): AutoModerationRuleCreateRequest","dev.kord.rest.builder.automoderation.AutoModerationRuleCreateBuilder.toRequest"]},{"name":"override fun toRequest(): AutoModerationRuleModifyRequest","description":"dev.kord.rest.builder.automoderation.AutoModerationRuleModifyBuilder.toRequest","location":"rest/dev.kord.rest.builder.automoderation/-auto-moderation-rule-modify-builder/to-request.html","searchKeys":["toRequest","override fun toRequest(): AutoModerationRuleModifyRequest","dev.kord.rest.builder.automoderation.AutoModerationRuleModifyBuilder.toRequest"]},{"name":"override fun toRequest(): DiscordAutoModerationAction","description":"dev.kord.rest.builder.automoderation.AutoModerationActionBuilder.toRequest","location":"rest/dev.kord.rest.builder.automoderation/-auto-moderation-action-builder/to-request.html","searchKeys":["toRequest","override fun toRequest(): DiscordAutoModerationAction","dev.kord.rest.builder.automoderation.AutoModerationActionBuilder.toRequest"]},{"name":"override var actions: MutableList<AutoModerationActionBuilder>","description":"dev.kord.rest.builder.automoderation.AutoModerationRuleCreateBuilder.actions","location":"rest/dev.kord.rest.builder.automoderation/-auto-moderation-rule-create-builder/actions.html","searchKeys":["actions","override var actions: MutableList<AutoModerationActionBuilder>","dev.kord.rest.builder.automoderation.AutoModerationRuleCreateBuilder.actions"]},{"name":"override var actions: MutableList<AutoModerationActionBuilder>?","description":"dev.kord.rest.builder.automoderation.AutoModerationRuleModifyBuilder.actions","location":"rest/dev.kord.rest.builder.automoderation/-auto-moderation-rule-modify-builder/actions.html","searchKeys":["actions","override var actions: MutableList<AutoModerationActionBuilder>?","dev.kord.rest.builder.automoderation.AutoModerationRuleModifyBuilder.actions"]},{"name":"override var enabled: Boolean?","description":"dev.kord.rest.builder.automoderation.AutoModerationRuleCreateBuilder.enabled","location":"rest/dev.kord.rest.builder.automoderation/-auto-moderation-rule-create-builder/enabled.html","searchKeys":["enabled","override var enabled: Boolean?","dev.kord.rest.builder.automoderation.AutoModerationRuleCreateBuilder.enabled"]},{"name":"override var enabled: Boolean?","description":"dev.kord.rest.builder.automoderation.AutoModerationRuleModifyBuilder.enabled","location":"rest/dev.kord.rest.builder.automoderation/-auto-moderation-rule-modify-builder/enabled.html","searchKeys":["enabled","override var enabled: Boolean?","dev.kord.rest.builder.automoderation.AutoModerationRuleModifyBuilder.enabled"]},{"name":"override var eventType: AutoModerationRuleEventType","description":"dev.kord.rest.builder.automoderation.AutoModerationRuleCreateBuilder.eventType","location":"rest/dev.kord.rest.builder.automoderation/-auto-moderation-rule-create-builder/event-type.html","searchKeys":["eventType","override var eventType: AutoModerationRuleEventType","dev.kord.rest.builder.automoderation.AutoModerationRuleCreateBuilder.eventType"]},{"name":"override var eventType: AutoModerationRuleEventType?","description":"dev.kord.rest.builder.automoderation.AutoModerationRuleModifyBuilder.eventType","location":"rest/dev.kord.rest.builder.automoderation/-auto-moderation-rule-modify-builder/event-type.html","searchKeys":["eventType","override var eventType: AutoModerationRuleEventType?","dev.kord.rest.builder.automoderation.AutoModerationRuleModifyBuilder.eventType"]},{"name":"override var exemptChannels: MutableList<Snowflake>?","description":"dev.kord.rest.builder.automoderation.AutoModerationRuleCreateBuilder.exemptChannels","location":"rest/dev.kord.rest.builder.automoderation/-auto-moderation-rule-create-builder/exempt-channels.html","searchKeys":["exemptChannels","override var exemptChannels: MutableList<Snowflake>?","dev.kord.rest.builder.automoderation.AutoModerationRuleCreateBuilder.exemptChannels"]},{"name":"override var exemptChannels: MutableList<Snowflake>?","description":"dev.kord.rest.builder.automoderation.AutoModerationRuleModifyBuilder.exemptChannels","location":"rest/dev.kord.rest.builder.automoderation/-auto-moderation-rule-modify-builder/exempt-channels.html","searchKeys":["exemptChannels","override var exemptChannels: MutableList<Snowflake>?","dev.kord.rest.builder.automoderation.AutoModerationRuleModifyBuilder.exemptChannels"]},{"name":"override var exemptRoles: MutableList<Snowflake>?","description":"dev.kord.rest.builder.automoderation.AutoModerationRuleCreateBuilder.exemptRoles","location":"rest/dev.kord.rest.builder.automoderation/-auto-moderation-rule-create-builder/exempt-roles.html","searchKeys":["exemptRoles","override var exemptRoles: MutableList<Snowflake>?","dev.kord.rest.builder.automoderation.AutoModerationRuleCreateBuilder.exemptRoles"]},{"name":"override var exemptRoles: MutableList<Snowflake>?","description":"dev.kord.rest.builder.automoderation.AutoModerationRuleModifyBuilder.exemptRoles","location":"rest/dev.kord.rest.builder.automoderation/-auto-moderation-rule-modify-builder/exempt-roles.html","searchKeys":["exemptRoles","override var exemptRoles: MutableList<Snowflake>?","dev.kord.rest.builder.automoderation.AutoModerationRuleModifyBuilder.exemptRoles"]},{"name":"override var name: String","description":"dev.kord.rest.builder.automoderation.AutoModerationRuleCreateBuilder.name","location":"rest/dev.kord.rest.builder.automoderation/-auto-moderation-rule-create-builder/name.html","searchKeys":["name","override var name: String","dev.kord.rest.builder.automoderation.AutoModerationRuleCreateBuilder.name"]},{"name":"override var name: String?","description":"dev.kord.rest.builder.automoderation.AutoModerationRuleModifyBuilder.name","location":"rest/dev.kord.rest.builder.automoderation/-auto-moderation-rule-modify-builder/name.html","searchKeys":["name","override var name: String?","dev.kord.rest.builder.automoderation.AutoModerationRuleModifyBuilder.name"]},{"name":"override var reason: String? = null","description":"dev.kord.rest.builder.automoderation.AutoModerationRuleCreateBuilder.reason","location":"rest/dev.kord.rest.builder.automoderation/-auto-moderation-rule-create-builder/reason.html","searchKeys":["reason","override var reason: String? = null","dev.kord.rest.builder.automoderation.AutoModerationRuleCreateBuilder.reason"]},{"name":"override var reason: String? = null","description":"dev.kord.rest.builder.automoderation.AutoModerationRuleModifyBuilder.reason","location":"rest/dev.kord.rest.builder.automoderation/-auto-moderation-rule-modify-builder/reason.html","searchKeys":["reason","override var reason: String? = null","dev.kord.rest.builder.automoderation.AutoModerationRuleModifyBuilder.reason"]},{"name":"sealed class ActionRowComponentBuilder : ComponentBuilder","description":"dev.kord.rest.builder.component.ActionRowComponentBuilder","location":"rest/dev.kord.rest.builder.component/-action-row-component-builder/index.html","searchKeys":["ActionRowComponentBuilder","sealed class ActionRowComponentBuilder : ComponentBuilder","dev.kord.rest.builder.component.ActionRowComponentBuilder"]},{"name":"sealed class AutoModerationActionBuilder : RequestBuilder<DiscordAutoModerationAction> ","description":"dev.kord.rest.builder.automoderation.AutoModerationActionBuilder","location":"rest/dev.kord.rest.builder.automoderation/-auto-moderation-action-builder/index.html","searchKeys":["AutoModerationActionBuilder","sealed class AutoModerationActionBuilder : RequestBuilder<DiscordAutoModerationAction> ","dev.kord.rest.builder.automoderation.AutoModerationActionBuilder"]},{"name":"sealed class AutoModerationRuleCreateBuilder : TypedAutoModerationRuleBuilder, AuditRequestBuilder<AutoModerationRuleCreateRequest> ","description":"dev.kord.rest.builder.automoderation.AutoModerationRuleCreateBuilder","location":"rest/dev.kord.rest.builder.automoderation/-auto-moderation-rule-create-builder/index.html","searchKeys":["AutoModerationRuleCreateBuilder","sealed class AutoModerationRuleCreateBuilder : TypedAutoModerationRuleBuilder, AuditRequestBuilder<AutoModerationRuleCreateRequest> ","dev.kord.rest.builder.automoderation.AutoModerationRuleCreateBuilder"]},{"name":"sealed class AutoModerationRuleModifyBuilder : AutoModerationRuleBuilder, AuditRequestBuilder<AutoModerationRuleModifyRequest> ","description":"dev.kord.rest.builder.automoderation.AutoModerationRuleModifyBuilder","location":"rest/dev.kord.rest.builder.automoderation/-auto-moderation-rule-modify-builder/index.html","searchKeys":["AutoModerationRuleModifyBuilder","sealed class AutoModerationRuleModifyBuilder : AutoModerationRuleBuilder, AuditRequestBuilder<AutoModerationRuleModifyRequest> ","dev.kord.rest.builder.automoderation.AutoModerationRuleModifyBuilder"]},{"name":"sealed class BaseChoiceBuilder<T> : OptionsBuilder","description":"dev.kord.rest.builder.interaction.BaseChoiceBuilder","location":"rest/dev.kord.rest.builder.interaction/-base-choice-builder/index.html","searchKeys":["BaseChoiceBuilder","sealed class BaseChoiceBuilder<T> : OptionsBuilder","dev.kord.rest.builder.interaction.BaseChoiceBuilder"]},{"name":"sealed class BaseCommandOptionBuilder : OptionsBuilder","description":"dev.kord.rest.builder.interaction.BaseCommandOptionBuilder","location":"rest/dev.kord.rest.builder.interaction/-base-command-option-builder/index.html","searchKeys":["BaseCommandOptionBuilder","sealed class BaseCommandOptionBuilder : OptionsBuilder","dev.kord.rest.builder.interaction.BaseCommandOptionBuilder"]},{"name":"sealed class ButtonBuilder : ActionRowComponentBuilder","description":"dev.kord.rest.builder.component.ButtonBuilder","location":"rest/dev.kord.rest.builder.component/-button-builder/index.html","searchKeys":["ButtonBuilder","sealed class ButtonBuilder : ActionRowComponentBuilder","dev.kord.rest.builder.component.ButtonBuilder"]},{"name":"sealed class Format","description":"dev.kord.rest.Image.Format","location":"rest/dev.kord.rest/-image/-format/index.html","searchKeys":["Format","sealed class Format","dev.kord.rest.Image.Format"]},{"name":"sealed class MultiApplicationCommandBuilder","description":"dev.kord.rest.builder.interaction.MultiApplicationCommandBuilder","location":"rest/dev.kord.rest.builder.interaction/-multi-application-command-builder/index.html","searchKeys":["MultiApplicationCommandBuilder","sealed class MultiApplicationCommandBuilder","dev.kord.rest.builder.interaction.MultiApplicationCommandBuilder"]},{"name":"sealed class NumericOptionBuilder<T : Number> : BaseChoiceBuilder<T> ","description":"dev.kord.rest.builder.interaction.NumericOptionBuilder","location":"rest/dev.kord.rest.builder.interaction/-numeric-option-builder/index.html","searchKeys":["NumericOptionBuilder","sealed class NumericOptionBuilder<T : Number> : BaseChoiceBuilder<T> ","dev.kord.rest.builder.interaction.NumericOptionBuilder"]},{"name":"sealed class OptionsBuilder : LocalizedNameCreateBuilder, LocalizedDescriptionCreateBuilder, RequestBuilder<ApplicationCommandOption> ","description":"dev.kord.rest.builder.interaction.OptionsBuilder","location":"rest/dev.kord.rest.builder.interaction/-options-builder/index.html","searchKeys":["OptionsBuilder","sealed class OptionsBuilder : LocalizedNameCreateBuilder, LocalizedDescriptionCreateBuilder, RequestBuilder<ApplicationCommandOption> ","dev.kord.rest.builder.interaction.OptionsBuilder"]},{"name":"sealed class Request<B : Any, R>","description":"dev.kord.rest.request.Request","location":"rest/dev.kord.rest.request/-request/index.html","searchKeys":["Request","sealed class Request<B : Any, R>","dev.kord.rest.request.Request"]},{"name":"sealed class RequestIdentifier","description":"dev.kord.rest.request.RequestIdentifier","location":"rest/dev.kord.rest.request/-request-identifier/index.html","searchKeys":["RequestIdentifier","sealed class RequestIdentifier","dev.kord.rest.request.RequestIdentifier"]},{"name":"sealed class RequestResponse","description":"dev.kord.rest.ratelimit.RequestResponse","location":"rest/dev.kord.rest.ratelimit/-request-response/index.html","searchKeys":["RequestResponse","sealed class RequestResponse","dev.kord.rest.ratelimit.RequestResponse"]},{"name":"sealed class Route<T>","description":"dev.kord.rest.route.Route","location":"rest/dev.kord.rest.route/-route/index.html","searchKeys":["Route","sealed class Route<T>","dev.kord.rest.route.Route"]},{"name":"suspend fun HttpResponse.errorString(): String","description":"dev.kord.rest.request.errorString","location":"rest/dev.kord.rest.request/error-string.html","searchKeys":["errorString","suspend fun HttpResponse.errorString(): String","dev.kord.rest.request.errorString"]},{"name":"suspend fun addGuildMember(guildId: Snowflake, userId: Snowflake, token: String, builder: MemberAddBuilder.() -> Unit)","description":"dev.kord.rest.service.GuildService.addGuildMember","location":"rest/dev.kord.rest.service/-guild-service/add-guild-member.html","searchKeys":["addGuildMember","suspend fun addGuildMember(guildId: Snowflake, userId: Snowflake, token: String, builder: MemberAddBuilder.() -> Unit)","dev.kord.rest.service.GuildService.addGuildMember"]},{"name":"suspend fun addPinnedMessage(channelId: Snowflake, messageId: Snowflake, reason: String? = null)","description":"dev.kord.rest.service.ChannelService.addPinnedMessage","location":"rest/dev.kord.rest.service/-channel-service/add-pinned-message.html","searchKeys":["addPinnedMessage","suspend fun addPinnedMessage(channelId: Snowflake, messageId: Snowflake, reason: String? = null)","dev.kord.rest.service.ChannelService.addPinnedMessage"]},{"name":"suspend fun addRoleToGuildMember(guildId: Snowflake, userId: Snowflake, roleId: Snowflake, reason: String? = null)","description":"dev.kord.rest.service.GuildService.addRoleToGuildMember","location":"rest/dev.kord.rest.service/-guild-service/add-role-to-guild-member.html","searchKeys":["addRoleToGuildMember","suspend fun addRoleToGuildMember(guildId: Snowflake, userId: Snowflake, roleId: Snowflake, reason: String? = null)","dev.kord.rest.service.GuildService.addRoleToGuildMember"]},{"name":"suspend fun addToGroup(channelId: Snowflake, userId: Snowflake, addUser: UserAddDMRequest)","description":"dev.kord.rest.service.ChannelService.addToGroup","location":"rest/dev.kord.rest.service/-channel-service/add-to-group.html","searchKeys":["addToGroup","suspend fun addToGroup(channelId: Snowflake, userId: Snowflake, addUser: UserAddDMRequest)","dev.kord.rest.service.ChannelService.addToGroup"]},{"name":"suspend fun addUserToThread(channelId: Snowflake, userId: Snowflake)","description":"dev.kord.rest.service.ChannelService.addUserToThread","location":"rest/dev.kord.rest.service/-channel-service/add-user-to-thread.html","searchKeys":["addUserToThread","suspend fun addUserToThread(channelId: Snowflake, userId: Snowflake)","dev.kord.rest.service.ChannelService.addUserToThread"]},{"name":"suspend fun beginGuildPrune(guildId: Snowflake, days: Int = 7, computePruneCount: Boolean = true, reason: String? = null): PruneResponse","description":"dev.kord.rest.service.GuildService.beginGuildPrune","location":"rest/dev.kord.rest.service/-guild-service/begin-guild-prune.html","searchKeys":["beginGuildPrune","suspend fun beginGuildPrune(guildId: Snowflake, days: Int = 7, computePruneCount: Boolean = true, reason: String? = null): PruneResponse","dev.kord.rest.service.GuildService.beginGuildPrune"]},{"name":"suspend fun bulkDelete(channelId: Snowflake, messages: BulkDeleteRequest, reason: String? = null)","description":"dev.kord.rest.service.ChannelService.bulkDelete","location":"rest/dev.kord.rest.service/-channel-service/bulk-delete.html","searchKeys":["bulkDelete","suspend fun bulkDelete(channelId: Snowflake, messages: BulkDeleteRequest, reason: String? = null)","dev.kord.rest.service.ChannelService.bulkDelete"]},{"name":"suspend fun createAutoModerationRule(guildId: Snowflake, request: AutoModerationRuleCreateRequest, reason: String? = null): DiscordAutoModerationRule","description":"dev.kord.rest.service.AutoModerationService.createAutoModerationRule","location":"rest/dev.kord.rest.service/-auto-moderation-service/create-auto-moderation-rule.html","searchKeys":["createAutoModerationRule","suspend fun createAutoModerationRule(guildId: Snowflake, request: AutoModerationRuleCreateRequest, reason: String? = null): DiscordAutoModerationRule","dev.kord.rest.service.AutoModerationService.createAutoModerationRule"]},{"name":"suspend fun createDM(dm: DMCreateRequest): DiscordChannel","description":"dev.kord.rest.service.UserService.createDM","location":"rest/dev.kord.rest.service/-user-service/create-d-m.html","searchKeys":["createDM","suspend fun createDM(dm: DMCreateRequest): DiscordChannel","dev.kord.rest.service.UserService.createDM"]},{"name":"suspend fun createEmoji(guildId: Snowflake, emoji: EmojiCreateRequest, reason: String? = null): DiscordEmoji","description":"dev.kord.rest.service.EmojiService.createEmoji","location":"rest/dev.kord.rest.service/-emoji-service/create-emoji.html","searchKeys":["createEmoji","suspend fun createEmoji(guildId: Snowflake, emoji: EmojiCreateRequest, reason: String? = null): DiscordEmoji","dev.kord.rest.service.EmojiService.createEmoji"]},{"name":"suspend fun createFollowupMessage(applicationId: Snowflake, interactionToken: String, multipart: MultipartFollowupMessageCreateRequest): DiscordMessage","description":"dev.kord.rest.service.InteractionService.createFollowupMessage","location":"rest/dev.kord.rest.service/-interaction-service/create-followup-message.html","searchKeys":["createFollowupMessage","suspend fun createFollowupMessage(applicationId: Snowflake, interactionToken: String, multipart: MultipartFollowupMessageCreateRequest): DiscordMessage","dev.kord.rest.service.InteractionService.createFollowupMessage"]},{"name":"suspend fun createGlobalApplicationCommand(applicationId: Snowflake, request: ApplicationCommandCreateRequest): DiscordApplicationCommand","description":"dev.kord.rest.service.InteractionService.createGlobalApplicationCommand","location":"rest/dev.kord.rest.service/-interaction-service/create-global-application-command.html","searchKeys":["createGlobalApplicationCommand","suspend fun createGlobalApplicationCommand(applicationId: Snowflake, request: ApplicationCommandCreateRequest): DiscordApplicationCommand","dev.kord.rest.service.InteractionService.createGlobalApplicationCommand"]},{"name":"suspend fun createGlobalApplicationCommands(applicationId: Snowflake, request: List<ApplicationCommandCreateRequest>): List<DiscordApplicationCommand>","description":"dev.kord.rest.service.InteractionService.createGlobalApplicationCommands","location":"rest/dev.kord.rest.service/-interaction-service/create-global-application-commands.html","searchKeys":["createGlobalApplicationCommands","suspend fun createGlobalApplicationCommands(applicationId: Snowflake, request: List<ApplicationCommandCreateRequest>): List<DiscordApplicationCommand>","dev.kord.rest.service.InteractionService.createGlobalApplicationCommands"]},{"name":"suspend fun createGuildApplicationCommand(applicationId: Snowflake, guildId: Snowflake, request: ApplicationCommandCreateRequest): DiscordApplicationCommand","description":"dev.kord.rest.service.InteractionService.createGuildApplicationCommand","location":"rest/dev.kord.rest.service/-interaction-service/create-guild-application-command.html","searchKeys":["createGuildApplicationCommand","suspend fun createGuildApplicationCommand(applicationId: Snowflake, guildId: Snowflake, request: ApplicationCommandCreateRequest): DiscordApplicationCommand","dev.kord.rest.service.InteractionService.createGuildApplicationCommand"]},{"name":"suspend fun createGuildApplicationCommands(applicationId: Snowflake, guildId: Snowflake, request: List<ApplicationCommandCreateRequest>): List<DiscordApplicationCommand>","description":"dev.kord.rest.service.InteractionService.createGuildApplicationCommands","location":"rest/dev.kord.rest.service/-interaction-service/create-guild-application-commands.html","searchKeys":["createGuildApplicationCommands","suspend fun createGuildApplicationCommands(applicationId: Snowflake, guildId: Snowflake, request: List<ApplicationCommandCreateRequest>): List<DiscordApplicationCommand>","dev.kord.rest.service.InteractionService.createGuildApplicationCommands"]},{"name":"suspend fun createGuildChannel(guildId: Snowflake, channel: GuildChannelCreateRequest, reason: String? = null): DiscordChannel","description":"dev.kord.rest.service.GuildService.createGuildChannel","location":"rest/dev.kord.rest.service/-guild-service/create-guild-channel.html","searchKeys":["createGuildChannel","suspend fun createGuildChannel(guildId: Snowflake, channel: GuildChannelCreateRequest, reason: String? = null): DiscordChannel","dev.kord.rest.service.GuildService.createGuildChannel"]},{"name":"suspend fun createGuildFromTemplate(code: String, request: GuildFromTemplateCreateRequest): DiscordGuild","description":"dev.kord.rest.service.TemplateService.createGuildFromTemplate","location":"rest/dev.kord.rest.service/-template-service/create-guild-from-template.html","searchKeys":["createGuildFromTemplate","suspend fun createGuildFromTemplate(code: String, request: GuildFromTemplateCreateRequest): DiscordGuild","dev.kord.rest.service.TemplateService.createGuildFromTemplate"]},{"name":"suspend fun createGuildIntegration(guildId: Snowflake, integration: GuildIntegrationCreateRequest)","description":"dev.kord.rest.service.GuildService.createGuildIntegration","location":"rest/dev.kord.rest.service/-guild-service/create-guild-integration.html","searchKeys":["createGuildIntegration","suspend fun createGuildIntegration(guildId: Snowflake, integration: GuildIntegrationCreateRequest)","dev.kord.rest.service.GuildService.createGuildIntegration"]},{"name":"suspend fun createGuildSticker(guildId: Snowflake, multipartRequest: MultipartGuildStickerCreateRequest): DiscordMessageSticker","description":"dev.kord.rest.service.StickerService.createGuildSticker","location":"rest/dev.kord.rest.service/-sticker-service/create-guild-sticker.html","searchKeys":["createGuildSticker","suspend fun createGuildSticker(guildId: Snowflake, multipartRequest: MultipartGuildStickerCreateRequest): DiscordMessageSticker","dev.kord.rest.service.StickerService.createGuildSticker"]},{"name":"suspend fun createGuildTemplate(guildId: Snowflake, request: GuildTemplateCreateRequest): DiscordTemplate","description":"dev.kord.rest.service.TemplateService.createGuildTemplate","location":"rest/dev.kord.rest.service/-template-service/create-guild-template.html","searchKeys":["createGuildTemplate","suspend fun createGuildTemplate(guildId: Snowflake, request: GuildTemplateCreateRequest): DiscordTemplate","dev.kord.rest.service.TemplateService.createGuildTemplate"]},{"name":"suspend fun createInteractionResponse(interactionId: Snowflake, interactionToken: String, request: InteractionResponseCreateRequest)","description":"dev.kord.rest.service.InteractionService.createInteractionResponse","location":"rest/dev.kord.rest.service/-interaction-service/create-interaction-response.html","searchKeys":["createInteractionResponse","suspend fun createInteractionResponse(interactionId: Snowflake, interactionToken: String, request: InteractionResponseCreateRequest)","dev.kord.rest.service.InteractionService.createInteractionResponse"]},{"name":"suspend fun createInteractionResponse(interactionId: Snowflake, interactionToken: String, request: MultipartInteractionResponseCreateRequest)","description":"dev.kord.rest.service.InteractionService.createInteractionResponse","location":"rest/dev.kord.rest.service/-interaction-service/create-interaction-response.html","searchKeys":["createInteractionResponse","suspend fun createInteractionResponse(interactionId: Snowflake, interactionToken: String, request: MultipartInteractionResponseCreateRequest)","dev.kord.rest.service.InteractionService.createInteractionResponse"]},{"name":"suspend fun createMessage(channelId: Snowflake, multipartRequest: MultipartMessageCreateRequest): DiscordMessage","description":"dev.kord.rest.service.ChannelService.createMessage","location":"rest/dev.kord.rest.service/-channel-service/create-message.html","searchKeys":["createMessage","suspend fun createMessage(channelId: Snowflake, multipartRequest: MultipartMessageCreateRequest): DiscordMessage","dev.kord.rest.service.ChannelService.createMessage"]},{"name":"suspend fun createModalInteractionResponse(interactionId: Snowflake, interactionToken: String, modal: DiscordModal)","description":"dev.kord.rest.service.InteractionService.createModalInteractionResponse","location":"rest/dev.kord.rest.service/-interaction-service/create-modal-interaction-response.html","searchKeys":["createModalInteractionResponse","suspend fun createModalInteractionResponse(interactionId: Snowflake, interactionToken: String, modal: DiscordModal)","dev.kord.rest.service.InteractionService.createModalInteractionResponse"]},{"name":"suspend fun createReaction(channelId: Snowflake, messageId: Snowflake, emoji: String)","description":"dev.kord.rest.service.ChannelService.createReaction","location":"rest/dev.kord.rest.service/-channel-service/create-reaction.html","searchKeys":["createReaction","suspend fun createReaction(channelId: Snowflake, messageId: Snowflake, emoji: String)","dev.kord.rest.service.ChannelService.createReaction"]},{"name":"suspend fun createScheduledEvent(guildId: Snowflake, request: GuildScheduledEventCreateRequest, reason: String? = null): DiscordGuildScheduledEvent","description":"dev.kord.rest.service.GuildService.createScheduledEvent","location":"rest/dev.kord.rest.service/-guild-service/create-scheduled-event.html","searchKeys":["createScheduledEvent","suspend fun createScheduledEvent(guildId: Snowflake, request: GuildScheduledEventCreateRequest, reason: String? = null): DiscordGuildScheduledEvent","dev.kord.rest.service.GuildService.createScheduledEvent"]},{"name":"suspend fun createStageInstance(request: StageInstanceCreateRequest, reason: String? = null): DiscordStageInstance","description":"dev.kord.rest.service.StageInstanceService.createStageInstance","location":"rest/dev.kord.rest.service/-stage-instance-service/create-stage-instance.html","searchKeys":["createStageInstance","suspend fun createStageInstance(request: StageInstanceCreateRequest, reason: String? = null): DiscordStageInstance","dev.kord.rest.service.StageInstanceService.createStageInstance"]},{"name":"suspend fun crossPost(channelId: Snowflake, messageId: Snowflake): DiscordMessage","description":"dev.kord.rest.service.ChannelService.crossPost","location":"rest/dev.kord.rest.service/-channel-service/cross-post.html","searchKeys":["crossPost","suspend fun crossPost(channelId: Snowflake, messageId: Snowflake): DiscordMessage","dev.kord.rest.service.ChannelService.crossPost"]},{"name":"suspend fun deferMessage(interactionId: Snowflake, interactionToken: String, ephemeral: Boolean = false)","description":"dev.kord.rest.service.InteractionService.deferMessage","location":"rest/dev.kord.rest.service/-interaction-service/defer-message.html","searchKeys":["deferMessage","suspend fun deferMessage(interactionId: Snowflake, interactionToken: String, ephemeral: Boolean = false)","dev.kord.rest.service.InteractionService.deferMessage"]},{"name":"suspend fun deferMessageUpdate(interactionId: Snowflake, interactionToken: String)","description":"dev.kord.rest.service.InteractionService.deferMessageUpdate","location":"rest/dev.kord.rest.service/-interaction-service/defer-message-update.html","searchKeys":["deferMessageUpdate","suspend fun deferMessageUpdate(interactionId: Snowflake, interactionToken: String)","dev.kord.rest.service.InteractionService.deferMessageUpdate"]},{"name":"suspend fun deleteAllReactions(channelId: Snowflake, messageId: Snowflake)","description":"dev.kord.rest.service.ChannelService.deleteAllReactions","location":"rest/dev.kord.rest.service/-channel-service/delete-all-reactions.html","searchKeys":["deleteAllReactions","suspend fun deleteAllReactions(channelId: Snowflake, messageId: Snowflake)","dev.kord.rest.service.ChannelService.deleteAllReactions"]},{"name":"suspend fun deleteAllReactionsForEmoji(channelId: Snowflake, messageId: Snowflake, emoji: String)","description":"dev.kord.rest.service.ChannelService.deleteAllReactionsForEmoji","location":"rest/dev.kord.rest.service/-channel-service/delete-all-reactions-for-emoji.html","searchKeys":["deleteAllReactionsForEmoji","suspend fun deleteAllReactionsForEmoji(channelId: Snowflake, messageId: Snowflake, emoji: String)","dev.kord.rest.service.ChannelService.deleteAllReactionsForEmoji"]},{"name":"suspend fun deleteAutoModerationRule(guildId: Snowflake, ruleId: Snowflake, reason: String? = null)","description":"dev.kord.rest.service.AutoModerationService.deleteAutoModerationRule","location":"rest/dev.kord.rest.service/-auto-moderation-service/delete-auto-moderation-rule.html","searchKeys":["deleteAutoModerationRule","suspend fun deleteAutoModerationRule(guildId: Snowflake, ruleId: Snowflake, reason: String? = null)","dev.kord.rest.service.AutoModerationService.deleteAutoModerationRule"]},{"name":"suspend fun deleteChannel(channelId: Snowflake, reason: String? = null): DiscordChannel","description":"dev.kord.rest.service.ChannelService.deleteChannel","location":"rest/dev.kord.rest.service/-channel-service/delete-channel.html","searchKeys":["deleteChannel","suspend fun deleteChannel(channelId: Snowflake, reason: String? = null): DiscordChannel","dev.kord.rest.service.ChannelService.deleteChannel"]},{"name":"suspend fun deleteChannelPermission(channelId: Snowflake, overwriteId: Snowflake, reason: String? = null)","description":"dev.kord.rest.service.ChannelService.deleteChannelPermission","location":"rest/dev.kord.rest.service/-channel-service/delete-channel-permission.html","searchKeys":["deleteChannelPermission","suspend fun deleteChannelPermission(channelId: Snowflake, overwriteId: Snowflake, reason: String? = null)","dev.kord.rest.service.ChannelService.deleteChannelPermission"]},{"name":"suspend fun deleteEmoji(guildId: Snowflake, emojiId: Snowflake, reason: String? = null)","description":"dev.kord.rest.service.EmojiService.deleteEmoji","location":"rest/dev.kord.rest.service/-emoji-service/delete-emoji.html","searchKeys":["deleteEmoji","suspend fun deleteEmoji(guildId: Snowflake, emojiId: Snowflake, reason: String? = null)","dev.kord.rest.service.EmojiService.deleteEmoji"]},{"name":"suspend fun deleteFollowupMessage(applicationId: Snowflake, interactionToken: String, messageId: Snowflake)","description":"dev.kord.rest.service.InteractionService.deleteFollowupMessage","location":"rest/dev.kord.rest.service/-interaction-service/delete-followup-message.html","searchKeys":["deleteFollowupMessage","suspend fun deleteFollowupMessage(applicationId: Snowflake, interactionToken: String, messageId: Snowflake)","dev.kord.rest.service.InteractionService.deleteFollowupMessage"]},{"name":"suspend fun deleteGlobalApplicationCommand(applicationId: Snowflake, commandId: Snowflake)","description":"dev.kord.rest.service.InteractionService.deleteGlobalApplicationCommand","location":"rest/dev.kord.rest.service/-interaction-service/delete-global-application-command.html","searchKeys":["deleteGlobalApplicationCommand","suspend fun deleteGlobalApplicationCommand(applicationId: Snowflake, commandId: Snowflake)","dev.kord.rest.service.InteractionService.deleteGlobalApplicationCommand"]},{"name":"suspend fun deleteGuild(guildId: Snowflake)","description":"dev.kord.rest.service.GuildService.deleteGuild","location":"rest/dev.kord.rest.service/-guild-service/delete-guild.html","searchKeys":["deleteGuild","suspend fun deleteGuild(guildId: Snowflake)","dev.kord.rest.service.GuildService.deleteGuild"]},{"name":"suspend fun deleteGuildApplicationCommand(applicationId: Snowflake, guildId: Snowflake, commandId: Snowflake)","description":"dev.kord.rest.service.InteractionService.deleteGuildApplicationCommand","location":"rest/dev.kord.rest.service/-interaction-service/delete-guild-application-command.html","searchKeys":["deleteGuildApplicationCommand","suspend fun deleteGuildApplicationCommand(applicationId: Snowflake, guildId: Snowflake, commandId: Snowflake)","dev.kord.rest.service.InteractionService.deleteGuildApplicationCommand"]},{"name":"suspend fun deleteGuildBan(guildId: Snowflake, userId: Snowflake, reason: String? = null)","description":"dev.kord.rest.service.GuildService.deleteGuildBan","location":"rest/dev.kord.rest.service/-guild-service/delete-guild-ban.html","searchKeys":["deleteGuildBan","suspend fun deleteGuildBan(guildId: Snowflake, userId: Snowflake, reason: String? = null)","dev.kord.rest.service.GuildService.deleteGuildBan"]},{"name":"suspend fun deleteGuildIntegration(guildId: Snowflake, integrationId: Snowflake, reason: String? = null)","description":"dev.kord.rest.service.GuildService.deleteGuildIntegration","location":"rest/dev.kord.rest.service/-guild-service/delete-guild-integration.html","searchKeys":["deleteGuildIntegration","suspend fun deleteGuildIntegration(guildId: Snowflake, integrationId: Snowflake, reason: String? = null)","dev.kord.rest.service.GuildService.deleteGuildIntegration"]},{"name":"suspend fun deleteGuildMember(guildId: Snowflake, userId: Snowflake, reason: String? = null)","description":"dev.kord.rest.service.GuildService.deleteGuildMember","location":"rest/dev.kord.rest.service/-guild-service/delete-guild-member.html","searchKeys":["deleteGuildMember","suspend fun deleteGuildMember(guildId: Snowflake, userId: Snowflake, reason: String? = null)","dev.kord.rest.service.GuildService.deleteGuildMember"]},{"name":"suspend fun deleteGuildRole(guildId: Snowflake, roleId: Snowflake, reason: String? = null)","description":"dev.kord.rest.service.GuildService.deleteGuildRole","location":"rest/dev.kord.rest.service/-guild-service/delete-guild-role.html","searchKeys":["deleteGuildRole","suspend fun deleteGuildRole(guildId: Snowflake, roleId: Snowflake, reason: String? = null)","dev.kord.rest.service.GuildService.deleteGuildRole"]},{"name":"suspend fun deleteGuildTemplate(guildId: Snowflake, code: String): DiscordTemplate","description":"dev.kord.rest.service.TemplateService.deleteGuildTemplate","location":"rest/dev.kord.rest.service/-template-service/delete-guild-template.html","searchKeys":["deleteGuildTemplate","suspend fun deleteGuildTemplate(guildId: Snowflake, code: String): DiscordTemplate","dev.kord.rest.service.TemplateService.deleteGuildTemplate"]},{"name":"suspend fun deleteInvite(code: String, reason: String? = null): DiscordInvite","description":"dev.kord.rest.service.InviteService.deleteInvite","location":"rest/dev.kord.rest.service/-invite-service/delete-invite.html","searchKeys":["deleteInvite","suspend fun deleteInvite(code: String, reason: String? = null): DiscordInvite","dev.kord.rest.service.InviteService.deleteInvite"]},{"name":"suspend fun deleteMessage(channelId: Snowflake, messageId: Snowflake, reason: String? = null)","description":"dev.kord.rest.service.ChannelService.deleteMessage","location":"rest/dev.kord.rest.service/-channel-service/delete-message.html","searchKeys":["deleteMessage","suspend fun deleteMessage(channelId: Snowflake, messageId: Snowflake, reason: String? = null)","dev.kord.rest.service.ChannelService.deleteMessage"]},{"name":"suspend fun deleteOriginalInteractionResponse(applicationId: Snowflake, interactionToken: String)","description":"dev.kord.rest.service.InteractionService.deleteOriginalInteractionResponse","location":"rest/dev.kord.rest.service/-interaction-service/delete-original-interaction-response.html","searchKeys":["deleteOriginalInteractionResponse","suspend fun deleteOriginalInteractionResponse(applicationId: Snowflake, interactionToken: String)","dev.kord.rest.service.InteractionService.deleteOriginalInteractionResponse"]},{"name":"suspend fun deleteOwnReaction(channelId: Snowflake, messageId: Snowflake, emoji: String)","description":"dev.kord.rest.service.ChannelService.deleteOwnReaction","location":"rest/dev.kord.rest.service/-channel-service/delete-own-reaction.html","searchKeys":["deleteOwnReaction","suspend fun deleteOwnReaction(channelId: Snowflake, messageId: Snowflake, emoji: String)","dev.kord.rest.service.ChannelService.deleteOwnReaction"]},{"name":"suspend fun deletePinnedMessage(channelId: Snowflake, messageId: Snowflake, reason: String? = null)","description":"dev.kord.rest.service.ChannelService.deletePinnedMessage","location":"rest/dev.kord.rest.service/-channel-service/delete-pinned-message.html","searchKeys":["deletePinnedMessage","suspend fun deletePinnedMessage(channelId: Snowflake, messageId: Snowflake, reason: String? = null)","dev.kord.rest.service.ChannelService.deletePinnedMessage"]},{"name":"suspend fun deleteReaction(channelId: Snowflake, messageId: Snowflake, userId: Snowflake, emoji: String)","description":"dev.kord.rest.service.ChannelService.deleteReaction","location":"rest/dev.kord.rest.service/-channel-service/delete-reaction.html","searchKeys":["deleteReaction","suspend fun deleteReaction(channelId: Snowflake, messageId: Snowflake, userId: Snowflake, emoji: String)","dev.kord.rest.service.ChannelService.deleteReaction"]},{"name":"suspend fun deleteRoleFromGuildMember(guildId: Snowflake, userId: Snowflake, roleId: Snowflake, reason: String? = null)","description":"dev.kord.rest.service.GuildService.deleteRoleFromGuildMember","location":"rest/dev.kord.rest.service/-guild-service/delete-role-from-guild-member.html","searchKeys":["deleteRoleFromGuildMember","suspend fun deleteRoleFromGuildMember(guildId: Snowflake, userId: Snowflake, roleId: Snowflake, reason: String? = null)","dev.kord.rest.service.GuildService.deleteRoleFromGuildMember"]},{"name":"suspend fun deleteScheduledEvent(guildId: Snowflake, eventId: Snowflake)","description":"dev.kord.rest.service.GuildService.deleteScheduledEvent","location":"rest/dev.kord.rest.service/-guild-service/delete-scheduled-event.html","searchKeys":["deleteScheduledEvent","suspend fun deleteScheduledEvent(guildId: Snowflake, eventId: Snowflake)","dev.kord.rest.service.GuildService.deleteScheduledEvent"]},{"name":"suspend fun deleteStageInstance(channelId: Snowflake, reason: String? = null)","description":"dev.kord.rest.service.StageInstanceService.deleteStageInstance","location":"rest/dev.kord.rest.service/-stage-instance-service/delete-stage-instance.html","searchKeys":["deleteStageInstance","suspend fun deleteStageInstance(channelId: Snowflake, reason: String? = null)","dev.kord.rest.service.StageInstanceService.deleteStageInstance"]},{"name":"suspend fun deleteSticker(guildId: Snowflake, id: Snowflake)","description":"dev.kord.rest.service.StickerService.deleteSticker","location":"rest/dev.kord.rest.service/-sticker-service/delete-sticker.html","searchKeys":["deleteSticker","suspend fun deleteSticker(guildId: Snowflake, id: Snowflake)","dev.kord.rest.service.StickerService.deleteSticker"]},{"name":"suspend fun deleteWebhook(webhookId: Snowflake, reason: String? = null)","description":"dev.kord.rest.service.WebhookService.deleteWebhook","location":"rest/dev.kord.rest.service/-webhook-service/delete-webhook.html","searchKeys":["deleteWebhook","suspend fun deleteWebhook(webhookId: Snowflake, reason: String? = null)","dev.kord.rest.service.WebhookService.deleteWebhook"]},{"name":"suspend fun deleteWebhookMessage(webhookId: Snowflake, token: String, messageId: Snowflake, threadId: Snowflake? = null)","description":"dev.kord.rest.service.WebhookService.deleteWebhookMessage","location":"rest/dev.kord.rest.service/-webhook-service/delete-webhook-message.html","searchKeys":["deleteWebhookMessage","suspend fun deleteWebhookMessage(webhookId: Snowflake, token: String, messageId: Snowflake, threadId: Snowflake? = null)","dev.kord.rest.service.WebhookService.deleteWebhookMessage"]},{"name":"suspend fun deleteWebhookWithToken(webhookId: Snowflake, token: String, reason: String? = null)","description":"dev.kord.rest.service.WebhookService.deleteWebhookWithToken","location":"rest/dev.kord.rest.service/-webhook-service/delete-webhook-with-token.html","searchKeys":["deleteWebhookWithToken","suspend fun deleteWebhookWithToken(webhookId: Snowflake, token: String, reason: String? = null)","dev.kord.rest.service.WebhookService.deleteWebhookWithToken"]},{"name":"suspend fun editChannelPermissions(channelId: Snowflake, overwriteId: Snowflake, permissions: ChannelPermissionEditRequest, reason: String? = null)","description":"dev.kord.rest.service.ChannelService.editChannelPermissions","location":"rest/dev.kord.rest.service/-channel-service/edit-channel-permissions.html","searchKeys":["editChannelPermissions","suspend fun editChannelPermissions(channelId: Snowflake, overwriteId: Snowflake, permissions: ChannelPermissionEditRequest, reason: String? = null)","dev.kord.rest.service.ChannelService.editChannelPermissions"]},{"name":"suspend fun editMessage(channelId: Snowflake, messageId: Snowflake, request: MessageEditPatchRequest): DiscordMessage","description":"dev.kord.rest.service.ChannelService.editMessage","location":"rest/dev.kord.rest.service/-channel-service/edit-message.html","searchKeys":["editMessage","suspend fun editMessage(channelId: Snowflake, messageId: Snowflake, request: MessageEditPatchRequest): DiscordMessage","dev.kord.rest.service.ChannelService.editMessage"]},{"name":"suspend fun editMessage(channelId: Snowflake, messageId: Snowflake, request: MultipartMessagePatchRequest): DiscordMessage","description":"dev.kord.rest.service.ChannelService.editMessage","location":"rest/dev.kord.rest.service/-channel-service/edit-message.html","searchKeys":["editMessage","suspend fun editMessage(channelId: Snowflake, messageId: Snowflake, request: MultipartMessagePatchRequest): DiscordMessage","dev.kord.rest.service.ChannelService.editMessage"]},{"name":"suspend fun editMessage(channelId: Snowflake, messageId: Snowflake, request: MultipartWebhookEditMessageRequest): DiscordMessage","description":"dev.kord.rest.service.ChannelService.editMessage","location":"rest/dev.kord.rest.service/-channel-service/edit-message.html","searchKeys":["editMessage","suspend fun editMessage(channelId: Snowflake, messageId: Snowflake, request: MultipartWebhookEditMessageRequest): DiscordMessage","dev.kord.rest.service.ChannelService.editMessage"]},{"name":"suspend fun executeGithubWebhook(webhookId: Snowflake, token: String, body: JsonObject, wait: Boolean? = null, threadId: Snowflake? = null)","description":"dev.kord.rest.service.WebhookService.executeGithubWebhook","location":"rest/dev.kord.rest.service/-webhook-service/execute-github-webhook.html","searchKeys":["executeGithubWebhook","suspend fun executeGithubWebhook(webhookId: Snowflake, token: String, body: JsonObject, wait: Boolean? = null, threadId: Snowflake? = null)","dev.kord.rest.service.WebhookService.executeGithubWebhook"]},{"name":"suspend fun executeSlackWebhook(webhookId: Snowflake, token: String, body: JsonObject, wait: Boolean? = null, threadId: Snowflake? = null)","description":"dev.kord.rest.service.WebhookService.executeSlackWebhook","location":"rest/dev.kord.rest.service/-webhook-service/execute-slack-webhook.html","searchKeys":["executeSlackWebhook","suspend fun executeSlackWebhook(webhookId: Snowflake, token: String, body: JsonObject, wait: Boolean? = null, threadId: Snowflake? = null)","dev.kord.rest.service.WebhookService.executeSlackWebhook"]},{"name":"suspend fun followNewsChannel(channelId: Snowflake, request: ChannelFollowRequest): FollowedChannelResponse","description":"dev.kord.rest.service.ChannelService.followNewsChannel","location":"rest/dev.kord.rest.service/-channel-service/follow-news-channel.html","searchKeys":["followNewsChannel","suspend fun followNewsChannel(channelId: Snowflake, request: ChannelFollowRequest): FollowedChannelResponse","dev.kord.rest.service.ChannelService.followNewsChannel"]},{"name":"suspend fun fromUrl(client: HttpClient, url: String): Image","description":"dev.kord.rest.Image.Companion.fromUrl","location":"rest/dev.kord.rest/-image/-companion/from-url.html","searchKeys":["fromUrl","suspend fun fromUrl(client: HttpClient, url: String): Image","dev.kord.rest.Image.Companion.fromUrl"]},{"name":"suspend fun getApplicationCommandPermissions(applicationId: Snowflake, guildId: Snowflake, commandId: Snowflake): DiscordGuildApplicationCommandPermissions","description":"dev.kord.rest.service.InteractionService.getApplicationCommandPermissions","location":"rest/dev.kord.rest.service/-interaction-service/get-application-command-permissions.html","searchKeys":["getApplicationCommandPermissions","suspend fun getApplicationCommandPermissions(applicationId: Snowflake, guildId: Snowflake, commandId: Snowflake): DiscordGuildApplicationCommandPermissions","dev.kord.rest.service.InteractionService.getApplicationCommandPermissions"]},{"name":"suspend fun getAuditLogs(guildId: Snowflake, request: AuditLogGetRequest): DiscordAuditLog","description":"dev.kord.rest.service.AuditLogService.getAuditLogs","location":"rest/dev.kord.rest.service/-audit-log-service/get-audit-logs.html","searchKeys":["getAuditLogs","suspend fun getAuditLogs(guildId: Snowflake, request: AuditLogGetRequest): DiscordAuditLog","dev.kord.rest.service.AuditLogService.getAuditLogs"]},{"name":"suspend fun getAutoModerationRule(guildId: Snowflake, ruleId: Snowflake): DiscordAutoModerationRule","description":"dev.kord.rest.service.AutoModerationService.getAutoModerationRule","location":"rest/dev.kord.rest.service/-auto-moderation-service/get-auto-moderation-rule.html","searchKeys":["getAutoModerationRule","suspend fun getAutoModerationRule(guildId: Snowflake, ruleId: Snowflake): DiscordAutoModerationRule","dev.kord.rest.service.AutoModerationService.getAutoModerationRule"]},{"name":"suspend fun getChannel(channelId: Snowflake): DiscordChannel","description":"dev.kord.rest.service.ChannelService.getChannel","location":"rest/dev.kord.rest.service/-channel-service/get-channel.html","searchKeys":["getChannel","suspend fun getChannel(channelId: Snowflake): DiscordChannel","dev.kord.rest.service.ChannelService.getChannel"]},{"name":"suspend fun getChannelInvites(channelId: Snowflake): List<DiscordInviteWithMetadata>","description":"dev.kord.rest.service.ChannelService.getChannelInvites","location":"rest/dev.kord.rest.service/-channel-service/get-channel-invites.html","searchKeys":["getChannelInvites","suspend fun getChannelInvites(channelId: Snowflake): List<DiscordInviteWithMetadata>","dev.kord.rest.service.ChannelService.getChannelInvites"]},{"name":"suspend fun getChannelPins(channelId: Snowflake): List<DiscordMessage>","description":"dev.kord.rest.service.ChannelService.getChannelPins","location":"rest/dev.kord.rest.service/-channel-service/get-channel-pins.html","searchKeys":["getChannelPins","suspend fun getChannelPins(channelId: Snowflake): List<DiscordMessage>","dev.kord.rest.service.ChannelService.getChannelPins"]},{"name":"suspend fun getChannelWebhooks(channelId: Snowflake): List<DiscordWebhook>","description":"dev.kord.rest.service.WebhookService.getChannelWebhooks","location":"rest/dev.kord.rest.service/-webhook-service/get-channel-webhooks.html","searchKeys":["getChannelWebhooks","suspend fun getChannelWebhooks(channelId: Snowflake): List<DiscordWebhook>","dev.kord.rest.service.WebhookService.getChannelWebhooks"]},{"name":"suspend fun getCurrentApplicationInfo(): DiscordApplication","description":"dev.kord.rest.service.ApplicationService.getCurrentApplicationInfo","location":"rest/dev.kord.rest.service/-application-service/get-current-application-info.html","searchKeys":["getCurrentApplicationInfo","suspend fun getCurrentApplicationInfo(): DiscordApplication","dev.kord.rest.service.ApplicationService.getCurrentApplicationInfo"]},{"name":"suspend fun getCurrentUser(): DiscordUser","description":"dev.kord.rest.service.UserService.getCurrentUser","location":"rest/dev.kord.rest.service/-user-service/get-current-user.html","searchKeys":["getCurrentUser","suspend fun getCurrentUser(): DiscordUser","dev.kord.rest.service.UserService.getCurrentUser"]},{"name":"suspend fun getCurrentUserGuilds(position: Position.BeforeOrAfter? = null, limit: Int? = null): List<DiscordPartialGuild>","description":"dev.kord.rest.service.UserService.getCurrentUserGuilds","location":"rest/dev.kord.rest.service/-user-service/get-current-user-guilds.html","searchKeys":["getCurrentUserGuilds","suspend fun getCurrentUserGuilds(position: Position.BeforeOrAfter? = null, limit: Int? = null): List<DiscordPartialGuild>","dev.kord.rest.service.UserService.getCurrentUserGuilds"]},{"name":"suspend fun getEmoji(guildId: Snowflake, emojiId: Snowflake): DiscordEmoji","description":"dev.kord.rest.service.EmojiService.getEmoji","location":"rest/dev.kord.rest.service/-emoji-service/get-emoji.html","searchKeys":["getEmoji","suspend fun getEmoji(guildId: Snowflake, emojiId: Snowflake): DiscordEmoji","dev.kord.rest.service.EmojiService.getEmoji"]},{"name":"suspend fun getEmojis(guildId: Snowflake): List<DiscordEmoji>","description":"dev.kord.rest.service.EmojiService.getEmojis","location":"rest/dev.kord.rest.service/-emoji-service/get-emojis.html","searchKeys":["getEmojis","suspend fun getEmojis(guildId: Snowflake): List<DiscordEmoji>","dev.kord.rest.service.EmojiService.getEmojis"]},{"name":"suspend fun getFollowupMessage(applicationId: Snowflake, interactionToken: String, messageId: Snowflake): DiscordMessage","description":"dev.kord.rest.service.InteractionService.getFollowupMessage","location":"rest/dev.kord.rest.service/-interaction-service/get-followup-message.html","searchKeys":["getFollowupMessage","suspend fun getFollowupMessage(applicationId: Snowflake, interactionToken: String, messageId: Snowflake): DiscordMessage","dev.kord.rest.service.InteractionService.getFollowupMessage"]},{"name":"suspend fun getGlobalApplicationCommands(applicationId: Snowflake, withLocalizations: Boolean? = null): List<DiscordApplicationCommand>","description":"dev.kord.rest.service.InteractionService.getGlobalApplicationCommands","location":"rest/dev.kord.rest.service/-interaction-service/get-global-application-commands.html","searchKeys":["getGlobalApplicationCommands","suspend fun getGlobalApplicationCommands(applicationId: Snowflake, withLocalizations: Boolean? = null): List<DiscordApplicationCommand>","dev.kord.rest.service.InteractionService.getGlobalApplicationCommands"]},{"name":"suspend fun getGlobalCommand(applicationId: Snowflake, commandId: Snowflake): DiscordApplicationCommand","description":"dev.kord.rest.service.InteractionService.getGlobalCommand","location":"rest/dev.kord.rest.service/-interaction-service/get-global-command.html","searchKeys":["getGlobalCommand","suspend fun getGlobalCommand(applicationId: Snowflake, commandId: Snowflake): DiscordApplicationCommand","dev.kord.rest.service.InteractionService.getGlobalCommand"]},{"name":"suspend fun getGuild(guildId: Snowflake, withCounts: Boolean = false): DiscordGuild","description":"dev.kord.rest.service.GuildService.getGuild","location":"rest/dev.kord.rest.service/-guild-service/get-guild.html","searchKeys":["getGuild","suspend fun getGuild(guildId: Snowflake, withCounts: Boolean = false): DiscordGuild","dev.kord.rest.service.GuildService.getGuild"]},{"name":"suspend fun getGuildApplicationCommandPermissions(applicationId: Snowflake, guildId: Snowflake): List<DiscordGuildApplicationCommandPermissions>","description":"dev.kord.rest.service.InteractionService.getGuildApplicationCommandPermissions","location":"rest/dev.kord.rest.service/-interaction-service/get-guild-application-command-permissions.html","searchKeys":["getGuildApplicationCommandPermissions","suspend fun getGuildApplicationCommandPermissions(applicationId: Snowflake, guildId: Snowflake): List<DiscordGuildApplicationCommandPermissions>","dev.kord.rest.service.InteractionService.getGuildApplicationCommandPermissions"]},{"name":"suspend fun getGuildApplicationCommands(applicationId: Snowflake, guildId: Snowflake, withLocalizations: Boolean? = null): List<DiscordApplicationCommand>","description":"dev.kord.rest.service.InteractionService.getGuildApplicationCommands","location":"rest/dev.kord.rest.service/-interaction-service/get-guild-application-commands.html","searchKeys":["getGuildApplicationCommands","suspend fun getGuildApplicationCommands(applicationId: Snowflake, guildId: Snowflake, withLocalizations: Boolean? = null): List<DiscordApplicationCommand>","dev.kord.rest.service.InteractionService.getGuildApplicationCommands"]},{"name":"suspend fun getGuildBan(guildId: Snowflake, userId: Snowflake): BanResponse","description":"dev.kord.rest.service.GuildService.getGuildBan","location":"rest/dev.kord.rest.service/-guild-service/get-guild-ban.html","searchKeys":["getGuildBan","suspend fun getGuildBan(guildId: Snowflake, userId: Snowflake): BanResponse","dev.kord.rest.service.GuildService.getGuildBan"]},{"name":"suspend fun getGuildBans(guildId: Snowflake, position: Position.BeforeOrAfter? = null, limit: Int? = null): List<BanResponse>","description":"dev.kord.rest.service.GuildService.getGuildBans","location":"rest/dev.kord.rest.service/-guild-service/get-guild-bans.html","searchKeys":["getGuildBans","suspend fun getGuildBans(guildId: Snowflake, position: Position.BeforeOrAfter? = null, limit: Int? = null): List<BanResponse>","dev.kord.rest.service.GuildService.getGuildBans"]},{"name":"suspend fun getGuildChannels(guildId: Snowflake): List<DiscordChannel>","description":"dev.kord.rest.service.GuildService.getGuildChannels","location":"rest/dev.kord.rest.service/-guild-service/get-guild-channels.html","searchKeys":["getGuildChannels","suspend fun getGuildChannels(guildId: Snowflake): List<DiscordChannel>","dev.kord.rest.service.GuildService.getGuildChannels"]},{"name":"suspend fun getGuildCommand(applicationId: Snowflake, guildId: Snowflake, commandId: Snowflake): DiscordApplicationCommand","description":"dev.kord.rest.service.InteractionService.getGuildCommand","location":"rest/dev.kord.rest.service/-interaction-service/get-guild-command.html","searchKeys":["getGuildCommand","suspend fun getGuildCommand(applicationId: Snowflake, guildId: Snowflake, commandId: Snowflake): DiscordApplicationCommand","dev.kord.rest.service.InteractionService.getGuildCommand"]},{"name":"suspend fun getGuildIntegrations(guildId: Snowflake): List<DiscordIntegration>","description":"dev.kord.rest.service.GuildService.getGuildIntegrations","location":"rest/dev.kord.rest.service/-guild-service/get-guild-integrations.html","searchKeys":["getGuildIntegrations","suspend fun getGuildIntegrations(guildId: Snowflake): List<DiscordIntegration>","dev.kord.rest.service.GuildService.getGuildIntegrations"]},{"name":"suspend fun getGuildInvites(guildId: Snowflake): List<DiscordInviteWithMetadata>","description":"dev.kord.rest.service.GuildService.getGuildInvites","location":"rest/dev.kord.rest.service/-guild-service/get-guild-invites.html","searchKeys":["getGuildInvites","suspend fun getGuildInvites(guildId: Snowflake): List<DiscordInviteWithMetadata>","dev.kord.rest.service.GuildService.getGuildInvites"]},{"name":"suspend fun getGuildMember(guildId: Snowflake, userId: Snowflake): DiscordGuildMember","description":"dev.kord.rest.service.GuildService.getGuildMember","location":"rest/dev.kord.rest.service/-guild-service/get-guild-member.html","searchKeys":["getGuildMember","suspend fun getGuildMember(guildId: Snowflake, userId: Snowflake): DiscordGuildMember","dev.kord.rest.service.GuildService.getGuildMember"]},{"name":"suspend fun getGuildMembers(guildId: Snowflake, after: Position.After? = null, limit: Int? = null): List<DiscordGuildMember>","description":"dev.kord.rest.service.GuildService.getGuildMembers","location":"rest/dev.kord.rest.service/-guild-service/get-guild-members.html","searchKeys":["getGuildMembers","suspend fun getGuildMembers(guildId: Snowflake, after: Position.After? = null, limit: Int? = null): List<DiscordGuildMember>","dev.kord.rest.service.GuildService.getGuildMembers"]},{"name":"suspend fun getGuildMembers(guildId: Snowflake, query: String, limit: Int? = null): List<DiscordGuildMember>","description":"dev.kord.rest.service.GuildService.getGuildMembers","location":"rest/dev.kord.rest.service/-guild-service/get-guild-members.html","searchKeys":["getGuildMembers","suspend fun getGuildMembers(guildId: Snowflake, query: String, limit: Int? = null): List<DiscordGuildMember>","dev.kord.rest.service.GuildService.getGuildMembers"]},{"name":"suspend fun getGuildPreview(guildId: Snowflake): DiscordGuildPreview","description":"dev.kord.rest.service.GuildService.getGuildPreview","location":"rest/dev.kord.rest.service/-guild-service/get-guild-preview.html","searchKeys":["getGuildPreview","suspend fun getGuildPreview(guildId: Snowflake): DiscordGuildPreview","dev.kord.rest.service.GuildService.getGuildPreview"]},{"name":"suspend fun getGuildPruneCount(guildId: Snowflake, days: Int = 7): GetPruneResponse","description":"dev.kord.rest.service.GuildService.getGuildPruneCount","location":"rest/dev.kord.rest.service/-guild-service/get-guild-prune-count.html","searchKeys":["getGuildPruneCount","suspend fun getGuildPruneCount(guildId: Snowflake, days: Int = 7): GetPruneResponse","dev.kord.rest.service.GuildService.getGuildPruneCount"]},{"name":"suspend fun getGuildRoles(guildId: Snowflake): List<DiscordRole>","description":"dev.kord.rest.service.GuildService.getGuildRoles","location":"rest/dev.kord.rest.service/-guild-service/get-guild-roles.html","searchKeys":["getGuildRoles","suspend fun getGuildRoles(guildId: Snowflake): List<DiscordRole>","dev.kord.rest.service.GuildService.getGuildRoles"]},{"name":"suspend fun getGuildSticker(guildId: Snowflake, id: Snowflake): DiscordMessageSticker","description":"dev.kord.rest.service.StickerService.getGuildSticker","location":"rest/dev.kord.rest.service/-sticker-service/get-guild-sticker.html","searchKeys":["getGuildSticker","suspend fun getGuildSticker(guildId: Snowflake, id: Snowflake): DiscordMessageSticker","dev.kord.rest.service.StickerService.getGuildSticker"]},{"name":"suspend fun getGuildStickers(guildId: Snowflake): List<DiscordMessageSticker>","description":"dev.kord.rest.service.StickerService.getGuildStickers","location":"rest/dev.kord.rest.service/-sticker-service/get-guild-stickers.html","searchKeys":["getGuildStickers","suspend fun getGuildStickers(guildId: Snowflake): List<DiscordMessageSticker>","dev.kord.rest.service.StickerService.getGuildStickers"]},{"name":"suspend fun getGuildTemplate(code: String): DiscordTemplate","description":"dev.kord.rest.service.TemplateService.getGuildTemplate","location":"rest/dev.kord.rest.service/-template-service/get-guild-template.html","searchKeys":["getGuildTemplate","suspend fun getGuildTemplate(code: String): DiscordTemplate","dev.kord.rest.service.TemplateService.getGuildTemplate"]},{"name":"suspend fun getGuildTemplates(guildId: Snowflake): List<DiscordTemplate>","description":"dev.kord.rest.service.TemplateService.getGuildTemplates","location":"rest/dev.kord.rest.service/-template-service/get-guild-templates.html","searchKeys":["getGuildTemplates","suspend fun getGuildTemplates(guildId: Snowflake): List<DiscordTemplate>","dev.kord.rest.service.TemplateService.getGuildTemplates"]},{"name":"suspend fun getGuildVoiceRegions(guildId: Snowflake): List<DiscordVoiceRegion>","description":"dev.kord.rest.service.GuildService.getGuildVoiceRegions","location":"rest/dev.kord.rest.service/-guild-service/get-guild-voice-regions.html","searchKeys":["getGuildVoiceRegions","suspend fun getGuildVoiceRegions(guildId: Snowflake): List<DiscordVoiceRegion>","dev.kord.rest.service.GuildService.getGuildVoiceRegions"]},{"name":"suspend fun getGuildWebhooks(guildId: Snowflake): List<DiscordWebhook>","description":"dev.kord.rest.service.WebhookService.getGuildWebhooks","location":"rest/dev.kord.rest.service/-webhook-service/get-guild-webhooks.html","searchKeys":["getGuildWebhooks","suspend fun getGuildWebhooks(guildId: Snowflake): List<DiscordWebhook>","dev.kord.rest.service.WebhookService.getGuildWebhooks"]},{"name":"suspend fun getGuildWelcomeScreen(guildId: Snowflake): DiscordWelcomeScreen","description":"dev.kord.rest.service.GuildService.getGuildWelcomeScreen","location":"rest/dev.kord.rest.service/-guild-service/get-guild-welcome-screen.html","searchKeys":["getGuildWelcomeScreen","suspend fun getGuildWelcomeScreen(guildId: Snowflake): DiscordWelcomeScreen","dev.kord.rest.service.GuildService.getGuildWelcomeScreen"]},{"name":"suspend fun getGuildWidget(guildId: Snowflake): DiscordGuildWidget","description":"dev.kord.rest.service.GuildService.getGuildWidget","location":"rest/dev.kord.rest.service/-guild-service/get-guild-widget.html","searchKeys":["getGuildWidget","suspend fun getGuildWidget(guildId: Snowflake): DiscordGuildWidget","dev.kord.rest.service.GuildService.getGuildWidget"]},{"name":"suspend fun getInteractionResponse(applicationId: Snowflake, interactionToken: String): DiscordMessage","description":"dev.kord.rest.service.InteractionService.getInteractionResponse","location":"rest/dev.kord.rest.service/-interaction-service/get-interaction-response.html","searchKeys":["getInteractionResponse","suspend fun getInteractionResponse(applicationId: Snowflake, interactionToken: String): DiscordMessage","dev.kord.rest.service.InteractionService.getInteractionResponse"]},{"name":"suspend fun getInvite(code: String, withCounts: Boolean? = null, withExpiration: Boolean? = null, guildScheduledEventId: Snowflake? = null): DiscordInvite","description":"dev.kord.rest.service.InviteService.getInvite","location":"rest/dev.kord.rest.service/-invite-service/get-invite.html","searchKeys":["getInvite","suspend fun getInvite(code: String, withCounts: Boolean? = null, withExpiration: Boolean? = null, guildScheduledEventId: Snowflake? = null): DiscordInvite","dev.kord.rest.service.InviteService.getInvite"]},{"name":"suspend fun getMessage(channelId: Snowflake, messageId: Snowflake): DiscordMessage","description":"dev.kord.rest.service.ChannelService.getMessage","location":"rest/dev.kord.rest.service/-channel-service/get-message.html","searchKeys":["getMessage","suspend fun getMessage(channelId: Snowflake, messageId: Snowflake): DiscordMessage","dev.kord.rest.service.ChannelService.getMessage"]},{"name":"suspend fun getMessages(channelId: Snowflake, position: Position? = null, limit: Int? = null): List<DiscordMessage>","description":"dev.kord.rest.service.ChannelService.getMessages","location":"rest/dev.kord.rest.service/-channel-service/get-messages.html","searchKeys":["getMessages","suspend fun getMessages(channelId: Snowflake, position: Position? = null, limit: Int? = null): List<DiscordMessage>","dev.kord.rest.service.ChannelService.getMessages"]},{"name":"suspend fun getNitroStickerPacks(): List<DiscordStickerPack>","description":"dev.kord.rest.service.StickerService.getNitroStickerPacks","location":"rest/dev.kord.rest.service/-sticker-service/get-nitro-sticker-packs.html","searchKeys":["getNitroStickerPacks","suspend fun getNitroStickerPacks(): List<DiscordStickerPack>","dev.kord.rest.service.StickerService.getNitroStickerPacks"]},{"name":"suspend fun getReactions(channelId: Snowflake, messageId: Snowflake, emoji: String, after: Position.After? = null, limit: Int? = null): List<DiscordUser>","description":"dev.kord.rest.service.ChannelService.getReactions","location":"rest/dev.kord.rest.service/-channel-service/get-reactions.html","searchKeys":["getReactions","suspend fun getReactions(channelId: Snowflake, messageId: Snowflake, emoji: String, after: Position.After? = null, limit: Int? = null): List<DiscordUser>","dev.kord.rest.service.ChannelService.getReactions"]},{"name":"suspend fun getScheduledEvent(guildId: Snowflake, eventId: Snowflake): DiscordGuildScheduledEvent","description":"dev.kord.rest.service.GuildService.getScheduledEvent","location":"rest/dev.kord.rest.service/-guild-service/get-scheduled-event.html","searchKeys":["getScheduledEvent","suspend fun getScheduledEvent(guildId: Snowflake, eventId: Snowflake): DiscordGuildScheduledEvent","dev.kord.rest.service.GuildService.getScheduledEvent"]},{"name":"suspend fun getScheduledEventUsers(guildId: Snowflake, eventId: Snowflake, position: Position.BeforeOrAfter? = null, withMember: Boolean? = null, limit: Int? = null): List<GuildScheduledEventUsersResponse>","description":"dev.kord.rest.service.GuildService.getScheduledEventUsers","location":"rest/dev.kord.rest.service/-guild-service/get-scheduled-event-users.html","searchKeys":["getScheduledEventUsers","suspend fun getScheduledEventUsers(guildId: Snowflake, eventId: Snowflake, position: Position.BeforeOrAfter? = null, withMember: Boolean? = null, limit: Int? = null): List<GuildScheduledEventUsersResponse>","dev.kord.rest.service.GuildService.getScheduledEventUsers"]},{"name":"suspend fun getScheduledEventUsersAfter(guildId: Snowflake, eventId: Snowflake, after: Snowflake, withMember: Boolean? = null, limit: Int? = null): List<GuildScheduledEventUsersResponse>","description":"dev.kord.rest.service.GuildService.getScheduledEventUsersAfter","location":"rest/dev.kord.rest.service/-guild-service/get-scheduled-event-users-after.html","searchKeys":["getScheduledEventUsersAfter","suspend fun getScheduledEventUsersAfter(guildId: Snowflake, eventId: Snowflake, after: Snowflake, withMember: Boolean? = null, limit: Int? = null): List<GuildScheduledEventUsersResponse>","dev.kord.rest.service.GuildService.getScheduledEventUsersAfter"]},{"name":"suspend fun getScheduledEventUsersBefore(guildId: Snowflake, eventId: Snowflake, before: Snowflake, withMember: Boolean? = null, limit: Int? = null): List<GuildScheduledEventUsersResponse>","description":"dev.kord.rest.service.GuildService.getScheduledEventUsersBefore","location":"rest/dev.kord.rest.service/-guild-service/get-scheduled-event-users-before.html","searchKeys":["getScheduledEventUsersBefore","suspend fun getScheduledEventUsersBefore(guildId: Snowflake, eventId: Snowflake, before: Snowflake, withMember: Boolean? = null, limit: Int? = null): List<GuildScheduledEventUsersResponse>","dev.kord.rest.service.GuildService.getScheduledEventUsersBefore"]},{"name":"suspend fun getStageInstance(channelId: Snowflake): DiscordStageInstance","description":"dev.kord.rest.service.StageInstanceService.getStageInstance","location":"rest/dev.kord.rest.service/-stage-instance-service/get-stage-instance.html","searchKeys":["getStageInstance","suspend fun getStageInstance(channelId: Snowflake): DiscordStageInstance","dev.kord.rest.service.StageInstanceService.getStageInstance"]},{"name":"suspend fun getSticker(id: Snowflake): DiscordMessageSticker","description":"dev.kord.rest.service.StickerService.getSticker","location":"rest/dev.kord.rest.service/-sticker-service/get-sticker.html","searchKeys":["getSticker","suspend fun getSticker(id: Snowflake): DiscordMessageSticker","dev.kord.rest.service.StickerService.getSticker"]},{"name":"suspend fun getUser(userId: Snowflake): DiscordUser","description":"dev.kord.rest.service.UserService.getUser","location":"rest/dev.kord.rest.service/-user-service/get-user.html","searchKeys":["getUser","suspend fun getUser(userId: Snowflake): DiscordUser","dev.kord.rest.service.UserService.getUser"]},{"name":"suspend fun getUserConnections(): List<Connection>","description":"dev.kord.rest.service.UserService.getUserConnections","location":"rest/dev.kord.rest.service/-user-service/get-user-connections.html","searchKeys":["getUserConnections","suspend fun getUserConnections(): List<Connection>","dev.kord.rest.service.UserService.getUserConnections"]},{"name":"suspend fun getVanityInvite(guildId: Snowflake): DiscordPartialInvite","description":"dev.kord.rest.service.GuildService.getVanityInvite","location":"rest/dev.kord.rest.service/-guild-service/get-vanity-invite.html","searchKeys":["getVanityInvite","suspend fun getVanityInvite(guildId: Snowflake): DiscordPartialInvite","dev.kord.rest.service.GuildService.getVanityInvite"]},{"name":"suspend fun getVoiceRegions(): List<DiscordVoiceRegion>","description":"dev.kord.rest.service.VoiceService.getVoiceRegions","location":"rest/dev.kord.rest.service/-voice-service/get-voice-regions.html","searchKeys":["getVoiceRegions","suspend fun getVoiceRegions(): List<DiscordVoiceRegion>","dev.kord.rest.service.VoiceService.getVoiceRegions"]},{"name":"suspend fun getWebhook(webhookId: Snowflake): DiscordWebhook","description":"dev.kord.rest.service.WebhookService.getWebhook","location":"rest/dev.kord.rest.service/-webhook-service/get-webhook.html","searchKeys":["getWebhook","suspend fun getWebhook(webhookId: Snowflake): DiscordWebhook","dev.kord.rest.service.WebhookService.getWebhook"]},{"name":"suspend fun getWebhookMessage(webhookId: Snowflake, token: String, messageId: Snowflake, threadId: Snowflake? = null): DiscordMessage","description":"dev.kord.rest.service.WebhookService.getWebhookMessage","location":"rest/dev.kord.rest.service/-webhook-service/get-webhook-message.html","searchKeys":["getWebhookMessage","suspend fun getWebhookMessage(webhookId: Snowflake, token: String, messageId: Snowflake, threadId: Snowflake? = null): DiscordMessage","dev.kord.rest.service.WebhookService.getWebhookMessage"]},{"name":"suspend fun getWebhookWithToken(webhookId: Snowflake, token: String): DiscordWebhook","description":"dev.kord.rest.service.WebhookService.getWebhookWithToken","location":"rest/dev.kord.rest.service/-webhook-service/get-webhook-with-token.html","searchKeys":["getWebhookWithToken","suspend fun getWebhookWithToken(webhookId: Snowflake, token: String): DiscordWebhook","dev.kord.rest.service.WebhookService.getWebhookWithToken"]},{"name":"suspend fun joinThread(channelId: Snowflake)","description":"dev.kord.rest.service.ChannelService.joinThread","location":"rest/dev.kord.rest.service/-channel-service/join-thread.html","searchKeys":["joinThread","suspend fun joinThread(channelId: Snowflake)","dev.kord.rest.service.ChannelService.joinThread"]},{"name":"suspend fun leaveGuild(guildId: Snowflake)","description":"dev.kord.rest.service.UserService.leaveGuild","location":"rest/dev.kord.rest.service/-user-service/leave-guild.html","searchKeys":["leaveGuild","suspend fun leaveGuild(guildId: Snowflake)","dev.kord.rest.service.UserService.leaveGuild"]},{"name":"suspend fun leaveThread(channelId: Snowflake)","description":"dev.kord.rest.service.ChannelService.leaveThread","location":"rest/dev.kord.rest.service/-channel-service/leave-thread.html","searchKeys":["leaveThread","suspend fun leaveThread(channelId: Snowflake)","dev.kord.rest.service.ChannelService.leaveThread"]},{"name":"suspend fun listActiveThreads(guildId: Snowflake): ListThreadsResponse","description":"dev.kord.rest.service.GuildService.listActiveThreads","location":"rest/dev.kord.rest.service/-guild-service/list-active-threads.html","searchKeys":["listActiveThreads","suspend fun listActiveThreads(guildId: Snowflake): ListThreadsResponse","dev.kord.rest.service.GuildService.listActiveThreads"]},{"name":"suspend fun listAutoModerationRulesForGuild(guildId: Snowflake): List<DiscordAutoModerationRule>","description":"dev.kord.rest.service.AutoModerationService.listAutoModerationRulesForGuild","location":"rest/dev.kord.rest.service/-auto-moderation-service/list-auto-moderation-rules-for-guild.html","searchKeys":["listAutoModerationRulesForGuild","suspend fun listAutoModerationRulesForGuild(guildId: Snowflake): List<DiscordAutoModerationRule>","dev.kord.rest.service.AutoModerationService.listAutoModerationRulesForGuild"]},{"name":"suspend fun listJoinedPrivateArchivedThreads(channelId: Snowflake, request: ListThreadsBySnowflakeRequest): ListThreadsResponse","description":"dev.kord.rest.service.ChannelService.listJoinedPrivateArchivedThreads","location":"rest/dev.kord.rest.service/-channel-service/list-joined-private-archived-threads.html","searchKeys":["listJoinedPrivateArchivedThreads","suspend fun listJoinedPrivateArchivedThreads(channelId: Snowflake, request: ListThreadsBySnowflakeRequest): ListThreadsResponse","dev.kord.rest.service.ChannelService.listJoinedPrivateArchivedThreads"]},{"name":"suspend fun listPrivateArchivedThreads(channelId: Snowflake, request: ListThreadsByTimestampRequest): ListThreadsResponse","description":"dev.kord.rest.service.ChannelService.listPrivateArchivedThreads","location":"rest/dev.kord.rest.service/-channel-service/list-private-archived-threads.html","searchKeys":["listPrivateArchivedThreads","suspend fun listPrivateArchivedThreads(channelId: Snowflake, request: ListThreadsByTimestampRequest): ListThreadsResponse","dev.kord.rest.service.ChannelService.listPrivateArchivedThreads"]},{"name":"suspend fun listPublicArchivedThreads(channelId: Snowflake, request: ListThreadsByTimestampRequest): ListThreadsResponse","description":"dev.kord.rest.service.ChannelService.listPublicArchivedThreads","location":"rest/dev.kord.rest.service/-channel-service/list-public-archived-threads.html","searchKeys":["listPublicArchivedThreads","suspend fun listPublicArchivedThreads(channelId: Snowflake, request: ListThreadsByTimestampRequest): ListThreadsResponse","dev.kord.rest.service.ChannelService.listPublicArchivedThreads"]},{"name":"suspend fun listScheduledEvents(guildId: Snowflake, withUserCount: Boolean? = null): List<DiscordGuildScheduledEvent>","description":"dev.kord.rest.service.GuildService.listScheduledEvents","location":"rest/dev.kord.rest.service/-guild-service/list-scheduled-events.html","searchKeys":["listScheduledEvents","suspend fun listScheduledEvents(guildId: Snowflake, withUserCount: Boolean? = null): List<DiscordGuildScheduledEvent>","dev.kord.rest.service.GuildService.listScheduledEvents"]},{"name":"suspend fun listThreadMembers(channelId: Snowflake): List<DiscordThreadMember>","description":"dev.kord.rest.service.ChannelService.listThreadMembers","location":"rest/dev.kord.rest.service/-channel-service/list-thread-members.html","searchKeys":["listThreadMembers","suspend fun listThreadMembers(channelId: Snowflake): List<DiscordThreadMember>","dev.kord.rest.service.ChannelService.listThreadMembers"]},{"name":"suspend fun modifyAutoModerationRule(guildId: Snowflake, ruleId: Snowflake, request: AutoModerationRuleModifyRequest, reason: String? = null): DiscordAutoModerationRule","description":"dev.kord.rest.service.AutoModerationService.modifyAutoModerationRule","location":"rest/dev.kord.rest.service/-auto-moderation-service/modify-auto-moderation-rule.html","searchKeys":["modifyAutoModerationRule","suspend fun modifyAutoModerationRule(guildId: Snowflake, ruleId: Snowflake, request: AutoModerationRuleModifyRequest, reason: String? = null): DiscordAutoModerationRule","dev.kord.rest.service.AutoModerationService.modifyAutoModerationRule"]},{"name":"suspend fun modifyCurrentUserNickname(guildId: Snowflake, nick: CurrentUserNicknameModifyRequest, reason: String? = null): CurrentUserNicknameModifyResponse","description":"dev.kord.rest.service.GuildService.modifyCurrentUserNickname","location":"rest/dev.kord.rest.service/-guild-service/modify-current-user-nickname.html","searchKeys":["modifyCurrentUserNickname","suspend fun modifyCurrentUserNickname(guildId: Snowflake, nick: CurrentUserNicknameModifyRequest, reason: String? = null): CurrentUserNicknameModifyResponse","dev.kord.rest.service.GuildService.modifyCurrentUserNickname"]},{"name":"suspend fun modifyCurrentVoiceState(guildId: Snowflake, request: CurrentVoiceStateModifyRequest)","description":"dev.kord.rest.service.GuildService.modifyCurrentVoiceState","location":"rest/dev.kord.rest.service/-guild-service/modify-current-voice-state.html","searchKeys":["modifyCurrentVoiceState","suspend fun modifyCurrentVoiceState(guildId: Snowflake, request: CurrentVoiceStateModifyRequest)","dev.kord.rest.service.GuildService.modifyCurrentVoiceState"]},{"name":"suspend fun modifyFollowupMessage(applicationId: Snowflake, interactionToken: String, messageId: Snowflake, request: FollowupMessageModifyRequest): DiscordMessage","description":"dev.kord.rest.service.InteractionService.modifyFollowupMessage","location":"rest/dev.kord.rest.service/-interaction-service/modify-followup-message.html","searchKeys":["modifyFollowupMessage","suspend fun modifyFollowupMessage(applicationId: Snowflake, interactionToken: String, messageId: Snowflake, request: FollowupMessageModifyRequest): DiscordMessage","dev.kord.rest.service.InteractionService.modifyFollowupMessage"]},{"name":"suspend fun modifyFollowupMessage(applicationId: Snowflake, interactionToken: String, messageId: Snowflake, request: MultipartFollowupMessageModifyRequest): DiscordMessage","description":"dev.kord.rest.service.InteractionService.modifyFollowupMessage","location":"rest/dev.kord.rest.service/-interaction-service/modify-followup-message.html","searchKeys":["modifyFollowupMessage","suspend fun modifyFollowupMessage(applicationId: Snowflake, interactionToken: String, messageId: Snowflake, request: MultipartFollowupMessageModifyRequest): DiscordMessage","dev.kord.rest.service.InteractionService.modifyFollowupMessage"]},{"name":"suspend fun modifyGlobalApplicationCommand(applicationId: Snowflake, commandId: Snowflake, request: ApplicationCommandModifyRequest): DiscordApplicationCommand","description":"dev.kord.rest.service.InteractionService.modifyGlobalApplicationCommand","location":"rest/dev.kord.rest.service/-interaction-service/modify-global-application-command.html","searchKeys":["modifyGlobalApplicationCommand","suspend fun modifyGlobalApplicationCommand(applicationId: Snowflake, commandId: Snowflake, request: ApplicationCommandModifyRequest): DiscordApplicationCommand","dev.kord.rest.service.InteractionService.modifyGlobalApplicationCommand"]},{"name":"suspend fun modifyGuildApplicationCommand(applicationId: Snowflake, guildId: Snowflake, commandId: Snowflake, request: ApplicationCommandModifyRequest): DiscordApplicationCommand","description":"dev.kord.rest.service.InteractionService.modifyGuildApplicationCommand","location":"rest/dev.kord.rest.service/-interaction-service/modify-guild-application-command.html","searchKeys":["modifyGuildApplicationCommand","suspend fun modifyGuildApplicationCommand(applicationId: Snowflake, guildId: Snowflake, commandId: Snowflake, request: ApplicationCommandModifyRequest): DiscordApplicationCommand","dev.kord.rest.service.InteractionService.modifyGuildApplicationCommand"]},{"name":"suspend fun modifyGuildMFALevel(guildId: Snowflake, level: MFALevel, reason: String? = null): GuildMFALevelModifyResponse","description":"dev.kord.rest.service.GuildService.modifyGuildMFALevel","location":"rest/dev.kord.rest.service/-guild-service/modify-guild-m-f-a-level.html","searchKeys":["modifyGuildMFALevel","suspend fun modifyGuildMFALevel(guildId: Snowflake, level: MFALevel, reason: String? = null): GuildMFALevelModifyResponse","dev.kord.rest.service.GuildService.modifyGuildMFALevel"]},{"name":"suspend fun modifyGuildSticker(guildId: Snowflake, id: Snowflake, request: GuildStickerModifyRequest): DiscordMessageSticker","description":"dev.kord.rest.service.StickerService.modifyGuildSticker","location":"rest/dev.kord.rest.service/-sticker-service/modify-guild-sticker.html","searchKeys":["modifyGuildSticker","suspend fun modifyGuildSticker(guildId: Snowflake, id: Snowflake, request: GuildStickerModifyRequest): DiscordMessageSticker","dev.kord.rest.service.StickerService.modifyGuildSticker"]},{"name":"suspend fun modifyGuildTemplate(guildId: Snowflake, code: String, request: GuildTemplateModifyRequest): DiscordTemplate","description":"dev.kord.rest.service.TemplateService.modifyGuildTemplate","location":"rest/dev.kord.rest.service/-template-service/modify-guild-template.html","searchKeys":["modifyGuildTemplate","suspend fun modifyGuildTemplate(guildId: Snowflake, code: String, request: GuildTemplateModifyRequest): DiscordTemplate","dev.kord.rest.service.TemplateService.modifyGuildTemplate"]},{"name":"suspend fun modifyGuildWelcomeScreen(guildId: Snowflake, request: GuildWelcomeScreenModifyRequest, reason: String? = null): DiscordWelcomeScreen","description":"dev.kord.rest.service.GuildService.modifyGuildWelcomeScreen","location":"rest/dev.kord.rest.service/-guild-service/modify-guild-welcome-screen.html","searchKeys":["modifyGuildWelcomeScreen","suspend fun modifyGuildWelcomeScreen(guildId: Snowflake, request: GuildWelcomeScreenModifyRequest, reason: String? = null): DiscordWelcomeScreen","dev.kord.rest.service.GuildService.modifyGuildWelcomeScreen"]},{"name":"suspend fun modifyGuildWidget(guildId: Snowflake, widget: GuildWidgetModifyRequest, reason: String? = null): DiscordGuildWidget","description":"dev.kord.rest.service.GuildService.modifyGuildWidget","location":"rest/dev.kord.rest.service/-guild-service/modify-guild-widget.html","searchKeys":["modifyGuildWidget","suspend fun modifyGuildWidget(guildId: Snowflake, widget: GuildWidgetModifyRequest, reason: String? = null): DiscordGuildWidget","dev.kord.rest.service.GuildService.modifyGuildWidget"]},{"name":"suspend fun modifyInteractionResponse(applicationId: Snowflake, interactionToken: String, multipartRequest: MultipartInteractionResponseModifyRequest): DiscordMessage","description":"dev.kord.rest.service.InteractionService.modifyInteractionResponse","location":"rest/dev.kord.rest.service/-interaction-service/modify-interaction-response.html","searchKeys":["modifyInteractionResponse","suspend fun modifyInteractionResponse(applicationId: Snowflake, interactionToken: String, multipartRequest: MultipartInteractionResponseModifyRequest): DiscordMessage","dev.kord.rest.service.InteractionService.modifyInteractionResponse"]},{"name":"suspend fun modifyInteractionResponse(applicationId: Snowflake, interactionToken: String, request: InteractionResponseModifyRequest): DiscordMessage","description":"dev.kord.rest.service.InteractionService.modifyInteractionResponse","location":"rest/dev.kord.rest.service/-interaction-service/modify-interaction-response.html","searchKeys":["modifyInteractionResponse","suspend fun modifyInteractionResponse(applicationId: Snowflake, interactionToken: String, request: InteractionResponseModifyRequest): DiscordMessage","dev.kord.rest.service.InteractionService.modifyInteractionResponse"]},{"name":"suspend fun modifyScheduledEvent(guildId: Snowflake, eventId: Snowflake, request: ScheduledEventModifyRequest, reason: String? = null): DiscordGuildScheduledEvent","description":"dev.kord.rest.service.GuildService.modifyScheduledEvent","location":"rest/dev.kord.rest.service/-guild-service/modify-scheduled-event.html","searchKeys":["modifyScheduledEvent","suspend fun modifyScheduledEvent(guildId: Snowflake, eventId: Snowflake, request: ScheduledEventModifyRequest, reason: String? = null): DiscordGuildScheduledEvent","dev.kord.rest.service.GuildService.modifyScheduledEvent"]},{"name":"suspend fun modifyStageInstance(channelId: Snowflake, request: StageInstanceModifyRequest, reason: String? = null): DiscordStageInstance","description":"dev.kord.rest.service.StageInstanceService.modifyStageInstance","location":"rest/dev.kord.rest.service/-stage-instance-service/modify-stage-instance.html","searchKeys":["modifyStageInstance","suspend fun modifyStageInstance(channelId: Snowflake, request: StageInstanceModifyRequest, reason: String? = null): DiscordStageInstance","dev.kord.rest.service.StageInstanceService.modifyStageInstance"]},{"name":"suspend fun modifyVoiceState(guildId: Snowflake, userId: Snowflake, request: VoiceStateModifyRequest)","description":"dev.kord.rest.service.GuildService.modifyVoiceState","location":"rest/dev.kord.rest.service/-guild-service/modify-voice-state.html","searchKeys":["modifyVoiceState","suspend fun modifyVoiceState(guildId: Snowflake, userId: Snowflake, request: VoiceStateModifyRequest)","dev.kord.rest.service.GuildService.modifyVoiceState"]},{"name":"suspend fun patchChannel(channelId: Snowflake, channel: ChannelModifyPatchRequest, reason: String? = null): DiscordChannel","description":"dev.kord.rest.service.ChannelService.patchChannel","location":"rest/dev.kord.rest.service/-channel-service/patch-channel.html","searchKeys":["patchChannel","suspend fun patchChannel(channelId: Snowflake, channel: ChannelModifyPatchRequest, reason: String? = null): DiscordChannel","dev.kord.rest.service.ChannelService.patchChannel"]},{"name":"suspend fun patchThread(threadId: Snowflake, thread: ChannelModifyPatchRequest, reason: String? = null): DiscordChannel","description":"dev.kord.rest.service.ChannelService.patchThread","location":"rest/dev.kord.rest.service/-channel-service/patch-thread.html","searchKeys":["patchThread","suspend fun patchThread(threadId: Snowflake, thread: ChannelModifyPatchRequest, reason: String? = null): DiscordChannel","dev.kord.rest.service.ChannelService.patchThread"]},{"name":"suspend fun putChannel(channelId: Snowflake, channel: ChannelModifyPutRequest, reason: String? = null): DiscordChannel","description":"dev.kord.rest.service.ChannelService.putChannel","location":"rest/dev.kord.rest.service/-channel-service/put-channel.html","searchKeys":["putChannel","suspend fun putChannel(channelId: Snowflake, channel: ChannelModifyPutRequest, reason: String? = null): DiscordChannel","dev.kord.rest.service.ChannelService.putChannel"]},{"name":"suspend fun removeFromGroup(channelId: Snowflake, userId: Snowflake)","description":"dev.kord.rest.service.ChannelService.removeFromGroup","location":"rest/dev.kord.rest.service/-channel-service/remove-from-group.html","searchKeys":["removeFromGroup","suspend fun removeFromGroup(channelId: Snowflake, userId: Snowflake)","dev.kord.rest.service.ChannelService.removeFromGroup"]},{"name":"suspend fun removeUserFromThread(channelId: Snowflake, userId: Snowflake)","description":"dev.kord.rest.service.ChannelService.removeUserFromThread","location":"rest/dev.kord.rest.service/-channel-service/remove-user-from-thread.html","searchKeys":["removeUserFromThread","suspend fun removeUserFromThread(channelId: Snowflake, userId: Snowflake)","dev.kord.rest.service.ChannelService.removeUserFromThread"]},{"name":"suspend fun startThread(channelId: Snowflake, name: String, archiveDuration: ArchiveDuration, type: ChannelType, builder: StartThreadBuilder.() -> Unit = {}): DiscordChannel","description":"dev.kord.rest.service.ChannelService.startThread","location":"rest/dev.kord.rest.service/-channel-service/start-thread.html","searchKeys":["startThread","suspend fun startThread(channelId: Snowflake, name: String, archiveDuration: ArchiveDuration, type: ChannelType, builder: StartThreadBuilder.() -> Unit = {}): DiscordChannel","dev.kord.rest.service.ChannelService.startThread"]},{"name":"suspend fun startThread(channelId: Snowflake, request: StartThreadRequest, reason: String? = null): DiscordChannel","description":"dev.kord.rest.service.ChannelService.startThread","location":"rest/dev.kord.rest.service/-channel-service/start-thread.html","searchKeys":["startThread","suspend fun startThread(channelId: Snowflake, request: StartThreadRequest, reason: String? = null): DiscordChannel","dev.kord.rest.service.ChannelService.startThread"]},{"name":"suspend fun startThreadWithMessage(channelId: Snowflake, messageId: Snowflake, name: String, archiveDuration: ArchiveDuration, builder: StartThreadWithMessageBuilder.() -> Unit): DiscordChannel","description":"dev.kord.rest.service.ChannelService.startThreadWithMessage","location":"rest/dev.kord.rest.service/-channel-service/start-thread-with-message.html","searchKeys":["startThreadWithMessage","suspend fun startThreadWithMessage(channelId: Snowflake, messageId: Snowflake, name: String, archiveDuration: ArchiveDuration, builder: StartThreadWithMessageBuilder.() -> Unit): DiscordChannel","dev.kord.rest.service.ChannelService.startThreadWithMessage"]},{"name":"suspend fun startThreadWithMessage(channelId: Snowflake, messageId: Snowflake, request: StartThreadRequest, reason: String? = null): DiscordChannel","description":"dev.kord.rest.service.ChannelService.startThreadWithMessage","location":"rest/dev.kord.rest.service/-channel-service/start-thread-with-message.html","searchKeys":["startThreadWithMessage","suspend fun startThreadWithMessage(channelId: Snowflake, messageId: Snowflake, request: StartThreadRequest, reason: String? = null): DiscordChannel","dev.kord.rest.service.ChannelService.startThreadWithMessage"]},{"name":"suspend fun syncGuildIntegration(guildId: Snowflake, integrationId: Snowflake)","description":"dev.kord.rest.service.GuildService.syncGuildIntegration","location":"rest/dev.kord.rest.service/-guild-service/sync-guild-integration.html","searchKeys":["syncGuildIntegration","suspend fun syncGuildIntegration(guildId: Snowflake, integrationId: Snowflake)","dev.kord.rest.service.GuildService.syncGuildIntegration"]},{"name":"suspend fun syncGuildTemplate(guildId: Snowflake, code: String): DiscordTemplate","description":"dev.kord.rest.service.TemplateService.syncGuildTemplate","location":"rest/dev.kord.rest.service/-template-service/sync-guild-template.html","searchKeys":["syncGuildTemplate","suspend fun syncGuildTemplate(guildId: Snowflake, code: String): DiscordTemplate","dev.kord.rest.service.TemplateService.syncGuildTemplate"]},{"name":"suspend fun triggerTypingIndicator(channelId: Snowflake)","description":"dev.kord.rest.service.ChannelService.triggerTypingIndicator","location":"rest/dev.kord.rest.service/-channel-service/trigger-typing-indicator.html","searchKeys":["triggerTypingIndicator","suspend fun triggerTypingIndicator(channelId: Snowflake)","dev.kord.rest.service.ChannelService.triggerTypingIndicator"]},{"name":"val HttpResponse.bucket: BucketKey?","description":"dev.kord.rest.request.bucket","location":"rest/dev.kord.rest.request/bucket.html","searchKeys":["bucket","val HttpResponse.bucket: BucketKey?","dev.kord.rest.request.bucket"]},{"name":"val HttpResponse.channelResetPoint: Instant","description":"dev.kord.rest.request.channelResetPoint","location":"rest/dev.kord.rest.request/channel-reset-point.html","searchKeys":["channelResetPoint","val HttpResponse.channelResetPoint: Instant","dev.kord.rest.request.channelResetPoint"]},{"name":"val HttpResponse.isChannelRateLimit: Boolean","description":"dev.kord.rest.request.isChannelRateLimit","location":"rest/dev.kord.rest.request/is-channel-rate-limit.html","searchKeys":["isChannelRateLimit","val HttpResponse.isChannelRateLimit: Boolean","dev.kord.rest.request.isChannelRateLimit"]},{"name":"val HttpResponse.isError: Boolean","description":"dev.kord.rest.request.isError","location":"rest/dev.kord.rest.request/is-error.html","searchKeys":["isError","val HttpResponse.isError: Boolean","dev.kord.rest.request.isError"]},{"name":"val HttpResponse.isErrorWithRateLimit: Boolean","description":"dev.kord.rest.request.isErrorWithRateLimit","location":"rest/dev.kord.rest.request/is-error-with-rate-limit.html","searchKeys":["isErrorWithRateLimit","val HttpResponse.isErrorWithRateLimit: Boolean","dev.kord.rest.request.isErrorWithRateLimit"]},{"name":"val HttpResponse.isGlobalRateLimit: Boolean","description":"dev.kord.rest.request.isGlobalRateLimit","location":"rest/dev.kord.rest.request/is-global-rate-limit.html","searchKeys":["isGlobalRateLimit","val HttpResponse.isGlobalRateLimit: Boolean","dev.kord.rest.request.isGlobalRateLimit"]},{"name":"val HttpResponse.isRateLimit: Boolean","description":"dev.kord.rest.request.isRateLimit","location":"rest/dev.kord.rest.request/is-rate-limit.html","searchKeys":["isRateLimit","val HttpResponse.isRateLimit: Boolean","dev.kord.rest.request.isRateLimit"]},{"name":"val HttpResponse.rateLimitRemaining: Long?","description":"dev.kord.rest.request.rateLimitRemaining","location":"rest/dev.kord.rest.request/rate-limit-remaining.html","searchKeys":["rateLimitRemaining","val HttpResponse.rateLimitRemaining: Long?","dev.kord.rest.request.rateLimitRemaining"]},{"name":"val HttpResponse.rateLimitTotal: Long?","description":"dev.kord.rest.request.rateLimitTotal","location":"rest/dev.kord.rest.request/rate-limit-total.html","searchKeys":["rateLimitTotal","val HttpResponse.rateLimitTotal: Long?","dev.kord.rest.request.rateLimitTotal"]},{"name":"val Request<*, *>.identifier: RequestIdentifier","description":"dev.kord.rest.request.identifier","location":"rest/dev.kord.rest.request/identifier.html","searchKeys":["identifier","val Request<*, *>.identifier: RequestIdentifier","dev.kord.rest.request.identifier"]},{"name":"val action: AuditLogEvent? = null","description":"dev.kord.rest.json.request.AuditLogGetRequest.action","location":"rest/dev.kord.rest.json.request/-audit-log-get-request/action.html","searchKeys":["action","val action: AuditLogEvent? = null","dev.kord.rest.json.request.AuditLogGetRequest.action"]},{"name":"val actions: List<DiscordAutoModerationAction>","description":"dev.kord.rest.json.request.AutoModerationRuleCreateRequest.actions","location":"rest/dev.kord.rest.json.request/-auto-moderation-rule-create-request/actions.html","searchKeys":["actions","val actions: List<DiscordAutoModerationAction>","dev.kord.rest.json.request.AutoModerationRuleCreateRequest.actions"]},{"name":"val actions: Optional<List<DiscordAutoModerationAction>>","description":"dev.kord.rest.json.request.AutoModerationRuleModifyRequest.actions","location":"rest/dev.kord.rest.json.request/-auto-moderation-rule-modify-request/actions.html","searchKeys":["actions","val actions: Optional<List<DiscordAutoModerationAction>>","dev.kord.rest.json.request.AutoModerationRuleModifyRequest.actions"]},{"name":"val afkChannelId: OptionalSnowflake","description":"dev.kord.rest.json.request.GuildCreateRequest.afkChannelId","location":"rest/dev.kord.rest.json.request/-guild-create-request/afk-channel-id.html","searchKeys":["afkChannelId","val afkChannelId: OptionalSnowflake","dev.kord.rest.json.request.GuildCreateRequest.afkChannelId"]},{"name":"val afkChannelId: OptionalSnowflake?","description":"dev.kord.rest.json.request.GuildModifyRequest.afkChannelId","location":"rest/dev.kord.rest.json.request/-guild-modify-request/afk-channel-id.html","searchKeys":["afkChannelId","val afkChannelId: OptionalSnowflake?","dev.kord.rest.json.request.GuildModifyRequest.afkChannelId"]},{"name":"val afkTimeout: Optional<DurationInSeconds>","description":"dev.kord.rest.json.request.GuildCreateRequest.afkTimeout","location":"rest/dev.kord.rest.json.request/-guild-create-request/afk-timeout.html","searchKeys":["afkTimeout","val afkTimeout: Optional<DurationInSeconds>","dev.kord.rest.json.request.GuildCreateRequest.afkTimeout"]},{"name":"val afkTimeout: Optional<DurationInSeconds>","description":"dev.kord.rest.json.request.GuildModifyRequest.afkTimeout","location":"rest/dev.kord.rest.json.request/-guild-modify-request/afk-timeout.html","searchKeys":["afkTimeout","val afkTimeout: Optional<DurationInSeconds>","dev.kord.rest.json.request.GuildModifyRequest.afkTimeout"]},{"name":"val allow: Permissions","description":"dev.kord.rest.json.request.ChannelPermissionEditRequest.allow","location":"rest/dev.kord.rest.json.request/-channel-permission-edit-request/allow.html","searchKeys":["allow","val allow: Permissions","dev.kord.rest.json.request.ChannelPermissionEditRequest.allow"]},{"name":"val allowedMentions: Optional<AllowedMentions>","description":"dev.kord.rest.json.request.FollowupMessageCreateRequest.allowedMentions","location":"rest/dev.kord.rest.json.request/-followup-message-create-request/allowed-mentions.html","searchKeys":["allowedMentions","val allowedMentions: Optional<AllowedMentions>","dev.kord.rest.json.request.FollowupMessageCreateRequest.allowedMentions"]},{"name":"val allowedMentions: Optional<AllowedMentions>","description":"dev.kord.rest.json.request.MessageCreateRequest.allowedMentions","location":"rest/dev.kord.rest.json.request/-message-create-request/allowed-mentions.html","searchKeys":["allowedMentions","val allowedMentions: Optional<AllowedMentions>","dev.kord.rest.json.request.MessageCreateRequest.allowedMentions"]},{"name":"val allowedMentions: Optional<AllowedMentions>","description":"dev.kord.rest.json.request.WebhookEditMessageRequest.allowedMentions","location":"rest/dev.kord.rest.json.request/-webhook-edit-message-request/allowed-mentions.html","searchKeys":["allowedMentions","val allowedMentions: Optional<AllowedMentions>","dev.kord.rest.json.request.WebhookEditMessageRequest.allowedMentions"]},{"name":"val allowedMentions: Optional<AllowedMentions>","description":"dev.kord.rest.json.request.WebhookExecuteRequest.allowedMentions","location":"rest/dev.kord.rest.json.request/-webhook-execute-request/allowed-mentions.html","searchKeys":["allowedMentions","val allowedMentions: Optional<AllowedMentions>","dev.kord.rest.json.request.WebhookExecuteRequest.allowedMentions"]},{"name":"val allowedMentions: Optional<AllowedMentions?>","description":"dev.kord.rest.json.request.FollowupMessageModifyRequest.allowedMentions","location":"rest/dev.kord.rest.json.request/-followup-message-modify-request/allowed-mentions.html","searchKeys":["allowedMentions","val allowedMentions: Optional<AllowedMentions?>","dev.kord.rest.json.request.FollowupMessageModifyRequest.allowedMentions"]},{"name":"val allowedMentions: Optional<AllowedMentions?>","description":"dev.kord.rest.json.request.InteractionApplicationCommandCallbackData.allowedMentions","location":"rest/dev.kord.rest.json.request/-interaction-application-command-callback-data/allowed-mentions.html","searchKeys":["allowedMentions","val allowedMentions: Optional<AllowedMentions?>","dev.kord.rest.json.request.InteractionApplicationCommandCallbackData.allowedMentions"]},{"name":"val allowedMentions: Optional<AllowedMentions?>","description":"dev.kord.rest.json.request.InteractionResponseModifyRequest.allowedMentions","location":"rest/dev.kord.rest.json.request/-interaction-response-modify-request/allowed-mentions.html","searchKeys":["allowedMentions","val allowedMentions: Optional<AllowedMentions?>","dev.kord.rest.json.request.InteractionResponseModifyRequest.allowedMentions"]},{"name":"val allowedMentions: Optional<AllowedMentions?>","description":"dev.kord.rest.json.request.MessageEditPatchRequest.allowedMentions","location":"rest/dev.kord.rest.json.request/-message-edit-patch-request/allowed-mentions.html","searchKeys":["allowedMentions","val allowedMentions: Optional<AllowedMentions?>","dev.kord.rest.json.request.MessageEditPatchRequest.allowedMentions"]},{"name":"val application: ApplicationService","description":"dev.kord.rest.service.RestClient.application","location":"rest/dev.kord.rest.service/-rest-client/application.html","searchKeys":["application","val application: ApplicationService","dev.kord.rest.service.RestClient.application"]},{"name":"val archived: OptionalBoolean","description":"dev.kord.rest.json.request.ChannelModifyPatchRequest.archived","location":"rest/dev.kord.rest.json.request/-channel-modify-patch-request/archived.html","searchKeys":["archived","val archived: OptionalBoolean","dev.kord.rest.json.request.ChannelModifyPatchRequest.archived"]},{"name":"val attachments: Optional<List<DiscordAttachment>?>","description":"dev.kord.rest.json.request.FollowupMessageModifyRequest.attachments","location":"rest/dev.kord.rest.json.request/-followup-message-modify-request/attachments.html","searchKeys":["attachments","val attachments: Optional<List<DiscordAttachment>?>","dev.kord.rest.json.request.FollowupMessageModifyRequest.attachments"]},{"name":"val attachments: Optional<MutableList<DiscordAttachment>>","description":"dev.kord.rest.json.request.MessageEditPatchRequest.attachments","location":"rest/dev.kord.rest.json.request/-message-edit-patch-request/attachments.html","searchKeys":["attachments","val attachments: Optional<MutableList<DiscordAttachment>>","dev.kord.rest.json.request.MessageEditPatchRequest.attachments"]},{"name":"val attachments: Optional<MutableList<DiscordAttachment>>","description":"dev.kord.rest.json.request.WebhookEditMessageRequest.attachments","location":"rest/dev.kord.rest.json.request/-webhook-edit-message-request/attachments.html","searchKeys":["attachments","val attachments: Optional<MutableList<DiscordAttachment>>","dev.kord.rest.json.request.WebhookEditMessageRequest.attachments"]},{"name":"val attachments: Optional<MutableList<DiscordAttachment>?>","description":"dev.kord.rest.json.request.InteractionResponseModifyRequest.attachments","location":"rest/dev.kord.rest.json.request/-interaction-response-modify-request/attachments.html","searchKeys":["attachments","val attachments: Optional<MutableList<DiscordAttachment>?>","dev.kord.rest.json.request.InteractionResponseModifyRequest.attachments"]},{"name":"val auditLog: AuditLogService","description":"dev.kord.rest.service.RestClient.auditLog","location":"rest/dev.kord.rest.service/-rest-client/audit-log.html","searchKeys":["auditLog","val auditLog: AuditLogService","dev.kord.rest.service.RestClient.auditLog"]},{"name":"val author: Optional<EmbedAuthorRequest>","description":"dev.kord.rest.json.request.EmbedRequest.author","location":"rest/dev.kord.rest.json.request/-embed-request/author.html","searchKeys":["author","val author: Optional<EmbedAuthorRequest>","dev.kord.rest.json.request.EmbedRequest.author"]},{"name":"val autoArchiveDuration: ArchiveDuration","description":"dev.kord.rest.json.request.StartThreadRequest.autoArchiveDuration","location":"rest/dev.kord.rest.json.request/-start-thread-request/auto-archive-duration.html","searchKeys":["autoArchiveDuration","val autoArchiveDuration: ArchiveDuration","dev.kord.rest.json.request.StartThreadRequest.autoArchiveDuration"]},{"name":"val autoArchiveDuration: Optional<ArchiveDuration>","description":"dev.kord.rest.json.request.ChannelModifyPatchRequest.autoArchiveDuration","location":"rest/dev.kord.rest.json.request/-channel-modify-patch-request/auto-archive-duration.html","searchKeys":["autoArchiveDuration","val autoArchiveDuration: Optional<ArchiveDuration>","dev.kord.rest.json.request.ChannelModifyPatchRequest.autoArchiveDuration"]},{"name":"val autoModeration: AutoModerationService","description":"dev.kord.rest.service.RestClient.autoModeration","location":"rest/dev.kord.rest.service/-rest-client/auto-moderation.html","searchKeys":["autoModeration","val autoModeration: AutoModerationService","dev.kord.rest.service.RestClient.autoModeration"]},{"name":"val avatar: Optional<String>","description":"dev.kord.rest.json.request.FollowupMessageCreateRequest.avatar","location":"rest/dev.kord.rest.json.request/-followup-message-create-request/avatar.html","searchKeys":["avatar","val avatar: Optional<String>","dev.kord.rest.json.request.FollowupMessageCreateRequest.avatar"]},{"name":"val avatar: Optional<String>","description":"dev.kord.rest.json.request.WebhookCreateRequest.avatar","location":"rest/dev.kord.rest.json.request/-webhook-create-request/avatar.html","searchKeys":["avatar","val avatar: Optional<String>","dev.kord.rest.json.request.WebhookCreateRequest.avatar"]},{"name":"val avatar: Optional<String>","description":"dev.kord.rest.json.request.WebhookExecuteRequest.avatar","location":"rest/dev.kord.rest.json.request/-webhook-execute-request/avatar.html","searchKeys":["avatar","val avatar: Optional<String>","dev.kord.rest.json.request.WebhookExecuteRequest.avatar"]},{"name":"val avatar: Optional<String?>","description":"dev.kord.rest.json.request.CurrentUserModifyRequest.avatar","location":"rest/dev.kord.rest.json.request/-current-user-modify-request/avatar.html","searchKeys":["avatar","val avatar: Optional<String?>","dev.kord.rest.json.request.CurrentUserModifyRequest.avatar"]},{"name":"val avatar: Optional<String?>","description":"dev.kord.rest.json.request.WebhookModifyRequest.avatar","location":"rest/dev.kord.rest.json.request/-webhook-modify-request/avatar.html","searchKeys":["avatar","val avatar: Optional<String?>","dev.kord.rest.json.request.WebhookModifyRequest.avatar"]},{"name":"val banner: Optional<String?>","description":"dev.kord.rest.json.request.GuildModifyRequest.banner","location":"rest/dev.kord.rest.json.request/-guild-modify-request/banner.html","searchKeys":["banner","val banner: Optional<String?>","dev.kord.rest.json.request.GuildModifyRequest.banner"]},{"name":"val baseUrl: String","description":"dev.kord.rest.request.Request.baseUrl","location":"rest/dev.kord.rest.request/-request/base-url.html","searchKeys":["baseUrl","val baseUrl: String","dev.kord.rest.request.Request.baseUrl"]},{"name":"val baseUrl: String","description":"dev.kord.rest.route.Route.Companion.baseUrl","location":"rest/dev.kord.rest.route/-route/-companion/base-url.html","searchKeys":["baseUrl","val baseUrl: String","dev.kord.rest.route.Route.Companion.baseUrl"]},{"name":"val before: Instant? = null","description":"dev.kord.rest.json.request.ListThreadsByTimestampRequest.before","location":"rest/dev.kord.rest.json.request/-list-threads-by-timestamp-request/before.html","searchKeys":["before","val before: Instant? = null","dev.kord.rest.json.request.ListThreadsByTimestampRequest.before"]},{"name":"val before: Snowflake? = null","description":"dev.kord.rest.json.request.AuditLogGetRequest.before","location":"rest/dev.kord.rest.json.request/-audit-log-get-request/before.html","searchKeys":["before","val before: Snowflake? = null","dev.kord.rest.json.request.AuditLogGetRequest.before"]},{"name":"val before: Snowflake? = null","description":"dev.kord.rest.json.request.ListThreadsBySnowflakeRequest.before","location":"rest/dev.kord.rest.json.request/-list-threads-by-snowflake-request/before.html","searchKeys":["before","val before: Snowflake? = null","dev.kord.rest.json.request.ListThreadsBySnowflakeRequest.before"]},{"name":"val bitrate: Int? = null","description":"dev.kord.rest.json.request.ChannelModifyPutRequest.bitrate","location":"rest/dev.kord.rest.json.request/-channel-modify-put-request/bitrate.html","searchKeys":["bitrate","val bitrate: Int? = null","dev.kord.rest.json.request.ChannelModifyPutRequest.bitrate"]},{"name":"val bitrate: OptionalInt","description":"dev.kord.rest.json.request.GuildChannelCreateRequest.bitrate","location":"rest/dev.kord.rest.json.request/-guild-channel-create-request/bitrate.html","searchKeys":["bitrate","val bitrate: OptionalInt","dev.kord.rest.json.request.GuildChannelCreateRequest.bitrate"]},{"name":"val bitrate: OptionalInt?","description":"dev.kord.rest.json.request.ChannelModifyPatchRequest.bitrate","location":"rest/dev.kord.rest.json.request/-channel-modify-patch-request/bitrate.html","searchKeys":["bitrate","val bitrate: OptionalInt?","dev.kord.rest.json.request.ChannelModifyPatchRequest.bitrate"]},{"name":"val body: T","description":"dev.kord.rest.request.RequestBody.body","location":"rest/dev.kord.rest.request/-request-body/body.html","searchKeys":["body","val body: T","dev.kord.rest.request.RequestBody.body"]},{"name":"val channel: ChannelService","description":"dev.kord.rest.service.RestClient.channel","location":"rest/dev.kord.rest.service/-rest-client/channel.html","searchKeys":["channel","val channel: ChannelService","dev.kord.rest.service.RestClient.channel"]},{"name":"val channelId: OptionalSnowflake","description":"dev.kord.rest.json.request.CurrentVoiceStateModifyRequest.channelId","location":"rest/dev.kord.rest.json.request/-current-voice-state-modify-request/channel-id.html","searchKeys":["channelId","val channelId: OptionalSnowflake","dev.kord.rest.json.request.CurrentVoiceStateModifyRequest.channelId"]},{"name":"val channelId: OptionalSnowflake","description":"dev.kord.rest.json.request.GuildScheduledEventCreateRequest.channelId","location":"rest/dev.kord.rest.json.request/-guild-scheduled-event-create-request/channel-id.html","searchKeys":["channelId","val channelId: OptionalSnowflake","dev.kord.rest.json.request.GuildScheduledEventCreateRequest.channelId"]},{"name":"val channelId: OptionalSnowflake","description":"dev.kord.rest.json.request.WebhookModifyRequest.channelId","location":"rest/dev.kord.rest.json.request/-webhook-modify-request/channel-id.html","searchKeys":["channelId","val channelId: OptionalSnowflake","dev.kord.rest.json.request.WebhookModifyRequest.channelId"]},{"name":"val channelId: OptionalSnowflake?","description":"dev.kord.rest.json.request.GuildMemberModifyRequest.channelId","location":"rest/dev.kord.rest.json.request/-guild-member-modify-request/channel-id.html","searchKeys":["channelId","val channelId: OptionalSnowflake?","dev.kord.rest.json.request.GuildMemberModifyRequest.channelId"]},{"name":"val channelId: OptionalSnowflake?","description":"dev.kord.rest.json.request.GuildWidgetModifyRequest.channelId","location":"rest/dev.kord.rest.json.request/-guild-widget-modify-request/channel-id.html","searchKeys":["channelId","val channelId: OptionalSnowflake?","dev.kord.rest.json.request.GuildWidgetModifyRequest.channelId"]},{"name":"val channelId: OptionalSnowflake?","description":"dev.kord.rest.json.request.ScheduledEventModifyRequest.channelId","location":"rest/dev.kord.rest.json.request/-scheduled-event-modify-request/channel-id.html","searchKeys":["channelId","val channelId: OptionalSnowflake?","dev.kord.rest.json.request.ScheduledEventModifyRequest.channelId"]},{"name":"val channelId: Snowflake","description":"dev.kord.rest.json.request.StageInstanceCreateRequest.channelId","location":"rest/dev.kord.rest.json.request/-stage-instance-create-request/channel-id.html","searchKeys":["channelId","val channelId: Snowflake","dev.kord.rest.json.request.StageInstanceCreateRequest.channelId"]},{"name":"val channelId: Snowflake","description":"dev.kord.rest.json.request.VoiceStateModifyRequest.channelId","location":"rest/dev.kord.rest.json.request/-voice-state-modify-request/channel-id.html","searchKeys":["channelId","val channelId: Snowflake","dev.kord.rest.json.request.VoiceStateModifyRequest.channelId"]},{"name":"val channelId: Snowflake","description":"dev.kord.rest.json.response.FollowedChannelResponse.channelId","location":"rest/dev.kord.rest.json.response/-followed-channel-response/channel-id.html","searchKeys":["channelId","val channelId: Snowflake","dev.kord.rest.json.response.FollowedChannelResponse.channelId"]},{"name":"val channels: MutableList<GuildChannelCreateRequest>","description":"dev.kord.rest.builder.guild.GuildCreateBuilder.channels","location":"rest/dev.kord.rest.builder.guild/-guild-create-builder/channels.html","searchKeys":["channels","val channels: MutableList<GuildChannelCreateRequest>","dev.kord.rest.builder.guild.GuildCreateBuilder.channels"]},{"name":"val channels: Optional<List<GuildChannelCreateRequest>>","description":"dev.kord.rest.json.request.GuildCreateRequest.channels","location":"rest/dev.kord.rest.json.request/-guild-create-request/channels.html","searchKeys":["channels","val channels: Optional<List<GuildChannelCreateRequest>>","dev.kord.rest.json.request.GuildCreateRequest.channels"]},{"name":"val clock: Clock","description":"dev.kord.rest.ratelimit.AbstractRateLimiter.clock","location":"rest/dev.kord.rest.ratelimit/-abstract-rate-limiter/clock.html","searchKeys":["clock","val clock: Clock","dev.kord.rest.ratelimit.AbstractRateLimiter.clock"]},{"name":"val code: Int","description":"dev.kord.rest.json.JsonErrorCode.code","location":"rest/dev.kord.rest.json/-json-error-code/code.html","searchKeys":["code","val code: Int","dev.kord.rest.json.JsonErrorCode.code"]},{"name":"val code: Int","description":"dev.kord.rest.request.HttpStatus.code","location":"rest/dev.kord.rest.request/-http-status/code.html","searchKeys":["code","val code: Int","dev.kord.rest.request.HttpStatus.code"]},{"name":"val code: JsonErrorCode","description":"dev.kord.rest.json.response.DiscordErrorResponse.code","location":"rest/dev.kord.rest.json.response/-discord-error-response/code.html","searchKeys":["code","val code: JsonErrorCode","dev.kord.rest.json.response.DiscordErrorResponse.code"]},{"name":"val color: Optional<Color>","description":"dev.kord.rest.json.request.EmbedRequest.color","location":"rest/dev.kord.rest.json.request/-embed-request/color.html","searchKeys":["color","val color: Optional<Color>","dev.kord.rest.json.request.EmbedRequest.color"]},{"name":"val color: Optional<Color>","description":"dev.kord.rest.json.request.GuildRoleCreateRequest.color","location":"rest/dev.kord.rest.json.request/-guild-role-create-request/color.html","searchKeys":["color","val color: Optional<Color>","dev.kord.rest.json.request.GuildRoleCreateRequest.color"]},{"name":"val color: Optional<Color?>","description":"dev.kord.rest.json.request.GuildRoleModifyRequest.color","location":"rest/dev.kord.rest.json.request/-guild-role-modify-request/color.html","searchKeys":["color","val color: Optional<Color?>","dev.kord.rest.json.request.GuildRoleModifyRequest.color"]},{"name":"val commands: MutableList<ApplicationCommandCreateBuilder>","description":"dev.kord.rest.builder.interaction.MultiApplicationCommandBuilder.commands","location":"rest/dev.kord.rest.builder.interaction/-multi-application-command-builder/commands.html","searchKeys":["commands","val commands: MutableList<ApplicationCommandCreateBuilder>","dev.kord.rest.builder.interaction.MultiApplicationCommandBuilder.commands"]},{"name":"val communicationDisabledUntil: Optional<Instant>","description":"dev.kord.rest.json.request.GuildMemberAddRequest.communicationDisabledUntil","location":"rest/dev.kord.rest.json.request/-guild-member-add-request/communication-disabled-until.html","searchKeys":["communicationDisabledUntil","val communicationDisabledUntil: Optional<Instant>","dev.kord.rest.json.request.GuildMemberAddRequest.communicationDisabledUntil"]},{"name":"val communicationDisabledUntil: Optional<Instant?>","description":"dev.kord.rest.json.request.GuildMemberModifyRequest.communicationDisabledUntil","location":"rest/dev.kord.rest.json.request/-guild-member-modify-request/communication-disabled-until.html","searchKeys":["communicationDisabledUntil","val communicationDisabledUntil: Optional<Instant?>","dev.kord.rest.json.request.GuildMemberModifyRequest.communicationDisabledUntil"]},{"name":"val components: MutableList<ActionRowBuilder>","description":"dev.kord.rest.builder.interaction.ModalBuilder.components","location":"rest/dev.kord.rest.builder.interaction/-modal-builder/components.html","searchKeys":["components","val components: MutableList<ActionRowBuilder>","dev.kord.rest.builder.interaction.ModalBuilder.components"]},{"name":"val components: MutableList<ActionRowComponentBuilder>","description":"dev.kord.rest.builder.component.ActionRowBuilder.components","location":"rest/dev.kord.rest.builder.component/-action-row-builder/components.html","searchKeys":["components","val components: MutableList<ActionRowComponentBuilder>","dev.kord.rest.builder.component.ActionRowBuilder.components"]},{"name":"val components: Optional<List<DiscordComponent>>","description":"dev.kord.rest.json.request.FollowupMessageCreateRequest.components","location":"rest/dev.kord.rest.json.request/-followup-message-create-request/components.html","searchKeys":["components","val components: Optional<List<DiscordComponent>>","dev.kord.rest.json.request.FollowupMessageCreateRequest.components"]},{"name":"val components: Optional<List<DiscordComponent>>","description":"dev.kord.rest.json.request.InteractionApplicationCommandCallbackData.components","location":"rest/dev.kord.rest.json.request/-interaction-application-command-callback-data/components.html","searchKeys":["components","val components: Optional<List<DiscordComponent>>","dev.kord.rest.json.request.InteractionApplicationCommandCallbackData.components"]},{"name":"val components: Optional<List<DiscordComponent>>","description":"dev.kord.rest.json.request.MessageCreateRequest.components","location":"rest/dev.kord.rest.json.request/-message-create-request/components.html","searchKeys":["components","val components: Optional<List<DiscordComponent>>","dev.kord.rest.json.request.MessageCreateRequest.components"]},{"name":"val components: Optional<List<DiscordComponent>>","description":"dev.kord.rest.json.request.MessageEditPatchRequest.components","location":"rest/dev.kord.rest.json.request/-message-edit-patch-request/components.html","searchKeys":["components","val components: Optional<List<DiscordComponent>>","dev.kord.rest.json.request.MessageEditPatchRequest.components"]},{"name":"val components: Optional<List<DiscordComponent>>","description":"dev.kord.rest.json.request.WebhookEditMessageRequest.components","location":"rest/dev.kord.rest.json.request/-webhook-edit-message-request/components.html","searchKeys":["components","val components: Optional<List<DiscordComponent>>","dev.kord.rest.json.request.WebhookEditMessageRequest.components"]},{"name":"val components: Optional<List<DiscordComponent>>","description":"dev.kord.rest.json.request.WebhookExecuteRequest.components","location":"rest/dev.kord.rest.json.request/-webhook-execute-request/components.html","searchKeys":["components","val components: Optional<List<DiscordComponent>>","dev.kord.rest.json.request.WebhookExecuteRequest.components"]},{"name":"val components: Optional<List<DiscordComponent>?>","description":"dev.kord.rest.json.request.FollowupMessageModifyRequest.components","location":"rest/dev.kord.rest.json.request/-followup-message-modify-request/components.html","searchKeys":["components","val components: Optional<List<DiscordComponent>?>","dev.kord.rest.json.request.FollowupMessageModifyRequest.components"]},{"name":"val components: Optional<List<DiscordComponent>?>","description":"dev.kord.rest.json.request.InteractionResponseModifyRequest.components","location":"rest/dev.kord.rest.json.request/-interaction-response-modify-request/components.html","searchKeys":["components","val components: Optional<List<DiscordComponent>?>","dev.kord.rest.json.request.InteractionResponseModifyRequest.components"]},{"name":"val content: Optional<String>","description":"dev.kord.rest.json.request.FollowupMessageCreateRequest.content","location":"rest/dev.kord.rest.json.request/-followup-message-create-request/content.html","searchKeys":["content","val content: Optional<String>","dev.kord.rest.json.request.FollowupMessageCreateRequest.content"]},{"name":"val content: Optional<String>","description":"dev.kord.rest.json.request.MessageCreateRequest.content","location":"rest/dev.kord.rest.json.request/-message-create-request/content.html","searchKeys":["content","val content: Optional<String>","dev.kord.rest.json.request.MessageCreateRequest.content"]},{"name":"val content: Optional<String>","description":"dev.kord.rest.json.request.WebhookExecuteRequest.content","location":"rest/dev.kord.rest.json.request/-webhook-execute-request/content.html","searchKeys":["content","val content: Optional<String>","dev.kord.rest.json.request.WebhookExecuteRequest.content"]},{"name":"val content: Optional<String?>","description":"dev.kord.rest.json.request.FollowupMessageModifyRequest.content","location":"rest/dev.kord.rest.json.request/-followup-message-modify-request/content.html","searchKeys":["content","val content: Optional<String?>","dev.kord.rest.json.request.FollowupMessageModifyRequest.content"]},{"name":"val content: Optional<String?>","description":"dev.kord.rest.json.request.InteractionApplicationCommandCallbackData.content","location":"rest/dev.kord.rest.json.request/-interaction-application-command-callback-data/content.html","searchKeys":["content","val content: Optional<String?>","dev.kord.rest.json.request.InteractionApplicationCommandCallbackData.content"]},{"name":"val content: Optional<String?>","description":"dev.kord.rest.json.request.InteractionResponseModifyRequest.content","location":"rest/dev.kord.rest.json.request/-interaction-response-modify-request/content.html","searchKeys":["content","val content: Optional<String?>","dev.kord.rest.json.request.InteractionResponseModifyRequest.content"]},{"name":"val content: Optional<String?>","description":"dev.kord.rest.json.request.MessageEditPatchRequest.content","location":"rest/dev.kord.rest.json.request/-message-edit-patch-request/content.html","searchKeys":["content","val content: Optional<String?>","dev.kord.rest.json.request.MessageEditPatchRequest.content"]},{"name":"val content: Optional<String?>","description":"dev.kord.rest.json.request.WebhookEditMessageRequest.content","location":"rest/dev.kord.rest.json.request/-webhook-edit-message-request/content.html","searchKeys":["content","val content: Optional<String?>","dev.kord.rest.json.request.WebhookEditMessageRequest.content"]},{"name":"val contentFilter: Optional<ExplicitContentFilter?>","description":"dev.kord.rest.json.request.GuildModifyRequest.contentFilter","location":"rest/dev.kord.rest.json.request/-guild-modify-request/content-filter.html","searchKeys":["contentFilter","val contentFilter: Optional<ExplicitContentFilter?>","dev.kord.rest.json.request.GuildModifyRequest.contentFilter"]},{"name":"val contentProvider: ChannelProvider","description":"dev.kord.rest.NamedFile.contentProvider","location":"rest/dev.kord.rest/-named-file/content-provider.html","searchKeys":["contentProvider","val contentProvider: ChannelProvider","dev.kord.rest.NamedFile.contentProvider"]},{"name":"val data: ByteArray","description":"dev.kord.rest.Image.data","location":"rest/dev.kord.rest/-image/data.html","searchKeys":["data","val data: ByteArray","dev.kord.rest.Image.data"]},{"name":"val data: DiscordAutoComplete<T>","description":"dev.kord.rest.json.request.AutoCompleteResponseCreateRequest.data","location":"rest/dev.kord.rest.json.request/-auto-complete-response-create-request/data.html","searchKeys":["data","val data: DiscordAutoComplete<T>","dev.kord.rest.json.request.AutoCompleteResponseCreateRequest.data"]},{"name":"val data: DiscordModal","description":"dev.kord.rest.json.request.ModalResponseCreateRequest.data","location":"rest/dev.kord.rest.json.request/-modal-response-create-request/data.html","searchKeys":["data","val data: DiscordModal","dev.kord.rest.json.request.ModalResponseCreateRequest.data"]},{"name":"val data: List<PartData>","description":"dev.kord.rest.request.MultipartRequest.data","location":"rest/dev.kord.rest.request/-multipart-request/data.html","searchKeys":["data","val data: List<PartData>","dev.kord.rest.request.MultipartRequest.data"]},{"name":"val data: Optional<InteractionApplicationCommandCallbackData>","description":"dev.kord.rest.json.request.InteractionResponseCreateRequest.data","location":"rest/dev.kord.rest.json.request/-interaction-response-create-request/data.html","searchKeys":["data","val data: Optional<InteractionApplicationCommandCallbackData>","dev.kord.rest.json.request.InteractionResponseCreateRequest.data"]},{"name":"val dataUri: String","description":"dev.kord.rest.Image.dataUri","location":"rest/dev.kord.rest/-image/data-uri.html","searchKeys":["dataUri","val dataUri: String","dev.kord.rest.Image.dataUri"]},{"name":"val deaf: OptionalBoolean","description":"dev.kord.rest.json.request.GuildMemberAddRequest.deaf","location":"rest/dev.kord.rest.json.request/-guild-member-add-request/deaf.html","searchKeys":["deaf","val deaf: OptionalBoolean","dev.kord.rest.json.request.GuildMemberAddRequest.deaf"]},{"name":"val deaf: OptionalBoolean?","description":"dev.kord.rest.json.request.GuildMemberModifyRequest.deaf","location":"rest/dev.kord.rest.json.request/-guild-member-modify-request/deaf.html","searchKeys":["deaf","val deaf: OptionalBoolean?","dev.kord.rest.json.request.GuildMemberModifyRequest.deaf"]},{"name":"val defaultAutoArchiveDuration: Optional<ArchiveDuration>","description":"dev.kord.rest.json.request.GuildChannelCreateRequest.defaultAutoArchiveDuration","location":"rest/dev.kord.rest.json.request/-guild-channel-create-request/default-auto-archive-duration.html","searchKeys":["defaultAutoArchiveDuration","val defaultAutoArchiveDuration: Optional<ArchiveDuration>","dev.kord.rest.json.request.GuildChannelCreateRequest.defaultAutoArchiveDuration"]},{"name":"val defaultAutoArchiveDuration: Optional<ArchiveDuration?>","description":"dev.kord.rest.json.request.ChannelModifyPatchRequest.defaultAutoArchiveDuration","location":"rest/dev.kord.rest.json.request/-channel-modify-patch-request/default-auto-archive-duration.html","searchKeys":["defaultAutoArchiveDuration","val defaultAutoArchiveDuration: Optional<ArchiveDuration?>","dev.kord.rest.json.request.ChannelModifyPatchRequest.defaultAutoArchiveDuration"]},{"name":"val defaultMemberPermissions: Optional<Permissions?>","description":"dev.kord.rest.json.request.ApplicationCommandCreateRequest.defaultMemberPermissions","location":"rest/dev.kord.rest.json.request/-application-command-create-request/default-member-permissions.html","searchKeys":["defaultMemberPermissions","val defaultMemberPermissions: Optional<Permissions?>","dev.kord.rest.json.request.ApplicationCommandCreateRequest.defaultMemberPermissions"]},{"name":"val defaultMemberPermissions: Optional<Permissions?>","description":"dev.kord.rest.json.request.ApplicationCommandModifyRequest.defaultMemberPermissions","location":"rest/dev.kord.rest.json.request/-application-command-modify-request/default-member-permissions.html","searchKeys":["defaultMemberPermissions","val defaultMemberPermissions: Optional<Permissions?>","dev.kord.rest.json.request.ApplicationCommandModifyRequest.defaultMemberPermissions"]},{"name":"val defaultMessageNotificationLevel: Optional<DefaultMessageNotificationLevel?>","description":"dev.kord.rest.json.request.GuildModifyRequest.defaultMessageNotificationLevel","location":"rest/dev.kord.rest.json.request/-guild-modify-request/default-message-notification-level.html","searchKeys":["defaultMessageNotificationLevel","val defaultMessageNotificationLevel: Optional<DefaultMessageNotificationLevel?>","dev.kord.rest.json.request.GuildModifyRequest.defaultMessageNotificationLevel"]},{"name":"val defaultNotificationLevel: Optional<DefaultMessageNotificationLevel>","description":"dev.kord.rest.json.request.GuildCreateRequest.defaultNotificationLevel","location":"rest/dev.kord.rest.json.request/-guild-create-request/default-notification-level.html","searchKeys":["defaultNotificationLevel","val defaultNotificationLevel: Optional<DefaultMessageNotificationLevel>","dev.kord.rest.json.request.GuildCreateRequest.defaultNotificationLevel"]},{"name":"val defaultPermission: OptionalBoolean","description":"dev.kord.rest.json.request.ApplicationCommandCreateRequest.defaultPermission","location":"rest/dev.kord.rest.json.request/-application-command-create-request/default-permission.html","searchKeys":["defaultPermission","val defaultPermission: OptionalBoolean","dev.kord.rest.json.request.ApplicationCommandCreateRequest.defaultPermission"]},{"name":"val defaultPermission: OptionalBoolean","description":"dev.kord.rest.json.request.ApplicationCommandModifyRequest.defaultPermission","location":"rest/dev.kord.rest.json.request/-application-command-modify-request/default-permission.html","searchKeys":["defaultPermission","val defaultPermission: OptionalBoolean","dev.kord.rest.json.request.ApplicationCommandModifyRequest.defaultPermission"]},{"name":"val deleteMessageSeconds: Optional<DurationInSeconds>","description":"dev.kord.rest.json.request.GuildBanCreateRequest.deleteMessageSeconds","location":"rest/dev.kord.rest.json.request/-guild-ban-create-request/delete-message-seconds.html","searchKeys":["deleteMessageSeconds","val deleteMessageSeconds: Optional<DurationInSeconds>","dev.kord.rest.json.request.GuildBanCreateRequest.deleteMessageSeconds"]},{"name":"val deny: Permissions","description":"dev.kord.rest.json.request.ChannelPermissionEditRequest.deny","location":"rest/dev.kord.rest.json.request/-channel-permission-edit-request/deny.html","searchKeys":["deny","val deny: Permissions","dev.kord.rest.json.request.ChannelPermissionEditRequest.deny"]},{"name":"val description: Optional<String>","description":"dev.kord.rest.json.request.ApplicationCommandCreateRequest.description","location":"rest/dev.kord.rest.json.request/-application-command-create-request/description.html","searchKeys":["description","val description: Optional<String>","dev.kord.rest.json.request.ApplicationCommandCreateRequest.description"]},{"name":"val description: Optional<String>","description":"dev.kord.rest.json.request.ApplicationCommandModifyRequest.description","location":"rest/dev.kord.rest.json.request/-application-command-modify-request/description.html","searchKeys":["description","val description: Optional<String>","dev.kord.rest.json.request.ApplicationCommandModifyRequest.description"]},{"name":"val description: Optional<String>","description":"dev.kord.rest.json.request.EmbedRequest.description","location":"rest/dev.kord.rest.json.request/-embed-request/description.html","searchKeys":["description","val description: Optional<String>","dev.kord.rest.json.request.EmbedRequest.description"]},{"name":"val description: Optional<String>","description":"dev.kord.rest.json.request.GuildScheduledEventCreateRequest.description","location":"rest/dev.kord.rest.json.request/-guild-scheduled-event-create-request/description.html","searchKeys":["description","val description: Optional<String>","dev.kord.rest.json.request.GuildScheduledEventCreateRequest.description"]},{"name":"val description: Optional<String>","description":"dev.kord.rest.json.request.GuildStickerModifyRequest.description","location":"rest/dev.kord.rest.json.request/-guild-sticker-modify-request/description.html","searchKeys":["description","val description: Optional<String>","dev.kord.rest.json.request.GuildStickerModifyRequest.description"]},{"name":"val description: Optional<String>","description":"dev.kord.rest.json.request.GuildWelcomeScreenModifyRequest.description","location":"rest/dev.kord.rest.json.request/-guild-welcome-screen-modify-request/description.html","searchKeys":["description","val description: Optional<String>","dev.kord.rest.json.request.GuildWelcomeScreenModifyRequest.description"]},{"name":"val description: Optional<String?>","description":"dev.kord.rest.json.request.GuildTemplateCreateRequest.description","location":"rest/dev.kord.rest.json.request/-guild-template-create-request/description.html","searchKeys":["description","val description: Optional<String?>","dev.kord.rest.json.request.GuildTemplateCreateRequest.description"]},{"name":"val description: Optional<String?>","description":"dev.kord.rest.json.request.GuildTemplateModifyRequest.description","location":"rest/dev.kord.rest.json.request/-guild-template-modify-request/description.html","searchKeys":["description","val description: Optional<String?>","dev.kord.rest.json.request.GuildTemplateModifyRequest.description"]},{"name":"val description: Optional<String?>","description":"dev.kord.rest.json.request.ScheduledEventModifyRequest.description","location":"rest/dev.kord.rest.json.request/-scheduled-event-modify-request/description.html","searchKeys":["description","val description: Optional<String?>","dev.kord.rest.json.request.ScheduledEventModifyRequest.description"]},{"name":"val description: String","description":"dev.kord.rest.json.request.GuildStickerCreateRequest.description","location":"rest/dev.kord.rest.json.request/-guild-sticker-create-request/description.html","searchKeys":["description","val description: String","dev.kord.rest.json.request.GuildStickerCreateRequest.description"]},{"name":"val descriptionLocalizations: Optional<Map<Locale, String>?>","description":"dev.kord.rest.json.request.ApplicationCommandCreateRequest.descriptionLocalizations","location":"rest/dev.kord.rest.json.request/-application-command-create-request/description-localizations.html","searchKeys":["descriptionLocalizations","val descriptionLocalizations: Optional<Map<Locale, String>?>","dev.kord.rest.json.request.ApplicationCommandCreateRequest.descriptionLocalizations"]},{"name":"val descriptionLocalizations: Optional<Map<Locale, String>?>","description":"dev.kord.rest.json.request.ApplicationCommandModifyRequest.descriptionLocalizations","location":"rest/dev.kord.rest.json.request/-application-command-modify-request/description-localizations.html","searchKeys":["descriptionLocalizations","val descriptionLocalizations: Optional<Map<Locale, String>?>","dev.kord.rest.json.request.ApplicationCommandModifyRequest.descriptionLocalizations"]},{"name":"val dmPermission: OptionalBoolean?","description":"dev.kord.rest.json.request.ApplicationCommandCreateRequest.dmPermission","location":"rest/dev.kord.rest.json.request/-application-command-create-request/dm-permission.html","searchKeys":["dmPermission","val dmPermission: OptionalBoolean?","dev.kord.rest.json.request.ApplicationCommandCreateRequest.dmPermission"]},{"name":"val dmPermission: OptionalBoolean?","description":"dev.kord.rest.json.request.ApplicationCommandModifyRequest.dmPermission","location":"rest/dev.kord.rest.json.request/-application-command-modify-request/dm-permission.html","searchKeys":["dmPermission","val dmPermission: OptionalBoolean?","dev.kord.rest.json.request.ApplicationCommandModifyRequest.dmPermission"]},{"name":"val embeds: Optional<List<EmbedRequest>>","description":"dev.kord.rest.json.request.FollowupMessageCreateRequest.embeds","location":"rest/dev.kord.rest.json.request/-followup-message-create-request/embeds.html","searchKeys":["embeds","val embeds: Optional<List<EmbedRequest>>","dev.kord.rest.json.request.FollowupMessageCreateRequest.embeds"]},{"name":"val embeds: Optional<List<EmbedRequest>>","description":"dev.kord.rest.json.request.InteractionApplicationCommandCallbackData.embeds","location":"rest/dev.kord.rest.json.request/-interaction-application-command-callback-data/embeds.html","searchKeys":["embeds","val embeds: Optional<List<EmbedRequest>>","dev.kord.rest.json.request.InteractionApplicationCommandCallbackData.embeds"]},{"name":"val embeds: Optional<List<EmbedRequest>>","description":"dev.kord.rest.json.request.MessageCreateRequest.embeds","location":"rest/dev.kord.rest.json.request/-message-create-request/embeds.html","searchKeys":["embeds","val embeds: Optional<List<EmbedRequest>>","dev.kord.rest.json.request.MessageCreateRequest.embeds"]},{"name":"val embeds: Optional<List<EmbedRequest>>","description":"dev.kord.rest.json.request.WebhookEditMessageRequest.embeds","location":"rest/dev.kord.rest.json.request/-webhook-edit-message-request/embeds.html","searchKeys":["embeds","val embeds: Optional<List<EmbedRequest>>","dev.kord.rest.json.request.WebhookEditMessageRequest.embeds"]},{"name":"val embeds: Optional<List<EmbedRequest>>","description":"dev.kord.rest.json.request.WebhookExecuteRequest.embeds","location":"rest/dev.kord.rest.json.request/-webhook-execute-request/embeds.html","searchKeys":["embeds","val embeds: Optional<List<EmbedRequest>>","dev.kord.rest.json.request.WebhookExecuteRequest.embeds"]},{"name":"val embeds: Optional<List<EmbedRequest>?>","description":"dev.kord.rest.json.request.FollowupMessageModifyRequest.embeds","location":"rest/dev.kord.rest.json.request/-followup-message-modify-request/embeds.html","searchKeys":["embeds","val embeds: Optional<List<EmbedRequest>?>","dev.kord.rest.json.request.FollowupMessageModifyRequest.embeds"]},{"name":"val embeds: Optional<List<EmbedRequest>?>","description":"dev.kord.rest.json.request.InteractionResponseModifyRequest.embeds","location":"rest/dev.kord.rest.json.request/-interaction-response-modify-request/embeds.html","searchKeys":["embeds","val embeds: Optional<List<EmbedRequest>?>","dev.kord.rest.json.request.InteractionResponseModifyRequest.embeds"]},{"name":"val embeds: Optional<List<EmbedRequest>?>","description":"dev.kord.rest.json.request.MessageEditPatchRequest.embeds","location":"rest/dev.kord.rest.json.request/-message-edit-patch-request/embeds.html","searchKeys":["embeds","val embeds: Optional<List<EmbedRequest>?>","dev.kord.rest.json.request.MessageEditPatchRequest.embeds"]},{"name":"val emoji: EmojiService","description":"dev.kord.rest.service.RestClient.emoji","location":"rest/dev.kord.rest.service/-rest-client/emoji.html","searchKeys":["emoji","val emoji: EmojiService","dev.kord.rest.service.RestClient.emoji"]},{"name":"val emoticons: OptionalBoolean","description":"dev.kord.rest.json.request.GuildIntegrationModifyRequest.emoticons","location":"rest/dev.kord.rest.json.request/-guild-integration-modify-request/emoticons.html","searchKeys":["emoticons","val emoticons: OptionalBoolean","dev.kord.rest.json.request.GuildIntegrationModifyRequest.emoticons"]},{"name":"val enabled: OptionalBoolean","description":"dev.kord.rest.json.request.AutoModerationRuleCreateRequest.enabled","location":"rest/dev.kord.rest.json.request/-auto-moderation-rule-create-request/enabled.html","searchKeys":["enabled","val enabled: OptionalBoolean","dev.kord.rest.json.request.AutoModerationRuleCreateRequest.enabled"]},{"name":"val enabled: OptionalBoolean","description":"dev.kord.rest.json.request.AutoModerationRuleModifyRequest.enabled","location":"rest/dev.kord.rest.json.request/-auto-moderation-rule-modify-request/enabled.html","searchKeys":["enabled","val enabled: OptionalBoolean","dev.kord.rest.json.request.AutoModerationRuleModifyRequest.enabled"]},{"name":"val enabled: OptionalBoolean","description":"dev.kord.rest.json.request.GuildWelcomeScreenModifyRequest.enabled","location":"rest/dev.kord.rest.json.request/-guild-welcome-screen-modify-request/enabled.html","searchKeys":["enabled","val enabled: OptionalBoolean","dev.kord.rest.json.request.GuildWelcomeScreenModifyRequest.enabled"]},{"name":"val enabled: OptionalBoolean","description":"dev.kord.rest.json.request.GuildWidgetModifyRequest.enabled","location":"rest/dev.kord.rest.json.request/-guild-widget-modify-request/enabled.html","searchKeys":["enabled","val enabled: OptionalBoolean","dev.kord.rest.json.request.GuildWidgetModifyRequest.enabled"]},{"name":"val entityMetadata: Optional<GuildScheduledEventEntityMetadata>","description":"dev.kord.rest.json.request.GuildScheduledEventCreateRequest.entityMetadata","location":"rest/dev.kord.rest.json.request/-guild-scheduled-event-create-request/entity-metadata.html","searchKeys":["entityMetadata","val entityMetadata: Optional<GuildScheduledEventEntityMetadata>","dev.kord.rest.json.request.GuildScheduledEventCreateRequest.entityMetadata"]},{"name":"val entityMetadata: Optional<GuildScheduledEventEntityMetadata?>","description":"dev.kord.rest.json.request.ScheduledEventModifyRequest.entityMetadata","location":"rest/dev.kord.rest.json.request/-scheduled-event-modify-request/entity-metadata.html","searchKeys":["entityMetadata","val entityMetadata: Optional<GuildScheduledEventEntityMetadata?>","dev.kord.rest.json.request.ScheduledEventModifyRequest.entityMetadata"]},{"name":"val entityType: Optional<ScheduledEntityType>","description":"dev.kord.rest.json.request.ScheduledEventModifyRequest.entityType","location":"rest/dev.kord.rest.json.request/-scheduled-event-modify-request/entity-type.html","searchKeys":["entityType","val entityType: Optional<ScheduledEntityType>","dev.kord.rest.json.request.ScheduledEventModifyRequest.entityType"]},{"name":"val entityType: ScheduledEntityType","description":"dev.kord.rest.json.request.GuildScheduledEventCreateRequest.entityType","location":"rest/dev.kord.rest.json.request/-guild-scheduled-event-create-request/entity-type.html","searchKeys":["entityType","val entityType: ScheduledEntityType","dev.kord.rest.json.request.GuildScheduledEventCreateRequest.entityType"]},{"name":"val ephemeral: Boolean","description":"dev.kord.rest.builder.message.create.FollowupMessageCreateBuilder.ephemeral","location":"rest/dev.kord.rest.builder.message.create/-followup-message-create-builder/ephemeral.html","searchKeys":["ephemeral","val ephemeral: Boolean","dev.kord.rest.builder.message.create.FollowupMessageCreateBuilder.ephemeral"]},{"name":"val ephemeral: Boolean = false","description":"dev.kord.rest.builder.message.create.InteractionResponseCreateBuilder.ephemeral","location":"rest/dev.kord.rest.builder.message.create/-interaction-response-create-builder/ephemeral.html","searchKeys":["ephemeral","val ephemeral: Boolean = false","dev.kord.rest.builder.message.create.InteractionResponseCreateBuilder.ephemeral"]},{"name":"val error: DiscordErrorResponse? = null","description":"dev.kord.rest.request.RestRequestException.error","location":"rest/dev.kord.rest.request/-rest-request-exception/error.html","searchKeys":["error","val error: DiscordErrorResponse? = null","dev.kord.rest.request.RestRequestException.error"]},{"name":"val errors: JsonElement? = null","description":"dev.kord.rest.json.response.DiscordErrorResponse.errors","location":"rest/dev.kord.rest.json.response/-discord-error-response/errors.html","searchKeys":["errors","val errors: JsonElement? = null","dev.kord.rest.json.response.DiscordErrorResponse.errors"]},{"name":"val eventType: AutoModerationRuleEventType","description":"dev.kord.rest.json.request.AutoModerationRuleCreateRequest.eventType","location":"rest/dev.kord.rest.json.request/-auto-moderation-rule-create-request/event-type.html","searchKeys":["eventType","val eventType: AutoModerationRuleEventType","dev.kord.rest.json.request.AutoModerationRuleCreateRequest.eventType"]},{"name":"val eventType: Optional<AutoModerationRuleEventType>","description":"dev.kord.rest.json.request.AutoModerationRuleModifyRequest.eventType","location":"rest/dev.kord.rest.json.request/-auto-moderation-rule-modify-request/event-type.html","searchKeys":["eventType","val eventType: Optional<AutoModerationRuleEventType>","dev.kord.rest.json.request.AutoModerationRuleModifyRequest.eventType"]},{"name":"val exemptChannels: Optional<List<Snowflake>>","description":"dev.kord.rest.json.request.AutoModerationRuleCreateRequest.exemptChannels","location":"rest/dev.kord.rest.json.request/-auto-moderation-rule-create-request/exempt-channels.html","searchKeys":["exemptChannels","val exemptChannels: Optional<List<Snowflake>>","dev.kord.rest.json.request.AutoModerationRuleCreateRequest.exemptChannels"]},{"name":"val exemptChannels: Optional<List<Snowflake>>","description":"dev.kord.rest.json.request.AutoModerationRuleModifyRequest.exemptChannels","location":"rest/dev.kord.rest.json.request/-auto-moderation-rule-modify-request/exempt-channels.html","searchKeys":["exemptChannels","val exemptChannels: Optional<List<Snowflake>>","dev.kord.rest.json.request.AutoModerationRuleModifyRequest.exemptChannels"]},{"name":"val exemptRoles: Optional<List<Snowflake>>","description":"dev.kord.rest.json.request.AutoModerationRuleCreateRequest.exemptRoles","location":"rest/dev.kord.rest.json.request/-auto-moderation-rule-create-request/exempt-roles.html","searchKeys":["exemptRoles","val exemptRoles: Optional<List<Snowflake>>","dev.kord.rest.json.request.AutoModerationRuleCreateRequest.exemptRoles"]},{"name":"val exemptRoles: Optional<List<Snowflake>>","description":"dev.kord.rest.json.request.AutoModerationRuleModifyRequest.exemptRoles","location":"rest/dev.kord.rest.json.request/-auto-moderation-rule-modify-request/exempt-roles.html","searchKeys":["exemptRoles","val exemptRoles: Optional<List<Snowflake>>","dev.kord.rest.json.request.AutoModerationRuleModifyRequest.exemptRoles"]},{"name":"val expireBehavior: Optional<IntegrationExpireBehavior>","description":"dev.kord.rest.json.request.GuildIntegrationModifyRequest.expireBehavior","location":"rest/dev.kord.rest.json.request/-guild-integration-modify-request/expire-behavior.html","searchKeys":["expireBehavior","val expireBehavior: Optional<IntegrationExpireBehavior>","dev.kord.rest.json.request.GuildIntegrationModifyRequest.expireBehavior"]},{"name":"val expirePeriod: OptionalInt?","description":"dev.kord.rest.json.request.GuildIntegrationModifyRequest.expirePeriod","location":"rest/dev.kord.rest.json.request/-guild-integration-modify-request/expire-period.html","searchKeys":["expirePeriod","val expirePeriod: OptionalInt?","dev.kord.rest.json.request.GuildIntegrationModifyRequest.expirePeriod"]},{"name":"val explicitContentFilter: Optional<ExplicitContentFilter>","description":"dev.kord.rest.json.request.GuildCreateRequest.explicitContentFilter","location":"rest/dev.kord.rest.json.request/-guild-create-request/explicit-content-filter.html","searchKeys":["explicitContentFilter","val explicitContentFilter: Optional<ExplicitContentFilter>","dev.kord.rest.json.request.GuildCreateRequest.explicitContentFilter"]},{"name":"val extension: String","description":"dev.kord.rest.Image.Format.extension","location":"rest/dev.kord.rest/-image/-format/extension.html","searchKeys":["extension","val extension: String","dev.kord.rest.Image.Format.extension"]},{"name":"val extensions: List<String>","description":"dev.kord.rest.Image.Format.extensions","location":"rest/dev.kord.rest/-image/-format/extensions.html","searchKeys":["extensions","val extensions: List<String>","dev.kord.rest.Image.Format.extensions"]},{"name":"val fields: Optional<List<EmbedFieldRequest>>","description":"dev.kord.rest.json.request.EmbedRequest.fields","location":"rest/dev.kord.rest.json.request/-embed-request/fields.html","searchKeys":["fields","val fields: Optional<List<EmbedFieldRequest>>","dev.kord.rest.json.request.EmbedRequest.fields"]},{"name":"val file: NamedFile","description":"dev.kord.rest.json.request.MultipartGuildStickerCreateRequest.file","location":"rest/dev.kord.rest.json.request/-multipart-guild-sticker-create-request/file.html","searchKeys":["file","val file: NamedFile","dev.kord.rest.json.request.MultipartGuildStickerCreateRequest.file"]},{"name":"val files: List<NamedFile>","description":"dev.kord.rest.json.request.MultiPartWebhookExecuteRequest.files","location":"rest/dev.kord.rest.json.request/-multi-part-webhook-execute-request/files.html","searchKeys":["files","val files: List<NamedFile>","dev.kord.rest.json.request.MultiPartWebhookExecuteRequest.files"]},{"name":"val files: List<NamedFile>","description":"dev.kord.rest.json.request.MultipartFollowupMessageCreateRequest.files","location":"rest/dev.kord.rest.json.request/-multipart-followup-message-create-request/files.html","searchKeys":["files","val files: List<NamedFile>","dev.kord.rest.json.request.MultipartFollowupMessageCreateRequest.files"]},{"name":"val files: List<NamedFile>","description":"dev.kord.rest.json.request.MultipartMessageCreateRequest.files","location":"rest/dev.kord.rest.json.request/-multipart-message-create-request/files.html","searchKeys":["files","val files: List<NamedFile>","dev.kord.rest.json.request.MultipartMessageCreateRequest.files"]},{"name":"val files: Optional<List<NamedFile>>","description":"dev.kord.rest.json.request.MultipartFollowupMessageModifyRequest.files","location":"rest/dev.kord.rest.json.request/-multipart-followup-message-modify-request/files.html","searchKeys":["files","val files: Optional<List<NamedFile>>","dev.kord.rest.json.request.MultipartFollowupMessageModifyRequest.files"]},{"name":"val files: Optional<List<NamedFile>>","description":"dev.kord.rest.json.request.MultipartInteractionResponseCreateRequest.files","location":"rest/dev.kord.rest.json.request/-multipart-interaction-response-create-request/files.html","searchKeys":["files","val files: Optional<List<NamedFile>>","dev.kord.rest.json.request.MultipartInteractionResponseCreateRequest.files"]},{"name":"val files: Optional<List<NamedFile>>","description":"dev.kord.rest.json.request.MultipartInteractionResponseModifyRequest.files","location":"rest/dev.kord.rest.json.request/-multipart-interaction-response-modify-request/files.html","searchKeys":["files","val files: Optional<List<NamedFile>>","dev.kord.rest.json.request.MultipartInteractionResponseModifyRequest.files"]},{"name":"val files: Optional<List<NamedFile>>","description":"dev.kord.rest.json.request.MultipartMessagePatchRequest.files","location":"rest/dev.kord.rest.json.request/-multipart-message-patch-request/files.html","searchKeys":["files","val files: Optional<List<NamedFile>>","dev.kord.rest.json.request.MultipartMessagePatchRequest.files"]},{"name":"val files: Optional<List<NamedFile>>","description":"dev.kord.rest.json.request.MultipartWebhookEditMessageRequest.files","location":"rest/dev.kord.rest.json.request/-multipart-webhook-edit-message-request/files.html","searchKeys":["files","val files: Optional<List<NamedFile>>","dev.kord.rest.json.request.MultipartWebhookEditMessageRequest.files"]},{"name":"val flags: Optional<MessageFlags>","description":"dev.kord.rest.json.request.FollowupMessageCreateRequest.flags","location":"rest/dev.kord.rest.json.request/-followup-message-create-request/flags.html","searchKeys":["flags","val flags: Optional<MessageFlags>","dev.kord.rest.json.request.FollowupMessageCreateRequest.flags"]},{"name":"val flags: Optional<MessageFlags>","description":"dev.kord.rest.json.request.InteractionApplicationCommandCallbackData.flags","location":"rest/dev.kord.rest.json.request/-interaction-application-command-callback-data/flags.html","searchKeys":["flags","val flags: Optional<MessageFlags>","dev.kord.rest.json.request.InteractionApplicationCommandCallbackData.flags"]},{"name":"val flags: Optional<MessageFlags?>","description":"dev.kord.rest.json.request.InteractionResponseModifyRequest.flags","location":"rest/dev.kord.rest.json.request/-interaction-response-modify-request/flags.html","searchKeys":["flags","val flags: Optional<MessageFlags?>","dev.kord.rest.json.request.InteractionResponseModifyRequest.flags"]},{"name":"val flags: Optional<MessageFlags?>","description":"dev.kord.rest.json.request.MessageEditPatchRequest.flags","location":"rest/dev.kord.rest.json.request/-message-edit-patch-request/flags.html","searchKeys":["flags","val flags: Optional<MessageFlags?>","dev.kord.rest.json.request.MessageEditPatchRequest.flags"]},{"name":"val footer: Optional<EmbedFooterRequest>","description":"dev.kord.rest.json.request.EmbedRequest.footer","location":"rest/dev.kord.rest.json.request/-embed-request/footer.html","searchKeys":["footer","val footer: Optional<EmbedFooterRequest>","dev.kord.rest.json.request.EmbedRequest.footer"]},{"name":"val format: Image.Format","description":"dev.kord.rest.Image.format","location":"rest/dev.kord.rest/-image/format.html","searchKeys":["format","val format: Image.Format","dev.kord.rest.Image.format"]},{"name":"val friendSync: Boolean","description":"dev.kord.rest.json.response.Connection.friendSync","location":"rest/dev.kord.rest.json.response/-connection/friend-sync.html","searchKeys":["friendSync","val friendSync: Boolean","dev.kord.rest.json.response.Connection.friendSync"]},{"name":"val guild: GuildService","description":"dev.kord.rest.service.RestClient.guild","location":"rest/dev.kord.rest.service/-rest-client/guild.html","searchKeys":["guild","val guild: GuildService","dev.kord.rest.service.RestClient.guild"]},{"name":"val guildScheduledEventId: Snowflake","description":"dev.kord.rest.json.request.GuildScheduledEventUsersResponse.guildScheduledEventId","location":"rest/dev.kord.rest.json.request/-guild-scheduled-event-users-response/guild-scheduled-event-id.html","searchKeys":["guildScheduledEventId","val guildScheduledEventId: Snowflake","dev.kord.rest.json.request.GuildScheduledEventUsersResponse.guildScheduledEventId"]},{"name":"val hoist: OptionalBoolean","description":"dev.kord.rest.json.request.GuildRoleCreateRequest.hoist","location":"rest/dev.kord.rest.json.request/-guild-role-create-request/hoist.html","searchKeys":["hoist","val hoist: OptionalBoolean","dev.kord.rest.json.request.GuildRoleCreateRequest.hoist"]},{"name":"val hoist: OptionalBoolean?","description":"dev.kord.rest.json.request.GuildRoleModifyRequest.hoist","location":"rest/dev.kord.rest.json.request/-guild-role-modify-request/hoist.html","searchKeys":["hoist","val hoist: OptionalBoolean?","dev.kord.rest.json.request.GuildRoleModifyRequest.hoist"]},{"name":"val httpResponse: HttpResponse","description":"dev.kord.rest.request.KtorRequestException.httpResponse","location":"rest/dev.kord.rest.request/-ktor-request-exception/http-response.html","searchKeys":["httpResponse","val httpResponse: HttpResponse","dev.kord.rest.request.KtorRequestException.httpResponse"]},{"name":"val icon: Optional<String>","description":"dev.kord.rest.json.request.GuildCreateRequest.icon","location":"rest/dev.kord.rest.json.request/-guild-create-request/icon.html","searchKeys":["icon","val icon: Optional<String>","dev.kord.rest.json.request.GuildCreateRequest.icon"]},{"name":"val icon: Optional<String?>","description":"dev.kord.rest.json.request.GuildModifyRequest.icon","location":"rest/dev.kord.rest.json.request/-guild-modify-request/icon.html","searchKeys":["icon","val icon: Optional<String?>","dev.kord.rest.json.request.GuildModifyRequest.icon"]},{"name":"val icon: Optional<String?>","description":"dev.kord.rest.json.request.GuildRoleCreateRequest.icon","location":"rest/dev.kord.rest.json.request/-guild-role-create-request/icon.html","searchKeys":["icon","val icon: Optional<String?>","dev.kord.rest.json.request.GuildRoleCreateRequest.icon"]},{"name":"val icon: Optional<String?>","description":"dev.kord.rest.json.request.GuildRoleModifyRequest.icon","location":"rest/dev.kord.rest.json.request/-guild-role-modify-request/icon.html","searchKeys":["icon","val icon: Optional<String?>","dev.kord.rest.json.request.GuildRoleModifyRequest.icon"]},{"name":"val iconUrl: Optional<String>","description":"dev.kord.rest.json.request.EmbedAuthorRequest.iconUrl","location":"rest/dev.kord.rest.json.request/-embed-author-request/icon-url.html","searchKeys":["iconUrl","val iconUrl: Optional<String>","dev.kord.rest.json.request.EmbedAuthorRequest.iconUrl"]},{"name":"val iconUrl: String? = null","description":"dev.kord.rest.json.request.EmbedFooterRequest.iconUrl","location":"rest/dev.kord.rest.json.request/-embed-footer-request/icon-url.html","searchKeys":["iconUrl","val iconUrl: String? = null","dev.kord.rest.json.request.EmbedFooterRequest.iconUrl"]},{"name":"val id: OptionalSnowflake","description":"dev.kord.rest.json.request.GuildChannelCreateRequest.id","location":"rest/dev.kord.rest.json.request/-guild-channel-create-request/id.html","searchKeys":["id","val id: OptionalSnowflake","dev.kord.rest.json.request.GuildChannelCreateRequest.id"]},{"name":"val id: OptionalSnowflake","description":"dev.kord.rest.json.request.GuildRoleCreateRequest.id","location":"rest/dev.kord.rest.json.request/-guild-role-create-request/id.html","searchKeys":["id","val id: OptionalSnowflake","dev.kord.rest.json.request.GuildRoleCreateRequest.id"]},{"name":"val id: Snowflake","description":"dev.kord.rest.json.request.ChannelPositionSwapRequest.id","location":"rest/dev.kord.rest.json.request/-channel-position-swap-request/id.html","searchKeys":["id","val id: Snowflake","dev.kord.rest.json.request.ChannelPositionSwapRequest.id"]},{"name":"val id: String","description":"dev.kord.rest.json.request.GuildIntegrationCreateRequest.id","location":"rest/dev.kord.rest.json.request/-guild-integration-create-request/id.html","searchKeys":["id","val id: String","dev.kord.rest.json.request.GuildIntegrationCreateRequest.id"]},{"name":"val id: String","description":"dev.kord.rest.json.response.Connection.id","location":"rest/dev.kord.rest.json.response/-connection/id.html","searchKeys":["id","val id: String","dev.kord.rest.json.response.Connection.id"]},{"name":"val identifier: String","description":"dev.kord.rest.route.Route.Key.identifier","location":"rest/dev.kord.rest.route/-route/-key/identifier.html","searchKeys":["identifier","val identifier: String","dev.kord.rest.route.Route.Key.identifier"]},{"name":"val image: Optional<EmbedImageRequest>","description":"dev.kord.rest.json.request.EmbedRequest.image","location":"rest/dev.kord.rest.json.request/-embed-request/image.html","searchKeys":["image","val image: Optional<EmbedImageRequest>","dev.kord.rest.json.request.EmbedRequest.image"]},{"name":"val image: Optional<String>","description":"dev.kord.rest.json.request.GuildFromTemplateCreateRequest.image","location":"rest/dev.kord.rest.json.request/-guild-from-template-create-request/image.html","searchKeys":["image","val image: Optional<String>","dev.kord.rest.json.request.GuildFromTemplateCreateRequest.image"]},{"name":"val image: Optional<String>","description":"dev.kord.rest.json.request.GuildScheduledEventCreateRequest.image","location":"rest/dev.kord.rest.json.request/-guild-scheduled-event-create-request/image.html","searchKeys":["image","val image: Optional<String>","dev.kord.rest.json.request.GuildScheduledEventCreateRequest.image"]},{"name":"val image: Optional<String>","description":"dev.kord.rest.json.request.ScheduledEventModifyRequest.image","location":"rest/dev.kord.rest.json.request/-scheduled-event-modify-request/image.html","searchKeys":["image","val image: Optional<String>","dev.kord.rest.json.request.ScheduledEventModifyRequest.image"]},{"name":"val image: String","description":"dev.kord.rest.json.request.EmojiCreateRequest.image","location":"rest/dev.kord.rest.json.request/-emoji-create-request/image.html","searchKeys":["image","val image: String","dev.kord.rest.json.request.EmojiCreateRequest.image"]},{"name":"val inline: OptionalBoolean","description":"dev.kord.rest.json.request.EmbedFieldRequest.inline","location":"rest/dev.kord.rest.json.request/-embed-field-request/inline.html","searchKeys":["inline","val inline: OptionalBoolean","dev.kord.rest.json.request.EmbedFieldRequest.inline"]},{"name":"val integrations: List<DiscordGuildIntegrations>","description":"dev.kord.rest.json.response.Connection.integrations","location":"rest/dev.kord.rest.json.response/-connection/integrations.html","searchKeys":["integrations","val integrations: List<DiscordGuildIntegrations>","dev.kord.rest.json.response.Connection.integrations"]},{"name":"val interaction: InteractionService","description":"dev.kord.rest.service.RestClient.interaction","location":"rest/dev.kord.rest.service/-rest-client/interaction.html","searchKeys":["interaction","val interaction: InteractionService","dev.kord.rest.service.RestClient.interaction"]},{"name":"val invitable: OptionalBoolean","description":"dev.kord.rest.json.request.ChannelModifyPatchRequest.invitable","location":"rest/dev.kord.rest.json.request/-channel-modify-patch-request/invitable.html","searchKeys":["invitable","val invitable: OptionalBoolean","dev.kord.rest.json.request.ChannelModifyPatchRequest.invitable"]},{"name":"val invitable: OptionalBoolean","description":"dev.kord.rest.json.request.StartThreadRequest.invitable","location":"rest/dev.kord.rest.json.request/-start-thread-request/invitable.html","searchKeys":["invitable","val invitable: OptionalBoolean","dev.kord.rest.json.request.StartThreadRequest.invitable"]},{"name":"val invite: InviteService","description":"dev.kord.rest.service.RestClient.invite","location":"rest/dev.kord.rest.service/-rest-client/invite.html","searchKeys":["invite","val invite: InviteService","dev.kord.rest.service.RestClient.invite"]},{"name":"val isExhausted: Boolean","description":"dev.kord.rest.ratelimit.RateLimit.isExhausted","location":"rest/dev.kord.rest.ratelimit/-rate-limit/is-exhausted.html","searchKeys":["isExhausted","val isExhausted: Boolean","dev.kord.rest.ratelimit.RateLimit.isExhausted"]},{"name":"val isMajor: Boolean = false","description":"dev.kord.rest.route.Route.Key.isMajor","location":"rest/dev.kord.rest.route/-route/-key/is-major.html","searchKeys":["isMajor","val isMajor: Boolean = false","dev.kord.rest.route.Route.Key.isMajor"]},{"name":"val keys: MutableMap<Route.Key, String>","description":"dev.kord.rest.request.RequestBuilder.keys","location":"rest/dev.kord.rest.request/-request-builder/keys.html","searchKeys":["keys","val keys: MutableMap<Route.Key, String>","dev.kord.rest.request.RequestBuilder.keys"]},{"name":"val level: MFALevel","description":"dev.kord.rest.json.request.GuildMFALevelModifyRequest.level","location":"rest/dev.kord.rest.json.request/-guild-m-f-a-level-modify-request/level.html","searchKeys":["level","val level: MFALevel","dev.kord.rest.json.request.GuildMFALevelModifyRequest.level"]},{"name":"val level: MFALevel","description":"dev.kord.rest.json.response.GuildMFALevelModifyResponse.level","location":"rest/dev.kord.rest.json.response/-guild-m-f-a-level-modify-response/level.html","searchKeys":["level","val level: MFALevel","dev.kord.rest.json.response.GuildMFALevelModifyResponse.level"]},{"name":"val limit: Int? = null","description":"dev.kord.rest.json.request.AuditLogGetRequest.limit","location":"rest/dev.kord.rest.json.request/-audit-log-get-request/limit.html","searchKeys":["limit","val limit: Int? = null","dev.kord.rest.json.request.AuditLogGetRequest.limit"]},{"name":"val limit: Int? = null","description":"dev.kord.rest.json.request.ListThreadsBySnowflakeRequest.limit","location":"rest/dev.kord.rest.json.request/-list-threads-by-snowflake-request/limit.html","searchKeys":["limit","val limit: Int? = null","dev.kord.rest.json.request.ListThreadsBySnowflakeRequest.limit"]},{"name":"val limit: Int? = null","description":"dev.kord.rest.json.request.ListThreadsByTimestampRequest.limit","location":"rest/dev.kord.rest.json.request/-list-threads-by-timestamp-request/limit.html","searchKeys":["limit","val limit: Int? = null","dev.kord.rest.json.request.ListThreadsByTimestampRequest.limit"]},{"name":"val lockPermissions: Boolean?","description":"dev.kord.rest.json.request.ChannelPositionSwapRequest.lockPermissions","location":"rest/dev.kord.rest.json.request/-channel-position-swap-request/lock-permissions.html","searchKeys":["lockPermissions","val lockPermissions: Boolean?","dev.kord.rest.json.request.ChannelPositionSwapRequest.lockPermissions"]},{"name":"val locked: OptionalBoolean","description":"dev.kord.rest.json.request.ChannelModifyPatchRequest.locked","location":"rest/dev.kord.rest.json.request/-channel-modify-patch-request/locked.html","searchKeys":["locked","val locked: OptionalBoolean","dev.kord.rest.json.request.ChannelModifyPatchRequest.locked"]},{"name":"val mapper: ResponseMapper<T>","description":"dev.kord.rest.route.Route.mapper","location":"rest/dev.kord.rest.route/-route/mapper.html","searchKeys":["mapper","val mapper: ResponseMapper<T>","dev.kord.rest.route.Route.mapper"]},{"name":"val maxAge: Optional<DurationInSeconds>","description":"dev.kord.rest.json.request.InviteCreateRequest.maxAge","location":"rest/dev.kord.rest.json.request/-invite-create-request/max-age.html","searchKeys":["maxAge","val maxAge: Optional<DurationInSeconds>","dev.kord.rest.json.request.InviteCreateRequest.maxAge"]},{"name":"val maxConcurrency: Int","description":"dev.kord.rest.json.response.SessionStartLimitResponse.maxConcurrency","location":"rest/dev.kord.rest.json.response/-session-start-limit-response/max-concurrency.html","searchKeys":["maxConcurrency","val maxConcurrency: Int","dev.kord.rest.json.response.SessionStartLimitResponse.maxConcurrency"]},{"name":"val maxRes: Int","description":"dev.kord.rest.Image.Size.maxRes","location":"rest/dev.kord.rest/-image/-size/max-res.html","searchKeys":["maxRes","val maxRes: Int","dev.kord.rest.Image.Size.maxRes"]},{"name":"val maxUses: OptionalInt","description":"dev.kord.rest.json.request.InviteCreateRequest.maxUses","location":"rest/dev.kord.rest.json.request/-invite-create-request/max-uses.html","searchKeys":["maxUses","val maxUses: OptionalInt","dev.kord.rest.json.request.InviteCreateRequest.maxUses"]},{"name":"val member: Optional<DiscordGuildMember>","description":"dev.kord.rest.json.request.GuildScheduledEventUsersResponse.member","location":"rest/dev.kord.rest.json.request/-guild-scheduled-event-users-response/member.html","searchKeys":["member","val member: Optional<DiscordGuildMember>","dev.kord.rest.json.request.GuildScheduledEventUsersResponse.member"]},{"name":"val members: List<DiscordThreadMember>","description":"dev.kord.rest.json.response.ListThreadsResponse.members","location":"rest/dev.kord.rest.json.response/-list-threads-response/members.html","searchKeys":["members","val members: List<DiscordThreadMember>","dev.kord.rest.json.response.ListThreadsResponse.members"]},{"name":"val mentionable: OptionalBoolean","description":"dev.kord.rest.json.request.GuildRoleCreateRequest.mentionable","location":"rest/dev.kord.rest.json.request/-guild-role-create-request/mentionable.html","searchKeys":["mentionable","val mentionable: OptionalBoolean","dev.kord.rest.json.request.GuildRoleCreateRequest.mentionable"]},{"name":"val mentionable: OptionalBoolean?","description":"dev.kord.rest.json.request.GuildRoleModifyRequest.mentionable","location":"rest/dev.kord.rest.json.request/-guild-role-modify-request/mentionable.html","searchKeys":["mentionable","val mentionable: OptionalBoolean?","dev.kord.rest.json.request.GuildRoleModifyRequest.mentionable"]},{"name":"val message: String","description":"dev.kord.rest.request.HttpStatus.message","location":"rest/dev.kord.rest.request/-http-status/message.html","searchKeys":["message","val message: String","dev.kord.rest.request.HttpStatus.message"]},{"name":"val message: String? = null","description":"dev.kord.rest.json.response.DiscordErrorResponse.message","location":"rest/dev.kord.rest.json.response/-discord-error-response/message.html","searchKeys":["message","val message: String? = null","dev.kord.rest.json.response.DiscordErrorResponse.message"]},{"name":"val messageReference: Optional<DiscordMessageReference>","description":"dev.kord.rest.json.request.MessageCreateRequest.messageReference","location":"rest/dev.kord.rest.json.request/-message-create-request/message-reference.html","searchKeys":["messageReference","val messageReference: Optional<DiscordMessageReference>","dev.kord.rest.json.request.MessageCreateRequest.messageReference"]},{"name":"val messages: List<Snowflake>","description":"dev.kord.rest.json.request.BulkDeleteRequest.messages","location":"rest/dev.kord.rest.json.request/-bulk-delete-request/messages.html","searchKeys":["messages","val messages: List<Snowflake>","dev.kord.rest.json.request.BulkDeleteRequest.messages"]},{"name":"val method: HttpMethod","description":"dev.kord.rest.route.Route.method","location":"rest/dev.kord.rest.route/-route/method.html","searchKeys":["method","val method: HttpMethod","dev.kord.rest.route.Route.method"]},{"name":"val mute: OptionalBoolean","description":"dev.kord.rest.json.request.GuildMemberAddRequest.mute","location":"rest/dev.kord.rest.json.request/-guild-member-add-request/mute.html","searchKeys":["mute","val mute: OptionalBoolean","dev.kord.rest.json.request.GuildMemberAddRequest.mute"]},{"name":"val mute: OptionalBoolean?","description":"dev.kord.rest.json.request.GuildMemberModifyRequest.mute","location":"rest/dev.kord.rest.json.request/-guild-member-modify-request/mute.html","searchKeys":["mute","val mute: OptionalBoolean?","dev.kord.rest.json.request.GuildMemberModifyRequest.mute"]},{"name":"val name: Optional<String>","description":"dev.kord.rest.json.request.ApplicationCommandModifyRequest.name","location":"rest/dev.kord.rest.json.request/-application-command-modify-request/name.html","searchKeys":["name","val name: Optional<String>","dev.kord.rest.json.request.ApplicationCommandModifyRequest.name"]},{"name":"val name: Optional<String>","description":"dev.kord.rest.json.request.AutoModerationRuleModifyRequest.name","location":"rest/dev.kord.rest.json.request/-auto-moderation-rule-modify-request/name.html","searchKeys":["name","val name: Optional<String>","dev.kord.rest.json.request.AutoModerationRuleModifyRequest.name"]},{"name":"val name: Optional<String>","description":"dev.kord.rest.json.request.ChannelModifyPatchRequest.name","location":"rest/dev.kord.rest.json.request/-channel-modify-patch-request/name.html","searchKeys":["name","val name: Optional<String>","dev.kord.rest.json.request.ChannelModifyPatchRequest.name"]},{"name":"val name: Optional<String>","description":"dev.kord.rest.json.request.EmbedAuthorRequest.name","location":"rest/dev.kord.rest.json.request/-embed-author-request/name.html","searchKeys":["name","val name: Optional<String>","dev.kord.rest.json.request.EmbedAuthorRequest.name"]},{"name":"val name: Optional<String>","description":"dev.kord.rest.json.request.EmojiModifyRequest.name","location":"rest/dev.kord.rest.json.request/-emoji-modify-request/name.html","searchKeys":["name","val name: Optional<String>","dev.kord.rest.json.request.EmojiModifyRequest.name"]},{"name":"val name: Optional<String>","description":"dev.kord.rest.json.request.GuildModifyRequest.name","location":"rest/dev.kord.rest.json.request/-guild-modify-request/name.html","searchKeys":["name","val name: Optional<String>","dev.kord.rest.json.request.GuildModifyRequest.name"]},{"name":"val name: Optional<String>","description":"dev.kord.rest.json.request.GuildRoleCreateRequest.name","location":"rest/dev.kord.rest.json.request/-guild-role-create-request/name.html","searchKeys":["name","val name: Optional<String>","dev.kord.rest.json.request.GuildRoleCreateRequest.name"]},{"name":"val name: Optional<String>","description":"dev.kord.rest.json.request.GuildStickerModifyRequest.name","location":"rest/dev.kord.rest.json.request/-guild-sticker-modify-request/name.html","searchKeys":["name","val name: Optional<String>","dev.kord.rest.json.request.GuildStickerModifyRequest.name"]},{"name":"val name: Optional<String>","description":"dev.kord.rest.json.request.GuildTemplateModifyRequest.name","location":"rest/dev.kord.rest.json.request/-guild-template-modify-request/name.html","searchKeys":["name","val name: Optional<String>","dev.kord.rest.json.request.GuildTemplateModifyRequest.name"]},{"name":"val name: Optional<String>","description":"dev.kord.rest.json.request.ScheduledEventModifyRequest.name","location":"rest/dev.kord.rest.json.request/-scheduled-event-modify-request/name.html","searchKeys":["name","val name: Optional<String>","dev.kord.rest.json.request.ScheduledEventModifyRequest.name"]},{"name":"val name: Optional<String>","description":"dev.kord.rest.json.request.WebhookModifyRequest.name","location":"rest/dev.kord.rest.json.request/-webhook-modify-request/name.html","searchKeys":["name","val name: Optional<String>","dev.kord.rest.json.request.WebhookModifyRequest.name"]},{"name":"val name: Optional<String?>","description":"dev.kord.rest.json.request.GuildRoleModifyRequest.name","location":"rest/dev.kord.rest.json.request/-guild-role-modify-request/name.html","searchKeys":["name","val name: Optional<String?>","dev.kord.rest.json.request.GuildRoleModifyRequest.name"]},{"name":"val name: String","description":"dev.kord.rest.NamedFile.name","location":"rest/dev.kord.rest/-named-file/name.html","searchKeys":["name","val name: String","dev.kord.rest.NamedFile.name"]},{"name":"val name: String","description":"dev.kord.rest.json.request.ApplicationCommandCreateRequest.name","location":"rest/dev.kord.rest.json.request/-application-command-create-request/name.html","searchKeys":["name","val name: String","dev.kord.rest.json.request.ApplicationCommandCreateRequest.name"]},{"name":"val name: String","description":"dev.kord.rest.json.request.AutoModerationRuleCreateRequest.name","location":"rest/dev.kord.rest.json.request/-auto-moderation-rule-create-request/name.html","searchKeys":["name","val name: String","dev.kord.rest.json.request.AutoModerationRuleCreateRequest.name"]},{"name":"val name: String","description":"dev.kord.rest.json.request.ChannelModifyPutRequest.name","location":"rest/dev.kord.rest.json.request/-channel-modify-put-request/name.html","searchKeys":["name","val name: String","dev.kord.rest.json.request.ChannelModifyPutRequest.name"]},{"name":"val name: String","description":"dev.kord.rest.json.request.EmbedFieldRequest.name","location":"rest/dev.kord.rest.json.request/-embed-field-request/name.html","searchKeys":["name","val name: String","dev.kord.rest.json.request.EmbedFieldRequest.name"]},{"name":"val name: String","description":"dev.kord.rest.json.request.EmojiCreateRequest.name","location":"rest/dev.kord.rest.json.request/-emoji-create-request/name.html","searchKeys":["name","val name: String","dev.kord.rest.json.request.EmojiCreateRequest.name"]},{"name":"val name: String","description":"dev.kord.rest.json.request.GuildChannelCreateRequest.name","location":"rest/dev.kord.rest.json.request/-guild-channel-create-request/name.html","searchKeys":["name","val name: String","dev.kord.rest.json.request.GuildChannelCreateRequest.name"]},{"name":"val name: String","description":"dev.kord.rest.json.request.GuildCreateRequest.name","location":"rest/dev.kord.rest.json.request/-guild-create-request/name.html","searchKeys":["name","val name: String","dev.kord.rest.json.request.GuildCreateRequest.name"]},{"name":"val name: String","description":"dev.kord.rest.json.request.GuildFromTemplateCreateRequest.name","location":"rest/dev.kord.rest.json.request/-guild-from-template-create-request/name.html","searchKeys":["name","val name: String","dev.kord.rest.json.request.GuildFromTemplateCreateRequest.name"]},{"name":"val name: String","description":"dev.kord.rest.json.request.GuildScheduledEventCreateRequest.name","location":"rest/dev.kord.rest.json.request/-guild-scheduled-event-create-request/name.html","searchKeys":["name","val name: String","dev.kord.rest.json.request.GuildScheduledEventCreateRequest.name"]},{"name":"val name: String","description":"dev.kord.rest.json.request.GuildStickerCreateRequest.name","location":"rest/dev.kord.rest.json.request/-guild-sticker-create-request/name.html","searchKeys":["name","val name: String","dev.kord.rest.json.request.GuildStickerCreateRequest.name"]},{"name":"val name: String","description":"dev.kord.rest.json.request.GuildTemplateCreateRequest.name","location":"rest/dev.kord.rest.json.request/-guild-template-create-request/name.html","searchKeys":["name","val name: String","dev.kord.rest.json.request.GuildTemplateCreateRequest.name"]},{"name":"val name: String","description":"dev.kord.rest.json.request.StartThreadRequest.name","location":"rest/dev.kord.rest.json.request/-start-thread-request/name.html","searchKeys":["name","val name: String","dev.kord.rest.json.request.StartThreadRequest.name"]},{"name":"val name: String","description":"dev.kord.rest.json.request.WebhookCreateRequest.name","location":"rest/dev.kord.rest.json.request/-webhook-create-request/name.html","searchKeys":["name","val name: String","dev.kord.rest.json.request.WebhookCreateRequest.name"]},{"name":"val name: String","description":"dev.kord.rest.json.response.Connection.name","location":"rest/dev.kord.rest.json.response/-connection/name.html","searchKeys":["name","val name: String","dev.kord.rest.json.response.Connection.name"]},{"name":"val name: String","description":"dev.kord.rest.json.response.PartialChannelResponse.name","location":"rest/dev.kord.rest.json.response/-partial-channel-response/name.html","searchKeys":["name","val name: String","dev.kord.rest.json.response.PartialChannelResponse.name"]},{"name":"val nameLocalizations: Optional<Map<Locale, String>?>","description":"dev.kord.rest.json.request.ApplicationCommandCreateRequest.nameLocalizations","location":"rest/dev.kord.rest.json.request/-application-command-create-request/name-localizations.html","searchKeys":["nameLocalizations","val nameLocalizations: Optional<Map<Locale, String>?>","dev.kord.rest.json.request.ApplicationCommandCreateRequest.nameLocalizations"]},{"name":"val nameLocalizations: Optional<Map<Locale, String>?>","description":"dev.kord.rest.json.request.ApplicationCommandModifyRequest.nameLocalizations","location":"rest/dev.kord.rest.json.request/-application-command-modify-request/name-localizations.html","searchKeys":["nameLocalizations","val nameLocalizations: Optional<Map<Locale, String>?>","dev.kord.rest.json.request.ApplicationCommandModifyRequest.nameLocalizations"]},{"name":"val nick: Map<String, String>","description":"dev.kord.rest.json.request.GroupDMCreateRequest.nick","location":"rest/dev.kord.rest.json.request/-group-d-m-create-request/nick.html","searchKeys":["nick","val nick: Map<String, String>","dev.kord.rest.json.request.GroupDMCreateRequest.nick"]},{"name":"val nick: Optional<String>","description":"dev.kord.rest.json.request.GuildMemberAddRequest.nick","location":"rest/dev.kord.rest.json.request/-guild-member-add-request/nick.html","searchKeys":["nick","val nick: Optional<String>","dev.kord.rest.json.request.GuildMemberAddRequest.nick"]},{"name":"val nick: Optional<String?>","description":"dev.kord.rest.json.request.CurrentUserNicknameModifyRequest.nick","location":"rest/dev.kord.rest.json.request/-current-user-nickname-modify-request/nick.html","searchKeys":["nick","val nick: Optional<String?>","dev.kord.rest.json.request.CurrentUserNicknameModifyRequest.nick"]},{"name":"val nick: Optional<String?>","description":"dev.kord.rest.json.request.GuildMemberModifyRequest.nick","location":"rest/dev.kord.rest.json.request/-guild-member-modify-request/nick.html","searchKeys":["nick","val nick: Optional<String?>","dev.kord.rest.json.request.GuildMemberModifyRequest.nick"]},{"name":"val nick: String","description":"dev.kord.rest.json.request.UserAddDMRequest.nick","location":"rest/dev.kord.rest.json.request/-user-add-d-m-request/nick.html","searchKeys":["nick","val nick: String","dev.kord.rest.json.request.UserAddDMRequest.nick"]},{"name":"val nick: String","description":"dev.kord.rest.json.response.CurrentUserNicknameModifyResponse.nick","location":"rest/dev.kord.rest.json.response/-current-user-nickname-modify-response/nick.html","searchKeys":["nick","val nick: String","dev.kord.rest.json.response.CurrentUserNicknameModifyResponse.nick"]},{"name":"val nicknames: MutableMap<Snowflake, String>","description":"dev.kord.rest.builder.user.GroupDMCreateBuilder.nicknames","location":"rest/dev.kord.rest.builder.user/-group-d-m-create-builder/nicknames.html","searchKeys":["nicknames","val nicknames: MutableMap<Snowflake, String>","dev.kord.rest.builder.user.GroupDMCreateBuilder.nicknames"]},{"name":"val nonce: Optional<String>","description":"dev.kord.rest.json.request.MessageCreateRequest.nonce","location":"rest/dev.kord.rest.json.request/-message-create-request/nonce.html","searchKeys":["nonce","val nonce: Optional<String>","dev.kord.rest.json.request.MessageCreateRequest.nonce"]},{"name":"val nsfw: Boolean? = null","description":"dev.kord.rest.json.request.ChannelModifyPutRequest.nsfw","location":"rest/dev.kord.rest.json.request/-channel-modify-put-request/nsfw.html","searchKeys":["nsfw","val nsfw: Boolean? = null","dev.kord.rest.json.request.ChannelModifyPutRequest.nsfw"]},{"name":"val nsfw: OptionalBoolean","description":"dev.kord.rest.json.request.GuildChannelCreateRequest.nsfw","location":"rest/dev.kord.rest.json.request/-guild-channel-create-request/nsfw.html","searchKeys":["nsfw","val nsfw: OptionalBoolean","dev.kord.rest.json.request.GuildChannelCreateRequest.nsfw"]},{"name":"val nsfw: OptionalBoolean?","description":"dev.kord.rest.json.request.ChannelModifyPatchRequest.nsfw","location":"rest/dev.kord.rest.json.request/-channel-modify-patch-request/nsfw.html","searchKeys":["nsfw","val nsfw: OptionalBoolean?","dev.kord.rest.json.request.ChannelModifyPatchRequest.nsfw"]},{"name":"val options: MutableList<SelectOptionBuilder>","description":"dev.kord.rest.builder.component.SelectMenuBuilder.options","location":"rest/dev.kord.rest.builder.component/-select-menu-builder/options.html","searchKeys":["options","val options: MutableList<SelectOptionBuilder>","dev.kord.rest.builder.component.SelectMenuBuilder.options"]},{"name":"val options: Optional<List<ApplicationCommandOption>>","description":"dev.kord.rest.json.request.ApplicationCommandCreateRequest.options","location":"rest/dev.kord.rest.json.request/-application-command-create-request/options.html","searchKeys":["options","val options: Optional<List<ApplicationCommandOption>>","dev.kord.rest.json.request.ApplicationCommandCreateRequest.options"]},{"name":"val options: Optional<List<ApplicationCommandOption>>","description":"dev.kord.rest.json.request.ApplicationCommandModifyRequest.options","location":"rest/dev.kord.rest.json.request/-application-command-modify-request/options.html","searchKeys":["options","val options: Optional<List<ApplicationCommandOption>>","dev.kord.rest.json.request.ApplicationCommandModifyRequest.options"]},{"name":"val ownerId: OptionalSnowflake","description":"dev.kord.rest.json.request.GuildModifyRequest.ownerId","location":"rest/dev.kord.rest.json.request/-guild-modify-request/owner-id.html","searchKeys":["ownerId","val ownerId: OptionalSnowflake","dev.kord.rest.json.request.GuildModifyRequest.ownerId"]},{"name":"val param: String","description":"dev.kord.rest.request.RequestIdentifier.MajorParamIdentifier.param","location":"rest/dev.kord.rest.request/-request-identifier/-major-param-identifier/param.html","searchKeys":["param","val param: String","dev.kord.rest.request.RequestIdentifier.MajorParamIdentifier.param"]},{"name":"val parentId: OptionalSnowflake","description":"dev.kord.rest.json.request.GuildChannelCreateRequest.parentId","location":"rest/dev.kord.rest.json.request/-guild-channel-create-request/parent-id.html","searchKeys":["parentId","val parentId: OptionalSnowflake","dev.kord.rest.json.request.GuildChannelCreateRequest.parentId"]},{"name":"val parentId: OptionalSnowflake?","description":"dev.kord.rest.json.request.ChannelModifyPatchRequest.parentId","location":"rest/dev.kord.rest.json.request/-channel-modify-patch-request/parent-id.html","searchKeys":["parentId","val parentId: OptionalSnowflake?","dev.kord.rest.json.request.ChannelModifyPatchRequest.parentId"]},{"name":"val parentId: Snowflake?","description":"dev.kord.rest.json.request.ChannelPositionSwapRequest.parentId","location":"rest/dev.kord.rest.json.request/-channel-position-swap-request/parent-id.html","searchKeys":["parentId","val parentId: Snowflake?","dev.kord.rest.json.request.ChannelPositionSwapRequest.parentId"]},{"name":"val parentId: String? = null","description":"dev.kord.rest.json.request.ChannelModifyPutRequest.parentId","location":"rest/dev.kord.rest.json.request/-channel-modify-put-request/parent-id.html","searchKeys":["parentId","val parentId: String? = null","dev.kord.rest.json.request.ChannelModifyPutRequest.parentId"]},{"name":"val path: String","description":"dev.kord.rest.request.Request.path","location":"rest/dev.kord.rest.request/-request/path.html","searchKeys":["path","val path: String","dev.kord.rest.request.Request.path"]},{"name":"val path: String","description":"dev.kord.rest.route.Route.path","location":"rest/dev.kord.rest.route/-route/path.html","searchKeys":["path","val path: String","dev.kord.rest.route.Route.path"]},{"name":"val permissionOverwrite: Optional<Set<Overwrite>>","description":"dev.kord.rest.json.request.GuildChannelCreateRequest.permissionOverwrite","location":"rest/dev.kord.rest.json.request/-guild-channel-create-request/permission-overwrite.html","searchKeys":["permissionOverwrite","val permissionOverwrite: Optional<Set<Overwrite>>","dev.kord.rest.json.request.GuildChannelCreateRequest.permissionOverwrite"]},{"name":"val permissionOverwrites: List<Overwrite>","description":"dev.kord.rest.json.request.ChannelModifyPutRequest.permissionOverwrites","location":"rest/dev.kord.rest.json.request/-channel-modify-put-request/permission-overwrites.html","searchKeys":["permissionOverwrites","val permissionOverwrites: List<Overwrite>","dev.kord.rest.json.request.ChannelModifyPutRequest.permissionOverwrites"]},{"name":"val permissionOverwrites: Optional<Set<Overwrite>?>","description":"dev.kord.rest.json.request.ChannelModifyPatchRequest.permissionOverwrites","location":"rest/dev.kord.rest.json.request/-channel-modify-patch-request/permission-overwrites.html","searchKeys":["permissionOverwrites","val permissionOverwrites: Optional<Set<Overwrite>?>","dev.kord.rest.json.request.ChannelModifyPatchRequest.permissionOverwrites"]},{"name":"val permissions: Optional<Permissions>","description":"dev.kord.rest.json.request.GuildRoleCreateRequest.permissions","location":"rest/dev.kord.rest.json.request/-guild-role-create-request/permissions.html","searchKeys":["permissions","val permissions: Optional<Permissions>","dev.kord.rest.json.request.GuildRoleCreateRequest.permissions"]},{"name":"val permissions: Optional<Permissions?>","description":"dev.kord.rest.json.request.GuildRoleModifyRequest.permissions","location":"rest/dev.kord.rest.json.request/-guild-role-modify-request/permissions.html","searchKeys":["permissions","val permissions: Optional<Permissions?>","dev.kord.rest.json.request.GuildRoleModifyRequest.permissions"]},{"name":"val position: Int","description":"dev.kord.rest.json.request.ChannelModifyPutRequest.position","location":"rest/dev.kord.rest.json.request/-channel-modify-put-request/position.html","searchKeys":["position","val position: Int","dev.kord.rest.json.request.ChannelModifyPutRequest.position"]},{"name":"val position: OptionalInt","description":"dev.kord.rest.json.request.GuildChannelCreateRequest.position","location":"rest/dev.kord.rest.json.request/-guild-channel-create-request/position.html","searchKeys":["position","val position: OptionalInt","dev.kord.rest.json.request.GuildChannelCreateRequest.position"]},{"name":"val position: OptionalInt?","description":"dev.kord.rest.json.request.ChannelModifyPatchRequest.position","location":"rest/dev.kord.rest.json.request/-channel-modify-patch-request/position.html","searchKeys":["position","val position: OptionalInt?","dev.kord.rest.json.request.ChannelModifyPatchRequest.position"]},{"name":"val position: OptionalInt?","description":"dev.kord.rest.json.request.ChannelPositionSwapRequest.position","location":"rest/dev.kord.rest.json.request/-channel-position-swap-request/position.html","searchKeys":["position","val position: OptionalInt?","dev.kord.rest.json.request.ChannelPositionSwapRequest.position"]},{"name":"val preferredLocale: Optional<String?>","description":"dev.kord.rest.json.request.GuildModifyRequest.preferredLocale","location":"rest/dev.kord.rest.json.request/-guild-modify-request/preferred-locale.html","searchKeys":["preferredLocale","val preferredLocale: Optional<String?>","dev.kord.rest.json.request.GuildModifyRequest.preferredLocale"]},{"name":"val privacyLevel: GuildScheduledEventPrivacyLevel","description":"dev.kord.rest.json.request.GuildScheduledEventCreateRequest.privacyLevel","location":"rest/dev.kord.rest.json.request/-guild-scheduled-event-create-request/privacy-level.html","searchKeys":["privacyLevel","val privacyLevel: GuildScheduledEventPrivacyLevel","dev.kord.rest.json.request.GuildScheduledEventCreateRequest.privacyLevel"]},{"name":"val privacyLevel: Optional<GuildScheduledEventPrivacyLevel>","description":"dev.kord.rest.json.request.ScheduledEventModifyRequest.privacyLevel","location":"rest/dev.kord.rest.json.request/-scheduled-event-modify-request/privacy-level.html","searchKeys":["privacyLevel","val privacyLevel: Optional<GuildScheduledEventPrivacyLevel>","dev.kord.rest.json.request.ScheduledEventModifyRequest.privacyLevel"]},{"name":"val privacyLevel: Optional<StageInstancePrivacyLevel>","description":"dev.kord.rest.json.request.StageInstanceCreateRequest.privacyLevel","location":"rest/dev.kord.rest.json.request/-stage-instance-create-request/privacy-level.html","searchKeys":["privacyLevel","val privacyLevel: Optional<StageInstancePrivacyLevel>","dev.kord.rest.json.request.StageInstanceCreateRequest.privacyLevel"]},{"name":"val privacyLevel: Optional<StageInstancePrivacyLevel>","description":"dev.kord.rest.json.request.StageInstanceModifyRequest.privacyLevel","location":"rest/dev.kord.rest.json.request/-stage-instance-modify-request/privacy-level.html","searchKeys":["privacyLevel","val privacyLevel: Optional<StageInstancePrivacyLevel>","dev.kord.rest.json.request.StageInstanceModifyRequest.privacyLevel"]},{"name":"val pruned: Int","description":"dev.kord.rest.json.response.GetPruneResponse.pruned","location":"rest/dev.kord.rest.json.response/-get-prune-response/pruned.html","searchKeys":["pruned","val pruned: Int","dev.kord.rest.json.response.GetPruneResponse.pruned"]},{"name":"val pruned: Int?","description":"dev.kord.rest.json.response.PruneResponse.pruned","location":"rest/dev.kord.rest.json.response/-prune-response/pruned.html","searchKeys":["pruned","val pruned: Int?","dev.kord.rest.json.response.PruneResponse.pruned"]},{"name":"val publicUpdatesChannelId: OptionalSnowflake?","description":"dev.kord.rest.json.request.GuildModifyRequest.publicUpdatesChannelId","location":"rest/dev.kord.rest.json.request/-guild-modify-request/public-updates-channel-id.html","searchKeys":["publicUpdatesChannelId","val publicUpdatesChannelId: OptionalSnowflake?","dev.kord.rest.json.request.GuildModifyRequest.publicUpdatesChannelId"]},{"name":"val rateLimitPerUser: Int? = null","description":"dev.kord.rest.json.request.ChannelModifyPutRequest.rateLimitPerUser","location":"rest/dev.kord.rest.json.request/-channel-modify-put-request/rate-limit-per-user.html","searchKeys":["rateLimitPerUser","val rateLimitPerUser: Int? = null","dev.kord.rest.json.request.ChannelModifyPutRequest.rateLimitPerUser"]},{"name":"val rateLimitPerUser: Optional<DurationInSeconds>","description":"dev.kord.rest.json.request.GuildChannelCreateRequest.rateLimitPerUser","location":"rest/dev.kord.rest.json.request/-guild-channel-create-request/rate-limit-per-user.html","searchKeys":["rateLimitPerUser","val rateLimitPerUser: Optional<DurationInSeconds>","dev.kord.rest.json.request.GuildChannelCreateRequest.rateLimitPerUser"]},{"name":"val rateLimitPerUser: Optional<DurationInSeconds?>","description":"dev.kord.rest.json.request.ChannelModifyPatchRequest.rateLimitPerUser","location":"rest/dev.kord.rest.json.request/-channel-modify-patch-request/rate-limit-per-user.html","searchKeys":["rateLimitPerUser","val rateLimitPerUser: Optional<DurationInSeconds?>","dev.kord.rest.json.request.ChannelModifyPatchRequest.rateLimitPerUser"]},{"name":"val reason: String?","description":"dev.kord.rest.json.response.BanResponse.reason","location":"rest/dev.kord.rest.json.response/-ban-response/reason.html","searchKeys":["reason","val reason: String?","dev.kord.rest.json.response.BanResponse.reason"]},{"name":"val region: Optional<String>","description":"dev.kord.rest.json.request.GuildCreateRequest.region","location":"rest/dev.kord.rest.json.request/-guild-create-request/region.html","searchKeys":["region","val region: Optional<String>","dev.kord.rest.json.request.GuildCreateRequest.region"]},{"name":"val region: Optional<String?>","description":"dev.kord.rest.json.request.GuildModifyRequest.region","location":"rest/dev.kord.rest.json.request/-guild-modify-request/region.html","searchKeys":["region","val region: Optional<String?>","dev.kord.rest.json.request.GuildModifyRequest.region"]},{"name":"val remaining: Int","description":"dev.kord.rest.json.response.SessionStartLimitResponse.remaining","location":"rest/dev.kord.rest.json.response/-session-start-limit-response/remaining.html","searchKeys":["remaining","val remaining: Int","dev.kord.rest.json.response.SessionStartLimitResponse.remaining"]},{"name":"val remaining: Remaining","description":"dev.kord.rest.ratelimit.RateLimit.remaining","location":"rest/dev.kord.rest.ratelimit/-rate-limit/remaining.html","searchKeys":["remaining","val remaining: Remaining","dev.kord.rest.ratelimit.RateLimit.remaining"]},{"name":"val request: FollowupMessageCreateRequest","description":"dev.kord.rest.json.request.MultipartFollowupMessageCreateRequest.request","location":"rest/dev.kord.rest.json.request/-multipart-followup-message-create-request/request.html","searchKeys":["request","val request: FollowupMessageCreateRequest","dev.kord.rest.json.request.MultipartFollowupMessageCreateRequest.request"]},{"name":"val request: FollowupMessageModifyRequest","description":"dev.kord.rest.json.request.MultipartFollowupMessageModifyRequest.request","location":"rest/dev.kord.rest.json.request/-multipart-followup-message-modify-request/request.html","searchKeys":["request","val request: FollowupMessageModifyRequest","dev.kord.rest.json.request.MultipartFollowupMessageModifyRequest.request"]},{"name":"val request: GuildStickerCreateRequest","description":"dev.kord.rest.json.request.MultipartGuildStickerCreateRequest.request","location":"rest/dev.kord.rest.json.request/-multipart-guild-sticker-create-request/request.html","searchKeys":["request","val request: GuildStickerCreateRequest","dev.kord.rest.json.request.MultipartGuildStickerCreateRequest.request"]},{"name":"val request: InteractionResponseCreateRequest","description":"dev.kord.rest.json.request.MultipartInteractionResponseCreateRequest.request","location":"rest/dev.kord.rest.json.request/-multipart-interaction-response-create-request/request.html","searchKeys":["request","val request: InteractionResponseCreateRequest","dev.kord.rest.json.request.MultipartInteractionResponseCreateRequest.request"]},{"name":"val request: InteractionResponseModifyRequest","description":"dev.kord.rest.json.request.MultipartInteractionResponseModifyRequest.request","location":"rest/dev.kord.rest.json.request/-multipart-interaction-response-modify-request/request.html","searchKeys":["request","val request: InteractionResponseModifyRequest","dev.kord.rest.json.request.MultipartInteractionResponseModifyRequest.request"]},{"name":"val request: MessageCreateRequest","description":"dev.kord.rest.json.request.MultipartMessageCreateRequest.request","location":"rest/dev.kord.rest.json.request/-multipart-message-create-request/request.html","searchKeys":["request","val request: MessageCreateRequest","dev.kord.rest.json.request.MultipartMessageCreateRequest.request"]},{"name":"val request: Request<*, *>","description":"dev.kord.rest.request.RestRequestException.request","location":"rest/dev.kord.rest.request/-rest-request-exception/request.html","searchKeys":["request","val request: Request<*, *>","dev.kord.rest.request.RestRequestException.request"]},{"name":"val request: WebhookEditMessageRequest","description":"dev.kord.rest.json.request.MultipartWebhookEditMessageRequest.request","location":"rest/dev.kord.rest.json.request/-multipart-webhook-edit-message-request/request.html","searchKeys":["request","val request: WebhookEditMessageRequest","dev.kord.rest.json.request.MultipartWebhookEditMessageRequest.request"]},{"name":"val request: WebhookExecuteRequest","description":"dev.kord.rest.json.request.MultiPartWebhookExecuteRequest.request","location":"rest/dev.kord.rest.json.request/-multi-part-webhook-execute-request/request.html","searchKeys":["request","val request: WebhookExecuteRequest","dev.kord.rest.json.request.MultiPartWebhookExecuteRequest.request"]},{"name":"val requestToSpeakTimestamp: Optional<Instant?>","description":"dev.kord.rest.json.request.CurrentVoiceStateModifyRequest.requestToSpeakTimestamp","location":"rest/dev.kord.rest.json.request/-current-voice-state-modify-request/request-to-speak-timestamp.html","searchKeys":["requestToSpeakTimestamp","val requestToSpeakTimestamp: Optional<Instant?>","dev.kord.rest.json.request.CurrentVoiceStateModifyRequest.requestToSpeakTimestamp"]},{"name":"val requests: MessageEditPatchRequest","description":"dev.kord.rest.json.request.MultipartMessagePatchRequest.requests","location":"rest/dev.kord.rest.json.request/-multipart-message-patch-request/requests.html","searchKeys":["requests","val requests: MessageEditPatchRequest","dev.kord.rest.json.request.MultipartMessagePatchRequest.requests"]},{"name":"val requiresAuthorizationHeader: Boolean = true","description":"dev.kord.rest.route.Route.requiresAuthorizationHeader","location":"rest/dev.kord.rest.route/-route/requires-authorization-header.html","searchKeys":["requiresAuthorizationHeader","val requiresAuthorizationHeader: Boolean = true","dev.kord.rest.route.Route.requiresAuthorizationHeader"]},{"name":"val resetAfter: DurationInMilliseconds","description":"dev.kord.rest.json.response.SessionStartLimitResponse.resetAfter","location":"rest/dev.kord.rest.json.response/-session-start-limit-response/reset-after.html","searchKeys":["resetAfter","val resetAfter: DurationInMilliseconds","dev.kord.rest.json.response.SessionStartLimitResponse.resetAfter"]},{"name":"val revoked: Boolean","description":"dev.kord.rest.json.response.Connection.revoked","location":"rest/dev.kord.rest.json.response/-connection/revoked.html","searchKeys":["revoked","val revoked: Boolean","dev.kord.rest.json.response.Connection.revoked"]},{"name":"val roles: MutableList<GuildRoleCreateRequest>","description":"dev.kord.rest.builder.guild.GuildCreateBuilder.roles","location":"rest/dev.kord.rest.builder.guild/-guild-create-builder/roles.html","searchKeys":["roles","val roles: MutableList<GuildRoleCreateRequest>","dev.kord.rest.builder.guild.GuildCreateBuilder.roles"]},{"name":"val roles: MutableSet<Snowflake>","description":"dev.kord.rest.builder.message.AllowedMentionsBuilder.roles","location":"rest/dev.kord.rest.builder.message/-allowed-mentions-builder/roles.html","searchKeys":["roles","val roles: MutableSet<Snowflake>","dev.kord.rest.builder.message.AllowedMentionsBuilder.roles"]},{"name":"val roles: Optional<List<GuildRoleCreateRequest>>","description":"dev.kord.rest.json.request.GuildCreateRequest.roles","location":"rest/dev.kord.rest.json.request/-guild-create-request/roles.html","searchKeys":["roles","val roles: Optional<List<GuildRoleCreateRequest>>","dev.kord.rest.json.request.GuildCreateRequest.roles"]},{"name":"val roles: Optional<Set<Snowflake>>","description":"dev.kord.rest.json.request.GuildMemberAddRequest.roles","location":"rest/dev.kord.rest.json.request/-guild-member-add-request/roles.html","searchKeys":["roles","val roles: Optional<Set<Snowflake>>","dev.kord.rest.json.request.GuildMemberAddRequest.roles"]},{"name":"val roles: Optional<Set<Snowflake>?>","description":"dev.kord.rest.json.request.EmojiModifyRequest.roles","location":"rest/dev.kord.rest.json.request/-emoji-modify-request/roles.html","searchKeys":["roles","val roles: Optional<Set<Snowflake>?>","dev.kord.rest.json.request.EmojiModifyRequest.roles"]},{"name":"val roles: Optional<Set<Snowflake>?>","description":"dev.kord.rest.json.request.GuildMemberModifyRequest.roles","location":"rest/dev.kord.rest.json.request/-guild-member-modify-request/roles.html","searchKeys":["roles","val roles: Optional<Set<Snowflake>?>","dev.kord.rest.json.request.GuildMemberModifyRequest.roles"]},{"name":"val roles: Set<Snowflake>","description":"dev.kord.rest.json.request.EmojiCreateRequest.roles","location":"rest/dev.kord.rest.json.request/-emoji-create-request/roles.html","searchKeys":["roles","val roles: Set<Snowflake>","dev.kord.rest.json.request.EmojiCreateRequest.roles"]},{"name":"val route: Route<*>","description":"dev.kord.rest.request.RequestIdentifier.MajorParamIdentifier.route","location":"rest/dev.kord.rest.request/-request-identifier/-major-param-identifier/route.html","searchKeys":["route","val route: Route<*>","dev.kord.rest.request.RequestIdentifier.MajorParamIdentifier.route"]},{"name":"val route: Route<*>","description":"dev.kord.rest.request.RequestIdentifier.RouteIdentifier.route","location":"rest/dev.kord.rest.request/-request-identifier/-route-identifier/route.html","searchKeys":["route","val route: Route<*>","dev.kord.rest.request.RequestIdentifier.RouteIdentifier.route"]},{"name":"val route: Route<T>","description":"dev.kord.rest.request.RequestBuilder.route","location":"rest/dev.kord.rest.request/-request-builder/route.html","searchKeys":["route","val route: Route<T>","dev.kord.rest.request.RequestBuilder.route"]},{"name":"val rtcRegion: Optional<String?>","description":"dev.kord.rest.json.request.ChannelModifyPatchRequest.rtcRegion","location":"rest/dev.kord.rest.json.request/-channel-modify-patch-request/rtc-region.html","searchKeys":["rtcRegion","val rtcRegion: Optional<String?>","dev.kord.rest.json.request.ChannelModifyPatchRequest.rtcRegion"]},{"name":"val rulesChannelId: OptionalSnowflake?","description":"dev.kord.rest.json.request.GuildModifyRequest.rulesChannelId","location":"rest/dev.kord.rest.json.request/-guild-modify-request/rules-channel-id.html","searchKeys":["rulesChannelId","val rulesChannelId: OptionalSnowflake?","dev.kord.rest.json.request.GuildModifyRequest.rulesChannelId"]},{"name":"val scheduledEndTime: Optional<Instant>","description":"dev.kord.rest.json.request.GuildScheduledEventCreateRequest.scheduledEndTime","location":"rest/dev.kord.rest.json.request/-guild-scheduled-event-create-request/scheduled-end-time.html","searchKeys":["scheduledEndTime","val scheduledEndTime: Optional<Instant>","dev.kord.rest.json.request.GuildScheduledEventCreateRequest.scheduledEndTime"]},{"name":"val scheduledEndTime: Optional<Instant>","description":"dev.kord.rest.json.request.ScheduledEventModifyRequest.scheduledEndTime","location":"rest/dev.kord.rest.json.request/-scheduled-event-modify-request/scheduled-end-time.html","searchKeys":["scheduledEndTime","val scheduledEndTime: Optional<Instant>","dev.kord.rest.json.request.ScheduledEventModifyRequest.scheduledEndTime"]},{"name":"val scheduledStartTime: Instant","description":"dev.kord.rest.json.request.GuildScheduledEventCreateRequest.scheduledStartTime","location":"rest/dev.kord.rest.json.request/-guild-scheduled-event-create-request/scheduled-start-time.html","searchKeys":["scheduledStartTime","val scheduledStartTime: Instant","dev.kord.rest.json.request.GuildScheduledEventCreateRequest.scheduledStartTime"]},{"name":"val scheduledStartTime: Optional<Instant>","description":"dev.kord.rest.json.request.ScheduledEventModifyRequest.scheduledStartTime","location":"rest/dev.kord.rest.json.request/-scheduled-event-modify-request/scheduled-start-time.html","searchKeys":["scheduledStartTime","val scheduledStartTime: Optional<Instant>","dev.kord.rest.json.request.ScheduledEventModifyRequest.scheduledStartTime"]},{"name":"val sendStartNotification: OptionalBoolean","description":"dev.kord.rest.json.request.StageInstanceCreateRequest.sendStartNotification","location":"rest/dev.kord.rest.json.request/-stage-instance-create-request/send-start-notification.html","searchKeys":["sendStartNotification","val sendStartNotification: OptionalBoolean","dev.kord.rest.json.request.StageInstanceCreateRequest.sendStartNotification"]},{"name":"val sessionStartLimit: SessionStartLimitResponse","description":"dev.kord.rest.json.response.BotGatewayResponse.sessionStartLimit","location":"rest/dev.kord.rest.json.response/-bot-gateway-response/session-start-limit.html","searchKeys":["sessionStartLimit","val sessionStartLimit: SessionStartLimitResponse","dev.kord.rest.json.response.BotGatewayResponse.sessionStartLimit"]},{"name":"val shards: Int","description":"dev.kord.rest.json.response.BotGatewayResponse.shards","location":"rest/dev.kord.rest.json.response/-bot-gateway-response/shards.html","searchKeys":["shards","val shards: Int","dev.kord.rest.json.response.BotGatewayResponse.shards"]},{"name":"val showActivity: Boolean","description":"dev.kord.rest.json.response.Connection.showActivity","location":"rest/dev.kord.rest.json.response/-connection/show-activity.html","searchKeys":["showActivity","val showActivity: Boolean","dev.kord.rest.json.response.Connection.showActivity"]},{"name":"val snowflakeGenerator: Iterator<Snowflake>","description":"dev.kord.rest.builder.guild.GuildCreateBuilder.snowflakeGenerator","location":"rest/dev.kord.rest.builder.guild/-guild-create-builder/snowflake-generator.html","searchKeys":["snowflakeGenerator","val snowflakeGenerator: Iterator<Snowflake>","dev.kord.rest.builder.guild.GuildCreateBuilder.snowflakeGenerator"]},{"name":"val splash: Optional<String?>","description":"dev.kord.rest.json.request.GuildModifyRequest.splash","location":"rest/dev.kord.rest.json.request/-guild-modify-request/splash.html","searchKeys":["splash","val splash: Optional<String?>","dev.kord.rest.json.request.GuildModifyRequest.splash"]},{"name":"val stageInstance: StageInstanceService","description":"dev.kord.rest.service.RestClient.stageInstance","location":"rest/dev.kord.rest.service/-rest-client/stage-instance.html","searchKeys":["stageInstance","val stageInstance: StageInstanceService","dev.kord.rest.service.RestClient.stageInstance"]},{"name":"val status: HttpStatus","description":"dev.kord.rest.request.RestRequestException.status","location":"rest/dev.kord.rest.request/-rest-request-exception/status.html","searchKeys":["status","val status: HttpStatus","dev.kord.rest.request.RestRequestException.status"]},{"name":"val status: Optional<GuildScheduledEventStatus>","description":"dev.kord.rest.json.request.ScheduledEventModifyRequest.status","location":"rest/dev.kord.rest.json.request/-scheduled-event-modify-request/status.html","searchKeys":["status","val status: Optional<GuildScheduledEventStatus>","dev.kord.rest.json.request.ScheduledEventModifyRequest.status"]},{"name":"val sticker: StickerService","description":"dev.kord.rest.service.RestClient.sticker","location":"rest/dev.kord.rest.service/-rest-client/sticker.html","searchKeys":["sticker","val sticker: StickerService","dev.kord.rest.service.RestClient.sticker"]},{"name":"val strategy: SerializationStrategy<T>","description":"dev.kord.rest.request.RequestBody.strategy","location":"rest/dev.kord.rest.request/-request-body/strategy.html","searchKeys":["strategy","val strategy: SerializationStrategy<T>","dev.kord.rest.request.RequestBody.strategy"]},{"name":"val suppress: OptionalBoolean","description":"dev.kord.rest.json.request.CurrentVoiceStateModifyRequest.suppress","location":"rest/dev.kord.rest.json.request/-current-voice-state-modify-request/suppress.html","searchKeys":["suppress","val suppress: OptionalBoolean","dev.kord.rest.json.request.CurrentVoiceStateModifyRequest.suppress"]},{"name":"val suppress: OptionalBoolean","description":"dev.kord.rest.json.request.VoiceStateModifyRequest.suppress","location":"rest/dev.kord.rest.json.request/-voice-state-modify-request/suppress.html","searchKeys":["suppress","val suppress: OptionalBoolean","dev.kord.rest.json.request.VoiceStateModifyRequest.suppress"]},{"name":"val swaps: List<ChannelPositionSwapRequest>","description":"dev.kord.rest.json.request.GuildChannelPositionModifyRequest.swaps","location":"rest/dev.kord.rest.json.request/-guild-channel-position-modify-request/swaps.html","searchKeys":["swaps","val swaps: List<ChannelPositionSwapRequest>","dev.kord.rest.json.request.GuildChannelPositionModifyRequest.swaps"]},{"name":"val swaps: List<Pair<Snowflake, Int>>","description":"dev.kord.rest.json.request.GuildRolePositionModifyRequest.swaps","location":"rest/dev.kord.rest.json.request/-guild-role-position-modify-request/swaps.html","searchKeys":["swaps","val swaps: List<Pair<Snowflake, Int>>","dev.kord.rest.json.request.GuildRolePositionModifyRequest.swaps"]},{"name":"val systemChannelId: OptionalSnowflake","description":"dev.kord.rest.json.request.GuildCreateRequest.systemChannelId","location":"rest/dev.kord.rest.json.request/-guild-create-request/system-channel-id.html","searchKeys":["systemChannelId","val systemChannelId: OptionalSnowflake","dev.kord.rest.json.request.GuildCreateRequest.systemChannelId"]},{"name":"val systemChannelId: OptionalSnowflake?","description":"dev.kord.rest.json.request.GuildModifyRequest.systemChannelId","location":"rest/dev.kord.rest.json.request/-guild-modify-request/system-channel-id.html","searchKeys":["systemChannelId","val systemChannelId: OptionalSnowflake?","dev.kord.rest.json.request.GuildModifyRequest.systemChannelId"]},{"name":"val tags: Optional<String>","description":"dev.kord.rest.json.request.GuildStickerModifyRequest.tags","location":"rest/dev.kord.rest.json.request/-guild-sticker-modify-request/tags.html","searchKeys":["tags","val tags: Optional<String>","dev.kord.rest.json.request.GuildStickerModifyRequest.tags"]},{"name":"val tags: String","description":"dev.kord.rest.json.request.GuildStickerCreateRequest.tags","location":"rest/dev.kord.rest.json.request/-guild-sticker-create-request/tags.html","searchKeys":["tags","val tags: String","dev.kord.rest.json.request.GuildStickerCreateRequest.tags"]},{"name":"val targetApplicationId: OptionalSnowflake","description":"dev.kord.rest.json.request.InviteCreateRequest.targetApplicationId","location":"rest/dev.kord.rest.json.request/-invite-create-request/target-application-id.html","searchKeys":["targetApplicationId","val targetApplicationId: OptionalSnowflake","dev.kord.rest.json.request.InviteCreateRequest.targetApplicationId"]},{"name":"val targetType: Optional<InviteTargetType>","description":"dev.kord.rest.json.request.InviteCreateRequest.targetType","location":"rest/dev.kord.rest.json.request/-invite-create-request/target-type.html","searchKeys":["targetType","val targetType: Optional<InviteTargetType>","dev.kord.rest.json.request.InviteCreateRequest.targetType"]},{"name":"val targetUserId: OptionalSnowflake","description":"dev.kord.rest.json.request.InviteCreateRequest.targetUserId","location":"rest/dev.kord.rest.json.request/-invite-create-request/target-user-id.html","searchKeys":["targetUserId","val targetUserId: OptionalSnowflake","dev.kord.rest.json.request.InviteCreateRequest.targetUserId"]},{"name":"val template: TemplateService","description":"dev.kord.rest.service.RestClient.template","location":"rest/dev.kord.rest.service/-rest-client/template.html","searchKeys":["template","val template: TemplateService","dev.kord.rest.service.RestClient.template"]},{"name":"val temporary: OptionalBoolean","description":"dev.kord.rest.json.request.InviteCreateRequest.temporary","location":"rest/dev.kord.rest.json.request/-invite-create-request/temporary.html","searchKeys":["temporary","val temporary: OptionalBoolean","dev.kord.rest.json.request.InviteCreateRequest.temporary"]},{"name":"val text: String","description":"dev.kord.rest.json.request.EmbedFooterRequest.text","location":"rest/dev.kord.rest.json.request/-embed-footer-request/text.html","searchKeys":["text","val text: String","dev.kord.rest.json.request.EmbedFooterRequest.text"]},{"name":"val threads: List<DiscordChannel>","description":"dev.kord.rest.json.response.ListThreadsResponse.threads","location":"rest/dev.kord.rest.json.response/-list-threads-response/threads.html","searchKeys":["threads","val threads: List<DiscordChannel>","dev.kord.rest.json.response.ListThreadsResponse.threads"]},{"name":"val thumbnail: Optional<EmbedThumbnailRequest>","description":"dev.kord.rest.json.request.EmbedRequest.thumbnail","location":"rest/dev.kord.rest.json.request/-embed-request/thumbnail.html","searchKeys":["thumbnail","val thumbnail: Optional<EmbedThumbnailRequest>","dev.kord.rest.json.request.EmbedRequest.thumbnail"]},{"name":"val timestamp: Optional<Instant>","description":"dev.kord.rest.json.request.EmbedRequest.timestamp","location":"rest/dev.kord.rest.json.request/-embed-request/timestamp.html","searchKeys":["timestamp","val timestamp: Optional<Instant>","dev.kord.rest.json.request.EmbedRequest.timestamp"]},{"name":"val title: Optional<String>","description":"dev.kord.rest.json.request.EmbedRequest.title","location":"rest/dev.kord.rest.json.request/-embed-request/title.html","searchKeys":["title","val title: Optional<String>","dev.kord.rest.json.request.EmbedRequest.title"]},{"name":"val token: String","description":"dev.kord.rest.json.request.GuildMemberAddRequest.token","location":"rest/dev.kord.rest.json.request/-guild-member-add-request/token.html","searchKeys":["token","val token: String","dev.kord.rest.json.request.GuildMemberAddRequest.token"]},{"name":"val token: String","description":"dev.kord.rest.json.request.UserAddDMRequest.token","location":"rest/dev.kord.rest.json.request/-user-add-d-m-request/token.html","searchKeys":["token","val token: String","dev.kord.rest.json.request.UserAddDMRequest.token"]},{"name":"val tokens: List<String>","description":"dev.kord.rest.json.request.GroupDMCreateRequest.tokens","location":"rest/dev.kord.rest.json.request/-group-d-m-create-request/tokens.html","searchKeys":["tokens","val tokens: List<String>","dev.kord.rest.json.request.GroupDMCreateRequest.tokens"]},{"name":"val tokens: MutableList<String>","description":"dev.kord.rest.builder.user.GroupDMCreateBuilder.tokens","location":"rest/dev.kord.rest.builder.user/-group-d-m-create-builder/tokens.html","searchKeys":["tokens","val tokens: MutableList<String>","dev.kord.rest.builder.user.GroupDMCreateBuilder.tokens"]},{"name":"val topic: Optional<String>","description":"dev.kord.rest.json.request.GuildChannelCreateRequest.topic","location":"rest/dev.kord.rest.json.request/-guild-channel-create-request/topic.html","searchKeys":["topic","val topic: Optional<String>","dev.kord.rest.json.request.GuildChannelCreateRequest.topic"]},{"name":"val topic: Optional<String>","description":"dev.kord.rest.json.request.StageInstanceModifyRequest.topic","location":"rest/dev.kord.rest.json.request/-stage-instance-modify-request/topic.html","searchKeys":["topic","val topic: Optional<String>","dev.kord.rest.json.request.StageInstanceModifyRequest.topic"]},{"name":"val topic: Optional<String?>","description":"dev.kord.rest.json.request.ChannelModifyPatchRequest.topic","location":"rest/dev.kord.rest.json.request/-channel-modify-patch-request/topic.html","searchKeys":["topic","val topic: Optional<String?>","dev.kord.rest.json.request.ChannelModifyPatchRequest.topic"]},{"name":"val topic: String","description":"dev.kord.rest.json.request.StageInstanceCreateRequest.topic","location":"rest/dev.kord.rest.json.request/-stage-instance-create-request/topic.html","searchKeys":["topic","val topic: String","dev.kord.rest.json.request.StageInstanceCreateRequest.topic"]},{"name":"val topic: String? = null","description":"dev.kord.rest.json.request.ChannelModifyPutRequest.topic","location":"rest/dev.kord.rest.json.request/-channel-modify-put-request/topic.html","searchKeys":["topic","val topic: String? = null","dev.kord.rest.json.request.ChannelModifyPutRequest.topic"]},{"name":"val total: Int","description":"dev.kord.rest.json.response.SessionStartLimitResponse.total","location":"rest/dev.kord.rest.json.response/-session-start-limit-response/total.html","searchKeys":["total","val total: Int","dev.kord.rest.json.response.SessionStartLimitResponse.total"]},{"name":"val total: Total","description":"dev.kord.rest.ratelimit.RateLimit.total","location":"rest/dev.kord.rest.ratelimit/-rate-limit/total.html","searchKeys":["total","val total: Total","dev.kord.rest.ratelimit.RateLimit.total"]},{"name":"val triggerMetadata: Optional<DiscordAutoModerationRuleTriggerMetadata>","description":"dev.kord.rest.json.request.AutoModerationRuleCreateRequest.triggerMetadata","location":"rest/dev.kord.rest.json.request/-auto-moderation-rule-create-request/trigger-metadata.html","searchKeys":["triggerMetadata","val triggerMetadata: Optional<DiscordAutoModerationRuleTriggerMetadata>","dev.kord.rest.json.request.AutoModerationRuleCreateRequest.triggerMetadata"]},{"name":"val triggerMetadata: Optional<DiscordAutoModerationRuleTriggerMetadata>","description":"dev.kord.rest.json.request.AutoModerationRuleModifyRequest.triggerMetadata","location":"rest/dev.kord.rest.json.request/-auto-moderation-rule-modify-request/trigger-metadata.html","searchKeys":["triggerMetadata","val triggerMetadata: Optional<DiscordAutoModerationRuleTriggerMetadata>","dev.kord.rest.json.request.AutoModerationRuleModifyRequest.triggerMetadata"]},{"name":"val triggerType: AutoModerationRuleTriggerType","description":"dev.kord.rest.json.request.AutoModerationRuleCreateRequest.triggerType","location":"rest/dev.kord.rest.json.request/-auto-moderation-rule-create-request/trigger-type.html","searchKeys":["triggerType","val triggerType: AutoModerationRuleTriggerType","dev.kord.rest.json.request.AutoModerationRuleCreateRequest.triggerType"]},{"name":"val tts: OptionalBoolean","description":"dev.kord.rest.json.request.FollowupMessageCreateRequest.tts","location":"rest/dev.kord.rest.json.request/-followup-message-create-request/tts.html","searchKeys":["tts","val tts: OptionalBoolean","dev.kord.rest.json.request.FollowupMessageCreateRequest.tts"]},{"name":"val tts: OptionalBoolean","description":"dev.kord.rest.json.request.InteractionApplicationCommandCallbackData.tts","location":"rest/dev.kord.rest.json.request/-interaction-application-command-callback-data/tts.html","searchKeys":["tts","val tts: OptionalBoolean","dev.kord.rest.json.request.InteractionApplicationCommandCallbackData.tts"]},{"name":"val tts: OptionalBoolean","description":"dev.kord.rest.json.request.MessageCreateRequest.tts","location":"rest/dev.kord.rest.json.request/-message-create-request/tts.html","searchKeys":["tts","val tts: OptionalBoolean","dev.kord.rest.json.request.MessageCreateRequest.tts"]},{"name":"val tts: OptionalBoolean","description":"dev.kord.rest.json.request.WebhookExecuteRequest.tts","location":"rest/dev.kord.rest.json.request/-webhook-execute-request/tts.html","searchKeys":["tts","val tts: OptionalBoolean","dev.kord.rest.json.request.WebhookExecuteRequest.tts"]},{"name":"val type: ApplicationCommandOptionType","description":"dev.kord.rest.builder.interaction.OptionsBuilder.type","location":"rest/dev.kord.rest.builder.interaction/-options-builder/type.html","searchKeys":["type","val type: ApplicationCommandOptionType","dev.kord.rest.builder.interaction.OptionsBuilder.type"]},{"name":"val type: ApplicationCommandType","description":"dev.kord.rest.json.request.ApplicationCommandCreateRequest.type","location":"rest/dev.kord.rest.json.request/-application-command-create-request/type.html","searchKeys":["type","val type: ApplicationCommandType","dev.kord.rest.json.request.ApplicationCommandCreateRequest.type"]},{"name":"val type: ChannelType","description":"dev.kord.rest.builder.channel.thread.StartThreadBuilder.type","location":"rest/dev.kord.rest.builder.channel.thread/-start-thread-builder/type.html","searchKeys":["type","val type: ChannelType","dev.kord.rest.builder.channel.thread.StartThreadBuilder.type"]},{"name":"val type: ChannelType","description":"dev.kord.rest.json.request.GuildChannelCreateRequest.type","location":"rest/dev.kord.rest.json.request/-guild-channel-create-request/type.html","searchKeys":["type","val type: ChannelType","dev.kord.rest.json.request.GuildChannelCreateRequest.type"]},{"name":"val type: ChannelType","description":"dev.kord.rest.json.response.PartialChannelResponse.type","location":"rest/dev.kord.rest.json.response/-partial-channel-response/type.html","searchKeys":["type","val type: ChannelType","dev.kord.rest.json.response.PartialChannelResponse.type"]},{"name":"val type: Int","description":"dev.kord.rest.json.request.GuildIntegrationCreateRequest.type","location":"rest/dev.kord.rest.json.request/-guild-integration-create-request/type.html","searchKeys":["type","val type: Int","dev.kord.rest.json.request.GuildIntegrationCreateRequest.type"]},{"name":"val type: InteractionResponseType","description":"dev.kord.rest.json.request.AutoCompleteResponseCreateRequest.type","location":"rest/dev.kord.rest.json.request/-auto-complete-response-create-request/type.html","searchKeys":["type","val type: InteractionResponseType","dev.kord.rest.json.request.AutoCompleteResponseCreateRequest.type"]},{"name":"val type: InteractionResponseType","description":"dev.kord.rest.json.request.InteractionResponseCreateRequest.type","location":"rest/dev.kord.rest.json.request/-interaction-response-create-request/type.html","searchKeys":["type","val type: InteractionResponseType","dev.kord.rest.json.request.InteractionResponseCreateRequest.type"]},{"name":"val type: InteractionResponseType","description":"dev.kord.rest.json.request.ModalResponseCreateRequest.type","location":"rest/dev.kord.rest.json.request/-modal-response-create-request/type.html","searchKeys":["type","val type: InteractionResponseType","dev.kord.rest.json.request.ModalResponseCreateRequest.type"]},{"name":"val type: Optional<ChannelType>","description":"dev.kord.rest.json.request.StartThreadRequest.type","location":"rest/dev.kord.rest.json.request/-start-thread-request/type.html","searchKeys":["type","val type: Optional<ChannelType>","dev.kord.rest.json.request.StartThreadRequest.type"]},{"name":"val type: Optional<String>","description":"dev.kord.rest.json.request.EmbedRequest.type","location":"rest/dev.kord.rest.json.request/-embed-request/type.html","searchKeys":["type","val type: Optional<String>","dev.kord.rest.json.request.EmbedRequest.type"]},{"name":"val type: OverwriteType","description":"dev.kord.rest.json.request.ChannelPermissionEditRequest.type","location":"rest/dev.kord.rest.json.request/-channel-permission-edit-request/type.html","searchKeys":["type","val type: OverwriteType","dev.kord.rest.json.request.ChannelPermissionEditRequest.type"]},{"name":"val type: String","description":"dev.kord.rest.json.response.Connection.type","location":"rest/dev.kord.rest.json.response/-connection/type.html","searchKeys":["type","val type: String","dev.kord.rest.json.response.Connection.type"]},{"name":"val types: MutableSet<AllowedMentionType>","description":"dev.kord.rest.builder.message.AllowedMentionsBuilder.types","location":"rest/dev.kord.rest.builder.message/-allowed-mentions-builder/types.html","searchKeys":["types","val types: MutableSet<AllowedMentionType>","dev.kord.rest.builder.message.AllowedMentionsBuilder.types"]},{"name":"val unicodeEmoji: Optional<String?>","description":"dev.kord.rest.json.request.GuildRoleCreateRequest.unicodeEmoji","location":"rest/dev.kord.rest.json.request/-guild-role-create-request/unicode-emoji.html","searchKeys":["unicodeEmoji","val unicodeEmoji: Optional<String?>","dev.kord.rest.json.request.GuildRoleCreateRequest.unicodeEmoji"]},{"name":"val unicodeEmoji: Optional<String?>","description":"dev.kord.rest.json.request.GuildRoleModifyRequest.unicodeEmoji","location":"rest/dev.kord.rest.json.request/-guild-role-modify-request/unicode-emoji.html","searchKeys":["unicodeEmoji","val unicodeEmoji: Optional<String?>","dev.kord.rest.json.request.GuildRoleModifyRequest.unicodeEmoji"]},{"name":"val unique: OptionalBoolean","description":"dev.kord.rest.json.request.InviteCreateRequest.unique","location":"rest/dev.kord.rest.json.request/-invite-create-request/unique.html","searchKeys":["unique","val unique: OptionalBoolean","dev.kord.rest.json.request.InviteCreateRequest.unique"]},{"name":"val url: Optional<String>","description":"dev.kord.rest.json.request.EmbedAuthorRequest.url","location":"rest/dev.kord.rest.json.request/-embed-author-request/url.html","searchKeys":["url","val url: Optional<String>","dev.kord.rest.json.request.EmbedAuthorRequest.url"]},{"name":"val url: Optional<String>","description":"dev.kord.rest.json.request.EmbedRequest.url","location":"rest/dev.kord.rest.json.request/-embed-request/url.html","searchKeys":["url","val url: Optional<String>","dev.kord.rest.json.request.EmbedRequest.url"]},{"name":"val url: String","description":"dev.kord.rest.NamedFile.url","location":"rest/dev.kord.rest/-named-file/url.html","searchKeys":["url","val url: String","dev.kord.rest.NamedFile.url"]},{"name":"val url: String","description":"dev.kord.rest.json.request.EmbedImageRequest.url","location":"rest/dev.kord.rest.json.request/-embed-image-request/url.html","searchKeys":["url","val url: String","dev.kord.rest.json.request.EmbedImageRequest.url"]},{"name":"val url: String","description":"dev.kord.rest.json.request.EmbedThumbnailRequest.url","location":"rest/dev.kord.rest.json.request/-embed-thumbnail-request/url.html","searchKeys":["url","val url: String","dev.kord.rest.json.request.EmbedThumbnailRequest.url"]},{"name":"val url: String","description":"dev.kord.rest.json.response.BotGatewayResponse.url","location":"rest/dev.kord.rest.json.response/-bot-gateway-response/url.html","searchKeys":["url","val url: String","dev.kord.rest.json.response.BotGatewayResponse.url"]},{"name":"val url: String","description":"dev.kord.rest.json.response.GatewayResponse.url","location":"rest/dev.kord.rest.json.response/-gateway-response/url.html","searchKeys":["url","val url: String","dev.kord.rest.json.response.GatewayResponse.url"]},{"name":"val user: DiscordUser","description":"dev.kord.rest.json.request.GuildScheduledEventUsersResponse.user","location":"rest/dev.kord.rest.json.request/-guild-scheduled-event-users-response/user.html","searchKeys":["user","val user: DiscordUser","dev.kord.rest.json.request.GuildScheduledEventUsersResponse.user"]},{"name":"val user: DiscordUser","description":"dev.kord.rest.json.response.BanResponse.user","location":"rest/dev.kord.rest.json.response/-ban-response/user.html","searchKeys":["user","val user: DiscordUser","dev.kord.rest.json.response.BanResponse.user"]},{"name":"val user: UserService","description":"dev.kord.rest.service.RestClient.user","location":"rest/dev.kord.rest.service/-rest-client/user.html","searchKeys":["user","val user: UserService","dev.kord.rest.service.RestClient.user"]},{"name":"val userId: Snowflake","description":"dev.kord.rest.json.request.DMCreateRequest.userId","location":"rest/dev.kord.rest.json.request/-d-m-create-request/user-id.html","searchKeys":["userId","val userId: Snowflake","dev.kord.rest.json.request.DMCreateRequest.userId"]},{"name":"val userId: Snowflake? = null","description":"dev.kord.rest.json.request.AuditLogGetRequest.userId","location":"rest/dev.kord.rest.json.request/-audit-log-get-request/user-id.html","searchKeys":["userId","val userId: Snowflake? = null","dev.kord.rest.json.request.AuditLogGetRequest.userId"]},{"name":"val userLimit: Int? = null","description":"dev.kord.rest.json.request.ChannelModifyPutRequest.userLimit","location":"rest/dev.kord.rest.json.request/-channel-modify-put-request/user-limit.html","searchKeys":["userLimit","val userLimit: Int? = null","dev.kord.rest.json.request.ChannelModifyPutRequest.userLimit"]},{"name":"val userLimit: OptionalInt","description":"dev.kord.rest.json.request.GuildChannelCreateRequest.userLimit","location":"rest/dev.kord.rest.json.request/-guild-channel-create-request/user-limit.html","searchKeys":["userLimit","val userLimit: OptionalInt","dev.kord.rest.json.request.GuildChannelCreateRequest.userLimit"]},{"name":"val userLimit: OptionalInt?","description":"dev.kord.rest.json.request.ChannelModifyPatchRequest.userLimit","location":"rest/dev.kord.rest.json.request/-channel-modify-patch-request/user-limit.html","searchKeys":["userLimit","val userLimit: OptionalInt?","dev.kord.rest.json.request.ChannelModifyPatchRequest.userLimit"]},{"name":"val username: Optional<String>","description":"dev.kord.rest.json.request.CurrentUserModifyRequest.username","location":"rest/dev.kord.rest.json.request/-current-user-modify-request/username.html","searchKeys":["username","val username: Optional<String>","dev.kord.rest.json.request.CurrentUserModifyRequest.username"]},{"name":"val username: Optional<String>","description":"dev.kord.rest.json.request.FollowupMessageCreateRequest.username","location":"rest/dev.kord.rest.json.request/-followup-message-create-request/username.html","searchKeys":["username","val username: Optional<String>","dev.kord.rest.json.request.FollowupMessageCreateRequest.username"]},{"name":"val username: Optional<String>","description":"dev.kord.rest.json.request.WebhookExecuteRequest.username","location":"rest/dev.kord.rest.json.request/-webhook-execute-request/username.html","searchKeys":["username","val username: Optional<String>","dev.kord.rest.json.request.WebhookExecuteRequest.username"]},{"name":"val users: MutableSet<Snowflake>","description":"dev.kord.rest.builder.message.AllowedMentionsBuilder.users","location":"rest/dev.kord.rest.builder.message/-allowed-mentions-builder/users.html","searchKeys":["users","val users: MutableSet<Snowflake>","dev.kord.rest.builder.message.AllowedMentionsBuilder.users"]},{"name":"val value: Instant","description":"dev.kord.rest.ratelimit.Reset.value","location":"rest/dev.kord.rest.ratelimit/-reset/value.html","searchKeys":["value","val value: Instant","dev.kord.rest.ratelimit.Reset.value"]},{"name":"val value: Long","description":"dev.kord.rest.ratelimit.Remaining.value","location":"rest/dev.kord.rest.ratelimit/-remaining/value.html","searchKeys":["value","val value: Long","dev.kord.rest.ratelimit.Remaining.value"]},{"name":"val value: Long","description":"dev.kord.rest.ratelimit.Total.value","location":"rest/dev.kord.rest.ratelimit/-total/value.html","searchKeys":["value","val value: Long","dev.kord.rest.ratelimit.Total.value"]},{"name":"val value: String","description":"dev.kord.rest.json.request.EmbedFieldRequest.value","location":"rest/dev.kord.rest.json.request/-embed-field-request/value.html","searchKeys":["value","val value: String","dev.kord.rest.json.request.EmbedFieldRequest.value"]},{"name":"val value: String","description":"dev.kord.rest.ratelimit.BucketKey.value","location":"rest/dev.kord.rest.ratelimit/-bucket-key/value.html","searchKeys":["value","val value: String","dev.kord.rest.ratelimit.BucketKey.value"]},{"name":"val values: Set<Image.Format>","description":"dev.kord.rest.Image.Format.Companion.values","location":"rest/dev.kord.rest/-image/-format/-companion/values.html","searchKeys":["values","val values: Set<Image.Format>","dev.kord.rest.Image.Format.Companion.values"]},{"name":"val verificationLevel: Optional<VerificationLevel>","description":"dev.kord.rest.json.request.GuildCreateRequest.verificationLevel","location":"rest/dev.kord.rest.json.request/-guild-create-request/verification-level.html","searchKeys":["verificationLevel","val verificationLevel: Optional<VerificationLevel>","dev.kord.rest.json.request.GuildCreateRequest.verificationLevel"]},{"name":"val verificationLevel: Optional<VerificationLevel?>","description":"dev.kord.rest.json.request.GuildModifyRequest.verificationLevel","location":"rest/dev.kord.rest.json.request/-guild-modify-request/verification-level.html","searchKeys":["verificationLevel","val verificationLevel: Optional<VerificationLevel?>","dev.kord.rest.json.request.GuildModifyRequest.verificationLevel"]},{"name":"val verified: Boolean","description":"dev.kord.rest.json.response.Connection.verified","location":"rest/dev.kord.rest.json.response/-connection/verified.html","searchKeys":["verified","val verified: Boolean","dev.kord.rest.json.response.Connection.verified"]},{"name":"val videoQualityMode: Optional<VideoQualityMode?>","description":"dev.kord.rest.json.request.ChannelModifyPatchRequest.videoQualityMode","location":"rest/dev.kord.rest.json.request/-channel-modify-patch-request/video-quality-mode.html","searchKeys":["videoQualityMode","val videoQualityMode: Optional<VideoQualityMode?>","dev.kord.rest.json.request.ChannelModifyPatchRequest.videoQualityMode"]},{"name":"val visibility: Int","description":"dev.kord.rest.json.response.Connection.visibility","location":"rest/dev.kord.rest.json.response/-connection/visibility.html","searchKeys":["visibility","val visibility: Int","dev.kord.rest.json.response.Connection.visibility"]},{"name":"val voice: VoiceService","description":"dev.kord.rest.service.RestClient.voice","location":"rest/dev.kord.rest.service/-rest-client/voice.html","searchKeys":["voice","val voice: VoiceService","dev.kord.rest.service.RestClient.voice"]},{"name":"val webhook: WebhookService","description":"dev.kord.rest.service.RestClient.webhook","location":"rest/dev.kord.rest.service/-rest-client/webhook.html","searchKeys":["webhook","val webhook: WebhookService","dev.kord.rest.service.RestClient.webhook"]},{"name":"val webhookChannelId: Snowflake","description":"dev.kord.rest.json.request.ChannelFollowRequest.webhookChannelId","location":"rest/dev.kord.rest.json.request/-channel-follow-request/webhook-channel-id.html","searchKeys":["webhookChannelId","val webhookChannelId: Snowflake","dev.kord.rest.json.request.ChannelFollowRequest.webhookChannelId"]},{"name":"val webhookId: Snowflake","description":"dev.kord.rest.json.response.FollowedChannelResponse.webhookId","location":"rest/dev.kord.rest.json.response/-followed-channel-response/webhook-id.html","searchKeys":["webhookId","val webhookId: Snowflake","dev.kord.rest.json.response.FollowedChannelResponse.webhookId"]},{"name":"val welcomeScreenChannels: Optional<List<DiscordWelcomeScreenChannel>>","description":"dev.kord.rest.json.request.GuildWelcomeScreenModifyRequest.welcomeScreenChannels","location":"rest/dev.kord.rest.json.request/-guild-welcome-screen-modify-request/welcome-screen-channels.html","searchKeys":["welcomeScreenChannels","val welcomeScreenChannels: Optional<List<DiscordWelcomeScreenChannel>>","dev.kord.rest.json.request.GuildWelcomeScreenModifyRequest.welcomeScreenChannels"]},{"name":"value class BucketKey(val value: String)","description":"dev.kord.rest.ratelimit.BucketKey","location":"rest/dev.kord.rest.ratelimit/-bucket-key/index.html","searchKeys":["BucketKey","value class BucketKey(val value: String)","dev.kord.rest.ratelimit.BucketKey"]},{"name":"value class Remaining(val value: Long)","description":"dev.kord.rest.ratelimit.Remaining","location":"rest/dev.kord.rest.ratelimit/-remaining/index.html","searchKeys":["Remaining","value class Remaining(val value: Long)","dev.kord.rest.ratelimit.Remaining"]},{"name":"value class Reset(val value: Instant)","description":"dev.kord.rest.ratelimit.Reset","location":"rest/dev.kord.rest.ratelimit/-reset/index.html","searchKeys":["Reset","value class Reset(val value: Instant)","dev.kord.rest.ratelimit.Reset"]},{"name":"value class Total(val value: Long)","description":"dev.kord.rest.ratelimit.Total","location":"rest/dev.kord.rest.ratelimit/-total/index.html","searchKeys":["Total","value class Total(val value: Long)","dev.kord.rest.ratelimit.Total"]},{"name":"var action: AuditLogEvent? = null","description":"dev.kord.rest.builder.auditlog.AuditLogGetRequestBuilder.action","location":"rest/dev.kord.rest.builder.auditlog/-audit-log-get-request-builder/action.html","searchKeys":["action","var action: AuditLogEvent? = null","dev.kord.rest.builder.auditlog.AuditLogGetRequestBuilder.action"]},{"name":"var afkChannelId: Snowflake?","description":"dev.kord.rest.builder.guild.GuildCreateBuilder.afkChannelId","location":"rest/dev.kord.rest.builder.guild/-guild-create-builder/afk-channel-id.html","searchKeys":["afkChannelId","var afkChannelId: Snowflake?","dev.kord.rest.builder.guild.GuildCreateBuilder.afkChannelId"]},{"name":"var afkChannelId: Snowflake?","description":"dev.kord.rest.builder.guild.GuildModifyBuilder.afkChannelId","location":"rest/dev.kord.rest.builder.guild/-guild-modify-builder/afk-channel-id.html","searchKeys":["afkChannelId","var afkChannelId: Snowflake?","dev.kord.rest.builder.guild.GuildModifyBuilder.afkChannelId"]},{"name":"var afkTimeout: Duration?","description":"dev.kord.rest.builder.guild.GuildCreateBuilder.afkTimeout","location":"rest/dev.kord.rest.builder.guild/-guild-create-builder/afk-timeout.html","searchKeys":["afkTimeout","var afkTimeout: Duration?","dev.kord.rest.builder.guild.GuildCreateBuilder.afkTimeout"]},{"name":"var afkTimeout: Duration?","description":"dev.kord.rest.builder.guild.GuildModifyBuilder.afkTimeout","location":"rest/dev.kord.rest.builder.guild/-guild-modify-builder/afk-timeout.html","searchKeys":["afkTimeout","var afkTimeout: Duration?","dev.kord.rest.builder.guild.GuildModifyBuilder.afkTimeout"]},{"name":"var allowed: Permissions","description":"dev.kord.rest.builder.channel.ChannelPermissionModifyBuilder.allowed","location":"rest/dev.kord.rest.builder.channel/-channel-permission-modify-builder/allowed.html","searchKeys":["allowed","var allowed: Permissions","dev.kord.rest.builder.channel.ChannelPermissionModifyBuilder.allowed"]},{"name":"var allowed: Permissions","description":"dev.kord.rest.builder.channel.PermissionOverwriteBuilder.allowed","location":"rest/dev.kord.rest.builder.channel/-permission-overwrite-builder/allowed.html","searchKeys":["allowed","var allowed: Permissions","dev.kord.rest.builder.channel.PermissionOverwriteBuilder.allowed"]},{"name":"var allowedLength: ClosedRange<Int>? = null","description":"dev.kord.rest.builder.component.TextInputBuilder.allowedLength","location":"rest/dev.kord.rest.builder.component/-text-input-builder/allowed-length.html","searchKeys":["allowedLength","var allowedLength: ClosedRange<Int>? = null","dev.kord.rest.builder.component.TextInputBuilder.allowedLength"]},{"name":"var allowedValues: ClosedRange<Int>","description":"dev.kord.rest.builder.component.SelectMenuBuilder.allowedValues","location":"rest/dev.kord.rest.builder.component/-select-menu-builder/allowed-values.html","searchKeys":["allowedValues","var allowedValues: ClosedRange<Int>","dev.kord.rest.builder.component.SelectMenuBuilder.allowedValues"]},{"name":"var archived: Boolean?","description":"dev.kord.rest.builder.channel.thread.ThreadModifyBuilder.archived","location":"rest/dev.kord.rest.builder.channel.thread/-thread-modify-builder/archived.html","searchKeys":["archived","var archived: Boolean?","dev.kord.rest.builder.channel.thread.ThreadModifyBuilder.archived"]},{"name":"var author: EmbedBuilder.Author?","description":"dev.kord.rest.builder.message.EmbedBuilder.author","location":"rest/dev.kord.rest.builder.message/-embed-builder/author.html","searchKeys":["author","var author: EmbedBuilder.Author?","dev.kord.rest.builder.message.EmbedBuilder.author"]},{"name":"var autoArchiveDuration: ArchiveDuration","description":"dev.kord.rest.builder.channel.thread.StartThreadBuilder.autoArchiveDuration","location":"rest/dev.kord.rest.builder.channel.thread/-start-thread-builder/auto-archive-duration.html","searchKeys":["autoArchiveDuration","var autoArchiveDuration: ArchiveDuration","dev.kord.rest.builder.channel.thread.StartThreadBuilder.autoArchiveDuration"]},{"name":"var autoArchiveDuration: ArchiveDuration","description":"dev.kord.rest.builder.channel.thread.StartThreadWithMessageBuilder.autoArchiveDuration","location":"rest/dev.kord.rest.builder.channel.thread/-start-thread-with-message-builder/auto-archive-duration.html","searchKeys":["autoArchiveDuration","var autoArchiveDuration: ArchiveDuration","dev.kord.rest.builder.channel.thread.StartThreadWithMessageBuilder.autoArchiveDuration"]},{"name":"var autoArchiveDuration: ArchiveDuration?","description":"dev.kord.rest.builder.channel.thread.ThreadModifyBuilder.autoArchiveDuration","location":"rest/dev.kord.rest.builder.channel.thread/-thread-modify-builder/auto-archive-duration.html","searchKeys":["autoArchiveDuration","var autoArchiveDuration: ArchiveDuration?","dev.kord.rest.builder.channel.thread.ThreadModifyBuilder.autoArchiveDuration"]},{"name":"var autocomplete: Boolean?","description":"dev.kord.rest.builder.interaction.OptionsBuilder.autocomplete","location":"rest/dev.kord.rest.builder.interaction/-options-builder/autocomplete.html","searchKeys":["autocomplete","var autocomplete: Boolean?","dev.kord.rest.builder.interaction.OptionsBuilder.autocomplete"]},{"name":"var avatar: Image?","description":"dev.kord.rest.builder.user.CurrentUserModifyBuilder.avatar","location":"rest/dev.kord.rest.builder.user/-current-user-modify-builder/avatar.html","searchKeys":["avatar","var avatar: Image?","dev.kord.rest.builder.user.CurrentUserModifyBuilder.avatar"]},{"name":"var avatar: Image?","description":"dev.kord.rest.builder.webhook.WebhookCreateBuilder.avatar","location":"rest/dev.kord.rest.builder.webhook/-webhook-create-builder/avatar.html","searchKeys":["avatar","var avatar: Image?","dev.kord.rest.builder.webhook.WebhookCreateBuilder.avatar"]},{"name":"var avatar: Image?","description":"dev.kord.rest.builder.webhook.WebhookModifyBuilder.avatar","location":"rest/dev.kord.rest.builder.webhook/-webhook-modify-builder/avatar.html","searchKeys":["avatar","var avatar: Image?","dev.kord.rest.builder.webhook.WebhookModifyBuilder.avatar"]},{"name":"var avatarUrl: String? = null","description":"dev.kord.rest.builder.message.create.WebhookMessageCreateBuilder.avatarUrl","location":"rest/dev.kord.rest.builder.message.create/-webhook-message-create-builder/avatar-url.html","searchKeys":["avatarUrl","var avatarUrl: String? = null","dev.kord.rest.builder.message.create.WebhookMessageCreateBuilder.avatarUrl"]},{"name":"var banner: Image?","description":"dev.kord.rest.builder.guild.GuildModifyBuilder.banner","location":"rest/dev.kord.rest.builder.guild/-guild-modify-builder/banner.html","searchKeys":["banner","var banner: Image?","dev.kord.rest.builder.guild.GuildModifyBuilder.banner"]},{"name":"var baseUrl: String","description":"dev.kord.rest.request.RequestBuilder.baseUrl","location":"rest/dev.kord.rest.request/-request-builder/base-url.html","searchKeys":["baseUrl","var baseUrl: String","dev.kord.rest.request.RequestBuilder.baseUrl"]},{"name":"var before: Snowflake? = null","description":"dev.kord.rest.builder.auditlog.AuditLogGetRequestBuilder.before","location":"rest/dev.kord.rest.builder.auditlog/-audit-log-get-request-builder/before.html","searchKeys":["before","var before: Snowflake? = null","dev.kord.rest.builder.auditlog.AuditLogGetRequestBuilder.before"]},{"name":"var bitrate: Int?","description":"dev.kord.rest.builder.channel.StageVoiceChannelModifyBuilder.bitrate","location":"rest/dev.kord.rest.builder.channel/-stage-voice-channel-modify-builder/bitrate.html","searchKeys":["bitrate","var bitrate: Int?","dev.kord.rest.builder.channel.StageVoiceChannelModifyBuilder.bitrate"]},{"name":"var bitrate: Int?","description":"dev.kord.rest.builder.channel.VoiceChannelCreateBuilder.bitrate","location":"rest/dev.kord.rest.builder.channel/-voice-channel-create-builder/bitrate.html","searchKeys":["bitrate","var bitrate: Int?","dev.kord.rest.builder.channel.VoiceChannelCreateBuilder.bitrate"]},{"name":"var bitrate: Int?","description":"dev.kord.rest.builder.channel.VoiceChannelModifyBuilder.bitrate","location":"rest/dev.kord.rest.builder.channel/-voice-channel-modify-builder/bitrate.html","searchKeys":["bitrate","var bitrate: Int?","dev.kord.rest.builder.channel.VoiceChannelModifyBuilder.bitrate"]},{"name":"var channelId: Snowflake","description":"dev.kord.rest.builder.automoderation.SendAlertMessageAutoModerationActionBuilder.channelId","location":"rest/dev.kord.rest.builder.automoderation/-send-alert-message-auto-moderation-action-builder/channel-id.html","searchKeys":["channelId","var channelId: Snowflake","dev.kord.rest.builder.automoderation.SendAlertMessageAutoModerationActionBuilder.channelId"]},{"name":"var channelId: Snowflake","description":"dev.kord.rest.builder.channel.GuildChannelSwapBuilder.channelId","location":"rest/dev.kord.rest.builder.channel/-guild-channel-swap-builder/channel-id.html","searchKeys":["channelId","var channelId: Snowflake","dev.kord.rest.builder.channel.GuildChannelSwapBuilder.channelId"]},{"name":"var channelId: Snowflake","description":"dev.kord.rest.builder.guild.VoiceStateModifyBuilder.channelId","location":"rest/dev.kord.rest.builder.guild/-voice-state-modify-builder/channel-id.html","searchKeys":["channelId","var channelId: Snowflake","dev.kord.rest.builder.guild.VoiceStateModifyBuilder.channelId"]},{"name":"var channelId: Snowflake","description":"dev.kord.rest.builder.guild.WelcomeScreenChannelBuilder.channelId","location":"rest/dev.kord.rest.builder.guild/-welcome-screen-channel-builder/channel-id.html","searchKeys":["channelId","var channelId: Snowflake","dev.kord.rest.builder.guild.WelcomeScreenChannelBuilder.channelId"]},{"name":"var channelId: Snowflake","description":"dev.kord.rest.builder.stage.StageInstanceCreateBuilder.channelId","location":"rest/dev.kord.rest.builder.stage/-stage-instance-create-builder/channel-id.html","searchKeys":["channelId","var channelId: Snowflake","dev.kord.rest.builder.stage.StageInstanceCreateBuilder.channelId"]},{"name":"var channelId: Snowflake?","description":"dev.kord.rest.builder.guild.CurrentVoiceStateModifyBuilder.channelId","location":"rest/dev.kord.rest.builder.guild/-current-voice-state-modify-builder/channel-id.html","searchKeys":["channelId","var channelId: Snowflake?","dev.kord.rest.builder.guild.CurrentVoiceStateModifyBuilder.channelId"]},{"name":"var channelId: Snowflake?","description":"dev.kord.rest.builder.guild.GuildWidgetModifyBuilder.channelId","location":"rest/dev.kord.rest.builder.guild/-guild-widget-modify-builder/channel-id.html","searchKeys":["channelId","var channelId: Snowflake?","dev.kord.rest.builder.guild.GuildWidgetModifyBuilder.channelId"]},{"name":"var channelId: Snowflake?","description":"dev.kord.rest.builder.guild.ScheduledEventCreateBuilder.channelId","location":"rest/dev.kord.rest.builder.guild/-scheduled-event-create-builder/channel-id.html","searchKeys":["channelId","var channelId: Snowflake?","dev.kord.rest.builder.guild.ScheduledEventCreateBuilder.channelId"]},{"name":"var channelId: Snowflake?","description":"dev.kord.rest.builder.scheduled_events.ScheduledEventModifyBuilder.channelId","location":"rest/dev.kord.rest.builder.scheduled_events/-scheduled-event-modify-builder/channel-id.html","searchKeys":["channelId","var channelId: Snowflake?","dev.kord.rest.builder.scheduled_events.ScheduledEventModifyBuilder.channelId"]},{"name":"var channelId: Snowflake?","description":"dev.kord.rest.builder.webhook.WebhookModifyBuilder.channelId","location":"rest/dev.kord.rest.builder.webhook/-webhook-modify-builder/channel-id.html","searchKeys":["channelId","var channelId: Snowflake?","dev.kord.rest.builder.webhook.WebhookModifyBuilder.channelId"]},{"name":"var channelTypes: List<ChannelType>?","description":"dev.kord.rest.builder.interaction.ChannelBuilder.channelTypes","location":"rest/dev.kord.rest.builder.interaction/-channel-builder/channel-types.html","searchKeys":["channelTypes","var channelTypes: List<ChannelType>?","dev.kord.rest.builder.interaction.ChannelBuilder.channelTypes"]},{"name":"var choices: MutableList<Choice<*>>?","description":"dev.kord.rest.builder.interaction.BaseChoiceBuilder.choices","location":"rest/dev.kord.rest.builder.interaction/-base-choice-builder/choices.html","searchKeys":["choices","var choices: MutableList<Choice<*>>?","dev.kord.rest.builder.interaction.BaseChoiceBuilder.choices"]},{"name":"var color: Color?","description":"dev.kord.rest.builder.message.EmbedBuilder.color","location":"rest/dev.kord.rest.builder.message/-embed-builder/color.html","searchKeys":["color","var color: Color?","dev.kord.rest.builder.message.EmbedBuilder.color"]},{"name":"var color: Color?","description":"dev.kord.rest.builder.role.RoleCreateBuilder.color","location":"rest/dev.kord.rest.builder.role/-role-create-builder/color.html","searchKeys":["color","var color: Color?","dev.kord.rest.builder.role.RoleCreateBuilder.color"]},{"name":"var color: Color?","description":"dev.kord.rest.builder.role.RoleModifyBuilder.color","location":"rest/dev.kord.rest.builder.role/-role-modify-builder/color.html","searchKeys":["color","var color: Color?","dev.kord.rest.builder.role.RoleModifyBuilder.color"]},{"name":"var communicationDisabledUntil: Instant?","description":"dev.kord.rest.builder.member.MemberModifyBuilder.communicationDisabledUntil","location":"rest/dev.kord.rest.builder.member/-member-modify-builder/communication-disabled-until.html","searchKeys":["communicationDisabledUntil","var communicationDisabledUntil: Instant?","dev.kord.rest.builder.member.MemberModifyBuilder.communicationDisabledUntil"]},{"name":"var customId: String","description":"dev.kord.rest.builder.component.ButtonBuilder.InteractionButtonBuilder.customId","location":"rest/dev.kord.rest.builder.component/-button-builder/-interaction-button-builder/custom-id.html","searchKeys":["customId","var customId: String","dev.kord.rest.builder.component.ButtonBuilder.InteractionButtonBuilder.customId"]},{"name":"var customId: String","description":"dev.kord.rest.builder.component.SelectMenuBuilder.customId","location":"rest/dev.kord.rest.builder.component/-select-menu-builder/custom-id.html","searchKeys":["customId","var customId: String","dev.kord.rest.builder.component.SelectMenuBuilder.customId"]},{"name":"var customId: String","description":"dev.kord.rest.builder.component.TextInputBuilder.customId","location":"rest/dev.kord.rest.builder.component/-text-input-builder/custom-id.html","searchKeys":["customId","var customId: String","dev.kord.rest.builder.component.TextInputBuilder.customId"]},{"name":"var customId: String","description":"dev.kord.rest.builder.interaction.ModalBuilder.customId","location":"rest/dev.kord.rest.builder.interaction/-modal-builder/custom-id.html","searchKeys":["customId","var customId: String","dev.kord.rest.builder.interaction.ModalBuilder.customId"]},{"name":"var deafened: Boolean?","description":"dev.kord.rest.builder.member.MemberAddBuilder.deafened","location":"rest/dev.kord.rest.builder.member/-member-add-builder/deafened.html","searchKeys":["deafened","var deafened: Boolean?","dev.kord.rest.builder.member.MemberAddBuilder.deafened"]},{"name":"var deafened: Boolean?","description":"dev.kord.rest.builder.member.MemberModifyBuilder.deafened","location":"rest/dev.kord.rest.builder.member/-member-modify-builder/deafened.html","searchKeys":["deafened","var deafened: Boolean?","dev.kord.rest.builder.member.MemberModifyBuilder.deafened"]},{"name":"var default: Boolean?","description":"dev.kord.rest.builder.component.SelectOptionBuilder.default","location":"rest/dev.kord.rest.builder.component/-select-option-builder/default.html","searchKeys":["default","var default: Boolean?","dev.kord.rest.builder.component.SelectOptionBuilder.default"]},{"name":"var default: Boolean?","description":"dev.kord.rest.builder.interaction.OptionsBuilder.default","location":"rest/dev.kord.rest.builder.interaction/-options-builder/default.html","searchKeys":["default","var default: Boolean?","dev.kord.rest.builder.interaction.OptionsBuilder.default"]},{"name":"var defaultAutoArchiveDuration: ArchiveDuration?","description":"dev.kord.rest.builder.channel.NewsChannelCreateBuilder.defaultAutoArchiveDuration","location":"rest/dev.kord.rest.builder.channel/-news-channel-create-builder/default-auto-archive-duration.html","searchKeys":["defaultAutoArchiveDuration","var defaultAutoArchiveDuration: ArchiveDuration?","dev.kord.rest.builder.channel.NewsChannelCreateBuilder.defaultAutoArchiveDuration"]},{"name":"var defaultAutoArchiveDuration: ArchiveDuration?","description":"dev.kord.rest.builder.channel.NewsChannelModifyBuilder.defaultAutoArchiveDuration","location":"rest/dev.kord.rest.builder.channel/-news-channel-modify-builder/default-auto-archive-duration.html","searchKeys":["defaultAutoArchiveDuration","var defaultAutoArchiveDuration: ArchiveDuration?","dev.kord.rest.builder.channel.NewsChannelModifyBuilder.defaultAutoArchiveDuration"]},{"name":"var defaultAutoArchiveDuration: ArchiveDuration?","description":"dev.kord.rest.builder.channel.TextChannelCreateBuilder.defaultAutoArchiveDuration","location":"rest/dev.kord.rest.builder.channel/-text-channel-create-builder/default-auto-archive-duration.html","searchKeys":["defaultAutoArchiveDuration","var defaultAutoArchiveDuration: ArchiveDuration?","dev.kord.rest.builder.channel.TextChannelCreateBuilder.defaultAutoArchiveDuration"]},{"name":"var defaultAutoArchiveDuration: ArchiveDuration?","description":"dev.kord.rest.builder.channel.TextChannelModifyBuilder.defaultAutoArchiveDuration","location":"rest/dev.kord.rest.builder.channel/-text-channel-modify-builder/default-auto-archive-duration.html","searchKeys":["defaultAutoArchiveDuration","var defaultAutoArchiveDuration: ArchiveDuration?","dev.kord.rest.builder.channel.TextChannelModifyBuilder.defaultAutoArchiveDuration"]},{"name":"var defaultMessageNotificationLevel: DefaultMessageNotificationLevel?","description":"dev.kord.rest.builder.guild.GuildCreateBuilder.defaultMessageNotificationLevel","location":"rest/dev.kord.rest.builder.guild/-guild-create-builder/default-message-notification-level.html","searchKeys":["defaultMessageNotificationLevel","var defaultMessageNotificationLevel: DefaultMessageNotificationLevel?","dev.kord.rest.builder.guild.GuildCreateBuilder.defaultMessageNotificationLevel"]},{"name":"var deleteMessageDuration: Duration?","description":"dev.kord.rest.builder.ban.BanCreateBuilder.deleteMessageDuration","location":"rest/dev.kord.rest.builder.ban/-ban-create-builder/delete-message-duration.html","searchKeys":["deleteMessageDuration","var deleteMessageDuration: Duration?","dev.kord.rest.builder.ban.BanCreateBuilder.deleteMessageDuration"]},{"name":"var denied: Permissions","description":"dev.kord.rest.builder.channel.ChannelPermissionModifyBuilder.denied","location":"rest/dev.kord.rest.builder.channel/-channel-permission-modify-builder/denied.html","searchKeys":["denied","var denied: Permissions","dev.kord.rest.builder.channel.ChannelPermissionModifyBuilder.denied"]},{"name":"var denied: Permissions","description":"dev.kord.rest.builder.channel.PermissionOverwriteBuilder.denied","location":"rest/dev.kord.rest.builder.channel/-permission-overwrite-builder/denied.html","searchKeys":["denied","var denied: Permissions","dev.kord.rest.builder.channel.PermissionOverwriteBuilder.denied"]},{"name":"var description: String","description":"dev.kord.rest.builder.guild.WelcomeScreenChannelBuilder.description","location":"rest/dev.kord.rest.builder.guild/-welcome-screen-channel-builder/description.html","searchKeys":["description","var description: String","dev.kord.rest.builder.guild.WelcomeScreenChannelBuilder.description"]},{"name":"var description: String?","description":"dev.kord.rest.builder.component.SelectOptionBuilder.description","location":"rest/dev.kord.rest.builder.component/-select-option-builder/description.html","searchKeys":["description","var description: String?","dev.kord.rest.builder.component.SelectOptionBuilder.description"]},{"name":"var description: String?","description":"dev.kord.rest.builder.guild.ScheduledEventCreateBuilder.description","location":"rest/dev.kord.rest.builder.guild/-scheduled-event-create-builder/description.html","searchKeys":["description","var description: String?","dev.kord.rest.builder.guild.ScheduledEventCreateBuilder.description"]},{"name":"var description: String?","description":"dev.kord.rest.builder.guild.StickerModifyBuilder.description","location":"rest/dev.kord.rest.builder.guild/-sticker-modify-builder/description.html","searchKeys":["description","var description: String?","dev.kord.rest.builder.guild.StickerModifyBuilder.description"]},{"name":"var description: String?","description":"dev.kord.rest.builder.guild.WelcomeScreenModifyBuilder.description","location":"rest/dev.kord.rest.builder.guild/-welcome-screen-modify-builder/description.html","searchKeys":["description","var description: String?","dev.kord.rest.builder.guild.WelcomeScreenModifyBuilder.description"]},{"name":"var description: String?","description":"dev.kord.rest.builder.message.EmbedBuilder.description","location":"rest/dev.kord.rest.builder.message/-embed-builder/description.html","searchKeys":["description","var description: String?","dev.kord.rest.builder.message.EmbedBuilder.description"]},{"name":"var description: String?","description":"dev.kord.rest.builder.scheduled_events.ScheduledEventModifyBuilder.description","location":"rest/dev.kord.rest.builder.scheduled_events/-scheduled-event-modify-builder/description.html","searchKeys":["description","var description: String?","dev.kord.rest.builder.scheduled_events.ScheduledEventModifyBuilder.description"]},{"name":"var description: String?","description":"dev.kord.rest.builder.template.GuildTemplateCreateBuilder.description","location":"rest/dev.kord.rest.builder.template/-guild-template-create-builder/description.html","searchKeys":["description","var description: String?","dev.kord.rest.builder.template.GuildTemplateCreateBuilder.description"]},{"name":"var description: String?","description":"dev.kord.rest.builder.template.GuildTemplateModifyBuilder.description","location":"rest/dev.kord.rest.builder.template/-guild-template-modify-builder/description.html","searchKeys":["description","var description: String?","dev.kord.rest.builder.template.GuildTemplateModifyBuilder.description"]},{"name":"var disabled: Boolean?","description":"dev.kord.rest.builder.component.ActionRowComponentBuilder.disabled","location":"rest/dev.kord.rest.builder.component/-action-row-component-builder/disabled.html","searchKeys":["disabled","var disabled: Boolean?","dev.kord.rest.builder.component.ActionRowComponentBuilder.disabled"]},{"name":"var duration: Duration","description":"dev.kord.rest.builder.automoderation.TimeoutAutoModerationActionBuilder.duration","location":"rest/dev.kord.rest.builder.automoderation/-timeout-auto-moderation-action-builder/duration.html","searchKeys":["duration","var duration: Duration","dev.kord.rest.builder.automoderation.TimeoutAutoModerationActionBuilder.duration"]},{"name":"var emoji: DiscordPartialEmoji?","description":"dev.kord.rest.builder.component.ButtonBuilder.emoji","location":"rest/dev.kord.rest.builder.component/-button-builder/emoji.html","searchKeys":["emoji","var emoji: DiscordPartialEmoji?","dev.kord.rest.builder.component.ButtonBuilder.emoji"]},{"name":"var emoji: DiscordPartialEmoji?","description":"dev.kord.rest.builder.component.SelectOptionBuilder.emoji","location":"rest/dev.kord.rest.builder.component/-select-option-builder/emoji.html","searchKeys":["emoji","var emoji: DiscordPartialEmoji?","dev.kord.rest.builder.component.SelectOptionBuilder.emoji"]},{"name":"var emojiId: Snowflake?","description":"dev.kord.rest.builder.guild.WelcomeScreenChannelBuilder.emojiId","location":"rest/dev.kord.rest.builder.guild/-welcome-screen-channel-builder/emoji-id.html","searchKeys":["emojiId","var emojiId: Snowflake?","dev.kord.rest.builder.guild.WelcomeScreenChannelBuilder.emojiId"]},{"name":"var emojiName: String?","description":"dev.kord.rest.builder.guild.WelcomeScreenChannelBuilder.emojiName","location":"rest/dev.kord.rest.builder.guild/-welcome-screen-channel-builder/emoji-name.html","searchKeys":["emojiName","var emojiName: String?","dev.kord.rest.builder.guild.WelcomeScreenChannelBuilder.emojiName"]},{"name":"var enableEmoticons: Boolean?","description":"dev.kord.rest.builder.integration.IntegrationModifyBuilder.enableEmoticons","location":"rest/dev.kord.rest.builder.integration/-integration-modify-builder/enable-emoticons.html","searchKeys":["enableEmoticons","var enableEmoticons: Boolean?","dev.kord.rest.builder.integration.IntegrationModifyBuilder.enableEmoticons"]},{"name":"var enabled: Boolean?","description":"dev.kord.rest.builder.guild.GuildWidgetModifyBuilder.enabled","location":"rest/dev.kord.rest.builder.guild/-guild-widget-modify-builder/enabled.html","searchKeys":["enabled","var enabled: Boolean?","dev.kord.rest.builder.guild.GuildWidgetModifyBuilder.enabled"]},{"name":"var enabled: Boolean?","description":"dev.kord.rest.builder.guild.WelcomeScreenModifyBuilder.enabled","location":"rest/dev.kord.rest.builder.guild/-welcome-screen-modify-builder/enabled.html","searchKeys":["enabled","var enabled: Boolean?","dev.kord.rest.builder.guild.WelcomeScreenModifyBuilder.enabled"]},{"name":"var entityMetadata: GuildScheduledEventEntityMetadata?","description":"dev.kord.rest.builder.guild.ScheduledEventCreateBuilder.entityMetadata","location":"rest/dev.kord.rest.builder.guild/-scheduled-event-create-builder/entity-metadata.html","searchKeys":["entityMetadata","var entityMetadata: GuildScheduledEventEntityMetadata?","dev.kord.rest.builder.guild.ScheduledEventCreateBuilder.entityMetadata"]},{"name":"var entityMetadata: GuildScheduledEventEntityMetadata?","description":"dev.kord.rest.builder.scheduled_events.ScheduledEventModifyBuilder.entityMetadata","location":"rest/dev.kord.rest.builder.scheduled_events/-scheduled-event-modify-builder/entity-metadata.html","searchKeys":["entityMetadata","var entityMetadata: GuildScheduledEventEntityMetadata?","dev.kord.rest.builder.scheduled_events.ScheduledEventModifyBuilder.entityMetadata"]},{"name":"var entityType: ScheduledEntityType","description":"dev.kord.rest.builder.guild.ScheduledEventCreateBuilder.entityType","location":"rest/dev.kord.rest.builder.guild/-scheduled-event-create-builder/entity-type.html","searchKeys":["entityType","var entityType: ScheduledEntityType","dev.kord.rest.builder.guild.ScheduledEventCreateBuilder.entityType"]},{"name":"var entityType: ScheduledEntityType?","description":"dev.kord.rest.builder.scheduled_events.ScheduledEventModifyBuilder.entityType","location":"rest/dev.kord.rest.builder.scheduled_events/-scheduled-event-modify-builder/entity-type.html","searchKeys":["entityType","var entityType: ScheduledEntityType?","dev.kord.rest.builder.scheduled_events.ScheduledEventModifyBuilder.entityType"]},{"name":"var everyoneRole: RoleCreateBuilder?","description":"dev.kord.rest.builder.guild.GuildCreateBuilder.everyoneRole","location":"rest/dev.kord.rest.builder.guild/-guild-create-builder/everyone-role.html","searchKeys":["everyoneRole","var everyoneRole: RoleCreateBuilder?","dev.kord.rest.builder.guild.GuildCreateBuilder.everyoneRole"]},{"name":"var expireBehavior: IntegrationExpireBehavior?","description":"dev.kord.rest.builder.integration.IntegrationModifyBuilder.expireBehavior","location":"rest/dev.kord.rest.builder.integration/-integration-modify-builder/expire-behavior.html","searchKeys":["expireBehavior","var expireBehavior: IntegrationExpireBehavior?","dev.kord.rest.builder.integration.IntegrationModifyBuilder.expireBehavior"]},{"name":"var expirePeriodInDays: Int?","description":"dev.kord.rest.builder.integration.IntegrationModifyBuilder.expirePeriodInDays","location":"rest/dev.kord.rest.builder.integration/-integration-modify-builder/expire-period-in-days.html","searchKeys":["expirePeriodInDays","var expirePeriodInDays: Int?","dev.kord.rest.builder.integration.IntegrationModifyBuilder.expirePeriodInDays"]},{"name":"var explicitContentFilter: ExplicitContentFilter?","description":"dev.kord.rest.builder.guild.GuildCreateBuilder.explicitContentFilter","location":"rest/dev.kord.rest.builder.guild/-guild-create-builder/explicit-content-filter.html","searchKeys":["explicitContentFilter","var explicitContentFilter: ExplicitContentFilter?","dev.kord.rest.builder.guild.GuildCreateBuilder.explicitContentFilter"]},{"name":"var explicitContentFilter: ExplicitContentFilter?","description":"dev.kord.rest.builder.guild.GuildModifyBuilder.explicitContentFilter","location":"rest/dev.kord.rest.builder.guild/-guild-modify-builder/explicit-content-filter.html","searchKeys":["explicitContentFilter","var explicitContentFilter: ExplicitContentFilter?","dev.kord.rest.builder.guild.GuildModifyBuilder.explicitContentFilter"]},{"name":"var failIfNotExists: Boolean? = null","description":"dev.kord.rest.builder.message.create.UserMessageCreateBuilder.failIfNotExists","location":"rest/dev.kord.rest.builder.message.create/-user-message-create-builder/fail-if-not-exists.html","searchKeys":["failIfNotExists","var failIfNotExists: Boolean? = null","dev.kord.rest.builder.message.create.UserMessageCreateBuilder.failIfNotExists"]},{"name":"var fields: MutableList<EmbedBuilder.Field>","description":"dev.kord.rest.builder.message.EmbedBuilder.fields","location":"rest/dev.kord.rest.builder.message/-embed-builder/fields.html","searchKeys":["fields","var fields: MutableList<EmbedBuilder.Field>","dev.kord.rest.builder.message.EmbedBuilder.fields"]},{"name":"var flags: MessageFlags?","description":"dev.kord.rest.builder.message.modify.UserMessageModifyBuilder.flags","location":"rest/dev.kord.rest.builder.message.modify/-user-message-modify-builder/flags.html","searchKeys":["flags","var flags: MessageFlags?","dev.kord.rest.builder.message.modify.UserMessageModifyBuilder.flags"]},{"name":"var footer: EmbedBuilder.Footer?","description":"dev.kord.rest.builder.message.EmbedBuilder.footer","location":"rest/dev.kord.rest.builder.message/-embed-builder/footer.html","searchKeys":["footer","var footer: EmbedBuilder.Footer?","dev.kord.rest.builder.message.EmbedBuilder.footer"]},{"name":"var format: Image.Format","description":"dev.kord.rest.route.CdnUrl.UrlFormatBuilder.format","location":"rest/dev.kord.rest.route/-cdn-url/-url-format-builder/format.html","searchKeys":["format","var format: Image.Format","dev.kord.rest.route.CdnUrl.UrlFormatBuilder.format"]},{"name":"var hoist: Boolean?","description":"dev.kord.rest.builder.role.RoleCreateBuilder.hoist","location":"rest/dev.kord.rest.builder.role/-role-create-builder/hoist.html","searchKeys":["hoist","var hoist: Boolean?","dev.kord.rest.builder.role.RoleCreateBuilder.hoist"]},{"name":"var hoist: Boolean?","description":"dev.kord.rest.builder.role.RoleModifyBuilder.hoist","location":"rest/dev.kord.rest.builder.role/-role-modify-builder/hoist.html","searchKeys":["hoist","var hoist: Boolean?","dev.kord.rest.builder.role.RoleModifyBuilder.hoist"]},{"name":"var icon: Image?","description":"dev.kord.rest.builder.guild.GuildCreateBuilder.icon","location":"rest/dev.kord.rest.builder.guild/-guild-create-builder/icon.html","searchKeys":["icon","var icon: Image?","dev.kord.rest.builder.guild.GuildCreateBuilder.icon"]},{"name":"var icon: Image?","description":"dev.kord.rest.builder.guild.GuildModifyBuilder.icon","location":"rest/dev.kord.rest.builder.guild/-guild-modify-builder/icon.html","searchKeys":["icon","var icon: Image?","dev.kord.rest.builder.guild.GuildModifyBuilder.icon"]},{"name":"var icon: Image?","description":"dev.kord.rest.builder.role.RoleCreateBuilder.icon","location":"rest/dev.kord.rest.builder.role/-role-create-builder/icon.html","searchKeys":["icon","var icon: Image?","dev.kord.rest.builder.role.RoleCreateBuilder.icon"]},{"name":"var icon: Image?","description":"dev.kord.rest.builder.role.RoleModifyBuilder.icon","location":"rest/dev.kord.rest.builder.role/-role-modify-builder/icon.html","searchKeys":["icon","var icon: Image?","dev.kord.rest.builder.role.RoleModifyBuilder.icon"]},{"name":"var icon: String?","description":"dev.kord.rest.builder.message.EmbedBuilder.Author.icon","location":"rest/dev.kord.rest.builder.message/-embed-builder/-author/icon.html","searchKeys":["icon","var icon: String?","dev.kord.rest.builder.message.EmbedBuilder.Author.icon"]},{"name":"var icon: String? = null","description":"dev.kord.rest.builder.message.EmbedBuilder.Footer.icon","location":"rest/dev.kord.rest.builder.message/-embed-builder/-footer/icon.html","searchKeys":["icon","var icon: String? = null","dev.kord.rest.builder.message.EmbedBuilder.Footer.icon"]},{"name":"var image: Image","description":"dev.kord.rest.builder.guild.EmojiCreateBuilder.image","location":"rest/dev.kord.rest.builder.guild/-emoji-create-builder/image.html","searchKeys":["image","var image: Image","dev.kord.rest.builder.guild.EmojiCreateBuilder.image"]},{"name":"var image: Image?","description":"dev.kord.rest.builder.guild.ScheduledEventCreateBuilder.image","location":"rest/dev.kord.rest.builder.guild/-scheduled-event-create-builder/image.html","searchKeys":["image","var image: Image?","dev.kord.rest.builder.guild.ScheduledEventCreateBuilder.image"]},{"name":"var image: Image?","description":"dev.kord.rest.builder.scheduled_events.ScheduledEventModifyBuilder.image","location":"rest/dev.kord.rest.builder.scheduled_events/-scheduled-event-modify-builder/image.html","searchKeys":["image","var image: Image?","dev.kord.rest.builder.scheduled_events.ScheduledEventModifyBuilder.image"]},{"name":"var image: Image?","description":"dev.kord.rest.builder.template.GuildFromTemplateCreateBuilder.image","location":"rest/dev.kord.rest.builder.template/-guild-from-template-create-builder/image.html","searchKeys":["image","var image: Image?","dev.kord.rest.builder.template.GuildFromTemplateCreateBuilder.image"]},{"name":"var image: String?","description":"dev.kord.rest.builder.message.EmbedBuilder.image","location":"rest/dev.kord.rest.builder.message/-embed-builder/image.html","searchKeys":["image","var image: String?","dev.kord.rest.builder.message.EmbedBuilder.image"]},{"name":"var inline: Boolean?","description":"dev.kord.rest.builder.message.EmbedBuilder.Field.inline","location":"rest/dev.kord.rest.builder.message/-embed-builder/-field/inline.html","searchKeys":["inline","var inline: Boolean?","dev.kord.rest.builder.message.EmbedBuilder.Field.inline"]},{"name":"var invitable: Boolean?","description":"dev.kord.rest.builder.channel.thread.StartThreadBuilder.invitable","location":"rest/dev.kord.rest.builder.channel.thread/-start-thread-builder/invitable.html","searchKeys":["invitable","var invitable: Boolean?","dev.kord.rest.builder.channel.thread.StartThreadBuilder.invitable"]},{"name":"var invitable: Boolean?","description":"dev.kord.rest.builder.channel.thread.ThreadModifyBuilder.invitable","location":"rest/dev.kord.rest.builder.channel.thread/-thread-modify-builder/invitable.html","searchKeys":["invitable","var invitable: Boolean?","dev.kord.rest.builder.channel.thread.ThreadModifyBuilder.invitable"]},{"name":"var label: String","description":"dev.kord.rest.builder.component.SelectOptionBuilder.label","location":"rest/dev.kord.rest.builder.component/-select-option-builder/label.html","searchKeys":["label","var label: String","dev.kord.rest.builder.component.SelectOptionBuilder.label"]},{"name":"var label: String","description":"dev.kord.rest.builder.component.TextInputBuilder.label","location":"rest/dev.kord.rest.builder.component/-text-input-builder/label.html","searchKeys":["label","var label: String","dev.kord.rest.builder.component.TextInputBuilder.label"]},{"name":"var label: String?","description":"dev.kord.rest.builder.component.ButtonBuilder.label","location":"rest/dev.kord.rest.builder.component/-button-builder/label.html","searchKeys":["label","var label: String?","dev.kord.rest.builder.component.ButtonBuilder.label"]},{"name":"var limit: Int? = null","description":"dev.kord.rest.builder.auditlog.AuditLogGetRequestBuilder.limit","location":"rest/dev.kord.rest.builder.auditlog/-audit-log-get-request-builder/limit.html","searchKeys":["limit","var limit: Int? = null","dev.kord.rest.builder.auditlog.AuditLogGetRequestBuilder.limit"]},{"name":"var lockPermissionsToParent: Boolean? = null","description":"dev.kord.rest.builder.channel.GuildChannelSwapBuilder.lockPermissionsToParent","location":"rest/dev.kord.rest.builder.channel/-guild-channel-swap-builder/lock-permissions-to-parent.html","searchKeys":["lockPermissionsToParent","var lockPermissionsToParent: Boolean? = null","dev.kord.rest.builder.channel.GuildChannelSwapBuilder.lockPermissionsToParent"]},{"name":"var locked: Boolean?","description":"dev.kord.rest.builder.channel.thread.ThreadModifyBuilder.locked","location":"rest/dev.kord.rest.builder.channel.thread/-thread-modify-builder/locked.html","searchKeys":["locked","var locked: Boolean?","dev.kord.rest.builder.channel.thread.ThreadModifyBuilder.locked"]},{"name":"var maxAge: Duration?","description":"dev.kord.rest.builder.channel.InviteCreateBuilder.maxAge","location":"rest/dev.kord.rest.builder.channel/-invite-create-builder/max-age.html","searchKeys":["maxAge","var maxAge: Duration?","dev.kord.rest.builder.channel.InviteCreateBuilder.maxAge"]},{"name":"var maxLength: Int?","description":"dev.kord.rest.builder.interaction.StringChoiceBuilder.maxLength","location":"rest/dev.kord.rest.builder.interaction/-string-choice-builder/max-length.html","searchKeys":["maxLength","var maxLength: Int?","dev.kord.rest.builder.interaction.StringChoiceBuilder.maxLength"]},{"name":"var maxUses: Int?","description":"dev.kord.rest.builder.channel.InviteCreateBuilder.maxUses","location":"rest/dev.kord.rest.builder.channel/-invite-create-builder/max-uses.html","searchKeys":["maxUses","var maxUses: Int?","dev.kord.rest.builder.channel.InviteCreateBuilder.maxUses"]},{"name":"var maxValue: T?","description":"dev.kord.rest.builder.interaction.NumericOptionBuilder.maxValue","location":"rest/dev.kord.rest.builder.interaction/-numeric-option-builder/max-value.html","searchKeys":["maxValue","var maxValue: T?","dev.kord.rest.builder.interaction.NumericOptionBuilder.maxValue"]},{"name":"var mentionable: Boolean?","description":"dev.kord.rest.builder.role.RoleCreateBuilder.mentionable","location":"rest/dev.kord.rest.builder.role/-role-create-builder/mentionable.html","searchKeys":["mentionable","var mentionable: Boolean?","dev.kord.rest.builder.role.RoleCreateBuilder.mentionable"]},{"name":"var mentionable: Boolean?","description":"dev.kord.rest.builder.role.RoleModifyBuilder.mentionable","location":"rest/dev.kord.rest.builder.role/-role-modify-builder/mentionable.html","searchKeys":["mentionable","var mentionable: Boolean?","dev.kord.rest.builder.role.RoleModifyBuilder.mentionable"]},{"name":"var messageReference: Snowflake? = null","description":"dev.kord.rest.builder.message.create.UserMessageCreateBuilder.messageReference","location":"rest/dev.kord.rest.builder.message.create/-user-message-create-builder/message-reference.html","searchKeys":["messageReference","var messageReference: Snowflake? = null","dev.kord.rest.builder.message.create.UserMessageCreateBuilder.messageReference"]},{"name":"var minLength: Int?","description":"dev.kord.rest.builder.interaction.StringChoiceBuilder.minLength","location":"rest/dev.kord.rest.builder.interaction/-string-choice-builder/min-length.html","searchKeys":["minLength","var minLength: Int?","dev.kord.rest.builder.interaction.StringChoiceBuilder.minLength"]},{"name":"var minValue: T?","description":"dev.kord.rest.builder.interaction.NumericOptionBuilder.minValue","location":"rest/dev.kord.rest.builder.interaction/-numeric-option-builder/min-value.html","searchKeys":["minValue","var minValue: T?","dev.kord.rest.builder.interaction.NumericOptionBuilder.minValue"]},{"name":"var muted: Boolean?","description":"dev.kord.rest.builder.member.MemberAddBuilder.muted","location":"rest/dev.kord.rest.builder.member/-member-add-builder/muted.html","searchKeys":["muted","var muted: Boolean?","dev.kord.rest.builder.member.MemberAddBuilder.muted"]},{"name":"var muted: Boolean?","description":"dev.kord.rest.builder.member.MemberModifyBuilder.muted","location":"rest/dev.kord.rest.builder.member/-member-modify-builder/muted.html","searchKeys":["muted","var muted: Boolean?","dev.kord.rest.builder.member.MemberModifyBuilder.muted"]},{"name":"var name: String","description":"dev.kord.rest.builder.channel.CategoryCreateBuilder.name","location":"rest/dev.kord.rest.builder.channel/-category-create-builder/name.html","searchKeys":["name","var name: String","dev.kord.rest.builder.channel.CategoryCreateBuilder.name"]},{"name":"var name: String","description":"dev.kord.rest.builder.channel.NewsChannelCreateBuilder.name","location":"rest/dev.kord.rest.builder.channel/-news-channel-create-builder/name.html","searchKeys":["name","var name: String","dev.kord.rest.builder.channel.NewsChannelCreateBuilder.name"]},{"name":"var name: String","description":"dev.kord.rest.builder.channel.TextChannelCreateBuilder.name","location":"rest/dev.kord.rest.builder.channel/-text-channel-create-builder/name.html","searchKeys":["name","var name: String","dev.kord.rest.builder.channel.TextChannelCreateBuilder.name"]},{"name":"var name: String","description":"dev.kord.rest.builder.channel.VoiceChannelCreateBuilder.name","location":"rest/dev.kord.rest.builder.channel/-voice-channel-create-builder/name.html","searchKeys":["name","var name: String","dev.kord.rest.builder.channel.VoiceChannelCreateBuilder.name"]},{"name":"var name: String","description":"dev.kord.rest.builder.channel.thread.StartThreadBuilder.name","location":"rest/dev.kord.rest.builder.channel.thread/-start-thread-builder/name.html","searchKeys":["name","var name: String","dev.kord.rest.builder.channel.thread.StartThreadBuilder.name"]},{"name":"var name: String","description":"dev.kord.rest.builder.channel.thread.StartThreadWithMessageBuilder.name","location":"rest/dev.kord.rest.builder.channel.thread/-start-thread-with-message-builder/name.html","searchKeys":["name","var name: String","dev.kord.rest.builder.channel.thread.StartThreadWithMessageBuilder.name"]},{"name":"var name: String","description":"dev.kord.rest.builder.guild.EmojiCreateBuilder.name","location":"rest/dev.kord.rest.builder.guild/-emoji-create-builder/name.html","searchKeys":["name","var name: String","dev.kord.rest.builder.guild.EmojiCreateBuilder.name"]},{"name":"var name: String","description":"dev.kord.rest.builder.guild.GuildCreateBuilder.name","location":"rest/dev.kord.rest.builder.guild/-guild-create-builder/name.html","searchKeys":["name","var name: String","dev.kord.rest.builder.guild.GuildCreateBuilder.name"]},{"name":"var name: String","description":"dev.kord.rest.builder.guild.ScheduledEventCreateBuilder.name","location":"rest/dev.kord.rest.builder.guild/-scheduled-event-create-builder/name.html","searchKeys":["name","var name: String","dev.kord.rest.builder.guild.ScheduledEventCreateBuilder.name"]},{"name":"var name: String","description":"dev.kord.rest.builder.message.EmbedBuilder.Field.name","location":"rest/dev.kord.rest.builder.message/-embed-builder/-field/name.html","searchKeys":["name","var name: String","dev.kord.rest.builder.message.EmbedBuilder.Field.name"]},{"name":"var name: String","description":"dev.kord.rest.builder.template.GuildFromTemplateCreateBuilder.name","location":"rest/dev.kord.rest.builder.template/-guild-from-template-create-builder/name.html","searchKeys":["name","var name: String","dev.kord.rest.builder.template.GuildFromTemplateCreateBuilder.name"]},{"name":"var name: String","description":"dev.kord.rest.builder.template.GuildTemplateCreateBuilder.name","location":"rest/dev.kord.rest.builder.template/-guild-template-create-builder/name.html","searchKeys":["name","var name: String","dev.kord.rest.builder.template.GuildTemplateCreateBuilder.name"]},{"name":"var name: String","description":"dev.kord.rest.builder.webhook.WebhookCreateBuilder.name","location":"rest/dev.kord.rest.builder.webhook/-webhook-create-builder/name.html","searchKeys":["name","var name: String","dev.kord.rest.builder.webhook.WebhookCreateBuilder.name"]},{"name":"var name: String?","description":"dev.kord.rest.builder.channel.CategoryModifyBuilder.name","location":"rest/dev.kord.rest.builder.channel/-category-modify-builder/name.html","searchKeys":["name","var name: String?","dev.kord.rest.builder.channel.CategoryModifyBuilder.name"]},{"name":"var name: String?","description":"dev.kord.rest.builder.channel.NewsChannelModifyBuilder.name","location":"rest/dev.kord.rest.builder.channel/-news-channel-modify-builder/name.html","searchKeys":["name","var name: String?","dev.kord.rest.builder.channel.NewsChannelModifyBuilder.name"]},{"name":"var name: String?","description":"dev.kord.rest.builder.channel.StageVoiceChannelModifyBuilder.name","location":"rest/dev.kord.rest.builder.channel/-stage-voice-channel-modify-builder/name.html","searchKeys":["name","var name: String?","dev.kord.rest.builder.channel.StageVoiceChannelModifyBuilder.name"]},{"name":"var name: String?","description":"dev.kord.rest.builder.channel.TextChannelModifyBuilder.name","location":"rest/dev.kord.rest.builder.channel/-text-channel-modify-builder/name.html","searchKeys":["name","var name: String?","dev.kord.rest.builder.channel.TextChannelModifyBuilder.name"]},{"name":"var name: String?","description":"dev.kord.rest.builder.channel.VoiceChannelModifyBuilder.name","location":"rest/dev.kord.rest.builder.channel/-voice-channel-modify-builder/name.html","searchKeys":["name","var name: String?","dev.kord.rest.builder.channel.VoiceChannelModifyBuilder.name"]},{"name":"var name: String?","description":"dev.kord.rest.builder.channel.thread.ThreadModifyBuilder.name","location":"rest/dev.kord.rest.builder.channel.thread/-thread-modify-builder/name.html","searchKeys":["name","var name: String?","dev.kord.rest.builder.channel.thread.ThreadModifyBuilder.name"]},{"name":"var name: String?","description":"dev.kord.rest.builder.guild.EmojiModifyBuilder.name","location":"rest/dev.kord.rest.builder.guild/-emoji-modify-builder/name.html","searchKeys":["name","var name: String?","dev.kord.rest.builder.guild.EmojiModifyBuilder.name"]},{"name":"var name: String?","description":"dev.kord.rest.builder.guild.GuildModifyBuilder.name","location":"rest/dev.kord.rest.builder.guild/-guild-modify-builder/name.html","searchKeys":["name","var name: String?","dev.kord.rest.builder.guild.GuildModifyBuilder.name"]},{"name":"var name: String?","description":"dev.kord.rest.builder.guild.StickerModifyBuilder.name","location":"rest/dev.kord.rest.builder.guild/-sticker-modify-builder/name.html","searchKeys":["name","var name: String?","dev.kord.rest.builder.guild.StickerModifyBuilder.name"]},{"name":"var name: String?","description":"dev.kord.rest.builder.message.EmbedBuilder.Author.name","location":"rest/dev.kord.rest.builder.message/-embed-builder/-author/name.html","searchKeys":["name","var name: String?","dev.kord.rest.builder.message.EmbedBuilder.Author.name"]},{"name":"var name: String?","description":"dev.kord.rest.builder.role.RoleCreateBuilder.name","location":"rest/dev.kord.rest.builder.role/-role-create-builder/name.html","searchKeys":["name","var name: String?","dev.kord.rest.builder.role.RoleCreateBuilder.name"]},{"name":"var name: String?","description":"dev.kord.rest.builder.role.RoleModifyBuilder.name","location":"rest/dev.kord.rest.builder.role/-role-modify-builder/name.html","searchKeys":["name","var name: String?","dev.kord.rest.builder.role.RoleModifyBuilder.name"]},{"name":"var name: String?","description":"dev.kord.rest.builder.scheduled_events.ScheduledEventModifyBuilder.name","location":"rest/dev.kord.rest.builder.scheduled_events/-scheduled-event-modify-builder/name.html","searchKeys":["name","var name: String?","dev.kord.rest.builder.scheduled_events.ScheduledEventModifyBuilder.name"]},{"name":"var name: String?","description":"dev.kord.rest.builder.template.GuildTemplateModifyBuilder.name","location":"rest/dev.kord.rest.builder.template/-guild-template-modify-builder/name.html","searchKeys":["name","var name: String?","dev.kord.rest.builder.template.GuildTemplateModifyBuilder.name"]},{"name":"var name: String?","description":"dev.kord.rest.builder.webhook.WebhookModifyBuilder.name","location":"rest/dev.kord.rest.builder.webhook/-webhook-modify-builder/name.html","searchKeys":["name","var name: String?","dev.kord.rest.builder.webhook.WebhookModifyBuilder.name"]},{"name":"var nickname: String?","description":"dev.kord.rest.builder.member.MemberAddBuilder.nickname","location":"rest/dev.kord.rest.builder.member/-member-add-builder/nickname.html","searchKeys":["nickname","var nickname: String?","dev.kord.rest.builder.member.MemberAddBuilder.nickname"]},{"name":"var nickname: String?","description":"dev.kord.rest.builder.member.MemberModifyBuilder.nickname","location":"rest/dev.kord.rest.builder.member/-member-modify-builder/nickname.html","searchKeys":["nickname","var nickname: String?","dev.kord.rest.builder.member.MemberModifyBuilder.nickname"]},{"name":"var nonce: String? = null","description":"dev.kord.rest.builder.message.create.UserMessageCreateBuilder.nonce","location":"rest/dev.kord.rest.builder.message.create/-user-message-create-builder/nonce.html","searchKeys":["nonce","var nonce: String? = null","dev.kord.rest.builder.message.create.UserMessageCreateBuilder.nonce"]},{"name":"var notificationLevel: DefaultMessageNotificationLevel?","description":"dev.kord.rest.builder.guild.GuildModifyBuilder.notificationLevel","location":"rest/dev.kord.rest.builder.guild/-guild-modify-builder/notification-level.html","searchKeys":["notificationLevel","var notificationLevel: DefaultMessageNotificationLevel?","dev.kord.rest.builder.guild.GuildModifyBuilder.notificationLevel"]},{"name":"var nsfw: Boolean?","description":"dev.kord.rest.builder.channel.CategoryCreateBuilder.nsfw","location":"rest/dev.kord.rest.builder.channel/-category-create-builder/nsfw.html","searchKeys":["nsfw","var nsfw: Boolean?","dev.kord.rest.builder.channel.CategoryCreateBuilder.nsfw"]},{"name":"var nsfw: Boolean?","description":"dev.kord.rest.builder.channel.NewsChannelCreateBuilder.nsfw","location":"rest/dev.kord.rest.builder.channel/-news-channel-create-builder/nsfw.html","searchKeys":["nsfw","var nsfw: Boolean?","dev.kord.rest.builder.channel.NewsChannelCreateBuilder.nsfw"]},{"name":"var nsfw: Boolean?","description":"dev.kord.rest.builder.channel.NewsChannelModifyBuilder.nsfw","location":"rest/dev.kord.rest.builder.channel/-news-channel-modify-builder/nsfw.html","searchKeys":["nsfw","var nsfw: Boolean?","dev.kord.rest.builder.channel.NewsChannelModifyBuilder.nsfw"]},{"name":"var nsfw: Boolean?","description":"dev.kord.rest.builder.channel.TextChannelCreateBuilder.nsfw","location":"rest/dev.kord.rest.builder.channel/-text-channel-create-builder/nsfw.html","searchKeys":["nsfw","var nsfw: Boolean?","dev.kord.rest.builder.channel.TextChannelCreateBuilder.nsfw"]},{"name":"var nsfw: Boolean?","description":"dev.kord.rest.builder.channel.TextChannelModifyBuilder.nsfw","location":"rest/dev.kord.rest.builder.channel/-text-channel-modify-builder/nsfw.html","searchKeys":["nsfw","var nsfw: Boolean?","dev.kord.rest.builder.channel.TextChannelModifyBuilder.nsfw"]},{"name":"var nsfw: Boolean?","description":"dev.kord.rest.builder.channel.VoiceChannelCreateBuilder.nsfw","location":"rest/dev.kord.rest.builder.channel/-voice-channel-create-builder/nsfw.html","searchKeys":["nsfw","var nsfw: Boolean?","dev.kord.rest.builder.channel.VoiceChannelCreateBuilder.nsfw"]},{"name":"var nsfw: Boolean?","description":"dev.kord.rest.builder.channel.VoiceChannelModifyBuilder.nsfw","location":"rest/dev.kord.rest.builder.channel/-voice-channel-modify-builder/nsfw.html","searchKeys":["nsfw","var nsfw: Boolean?","dev.kord.rest.builder.channel.VoiceChannelModifyBuilder.nsfw"]},{"name":"var options: MutableList<OptionsBuilder>?","description":"dev.kord.rest.builder.interaction.BaseCommandOptionBuilder.options","location":"rest/dev.kord.rest.builder.interaction/-base-command-option-builder/options.html","searchKeys":["options","var options: MutableList<OptionsBuilder>?","dev.kord.rest.builder.interaction.BaseCommandOptionBuilder.options"]},{"name":"var ownerId: Snowflake?","description":"dev.kord.rest.builder.guild.GuildModifyBuilder.ownerId","location":"rest/dev.kord.rest.builder.guild/-guild-modify-builder/owner-id.html","searchKeys":["ownerId","var ownerId: Snowflake?","dev.kord.rest.builder.guild.GuildModifyBuilder.ownerId"]},{"name":"var parentId: Snowflake?","description":"dev.kord.rest.builder.channel.NewsChannelCreateBuilder.parentId","location":"rest/dev.kord.rest.builder.channel/-news-channel-create-builder/parent-id.html","searchKeys":["parentId","var parentId: Snowflake?","dev.kord.rest.builder.channel.NewsChannelCreateBuilder.parentId"]},{"name":"var parentId: Snowflake?","description":"dev.kord.rest.builder.channel.NewsChannelModifyBuilder.parentId","location":"rest/dev.kord.rest.builder.channel/-news-channel-modify-builder/parent-id.html","searchKeys":["parentId","var parentId: Snowflake?","dev.kord.rest.builder.channel.NewsChannelModifyBuilder.parentId"]},{"name":"var parentId: Snowflake?","description":"dev.kord.rest.builder.channel.StageVoiceChannelModifyBuilder.parentId","location":"rest/dev.kord.rest.builder.channel/-stage-voice-channel-modify-builder/parent-id.html","searchKeys":["parentId","var parentId: Snowflake?","dev.kord.rest.builder.channel.StageVoiceChannelModifyBuilder.parentId"]},{"name":"var parentId: Snowflake?","description":"dev.kord.rest.builder.channel.TextChannelCreateBuilder.parentId","location":"rest/dev.kord.rest.builder.channel/-text-channel-create-builder/parent-id.html","searchKeys":["parentId","var parentId: Snowflake?","dev.kord.rest.builder.channel.TextChannelCreateBuilder.parentId"]},{"name":"var parentId: Snowflake?","description":"dev.kord.rest.builder.channel.TextChannelModifyBuilder.parentId","location":"rest/dev.kord.rest.builder.channel/-text-channel-modify-builder/parent-id.html","searchKeys":["parentId","var parentId: Snowflake?","dev.kord.rest.builder.channel.TextChannelModifyBuilder.parentId"]},{"name":"var parentId: Snowflake?","description":"dev.kord.rest.builder.channel.VoiceChannelCreateBuilder.parentId","location":"rest/dev.kord.rest.builder.channel/-voice-channel-create-builder/parent-id.html","searchKeys":["parentId","var parentId: Snowflake?","dev.kord.rest.builder.channel.VoiceChannelCreateBuilder.parentId"]},{"name":"var parentId: Snowflake?","description":"dev.kord.rest.builder.channel.VoiceChannelModifyBuilder.parentId","location":"rest/dev.kord.rest.builder.channel/-voice-channel-modify-builder/parent-id.html","searchKeys":["parentId","var parentId: Snowflake?","dev.kord.rest.builder.channel.VoiceChannelModifyBuilder.parentId"]},{"name":"var parentId: Snowflake? = null","description":"dev.kord.rest.builder.channel.GuildChannelSwapBuilder.parentId","location":"rest/dev.kord.rest.builder.channel/-guild-channel-swap-builder/parent-id.html","searchKeys":["parentId","var parentId: Snowflake? = null","dev.kord.rest.builder.channel.GuildChannelSwapBuilder.parentId"]},{"name":"var permissions: Permissions?","description":"dev.kord.rest.builder.role.RoleCreateBuilder.permissions","location":"rest/dev.kord.rest.builder.role/-role-create-builder/permissions.html","searchKeys":["permissions","var permissions: Permissions?","dev.kord.rest.builder.role.RoleCreateBuilder.permissions"]},{"name":"var permissions: Permissions?","description":"dev.kord.rest.builder.role.RoleModifyBuilder.permissions","location":"rest/dev.kord.rest.builder.role/-role-modify-builder/permissions.html","searchKeys":["permissions","var permissions: Permissions?","dev.kord.rest.builder.role.RoleModifyBuilder.permissions"]},{"name":"var placeholder: String?","description":"dev.kord.rest.builder.component.SelectMenuBuilder.placeholder","location":"rest/dev.kord.rest.builder.component/-select-menu-builder/placeholder.html","searchKeys":["placeholder","var placeholder: String?","dev.kord.rest.builder.component.SelectMenuBuilder.placeholder"]},{"name":"var placeholder: String?","description":"dev.kord.rest.builder.component.TextInputBuilder.placeholder","location":"rest/dev.kord.rest.builder.component/-text-input-builder/placeholder.html","searchKeys":["placeholder","var placeholder: String?","dev.kord.rest.builder.component.TextInputBuilder.placeholder"]},{"name":"var position: Int?","description":"dev.kord.rest.builder.channel.CategoryCreateBuilder.position","location":"rest/dev.kord.rest.builder.channel/-category-create-builder/position.html","searchKeys":["position","var position: Int?","dev.kord.rest.builder.channel.CategoryCreateBuilder.position"]},{"name":"var position: Int?","description":"dev.kord.rest.builder.channel.CategoryModifyBuilder.position","location":"rest/dev.kord.rest.builder.channel/-category-modify-builder/position.html","searchKeys":["position","var position: Int?","dev.kord.rest.builder.channel.CategoryModifyBuilder.position"]},{"name":"var position: Int?","description":"dev.kord.rest.builder.channel.GuildChannelSwapBuilder.position","location":"rest/dev.kord.rest.builder.channel/-guild-channel-swap-builder/position.html","searchKeys":["position","var position: Int?","dev.kord.rest.builder.channel.GuildChannelSwapBuilder.position"]},{"name":"var position: Int?","description":"dev.kord.rest.builder.channel.NewsChannelCreateBuilder.position","location":"rest/dev.kord.rest.builder.channel/-news-channel-create-builder/position.html","searchKeys":["position","var position: Int?","dev.kord.rest.builder.channel.NewsChannelCreateBuilder.position"]},{"name":"var position: Int?","description":"dev.kord.rest.builder.channel.NewsChannelModifyBuilder.position","location":"rest/dev.kord.rest.builder.channel/-news-channel-modify-builder/position.html","searchKeys":["position","var position: Int?","dev.kord.rest.builder.channel.NewsChannelModifyBuilder.position"]},{"name":"var position: Int?","description":"dev.kord.rest.builder.channel.StageVoiceChannelModifyBuilder.position","location":"rest/dev.kord.rest.builder.channel/-stage-voice-channel-modify-builder/position.html","searchKeys":["position","var position: Int?","dev.kord.rest.builder.channel.StageVoiceChannelModifyBuilder.position"]},{"name":"var position: Int?","description":"dev.kord.rest.builder.channel.TextChannelCreateBuilder.position","location":"rest/dev.kord.rest.builder.channel/-text-channel-create-builder/position.html","searchKeys":["position","var position: Int?","dev.kord.rest.builder.channel.TextChannelCreateBuilder.position"]},{"name":"var position: Int?","description":"dev.kord.rest.builder.channel.TextChannelModifyBuilder.position","location":"rest/dev.kord.rest.builder.channel/-text-channel-modify-builder/position.html","searchKeys":["position","var position: Int?","dev.kord.rest.builder.channel.TextChannelModifyBuilder.position"]},{"name":"var position: Int?","description":"dev.kord.rest.builder.channel.VoiceChannelCreateBuilder.position","location":"rest/dev.kord.rest.builder.channel/-voice-channel-create-builder/position.html","searchKeys":["position","var position: Int?","dev.kord.rest.builder.channel.VoiceChannelCreateBuilder.position"]},{"name":"var position: Int?","description":"dev.kord.rest.builder.channel.VoiceChannelModifyBuilder.position","location":"rest/dev.kord.rest.builder.channel/-voice-channel-modify-builder/position.html","searchKeys":["position","var position: Int?","dev.kord.rest.builder.channel.VoiceChannelModifyBuilder.position"]},{"name":"var preferredLocale: Locale?","description":"dev.kord.rest.builder.guild.GuildModifyBuilder.preferredLocale","location":"rest/dev.kord.rest.builder.guild/-guild-modify-builder/preferred-locale.html","searchKeys":["preferredLocale","var preferredLocale: Locale?","dev.kord.rest.builder.guild.GuildModifyBuilder.preferredLocale"]},{"name":"var privacyLevel: GuildScheduledEventPrivacyLevel","description":"dev.kord.rest.builder.guild.ScheduledEventCreateBuilder.privacyLevel","location":"rest/dev.kord.rest.builder.guild/-scheduled-event-create-builder/privacy-level.html","searchKeys":["privacyLevel","var privacyLevel: GuildScheduledEventPrivacyLevel","dev.kord.rest.builder.guild.ScheduledEventCreateBuilder.privacyLevel"]},{"name":"var privacyLevel: GuildScheduledEventPrivacyLevel?","description":"dev.kord.rest.builder.scheduled_events.ScheduledEventModifyBuilder.privacyLevel","location":"rest/dev.kord.rest.builder.scheduled_events/-scheduled-event-modify-builder/privacy-level.html","searchKeys":["privacyLevel","var privacyLevel: GuildScheduledEventPrivacyLevel?","dev.kord.rest.builder.scheduled_events.ScheduledEventModifyBuilder.privacyLevel"]},{"name":"var privacyLevel: StageInstancePrivacyLevel?","description":"dev.kord.rest.builder.stage.StageInstanceCreateBuilder.privacyLevel","location":"rest/dev.kord.rest.builder.stage/-stage-instance-create-builder/privacy-level.html","searchKeys":["privacyLevel","var privacyLevel: StageInstancePrivacyLevel?","dev.kord.rest.builder.stage.StageInstanceCreateBuilder.privacyLevel"]},{"name":"var privacyLevel: StageInstancePrivacyLevel?","description":"dev.kord.rest.builder.stage.StageInstanceModifyBuilder.privacyLevel","location":"rest/dev.kord.rest.builder.stage/-stage-instance-modify-builder/privacy-level.html","searchKeys":["privacyLevel","var privacyLevel: StageInstancePrivacyLevel?","dev.kord.rest.builder.stage.StageInstanceModifyBuilder.privacyLevel"]},{"name":"var publicUpdatesChannelId: Snowflake?","description":"dev.kord.rest.builder.guild.GuildModifyBuilder.publicUpdatesChannelId","location":"rest/dev.kord.rest.builder.guild/-guild-modify-builder/public-updates-channel-id.html","searchKeys":["publicUpdatesChannelId","var publicUpdatesChannelId: Snowflake?","dev.kord.rest.builder.guild.GuildModifyBuilder.publicUpdatesChannelId"]},{"name":"var rateLimitPerUser: Duration?","description":"dev.kord.rest.builder.channel.NewsChannelModifyBuilder.rateLimitPerUser","location":"rest/dev.kord.rest.builder.channel/-news-channel-modify-builder/rate-limit-per-user.html","searchKeys":["rateLimitPerUser","var rateLimitPerUser: Duration?","dev.kord.rest.builder.channel.NewsChannelModifyBuilder.rateLimitPerUser"]},{"name":"var rateLimitPerUser: Duration?","description":"dev.kord.rest.builder.channel.TextChannelCreateBuilder.rateLimitPerUser","location":"rest/dev.kord.rest.builder.channel/-text-channel-create-builder/rate-limit-per-user.html","searchKeys":["rateLimitPerUser","var rateLimitPerUser: Duration?","dev.kord.rest.builder.channel.TextChannelCreateBuilder.rateLimitPerUser"]},{"name":"var rateLimitPerUser: Duration?","description":"dev.kord.rest.builder.channel.TextChannelModifyBuilder.rateLimitPerUser","location":"rest/dev.kord.rest.builder.channel/-text-channel-modify-builder/rate-limit-per-user.html","searchKeys":["rateLimitPerUser","var rateLimitPerUser: Duration?","dev.kord.rest.builder.channel.TextChannelModifyBuilder.rateLimitPerUser"]},{"name":"var rateLimitPerUser: Duration?","description":"dev.kord.rest.builder.channel.thread.ThreadModifyBuilder.rateLimitPerUser","location":"rest/dev.kord.rest.builder.channel.thread/-thread-modify-builder/rate-limit-per-user.html","searchKeys":["rateLimitPerUser","var rateLimitPerUser: Duration?","dev.kord.rest.builder.channel.thread.ThreadModifyBuilder.rateLimitPerUser"]},{"name":"var region: String?","description":"dev.kord.rest.builder.guild.GuildCreateBuilder.region","location":"rest/dev.kord.rest.builder.guild/-guild-create-builder/region.html","searchKeys":["region","var region: String?","dev.kord.rest.builder.guild.GuildCreateBuilder.region"]},{"name":"var region: String?","description":"dev.kord.rest.builder.guild.GuildModifyBuilder.region","location":"rest/dev.kord.rest.builder.guild/-guild-modify-builder/region.html","searchKeys":["region","var region: String?","dev.kord.rest.builder.guild.GuildModifyBuilder.region"]},{"name":"var repliedUser: Boolean?","description":"dev.kord.rest.builder.message.AllowedMentionsBuilder.repliedUser","location":"rest/dev.kord.rest.builder.message/-allowed-mentions-builder/replied-user.html","searchKeys":["repliedUser","var repliedUser: Boolean?","dev.kord.rest.builder.message.AllowedMentionsBuilder.repliedUser"]},{"name":"var requestToSpeakTimestamp: Instant?","description":"dev.kord.rest.builder.guild.CurrentVoiceStateModifyBuilder.requestToSpeakTimestamp","location":"rest/dev.kord.rest.builder.guild/-current-voice-state-modify-builder/request-to-speak-timestamp.html","searchKeys":["requestToSpeakTimestamp","var requestToSpeakTimestamp: Instant?","dev.kord.rest.builder.guild.CurrentVoiceStateModifyBuilder.requestToSpeakTimestamp"]},{"name":"var required: Boolean?","description":"dev.kord.rest.builder.component.TextInputBuilder.required","location":"rest/dev.kord.rest.builder.component/-text-input-builder/required.html","searchKeys":["required","var required: Boolean?","dev.kord.rest.builder.component.TextInputBuilder.required"]},{"name":"var required: Boolean?","description":"dev.kord.rest.builder.interaction.OptionsBuilder.required","location":"rest/dev.kord.rest.builder.interaction/-options-builder/required.html","searchKeys":["required","var required: Boolean?","dev.kord.rest.builder.interaction.OptionsBuilder.required"]},{"name":"var roles: MutableSet<Snowflake>","description":"dev.kord.rest.builder.guild.EmojiCreateBuilder.roles","location":"rest/dev.kord.rest.builder.guild/-emoji-create-builder/roles.html","searchKeys":["roles","var roles: MutableSet<Snowflake>","dev.kord.rest.builder.guild.EmojiCreateBuilder.roles"]},{"name":"var roles: MutableSet<Snowflake>","description":"dev.kord.rest.builder.member.MemberAddBuilder.roles","location":"rest/dev.kord.rest.builder.member/-member-add-builder/roles.html","searchKeys":["roles","var roles: MutableSet<Snowflake>","dev.kord.rest.builder.member.MemberAddBuilder.roles"]},{"name":"var roles: MutableSet<Snowflake>?","description":"dev.kord.rest.builder.guild.EmojiModifyBuilder.roles","location":"rest/dev.kord.rest.builder.guild/-emoji-modify-builder/roles.html","searchKeys":["roles","var roles: MutableSet<Snowflake>?","dev.kord.rest.builder.guild.EmojiModifyBuilder.roles"]},{"name":"var roles: MutableSet<Snowflake>?","description":"dev.kord.rest.builder.member.MemberModifyBuilder.roles","location":"rest/dev.kord.rest.builder.member/-member-modify-builder/roles.html","searchKeys":["roles","var roles: MutableSet<Snowflake>?","dev.kord.rest.builder.member.MemberModifyBuilder.roles"]},{"name":"var rtcRegion: String?","description":"dev.kord.rest.builder.channel.StageVoiceChannelModifyBuilder.rtcRegion","location":"rest/dev.kord.rest.builder.channel/-stage-voice-channel-modify-builder/rtc-region.html","searchKeys":["rtcRegion","var rtcRegion: String?","dev.kord.rest.builder.channel.StageVoiceChannelModifyBuilder.rtcRegion"]},{"name":"var rtcRegion: String?","description":"dev.kord.rest.builder.channel.VoiceChannelModifyBuilder.rtcRegion","location":"rest/dev.kord.rest.builder.channel/-voice-channel-modify-builder/rtc-region.html","searchKeys":["rtcRegion","var rtcRegion: String?","dev.kord.rest.builder.channel.VoiceChannelModifyBuilder.rtcRegion"]},{"name":"var rulesChannelId: Snowflake?","description":"dev.kord.rest.builder.guild.GuildModifyBuilder.rulesChannelId","location":"rest/dev.kord.rest.builder.guild/-guild-modify-builder/rules-channel-id.html","searchKeys":["rulesChannelId","var rulesChannelId: Snowflake?","dev.kord.rest.builder.guild.GuildModifyBuilder.rulesChannelId"]},{"name":"var scheduledEndTime: Instant?","description":"dev.kord.rest.builder.guild.ScheduledEventCreateBuilder.scheduledEndTime","location":"rest/dev.kord.rest.builder.guild/-scheduled-event-create-builder/scheduled-end-time.html","searchKeys":["scheduledEndTime","var scheduledEndTime: Instant?","dev.kord.rest.builder.guild.ScheduledEventCreateBuilder.scheduledEndTime"]},{"name":"var scheduledEndTime: Instant?","description":"dev.kord.rest.builder.scheduled_events.ScheduledEventModifyBuilder.scheduledEndTime","location":"rest/dev.kord.rest.builder.scheduled_events/-scheduled-event-modify-builder/scheduled-end-time.html","searchKeys":["scheduledEndTime","var scheduledEndTime: Instant?","dev.kord.rest.builder.scheduled_events.ScheduledEventModifyBuilder.scheduledEndTime"]},{"name":"var scheduledStartTime: Instant","description":"dev.kord.rest.builder.guild.ScheduledEventCreateBuilder.scheduledStartTime","location":"rest/dev.kord.rest.builder.guild/-scheduled-event-create-builder/scheduled-start-time.html","searchKeys":["scheduledStartTime","var scheduledStartTime: Instant","dev.kord.rest.builder.guild.ScheduledEventCreateBuilder.scheduledStartTime"]},{"name":"var scheduledStartTime: Instant?","description":"dev.kord.rest.builder.scheduled_events.ScheduledEventModifyBuilder.scheduledStartTime","location":"rest/dev.kord.rest.builder.scheduled_events/-scheduled-event-modify-builder/scheduled-start-time.html","searchKeys":["scheduledStartTime","var scheduledStartTime: Instant?","dev.kord.rest.builder.scheduled_events.ScheduledEventModifyBuilder.scheduledStartTime"]},{"name":"var sendStartNotification: Boolean?","description":"dev.kord.rest.builder.stage.StageInstanceCreateBuilder.sendStartNotification","location":"rest/dev.kord.rest.builder.stage/-stage-instance-create-builder/send-start-notification.html","searchKeys":["sendStartNotification","var sendStartNotification: Boolean?","dev.kord.rest.builder.stage.StageInstanceCreateBuilder.sendStartNotification"]},{"name":"var size: Image.Size? = null","description":"dev.kord.rest.route.CdnUrl.UrlFormatBuilder.size","location":"rest/dev.kord.rest.route/-cdn-url/-url-format-builder/size.html","searchKeys":["size","var size: Image.Size? = null","dev.kord.rest.route.CdnUrl.UrlFormatBuilder.size"]},{"name":"var splash: Image?","description":"dev.kord.rest.builder.guild.GuildModifyBuilder.splash","location":"rest/dev.kord.rest.builder.guild/-guild-modify-builder/splash.html","searchKeys":["splash","var splash: Image?","dev.kord.rest.builder.guild.GuildModifyBuilder.splash"]},{"name":"var status: GuildScheduledEventStatus?","description":"dev.kord.rest.builder.scheduled_events.ScheduledEventModifyBuilder.status","location":"rest/dev.kord.rest.builder.scheduled_events/-scheduled-event-modify-builder/status.html","searchKeys":["status","var status: GuildScheduledEventStatus?","dev.kord.rest.builder.scheduled_events.ScheduledEventModifyBuilder.status"]},{"name":"var style: ButtonStyle","description":"dev.kord.rest.builder.component.ButtonBuilder.InteractionButtonBuilder.style","location":"rest/dev.kord.rest.builder.component/-button-builder/-interaction-button-builder/style.html","searchKeys":["style","var style: ButtonStyle","dev.kord.rest.builder.component.ButtonBuilder.InteractionButtonBuilder.style"]},{"name":"var style: TextInputStyle","description":"dev.kord.rest.builder.component.TextInputBuilder.style","location":"rest/dev.kord.rest.builder.component/-text-input-builder/style.html","searchKeys":["style","var style: TextInputStyle","dev.kord.rest.builder.component.TextInputBuilder.style"]},{"name":"var suppress: Boolean?","description":"dev.kord.rest.builder.guild.CurrentVoiceStateModifyBuilder.suppress","location":"rest/dev.kord.rest.builder.guild/-current-voice-state-modify-builder/suppress.html","searchKeys":["suppress","var suppress: Boolean?","dev.kord.rest.builder.guild.CurrentVoiceStateModifyBuilder.suppress"]},{"name":"var suppress: Boolean?","description":"dev.kord.rest.builder.guild.VoiceStateModifyBuilder.suppress","location":"rest/dev.kord.rest.builder.guild/-voice-state-modify-builder/suppress.html","searchKeys":["suppress","var suppress: Boolean?","dev.kord.rest.builder.guild.VoiceStateModifyBuilder.suppress"]},{"name":"var swaps: MutableList<GuildChannelSwapBuilder>","description":"dev.kord.rest.builder.channel.GuildChannelPositionModifyBuilder.swaps","location":"rest/dev.kord.rest.builder.channel/-guild-channel-position-modify-builder/swaps.html","searchKeys":["swaps","var swaps: MutableList<GuildChannelSwapBuilder>","dev.kord.rest.builder.channel.GuildChannelPositionModifyBuilder.swaps"]},{"name":"var systemChannelId: Snowflake?","description":"dev.kord.rest.builder.guild.GuildCreateBuilder.systemChannelId","location":"rest/dev.kord.rest.builder.guild/-guild-create-builder/system-channel-id.html","searchKeys":["systemChannelId","var systemChannelId: Snowflake?","dev.kord.rest.builder.guild.GuildCreateBuilder.systemChannelId"]},{"name":"var systemChannelId: Snowflake?","description":"dev.kord.rest.builder.guild.GuildModifyBuilder.systemChannelId","location":"rest/dev.kord.rest.builder.guild/-guild-modify-builder/system-channel-id.html","searchKeys":["systemChannelId","var systemChannelId: Snowflake?","dev.kord.rest.builder.guild.GuildModifyBuilder.systemChannelId"]},{"name":"var tags: String?","description":"dev.kord.rest.builder.guild.StickerModifyBuilder.tags","location":"rest/dev.kord.rest.builder.guild/-sticker-modify-builder/tags.html","searchKeys":["tags","var tags: String?","dev.kord.rest.builder.guild.StickerModifyBuilder.tags"]},{"name":"var targetApplicationId: Snowflake?","description":"dev.kord.rest.builder.channel.InviteCreateBuilder.targetApplicationId","location":"rest/dev.kord.rest.builder.channel/-invite-create-builder/target-application-id.html","searchKeys":["targetApplicationId","var targetApplicationId: Snowflake?","dev.kord.rest.builder.channel.InviteCreateBuilder.targetApplicationId"]},{"name":"var targetType: InviteTargetType?","description":"dev.kord.rest.builder.channel.InviteCreateBuilder.targetType","location":"rest/dev.kord.rest.builder.channel/-invite-create-builder/target-type.html","searchKeys":["targetType","var targetType: InviteTargetType?","dev.kord.rest.builder.channel.InviteCreateBuilder.targetType"]},{"name":"var targetUserId: Snowflake?","description":"dev.kord.rest.builder.channel.InviteCreateBuilder.targetUserId","location":"rest/dev.kord.rest.builder.channel/-invite-create-builder/target-user-id.html","searchKeys":["targetUserId","var targetUserId: Snowflake?","dev.kord.rest.builder.channel.InviteCreateBuilder.targetUserId"]},{"name":"var temporary: Boolean?","description":"dev.kord.rest.builder.channel.InviteCreateBuilder.temporary","location":"rest/dev.kord.rest.builder.channel/-invite-create-builder/temporary.html","searchKeys":["temporary","var temporary: Boolean?","dev.kord.rest.builder.channel.InviteCreateBuilder.temporary"]},{"name":"var thumbnail: EmbedBuilder.Thumbnail?","description":"dev.kord.rest.builder.message.EmbedBuilder.thumbnail","location":"rest/dev.kord.rest.builder.message/-embed-builder/thumbnail.html","searchKeys":["thumbnail","var thumbnail: EmbedBuilder.Thumbnail?","dev.kord.rest.builder.message.EmbedBuilder.thumbnail"]},{"name":"var timestamp: Instant?","description":"dev.kord.rest.builder.message.EmbedBuilder.timestamp","location":"rest/dev.kord.rest.builder.message/-embed-builder/timestamp.html","searchKeys":["timestamp","var timestamp: Instant?","dev.kord.rest.builder.message.EmbedBuilder.timestamp"]},{"name":"var title: String","description":"dev.kord.rest.builder.interaction.ModalBuilder.title","location":"rest/dev.kord.rest.builder.interaction/-modal-builder/title.html","searchKeys":["title","var title: String","dev.kord.rest.builder.interaction.ModalBuilder.title"]},{"name":"var title: String?","description":"dev.kord.rest.builder.message.EmbedBuilder.title","location":"rest/dev.kord.rest.builder.message/-embed-builder/title.html","searchKeys":["title","var title: String?","dev.kord.rest.builder.message.EmbedBuilder.title"]},{"name":"var token: String","description":"dev.kord.rest.builder.member.MemberAddBuilder.token","location":"rest/dev.kord.rest.builder.member/-member-add-builder/token.html","searchKeys":["token","var token: String","dev.kord.rest.builder.member.MemberAddBuilder.token"]},{"name":"var topic: String","description":"dev.kord.rest.builder.stage.StageInstanceCreateBuilder.topic","location":"rest/dev.kord.rest.builder.stage/-stage-instance-create-builder/topic.html","searchKeys":["topic","var topic: String","dev.kord.rest.builder.stage.StageInstanceCreateBuilder.topic"]},{"name":"var topic: String?","description":"dev.kord.rest.builder.channel.NewsChannelCreateBuilder.topic","location":"rest/dev.kord.rest.builder.channel/-news-channel-create-builder/topic.html","searchKeys":["topic","var topic: String?","dev.kord.rest.builder.channel.NewsChannelCreateBuilder.topic"]},{"name":"var topic: String?","description":"dev.kord.rest.builder.channel.NewsChannelModifyBuilder.topic","location":"rest/dev.kord.rest.builder.channel/-news-channel-modify-builder/topic.html","searchKeys":["topic","var topic: String?","dev.kord.rest.builder.channel.NewsChannelModifyBuilder.topic"]},{"name":"var topic: String?","description":"dev.kord.rest.builder.channel.StageVoiceChannelModifyBuilder.topic","location":"rest/dev.kord.rest.builder.channel/-stage-voice-channel-modify-builder/topic.html","searchKeys":["topic","var topic: String?","dev.kord.rest.builder.channel.StageVoiceChannelModifyBuilder.topic"]},{"name":"var topic: String?","description":"dev.kord.rest.builder.channel.TextChannelCreateBuilder.topic","location":"rest/dev.kord.rest.builder.channel/-text-channel-create-builder/topic.html","searchKeys":["topic","var topic: String?","dev.kord.rest.builder.channel.TextChannelCreateBuilder.topic"]},{"name":"var topic: String?","description":"dev.kord.rest.builder.channel.TextChannelModifyBuilder.topic","location":"rest/dev.kord.rest.builder.channel/-text-channel-modify-builder/topic.html","searchKeys":["topic","var topic: String?","dev.kord.rest.builder.channel.TextChannelModifyBuilder.topic"]},{"name":"var topic: String?","description":"dev.kord.rest.builder.channel.VoiceChannelModifyBuilder.topic","location":"rest/dev.kord.rest.builder.channel/-voice-channel-modify-builder/topic.html","searchKeys":["topic","var topic: String?","dev.kord.rest.builder.channel.VoiceChannelModifyBuilder.topic"]},{"name":"var topic: String?","description":"dev.kord.rest.builder.stage.StageInstanceModifyBuilder.topic","location":"rest/dev.kord.rest.builder.stage/-stage-instance-modify-builder/topic.html","searchKeys":["topic","var topic: String?","dev.kord.rest.builder.stage.StageInstanceModifyBuilder.topic"]},{"name":"var unicodeEmoji: String?","description":"dev.kord.rest.builder.role.RoleCreateBuilder.unicodeEmoji","location":"rest/dev.kord.rest.builder.role/-role-create-builder/unicode-emoji.html","searchKeys":["unicodeEmoji","var unicodeEmoji: String?","dev.kord.rest.builder.role.RoleCreateBuilder.unicodeEmoji"]},{"name":"var unicodeEmoji: String?","description":"dev.kord.rest.builder.role.RoleModifyBuilder.unicodeEmoji","location":"rest/dev.kord.rest.builder.role/-role-modify-builder/unicode-emoji.html","searchKeys":["unicodeEmoji","var unicodeEmoji: String?","dev.kord.rest.builder.role.RoleModifyBuilder.unicodeEmoji"]},{"name":"var unique: Boolean?","description":"dev.kord.rest.builder.channel.InviteCreateBuilder.unique","location":"rest/dev.kord.rest.builder.channel/-invite-create-builder/unique.html","searchKeys":["unique","var unique: Boolean?","dev.kord.rest.builder.channel.InviteCreateBuilder.unique"]},{"name":"var url: String","description":"dev.kord.rest.builder.component.ButtonBuilder.LinkButtonBuilder.url","location":"rest/dev.kord.rest.builder.component/-button-builder/-link-button-builder/url.html","searchKeys":["url","var url: String","dev.kord.rest.builder.component.ButtonBuilder.LinkButtonBuilder.url"]},{"name":"var url: String?","description":"dev.kord.rest.builder.message.EmbedBuilder.Author.url","location":"rest/dev.kord.rest.builder.message/-embed-builder/-author/url.html","searchKeys":["url","var url: String?","dev.kord.rest.builder.message.EmbedBuilder.Author.url"]},{"name":"var url: String?","description":"dev.kord.rest.builder.message.EmbedBuilder.url","location":"rest/dev.kord.rest.builder.message/-embed-builder/url.html","searchKeys":["url","var url: String?","dev.kord.rest.builder.message.EmbedBuilder.url"]},{"name":"var userId: Snowflake? = null","description":"dev.kord.rest.builder.auditlog.AuditLogGetRequestBuilder.userId","location":"rest/dev.kord.rest.builder.auditlog/-audit-log-get-request-builder/user-id.html","searchKeys":["userId","var userId: Snowflake? = null","dev.kord.rest.builder.auditlog.AuditLogGetRequestBuilder.userId"]},{"name":"var userLimit: Int?","description":"dev.kord.rest.builder.channel.VoiceChannelCreateBuilder.userLimit","location":"rest/dev.kord.rest.builder.channel/-voice-channel-create-builder/user-limit.html","searchKeys":["userLimit","var userLimit: Int?","dev.kord.rest.builder.channel.VoiceChannelCreateBuilder.userLimit"]},{"name":"var userLimit: Int?","description":"dev.kord.rest.builder.channel.VoiceChannelModifyBuilder.userLimit","location":"rest/dev.kord.rest.builder.channel/-voice-channel-modify-builder/user-limit.html","searchKeys":["userLimit","var userLimit: Int?","dev.kord.rest.builder.channel.VoiceChannelModifyBuilder.userLimit"]},{"name":"var username: String?","description":"dev.kord.rest.builder.user.CurrentUserModifyBuilder.username","location":"rest/dev.kord.rest.builder.user/-current-user-modify-builder/username.html","searchKeys":["username","var username: String?","dev.kord.rest.builder.user.CurrentUserModifyBuilder.username"]},{"name":"var username: String? = null","description":"dev.kord.rest.builder.message.create.WebhookMessageCreateBuilder.username","location":"rest/dev.kord.rest.builder.message.create/-webhook-message-create-builder/username.html","searchKeys":["username","var username: String? = null","dev.kord.rest.builder.message.create.WebhookMessageCreateBuilder.username"]},{"name":"var value: String","description":"dev.kord.rest.builder.component.SelectOptionBuilder.value","location":"rest/dev.kord.rest.builder.component/-select-option-builder/value.html","searchKeys":["value","var value: String","dev.kord.rest.builder.component.SelectOptionBuilder.value"]},{"name":"var value: String","description":"dev.kord.rest.builder.message.EmbedBuilder.Field.value","location":"rest/dev.kord.rest.builder.message/-embed-builder/-field/value.html","searchKeys":["value","var value: String","dev.kord.rest.builder.message.EmbedBuilder.Field.value"]},{"name":"var value: String?","description":"dev.kord.rest.builder.component.TextInputBuilder.value","location":"rest/dev.kord.rest.builder.component/-text-input-builder/value.html","searchKeys":["value","var value: String?","dev.kord.rest.builder.component.TextInputBuilder.value"]},{"name":"var verificationLevel: VerificationLevel?","description":"dev.kord.rest.builder.guild.GuildCreateBuilder.verificationLevel","location":"rest/dev.kord.rest.builder.guild/-guild-create-builder/verification-level.html","searchKeys":["verificationLevel","var verificationLevel: VerificationLevel?","dev.kord.rest.builder.guild.GuildCreateBuilder.verificationLevel"]},{"name":"var verificationLevel: VerificationLevel?","description":"dev.kord.rest.builder.guild.GuildModifyBuilder.verificationLevel","location":"rest/dev.kord.rest.builder.guild/-guild-modify-builder/verification-level.html","searchKeys":["verificationLevel","var verificationLevel: VerificationLevel?","dev.kord.rest.builder.guild.GuildModifyBuilder.verificationLevel"]},{"name":"var videoQualityMode: VideoQualityMode?","description":"dev.kord.rest.builder.channel.VoiceChannelModifyBuilder.videoQualityMode","location":"rest/dev.kord.rest.builder.channel/-voice-channel-modify-builder/video-quality-mode.html","searchKeys":["videoQualityMode","var videoQualityMode: VideoQualityMode?","dev.kord.rest.builder.channel.VoiceChannelModifyBuilder.videoQualityMode"]},{"name":"var voiceChannelId: Snowflake?","description":"dev.kord.rest.builder.member.MemberModifyBuilder.voiceChannelId","location":"rest/dev.kord.rest.builder.member/-member-modify-builder/voice-channel-id.html","searchKeys":["voiceChannelId","var voiceChannelId: Snowflake?","dev.kord.rest.builder.member.MemberModifyBuilder.voiceChannelId"]},{"name":"var welcomeScreenChannels: MutableList<WelcomeScreenChannelBuilder>?","description":"dev.kord.rest.builder.guild.WelcomeScreenModifyBuilder.welcomeScreenChannels","location":"rest/dev.kord.rest.builder.guild/-welcome-screen-modify-builder/welcome-screen-channels.html","searchKeys":["welcomeScreenChannels","var welcomeScreenChannels: MutableList<WelcomeScreenChannelBuilder>?","dev.kord.rest.builder.guild.WelcomeScreenModifyBuilder.welcomeScreenChannels"]},{"name":"ApplicationCommandBadge","description":"dev.kord.common.entity.ApplicationFlag.ApplicationCommandBadge","location":"common/dev.kord.common.entity/-application-flag/-application-command-badge/index.html","searchKeys":["ApplicationCommandBadge","ApplicationCommandBadge","dev.kord.common.entity.ApplicationFlag.ApplicationCommandBadge"]},{"name":"BotHttpInteractions","description":"dev.kord.common.entity.UserFlag.BotHttpInteractions","location":"common/dev.kord.common.entity/-user-flag/-bot-http-interactions/index.html","searchKeys":["BotHttpInteractions","BotHttpInteractions","dev.kord.common.entity.UserFlag.BotHttpInteractions"]},{"name":"BugHunterLevel1","description":"dev.kord.common.entity.UserFlag.BugHunterLevel1","location":"common/dev.kord.common.entity/-user-flag/-bug-hunter-level1/index.html","searchKeys":["BugHunterLevel1","BugHunterLevel1","dev.kord.common.entity.UserFlag.BugHunterLevel1"]},{"name":"BugHunterLevel2","description":"dev.kord.common.entity.UserFlag.BugHunterLevel2","location":"common/dev.kord.common.entity/-user-flag/-bug-hunter-level2/index.html","searchKeys":["BugHunterLevel2","BugHunterLevel2","dev.kord.common.entity.UserFlag.BugHunterLevel2"]},{"name":"CrossPosted","description":"dev.kord.common.entity.MessageFlag.CrossPosted","location":"common/dev.kord.common.entity/-message-flag/-cross-posted/index.html","searchKeys":["CrossPosted","CrossPosted","dev.kord.common.entity.MessageFlag.CrossPosted"]},{"name":"DiscordCertifiedModerator","description":"dev.kord.common.entity.UserFlag.DiscordCertifiedModerator","location":"common/dev.kord.common.entity/-user-flag/-discord-certified-moderator/index.html","searchKeys":["DiscordCertifiedModerator","DiscordCertifiedModerator","dev.kord.common.entity.UserFlag.DiscordCertifiedModerator"]},{"name":"DiscordEmployee","description":"dev.kord.common.entity.UserFlag.DiscordEmployee","location":"common/dev.kord.common.entity/-user-flag/-discord-employee/index.html","searchKeys":["DiscordEmployee","DiscordEmployee","dev.kord.common.entity.UserFlag.DiscordEmployee"]},{"name":"DiscordPartner","description":"dev.kord.common.entity.UserFlag.DiscordPartner","location":"common/dev.kord.common.entity/-user-flag/-discord-partner/index.html","searchKeys":["DiscordPartner","DiscordPartner","dev.kord.common.entity.UserFlag.DiscordPartner"]},{"name":"EarlySupporter","description":"dev.kord.common.entity.UserFlag.EarlySupporter","location":"common/dev.kord.common.entity/-user-flag/-early-supporter/index.html","searchKeys":["EarlySupporter","EarlySupporter","dev.kord.common.entity.UserFlag.EarlySupporter"]},{"name":"Embedded","description":"dev.kord.common.entity.ApplicationFlag.Embedded","location":"common/dev.kord.common.entity/-application-flag/-embedded/index.html","searchKeys":["Embedded","Embedded","dev.kord.common.entity.ApplicationFlag.Embedded"]},{"name":"Ephemeral","description":"dev.kord.common.entity.MessageFlag.Ephemeral","location":"common/dev.kord.common.entity/-message-flag/-ephemeral/index.html","searchKeys":["Ephemeral","Ephemeral","dev.kord.common.entity.MessageFlag.Ephemeral"]},{"name":"FailedToMentionSomeRolesInThread","description":"dev.kord.common.entity.MessageFlag.FailedToMentionSomeRolesInThread","location":"common/dev.kord.common.entity/-message-flag/-failed-to-mention-some-roles-in-thread/index.html","searchKeys":["FailedToMentionSomeRolesInThread","FailedToMentionSomeRolesInThread","dev.kord.common.entity.MessageFlag.FailedToMentionSomeRolesInThread"]},{"name":"GatewayGuildMembers","description":"dev.kord.common.entity.ApplicationFlag.GatewayGuildMembers","location":"common/dev.kord.common.entity/-application-flag/-gateway-guild-members/index.html","searchKeys":["GatewayGuildMembers","GatewayGuildMembers","dev.kord.common.entity.ApplicationFlag.GatewayGuildMembers"]},{"name":"GatewayGuildMembersLimited","description":"dev.kord.common.entity.ApplicationFlag.GatewayGuildMembersLimited","location":"common/dev.kord.common.entity/-application-flag/-gateway-guild-members-limited/index.html","searchKeys":["GatewayGuildMembersLimited","GatewayGuildMembersLimited","dev.kord.common.entity.ApplicationFlag.GatewayGuildMembersLimited"]},{"name":"GatewayMessageContent","description":"dev.kord.common.entity.ApplicationFlag.GatewayMessageContent","location":"common/dev.kord.common.entity/-application-flag/-gateway-message-content/index.html","searchKeys":["GatewayMessageContent","GatewayMessageContent","dev.kord.common.entity.ApplicationFlag.GatewayMessageContent"]},{"name":"GatewayMessageContentLimited","description":"dev.kord.common.entity.ApplicationFlag.GatewayMessageContentLimited","location":"common/dev.kord.common.entity/-application-flag/-gateway-message-content-limited/index.html","searchKeys":["GatewayMessageContentLimited","GatewayMessageContentLimited","dev.kord.common.entity.ApplicationFlag.GatewayMessageContentLimited"]},{"name":"GatewayPresence","description":"dev.kord.common.entity.ApplicationFlag.GatewayPresence","location":"common/dev.kord.common.entity/-application-flag/-gateway-presence/index.html","searchKeys":["GatewayPresence","GatewayPresence","dev.kord.common.entity.ApplicationFlag.GatewayPresence"]},{"name":"GatewayPresenceLimited","description":"dev.kord.common.entity.ApplicationFlag.GatewayPresenceLimited","location":"common/dev.kord.common.entity/-application-flag/-gateway-presence-limited/index.html","searchKeys":["GatewayPresenceLimited","GatewayPresenceLimited","dev.kord.common.entity.ApplicationFlag.GatewayPresenceLimited"]},{"name":"HasThread","description":"dev.kord.common.entity.MessageFlag.HasThread","location":"common/dev.kord.common.entity/-message-flag/-has-thread/index.html","searchKeys":["HasThread","HasThread","dev.kord.common.entity.MessageFlag.HasThread"]},{"name":"HouseBalance","description":"dev.kord.common.entity.UserFlag.HouseBalance","location":"common/dev.kord.common.entity/-user-flag/-house-balance/index.html","searchKeys":["HouseBalance","HouseBalance","dev.kord.common.entity.UserFlag.HouseBalance"]},{"name":"HouseBravery","description":"dev.kord.common.entity.UserFlag.HouseBravery","location":"common/dev.kord.common.entity/-user-flag/-house-bravery/index.html","searchKeys":["HouseBravery","HouseBravery","dev.kord.common.entity.UserFlag.HouseBravery"]},{"name":"HouseBrilliance","description":"dev.kord.common.entity.UserFlag.HouseBrilliance","location":"common/dev.kord.common.entity/-user-flag/-house-brilliance/index.html","searchKeys":["HouseBrilliance","HouseBrilliance","dev.kord.common.entity.UserFlag.HouseBrilliance"]},{"name":"HypeSquad","description":"dev.kord.common.entity.UserFlag.HypeSquad","location":"common/dev.kord.common.entity/-user-flag/-hype-squad/index.html","searchKeys":["HypeSquad","HypeSquad","dev.kord.common.entity.UserFlag.HypeSquad"]},{"name":"Instance","description":"dev.kord.common.entity.ActivityFlag.Instance","location":"common/dev.kord.common.entity/-activity-flag/-instance/index.html","searchKeys":["Instance","Instance","dev.kord.common.entity.ActivityFlag.Instance"]},{"name":"IsCrossPost","description":"dev.kord.common.entity.MessageFlag.IsCrossPost","location":"common/dev.kord.common.entity/-message-flag/-is-cross-post/index.html","searchKeys":["IsCrossPost","IsCrossPost","dev.kord.common.entity.MessageFlag.IsCrossPost"]},{"name":"Join","description":"dev.kord.common.entity.ActivityFlag.Join","location":"common/dev.kord.common.entity/-activity-flag/-join/index.html","searchKeys":["Join","Join","dev.kord.common.entity.ActivityFlag.Join"]},{"name":"JoinRequest","description":"dev.kord.common.entity.ActivityFlag.JoinRequest","location":"common/dev.kord.common.entity/-activity-flag/-join-request/index.html","searchKeys":["JoinRequest","JoinRequest","dev.kord.common.entity.ActivityFlag.JoinRequest"]},{"name":"Loading","description":"dev.kord.common.entity.MessageFlag.Loading","location":"common/dev.kord.common.entity/-message-flag/-loading/index.html","searchKeys":["Loading","Loading","dev.kord.common.entity.MessageFlag.Loading"]},{"name":"LongDate","description":"dev.kord.common.DiscordTimestampStyle.LongDate","location":"common/dev.kord.common/-discord-timestamp-style/-long-date/index.html","searchKeys":["LongDate","LongDate","dev.kord.common.DiscordTimestampStyle.LongDate"]},{"name":"LongDateTime","description":"dev.kord.common.DiscordTimestampStyle.LongDateTime","location":"common/dev.kord.common/-discord-timestamp-style/-long-date-time/index.html","searchKeys":["LongDateTime","LongDateTime","dev.kord.common.DiscordTimestampStyle.LongDateTime"]},{"name":"LongTime","description":"dev.kord.common.DiscordTimestampStyle.LongTime","location":"common/dev.kord.common/-discord-timestamp-style/-long-time/index.html","searchKeys":["LongTime","LongTime","dev.kord.common.DiscordTimestampStyle.LongTime"]},{"name":"Play","description":"dev.kord.common.entity.ActivityFlag.Play","location":"common/dev.kord.common.entity/-activity-flag/-play/index.html","searchKeys":["Play","Play","dev.kord.common.entity.ActivityFlag.Play"]},{"name":"RelativeTime","description":"dev.kord.common.DiscordTimestampStyle.RelativeTime","location":"common/dev.kord.common/-discord-timestamp-style/-relative-time/index.html","searchKeys":["RelativeTime","RelativeTime","dev.kord.common.DiscordTimestampStyle.RelativeTime"]},{"name":"ShortDate","description":"dev.kord.common.DiscordTimestampStyle.ShortDate","location":"common/dev.kord.common/-discord-timestamp-style/-short-date/index.html","searchKeys":["ShortDate","ShortDate","dev.kord.common.DiscordTimestampStyle.ShortDate"]},{"name":"ShortDateTime","description":"dev.kord.common.DiscordTimestampStyle.ShortDateTime","location":"common/dev.kord.common/-discord-timestamp-style/-short-date-time/index.html","searchKeys":["ShortDateTime","ShortDateTime","dev.kord.common.DiscordTimestampStyle.ShortDateTime"]},{"name":"ShortTime","description":"dev.kord.common.DiscordTimestampStyle.ShortTime","location":"common/dev.kord.common/-discord-timestamp-style/-short-time/index.html","searchKeys":["ShortTime","ShortTime","dev.kord.common.DiscordTimestampStyle.ShortTime"]},{"name":"SourceMessageDeleted","description":"dev.kord.common.entity.MessageFlag.SourceMessageDeleted","location":"common/dev.kord.common.entity/-message-flag/-source-message-deleted/index.html","searchKeys":["SourceMessageDeleted","SourceMessageDeleted","dev.kord.common.entity.MessageFlag.SourceMessageDeleted"]},{"name":"Spectate","description":"dev.kord.common.entity.ActivityFlag.Spectate","location":"common/dev.kord.common.entity/-activity-flag/-spectate/index.html","searchKeys":["Spectate","Spectate","dev.kord.common.entity.ActivityFlag.Spectate"]},{"name":"SuppressEmbeds","description":"dev.kord.common.entity.MessageFlag.SuppressEmbeds","location":"common/dev.kord.common.entity/-message-flag/-suppress-embeds/index.html","searchKeys":["SuppressEmbeds","SuppressEmbeds","dev.kord.common.entity.MessageFlag.SuppressEmbeds"]},{"name":"SuppressJoinNotifications","description":"dev.kord.common.entity.SystemChannelFlag.SuppressJoinNotifications","location":"common/dev.kord.common.entity/-system-channel-flag/-suppress-join-notifications/index.html","searchKeys":["SuppressJoinNotifications","SuppressJoinNotifications","dev.kord.common.entity.SystemChannelFlag.SuppressJoinNotifications"]},{"name":"SuppressPremiumSubscriptions","description":"dev.kord.common.entity.SystemChannelFlag.SuppressPremiumSubscriptions","location":"common/dev.kord.common.entity/-system-channel-flag/-suppress-premium-subscriptions/index.html","searchKeys":["SuppressPremiumSubscriptions","SuppressPremiumSubscriptions","dev.kord.common.entity.SystemChannelFlag.SuppressPremiumSubscriptions"]},{"name":"Sync","description":"dev.kord.common.entity.ActivityFlag.Sync","location":"common/dev.kord.common.entity/-activity-flag/-sync/index.html","searchKeys":["Sync","Sync","dev.kord.common.entity.ActivityFlag.Sync"]},{"name":"System","description":"dev.kord.common.entity.UserFlag.System","location":"common/dev.kord.common.entity/-user-flag/-system/index.html","searchKeys":["System","System","dev.kord.common.entity.UserFlag.System"]},{"name":"TeamUser","description":"dev.kord.common.entity.UserFlag.TeamUser","location":"common/dev.kord.common.entity/-user-flag/-team-user/index.html","searchKeys":["TeamUser","TeamUser","dev.kord.common.entity.UserFlag.TeamUser"]},{"name":"Urgent","description":"dev.kord.common.entity.MessageFlag.Urgent","location":"common/dev.kord.common.entity/-message-flag/-urgent/index.html","searchKeys":["Urgent","Urgent","dev.kord.common.entity.MessageFlag.Urgent"]},{"name":"VerificationPendingGuildLimit","description":"dev.kord.common.entity.ApplicationFlag.VerificationPendingGuildLimit","location":"common/dev.kord.common.entity/-application-flag/-verification-pending-guild-limit/index.html","searchKeys":["VerificationPendingGuildLimit","VerificationPendingGuildLimit","dev.kord.common.entity.ApplicationFlag.VerificationPendingGuildLimit"]},{"name":"VerifiedBot","description":"dev.kord.common.entity.UserFlag.VerifiedBot","location":"common/dev.kord.common.entity/-user-flag/-verified-bot/index.html","searchKeys":["VerifiedBot","VerifiedBot","dev.kord.common.entity.UserFlag.VerifiedBot"]},{"name":"VerifiedBotDeveloper","description":"dev.kord.common.entity.UserFlag.VerifiedBotDeveloper","location":"common/dev.kord.common.entity/-user-flag/-verified-bot-developer/index.html","searchKeys":["VerifiedBotDeveloper","VerifiedBotDeveloper","dev.kord.common.entity.UserFlag.VerifiedBotDeveloper"]},{"name":"abstract class AbstractIntervalRateLimiter(val limit: Int, val interval: Duration) : IntervalRateLimiter","description":"dev.kord.common.ratelimit.AbstractIntervalRateLimiter","location":"common/dev.kord.common.ratelimit/-abstract-interval-rate-limiter/index.html","searchKeys":["AbstractIntervalRateLimiter","abstract class AbstractIntervalRateLimiter(val limit: Int, val interval: Duration) : IntervalRateLimiter","dev.kord.common.ratelimit.AbstractIntervalRateLimiter"]},{"name":"abstract class RequestException : Exception","description":"dev.kord.common.exception.RequestException","location":"common/dev.kord.common.exception/-request-exception/index.html","searchKeys":["RequestException","abstract class RequestException : Exception","dev.kord.common.exception.RequestException"]},{"name":"abstract suspend fun consume()","description":"dev.kord.common.ratelimit.RateLimiter.consume","location":"common/dev.kord.common.ratelimit/-rate-limiter/consume.html","searchKeys":["consume","abstract suspend fun consume()","dev.kord.common.ratelimit.RateLimiter.consume"]},{"name":"abstract suspend override fun consume()","description":"dev.kord.common.ratelimit.IntervalRateLimiter.consume","location":"common/dev.kord.common.ratelimit/-interval-rate-limiter/consume.html","searchKeys":["consume","abstract suspend override fun consume()","dev.kord.common.ratelimit.IntervalRateLimiter.consume"]},{"name":"abstract val approximateMemberCount: OptionalInt","description":"dev.kord.common.entity.BaseDiscordInvite.approximateMemberCount","location":"common/dev.kord.common.entity/-base-discord-invite/approximate-member-count.html","searchKeys":["approximateMemberCount","abstract val approximateMemberCount: OptionalInt","dev.kord.common.entity.BaseDiscordInvite.approximateMemberCount"]},{"name":"abstract val approximatePresenceCount: OptionalInt","description":"dev.kord.common.entity.BaseDiscordInvite.approximatePresenceCount","location":"common/dev.kord.common.entity/-base-discord-invite/approximate-presence-count.html","searchKeys":["approximatePresenceCount","abstract val approximatePresenceCount: OptionalInt","dev.kord.common.entity.BaseDiscordInvite.approximatePresenceCount"]},{"name":"abstract val channel: DiscordChannel?","description":"dev.kord.common.entity.BaseDiscordInvite.channel","location":"common/dev.kord.common.entity/-base-discord-invite/channel.html","searchKeys":["channel","abstract val channel: DiscordChannel?","dev.kord.common.entity.BaseDiscordInvite.channel"]},{"name":"abstract val code: String","description":"dev.kord.common.entity.BaseDiscordInvite.code","location":"common/dev.kord.common.entity/-base-discord-invite/code.html","searchKeys":["code","abstract val code: String","dev.kord.common.entity.BaseDiscordInvite.code"]},{"name":"abstract val components: Optional<List<DiscordComponent>>","description":"dev.kord.common.entity.DiscordComponent.components","location":"common/dev.kord.common.entity/-discord-component/components.html","searchKeys":["components","abstract val components: Optional<List<DiscordComponent>>","dev.kord.common.entity.DiscordComponent.components"]},{"name":"abstract val coverImage: Optional<String>","description":"dev.kord.common.entity.BaseDiscordApplication.coverImage","location":"common/dev.kord.common.entity/-base-discord-application/cover-image.html","searchKeys":["coverImage","abstract val coverImage: Optional<String>","dev.kord.common.entity.BaseDiscordApplication.coverImage"]},{"name":"abstract val customId: Optional<String>","description":"dev.kord.common.entity.DiscordComponent.customId","location":"common/dev.kord.common.entity/-discord-component/custom-id.html","searchKeys":["customId","abstract val customId: Optional<String>","dev.kord.common.entity.DiscordComponent.customId"]},{"name":"abstract val customInstallUrl: Optional<String>","description":"dev.kord.common.entity.BaseDiscordApplication.customInstallUrl","location":"common/dev.kord.common.entity/-base-discord-application/custom-install-url.html","searchKeys":["customInstallUrl","abstract val customInstallUrl: Optional<String>","dev.kord.common.entity.BaseDiscordApplication.customInstallUrl"]},{"name":"abstract val description: String","description":"dev.kord.common.entity.BaseDiscordApplication.description","location":"common/dev.kord.common.entity/-base-discord-application/description.html","searchKeys":["description","abstract val description: String","dev.kord.common.entity.BaseDiscordApplication.description"]},{"name":"abstract val disabled: OptionalBoolean","description":"dev.kord.common.entity.DiscordComponent.disabled","location":"common/dev.kord.common.entity/-discord-component/disabled.html","searchKeys":["disabled","abstract val disabled: OptionalBoolean","dev.kord.common.entity.DiscordComponent.disabled"]},{"name":"abstract val emoji: Optional<DiscordPartialEmoji>","description":"dev.kord.common.entity.DiscordComponent.emoji","location":"common/dev.kord.common.entity/-discord-component/emoji.html","searchKeys":["emoji","abstract val emoji: Optional<DiscordPartialEmoji>","dev.kord.common.entity.DiscordComponent.emoji"]},{"name":"abstract val expiresAt: Optional<Instant?>","description":"dev.kord.common.entity.BaseDiscordInvite.expiresAt","location":"common/dev.kord.common.entity/-base-discord-invite/expires-at.html","searchKeys":["expiresAt","abstract val expiresAt: Optional<Instant?>","dev.kord.common.entity.BaseDiscordInvite.expiresAt"]},{"name":"abstract val flags: Optional<ApplicationFlags>","description":"dev.kord.common.entity.BaseDiscordApplication.flags","location":"common/dev.kord.common.entity/-base-discord-application/flags.html","searchKeys":["flags","abstract val flags: Optional<ApplicationFlags>","dev.kord.common.entity.BaseDiscordApplication.flags"]},{"name":"abstract val focused: OptionalBoolean","description":"dev.kord.common.entity.CommandArgument.focused","location":"common/dev.kord.common.entity/-command-argument/focused.html","searchKeys":["focused","abstract val focused: OptionalBoolean","dev.kord.common.entity.CommandArgument.focused"]},{"name":"abstract val guild: Optional<DiscordPartialGuild>","description":"dev.kord.common.entity.BaseDiscordInvite.guild","location":"common/dev.kord.common.entity/-base-discord-invite/guild.html","searchKeys":["guild","abstract val guild: Optional<DiscordPartialGuild>","dev.kord.common.entity.BaseDiscordInvite.guild"]},{"name":"abstract val guildId: OptionalSnowflake","description":"dev.kord.common.entity.BaseDiscordApplication.guildId","location":"common/dev.kord.common.entity/-base-discord-application/guild-id.html","searchKeys":["guildId","abstract val guildId: OptionalSnowflake","dev.kord.common.entity.BaseDiscordApplication.guildId"]},{"name":"abstract val guildScheduledEvent: Optional<DiscordGuildScheduledEvent>","description":"dev.kord.common.entity.BaseDiscordInvite.guildScheduledEvent","location":"common/dev.kord.common.entity/-base-discord-invite/guild-scheduled-event.html","searchKeys":["guildScheduledEvent","abstract val guildScheduledEvent: Optional<DiscordGuildScheduledEvent>","dev.kord.common.entity.BaseDiscordInvite.guildScheduledEvent"]},{"name":"abstract val icon: String?","description":"dev.kord.common.entity.BaseDiscordApplication.icon","location":"common/dev.kord.common.entity/-base-discord-application/icon.html","searchKeys":["icon","abstract val icon: String?","dev.kord.common.entity.BaseDiscordApplication.icon"]},{"name":"abstract val id: Snowflake","description":"dev.kord.common.entity.BaseDiscordApplication.id","location":"common/dev.kord.common.entity/-base-discord-application/id.html","searchKeys":["id","abstract val id: Snowflake","dev.kord.common.entity.BaseDiscordApplication.id"]},{"name":"abstract val installParams: Optional<InstallParams>","description":"dev.kord.common.entity.BaseDiscordApplication.installParams","location":"common/dev.kord.common.entity/-base-discord-application/install-params.html","searchKeys":["installParams","abstract val installParams: Optional<InstallParams>","dev.kord.common.entity.BaseDiscordApplication.installParams"]},{"name":"abstract val interval: Duration","description":"dev.kord.common.ratelimit.IntervalRateLimiter.interval","location":"common/dev.kord.common.ratelimit/-interval-rate-limiter/interval.html","searchKeys":["interval","abstract val interval: Duration","dev.kord.common.ratelimit.IntervalRateLimiter.interval"]},{"name":"abstract val inviter: Optional<DiscordUser>","description":"dev.kord.common.entity.BaseDiscordInvite.inviter","location":"common/dev.kord.common.entity/-base-discord-invite/inviter.html","searchKeys":["inviter","abstract val inviter: Optional<DiscordUser>","dev.kord.common.entity.BaseDiscordInvite.inviter"]},{"name":"abstract val label: Optional<String>","description":"dev.kord.common.entity.DiscordComponent.label","location":"common/dev.kord.common.entity/-discord-component/label.html","searchKeys":["label","abstract val label: Optional<String>","dev.kord.common.entity.DiscordComponent.label"]},{"name":"abstract val limit: Int","description":"dev.kord.common.ratelimit.IntervalRateLimiter.limit","location":"common/dev.kord.common.ratelimit/-interval-rate-limiter/limit.html","searchKeys":["limit","abstract val limit: Int","dev.kord.common.ratelimit.IntervalRateLimiter.limit"]},{"name":"abstract val maxLength: OptionalInt","description":"dev.kord.common.entity.DiscordComponent.maxLength","location":"common/dev.kord.common.entity/-discord-component/max-length.html","searchKeys":["maxLength","abstract val maxLength: OptionalInt","dev.kord.common.entity.DiscordComponent.maxLength"]},{"name":"abstract val maxValues: OptionalInt","description":"dev.kord.common.entity.DiscordComponent.maxValues","location":"common/dev.kord.common.entity/-discord-component/max-values.html","searchKeys":["maxValues","abstract val maxValues: OptionalInt","dev.kord.common.entity.DiscordComponent.maxValues"]},{"name":"abstract val minLength: OptionalInt","description":"dev.kord.common.entity.DiscordComponent.minLength","location":"common/dev.kord.common.entity/-discord-component/min-length.html","searchKeys":["minLength","abstract val minLength: OptionalInt","dev.kord.common.entity.DiscordComponent.minLength"]},{"name":"abstract val minValues: OptionalInt","description":"dev.kord.common.entity.DiscordComponent.minValues","location":"common/dev.kord.common.entity/-discord-component/min-values.html","searchKeys":["minValues","abstract val minValues: OptionalInt","dev.kord.common.entity.DiscordComponent.minValues"]},{"name":"abstract val name: String","description":"dev.kord.common.entity.BaseDiscordApplication.name","location":"common/dev.kord.common.entity/-base-discord-application/name.html","searchKeys":["name","abstract val name: String","dev.kord.common.entity.BaseDiscordApplication.name"]},{"name":"abstract val name: String","description":"dev.kord.common.entity.Choice.name","location":"common/dev.kord.common.entity/-choice/name.html","searchKeys":["name","abstract val name: String","dev.kord.common.entity.Choice.name"]},{"name":"abstract val name: String","description":"dev.kord.common.entity.Option.name","location":"common/dev.kord.common.entity/-option/name.html","searchKeys":["name","abstract val name: String","dev.kord.common.entity.Option.name"]},{"name":"abstract val nameLocalizations: Optional<Map<Locale, String>?>","description":"dev.kord.common.entity.Choice.nameLocalizations","location":"common/dev.kord.common.entity/-choice/name-localizations.html","searchKeys":["nameLocalizations","abstract val nameLocalizations: Optional<Map<Locale, String>?>","dev.kord.common.entity.Choice.nameLocalizations"]},{"name":"abstract val options: Optional<List<DiscordSelectOption>>","description":"dev.kord.common.entity.DiscordComponent.options","location":"common/dev.kord.common.entity/-discord-component/options.html","searchKeys":["options","abstract val options: Optional<List<DiscordSelectOption>>","dev.kord.common.entity.DiscordComponent.options"]},{"name":"abstract val owner: Optional<DiscordUser>","description":"dev.kord.common.entity.BaseDiscordApplication.owner","location":"common/dev.kord.common.entity/-base-discord-application/owner.html","searchKeys":["owner","abstract val owner: Optional<DiscordUser>","dev.kord.common.entity.BaseDiscordApplication.owner"]},{"name":"abstract val placeholder: Optional<String>","description":"dev.kord.common.entity.DiscordComponent.placeholder","location":"common/dev.kord.common.entity/-discord-component/placeholder.html","searchKeys":["placeholder","abstract val placeholder: Optional<String>","dev.kord.common.entity.DiscordComponent.placeholder"]},{"name":"abstract val primarySkuId: OptionalSnowflake","description":"dev.kord.common.entity.BaseDiscordApplication.primarySkuId","location":"common/dev.kord.common.entity/-base-discord-application/primary-sku-id.html","searchKeys":["primarySkuId","abstract val primarySkuId: OptionalSnowflake","dev.kord.common.entity.BaseDiscordApplication.primarySkuId"]},{"name":"abstract val privacyPolicyUrl: Optional<String>","description":"dev.kord.common.entity.BaseDiscordApplication.privacyPolicyUrl","location":"common/dev.kord.common.entity/-base-discord-application/privacy-policy-url.html","searchKeys":["privacyPolicyUrl","abstract val privacyPolicyUrl: Optional<String>","dev.kord.common.entity.BaseDiscordApplication.privacyPolicyUrl"]},{"name":"abstract val required: OptionalBoolean","description":"dev.kord.common.entity.DiscordComponent.required","location":"common/dev.kord.common.entity/-discord-component/required.html","searchKeys":["required","abstract val required: OptionalBoolean","dev.kord.common.entity.DiscordComponent.required"]},{"name":"abstract val rpcOrigins: Optional<List<String>>","description":"dev.kord.common.entity.BaseDiscordApplication.rpcOrigins","location":"common/dev.kord.common.entity/-base-discord-application/rpc-origins.html","searchKeys":["rpcOrigins","abstract val rpcOrigins: Optional<List<String>>","dev.kord.common.entity.BaseDiscordApplication.rpcOrigins"]},{"name":"abstract val slug: Optional<String>","description":"dev.kord.common.entity.BaseDiscordApplication.slug","location":"common/dev.kord.common.entity/-base-discord-application/slug.html","searchKeys":["slug","abstract val slug: Optional<String>","dev.kord.common.entity.BaseDiscordApplication.slug"]},{"name":"abstract val tags: Optional<List<String>>","description":"dev.kord.common.entity.BaseDiscordApplication.tags","location":"common/dev.kord.common.entity/-base-discord-application/tags.html","searchKeys":["tags","abstract val tags: Optional<List<String>>","dev.kord.common.entity.BaseDiscordApplication.tags"]},{"name":"abstract val targetApplication: Optional<DiscordPartialApplication>","description":"dev.kord.common.entity.BaseDiscordInvite.targetApplication","location":"common/dev.kord.common.entity/-base-discord-invite/target-application.html","searchKeys":["targetApplication","abstract val targetApplication: Optional<DiscordPartialApplication>","dev.kord.common.entity.BaseDiscordInvite.targetApplication"]},{"name":"abstract val targetType: Optional<InviteTargetType>","description":"dev.kord.common.entity.BaseDiscordInvite.targetType","location":"common/dev.kord.common.entity/-base-discord-invite/target-type.html","searchKeys":["targetType","abstract val targetType: Optional<InviteTargetType>","dev.kord.common.entity.BaseDiscordInvite.targetType"]},{"name":"abstract val targetUser: Optional<DiscordUser>","description":"dev.kord.common.entity.BaseDiscordInvite.targetUser","location":"common/dev.kord.common.entity/-base-discord-invite/target-user.html","searchKeys":["targetUser","abstract val targetUser: Optional<DiscordUser>","dev.kord.common.entity.BaseDiscordInvite.targetUser"]},{"name":"abstract val termsOfServiceUrl: Optional<String>","description":"dev.kord.common.entity.BaseDiscordApplication.termsOfServiceUrl","location":"common/dev.kord.common.entity/-base-discord-application/terms-of-service-url.html","searchKeys":["termsOfServiceUrl","abstract val termsOfServiceUrl: Optional<String>","dev.kord.common.entity.BaseDiscordApplication.termsOfServiceUrl"]},{"name":"abstract val type: ApplicationCommandOptionType","description":"dev.kord.common.entity.Option.type","location":"common/dev.kord.common.entity/-option/type.html","searchKeys":["type","abstract val type: ApplicationCommandOptionType","dev.kord.common.entity.Option.type"]},{"name":"abstract val type: ComponentType","description":"dev.kord.common.entity.DiscordComponent.type","location":"common/dev.kord.common.entity/-discord-component/type.html","searchKeys":["type","abstract val type: ComponentType","dev.kord.common.entity.DiscordComponent.type"]},{"name":"abstract val url: Optional<String>","description":"dev.kord.common.entity.DiscordComponent.url","location":"common/dev.kord.common.entity/-discord-component/url.html","searchKeys":["url","abstract val url: Optional<String>","dev.kord.common.entity.DiscordComponent.url"]},{"name":"abstract val value: Optional<String>","description":"dev.kord.common.entity.DiscordComponent.value","location":"common/dev.kord.common.entity/-discord-component/value.html","searchKeys":["value","abstract val value: Optional<String>","dev.kord.common.entity.DiscordComponent.value"]},{"name":"abstract val value: T","description":"dev.kord.common.entity.Choice.value","location":"common/dev.kord.common.entity/-choice/value.html","searchKeys":["value","abstract val value: T","dev.kord.common.entity.Choice.value"]},{"name":"abstract val value: T","description":"dev.kord.common.entity.CommandArgument.value","location":"common/dev.kord.common.entity/-command-argument/value.html","searchKeys":["value","abstract val value: T","dev.kord.common.entity.CommandArgument.value"]},{"name":"abstract val verifyKey: String","description":"dev.kord.common.entity.BaseDiscordApplication.verifyKey","location":"common/dev.kord.common.entity/-base-discord-application/verify-key.html","searchKeys":["verifyKey","abstract val verifyKey: String","dev.kord.common.entity.BaseDiscordApplication.verifyKey"]},{"name":"annotation class DeprecatedSinceKord(val version: String)","description":"dev.kord.common.annotation.DeprecatedSinceKord","location":"common/dev.kord.common.annotation/-deprecated-since-kord/index.html","searchKeys":["DeprecatedSinceKord","annotation class DeprecatedSinceKord(val version: String)","dev.kord.common.annotation.DeprecatedSinceKord"]},{"name":"annotation class KordDsl","description":"dev.kord.common.annotation.KordDsl","location":"common/dev.kord.common.annotation/-kord-dsl/index.html","searchKeys":["KordDsl","annotation class KordDsl","dev.kord.common.annotation.KordDsl"]},{"name":"annotation class KordExperimental","description":"dev.kord.common.annotation.KordExperimental","location":"common/dev.kord.common.annotation/-kord-experimental/index.html","searchKeys":["KordExperimental","annotation class KordExperimental","dev.kord.common.annotation.KordExperimental"]},{"name":"annotation class KordPreview","description":"dev.kord.common.annotation.KordPreview","location":"common/dev.kord.common.annotation/-kord-preview/index.html","searchKeys":["KordPreview","annotation class KordPreview","dev.kord.common.annotation.KordPreview"]},{"name":"annotation class KordUnsafe","description":"dev.kord.common.annotation.KordUnsafe","location":"common/dev.kord.common.annotation/-kord-unsafe/index.html","searchKeys":["KordUnsafe","annotation class KordUnsafe","dev.kord.common.annotation.KordUnsafe"]},{"name":"annotation class KordVoice","description":"dev.kord.common.annotation.KordVoice","location":"common/dev.kord.common.annotation/-kord-voice/index.html","searchKeys":["KordVoice","annotation class KordVoice","dev.kord.common.annotation.KordVoice"]},{"name":"class ActivityFlags(val value: Int)","description":"dev.kord.common.entity.ActivityFlags","location":"common/dev.kord.common.entity/-activity-flags/index.html","searchKeys":["ActivityFlags","class ActivityFlags(val value: Int)","dev.kord.common.entity.ActivityFlags"]},{"name":"class Builder(code: Int = 0)","description":"dev.kord.common.entity.ApplicationFlags.Builder","location":"common/dev.kord.common.entity/-application-flags/-builder/index.html","searchKeys":["Builder","class Builder(code: Int = 0)","dev.kord.common.entity.ApplicationFlags.Builder"]},{"name":"class Builder(code: Int = 0)","description":"dev.kord.common.entity.MessageFlags.Builder","location":"common/dev.kord.common.entity/-message-flags/-builder/index.html","searchKeys":["Builder","class Builder(code: Int = 0)","dev.kord.common.entity.MessageFlags.Builder"]},{"name":"class Color(rgb: Int)","description":"dev.kord.common.Color","location":"common/dev.kord.common/-color/index.html","searchKeys":["Color","class Color(rgb: Int)","dev.kord.common.Color"]},{"name":"class DiscordBitSet(data: LongArray)","description":"dev.kord.common.DiscordBitSet","location":"common/dev.kord.common/-discord-bit-set/index.html","searchKeys":["DiscordBitSet","class DiscordBitSet(data: LongArray)","dev.kord.common.DiscordBitSet"]},{"name":"class DiscordNull","description":"dev.kord.common.entity.DiscordNull","location":"common/dev.kord.common.entity/-discord-null/index.html","searchKeys":["DiscordNull","class DiscordNull","dev.kord.common.entity.DiscordNull"]},{"name":"class Missing<out T> : Optional<T> ","description":"dev.kord.common.entity.optional.Optional.Missing","location":"common/dev.kord.common.entity.optional/-optional/-missing/index.html","searchKeys":["Missing","class Missing<out T> : Optional<T> ","dev.kord.common.entity.optional.Optional.Missing"]},{"name":"class Null<out T> : Optional<T?> ","description":"dev.kord.common.entity.optional.Optional.Null","location":"common/dev.kord.common.entity.optional/-optional/-null/index.html","searchKeys":["Null","class Null<out T> : Optional<T?> ","dev.kord.common.entity.optional.Optional.Null"]},{"name":"class PermissionsBuilder(code: DiscordBitSet)","description":"dev.kord.common.entity.Permissions.PermissionsBuilder","location":"common/dev.kord.common.entity/-permissions/-permissions-builder/index.html","searchKeys":["PermissionsBuilder","class PermissionsBuilder(code: DiscordBitSet)","dev.kord.common.entity.Permissions.PermissionsBuilder"]},{"name":"class Snowflake : Comparable<Snowflake> ","description":"dev.kord.common.entity.Snowflake","location":"common/dev.kord.common.entity/-snowflake/index.html","searchKeys":["Snowflake","class Snowflake : Comparable<Snowflake> ","dev.kord.common.entity.Snowflake"]},{"name":"class Unknown : Permission","description":"dev.kord.common.entity.Permission.Unknown","location":"common/dev.kord.common.entity/-permission/-unknown/index.html","searchKeys":["Unknown","class Unknown : Permission","dev.kord.common.entity.Permission.Unknown"]},{"name":"class Unknown(name: String) : AuditLogChangeKey<JsonElement> ","description":"dev.kord.common.entity.AuditLogChangeKey.Unknown","location":"common/dev.kord.common.entity/-audit-log-change-key/-unknown/index.html","searchKeys":["Unknown","class Unknown(name: String) : AuditLogChangeKey<JsonElement> ","dev.kord.common.entity.AuditLogChangeKey.Unknown"]},{"name":"class Unknown(val code: Int) : ActivityType","description":"dev.kord.common.entity.ActivityType.Unknown","location":"common/dev.kord.common.entity/-activity-type/-unknown/index.html","searchKeys":["Unknown","class Unknown(val code: Int) : ActivityType","dev.kord.common.entity.ActivityType.Unknown"]},{"name":"class Unknown(val code: Int) : MessageType","description":"dev.kord.common.entity.MessageType.Unknown","location":"common/dev.kord.common.entity/-message-type/-unknown/index.html","searchKeys":["Unknown","class Unknown(val code: Int) : MessageType","dev.kord.common.entity.MessageType.Unknown"]},{"name":"class Unknown(val duration: Duration) : ArchiveDuration","description":"dev.kord.common.entity.ArchiveDuration.Unknown","location":"common/dev.kord.common.entity/-archive-duration/-unknown/index.html","searchKeys":["Unknown","class Unknown(val duration: Duration) : ArchiveDuration","dev.kord.common.entity.ArchiveDuration.Unknown"]},{"name":"class Unknown(val type: Int) : ApplicationCommandOptionType","description":"dev.kord.common.entity.ApplicationCommandOptionType.Unknown","location":"common/dev.kord.common.entity/-application-command-option-type/-unknown/index.html","searchKeys":["Unknown","class Unknown(val type: Int) : ApplicationCommandOptionType","dev.kord.common.entity.ApplicationCommandOptionType.Unknown"]},{"name":"class Unknown(val type: Int) : InteractionResponseType","description":"dev.kord.common.entity.InteractionResponseType.Unknown","location":"common/dev.kord.common.entity/-interaction-response-type/-unknown/index.html","searchKeys":["Unknown","class Unknown(val type: Int) : InteractionResponseType","dev.kord.common.entity.InteractionResponseType.Unknown"]},{"name":"class Unknown(val type: Int) : InteractionType","description":"dev.kord.common.entity.InteractionType.Unknown","location":"common/dev.kord.common.entity/-interaction-type/-unknown/index.html","searchKeys":["Unknown","class Unknown(val type: Int) : InteractionType","dev.kord.common.entity.InteractionType.Unknown"]},{"name":"class Unknown(val value: Int) : ApplicationCommandPermissionType","description":"dev.kord.common.entity.ApplicationCommandPermissionType.Unknown","location":"common/dev.kord.common.entity/-application-command-permission-type/-unknown/index.html","searchKeys":["Unknown","class Unknown(val value: Int) : ApplicationCommandPermissionType","dev.kord.common.entity.ApplicationCommandPermissionType.Unknown"]},{"name":"class Unknown(val value: Int) : ApplicationCommandType","description":"dev.kord.common.entity.ApplicationCommandType.Unknown","location":"common/dev.kord.common.entity/-application-command-type/-unknown/index.html","searchKeys":["Unknown","class Unknown(val value: Int) : ApplicationCommandType","dev.kord.common.entity.ApplicationCommandType.Unknown"]},{"name":"class Unknown(val value: Int) : AuditLogEvent","description":"dev.kord.common.entity.AuditLogEvent.Unknown","location":"common/dev.kord.common.entity/-audit-log-event/-unknown/index.html","searchKeys":["Unknown","class Unknown(val value: Int) : AuditLogEvent","dev.kord.common.entity.AuditLogEvent.Unknown"]},{"name":"class Unknown(val value: Int) : AutoModerationActionType","description":"dev.kord.common.entity.AutoModerationActionType.Unknown","location":"common/dev.kord.common.entity/-auto-moderation-action-type/-unknown/index.html","searchKeys":["Unknown","class Unknown(val value: Int) : AutoModerationActionType","dev.kord.common.entity.AutoModerationActionType.Unknown"]},{"name":"class Unknown(val value: Int) : AutoModerationRuleEventType","description":"dev.kord.common.entity.AutoModerationRuleEventType.Unknown","location":"common/dev.kord.common.entity/-auto-moderation-rule-event-type/-unknown/index.html","searchKeys":["Unknown","class Unknown(val value: Int) : AutoModerationRuleEventType","dev.kord.common.entity.AutoModerationRuleEventType.Unknown"]},{"name":"class Unknown(val value: Int) : AutoModerationRuleKeywordPresetType","description":"dev.kord.common.entity.AutoModerationRuleKeywordPresetType.Unknown","location":"common/dev.kord.common.entity/-auto-moderation-rule-keyword-preset-type/-unknown/index.html","searchKeys":["Unknown","class Unknown(val value: Int) : AutoModerationRuleKeywordPresetType","dev.kord.common.entity.AutoModerationRuleKeywordPresetType.Unknown"]},{"name":"class Unknown(val value: Int) : AutoModerationRuleTriggerType","description":"dev.kord.common.entity.AutoModerationRuleTriggerType.Unknown","location":"common/dev.kord.common.entity/-auto-moderation-rule-trigger-type/-unknown/index.html","searchKeys":["Unknown","class Unknown(val value: Int) : AutoModerationRuleTriggerType","dev.kord.common.entity.AutoModerationRuleTriggerType.Unknown"]},{"name":"class Unknown(val value: Int) : ButtonStyle","description":"dev.kord.common.entity.ButtonStyle.Unknown","location":"common/dev.kord.common.entity/-button-style/-unknown/index.html","searchKeys":["Unknown","class Unknown(val value: Int) : ButtonStyle","dev.kord.common.entity.ButtonStyle.Unknown"]},{"name":"class Unknown(val value: Int) : ChannelType","description":"dev.kord.common.entity.ChannelType.Unknown","location":"common/dev.kord.common.entity/-channel-type/-unknown/index.html","searchKeys":["Unknown","class Unknown(val value: Int) : ChannelType","dev.kord.common.entity.ChannelType.Unknown"]},{"name":"class Unknown(val value: Int) : ComponentType","description":"dev.kord.common.entity.ComponentType.Unknown","location":"common/dev.kord.common.entity/-component-type/-unknown/index.html","searchKeys":["Unknown","class Unknown(val value: Int) : ComponentType","dev.kord.common.entity.ComponentType.Unknown"]},{"name":"class Unknown(val value: Int) : DefaultMessageNotificationLevel","description":"dev.kord.common.entity.DefaultMessageNotificationLevel.Unknown","location":"common/dev.kord.common.entity/-default-message-notification-level/-unknown/index.html","searchKeys":["Unknown","class Unknown(val value: Int) : DefaultMessageNotificationLevel","dev.kord.common.entity.DefaultMessageNotificationLevel.Unknown"]},{"name":"class Unknown(val value: Int) : DiscordConnectionVisibility","description":"dev.kord.common.entity.DiscordConnectionVisibility.Unknown","location":"common/dev.kord.common.entity/-discord-connection-visibility/-unknown/index.html","searchKeys":["Unknown","class Unknown(val value: Int) : DiscordConnectionVisibility","dev.kord.common.entity.DiscordConnectionVisibility.Unknown"]},{"name":"class Unknown(val value: Int) : ExplicitContentFilter","description":"dev.kord.common.entity.ExplicitContentFilter.Unknown","location":"common/dev.kord.common.entity/-explicit-content-filter/-unknown/index.html","searchKeys":["Unknown","class Unknown(val value: Int) : ExplicitContentFilter","dev.kord.common.entity.ExplicitContentFilter.Unknown"]},{"name":"class Unknown(val value: Int) : GuildScheduledEventPrivacyLevel","description":"dev.kord.common.entity.GuildScheduledEventPrivacyLevel.Unknown","location":"common/dev.kord.common.entity/-guild-scheduled-event-privacy-level/-unknown/index.html","searchKeys":["Unknown","class Unknown(val value: Int) : GuildScheduledEventPrivacyLevel","dev.kord.common.entity.GuildScheduledEventPrivacyLevel.Unknown"]},{"name":"class Unknown(val value: Int) : GuildScheduledEventStatus","description":"dev.kord.common.entity.GuildScheduledEventStatus.Unknown","location":"common/dev.kord.common.entity/-guild-scheduled-event-status/-unknown/index.html","searchKeys":["Unknown","class Unknown(val value: Int) : GuildScheduledEventStatus","dev.kord.common.entity.GuildScheduledEventStatus.Unknown"]},{"name":"class Unknown(val value: Int) : IntegrationExpireBehavior","description":"dev.kord.common.entity.IntegrationExpireBehavior.Unknown","location":"common/dev.kord.common.entity/-integration-expire-behavior/-unknown/index.html","searchKeys":["Unknown","class Unknown(val value: Int) : IntegrationExpireBehavior","dev.kord.common.entity.IntegrationExpireBehavior.Unknown"]},{"name":"class Unknown(val value: Int) : InviteTargetType","description":"dev.kord.common.entity.InviteTargetType.Unknown","location":"common/dev.kord.common.entity/-invite-target-type/-unknown/index.html","searchKeys":["Unknown","class Unknown(val value: Int) : InviteTargetType","dev.kord.common.entity.InviteTargetType.Unknown"]},{"name":"class Unknown(val value: Int) : MFALevel","description":"dev.kord.common.entity.MFALevel.Unknown","location":"common/dev.kord.common.entity/-m-f-a-level/-unknown/index.html","searchKeys":["Unknown","class Unknown(val value: Int) : MFALevel","dev.kord.common.entity.MFALevel.Unknown"]},{"name":"class Unknown(val value: Int) : MessageActivityType","description":"dev.kord.common.entity.MessageActivityType.Unknown","location":"common/dev.kord.common.entity/-message-activity-type/-unknown/index.html","searchKeys":["Unknown","class Unknown(val value: Int) : MessageActivityType","dev.kord.common.entity.MessageActivityType.Unknown"]},{"name":"class Unknown(val value: Int) : MessageStickerType","description":"dev.kord.common.entity.MessageStickerType.Unknown","location":"common/dev.kord.common.entity/-message-sticker-type/-unknown/index.html","searchKeys":["Unknown","class Unknown(val value: Int) : MessageStickerType","dev.kord.common.entity.MessageStickerType.Unknown"]},{"name":"class Unknown(val value: Int) : NsfwLevel","description":"dev.kord.common.entity.NsfwLevel.Unknown","location":"common/dev.kord.common.entity/-nsfw-level/-unknown/index.html","searchKeys":["Unknown","class Unknown(val value: Int) : NsfwLevel","dev.kord.common.entity.NsfwLevel.Unknown"]},{"name":"class Unknown(val value: Int) : OverwriteType","description":"dev.kord.common.entity.OverwriteType.Unknown","location":"common/dev.kord.common.entity/-overwrite-type/-unknown/index.html","searchKeys":["Unknown","class Unknown(val value: Int) : OverwriteType","dev.kord.common.entity.OverwriteType.Unknown"]},{"name":"class Unknown(val value: Int) : PremiumTier","description":"dev.kord.common.entity.PremiumTier.Unknown","location":"common/dev.kord.common.entity/-premium-tier/-unknown/index.html","searchKeys":["Unknown","class Unknown(val value: Int) : PremiumTier","dev.kord.common.entity.PremiumTier.Unknown"]},{"name":"class Unknown(val value: Int) : ScheduledEntityType","description":"dev.kord.common.entity.ScheduledEntityType.Unknown","location":"common/dev.kord.common.entity/-scheduled-entity-type/-unknown/index.html","searchKeys":["Unknown","class Unknown(val value: Int) : ScheduledEntityType","dev.kord.common.entity.ScheduledEntityType.Unknown"]},{"name":"class Unknown(val value: Int) : StageInstancePrivacyLevel","description":"dev.kord.common.entity.StageInstancePrivacyLevel.Unknown","location":"common/dev.kord.common.entity/-stage-instance-privacy-level/-unknown/index.html","searchKeys":["Unknown","class Unknown(val value: Int) : StageInstancePrivacyLevel","dev.kord.common.entity.StageInstancePrivacyLevel.Unknown"]},{"name":"class Unknown(val value: Int) : TeamMembershipState","description":"dev.kord.common.entity.TeamMembershipState.Unknown","location":"common/dev.kord.common.entity/-team-membership-state/-unknown/index.html","searchKeys":["Unknown","class Unknown(val value: Int) : TeamMembershipState","dev.kord.common.entity.TeamMembershipState.Unknown"]},{"name":"class Unknown(val value: Int) : TextInputStyle","description":"dev.kord.common.entity.TextInputStyle.Unknown","location":"common/dev.kord.common.entity/-text-input-style/-unknown/index.html","searchKeys":["Unknown","class Unknown(val value: Int) : TextInputStyle","dev.kord.common.entity.TextInputStyle.Unknown"]},{"name":"class Unknown(val value: Int) : UserPremium","description":"dev.kord.common.entity.UserPremium.Unknown","location":"common/dev.kord.common.entity/-user-premium/-unknown/index.html","searchKeys":["Unknown","class Unknown(val value: Int) : UserPremium","dev.kord.common.entity.UserPremium.Unknown"]},{"name":"class Unknown(val value: Int) : VerificationLevel","description":"dev.kord.common.entity.VerificationLevel.Unknown","location":"common/dev.kord.common.entity/-verification-level/-unknown/index.html","searchKeys":["Unknown","class Unknown(val value: Int) : VerificationLevel","dev.kord.common.entity.VerificationLevel.Unknown"]},{"name":"class Unknown(val value: Int) : VideoQualityMode","description":"dev.kord.common.entity.VideoQualityMode.Unknown","location":"common/dev.kord.common.entity/-video-quality-mode/-unknown/index.html","searchKeys":["Unknown","class Unknown(val value: Int) : VideoQualityMode","dev.kord.common.entity.VideoQualityMode.Unknown"]},{"name":"class Unknown(val value: Int) : WebhookType","description":"dev.kord.common.entity.WebhookType.Unknown","location":"common/dev.kord.common.entity/-webhook-type/-unknown/index.html","searchKeys":["Unknown","class Unknown(val value: Int) : WebhookType","dev.kord.common.entity.WebhookType.Unknown"]},{"name":"class Unknown(val value: String) : AllowedMentionType","description":"dev.kord.common.entity.AllowedMentionType.Unknown","location":"common/dev.kord.common.entity/-allowed-mention-type/-unknown/index.html","searchKeys":["Unknown","class Unknown(val value: String) : AllowedMentionType","dev.kord.common.entity.AllowedMentionType.Unknown"]},{"name":"class Unknown(val value: String) : EmbedType","description":"dev.kord.common.entity.EmbedType.Unknown","location":"common/dev.kord.common.entity/-embed-type/-unknown/index.html","searchKeys":["Unknown","class Unknown(val value: String) : EmbedType","dev.kord.common.entity.EmbedType.Unknown"]},{"name":"class Unknown(val value: String) : GuildFeature","description":"dev.kord.common.entity.GuildFeature.Unknown","location":"common/dev.kord.common.entity/-guild-feature/-unknown/index.html","searchKeys":["Unknown","class Unknown(val value: String) : GuildFeature","dev.kord.common.entity.GuildFeature.Unknown"]},{"name":"class Unknown(val value: String) : PresenceStatus","description":"dev.kord.common.entity.PresenceStatus.Unknown","location":"common/dev.kord.common.entity/-presence-status/-unknown/index.html","searchKeys":["Unknown","class Unknown(val value: String) : PresenceStatus","dev.kord.common.entity.PresenceStatus.Unknown"]},{"name":"class Unknown constructor(val value: Int) : DiscordGuildApplicationCommandPermission.Type","description":"dev.kord.common.entity.DiscordGuildApplicationCommandPermission.Type.Unknown","location":"common/dev.kord.common.entity/-discord-guild-application-command-permission/-type/-unknown/index.html","searchKeys":["Unknown","class Unknown constructor(val value: Int) : DiscordGuildApplicationCommandPermission.Type","dev.kord.common.entity.DiscordGuildApplicationCommandPermission.Type.Unknown"]},{"name":"class UserFlagsBuilder(code: Int = 0)","description":"dev.kord.common.entity.UserFlags.UserFlagsBuilder","location":"common/dev.kord.common.entity/-user-flags/-user-flags-builder/index.html","searchKeys":["UserFlagsBuilder","class UserFlagsBuilder(code: Int = 0)","dev.kord.common.entity.UserFlags.UserFlagsBuilder"]},{"name":"class Value(uLongValue: ULong) : OptionalSnowflake","description":"dev.kord.common.entity.optional.OptionalSnowflake.Value","location":"common/dev.kord.common.entity.optional/-optional-snowflake/-value/index.html","searchKeys":["Value","class Value(uLongValue: ULong) : OptionalSnowflake","dev.kord.common.entity.optional.OptionalSnowflake.Value"]},{"name":"class Value(val value: Boolean) : OptionalBoolean","description":"dev.kord.common.entity.optional.OptionalBoolean.Value","location":"common/dev.kord.common.entity.optional/-optional-boolean/-value/index.html","searchKeys":["Value","class Value(val value: Boolean) : OptionalBoolean","dev.kord.common.entity.optional.OptionalBoolean.Value"]},{"name":"class Value(val value: Int) : OptionalInt","description":"dev.kord.common.entity.optional.OptionalInt.Value","location":"common/dev.kord.common.entity.optional/-optional-int/-value/index.html","searchKeys":["Value","class Value(val value: Int) : OptionalInt","dev.kord.common.entity.optional.OptionalInt.Value"]},{"name":"class Value(val value: Long) : OptionalLong","description":"dev.kord.common.entity.optional.OptionalLong.Value","location":"common/dev.kord.common.entity.optional/-optional-long/-value/index.html","searchKeys":["Value","class Value(val value: Long) : OptionalLong","dev.kord.common.entity.optional.OptionalLong.Value"]},{"name":"class Value<T : Any>(val value: T) : Optional<T> ","description":"dev.kord.common.entity.optional.Optional.Value","location":"common/dev.kord.common.entity.optional/-optional/-value/index.html","searchKeys":["Value","class Value<T : Any>(val value: T) : Optional<T> ","dev.kord.common.entity.optional.Optional.Value"]},{"name":"data class AllRemovedMessageReactions(val channelId: Snowflake, val messageId: Snowflake, val guildId: OptionalSnowflake = OptionalSnowflake.Missing)","description":"dev.kord.common.entity.AllRemovedMessageReactions","location":"common/dev.kord.common.entity/-all-removed-message-reactions/index.html","searchKeys":["AllRemovedMessageReactions","data class AllRemovedMessageReactions(val channelId: Snowflake, val messageId: Snowflake, val guildId: OptionalSnowflake = OptionalSnowflake.Missing)","dev.kord.common.entity.AllRemovedMessageReactions"]},{"name":"data class AllowedMentions(val parse: List<AllowedMentionType>, val users: List<String>, val roles: List<String>, val repliedUser: OptionalBoolean = OptionalBoolean.Missing)","description":"dev.kord.common.entity.AllowedMentions","location":"common/dev.kord.common.entity/-allowed-mentions/index.html","searchKeys":["AllowedMentions","data class AllowedMentions(val parse: List<AllowedMentionType>, val users: List<String>, val roles: List<String>, val repliedUser: OptionalBoolean = OptionalBoolean.Missing)","dev.kord.common.entity.AllowedMentions"]},{"name":"data class ApplicationCommandOption(val type: ApplicationCommandOptionType, val name: String, val nameLocalizations: Optional<Map<Locale, String>?> = Optional.Missing(), val description: String, val descriptionLocalizations: Optional<Map<Locale, String>?> = Optional.Missing(), val default: OptionalBoolean = OptionalBoolean.Missing, val required: OptionalBoolean = OptionalBoolean.Missing, val choices: Optional<List<Choice<Any?>>> = Optional.Missing(), val autocomplete: OptionalBoolean = OptionalBoolean.Missing, val options: Optional<List<ApplicationCommandOption>> = Optional.Missing(), val channelTypes: Optional<List<ChannelType>> = Optional.Missing(), val minValue: Optional<JsonPrimitive> = Optional.Missing(), val maxValue: Optional<JsonPrimitive> = Optional.Missing(), val minLength: OptionalInt = OptionalInt.Missing, val maxLength: OptionalInt = OptionalInt.Missing)","description":"dev.kord.common.entity.ApplicationCommandOption","location":"common/dev.kord.common.entity/-application-command-option/index.html","searchKeys":["ApplicationCommandOption","data class ApplicationCommandOption(val type: ApplicationCommandOptionType, val name: String, val nameLocalizations: Optional<Map<Locale, String>?> = Optional.Missing(), val description: String, val descriptionLocalizations: Optional<Map<Locale, String>?> = Optional.Missing(), val default: OptionalBoolean = OptionalBoolean.Missing, val required: OptionalBoolean = OptionalBoolean.Missing, val choices: Optional<List<Choice<Any?>>> = Optional.Missing(), val autocomplete: OptionalBoolean = OptionalBoolean.Missing, val options: Optional<List<ApplicationCommandOption>> = Optional.Missing(), val channelTypes: Optional<List<ChannelType>> = Optional.Missing(), val minValue: Optional<JsonPrimitive> = Optional.Missing(), val maxValue: Optional<JsonPrimitive> = Optional.Missing(), val minLength: OptionalInt = OptionalInt.Missing, val maxLength: OptionalInt = OptionalInt.Missing)","dev.kord.common.entity.ApplicationCommandOption"]},{"name":"data class ApplicationFlags","description":"dev.kord.common.entity.ApplicationFlags","location":"common/dev.kord.common.entity/-application-flags/index.html","searchKeys":["ApplicationFlags","data class ApplicationFlags","dev.kord.common.entity.ApplicationFlags"]},{"name":"data class AttachmentArgument(val name: String, val value: Snowflake, val focused: OptionalBoolean = OptionalBoolean.Missing) : CommandArgument<Snowflake> ","description":"dev.kord.common.entity.CommandArgument.AttachmentArgument","location":"common/dev.kord.common.entity/-command-argument/-attachment-argument/index.html","searchKeys":["AttachmentArgument","data class AttachmentArgument(val name: String, val value: Snowflake, val focused: OptionalBoolean = OptionalBoolean.Missing) : CommandArgument<Snowflake> ","dev.kord.common.entity.CommandArgument.AttachmentArgument"]},{"name":"data class AuditLogChange<T>(val new: T?, val old: T?, val key: AuditLogChangeKey<T>)","description":"dev.kord.common.entity.AuditLogChange","location":"common/dev.kord.common.entity/-audit-log-change/index.html","searchKeys":["AuditLogChange","data class AuditLogChange<T>(val new: T?, val old: T?, val key: AuditLogChangeKey<T>)","dev.kord.common.entity.AuditLogChange"]},{"name":"data class AuditLogEntryOptionalInfo(val applicationId: OptionalSnowflake = OptionalSnowflake.Missing, val autoModerationRuleName: Optional<String> = Optional.Missing(), val autoModerationRuleTriggerType: Optional<String> = Optional.Missing(), val deleteMemberDays: Optional<String> = Optional.Missing(), val membersRemoved: Optional<String> = Optional.Missing(), val channelId: OptionalSnowflake = OptionalSnowflake.Missing, val messageId: OptionalSnowflake = OptionalSnowflake.Missing, val count: Optional<String> = Optional.Missing(), val id: OptionalSnowflake = OptionalSnowflake.Missing, val type: Optional<OverwriteType> = Optional.Missing(), val roleName: Optional<String> = Optional.Missing())","description":"dev.kord.common.entity.AuditLogEntryOptionalInfo","location":"common/dev.kord.common.entity/-audit-log-entry-optional-info/index.html","searchKeys":["AuditLogEntryOptionalInfo","data class AuditLogEntryOptionalInfo(val applicationId: OptionalSnowflake = OptionalSnowflake.Missing, val autoModerationRuleName: Optional<String> = Optional.Missing(), val autoModerationRuleTriggerType: Optional<String> = Optional.Missing(), val deleteMemberDays: Optional<String> = Optional.Missing(), val membersRemoved: Optional<String> = Optional.Missing(), val channelId: OptionalSnowflake = OptionalSnowflake.Missing, val messageId: OptionalSnowflake = OptionalSnowflake.Missing, val count: Optional<String> = Optional.Missing(), val id: OptionalSnowflake = OptionalSnowflake.Missing, val type: Optional<OverwriteType> = Optional.Missing(), val roleName: Optional<String> = Optional.Missing())","dev.kord.common.entity.AuditLogEntryOptionalInfo"]},{"name":"data class Author(val name: Optional<String> = Optional.Missing(), val url: Optional<String> = Optional.Missing(), val iconUrl: Optional<String> = Optional.Missing(), val proxyIconUrl: Optional<String> = Optional.Missing())","description":"dev.kord.common.entity.DiscordEmbed.Author","location":"common/dev.kord.common.entity/-discord-embed/-author/index.html","searchKeys":["Author","data class Author(val name: Optional<String> = Optional.Missing(), val url: Optional<String> = Optional.Missing(), val iconUrl: Optional<String> = Optional.Missing(), val proxyIconUrl: Optional<String> = Optional.Missing())","dev.kord.common.entity.DiscordEmbed.Author"]},{"name":"data class AutoCompleteArgument(val name: String, val type: ApplicationCommandOptionType, val value: String, val focused: OptionalBoolean) : CommandArgument<String> ","description":"dev.kord.common.entity.CommandArgument.AutoCompleteArgument","location":"common/dev.kord.common.entity/-command-argument/-auto-complete-argument/index.html","searchKeys":["AutoCompleteArgument","data class AutoCompleteArgument(val name: String, val type: ApplicationCommandOptionType, val value: String, val focused: OptionalBoolean) : CommandArgument<String> ","dev.kord.common.entity.CommandArgument.AutoCompleteArgument"]},{"name":"data class BooleanArgument(val name: String, val value: Boolean, val focused: OptionalBoolean = OptionalBoolean.Missing) : CommandArgument<Boolean> ","description":"dev.kord.common.entity.CommandArgument.BooleanArgument","location":"common/dev.kord.common.entity/-command-argument/-boolean-argument/index.html","searchKeys":["BooleanArgument","data class BooleanArgument(val name: String, val value: Boolean, val focused: OptionalBoolean = OptionalBoolean.Missing) : CommandArgument<Boolean> ","dev.kord.common.entity.CommandArgument.BooleanArgument"]},{"name":"data class BulkDeleteData(val ids: List<Snowflake>, val channelId: Snowflake, val guildId: OptionalSnowflake = OptionalSnowflake.Missing)","description":"dev.kord.common.entity.BulkDeleteData","location":"common/dev.kord.common.entity/-bulk-delete-data/index.html","searchKeys":["BulkDeleteData","data class BulkDeleteData(val ids: List<Snowflake>, val channelId: Snowflake, val guildId: OptionalSnowflake = OptionalSnowflake.Missing)","dev.kord.common.entity.BulkDeleteData"]},{"name":"data class ChannelArgument(val name: String, val value: Snowflake, val focused: OptionalBoolean = OptionalBoolean.Missing) : CommandArgument<Snowflake> ","description":"dev.kord.common.entity.CommandArgument.ChannelArgument","location":"common/dev.kord.common.entity/-command-argument/-channel-argument/index.html","searchKeys":["ChannelArgument","data class ChannelArgument(val name: String, val value: Snowflake, val focused: OptionalBoolean = OptionalBoolean.Missing) : CommandArgument<Snowflake> ","dev.kord.common.entity.CommandArgument.ChannelArgument"]},{"name":"data class CommandGroup(val name: String, val options: Optional<List<SubCommand>> = Optional.Missing()) : Option","description":"dev.kord.common.entity.CommandGroup","location":"common/dev.kord.common.entity/-command-group/index.html","searchKeys":["CommandGroup","data class CommandGroup(val name: String, val options: Optional<List<SubCommand>> = Optional.Missing()) : Option","dev.kord.common.entity.CommandGroup"]},{"name":"data class DeletedMessage(val id: Snowflake, val channelId: Snowflake, val guildId: OptionalSnowflake = OptionalSnowflake.Missing)","description":"dev.kord.common.entity.DeletedMessage","location":"common/dev.kord.common.entity/-deleted-message/index.html","searchKeys":["DeletedMessage","data class DeletedMessage(val id: Snowflake, val channelId: Snowflake, val guildId: OptionalSnowflake = OptionalSnowflake.Missing)","dev.kord.common.entity.DeletedMessage"]},{"name":"data class DiscordActivity(val name: String, val type: ActivityType, val url: Optional<String?> = Optional.Missing(), val createdAt: Instant, val timestamps: Optional<DiscordActivityTimestamps> = Optional.Missing(), val applicationId: OptionalSnowflake = OptionalSnowflake.Missing, val details: Optional<String?> = Optional.Missing(), val state: Optional<String?> = Optional.Missing(), val emoji: Optional<DiscordActivityEmoji?> = Optional.Missing(), val party: Optional<DiscordActivityParty> = Optional.Missing(), val assets: Optional<DiscordActivityAssets> = Optional.Missing(), val secrets: Optional<DiscordActivitySecrets> = Optional.Missing(), val instance: OptionalBoolean = OptionalBoolean.Missing, val flags: Optional<ActivityFlags> = Optional.Missing(), val buttons: Optional<List<String>> = Optional.Missing())","description":"dev.kord.common.entity.DiscordActivity","location":"common/dev.kord.common.entity/-discord-activity/index.html","searchKeys":["DiscordActivity","data class DiscordActivity(val name: String, val type: ActivityType, val url: Optional<String?> = Optional.Missing(), val createdAt: Instant, val timestamps: Optional<DiscordActivityTimestamps> = Optional.Missing(), val applicationId: OptionalSnowflake = OptionalSnowflake.Missing, val details: Optional<String?> = Optional.Missing(), val state: Optional<String?> = Optional.Missing(), val emoji: Optional<DiscordActivityEmoji?> = Optional.Missing(), val party: Optional<DiscordActivityParty> = Optional.Missing(), val assets: Optional<DiscordActivityAssets> = Optional.Missing(), val secrets: Optional<DiscordActivitySecrets> = Optional.Missing(), val instance: OptionalBoolean = OptionalBoolean.Missing, val flags: Optional<ActivityFlags> = Optional.Missing(), val buttons: Optional<List<String>> = Optional.Missing())","dev.kord.common.entity.DiscordActivity"]},{"name":"data class DiscordActivityAssets(val largeImage: Optional<String> = Optional.Missing(), val largeText: Optional<String> = Optional.Missing(), val smallImage: Optional<String> = Optional.Missing(), val smallText: Optional<String> = Optional.Missing())","description":"dev.kord.common.entity.DiscordActivityAssets","location":"common/dev.kord.common.entity/-discord-activity-assets/index.html","searchKeys":["DiscordActivityAssets","data class DiscordActivityAssets(val largeImage: Optional<String> = Optional.Missing(), val largeText: Optional<String> = Optional.Missing(), val smallImage: Optional<String> = Optional.Missing(), val smallText: Optional<String> = Optional.Missing())","dev.kord.common.entity.DiscordActivityAssets"]},{"name":"data class DiscordActivityEmoji(val name: String, val id: OptionalSnowflake = OptionalSnowflake.Missing, val animated: OptionalBoolean = OptionalBoolean.Missing)","description":"dev.kord.common.entity.DiscordActivityEmoji","location":"common/dev.kord.common.entity/-discord-activity-emoji/index.html","searchKeys":["DiscordActivityEmoji","data class DiscordActivityEmoji(val name: String, val id: OptionalSnowflake = OptionalSnowflake.Missing, val animated: OptionalBoolean = OptionalBoolean.Missing)","dev.kord.common.entity.DiscordActivityEmoji"]},{"name":"data class DiscordActivityParty(val id: Optional<String> = Optional.Missing(), val size: Optional<DiscordActivityPartySize> = Optional.Missing())","description":"dev.kord.common.entity.DiscordActivityParty","location":"common/dev.kord.common.entity/-discord-activity-party/index.html","searchKeys":["DiscordActivityParty","data class DiscordActivityParty(val id: Optional<String> = Optional.Missing(), val size: Optional<DiscordActivityPartySize> = Optional.Missing())","dev.kord.common.entity.DiscordActivityParty"]},{"name":"data class DiscordActivityPartySize(val current: Int, val maximum: Int)","description":"dev.kord.common.entity.DiscordActivityPartySize","location":"common/dev.kord.common.entity/-discord-activity-party-size/index.html","searchKeys":["DiscordActivityPartySize","data class DiscordActivityPartySize(val current: Int, val maximum: Int)","dev.kord.common.entity.DiscordActivityPartySize"]},{"name":"data class DiscordActivitySecrets(val join: Optional<String> = Optional.Missing(), val spectate: Optional<String> = Optional.Missing(), val match: Optional<String> = Optional.Missing())","description":"dev.kord.common.entity.DiscordActivitySecrets","location":"common/dev.kord.common.entity/-discord-activity-secrets/index.html","searchKeys":["DiscordActivitySecrets","data class DiscordActivitySecrets(val join: Optional<String> = Optional.Missing(), val spectate: Optional<String> = Optional.Missing(), val match: Optional<String> = Optional.Missing())","dev.kord.common.entity.DiscordActivitySecrets"]},{"name":"data class DiscordActivityTimestamps(val start: Optional<Instant> = Optional.Missing(), val end: Optional<Instant> = Optional.Missing())","description":"dev.kord.common.entity.DiscordActivityTimestamps","location":"common/dev.kord.common.entity/-discord-activity-timestamps/index.html","searchKeys":["DiscordActivityTimestamps","data class DiscordActivityTimestamps(val start: Optional<Instant> = Optional.Missing(), val end: Optional<Instant> = Optional.Missing())","dev.kord.common.entity.DiscordActivityTimestamps"]},{"name":"data class DiscordAddedGuildMember(val user: Optional<DiscordUser> = Optional.Missing(), val nick: Optional<String?> = Optional.Missing(), val roles: List<Snowflake>, val joinedAt: Instant, val premiumSince: Optional<Instant?> = Optional.Missing(), val deaf: Boolean, val mute: Boolean, val guildId: Snowflake, val pending: OptionalBoolean = OptionalBoolean.Missing, val avatar: Optional<String?> = Optional.Missing(), val communicationDisabledUntil: Optional<Instant?> = Optional.Missing())","description":"dev.kord.common.entity.DiscordAddedGuildMember","location":"common/dev.kord.common.entity/-discord-added-guild-member/index.html","searchKeys":["DiscordAddedGuildMember","data class DiscordAddedGuildMember(val user: Optional<DiscordUser> = Optional.Missing(), val nick: Optional<String?> = Optional.Missing(), val roles: List<Snowflake>, val joinedAt: Instant, val premiumSince: Optional<Instant?> = Optional.Missing(), val deaf: Boolean, val mute: Boolean, val guildId: Snowflake, val pending: OptionalBoolean = OptionalBoolean.Missing, val avatar: Optional<String?> = Optional.Missing(), val communicationDisabledUntil: Optional<Instant?> = Optional.Missing())","dev.kord.common.entity.DiscordAddedGuildMember"]},{"name":"data class DiscordApplication(val id: Snowflake, val name: String, val icon: String?, val description: String, val rpcOrigins: Optional<List<String>> = Optional.Missing(), val botPublic: Boolean, val botRequireCodeGrant: Boolean, val termsOfServiceUrl: Optional<String> = Optional.Missing(), val privacyPolicyUrl: Optional<String> = Optional.Missing(), val owner: Optional<DiscordUser> = Optional.Missing(), val verifyKey: String, val team: DiscordTeam?, val guildId: OptionalSnowflake = OptionalSnowflake.Missing, val primarySkuId: OptionalSnowflake = OptionalSnowflake.Missing, val slug: Optional<String> = Optional.Missing(), val coverImage: Optional<String> = Optional.Missing(), val flags: Optional<ApplicationFlags> = Optional.Missing(), val tags: Optional<List<String>> = Optional.Missing(), val installParams: Optional<InstallParams> = Optional.Missing(), val customInstallUrl: Optional<String> = Optional.Missing()) : BaseDiscordApplication","description":"dev.kord.common.entity.DiscordApplication","location":"common/dev.kord.common.entity/-discord-application/index.html","searchKeys":["DiscordApplication","data class DiscordApplication(val id: Snowflake, val name: String, val icon: String?, val description: String, val rpcOrigins: Optional<List<String>> = Optional.Missing(), val botPublic: Boolean, val botRequireCodeGrant: Boolean, val termsOfServiceUrl: Optional<String> = Optional.Missing(), val privacyPolicyUrl: Optional<String> = Optional.Missing(), val owner: Optional<DiscordUser> = Optional.Missing(), val verifyKey: String, val team: DiscordTeam?, val guildId: OptionalSnowflake = OptionalSnowflake.Missing, val primarySkuId: OptionalSnowflake = OptionalSnowflake.Missing, val slug: Optional<String> = Optional.Missing(), val coverImage: Optional<String> = Optional.Missing(), val flags: Optional<ApplicationFlags> = Optional.Missing(), val tags: Optional<List<String>> = Optional.Missing(), val installParams: Optional<InstallParams> = Optional.Missing(), val customInstallUrl: Optional<String> = Optional.Missing()) : BaseDiscordApplication","dev.kord.common.entity.DiscordApplication"]},{"name":"data class DiscordApplicationCommand(val id: Snowflake, val type: Optional<ApplicationCommandType> = Optional.Missing(), val applicationId: Snowflake, val name: String, val nameLocalizations: Optional<Map<Locale, String>?> = Optional.Missing(), val description: String?, val descriptionLocalizations: Optional<Map<Locale, String>?> = Optional.Missing(), val guildId: OptionalSnowflake = OptionalSnowflake.Missing, val options: Optional<List<ApplicationCommandOption>> = Optional.Missing(), val defaultMemberPermissions: Permissions?, val dmPermission: OptionalBoolean = OptionalBoolean.Missing, val defaultPermission: OptionalBoolean? = OptionalBoolean.Missing, val version: Snowflake)","description":"dev.kord.common.entity.DiscordApplicationCommand","location":"common/dev.kord.common.entity/-discord-application-command/index.html","searchKeys":["DiscordApplicationCommand","data class DiscordApplicationCommand(val id: Snowflake, val type: Optional<ApplicationCommandType> = Optional.Missing(), val applicationId: Snowflake, val name: String, val nameLocalizations: Optional<Map<Locale, String>?> = Optional.Missing(), val description: String?, val descriptionLocalizations: Optional<Map<Locale, String>?> = Optional.Missing(), val guildId: OptionalSnowflake = OptionalSnowflake.Missing, val options: Optional<List<ApplicationCommandOption>> = Optional.Missing(), val defaultMemberPermissions: Permissions?, val dmPermission: OptionalBoolean = OptionalBoolean.Missing, val defaultPermission: OptionalBoolean? = OptionalBoolean.Missing, val version: Snowflake)","dev.kord.common.entity.DiscordApplicationCommand"]},{"name":"data class DiscordAttachment(val id: Snowflake, val filename: String, val description: Optional<String> = Optional.Missing(), val contentType: Optional<String> = Optional.Missing(), val size: Int, val url: String, val proxyUrl: String, val height: OptionalInt? = OptionalInt.Missing, val width: OptionalInt? = OptionalInt.Missing, val ephemeral: OptionalBoolean = OptionalBoolean.Missing)","description":"dev.kord.common.entity.DiscordAttachment","location":"common/dev.kord.common.entity/-discord-attachment/index.html","searchKeys":["DiscordAttachment","data class DiscordAttachment(val id: Snowflake, val filename: String, val description: Optional<String> = Optional.Missing(), val contentType: Optional<String> = Optional.Missing(), val size: Int, val url: String, val proxyUrl: String, val height: OptionalInt? = OptionalInt.Missing, val width: OptionalInt? = OptionalInt.Missing, val ephemeral: OptionalBoolean = OptionalBoolean.Missing)","dev.kord.common.entity.DiscordAttachment"]},{"name":"data class DiscordAuditLog(val webhooks: List<DiscordWebhook>, val users: List<DiscordUser>, val applicationCommands: List<DiscordApplicationCommand>, val auditLogEntries: List<DiscordAuditLogEntry>, val autoModerationRules: List<DiscordAutoModerationRule>, val integrations: List<DiscordPartialIntegration>, val threads: List<DiscordChannel>)","description":"dev.kord.common.entity.DiscordAuditLog","location":"common/dev.kord.common.entity/-discord-audit-log/index.html","searchKeys":["DiscordAuditLog","data class DiscordAuditLog(val webhooks: List<DiscordWebhook>, val users: List<DiscordUser>, val applicationCommands: List<DiscordApplicationCommand>, val auditLogEntries: List<DiscordAuditLogEntry>, val autoModerationRules: List<DiscordAutoModerationRule>, val integrations: List<DiscordPartialIntegration>, val threads: List<DiscordChannel>)","dev.kord.common.entity.DiscordAuditLog"]},{"name":"data class DiscordAuditLogEntry(val targetId: Snowflake?, val changes: Optional<List<AuditLogChange<in Any?>>> = Optional.Missing(), val userId: Snowflake, val id: Snowflake, val actionType: AuditLogEvent, val options: Optional<AuditLogEntryOptionalInfo> = Optional.Missing(), val reason: Optional<String> = Optional.Missing())","description":"dev.kord.common.entity.DiscordAuditLogEntry","location":"common/dev.kord.common.entity/-discord-audit-log-entry/index.html","searchKeys":["DiscordAuditLogEntry","data class DiscordAuditLogEntry(val targetId: Snowflake?, val changes: Optional<List<AuditLogChange<in Any?>>> = Optional.Missing(), val userId: Snowflake, val id: Snowflake, val actionType: AuditLogEvent, val options: Optional<AuditLogEntryOptionalInfo> = Optional.Missing(), val reason: Optional<String> = Optional.Missing())","dev.kord.common.entity.DiscordAuditLogEntry"]},{"name":"data class DiscordAuditLogRoleChange(val id: String, val name: String? = null, val color: Int? = null, val hoist: Boolean? = null, val position: Int? = null, val permissions: Permissions? = null, val managed: Boolean? = null, val mentionable: Boolean? = null)","description":"dev.kord.common.entity.DiscordAuditLogRoleChange","location":"common/dev.kord.common.entity/-discord-audit-log-role-change/index.html","searchKeys":["DiscordAuditLogRoleChange","data class DiscordAuditLogRoleChange(val id: String, val name: String? = null, val color: Int? = null, val hoist: Boolean? = null, val position: Int? = null, val permissions: Permissions? = null, val managed: Boolean? = null, val mentionable: Boolean? = null)","dev.kord.common.entity.DiscordAuditLogRoleChange"]},{"name":"data class DiscordAutoComplete<T>(val choices: List<Choice<T>>)","description":"dev.kord.common.entity.DiscordAutoComplete","location":"common/dev.kord.common.entity/-discord-auto-complete/index.html","searchKeys":["DiscordAutoComplete","data class DiscordAutoComplete<T>(val choices: List<Choice<T>>)","dev.kord.common.entity.DiscordAutoComplete"]},{"name":"data class DiscordAutoModerationAction(val type: AutoModerationActionType, val metadata: Optional<DiscordAutoModerationActionMetadata> = Optional.Missing())","description":"dev.kord.common.entity.DiscordAutoModerationAction","location":"common/dev.kord.common.entity/-discord-auto-moderation-action/index.html","searchKeys":["DiscordAutoModerationAction","data class DiscordAutoModerationAction(val type: AutoModerationActionType, val metadata: Optional<DiscordAutoModerationActionMetadata> = Optional.Missing())","dev.kord.common.entity.DiscordAutoModerationAction"]},{"name":"data class DiscordAutoModerationActionMetadata(val channelId: OptionalSnowflake = OptionalSnowflake.Missing, val durationSeconds: Optional<DurationInSeconds> = Optional.Missing())","description":"dev.kord.common.entity.DiscordAutoModerationActionMetadata","location":"common/dev.kord.common.entity/-discord-auto-moderation-action-metadata/index.html","searchKeys":["DiscordAutoModerationActionMetadata","data class DiscordAutoModerationActionMetadata(val channelId: OptionalSnowflake = OptionalSnowflake.Missing, val durationSeconds: Optional<DurationInSeconds> = Optional.Missing())","dev.kord.common.entity.DiscordAutoModerationActionMetadata"]},{"name":"data class DiscordAutoModerationRule(val id: Snowflake, val guildId: Snowflake, val name: String, val creatorId: Snowflake, val eventType: AutoModerationRuleEventType, val triggerType: AutoModerationRuleTriggerType, val triggerMetadata: DiscordAutoModerationRuleTriggerMetadata, val actions: List<DiscordAutoModerationAction>, val enabled: Boolean, val exemptRoles: List<Snowflake>, val exemptChannels: List<Snowflake>)","description":"dev.kord.common.entity.DiscordAutoModerationRule","location":"common/dev.kord.common.entity/-discord-auto-moderation-rule/index.html","searchKeys":["DiscordAutoModerationRule","data class DiscordAutoModerationRule(val id: Snowflake, val guildId: Snowflake, val name: String, val creatorId: Snowflake, val eventType: AutoModerationRuleEventType, val triggerType: AutoModerationRuleTriggerType, val triggerMetadata: DiscordAutoModerationRuleTriggerMetadata, val actions: List<DiscordAutoModerationAction>, val enabled: Boolean, val exemptRoles: List<Snowflake>, val exemptChannels: List<Snowflake>)","dev.kord.common.entity.DiscordAutoModerationRule"]},{"name":"data class DiscordAutoModerationRuleTriggerMetadata(val keywordFilter: Optional<List<String>> = Optional.Missing(), val regexPatterns: Optional<List<String>> = Optional.Missing(), val presets: Optional<List<AutoModerationRuleKeywordPresetType>> = Optional.Missing(), val allowList: Optional<List<String>> = Optional.Missing(), val mentionTotalLimit: OptionalInt = OptionalInt.Missing)","description":"dev.kord.common.entity.DiscordAutoModerationRuleTriggerMetadata","location":"common/dev.kord.common.entity/-discord-auto-moderation-rule-trigger-metadata/index.html","searchKeys":["DiscordAutoModerationRuleTriggerMetadata","data class DiscordAutoModerationRuleTriggerMetadata(val keywordFilter: Optional<List<String>> = Optional.Missing(), val regexPatterns: Optional<List<String>> = Optional.Missing(), val presets: Optional<List<AutoModerationRuleKeywordPresetType>> = Optional.Missing(), val allowList: Optional<List<String>> = Optional.Missing(), val mentionTotalLimit: OptionalInt = OptionalInt.Missing)","dev.kord.common.entity.DiscordAutoModerationRuleTriggerMetadata"]},{"name":"data class DiscordBotActivity(val name: String, val type: ActivityType, val url: Optional<String?> = Optional.Missing())","description":"dev.kord.common.entity.DiscordBotActivity","location":"common/dev.kord.common.entity/-discord-bot-activity/index.html","searchKeys":["DiscordBotActivity","data class DiscordBotActivity(val name: String, val type: ActivityType, val url: Optional<String?> = Optional.Missing())","dev.kord.common.entity.DiscordBotActivity"]},{"name":"data class DiscordChannel(val id: Snowflake, val type: ChannelType, val guildId: OptionalSnowflake = OptionalSnowflake.Missing, val position: OptionalInt = OptionalInt.Missing, val permissionOverwrites: Optional<List<Overwrite>> = Optional.Missing(), val name: Optional<String?> = Optional.Missing(), val topic: Optional<String?> = Optional.Missing(), val nsfw: OptionalBoolean = OptionalBoolean.Missing, val lastMessageId: OptionalSnowflake? = OptionalSnowflake.Missing, val bitrate: OptionalInt = OptionalInt.Missing, val userLimit: OptionalInt = OptionalInt.Missing, val rateLimitPerUser: Optional<DurationInSeconds> = Optional.Missing(), val recipients: Optional<List<DiscordUser>> = Optional.Missing(), val icon: Optional<String?> = Optional.Missing(), val ownerId: OptionalSnowflake = OptionalSnowflake.Missing, val applicationId: OptionalSnowflake = OptionalSnowflake.Missing, val parentId: OptionalSnowflake? = OptionalSnowflake.Missing, val lastPinTimestamp: Optional<Instant?> = Optional.Missing(), val rtcRegion: Optional<String?> = Optional.Missing(), val videoQualityMode: Optional<VideoQualityMode> = Optional.Missing(), val permissions: Optional<Permissions> = Optional.Missing(), val messageCount: OptionalInt = OptionalInt.Missing, val memberCount: OptionalInt = OptionalInt.Missing, val threadMetadata: Optional<DiscordThreadMetadata> = Optional.Missing(), val defaultAutoArchiveDuration: Optional<ArchiveDuration> = Optional.Missing(), val member: Optional<DiscordThreadMember> = Optional.Missing())","description":"dev.kord.common.entity.DiscordChannel","location":"common/dev.kord.common.entity/-discord-channel/index.html","searchKeys":["DiscordChannel","data class DiscordChannel(val id: Snowflake, val type: ChannelType, val guildId: OptionalSnowflake = OptionalSnowflake.Missing, val position: OptionalInt = OptionalInt.Missing, val permissionOverwrites: Optional<List<Overwrite>> = Optional.Missing(), val name: Optional<String?> = Optional.Missing(), val topic: Optional<String?> = Optional.Missing(), val nsfw: OptionalBoolean = OptionalBoolean.Missing, val lastMessageId: OptionalSnowflake? = OptionalSnowflake.Missing, val bitrate: OptionalInt = OptionalInt.Missing, val userLimit: OptionalInt = OptionalInt.Missing, val rateLimitPerUser: Optional<DurationInSeconds> = Optional.Missing(), val recipients: Optional<List<DiscordUser>> = Optional.Missing(), val icon: Optional<String?> = Optional.Missing(), val ownerId: OptionalSnowflake = OptionalSnowflake.Missing, val applicationId: OptionalSnowflake = OptionalSnowflake.Missing, val parentId: OptionalSnowflake? = OptionalSnowflake.Missing, val lastPinTimestamp: Optional<Instant?> = Optional.Missing(), val rtcRegion: Optional<String?> = Optional.Missing(), val videoQualityMode: Optional<VideoQualityMode> = Optional.Missing(), val permissions: Optional<Permissions> = Optional.Missing(), val messageCount: OptionalInt = OptionalInt.Missing, val memberCount: OptionalInt = OptionalInt.Missing, val threadMetadata: Optional<DiscordThreadMetadata> = Optional.Missing(), val defaultAutoArchiveDuration: Optional<ArchiveDuration> = Optional.Missing(), val member: Optional<DiscordThreadMember> = Optional.Missing())","dev.kord.common.entity.DiscordChannel"]},{"name":"data class DiscordChatComponent(val type: ComponentType, val style: Optional<ButtonStyle> = Optional.Missing(), val label: Optional<String> = Optional.Missing(), val emoji: Optional<DiscordPartialEmoji> = Optional.Missing(), val customId: Optional<String> = Optional.Missing(), val url: Optional<String> = Optional.Missing(), val disabled: OptionalBoolean = OptionalBoolean.Missing, val components: Optional<List<DiscordComponent>> = Optional.Missing(), val options: Optional<List<DiscordSelectOption>> = Optional.Missing(), val placeholder: Optional<String> = Optional.Missing(), val minValues: OptionalInt = OptionalInt.Missing, val maxValues: OptionalInt = OptionalInt.Missing, val minLength: OptionalInt = OptionalInt.Missing, val maxLength: OptionalInt = OptionalInt.Missing, val required: OptionalBoolean = OptionalBoolean.Missing, val value: Optional<String> = Optional.Missing()) : DiscordComponent","description":"dev.kord.common.entity.DiscordChatComponent","location":"common/dev.kord.common.entity/-discord-chat-component/index.html","searchKeys":["DiscordChatComponent","data class DiscordChatComponent(val type: ComponentType, val style: Optional<ButtonStyle> = Optional.Missing(), val label: Optional<String> = Optional.Missing(), val emoji: Optional<DiscordPartialEmoji> = Optional.Missing(), val customId: Optional<String> = Optional.Missing(), val url: Optional<String> = Optional.Missing(), val disabled: OptionalBoolean = OptionalBoolean.Missing, val components: Optional<List<DiscordComponent>> = Optional.Missing(), val options: Optional<List<DiscordSelectOption>> = Optional.Missing(), val placeholder: Optional<String> = Optional.Missing(), val minValues: OptionalInt = OptionalInt.Missing, val maxValues: OptionalInt = OptionalInt.Missing, val minLength: OptionalInt = OptionalInt.Missing, val maxLength: OptionalInt = OptionalInt.Missing, val required: OptionalBoolean = OptionalBoolean.Missing, val value: Optional<String> = Optional.Missing()) : DiscordComponent","dev.kord.common.entity.DiscordChatComponent"]},{"name":"data class DiscordClientStatus(val desktop: Optional<PresenceStatus> = Optional.Missing(), val mobile: Optional<PresenceStatus> = Optional.Missing(), val web: Optional<PresenceStatus> = Optional.Missing())","description":"dev.kord.common.entity.DiscordClientStatus","location":"common/dev.kord.common.entity/-discord-client-status/index.html","searchKeys":["DiscordClientStatus","data class DiscordClientStatus(val desktop: Optional<PresenceStatus> = Optional.Missing(), val mobile: Optional<PresenceStatus> = Optional.Missing(), val web: Optional<PresenceStatus> = Optional.Missing())","dev.kord.common.entity.DiscordClientStatus"]},{"name":"data class DiscordConnection(val id: String, val name: String, val type: String, val revoked: OptionalBoolean = OptionalBoolean.Missing, val integrations: Optional<List<DiscordIntegration>> = Optional.Missing(), val verified: Boolean, val friendSync: Boolean, val showActivity: Boolean, val visibility: DiscordConnectionVisibility)","description":"dev.kord.common.entity.DiscordConnection","location":"common/dev.kord.common.entity/-discord-connection/index.html","searchKeys":["DiscordConnection","data class DiscordConnection(val id: String, val name: String, val type: String, val revoked: OptionalBoolean = OptionalBoolean.Missing, val integrations: Optional<List<DiscordIntegration>> = Optional.Missing(), val verified: Boolean, val friendSync: Boolean, val showActivity: Boolean, val visibility: DiscordConnectionVisibility)","dev.kord.common.entity.DiscordConnection"]},{"name":"data class DiscordDeletedGuildRole(val guildId: Snowflake, val id: Snowflake)","description":"dev.kord.common.entity.DiscordDeletedGuildRole","location":"common/dev.kord.common.entity/-discord-deleted-guild-role/index.html","searchKeys":["DiscordDeletedGuildRole","data class DiscordDeletedGuildRole(val guildId: Snowflake, val id: Snowflake)","dev.kord.common.entity.DiscordDeletedGuildRole"]},{"name":"data class DiscordEmbed(val title: Optional<String> = Optional.Missing(), val type: Optional<EmbedType> = Optional.Missing(), val description: Optional<String> = Optional.Missing(), val url: Optional<String> = Optional.Missing(), val timestamp: Optional<Instant> = Optional.Missing(), val color: OptionalInt = OptionalInt.Missing, val footer: Optional<DiscordEmbed.Footer> = Optional.Missing(), val image: Optional<DiscordEmbed.Image> = Optional.Missing(), val thumbnail: Optional<DiscordEmbed.Thumbnail> = Optional.Missing(), val video: Optional<DiscordEmbed.Video> = Optional.Missing(), val provider: Optional<DiscordEmbed.Provider> = Optional.Missing(), val author: Optional<DiscordEmbed.Author> = Optional.Missing(), val fields: Optional<List<DiscordEmbed.Field>> = Optional.Missing())","description":"dev.kord.common.entity.DiscordEmbed","location":"common/dev.kord.common.entity/-discord-embed/index.html","searchKeys":["DiscordEmbed","data class DiscordEmbed(val title: Optional<String> = Optional.Missing(), val type: Optional<EmbedType> = Optional.Missing(), val description: Optional<String> = Optional.Missing(), val url: Optional<String> = Optional.Missing(), val timestamp: Optional<Instant> = Optional.Missing(), val color: OptionalInt = OptionalInt.Missing, val footer: Optional<DiscordEmbed.Footer> = Optional.Missing(), val image: Optional<DiscordEmbed.Image> = Optional.Missing(), val thumbnail: Optional<DiscordEmbed.Thumbnail> = Optional.Missing(), val video: Optional<DiscordEmbed.Video> = Optional.Missing(), val provider: Optional<DiscordEmbed.Provider> = Optional.Missing(), val author: Optional<DiscordEmbed.Author> = Optional.Missing(), val fields: Optional<List<DiscordEmbed.Field>> = Optional.Missing())","dev.kord.common.entity.DiscordEmbed"]},{"name":"data class DiscordEmoji(val id: Snowflake?, val name: String?, val roles: Optional<List<Snowflake>> = Optional.Missing(), val user: Optional<DiscordUser> = Optional.Missing(), val requireColons: OptionalBoolean = OptionalBoolean.Missing, val managed: OptionalBoolean = OptionalBoolean.Missing, val animated: OptionalBoolean = OptionalBoolean.Missing, val available: OptionalBoolean = OptionalBoolean.Missing)","description":"dev.kord.common.entity.DiscordEmoji","location":"common/dev.kord.common.entity/-discord-emoji/index.html","searchKeys":["DiscordEmoji","data class DiscordEmoji(val id: Snowflake?, val name: String?, val roles: Optional<List<Snowflake>> = Optional.Missing(), val user: Optional<DiscordUser> = Optional.Missing(), val requireColons: OptionalBoolean = OptionalBoolean.Missing, val managed: OptionalBoolean = OptionalBoolean.Missing, val animated: OptionalBoolean = OptionalBoolean.Missing, val available: OptionalBoolean = OptionalBoolean.Missing)","dev.kord.common.entity.DiscordEmoji"]},{"name":"data class DiscordGuild(val id: Snowflake, val name: String, val icon: String?, val iconHash: Optional<String?> = Optional.Missing(), val splash: Optional<String?> = Optional.Missing(), val discoverySplash: Optional<String?> = Optional.Missing(), val owner: OptionalBoolean = OptionalBoolean.Missing, val ownerId: Snowflake, val permissions: Optional<Permissions> = Optional.Missing(), val region: String, val afkChannelId: Snowflake?, val afkTimeout: DurationInSeconds, val widgetEnabled: OptionalBoolean = OptionalBoolean.Missing, val widgetChannelId: OptionalSnowflake? = OptionalSnowflake.Missing, val verificationLevel: VerificationLevel, val defaultMessageNotifications: DefaultMessageNotificationLevel, val explicitContentFilter: ExplicitContentFilter, val roles: List<DiscordRole>, val emojis: List<DiscordEmoji>, val features: List<GuildFeature>, val mfaLevel: MFALevel, val applicationId: Snowflake?, val systemChannelId: Snowflake?, val systemChannelFlags: SystemChannelFlags, val rulesChannelId: Snowflake?, val joinedAt: Optional<Instant> = Optional.Missing(), val large: OptionalBoolean = OptionalBoolean.Missing, val unavailable: OptionalBoolean = OptionalBoolean.Missing, val memberCount: OptionalInt = OptionalInt.Missing, val voiceStates: Optional<List<DiscordVoiceState>> = Optional.Missing(), val members: Optional<List<DiscordGuildMember>> = Optional.Missing(), val channels: Optional<List<DiscordChannel>> = Optional.Missing(), val threads: Optional<List<DiscordChannel>> = Optional.Missing(), val presences: Optional<List<DiscordPresenceUpdate>> = Optional.Missing(), val maxPresences: OptionalInt? = OptionalInt.Missing, val maxMembers: OptionalInt = OptionalInt.Missing, val vanityUrlCode: String?, val description: String?, val banner: String?, val premiumTier: PremiumTier, val premiumSubscriptionCount: OptionalInt = OptionalInt.Missing, val preferredLocale: String, val publicUpdatesChannelId: Snowflake?, val maxVideoChannelUsers: OptionalInt = OptionalInt.Missing, val approximateMemberCount: OptionalInt = OptionalInt.Missing, val approximatePresenceCount: OptionalInt = OptionalInt.Missing, val welcomeScreen: Optional<DiscordWelcomeScreen> = Optional.Missing(), val nsfwLevel: NsfwLevel, val stageInstances: Optional<List<DiscordStageInstance>> = Optional.Missing(), val stickers: Optional<List<DiscordMessageSticker>> = Optional.Missing(), val guildScheduledEvents: Optional<List<DiscordGuildScheduledEvent>> = Optional.Missing(), val premiumProgressBarEnabled: Boolean)","description":"dev.kord.common.entity.DiscordGuild","location":"common/dev.kord.common.entity/-discord-guild/index.html","searchKeys":["DiscordGuild","data class DiscordGuild(val id: Snowflake, val name: String, val icon: String?, val iconHash: Optional<String?> = Optional.Missing(), val splash: Optional<String?> = Optional.Missing(), val discoverySplash: Optional<String?> = Optional.Missing(), val owner: OptionalBoolean = OptionalBoolean.Missing, val ownerId: Snowflake, val permissions: Optional<Permissions> = Optional.Missing(), val region: String, val afkChannelId: Snowflake?, val afkTimeout: DurationInSeconds, val widgetEnabled: OptionalBoolean = OptionalBoolean.Missing, val widgetChannelId: OptionalSnowflake? = OptionalSnowflake.Missing, val verificationLevel: VerificationLevel, val defaultMessageNotifications: DefaultMessageNotificationLevel, val explicitContentFilter: ExplicitContentFilter, val roles: List<DiscordRole>, val emojis: List<DiscordEmoji>, val features: List<GuildFeature>, val mfaLevel: MFALevel, val applicationId: Snowflake?, val systemChannelId: Snowflake?, val systemChannelFlags: SystemChannelFlags, val rulesChannelId: Snowflake?, val joinedAt: Optional<Instant> = Optional.Missing(), val large: OptionalBoolean = OptionalBoolean.Missing, val unavailable: OptionalBoolean = OptionalBoolean.Missing, val memberCount: OptionalInt = OptionalInt.Missing, val voiceStates: Optional<List<DiscordVoiceState>> = Optional.Missing(), val members: Optional<List<DiscordGuildMember>> = Optional.Missing(), val channels: Optional<List<DiscordChannel>> = Optional.Missing(), val threads: Optional<List<DiscordChannel>> = Optional.Missing(), val presences: Optional<List<DiscordPresenceUpdate>> = Optional.Missing(), val maxPresences: OptionalInt? = OptionalInt.Missing, val maxMembers: OptionalInt = OptionalInt.Missing, val vanityUrlCode: String?, val description: String?, val banner: String?, val premiumTier: PremiumTier, val premiumSubscriptionCount: OptionalInt = OptionalInt.Missing, val preferredLocale: String, val publicUpdatesChannelId: Snowflake?, val maxVideoChannelUsers: OptionalInt = OptionalInt.Missing, val approximateMemberCount: OptionalInt = OptionalInt.Missing, val approximatePresenceCount: OptionalInt = OptionalInt.Missing, val welcomeScreen: Optional<DiscordWelcomeScreen> = Optional.Missing(), val nsfwLevel: NsfwLevel, val stageInstances: Optional<List<DiscordStageInstance>> = Optional.Missing(), val stickers: Optional<List<DiscordMessageSticker>> = Optional.Missing(), val guildScheduledEvents: Optional<List<DiscordGuildScheduledEvent>> = Optional.Missing(), val premiumProgressBarEnabled: Boolean)","dev.kord.common.entity.DiscordGuild"]},{"name":"data class DiscordGuildApplicationCommandPermission(val id: Snowflake, val type: ApplicationCommandPermissionType, val permission: Boolean)","description":"dev.kord.common.entity.DiscordGuildApplicationCommandPermission","location":"common/dev.kord.common.entity/-discord-guild-application-command-permission/index.html","searchKeys":["DiscordGuildApplicationCommandPermission","data class DiscordGuildApplicationCommandPermission(val id: Snowflake, val type: ApplicationCommandPermissionType, val permission: Boolean)","dev.kord.common.entity.DiscordGuildApplicationCommandPermission"]},{"name":"data class DiscordGuildApplicationCommandPermissions(val id: Snowflake, val applicationId: Snowflake, val guildId: Snowflake, val permissions: List<DiscordGuildApplicationCommandPermission>)","description":"dev.kord.common.entity.DiscordGuildApplicationCommandPermissions","location":"common/dev.kord.common.entity/-discord-guild-application-command-permissions/index.html","searchKeys":["DiscordGuildApplicationCommandPermissions","data class DiscordGuildApplicationCommandPermissions(val id: Snowflake, val applicationId: Snowflake, val guildId: Snowflake, val permissions: List<DiscordGuildApplicationCommandPermission>)","dev.kord.common.entity.DiscordGuildApplicationCommandPermissions"]},{"name":"data class DiscordGuildBan(val guildId: Snowflake, val user: DiscordUser)","description":"dev.kord.common.entity.DiscordGuildBan","location":"common/dev.kord.common.entity/-discord-guild-ban/index.html","searchKeys":["DiscordGuildBan","data class DiscordGuildBan(val guildId: Snowflake, val user: DiscordUser)","dev.kord.common.entity.DiscordGuildBan"]},{"name":"data class DiscordGuildIntegrations(val guildId: Snowflake)","description":"dev.kord.common.entity.DiscordGuildIntegrations","location":"common/dev.kord.common.entity/-discord-guild-integrations/index.html","searchKeys":["DiscordGuildIntegrations","data class DiscordGuildIntegrations(val guildId: Snowflake)","dev.kord.common.entity.DiscordGuildIntegrations"]},{"name":"data class DiscordGuildMember(val user: Optional<DiscordUser> = Optional.Missing(), val nick: Optional<String?> = Optional.Missing(), val roles: List<Snowflake>, val joinedAt: Instant, val premiumSince: Optional<Instant?> = Optional.Missing(), val deaf: OptionalBoolean = OptionalBoolean.Missing, val mute: OptionalBoolean = OptionalBoolean.Missing, val pending: OptionalBoolean = OptionalBoolean.Missing, val avatar: Optional<String?> = Optional.Missing(), val communicationDisabledUntil: Optional<Instant?> = Optional.Missing())","description":"dev.kord.common.entity.DiscordGuildMember","location":"common/dev.kord.common.entity/-discord-guild-member/index.html","searchKeys":["DiscordGuildMember","data class DiscordGuildMember(val user: Optional<DiscordUser> = Optional.Missing(), val nick: Optional<String?> = Optional.Missing(), val roles: List<Snowflake>, val joinedAt: Instant, val premiumSince: Optional<Instant?> = Optional.Missing(), val deaf: OptionalBoolean = OptionalBoolean.Missing, val mute: OptionalBoolean = OptionalBoolean.Missing, val pending: OptionalBoolean = OptionalBoolean.Missing, val avatar: Optional<String?> = Optional.Missing(), val communicationDisabledUntil: Optional<Instant?> = Optional.Missing())","dev.kord.common.entity.DiscordGuildMember"]},{"name":"data class DiscordGuildPreview(val id: Snowflake, val name: String, val icon: String?, val splash: String?, val discoverySplash: String?, val emojis: List<DiscordEmoji>, val features: List<GuildFeature>, val approximateMemberCount: Int, val approximatePresenceCount: Int, val description: String?, val stickers: List<DiscordMessageSticker>)","description":"dev.kord.common.entity.DiscordGuildPreview","location":"common/dev.kord.common.entity/-discord-guild-preview/index.html","searchKeys":["DiscordGuildPreview","data class DiscordGuildPreview(val id: Snowflake, val name: String, val icon: String?, val splash: String?, val discoverySplash: String?, val emojis: List<DiscordEmoji>, val features: List<GuildFeature>, val approximateMemberCount: Int, val approximatePresenceCount: Int, val description: String?, val stickers: List<DiscordMessageSticker>)","dev.kord.common.entity.DiscordGuildPreview"]},{"name":"data class DiscordGuildRole(val guildId: Snowflake, val role: DiscordRole)","description":"dev.kord.common.entity.DiscordGuildRole","location":"common/dev.kord.common.entity/-discord-guild-role/index.html","searchKeys":["DiscordGuildRole","data class DiscordGuildRole(val guildId: Snowflake, val role: DiscordRole)","dev.kord.common.entity.DiscordGuildRole"]},{"name":"data class DiscordGuildScheduledEvent(val id: Snowflake, val guildId: Snowflake, val channelId: Snowflake?, val creatorId: OptionalSnowflake? = OptionalSnowflake.Missing, val name: String, val description: Optional<String?> = Optional.Missing(), val scheduledStartTime: Instant, val scheduledEndTime: Instant?, val privacyLevel: GuildScheduledEventPrivacyLevel, val status: GuildScheduledEventStatus, val entityType: ScheduledEntityType, val entityId: Snowflake?, val entityMetadata: GuildScheduledEventEntityMetadata?, val creator: Optional<DiscordUser> = Optional.Missing(), val userCount: OptionalInt = OptionalInt.Missing, val image: Optional<String?> = Optional.Missing())","description":"dev.kord.common.entity.DiscordGuildScheduledEvent","location":"common/dev.kord.common.entity/-discord-guild-scheduled-event/index.html","searchKeys":["DiscordGuildScheduledEvent","data class DiscordGuildScheduledEvent(val id: Snowflake, val guildId: Snowflake, val channelId: Snowflake?, val creatorId: OptionalSnowflake? = OptionalSnowflake.Missing, val name: String, val description: Optional<String?> = Optional.Missing(), val scheduledStartTime: Instant, val scheduledEndTime: Instant?, val privacyLevel: GuildScheduledEventPrivacyLevel, val status: GuildScheduledEventStatus, val entityType: ScheduledEntityType, val entityId: Snowflake?, val entityMetadata: GuildScheduledEventEntityMetadata?, val creator: Optional<DiscordUser> = Optional.Missing(), val userCount: OptionalInt = OptionalInt.Missing, val image: Optional<String?> = Optional.Missing())","dev.kord.common.entity.DiscordGuildScheduledEvent"]},{"name":"data class DiscordGuildWidget(val enabled: Boolean, val channelId: Snowflake?)","description":"dev.kord.common.entity.DiscordGuildWidget","location":"common/dev.kord.common.entity/-discord-guild-widget/index.html","searchKeys":["DiscordGuildWidget","data class DiscordGuildWidget(val enabled: Boolean, val channelId: Snowflake?)","dev.kord.common.entity.DiscordGuildWidget"]},{"name":"data class DiscordIntegration(val id: Snowflake, val name: String, val type: String, val enabled: Boolean, val syncing: Boolean, val roleId: Snowflake, val enableEmoticons: OptionalBoolean = OptionalBoolean.Missing, val expireBehavior: IntegrationExpireBehavior, val expireGracePeriod: DurationInDays, val user: DiscordUser, val account: DiscordIntegrationsAccount, val syncedAt: Instant, val subscriberCount: Int, val revoked: Boolean, val application: IntegrationApplication)","description":"dev.kord.common.entity.DiscordIntegration","location":"common/dev.kord.common.entity/-discord-integration/index.html","searchKeys":["DiscordIntegration","data class DiscordIntegration(val id: Snowflake, val name: String, val type: String, val enabled: Boolean, val syncing: Boolean, val roleId: Snowflake, val enableEmoticons: OptionalBoolean = OptionalBoolean.Missing, val expireBehavior: IntegrationExpireBehavior, val expireGracePeriod: DurationInDays, val user: DiscordUser, val account: DiscordIntegrationsAccount, val syncedAt: Instant, val subscriberCount: Int, val revoked: Boolean, val application: IntegrationApplication)","dev.kord.common.entity.DiscordIntegration"]},{"name":"data class DiscordIntegrationAccount(val id: String, val name: String)","description":"dev.kord.common.entity.DiscordIntegrationAccount","location":"common/dev.kord.common.entity/-discord-integration-account/index.html","searchKeys":["DiscordIntegrationAccount","data class DiscordIntegrationAccount(val id: String, val name: String)","dev.kord.common.entity.DiscordIntegrationAccount"]},{"name":"data class DiscordIntegrationsAccount(val id: String, val name: String)","description":"dev.kord.common.entity.DiscordIntegrationsAccount","location":"common/dev.kord.common.entity/-discord-integrations-account/index.html","searchKeys":["DiscordIntegrationsAccount","data class DiscordIntegrationsAccount(val id: String, val name: String)","dev.kord.common.entity.DiscordIntegrationsAccount"]},{"name":"data class DiscordInteraction(val id: Snowflake, val applicationId: Snowflake, val type: InteractionType, val data: InteractionCallbackData, val guildId: OptionalSnowflake = OptionalSnowflake.Missing, val channelId: Snowflake, val member: Optional<DiscordInteractionGuildMember> = Optional.Missing(), val user: Optional<DiscordUser> = Optional.Missing(), val token: String, val version: Int, val message: Optional<DiscordMessage> = Optional.Missing(), val appPermissions: Optional<Permissions> = Optional.Missing(), val locale: Optional<Locale> = Optional.Missing(), val guildLocale: Optional<Locale> = Optional.Missing())","description":"dev.kord.common.entity.DiscordInteraction","location":"common/dev.kord.common.entity/-discord-interaction/index.html","searchKeys":["DiscordInteraction","data class DiscordInteraction(val id: Snowflake, val applicationId: Snowflake, val type: InteractionType, val data: InteractionCallbackData, val guildId: OptionalSnowflake = OptionalSnowflake.Missing, val channelId: Snowflake, val member: Optional<DiscordInteractionGuildMember> = Optional.Missing(), val user: Optional<DiscordUser> = Optional.Missing(), val token: String, val version: Int, val message: Optional<DiscordMessage> = Optional.Missing(), val appPermissions: Optional<Permissions> = Optional.Missing(), val locale: Optional<Locale> = Optional.Missing(), val guildLocale: Optional<Locale> = Optional.Missing())","dev.kord.common.entity.DiscordInteraction"]},{"name":"data class DiscordInteractionGuildMember(val user: Optional<DiscordUser> = Optional.Missing(), val nick: Optional<String?> = Optional.Missing(), val roles: List<Snowflake>, val joinedAt: Instant, val premiumSince: Optional<Instant?> = Optional.Missing(), val permissions: Permissions, val pending: OptionalBoolean = OptionalBoolean.Missing, val avatar: Optional<String?> = Optional.Missing(), val communicationDisabledUntil: Optional<Instant?> = Optional.Missing())","description":"dev.kord.common.entity.DiscordInteractionGuildMember","location":"common/dev.kord.common.entity/-discord-interaction-guild-member/index.html","searchKeys":["DiscordInteractionGuildMember","data class DiscordInteractionGuildMember(val user: Optional<DiscordUser> = Optional.Missing(), val nick: Optional<String?> = Optional.Missing(), val roles: List<Snowflake>, val joinedAt: Instant, val premiumSince: Optional<Instant?> = Optional.Missing(), val permissions: Permissions, val pending: OptionalBoolean = OptionalBoolean.Missing, val avatar: Optional<String?> = Optional.Missing(), val communicationDisabledUntil: Optional<Instant?> = Optional.Missing())","dev.kord.common.entity.DiscordInteractionGuildMember"]},{"name":"data class DiscordInvite(val code: String, val guild: Optional<DiscordPartialGuild> = Optional.Missing(), val channel: DiscordChannel?, val inviter: Optional<DiscordUser> = Optional.Missing(), val targetType: Optional<InviteTargetType> = Optional.Missing(), val targetUser: Optional<DiscordUser> = Optional.Missing(), val targetApplication: Optional<DiscordPartialApplication> = Optional.Missing(), targetUserType: Optional<TargetUserType> = Optional.Missing(), val approximatePresenceCount: OptionalInt = OptionalInt.Missing, val approximateMemberCount: OptionalInt = OptionalInt.Missing, val expiresAt: Optional<Instant?> = Optional.Missing(), val stageInstance: Optional<DiscordStageInstance> = Optional.Missing(), val guildScheduledEvent: Optional<DiscordGuildScheduledEvent> = Optional.Missing()) : BaseDiscordInvite","description":"dev.kord.common.entity.DiscordInvite","location":"common/dev.kord.common.entity/-discord-invite/index.html","searchKeys":["DiscordInvite","data class DiscordInvite(val code: String, val guild: Optional<DiscordPartialGuild> = Optional.Missing(), val channel: DiscordChannel?, val inviter: Optional<DiscordUser> = Optional.Missing(), val targetType: Optional<InviteTargetType> = Optional.Missing(), val targetUser: Optional<DiscordUser> = Optional.Missing(), val targetApplication: Optional<DiscordPartialApplication> = Optional.Missing(), targetUserType: Optional<TargetUserType> = Optional.Missing(), val approximatePresenceCount: OptionalInt = OptionalInt.Missing, val approximateMemberCount: OptionalInt = OptionalInt.Missing, val expiresAt: Optional<Instant?> = Optional.Missing(), val stageInstance: Optional<DiscordStageInstance> = Optional.Missing(), val guildScheduledEvent: Optional<DiscordGuildScheduledEvent> = Optional.Missing()) : BaseDiscordInvite","dev.kord.common.entity.DiscordInvite"]},{"name":"data class DiscordInviteWithMetadata(val code: String, val guild: Optional<DiscordPartialGuild> = Optional.Missing(), val channel: DiscordChannel?, val inviter: Optional<DiscordUser> = Optional.Missing(), val targetType: Optional<InviteTargetType> = Optional.Missing(), val targetUser: Optional<DiscordUser> = Optional.Missing(), val targetApplication: Optional<DiscordPartialApplication> = Optional.Missing(), val approximatePresenceCount: OptionalInt = OptionalInt.Missing, val approximateMemberCount: OptionalInt = OptionalInt.Missing, val expiresAt: Optional<Instant?> = Optional.Missing(), val guildScheduledEvent: Optional<DiscordGuildScheduledEvent> = Optional.Missing(), val uses: Int, val maxUses: Int, val maxAge: DurationInSeconds, val temporary: Boolean, val createdAt: Instant) : BaseDiscordInvite","description":"dev.kord.common.entity.DiscordInviteWithMetadata","location":"common/dev.kord.common.entity/-discord-invite-with-metadata/index.html","searchKeys":["DiscordInviteWithMetadata","data class DiscordInviteWithMetadata(val code: String, val guild: Optional<DiscordPartialGuild> = Optional.Missing(), val channel: DiscordChannel?, val inviter: Optional<DiscordUser> = Optional.Missing(), val targetType: Optional<InviteTargetType> = Optional.Missing(), val targetUser: Optional<DiscordUser> = Optional.Missing(), val targetApplication: Optional<DiscordPartialApplication> = Optional.Missing(), val approximatePresenceCount: OptionalInt = OptionalInt.Missing, val approximateMemberCount: OptionalInt = OptionalInt.Missing, val expiresAt: Optional<Instant?> = Optional.Missing(), val guildScheduledEvent: Optional<DiscordGuildScheduledEvent> = Optional.Missing(), val uses: Int, val maxUses: Int, val maxAge: DurationInSeconds, val temporary: Boolean, val createdAt: Instant) : BaseDiscordInvite","dev.kord.common.entity.DiscordInviteWithMetadata"]},{"name":"data class DiscordMentionedChannel(val id: Snowflake, val guildId: Snowflake, val type: ChannelType, val name: String)","description":"dev.kord.common.entity.DiscordMentionedChannel","location":"common/dev.kord.common.entity/-discord-mentioned-channel/index.html","searchKeys":["DiscordMentionedChannel","data class DiscordMentionedChannel(val id: Snowflake, val guildId: Snowflake, val type: ChannelType, val name: String)","dev.kord.common.entity.DiscordMentionedChannel"]},{"name":"data class DiscordMessage(val id: Snowflake, val channelId: Snowflake, val guildId: OptionalSnowflake = OptionalSnowflake.Missing, val author: DiscordUser, val member: Optional<DiscordGuildMember> = Optional.Missing(), val content: String, val timestamp: Instant, val editedTimestamp: Instant?, val tts: Boolean, val mentionEveryone: Boolean, val mentions: List<DiscordOptionallyMemberUser>, val mentionRoles: List<Snowflake>, val mentionedChannels: Optional<List<DiscordMentionedChannel>> = Optional.Missing(), val attachments: List<DiscordAttachment>, val embeds: List<DiscordEmbed>, val reactions: Optional<List<Reaction>> = Optional.Missing(), val nonce: Optional<String> = Optional.Missing(), val pinned: Boolean, val webhookId: OptionalSnowflake = OptionalSnowflake.Missing, val type: MessageType, val activity: Optional<MessageActivity> = Optional.Missing(), val application: Optional<MessageApplication> = Optional.Missing(), val applicationId: OptionalSnowflake = OptionalSnowflake.Missing, val messageReference: Optional<DiscordMessageReference> = Optional.Missing(), val flags: Optional<MessageFlags> = Optional.Missing(), val stickers: Optional<List<DiscordStickerItem>> = Optional.Missing(), val referencedMessage: Optional<DiscordMessage?> = Optional.Missing(), val components: Optional<List<DiscordComponent>> = Optional.Missing(), val interaction: Optional<DiscordMessageInteraction> = Optional.Missing(), val thread: Optional<DiscordChannel> = Optional.Missing())","description":"dev.kord.common.entity.DiscordMessage","location":"common/dev.kord.common.entity/-discord-message/index.html","searchKeys":["DiscordMessage","data class DiscordMessage(val id: Snowflake, val channelId: Snowflake, val guildId: OptionalSnowflake = OptionalSnowflake.Missing, val author: DiscordUser, val member: Optional<DiscordGuildMember> = Optional.Missing(), val content: String, val timestamp: Instant, val editedTimestamp: Instant?, val tts: Boolean, val mentionEveryone: Boolean, val mentions: List<DiscordOptionallyMemberUser>, val mentionRoles: List<Snowflake>, val mentionedChannels: Optional<List<DiscordMentionedChannel>> = Optional.Missing(), val attachments: List<DiscordAttachment>, val embeds: List<DiscordEmbed>, val reactions: Optional<List<Reaction>> = Optional.Missing(), val nonce: Optional<String> = Optional.Missing(), val pinned: Boolean, val webhookId: OptionalSnowflake = OptionalSnowflake.Missing, val type: MessageType, val activity: Optional<MessageActivity> = Optional.Missing(), val application: Optional<MessageApplication> = Optional.Missing(), val applicationId: OptionalSnowflake = OptionalSnowflake.Missing, val messageReference: Optional<DiscordMessageReference> = Optional.Missing(), val flags: Optional<MessageFlags> = Optional.Missing(), val stickers: Optional<List<DiscordStickerItem>> = Optional.Missing(), val referencedMessage: Optional<DiscordMessage?> = Optional.Missing(), val components: Optional<List<DiscordComponent>> = Optional.Missing(), val interaction: Optional<DiscordMessageInteraction> = Optional.Missing(), val thread: Optional<DiscordChannel> = Optional.Missing())","dev.kord.common.entity.DiscordMessage"]},{"name":"data class DiscordMessageInteraction(val id: Snowflake, val type: InteractionType, val name: String, val user: DiscordUser)","description":"dev.kord.common.entity.DiscordMessageInteraction","location":"common/dev.kord.common.entity/-discord-message-interaction/index.html","searchKeys":["DiscordMessageInteraction","data class DiscordMessageInteraction(val id: Snowflake, val type: InteractionType, val name: String, val user: DiscordUser)","dev.kord.common.entity.DiscordMessageInteraction"]},{"name":"data class DiscordMessageReference(val id: OptionalSnowflake = OptionalSnowflake.Missing, val channelId: OptionalSnowflake = OptionalSnowflake.Missing, val guildId: OptionalSnowflake = OptionalSnowflake.Missing, val failIfNotExists: OptionalBoolean = OptionalBoolean.Missing)","description":"dev.kord.common.entity.DiscordMessageReference","location":"common/dev.kord.common.entity/-discord-message-reference/index.html","searchKeys":["DiscordMessageReference","data class DiscordMessageReference(val id: OptionalSnowflake = OptionalSnowflake.Missing, val channelId: OptionalSnowflake = OptionalSnowflake.Missing, val guildId: OptionalSnowflake = OptionalSnowflake.Missing, val failIfNotExists: OptionalBoolean = OptionalBoolean.Missing)","dev.kord.common.entity.DiscordMessageReference"]},{"name":"data class DiscordMessageSticker(val id: Snowflake, val packId: OptionalSnowflake = OptionalSnowflake.Missing, val name: String, val description: String?, val tags: Optional<String> = Optional.Missing(), val formatType: MessageStickerType, val available: OptionalBoolean = OptionalBoolean.Missing, val guildId: OptionalSnowflake = OptionalSnowflake.Missing, val user: Optional<DiscordUser> = Optional.Missing(), val sortValue: OptionalInt = OptionalInt.Missing)","description":"dev.kord.common.entity.DiscordMessageSticker","location":"common/dev.kord.common.entity/-discord-message-sticker/index.html","searchKeys":["DiscordMessageSticker","data class DiscordMessageSticker(val id: Snowflake, val packId: OptionalSnowflake = OptionalSnowflake.Missing, val name: String, val description: String?, val tags: Optional<String> = Optional.Missing(), val formatType: MessageStickerType, val available: OptionalBoolean = OptionalBoolean.Missing, val guildId: OptionalSnowflake = OptionalSnowflake.Missing, val user: Optional<DiscordUser> = Optional.Missing(), val sortValue: OptionalInt = OptionalInt.Missing)","dev.kord.common.entity.DiscordMessageSticker"]},{"name":"data class DiscordModal(val title: String, val customId: String, val components: List<DiscordComponent>)","description":"dev.kord.common.entity.DiscordModal","location":"common/dev.kord.common.entity/-discord-modal/index.html","searchKeys":["DiscordModal","data class DiscordModal(val title: String, val customId: String, val components: List<DiscordComponent>)","dev.kord.common.entity.DiscordModal"]},{"name":"data class DiscordOptionallyMemberUser(val id: Snowflake, val username: String, val discriminator: String, val avatar: String?, val bot: OptionalBoolean = OptionalBoolean.Missing, val system: OptionalBoolean = OptionalBoolean.Missing, val mfaEnabled: OptionalBoolean = OptionalBoolean.Missing, val locale: Optional<String> = Optional.Missing(), val verified: OptionalBoolean = OptionalBoolean.Missing, val email: Optional<String?> = Optional.Missing(), val flags: Optional<UserFlags> = Optional.Missing(), val premiumType: Optional<UserPremium> = Optional.Missing(), val publicFlags: Optional<UserFlags> = Optional.Missing(), val member: Optional<DiscordGuildMember> = Optional.Missing())","description":"dev.kord.common.entity.DiscordOptionallyMemberUser","location":"common/dev.kord.common.entity/-discord-optionally-member-user/index.html","searchKeys":["DiscordOptionallyMemberUser","data class DiscordOptionallyMemberUser(val id: Snowflake, val username: String, val discriminator: String, val avatar: String?, val bot: OptionalBoolean = OptionalBoolean.Missing, val system: OptionalBoolean = OptionalBoolean.Missing, val mfaEnabled: OptionalBoolean = OptionalBoolean.Missing, val locale: Optional<String> = Optional.Missing(), val verified: OptionalBoolean = OptionalBoolean.Missing, val email: Optional<String?> = Optional.Missing(), val flags: Optional<UserFlags> = Optional.Missing(), val premiumType: Optional<UserPremium> = Optional.Missing(), val publicFlags: Optional<UserFlags> = Optional.Missing(), val member: Optional<DiscordGuildMember> = Optional.Missing())","dev.kord.common.entity.DiscordOptionallyMemberUser"]},{"name":"data class DiscordPartialApplication(val id: Snowflake, val name: String, val icon: String?, val description: String, val rpcOrigins: Optional<List<String>> = Optional.Missing(), val termsOfServiceUrl: Optional<String> = Optional.Missing(), val privacyPolicyUrl: Optional<String> = Optional.Missing(), val owner: Optional<DiscordUser> = Optional.Missing(), val verifyKey: String, val guildId: OptionalSnowflake = OptionalSnowflake.Missing, val primarySkuId: OptionalSnowflake = OptionalSnowflake.Missing, val slug: Optional<String> = Optional.Missing(), val coverImage: Optional<String> = Optional.Missing(), val flags: Optional<ApplicationFlags> = Optional.Missing(), val tags: Optional<List<String>> = Optional.Missing(), val installParams: Optional<InstallParams> = Optional.Missing(), val customInstallUrl: Optional<String> = Optional.Missing()) : BaseDiscordApplication","description":"dev.kord.common.entity.DiscordPartialApplication","location":"common/dev.kord.common.entity/-discord-partial-application/index.html","searchKeys":["DiscordPartialApplication","data class DiscordPartialApplication(val id: Snowflake, val name: String, val icon: String?, val description: String, val rpcOrigins: Optional<List<String>> = Optional.Missing(), val termsOfServiceUrl: Optional<String> = Optional.Missing(), val privacyPolicyUrl: Optional<String> = Optional.Missing(), val owner: Optional<DiscordUser> = Optional.Missing(), val verifyKey: String, val guildId: OptionalSnowflake = OptionalSnowflake.Missing, val primarySkuId: OptionalSnowflake = OptionalSnowflake.Missing, val slug: Optional<String> = Optional.Missing(), val coverImage: Optional<String> = Optional.Missing(), val flags: Optional<ApplicationFlags> = Optional.Missing(), val tags: Optional<List<String>> = Optional.Missing(), val installParams: Optional<InstallParams> = Optional.Missing(), val customInstallUrl: Optional<String> = Optional.Missing()) : BaseDiscordApplication","dev.kord.common.entity.DiscordPartialApplication"]},{"name":"data class DiscordPartialEmoji(val id: Snowflake? = null, val name: String? = null, val animated: OptionalBoolean = OptionalBoolean.Missing)","description":"dev.kord.common.entity.DiscordPartialEmoji","location":"common/dev.kord.common.entity/-discord-partial-emoji/index.html","searchKeys":["DiscordPartialEmoji","data class DiscordPartialEmoji(val id: Snowflake? = null, val name: String? = null, val animated: OptionalBoolean = OptionalBoolean.Missing)","dev.kord.common.entity.DiscordPartialEmoji"]},{"name":"data class DiscordPartialGuild(val id: Snowflake, val name: String, val icon: String?, val owner: OptionalBoolean = OptionalBoolean.Missing, val permissions: Optional<Permissions> = Optional.Missing(), val features: List<GuildFeature>, val welcomeScreen: Optional<DiscordWelcomeScreen> = Optional.Missing(), val vanityUrlCode: Optional<String?> = Optional.Missing(), val description: Optional<String?> = Optional.Missing(), val banner: Optional<String?> = Optional.Missing(), val splash: Optional<String?> = Optional.Missing(), val nsfwLevel: Optional<NsfwLevel> = Optional.Missing(), val verificationLevel: Optional<VerificationLevel> = Optional.Missing(), val stageInstances: Optional<List<DiscordStageInstance>> = Optional.Missing(), val stickers: Optional<List<DiscordMessageSticker>> = Optional.Missing(), val guildScheduledEvents: Optional<List<DiscordGuildScheduledEvent>> = Optional.Missing(), val premiumProgressBarEnabled: OptionalBoolean = OptionalBoolean.Missing)","description":"dev.kord.common.entity.DiscordPartialGuild","location":"common/dev.kord.common.entity/-discord-partial-guild/index.html","searchKeys":["DiscordPartialGuild","data class DiscordPartialGuild(val id: Snowflake, val name: String, val icon: String?, val owner: OptionalBoolean = OptionalBoolean.Missing, val permissions: Optional<Permissions> = Optional.Missing(), val features: List<GuildFeature>, val welcomeScreen: Optional<DiscordWelcomeScreen> = Optional.Missing(), val vanityUrlCode: Optional<String?> = Optional.Missing(), val description: Optional<String?> = Optional.Missing(), val banner: Optional<String?> = Optional.Missing(), val splash: Optional<String?> = Optional.Missing(), val nsfwLevel: Optional<NsfwLevel> = Optional.Missing(), val verificationLevel: Optional<VerificationLevel> = Optional.Missing(), val stageInstances: Optional<List<DiscordStageInstance>> = Optional.Missing(), val stickers: Optional<List<DiscordMessageSticker>> = Optional.Missing(), val guildScheduledEvents: Optional<List<DiscordGuildScheduledEvent>> = Optional.Missing(), val premiumProgressBarEnabled: OptionalBoolean = OptionalBoolean.Missing)","dev.kord.common.entity.DiscordPartialGuild"]},{"name":"data class DiscordPartialIntegration(val id: Snowflake, val name: String, val type: String, val account: DiscordIntegrationsAccount)","description":"dev.kord.common.entity.DiscordPartialIntegration","location":"common/dev.kord.common.entity/-discord-partial-integration/index.html","searchKeys":["DiscordPartialIntegration","data class DiscordPartialIntegration(val id: Snowflake, val name: String, val type: String, val account: DiscordIntegrationsAccount)","dev.kord.common.entity.DiscordPartialIntegration"]},{"name":"data class DiscordPartialInvite(val code: String?, val uses: Int)","description":"dev.kord.common.entity.DiscordPartialInvite","location":"common/dev.kord.common.entity/-discord-partial-invite/index.html","searchKeys":["DiscordPartialInvite","data class DiscordPartialInvite(val code: String?, val uses: Int)","dev.kord.common.entity.DiscordPartialInvite"]},{"name":"data class DiscordPartialMessage(val id: Snowflake, val channelId: Snowflake, val guildId: OptionalSnowflake = OptionalSnowflake.Missing, val author: Optional<DiscordUser> = Optional.Missing(), val member: Optional<DiscordGuildMember> = Optional.Missing(), val content: Optional<String> = Optional.Missing(), val timestamp: Optional<Instant> = Optional.Missing(), val editedTimestamp: Optional<Instant?> = Optional.Missing(), val tts: OptionalBoolean = OptionalBoolean.Missing, val mentionEveryone: OptionalBoolean = OptionalBoolean.Missing, val mentions: Optional<List<DiscordOptionallyMemberUser>> = Optional.Missing(), val mentionRoles: Optional<List<Snowflake>> = Optional.Missing(), val mentionedChannels: Optional<List<DiscordMentionedChannel>> = Optional.Missing(), val attachments: Optional<List<DiscordAttachment>> = Optional.Missing(), val embeds: Optional<List<DiscordEmbed>> = Optional.Missing(), val reactions: Optional<List<Reaction>> = Optional.Missing(), val nonce: Optional<String> = Optional.Missing(), val pinned: OptionalBoolean = OptionalBoolean.Missing, val webhookId: OptionalSnowflake = OptionalSnowflake.Missing, val type: Optional<MessageType> = Optional.Missing(), val activity: Optional<MessageActivity> = Optional.Missing(), val application: Optional<MessageApplication> = Optional.Missing(), val messageReference: Optional<DiscordMessageReference> = Optional.Missing(), val flags: Optional<MessageFlags> = Optional.Missing(), val stickers: Optional<List<DiscordStickerItem>> = Optional.Missing(), val referencedMessage: Optional<DiscordMessage?> = Optional.Missing(), val interaction: Optional<DiscordMessageInteraction> = Optional.Missing())","description":"dev.kord.common.entity.DiscordPartialMessage","location":"common/dev.kord.common.entity/-discord-partial-message/index.html","searchKeys":["DiscordPartialMessage","data class DiscordPartialMessage(val id: Snowflake, val channelId: Snowflake, val guildId: OptionalSnowflake = OptionalSnowflake.Missing, val author: Optional<DiscordUser> = Optional.Missing(), val member: Optional<DiscordGuildMember> = Optional.Missing(), val content: Optional<String> = Optional.Missing(), val timestamp: Optional<Instant> = Optional.Missing(), val editedTimestamp: Optional<Instant?> = Optional.Missing(), val tts: OptionalBoolean = OptionalBoolean.Missing, val mentionEveryone: OptionalBoolean = OptionalBoolean.Missing, val mentions: Optional<List<DiscordOptionallyMemberUser>> = Optional.Missing(), val mentionRoles: Optional<List<Snowflake>> = Optional.Missing(), val mentionedChannels: Optional<List<DiscordMentionedChannel>> = Optional.Missing(), val attachments: Optional<List<DiscordAttachment>> = Optional.Missing(), val embeds: Optional<List<DiscordEmbed>> = Optional.Missing(), val reactions: Optional<List<Reaction>> = Optional.Missing(), val nonce: Optional<String> = Optional.Missing(), val pinned: OptionalBoolean = OptionalBoolean.Missing, val webhookId: OptionalSnowflake = OptionalSnowflake.Missing, val type: Optional<MessageType> = Optional.Missing(), val activity: Optional<MessageActivity> = Optional.Missing(), val application: Optional<MessageApplication> = Optional.Missing(), val messageReference: Optional<DiscordMessageReference> = Optional.Missing(), val flags: Optional<MessageFlags> = Optional.Missing(), val stickers: Optional<List<DiscordStickerItem>> = Optional.Missing(), val referencedMessage: Optional<DiscordMessage?> = Optional.Missing(), val interaction: Optional<DiscordMessageInteraction> = Optional.Missing())","dev.kord.common.entity.DiscordPartialMessage"]},{"name":"data class DiscordPartialRole(val id: Snowflake, val name: Optional<String> = Optional.Missing(), val color: OptionalInt = OptionalInt.Missing, val hoist: OptionalBoolean = OptionalBoolean.Missing, val icon: Optional<String?> = Optional.Missing(), val unicodeEmoji: Optional<String?> = Optional.Missing(), val position: OptionalInt = OptionalInt.Missing, val permissions: Optional<Permissions> = Optional.Missing(), val managed: OptionalBoolean = OptionalBoolean.Missing, val mentionable: OptionalBoolean = OptionalBoolean.Missing, val tags: Optional<DiscordRoleTags> = Optional.Missing())","description":"dev.kord.common.entity.DiscordPartialRole","location":"common/dev.kord.common.entity/-discord-partial-role/index.html","searchKeys":["DiscordPartialRole","data class DiscordPartialRole(val id: Snowflake, val name: Optional<String> = Optional.Missing(), val color: OptionalInt = OptionalInt.Missing, val hoist: OptionalBoolean = OptionalBoolean.Missing, val icon: Optional<String?> = Optional.Missing(), val unicodeEmoji: Optional<String?> = Optional.Missing(), val position: OptionalInt = OptionalInt.Missing, val permissions: Optional<Permissions> = Optional.Missing(), val managed: OptionalBoolean = OptionalBoolean.Missing, val mentionable: OptionalBoolean = OptionalBoolean.Missing, val tags: Optional<DiscordRoleTags> = Optional.Missing())","dev.kord.common.entity.DiscordPartialRole"]},{"name":"data class DiscordPinsUpdateData(val guildId: OptionalSnowflake = OptionalSnowflake.Missing, val channelId: Snowflake, val lastPinTimestamp: Optional<Instant?> = Optional.Missing())","description":"dev.kord.common.entity.DiscordPinsUpdateData","location":"common/dev.kord.common.entity/-discord-pins-update-data/index.html","searchKeys":["DiscordPinsUpdateData","data class DiscordPinsUpdateData(val guildId: OptionalSnowflake = OptionalSnowflake.Missing, val channelId: Snowflake, val lastPinTimestamp: Optional<Instant?> = Optional.Missing())","dev.kord.common.entity.DiscordPinsUpdateData"]},{"name":"data class DiscordPresenceUpdate(val user: DiscordPresenceUser, val guildId: OptionalSnowflake = OptionalSnowflake.Missing, val status: PresenceStatus, val activities: List<DiscordActivity>, val clientStatus: DiscordClientStatus)","description":"dev.kord.common.entity.DiscordPresenceUpdate","location":"common/dev.kord.common.entity/-discord-presence-update/index.html","searchKeys":["DiscordPresenceUpdate","data class DiscordPresenceUpdate(val user: DiscordPresenceUser, val guildId: OptionalSnowflake = OptionalSnowflake.Missing, val status: PresenceStatus, val activities: List<DiscordActivity>, val clientStatus: DiscordClientStatus)","dev.kord.common.entity.DiscordPresenceUpdate"]},{"name":"data class DiscordPresenceUser(val id: Snowflake, val details: JsonObject)","description":"dev.kord.common.entity.DiscordPresenceUser","location":"common/dev.kord.common.entity/-discord-presence-user/index.html","searchKeys":["DiscordPresenceUser","data class DiscordPresenceUser(val id: Snowflake, val details: JsonObject)","dev.kord.common.entity.DiscordPresenceUser"]},{"name":"data class DiscordRemovedGuildMember(val guildId: Snowflake, val user: DiscordUser)","description":"dev.kord.common.entity.DiscordRemovedGuildMember","location":"common/dev.kord.common.entity/-discord-removed-guild-member/index.html","searchKeys":["DiscordRemovedGuildMember","data class DiscordRemovedGuildMember(val guildId: Snowflake, val user: DiscordUser)","dev.kord.common.entity.DiscordRemovedGuildMember"]},{"name":"data class DiscordRole(val id: Snowflake, val name: String, val color: Int, val hoist: Boolean, val icon: Optional<String?> = Optional.Missing(), val unicodeEmoji: Optional<String?> = Optional.Missing(), val position: Int, val permissions: Permissions, val managed: Boolean, val mentionable: Boolean, val tags: Optional<DiscordRoleTags> = Optional.Missing())","description":"dev.kord.common.entity.DiscordRole","location":"common/dev.kord.common.entity/-discord-role/index.html","searchKeys":["DiscordRole","data class DiscordRole(val id: Snowflake, val name: String, val color: Int, val hoist: Boolean, val icon: Optional<String?> = Optional.Missing(), val unicodeEmoji: Optional<String?> = Optional.Missing(), val position: Int, val permissions: Permissions, val managed: Boolean, val mentionable: Boolean, val tags: Optional<DiscordRoleTags> = Optional.Missing())","dev.kord.common.entity.DiscordRole"]},{"name":"data class DiscordRoleTags(val botId: OptionalSnowflake = OptionalSnowflake.Missing, val integrationId: OptionalSnowflake = OptionalSnowflake.Missing, val premiumSubscriber: Optional<DiscordNull?> = Optional.Missing())","description":"dev.kord.common.entity.DiscordRoleTags","location":"common/dev.kord.common.entity/-discord-role-tags/index.html","searchKeys":["DiscordRoleTags","data class DiscordRoleTags(val botId: OptionalSnowflake = OptionalSnowflake.Missing, val integrationId: OptionalSnowflake = OptionalSnowflake.Missing, val premiumSubscriber: Optional<DiscordNull?> = Optional.Missing())","dev.kord.common.entity.DiscordRoleTags"]},{"name":"data class DiscordSelectOption(val label: String, val value: String, val description: Optional<String> = Optional.Missing(), val emoji: Optional<DiscordPartialEmoji> = Optional.Missing(), val default: OptionalBoolean = OptionalBoolean.Missing)","description":"dev.kord.common.entity.DiscordSelectOption","location":"common/dev.kord.common.entity/-discord-select-option/index.html","searchKeys":["DiscordSelectOption","data class DiscordSelectOption(val label: String, val value: String, val description: Optional<String> = Optional.Missing(), val emoji: Optional<DiscordPartialEmoji> = Optional.Missing(), val default: OptionalBoolean = OptionalBoolean.Missing)","dev.kord.common.entity.DiscordSelectOption"]},{"name":"data class DiscordShard(val index: Int, val count: Int)","description":"dev.kord.common.entity.DiscordShard","location":"common/dev.kord.common.entity/-discord-shard/index.html","searchKeys":["DiscordShard","data class DiscordShard(val index: Int, val count: Int)","dev.kord.common.entity.DiscordShard"]},{"name":"data class DiscordStageInstance(val id: Snowflake, val guildId: Snowflake, val channelId: Snowflake, val topic: String, val privacyLevel: StageInstancePrivacyLevel, val discoverableDisabled: Boolean, val guildScheduledEventId: Snowflake?)","description":"dev.kord.common.entity.DiscordStageInstance","location":"common/dev.kord.common.entity/-discord-stage-instance/index.html","searchKeys":["DiscordStageInstance","data class DiscordStageInstance(val id: Snowflake, val guildId: Snowflake, val channelId: Snowflake, val topic: String, val privacyLevel: StageInstancePrivacyLevel, val discoverableDisabled: Boolean, val guildScheduledEventId: Snowflake?)","dev.kord.common.entity.DiscordStageInstance"]},{"name":"data class DiscordStickerItem(val id: Snowflake, val name: String, val formatType: MessageStickerType)","description":"dev.kord.common.entity.DiscordStickerItem","location":"common/dev.kord.common.entity/-discord-sticker-item/index.html","searchKeys":["DiscordStickerItem","data class DiscordStickerItem(val id: Snowflake, val name: String, val formatType: MessageStickerType)","dev.kord.common.entity.DiscordStickerItem"]},{"name":"data class DiscordStickerPack(val id: Snowflake, val stickers: List<DiscordMessageSticker>, val name: String, val skuId: Snowflake, val coverStickerId: OptionalSnowflake = OptionalSnowflake.Missing, val description: String, val bannerAssetId: Snowflake)","description":"dev.kord.common.entity.DiscordStickerPack","location":"common/dev.kord.common.entity/-discord-sticker-pack/index.html","searchKeys":["DiscordStickerPack","data class DiscordStickerPack(val id: Snowflake, val stickers: List<DiscordMessageSticker>, val name: String, val skuId: Snowflake, val coverStickerId: OptionalSnowflake = OptionalSnowflake.Missing, val description: String, val bannerAssetId: Snowflake)","dev.kord.common.entity.DiscordStickerPack"]},{"name":"data class DiscordTeam(val icon: String?, val id: Snowflake, val members: List<DiscordTeamMember>, val ownerUserId: Snowflake)","description":"dev.kord.common.entity.DiscordTeam","location":"common/dev.kord.common.entity/-discord-team/index.html","searchKeys":["DiscordTeam","data class DiscordTeam(val icon: String?, val id: Snowflake, val members: List<DiscordTeamMember>, val ownerUserId: Snowflake)","dev.kord.common.entity.DiscordTeam"]},{"name":"data class DiscordTeamMember(val membershipState: TeamMembershipState, val permissions: List<String>, val teamId: Snowflake, val user: DiscordUser)","description":"dev.kord.common.entity.DiscordTeamMember","location":"common/dev.kord.common.entity/-discord-team-member/index.html","searchKeys":["DiscordTeamMember","data class DiscordTeamMember(val membershipState: TeamMembershipState, val permissions: List<String>, val teamId: Snowflake, val user: DiscordUser)","dev.kord.common.entity.DiscordTeamMember"]},{"name":"data class DiscordTemplate(val code: String, val name: String, val description: String?, val usageCount: Int, val creatorId: Snowflake, val creator: DiscordUser, val createdAt: Instant, val updatedAt: Instant, val sourceGuildId: Snowflake, val serializedSourceGuild: DiscordPartialGuild, val isDirty: Boolean?)","description":"dev.kord.common.entity.DiscordTemplate","location":"common/dev.kord.common.entity/-discord-template/index.html","searchKeys":["DiscordTemplate","data class DiscordTemplate(val code: String, val name: String, val description: String?, val usageCount: Int, val creatorId: Snowflake, val creator: DiscordUser, val createdAt: Instant, val updatedAt: Instant, val sourceGuildId: Snowflake, val serializedSourceGuild: DiscordPartialGuild, val isDirty: Boolean?)","dev.kord.common.entity.DiscordTemplate"]},{"name":"data class DiscordTextInputComponent(val type: ComponentType, val style: Optional<TextInputStyle> = Optional.Missing(), val label: Optional<String> = Optional.Missing(), val emoji: Optional<DiscordPartialEmoji> = Optional.Missing(), val customId: Optional<String> = Optional.Missing(), val url: Optional<String> = Optional.Missing(), val disabled: OptionalBoolean = OptionalBoolean.Missing, val components: Optional<List<DiscordComponent>> = Optional.Missing(), val options: Optional<List<DiscordSelectOption>> = Optional.Missing(), val placeholder: Optional<String> = Optional.Missing(), val minValues: OptionalInt = OptionalInt.Missing, val maxValues: OptionalInt = OptionalInt.Missing, val minLength: OptionalInt = OptionalInt.Missing, val maxLength: OptionalInt = OptionalInt.Missing, val required: OptionalBoolean = OptionalBoolean.Missing, val value: Optional<String> = Optional.Missing()) : DiscordComponent","description":"dev.kord.common.entity.DiscordTextInputComponent","location":"common/dev.kord.common.entity/-discord-text-input-component/index.html","searchKeys":["DiscordTextInputComponent","data class DiscordTextInputComponent(val type: ComponentType, val style: Optional<TextInputStyle> = Optional.Missing(), val label: Optional<String> = Optional.Missing(), val emoji: Optional<DiscordPartialEmoji> = Optional.Missing(), val customId: Optional<String> = Optional.Missing(), val url: Optional<String> = Optional.Missing(), val disabled: OptionalBoolean = OptionalBoolean.Missing, val components: Optional<List<DiscordComponent>> = Optional.Missing(), val options: Optional<List<DiscordSelectOption>> = Optional.Missing(), val placeholder: Optional<String> = Optional.Missing(), val minValues: OptionalInt = OptionalInt.Missing, val maxValues: OptionalInt = OptionalInt.Missing, val minLength: OptionalInt = OptionalInt.Missing, val maxLength: OptionalInt = OptionalInt.Missing, val required: OptionalBoolean = OptionalBoolean.Missing, val value: Optional<String> = Optional.Missing()) : DiscordComponent","dev.kord.common.entity.DiscordTextInputComponent"]},{"name":"data class DiscordThreadMember(val id: OptionalSnowflake = OptionalSnowflake.Missing, val userId: OptionalSnowflake = OptionalSnowflake.Missing, val joinTimestamp: Instant, val flags: Int)","description":"dev.kord.common.entity.DiscordThreadMember","location":"common/dev.kord.common.entity/-discord-thread-member/index.html","searchKeys":["DiscordThreadMember","data class DiscordThreadMember(val id: OptionalSnowflake = OptionalSnowflake.Missing, val userId: OptionalSnowflake = OptionalSnowflake.Missing, val joinTimestamp: Instant, val flags: Int)","dev.kord.common.entity.DiscordThreadMember"]},{"name":"data class DiscordThreadMetadata(val archived: Boolean, val archiveTimestamp: Instant, val autoArchiveDuration: ArchiveDuration, val locked: OptionalBoolean = OptionalBoolean.Missing, val invitable: OptionalBoolean = OptionalBoolean.Missing, val createTimestamp: Optional<Instant?> = Optional.Missing())","description":"dev.kord.common.entity.DiscordThreadMetadata","location":"common/dev.kord.common.entity/-discord-thread-metadata/index.html","searchKeys":["DiscordThreadMetadata","data class DiscordThreadMetadata(val archived: Boolean, val archiveTimestamp: Instant, val autoArchiveDuration: ArchiveDuration, val locked: OptionalBoolean = OptionalBoolean.Missing, val invitable: OptionalBoolean = OptionalBoolean.Missing, val createTimestamp: Optional<Instant?> = Optional.Missing())","dev.kord.common.entity.DiscordThreadMetadata"]},{"name":"data class DiscordTyping(val channelId: Snowflake, val guildId: OptionalSnowflake = OptionalSnowflake.Missing, val userId: Snowflake, val timestamp: Instant, val member: Optional<DiscordGuildMember> = Optional.Missing())","description":"dev.kord.common.entity.DiscordTyping","location":"common/dev.kord.common.entity/-discord-typing/index.html","searchKeys":["DiscordTyping","data class DiscordTyping(val channelId: Snowflake, val guildId: OptionalSnowflake = OptionalSnowflake.Missing, val userId: Snowflake, val timestamp: Instant, val member: Optional<DiscordGuildMember> = Optional.Missing())","dev.kord.common.entity.DiscordTyping"]},{"name":"data class DiscordUnavailableGuild(val id: Snowflake, val unavailable: OptionalBoolean = OptionalBoolean.Missing)","description":"dev.kord.common.entity.DiscordUnavailableGuild","location":"common/dev.kord.common.entity/-discord-unavailable-guild/index.html","searchKeys":["DiscordUnavailableGuild","data class DiscordUnavailableGuild(val id: Snowflake, val unavailable: OptionalBoolean = OptionalBoolean.Missing)","dev.kord.common.entity.DiscordUnavailableGuild"]},{"name":"data class DiscordUpdatedEmojis(val guildId: Snowflake, val emojis: List<DiscordEmoji>)","description":"dev.kord.common.entity.DiscordUpdatedEmojis","location":"common/dev.kord.common.entity/-discord-updated-emojis/index.html","searchKeys":["DiscordUpdatedEmojis","data class DiscordUpdatedEmojis(val guildId: Snowflake, val emojis: List<DiscordEmoji>)","dev.kord.common.entity.DiscordUpdatedEmojis"]},{"name":"data class DiscordUpdatedGuildMember(val guildId: Snowflake, val roles: List<Snowflake>, val user: DiscordUser, val nick: Optional<String?> = Optional.Missing(), val joinedAt: Instant, val premiumSince: Optional<Instant?> = Optional.Missing(), val pending: OptionalBoolean = OptionalBoolean.Missing, val avatar: Optional<String?> = Optional.Missing(), val communicationDisabledUntil: Optional<Instant?> = Optional.Missing())","description":"dev.kord.common.entity.DiscordUpdatedGuildMember","location":"common/dev.kord.common.entity/-discord-updated-guild-member/index.html","searchKeys":["DiscordUpdatedGuildMember","data class DiscordUpdatedGuildMember(val guildId: Snowflake, val roles: List<Snowflake>, val user: DiscordUser, val nick: Optional<String?> = Optional.Missing(), val joinedAt: Instant, val premiumSince: Optional<Instant?> = Optional.Missing(), val pending: OptionalBoolean = OptionalBoolean.Missing, val avatar: Optional<String?> = Optional.Missing(), val communicationDisabledUntil: Optional<Instant?> = Optional.Missing())","dev.kord.common.entity.DiscordUpdatedGuildMember"]},{"name":"data class DiscordUser(val id: Snowflake, val username: String, val discriminator: String, val avatar: String?, val bot: OptionalBoolean = OptionalBoolean.Missing, val system: OptionalBoolean = OptionalBoolean.Missing, val mfaEnabled: OptionalBoolean = OptionalBoolean.Missing, val locale: Optional<String> = Optional.Missing(), val verified: OptionalBoolean = OptionalBoolean.Missing, val email: Optional<String?> = Optional.Missing(), val flags: Optional<UserFlags> = Optional.Missing(), val premiumType: Optional<UserPremium> = Optional.Missing(), val publicFlags: Optional<UserFlags> = Optional.Missing(), val banner: String? = null, val accentColor: Int? = null)","description":"dev.kord.common.entity.DiscordUser","location":"common/dev.kord.common.entity/-discord-user/index.html","searchKeys":["DiscordUser","data class DiscordUser(val id: Snowflake, val username: String, val discriminator: String, val avatar: String?, val bot: OptionalBoolean = OptionalBoolean.Missing, val system: OptionalBoolean = OptionalBoolean.Missing, val mfaEnabled: OptionalBoolean = OptionalBoolean.Missing, val locale: Optional<String> = Optional.Missing(), val verified: OptionalBoolean = OptionalBoolean.Missing, val email: Optional<String?> = Optional.Missing(), val flags: Optional<UserFlags> = Optional.Missing(), val premiumType: Optional<UserPremium> = Optional.Missing(), val publicFlags: Optional<UserFlags> = Optional.Missing(), val banner: String? = null, val accentColor: Int? = null)","dev.kord.common.entity.DiscordUser"]},{"name":"data class DiscordVoiceRegion(val id: String, val name: String, val optimal: Boolean, val deprecated: Boolean, val custom: Boolean)","description":"dev.kord.common.entity.DiscordVoiceRegion","location":"common/dev.kord.common.entity/-discord-voice-region/index.html","searchKeys":["DiscordVoiceRegion","data class DiscordVoiceRegion(val id: String, val name: String, val optimal: Boolean, val deprecated: Boolean, val custom: Boolean)","dev.kord.common.entity.DiscordVoiceRegion"]},{"name":"data class DiscordVoiceServerUpdateData(val token: String, val guildId: Snowflake, val endpoint: String?)","description":"dev.kord.common.entity.DiscordVoiceServerUpdateData","location":"common/dev.kord.common.entity/-discord-voice-server-update-data/index.html","searchKeys":["DiscordVoiceServerUpdateData","data class DiscordVoiceServerUpdateData(val token: String, val guildId: Snowflake, val endpoint: String?)","dev.kord.common.entity.DiscordVoiceServerUpdateData"]},{"name":"data class DiscordVoiceState(val guildId: OptionalSnowflake = OptionalSnowflake.Missing, val channelId: Snowflake?, val userId: Snowflake, val member: Optional<DiscordGuildMember> = Optional.Missing(), val sessionId: String, val deaf: Boolean, val mute: Boolean, val selfDeaf: Boolean, val selfMute: Boolean, val selfVideo: Boolean, val selfStream: OptionalBoolean = OptionalBoolean.Missing, val suppress: Boolean, val requestToSpeakTimestamp: Instant?)","description":"dev.kord.common.entity.DiscordVoiceState","location":"common/dev.kord.common.entity/-discord-voice-state/index.html","searchKeys":["DiscordVoiceState","data class DiscordVoiceState(val guildId: OptionalSnowflake = OptionalSnowflake.Missing, val channelId: Snowflake?, val userId: Snowflake, val member: Optional<DiscordGuildMember> = Optional.Missing(), val sessionId: String, val deaf: Boolean, val mute: Boolean, val selfDeaf: Boolean, val selfMute: Boolean, val selfVideo: Boolean, val selfStream: OptionalBoolean = OptionalBoolean.Missing, val suppress: Boolean, val requestToSpeakTimestamp: Instant?)","dev.kord.common.entity.DiscordVoiceState"]},{"name":"data class DiscordWebhook(val id: Snowflake, val type: WebhookType, val guildId: OptionalSnowflake = OptionalSnowflake.Missing, val channelId: Snowflake, val user: Optional<DiscordUser> = Optional.Missing(), val name: String?, val avatar: String?, val token: Optional<String> = Optional.Missing(), val applicationId: Snowflake?)","description":"dev.kord.common.entity.DiscordWebhook","location":"common/dev.kord.common.entity/-discord-webhook/index.html","searchKeys":["DiscordWebhook","data class DiscordWebhook(val id: Snowflake, val type: WebhookType, val guildId: OptionalSnowflake = OptionalSnowflake.Missing, val channelId: Snowflake, val user: Optional<DiscordUser> = Optional.Missing(), val name: String?, val avatar: String?, val token: Optional<String> = Optional.Missing(), val applicationId: Snowflake?)","dev.kord.common.entity.DiscordWebhook"]},{"name":"data class DiscordWebhooksUpdateData(val guildId: Snowflake, val channelId: Snowflake)","description":"dev.kord.common.entity.DiscordWebhooksUpdateData","location":"common/dev.kord.common.entity/-discord-webhooks-update-data/index.html","searchKeys":["DiscordWebhooksUpdateData","data class DiscordWebhooksUpdateData(val guildId: Snowflake, val channelId: Snowflake)","dev.kord.common.entity.DiscordWebhooksUpdateData"]},{"name":"data class DiscordWelcomeScreen(val description: String?, val welcomeChannels: List<DiscordWelcomeScreenChannel>)","description":"dev.kord.common.entity.DiscordWelcomeScreen","location":"common/dev.kord.common.entity/-discord-welcome-screen/index.html","searchKeys":["DiscordWelcomeScreen","data class DiscordWelcomeScreen(val description: String?, val welcomeChannels: List<DiscordWelcomeScreenChannel>)","dev.kord.common.entity.DiscordWelcomeScreen"]},{"name":"data class DiscordWelcomeScreenChannel(val channelId: Snowflake, val description: String, val emojiId: Snowflake?, val emojiName: String?)","description":"dev.kord.common.entity.DiscordWelcomeScreenChannel","location":"common/dev.kord.common.entity/-discord-welcome-screen-channel/index.html","searchKeys":["DiscordWelcomeScreenChannel","data class DiscordWelcomeScreenChannel(val channelId: Snowflake, val description: String, val emojiId: Snowflake?, val emojiName: String?)","dev.kord.common.entity.DiscordWelcomeScreenChannel"]},{"name":"data class Field(val name: String, val value: String, val inline: OptionalBoolean = OptionalBoolean.Missing)","description":"dev.kord.common.entity.DiscordEmbed.Field","location":"common/dev.kord.common.entity/-discord-embed/-field/index.html","searchKeys":["Field","data class Field(val name: String, val value: String, val inline: OptionalBoolean = OptionalBoolean.Missing)","dev.kord.common.entity.DiscordEmbed.Field"]},{"name":"data class Footer(val text: String, val iconUrl: Optional<String> = Optional.Missing(), val proxyIconUrl: Optional<String> = Optional.Missing())","description":"dev.kord.common.entity.DiscordEmbed.Footer","location":"common/dev.kord.common.entity/-discord-embed/-footer/index.html","searchKeys":["Footer","data class Footer(val text: String, val iconUrl: Optional<String> = Optional.Missing(), val proxyIconUrl: Optional<String> = Optional.Missing())","dev.kord.common.entity.DiscordEmbed.Footer"]},{"name":"data class GuildScheduledEventEntityMetadata(val location: Optional<String> = Optional.Missing())","description":"dev.kord.common.entity.GuildScheduledEventEntityMetadata","location":"common/dev.kord.common.entity/-guild-scheduled-event-entity-metadata/index.html","searchKeys":["GuildScheduledEventEntityMetadata","data class GuildScheduledEventEntityMetadata(val location: Optional<String> = Optional.Missing())","dev.kord.common.entity.GuildScheduledEventEntityMetadata"]},{"name":"data class Image(val url: Optional<String> = Optional.Missing(), val proxyUrl: Optional<String> = Optional.Missing(), val height: OptionalInt = OptionalInt.Missing, val width: OptionalInt = OptionalInt.Missing)","description":"dev.kord.common.entity.DiscordEmbed.Image","location":"common/dev.kord.common.entity/-discord-embed/-image/index.html","searchKeys":["Image","data class Image(val url: Optional<String> = Optional.Missing(), val proxyUrl: Optional<String> = Optional.Missing(), val height: OptionalInt = OptionalInt.Missing, val width: OptionalInt = OptionalInt.Missing)","dev.kord.common.entity.DiscordEmbed.Image"]},{"name":"data class InstallParams(val scopes: List<String>, val permissions: Permissions)","description":"dev.kord.common.entity.InstallParams","location":"common/dev.kord.common.entity/-install-params/index.html","searchKeys":["InstallParams","data class InstallParams(val scopes: List<String>, val permissions: Permissions)","dev.kord.common.entity.InstallParams"]},{"name":"data class IntChoice(val name: String, val nameLocalizations: Optional<Map<Locale, String>?>, val value: Long) : Choice<Long> ","description":"dev.kord.common.entity.Choice.IntChoice","location":"common/dev.kord.common.entity/-choice/-int-choice/index.html","searchKeys":["IntChoice","data class IntChoice(val name: String, val nameLocalizations: Optional<Map<Locale, String>?>, val value: Long) : Choice<Long> ","dev.kord.common.entity.Choice.IntChoice"]},{"name":"data class IntegerArgument(val name: String, val value: Long, val focused: OptionalBoolean = OptionalBoolean.Missing) : CommandArgument<Long> ","description":"dev.kord.common.entity.CommandArgument.IntegerArgument","location":"common/dev.kord.common.entity/-command-argument/-integer-argument/index.html","searchKeys":["IntegerArgument","data class IntegerArgument(val name: String, val value: Long, val focused: OptionalBoolean = OptionalBoolean.Missing) : CommandArgument<Long> ","dev.kord.common.entity.CommandArgument.IntegerArgument"]},{"name":"data class IntegrationApplication(val id: Snowflake, val name: String, val icon: String?, val description: String, summary: String, val bot: Optional<DiscordUser> = Optional.Missing())","description":"dev.kord.common.entity.IntegrationApplication","location":"common/dev.kord.common.entity/-integration-application/index.html","searchKeys":["IntegrationApplication","data class IntegrationApplication(val id: Snowflake, val name: String, val icon: String?, val description: String, summary: String, val bot: Optional<DiscordUser> = Optional.Missing())","dev.kord.common.entity.IntegrationApplication"]},{"name":"data class InteractionCallbackData(val id: OptionalSnowflake = OptionalSnowflake.Missing, val type: Optional<ApplicationCommandType> = Optional.Missing(), val targetId: OptionalSnowflake = OptionalSnowflake.Missing, val name: Optional<String> = Optional.Missing(), val resolved: Optional<ResolvedObjects> = Optional.Missing(), val options: Optional<List<Option>> = Optional.Missing(), val guildId: OptionalSnowflake = OptionalSnowflake.Missing, val customId: Optional<String> = Optional.Missing(), val componentType: Optional<ComponentType> = Optional.Missing(), val values: Optional<List<String>> = Optional.Missing(), val components: Optional<List<DiscordComponent>> = Optional.Missing())","description":"dev.kord.common.entity.InteractionCallbackData","location":"common/dev.kord.common.entity/-interaction-callback-data/index.html","searchKeys":["InteractionCallbackData","data class InteractionCallbackData(val id: OptionalSnowflake = OptionalSnowflake.Missing, val type: Optional<ApplicationCommandType> = Optional.Missing(), val targetId: OptionalSnowflake = OptionalSnowflake.Missing, val name: Optional<String> = Optional.Missing(), val resolved: Optional<ResolvedObjects> = Optional.Missing(), val options: Optional<List<Option>> = Optional.Missing(), val guildId: OptionalSnowflake = OptionalSnowflake.Missing, val customId: Optional<String> = Optional.Missing(), val componentType: Optional<ComponentType> = Optional.Missing(), val values: Optional<List<String>> = Optional.Missing(), val components: Optional<List<DiscordComponent>> = Optional.Missing())","dev.kord.common.entity.InteractionCallbackData"]},{"name":"data class Locale(val language: String, val country: String? = null)","description":"dev.kord.common.Locale","location":"common/dev.kord.common/-locale/index.html","searchKeys":["Locale","data class Locale(val language: String, val country: String? = null)","dev.kord.common.Locale"]},{"name":"data class MentionableArgument(val name: String, val value: Snowflake, val focused: OptionalBoolean = OptionalBoolean.Missing) : CommandArgument<Snowflake> ","description":"dev.kord.common.entity.CommandArgument.MentionableArgument","location":"common/dev.kord.common.entity/-command-argument/-mentionable-argument/index.html","searchKeys":["MentionableArgument","data class MentionableArgument(val name: String, val value: Snowflake, val focused: OptionalBoolean = OptionalBoolean.Missing) : CommandArgument<Snowflake> ","dev.kord.common.entity.CommandArgument.MentionableArgument"]},{"name":"data class MessageActivity(val type: MessageActivityType, val partyId: Optional<String> = Optional.Missing())","description":"dev.kord.common.entity.MessageActivity","location":"common/dev.kord.common.entity/-message-activity/index.html","searchKeys":["MessageActivity","data class MessageActivity(val type: MessageActivityType, val partyId: Optional<String> = Optional.Missing())","dev.kord.common.entity.MessageActivity"]},{"name":"data class MessageApplication(val id: Snowflake, val coverImage: Optional<String> = Optional.Missing(), val description: String, val icon: String? = null, val name: String)","description":"dev.kord.common.entity.MessageApplication","location":"common/dev.kord.common.entity/-message-application/index.html","searchKeys":["MessageApplication","data class MessageApplication(val id: Snowflake, val coverImage: Optional<String> = Optional.Missing(), val description: String, val icon: String? = null, val name: String)","dev.kord.common.entity.MessageApplication"]},{"name":"data class MessageFlags","description":"dev.kord.common.entity.MessageFlags","location":"common/dev.kord.common.entity/-message-flags/index.html","searchKeys":["MessageFlags","data class MessageFlags","dev.kord.common.entity.MessageFlags"]},{"name":"data class MessageReactionAddData(val userId: Snowflake, val channelId: Snowflake, val messageId: Snowflake, val guildId: OptionalSnowflake = OptionalSnowflake.Missing, val member: Optional<DiscordGuildMember> = Optional.Missing(), val emoji: DiscordPartialEmoji)","description":"dev.kord.common.entity.MessageReactionAddData","location":"common/dev.kord.common.entity/-message-reaction-add-data/index.html","searchKeys":["MessageReactionAddData","data class MessageReactionAddData(val userId: Snowflake, val channelId: Snowflake, val messageId: Snowflake, val guildId: OptionalSnowflake = OptionalSnowflake.Missing, val member: Optional<DiscordGuildMember> = Optional.Missing(), val emoji: DiscordPartialEmoji)","dev.kord.common.entity.MessageReactionAddData"]},{"name":"data class MessageReactionRemoveData(val userId: Snowflake, val channelId: Snowflake, val messageId: Snowflake, val guildId: OptionalSnowflake = OptionalSnowflake.Missing, val emoji: DiscordPartialEmoji)","description":"dev.kord.common.entity.MessageReactionRemoveData","location":"common/dev.kord.common.entity/-message-reaction-remove-data/index.html","searchKeys":["MessageReactionRemoveData","data class MessageReactionRemoveData(val userId: Snowflake, val channelId: Snowflake, val messageId: Snowflake, val guildId: OptionalSnowflake = OptionalSnowflake.Missing, val emoji: DiscordPartialEmoji)","dev.kord.common.entity.MessageReactionRemoveData"]},{"name":"data class NumberArgument(val name: String, val value: Double, val focused: OptionalBoolean = OptionalBoolean.Missing) : CommandArgument<Double> ","description":"dev.kord.common.entity.CommandArgument.NumberArgument","location":"common/dev.kord.common.entity/-command-argument/-number-argument/index.html","searchKeys":["NumberArgument","data class NumberArgument(val name: String, val value: Double, val focused: OptionalBoolean = OptionalBoolean.Missing) : CommandArgument<Double> ","dev.kord.common.entity.CommandArgument.NumberArgument"]},{"name":"data class NumberChoice(val name: String, val nameLocalizations: Optional<Map<Locale, String>?>, val value: Double) : Choice<Double> ","description":"dev.kord.common.entity.Choice.NumberChoice","location":"common/dev.kord.common.entity/-choice/-number-choice/index.html","searchKeys":["NumberChoice","data class NumberChoice(val name: String, val nameLocalizations: Optional<Map<Locale, String>?>, val value: Double) : Choice<Double> ","dev.kord.common.entity.Choice.NumberChoice"]},{"name":"data class Overwrite(val id: Snowflake, val type: OverwriteType, val allow: Permissions, val deny: Permissions)","description":"dev.kord.common.entity.Overwrite","location":"common/dev.kord.common.entity/-overwrite/index.html","searchKeys":["Overwrite","data class Overwrite(val id: Snowflake, val type: OverwriteType, val allow: Permissions, val deny: Permissions)","dev.kord.common.entity.Overwrite"]},{"name":"data class Permissions(val code: DiscordBitSet)","description":"dev.kord.common.entity.Permissions","location":"common/dev.kord.common.entity/-permissions/index.html","searchKeys":["Permissions","data class Permissions(val code: DiscordBitSet)","dev.kord.common.entity.Permissions"]},{"name":"data class Provider(val name: Optional<String> = Optional.Missing(), val url: Optional<String?> = Optional.Missing())","description":"dev.kord.common.entity.DiscordEmbed.Provider","location":"common/dev.kord.common.entity/-discord-embed/-provider/index.html","searchKeys":["Provider","data class Provider(val name: Optional<String> = Optional.Missing(), val url: Optional<String?> = Optional.Missing())","dev.kord.common.entity.DiscordEmbed.Provider"]},{"name":"data class Reaction(val count: Int, val me: Boolean, val emoji: DiscordEmoji)","description":"dev.kord.common.entity.Reaction","location":"common/dev.kord.common.entity/-reaction/index.html","searchKeys":["Reaction","data class Reaction(val count: Int, val me: Boolean, val emoji: DiscordEmoji)","dev.kord.common.entity.Reaction"]},{"name":"data class ResolvedObjects(val members: Optional<Map<Snowflake, DiscordInteractionGuildMember>> = Optional.Missing(), val users: Optional<Map<Snowflake, DiscordUser>> = Optional.Missing(), val roles: Optional<Map<Snowflake, DiscordRole>> = Optional.Missing(), val channels: Optional<Map<Snowflake, DiscordChannel>> = Optional.Missing(), val messages: Optional<Map<Snowflake, DiscordMessage>> = Optional.Missing(), val attachments: Optional<Map<Snowflake, DiscordAttachment>> = Optional.Missing())","description":"dev.kord.common.entity.ResolvedObjects","location":"common/dev.kord.common.entity/-resolved-objects/index.html","searchKeys":["ResolvedObjects","data class ResolvedObjects(val members: Optional<Map<Snowflake, DiscordInteractionGuildMember>> = Optional.Missing(), val users: Optional<Map<Snowflake, DiscordUser>> = Optional.Missing(), val roles: Optional<Map<Snowflake, DiscordRole>> = Optional.Missing(), val channels: Optional<Map<Snowflake, DiscordChannel>> = Optional.Missing(), val messages: Optional<Map<Snowflake, DiscordMessage>> = Optional.Missing(), val attachments: Optional<Map<Snowflake, DiscordAttachment>> = Optional.Missing())","dev.kord.common.entity.ResolvedObjects"]},{"name":"data class RoleArgument(val name: String, val value: Snowflake, val focused: OptionalBoolean = OptionalBoolean.Missing) : CommandArgument<Snowflake> ","description":"dev.kord.common.entity.CommandArgument.RoleArgument","location":"common/dev.kord.common.entity/-command-argument/-role-argument/index.html","searchKeys":["RoleArgument","data class RoleArgument(val name: String, val value: Snowflake, val focused: OptionalBoolean = OptionalBoolean.Missing) : CommandArgument<Snowflake> ","dev.kord.common.entity.CommandArgument.RoleArgument"]},{"name":"data class StringArgument(val name: String, val value: String, val focused: OptionalBoolean = OptionalBoolean.Missing) : CommandArgument<String> ","description":"dev.kord.common.entity.CommandArgument.StringArgument","location":"common/dev.kord.common.entity/-command-argument/-string-argument/index.html","searchKeys":["StringArgument","data class StringArgument(val name: String, val value: String, val focused: OptionalBoolean = OptionalBoolean.Missing) : CommandArgument<String> ","dev.kord.common.entity.CommandArgument.StringArgument"]},{"name":"data class StringChoice(val name: String, val nameLocalizations: Optional<Map<Locale, String>?>, val value: String) : Choice<String> ","description":"dev.kord.common.entity.Choice.StringChoice","location":"common/dev.kord.common.entity/-choice/-string-choice/index.html","searchKeys":["StringChoice","data class StringChoice(val name: String, val nameLocalizations: Optional<Map<Locale, String>?>, val value: String) : Choice<String> ","dev.kord.common.entity.Choice.StringChoice"]},{"name":"data class SubCommand(val name: String, val options: Optional<List<CommandArgument<Any?>>> = Optional.Missing()) : Option","description":"dev.kord.common.entity.SubCommand","location":"common/dev.kord.common.entity/-sub-command/index.html","searchKeys":["SubCommand","data class SubCommand(val name: String, val options: Optional<List<CommandArgument<Any?>>> = Optional.Missing()) : Option","dev.kord.common.entity.SubCommand"]},{"name":"data class SystemChannelFlags(val code: Int)","description":"dev.kord.common.entity.SystemChannelFlags","location":"common/dev.kord.common.entity/-system-channel-flags/index.html","searchKeys":["SystemChannelFlags","data class SystemChannelFlags(val code: Int)","dev.kord.common.entity.SystemChannelFlags"]},{"name":"data class Thumbnail(val url: Optional<String> = Optional.Missing(), val proxyUrl: Optional<String> = Optional.Missing(), val height: OptionalInt = OptionalInt.Missing, val width: OptionalInt = OptionalInt.Missing)","description":"dev.kord.common.entity.DiscordEmbed.Thumbnail","location":"common/dev.kord.common.entity/-discord-embed/-thumbnail/index.html","searchKeys":["Thumbnail","data class Thumbnail(val url: Optional<String> = Optional.Missing(), val proxyUrl: Optional<String> = Optional.Missing(), val height: OptionalInt = OptionalInt.Missing, val width: OptionalInt = OptionalInt.Missing)","dev.kord.common.entity.DiscordEmbed.Thumbnail"]},{"name":"data class UserArgument(val name: String, val value: Snowflake, val focused: OptionalBoolean = OptionalBoolean.Missing) : CommandArgument<Snowflake> ","description":"dev.kord.common.entity.CommandArgument.UserArgument","location":"common/dev.kord.common.entity/-command-argument/-user-argument/index.html","searchKeys":["UserArgument","data class UserArgument(val name: String, val value: Snowflake, val focused: OptionalBoolean = OptionalBoolean.Missing) : CommandArgument<Snowflake> ","dev.kord.common.entity.CommandArgument.UserArgument"]},{"name":"data class UserFlags(val code: Int)","description":"dev.kord.common.entity.UserFlags","location":"common/dev.kord.common.entity/-user-flags/index.html","searchKeys":["UserFlags","data class UserFlags(val code: Int)","dev.kord.common.entity.UserFlags"]},{"name":"data class Video(val url: Optional<String> = Optional.Missing(), val height: OptionalInt = OptionalInt.Missing, val width: OptionalInt = OptionalInt.Missing)","description":"dev.kord.common.entity.DiscordEmbed.Video","location":"common/dev.kord.common.entity/-discord-embed/-video/index.html","searchKeys":["Video","data class Video(val url: Optional<String> = Optional.Missing(), val height: OptionalInt = OptionalInt.Missing, val width: OptionalInt = OptionalInt.Missing)","dev.kord.common.entity.DiscordEmbed.Video"]},{"name":"enum ActivityFlag : Enum<ActivityFlag> ","description":"dev.kord.common.entity.ActivityFlag","location":"common/dev.kord.common.entity/-activity-flag/index.html","searchKeys":["ActivityFlag","enum ActivityFlag : Enum<ActivityFlag> ","dev.kord.common.entity.ActivityFlag"]},{"name":"enum ApplicationFlag : Enum<ApplicationFlag> ","description":"dev.kord.common.entity.ApplicationFlag","location":"common/dev.kord.common.entity/-application-flag/index.html","searchKeys":["ApplicationFlag","enum ApplicationFlag : Enum<ApplicationFlag> ","dev.kord.common.entity.ApplicationFlag"]},{"name":"enum DiscordTimestampStyle : Enum<DiscordTimestampStyle> ","description":"dev.kord.common.DiscordTimestampStyle","location":"common/dev.kord.common/-discord-timestamp-style/index.html","searchKeys":["DiscordTimestampStyle","enum DiscordTimestampStyle : Enum<DiscordTimestampStyle> ","dev.kord.common.DiscordTimestampStyle"]},{"name":"enum MessageFlag : Enum<MessageFlag> ","description":"dev.kord.common.entity.MessageFlag","location":"common/dev.kord.common.entity/-message-flag/index.html","searchKeys":["MessageFlag","enum MessageFlag : Enum<MessageFlag> ","dev.kord.common.entity.MessageFlag"]},{"name":"enum SystemChannelFlag : Enum<SystemChannelFlag> ","description":"dev.kord.common.entity.SystemChannelFlag","location":"common/dev.kord.common.entity/-system-channel-flag/index.html","searchKeys":["SystemChannelFlag","enum SystemChannelFlag : Enum<SystemChannelFlag> ","dev.kord.common.entity.SystemChannelFlag"]},{"name":"enum UserFlag : Enum<UserFlag> ","description":"dev.kord.common.entity.UserFlag","location":"common/dev.kord.common.entity/-user-flag/index.html","searchKeys":["UserFlag","enum UserFlag : Enum<UserFlag> ","dev.kord.common.entity.UserFlag"]},{"name":"fun <E> Optional<List<E>>.orEmpty(): List<E>","description":"dev.kord.common.entity.optional.orEmpty","location":"common/dev.kord.common.entity.optional/or-empty.html","searchKeys":["orEmpty","fun <E> Optional<List<E>>.orEmpty(): List<E>","dev.kord.common.entity.optional.orEmpty"]},{"name":"fun <E> Optional<Set<E>>.orEmpty(): Set<E>","description":"dev.kord.common.entity.optional.orEmpty","location":"common/dev.kord.common.entity.optional/or-empty.html","searchKeys":["orEmpty","fun <E> Optional<Set<E>>.orEmpty(): Set<E>","dev.kord.common.entity.optional.orEmpty"]},{"name":"fun <T : Any> Optional<T>.switchOnMissing(value: Optional<T>): Optional<T>","description":"dev.kord.common.entity.optional.switchOnMissing","location":"common/dev.kord.common.entity.optional/switch-on-missing.html","searchKeys":["switchOnMissing","fun <T : Any> Optional<T>.switchOnMissing(value: Optional<T>): Optional<T>","dev.kord.common.entity.optional.switchOnMissing"]},{"name":"fun <T : Any> Optional<T>.switchOnMissing(value: T): Optional<T>","description":"dev.kord.common.entity.optional.switchOnMissing","location":"common/dev.kord.common.entity.optional/switch-on-missing.html","searchKeys":["switchOnMissing","fun <T : Any> Optional<T>.switchOnMissing(value: T): Optional<T>","dev.kord.common.entity.optional.switchOnMissing"]},{"name":"fun <T : Any> Optional<T?>.coerceToMissing(): Optional<T>","description":"dev.kord.common.entity.optional.coerceToMissing","location":"common/dev.kord.common.entity.optional/coerce-to-missing.html","searchKeys":["coerceToMissing","fun <T : Any> Optional<T?>.coerceToMissing(): Optional<T>","dev.kord.common.entity.optional.coerceToMissing"]},{"name":"fun <T : Any> T.optional(): Optional.Value<T>","description":"dev.kord.common.entity.optional.optional","location":"common/dev.kord.common.entity.optional/optional.html","searchKeys":["optional","fun <T : Any> T.optional(): Optional.Value<T>","dev.kord.common.entity.optional.optional"]},{"name":"fun <T : Any> Value(value: T)","description":"dev.kord.common.entity.optional.Optional.Value.Value","location":"common/dev.kord.common.entity.optional/-optional/-value/-value.html","searchKeys":["Value","fun <T : Any> Value(value: T)","dev.kord.common.entity.optional.Optional.Value.Value"]},{"name":"fun <T, C : Collection<T>> missingOnEmpty(value: C): Optional<C>","description":"dev.kord.common.entity.optional.Optional.Companion.missingOnEmpty","location":"common/dev.kord.common.entity.optional/-optional/-companion/missing-on-empty.html","searchKeys":["missingOnEmpty","fun <T, C : Collection<T>> missingOnEmpty(value: C): Optional<C>","dev.kord.common.entity.optional.Optional.Companion.missingOnEmpty"]},{"name":"fun <T> AuditLogChange(new: T?, old: T?, key: AuditLogChangeKey<T>)","description":"dev.kord.common.entity.AuditLogChange.AuditLogChange","location":"common/dev.kord.common.entity/-audit-log-change/-audit-log-change.html","searchKeys":["AuditLogChange","fun <T> AuditLogChange(new: T?, old: T?, key: AuditLogChangeKey<T>)","dev.kord.common.entity.AuditLogChange.AuditLogChange"]},{"name":"fun <T> DiscordAutoComplete(choices: List<Choice<T>>)","description":"dev.kord.common.entity.DiscordAutoComplete.DiscordAutoComplete","location":"common/dev.kord.common.entity/-discord-auto-complete/-discord-auto-complete.html","searchKeys":["DiscordAutoComplete","fun <T> DiscordAutoComplete(choices: List<Choice<T>>)","dev.kord.common.entity.DiscordAutoComplete.DiscordAutoComplete"]},{"name":"fun <T> KMutableProperty0<OptionalBoolean?>.delegate(): ReadWriteProperty<T, Boolean?>","description":"dev.kord.common.entity.optional.delegate.delegate","location":"common/dev.kord.common.entity.optional.delegate/delegate.html","searchKeys":["delegate","fun <T> KMutableProperty0<OptionalBoolean?>.delegate(): ReadWriteProperty<T, Boolean?>","dev.kord.common.entity.optional.delegate.delegate"]},{"name":"fun <T> Optional<MutableList<T>>.mapCopy(): Optional<List<T>>","description":"dev.kord.common.entity.optional.mapCopy","location":"common/dev.kord.common.entity.optional/map-copy.html","searchKeys":["mapCopy","fun <T> Optional<MutableList<T>>.mapCopy(): Optional<List<T>>","dev.kord.common.entity.optional.mapCopy"]},{"name":"fun <T> T?.optional(): Optional<T?>","description":"dev.kord.common.entity.optional.optional","location":"common/dev.kord.common.entity.optional/optional.html","searchKeys":["optional","fun <T> T?.optional(): Optional<T?>","dev.kord.common.entity.optional.optional"]},{"name":"fun <V : Any> KMutableProperty0<Optional<List<V>>>.delegateList(): ReadWriteProperty<Any?, List<V>>","description":"dev.kord.common.entity.optional.delegate.delegateList","location":"common/dev.kord.common.entity.optional.delegate/delegate-list.html","searchKeys":["delegateList","fun <V : Any> KMutableProperty0<Optional<List<V>>>.delegateList(): ReadWriteProperty<Any?, List<V>>","dev.kord.common.entity.optional.delegate.delegateList"]},{"name":"fun <V : Any> KMutableProperty0<Optional<V>>.delegate(): ReadWriteProperty<Any?, V?>","description":"dev.kord.common.entity.optional.delegate.delegate","location":"common/dev.kord.common.entity.optional.delegate/delegate.html","searchKeys":["delegate","fun <V : Any> KMutableProperty0<Optional<V>>.delegate(): ReadWriteProperty<Any?, V?>","dev.kord.common.entity.optional.delegate.delegate"]},{"name":"fun <V : Any> KMutableProperty0<Optional<V?>>.delegate(): ReadWriteProperty<Any?, V?>","description":"dev.kord.common.entity.optional.delegate.delegate","location":"common/dev.kord.common.entity.optional.delegate/delegate.html","searchKeys":["delegate","fun <V : Any> KMutableProperty0<Optional<V?>>.delegate(): ReadWriteProperty<Any?, V?>","dev.kord.common.entity.optional.delegate.delegate"]},{"name":"fun AbstractIntervalRateLimiter(limit: Int, interval: Duration)","description":"dev.kord.common.ratelimit.AbstractIntervalRateLimiter.AbstractIntervalRateLimiter","location":"common/dev.kord.common.ratelimit/-abstract-interval-rate-limiter/-abstract-interval-rate-limiter.html","searchKeys":["AbstractIntervalRateLimiter","fun AbstractIntervalRateLimiter(limit: Int, interval: Duration)","dev.kord.common.ratelimit.AbstractIntervalRateLimiter.AbstractIntervalRateLimiter"]},{"name":"fun ActivityFlags(value: Int)","description":"dev.kord.common.entity.ActivityFlags.ActivityFlags","location":"common/dev.kord.common.entity/-activity-flags/-activity-flags.html","searchKeys":["ActivityFlags","fun ActivityFlags(value: Int)","dev.kord.common.entity.ActivityFlags.ActivityFlags"]},{"name":"fun AllRemovedMessageReactions(channelId: Snowflake, messageId: Snowflake, guildId: OptionalSnowflake = OptionalSnowflake.Missing)","description":"dev.kord.common.entity.AllRemovedMessageReactions.AllRemovedMessageReactions","location":"common/dev.kord.common.entity/-all-removed-message-reactions/-all-removed-message-reactions.html","searchKeys":["AllRemovedMessageReactions","fun AllRemovedMessageReactions(channelId: Snowflake, messageId: Snowflake, guildId: OptionalSnowflake = OptionalSnowflake.Missing)","dev.kord.common.entity.AllRemovedMessageReactions.AllRemovedMessageReactions"]},{"name":"fun AllowedMentions(parse: List<AllowedMentionType>, users: List<String>, roles: List<String>, repliedUser: OptionalBoolean = OptionalBoolean.Missing)","description":"dev.kord.common.entity.AllowedMentions.AllowedMentions","location":"common/dev.kord.common.entity/-allowed-mentions/-allowed-mentions.html","searchKeys":["AllowedMentions","fun AllowedMentions(parse: List<AllowedMentionType>, users: List<String>, roles: List<String>, repliedUser: OptionalBoolean = OptionalBoolean.Missing)","dev.kord.common.entity.AllowedMentions.AllowedMentions"]},{"name":"fun ApplicationCommandOption(type: ApplicationCommandOptionType, name: String, nameLocalizations: Optional<Map<Locale, String>?> = Optional.Missing(), description: String, descriptionLocalizations: Optional<Map<Locale, String>?> = Optional.Missing(), default: OptionalBoolean = OptionalBoolean.Missing, required: OptionalBoolean = OptionalBoolean.Missing, choices: Optional<List<Choice<Any?>>> = Optional.Missing(), autocomplete: OptionalBoolean = OptionalBoolean.Missing, options: Optional<List<ApplicationCommandOption>> = Optional.Missing(), channelTypes: Optional<List<ChannelType>> = Optional.Missing(), minValue: Optional<JsonPrimitive> = Optional.Missing(), maxValue: Optional<JsonPrimitive> = Optional.Missing(), minLength: OptionalInt = OptionalInt.Missing, maxLength: OptionalInt = OptionalInt.Missing)","description":"dev.kord.common.entity.ApplicationCommandOption.ApplicationCommandOption","location":"common/dev.kord.common.entity/-application-command-option/-application-command-option.html","searchKeys":["ApplicationCommandOption","fun ApplicationCommandOption(type: ApplicationCommandOptionType, name: String, nameLocalizations: Optional<Map<Locale, String>?> = Optional.Missing(), description: String, descriptionLocalizations: Optional<Map<Locale, String>?> = Optional.Missing(), default: OptionalBoolean = OptionalBoolean.Missing, required: OptionalBoolean = OptionalBoolean.Missing, choices: Optional<List<Choice<Any?>>> = Optional.Missing(), autocomplete: OptionalBoolean = OptionalBoolean.Missing, options: Optional<List<ApplicationCommandOption>> = Optional.Missing(), channelTypes: Optional<List<ChannelType>> = Optional.Missing(), minValue: Optional<JsonPrimitive> = Optional.Missing(), maxValue: Optional<JsonPrimitive> = Optional.Missing(), minLength: OptionalInt = OptionalInt.Missing, maxLength: OptionalInt = OptionalInt.Missing)","dev.kord.common.entity.ApplicationCommandOption.ApplicationCommandOption"]},{"name":"fun ApplicationFlags(flags: Iterable<ApplicationFlag>): ApplicationFlags","description":"dev.kord.common.entity.ApplicationFlags","location":"common/dev.kord.common.entity/-application-flags.html","searchKeys":["ApplicationFlags","fun ApplicationFlags(flags: Iterable<ApplicationFlag>): ApplicationFlags","dev.kord.common.entity.ApplicationFlags"]},{"name":"fun ApplicationFlags(flags: Iterable<ApplicationFlags>): ApplicationFlags","description":"dev.kord.common.entity.ApplicationFlags","location":"common/dev.kord.common.entity/-application-flags.html","searchKeys":["ApplicationFlags","fun ApplicationFlags(flags: Iterable<ApplicationFlags>): ApplicationFlags","dev.kord.common.entity.ApplicationFlags"]},{"name":"fun ApplicationFlags(vararg flags: ApplicationFlag): ApplicationFlags","description":"dev.kord.common.entity.ApplicationFlags","location":"common/dev.kord.common.entity/-application-flags.html","searchKeys":["ApplicationFlags","fun ApplicationFlags(vararg flags: ApplicationFlag): ApplicationFlags","dev.kord.common.entity.ApplicationFlags"]},{"name":"fun ApplicationFlags(vararg flags: ApplicationFlags): ApplicationFlags","description":"dev.kord.common.entity.ApplicationFlags","location":"common/dev.kord.common.entity/-application-flags.html","searchKeys":["ApplicationFlags","fun ApplicationFlags(vararg flags: ApplicationFlags): ApplicationFlags","dev.kord.common.entity.ApplicationFlags"]},{"name":"fun AttachmentArgument(name: String, value: Snowflake, focused: OptionalBoolean = OptionalBoolean.Missing)","description":"dev.kord.common.entity.CommandArgument.AttachmentArgument.AttachmentArgument","location":"common/dev.kord.common.entity/-command-argument/-attachment-argument/-attachment-argument.html","searchKeys":["AttachmentArgument","fun AttachmentArgument(name: String, value: Snowflake, focused: OptionalBoolean = OptionalBoolean.Missing)","dev.kord.common.entity.CommandArgument.AttachmentArgument.AttachmentArgument"]},{"name":"fun AuditLogEntryOptionalInfo(applicationId: OptionalSnowflake = OptionalSnowflake.Missing, autoModerationRuleName: Optional<String> = Optional.Missing(), autoModerationRuleTriggerType: Optional<String> = Optional.Missing(), deleteMemberDays: Optional<String> = Optional.Missing(), membersRemoved: Optional<String> = Optional.Missing(), channelId: OptionalSnowflake = OptionalSnowflake.Missing, messageId: OptionalSnowflake = OptionalSnowflake.Missing, count: Optional<String> = Optional.Missing(), id: OptionalSnowflake = OptionalSnowflake.Missing, type: Optional<OverwriteType> = Optional.Missing(), roleName: Optional<String> = Optional.Missing())","description":"dev.kord.common.entity.AuditLogEntryOptionalInfo.AuditLogEntryOptionalInfo","location":"common/dev.kord.common.entity/-audit-log-entry-optional-info/-audit-log-entry-optional-info.html","searchKeys":["AuditLogEntryOptionalInfo","fun AuditLogEntryOptionalInfo(applicationId: OptionalSnowflake = OptionalSnowflake.Missing, autoModerationRuleName: Optional<String> = Optional.Missing(), autoModerationRuleTriggerType: Optional<String> = Optional.Missing(), deleteMemberDays: Optional<String> = Optional.Missing(), membersRemoved: Optional<String> = Optional.Missing(), channelId: OptionalSnowflake = OptionalSnowflake.Missing, messageId: OptionalSnowflake = OptionalSnowflake.Missing, count: Optional<String> = Optional.Missing(), id: OptionalSnowflake = OptionalSnowflake.Missing, type: Optional<OverwriteType> = Optional.Missing(), roleName: Optional<String> = Optional.Missing())","dev.kord.common.entity.AuditLogEntryOptionalInfo.AuditLogEntryOptionalInfo"]},{"name":"fun Author(name: Optional<String> = Optional.Missing(), url: Optional<String> = Optional.Missing(), iconUrl: Optional<String> = Optional.Missing(), proxyIconUrl: Optional<String> = Optional.Missing())","description":"dev.kord.common.entity.DiscordEmbed.Author.Author","location":"common/dev.kord.common.entity/-discord-embed/-author/-author.html","searchKeys":["Author","fun Author(name: Optional<String> = Optional.Missing(), url: Optional<String> = Optional.Missing(), iconUrl: Optional<String> = Optional.Missing(), proxyIconUrl: Optional<String> = Optional.Missing())","dev.kord.common.entity.DiscordEmbed.Author.Author"]},{"name":"fun AutoCompleteArgument(name: String, type: ApplicationCommandOptionType, value: String, focused: OptionalBoolean)","description":"dev.kord.common.entity.CommandArgument.AutoCompleteArgument.AutoCompleteArgument","location":"common/dev.kord.common.entity/-command-argument/-auto-complete-argument/-auto-complete-argument.html","searchKeys":["AutoCompleteArgument","fun AutoCompleteArgument(name: String, type: ApplicationCommandOptionType, value: String, focused: OptionalBoolean)","dev.kord.common.entity.CommandArgument.AutoCompleteArgument.AutoCompleteArgument"]},{"name":"fun Boolean.optional(): OptionalBoolean.Value","description":"dev.kord.common.entity.optional.optional","location":"common/dev.kord.common.entity.optional/optional.html","searchKeys":["optional","fun Boolean.optional(): OptionalBoolean.Value","dev.kord.common.entity.optional.optional"]},{"name":"fun BooleanArgument(name: String, value: Boolean, focused: OptionalBoolean = OptionalBoolean.Missing)","description":"dev.kord.common.entity.CommandArgument.BooleanArgument.BooleanArgument","location":"common/dev.kord.common.entity/-command-argument/-boolean-argument/-boolean-argument.html","searchKeys":["BooleanArgument","fun BooleanArgument(name: String, value: Boolean, focused: OptionalBoolean = OptionalBoolean.Missing)","dev.kord.common.entity.CommandArgument.BooleanArgument.BooleanArgument"]},{"name":"fun Builder(code: Int = 0)","description":"dev.kord.common.entity.ApplicationFlags.Builder.Builder","location":"common/dev.kord.common.entity/-application-flags/-builder/-builder.html","searchKeys":["Builder","fun Builder(code: Int = 0)","dev.kord.common.entity.ApplicationFlags.Builder.Builder"]},{"name":"fun Builder(code: Int = 0)","description":"dev.kord.common.entity.MessageFlags.Builder.Builder","location":"common/dev.kord.common.entity/-message-flags/-builder/-builder.html","searchKeys":["Builder","fun Builder(code: Int = 0)","dev.kord.common.entity.MessageFlags.Builder.Builder"]},{"name":"fun BulkDeleteData(ids: List<Snowflake>, channelId: Snowflake, guildId: OptionalSnowflake = OptionalSnowflake.Missing)","description":"dev.kord.common.entity.BulkDeleteData.BulkDeleteData","location":"common/dev.kord.common.entity/-bulk-delete-data/-bulk-delete-data.html","searchKeys":["BulkDeleteData","fun BulkDeleteData(ids: List<Snowflake>, channelId: Snowflake, guildId: OptionalSnowflake = OptionalSnowflake.Missing)","dev.kord.common.entity.BulkDeleteData.BulkDeleteData"]},{"name":"fun ChannelArgument(name: String, value: Snowflake, focused: OptionalBoolean = OptionalBoolean.Missing)","description":"dev.kord.common.entity.CommandArgument.ChannelArgument.ChannelArgument","location":"common/dev.kord.common.entity/-command-argument/-channel-argument/-channel-argument.html","searchKeys":["ChannelArgument","fun ChannelArgument(name: String, value: Snowflake, focused: OptionalBoolean = OptionalBoolean.Missing)","dev.kord.common.entity.CommandArgument.ChannelArgument.ChannelArgument"]},{"name":"fun Color(red: Int, green: Int, blue: Int)","description":"dev.kord.common.Color.Color","location":"common/dev.kord.common/-color/-color.html","searchKeys":["Color","fun Color(red: Int, green: Int, blue: Int)","dev.kord.common.Color.Color"]},{"name":"fun Color(rgb: Int)","description":"dev.kord.common.Color.Color","location":"common/dev.kord.common/-color/-color.html","searchKeys":["Color","fun Color(rgb: Int)","dev.kord.common.Color.Color"]},{"name":"fun CommandArgument<*>.boolean(): Boolean","description":"dev.kord.common.entity.boolean","location":"common/dev.kord.common.entity/boolean.html","searchKeys":["boolean","fun CommandArgument<*>.boolean(): Boolean","dev.kord.common.entity.boolean"]},{"name":"fun CommandArgument<*>.int(): Long","description":"dev.kord.common.entity.int","location":"common/dev.kord.common.entity/int.html","searchKeys":["int","fun CommandArgument<*>.int(): Long","dev.kord.common.entity.int"]},{"name":"fun CommandArgument<*>.snowflake(): Snowflake","description":"dev.kord.common.entity.snowflake","location":"common/dev.kord.common.entity/snowflake.html","searchKeys":["snowflake","fun CommandArgument<*>.snowflake(): Snowflake","dev.kord.common.entity.snowflake"]},{"name":"fun CommandArgument<*>.string(): String","description":"dev.kord.common.entity.string","location":"common/dev.kord.common.entity/string.html","searchKeys":["string","fun CommandArgument<*>.string(): String","dev.kord.common.entity.string"]},{"name":"fun CommandGroup(name: String, options: Optional<List<SubCommand>> = Optional.Missing())","description":"dev.kord.common.entity.CommandGroup.CommandGroup","location":"common/dev.kord.common.entity/-command-group/-command-group.html","searchKeys":["CommandGroup","fun CommandGroup(name: String, options: Optional<List<SubCommand>> = Optional.Missing())","dev.kord.common.entity.CommandGroup.CommandGroup"]},{"name":"fun DeletedMessage(id: Snowflake, channelId: Snowflake, guildId: OptionalSnowflake = OptionalSnowflake.Missing)","description":"dev.kord.common.entity.DeletedMessage.DeletedMessage","location":"common/dev.kord.common.entity/-deleted-message/-deleted-message.html","searchKeys":["DeletedMessage","fun DeletedMessage(id: Snowflake, channelId: Snowflake, guildId: OptionalSnowflake = OptionalSnowflake.Missing)","dev.kord.common.entity.DeletedMessage.DeletedMessage"]},{"name":"fun DiscordActivity(name: String, type: ActivityType, url: Optional<String?> = Optional.Missing(), createdAt: Instant, timestamps: Optional<DiscordActivityTimestamps> = Optional.Missing(), applicationId: OptionalSnowflake = OptionalSnowflake.Missing, details: Optional<String?> = Optional.Missing(), state: Optional<String?> = Optional.Missing(), emoji: Optional<DiscordActivityEmoji?> = Optional.Missing(), party: Optional<DiscordActivityParty> = Optional.Missing(), assets: Optional<DiscordActivityAssets> = Optional.Missing(), secrets: Optional<DiscordActivitySecrets> = Optional.Missing(), instance: OptionalBoolean = OptionalBoolean.Missing, flags: Optional<ActivityFlags> = Optional.Missing(), buttons: Optional<List<String>> = Optional.Missing())","description":"dev.kord.common.entity.DiscordActivity.DiscordActivity","location":"common/dev.kord.common.entity/-discord-activity/-discord-activity.html","searchKeys":["DiscordActivity","fun DiscordActivity(name: String, type: ActivityType, url: Optional<String?> = Optional.Missing(), createdAt: Instant, timestamps: Optional<DiscordActivityTimestamps> = Optional.Missing(), applicationId: OptionalSnowflake = OptionalSnowflake.Missing, details: Optional<String?> = Optional.Missing(), state: Optional<String?> = Optional.Missing(), emoji: Optional<DiscordActivityEmoji?> = Optional.Missing(), party: Optional<DiscordActivityParty> = Optional.Missing(), assets: Optional<DiscordActivityAssets> = Optional.Missing(), secrets: Optional<DiscordActivitySecrets> = Optional.Missing(), instance: OptionalBoolean = OptionalBoolean.Missing, flags: Optional<ActivityFlags> = Optional.Missing(), buttons: Optional<List<String>> = Optional.Missing())","dev.kord.common.entity.DiscordActivity.DiscordActivity"]},{"name":"fun DiscordActivityAssets(largeImage: Optional<String> = Optional.Missing(), largeText: Optional<String> = Optional.Missing(), smallImage: Optional<String> = Optional.Missing(), smallText: Optional<String> = Optional.Missing())","description":"dev.kord.common.entity.DiscordActivityAssets.DiscordActivityAssets","location":"common/dev.kord.common.entity/-discord-activity-assets/-discord-activity-assets.html","searchKeys":["DiscordActivityAssets","fun DiscordActivityAssets(largeImage: Optional<String> = Optional.Missing(), largeText: Optional<String> = Optional.Missing(), smallImage: Optional<String> = Optional.Missing(), smallText: Optional<String> = Optional.Missing())","dev.kord.common.entity.DiscordActivityAssets.DiscordActivityAssets"]},{"name":"fun DiscordActivityEmoji(name: String, id: OptionalSnowflake = OptionalSnowflake.Missing, animated: OptionalBoolean = OptionalBoolean.Missing)","description":"dev.kord.common.entity.DiscordActivityEmoji.DiscordActivityEmoji","location":"common/dev.kord.common.entity/-discord-activity-emoji/-discord-activity-emoji.html","searchKeys":["DiscordActivityEmoji","fun DiscordActivityEmoji(name: String, id: OptionalSnowflake = OptionalSnowflake.Missing, animated: OptionalBoolean = OptionalBoolean.Missing)","dev.kord.common.entity.DiscordActivityEmoji.DiscordActivityEmoji"]},{"name":"fun DiscordActivityParty(id: Optional<String> = Optional.Missing(), size: Optional<DiscordActivityPartySize> = Optional.Missing())","description":"dev.kord.common.entity.DiscordActivityParty.DiscordActivityParty","location":"common/dev.kord.common.entity/-discord-activity-party/-discord-activity-party.html","searchKeys":["DiscordActivityParty","fun DiscordActivityParty(id: Optional<String> = Optional.Missing(), size: Optional<DiscordActivityPartySize> = Optional.Missing())","dev.kord.common.entity.DiscordActivityParty.DiscordActivityParty"]},{"name":"fun DiscordActivityPartySize(current: Int, maximum: Int)","description":"dev.kord.common.entity.DiscordActivityPartySize.DiscordActivityPartySize","location":"common/dev.kord.common.entity/-discord-activity-party-size/-discord-activity-party-size.html","searchKeys":["DiscordActivityPartySize","fun DiscordActivityPartySize(current: Int, maximum: Int)","dev.kord.common.entity.DiscordActivityPartySize.DiscordActivityPartySize"]},{"name":"fun DiscordActivitySecrets(join: Optional<String> = Optional.Missing(), spectate: Optional<String> = Optional.Missing(), match: Optional<String> = Optional.Missing())","description":"dev.kord.common.entity.DiscordActivitySecrets.DiscordActivitySecrets","location":"common/dev.kord.common.entity/-discord-activity-secrets/-discord-activity-secrets.html","searchKeys":["DiscordActivitySecrets","fun DiscordActivitySecrets(join: Optional<String> = Optional.Missing(), spectate: Optional<String> = Optional.Missing(), match: Optional<String> = Optional.Missing())","dev.kord.common.entity.DiscordActivitySecrets.DiscordActivitySecrets"]},{"name":"fun DiscordActivityTimestamps(start: Optional<Instant> = Optional.Missing(), end: Optional<Instant> = Optional.Missing())","description":"dev.kord.common.entity.DiscordActivityTimestamps.DiscordActivityTimestamps","location":"common/dev.kord.common.entity/-discord-activity-timestamps/-discord-activity-timestamps.html","searchKeys":["DiscordActivityTimestamps","fun DiscordActivityTimestamps(start: Optional<Instant> = Optional.Missing(), end: Optional<Instant> = Optional.Missing())","dev.kord.common.entity.DiscordActivityTimestamps.DiscordActivityTimestamps"]},{"name":"fun DiscordAddedGuildMember(user: Optional<DiscordUser> = Optional.Missing(), nick: Optional<String?> = Optional.Missing(), roles: List<Snowflake>, joinedAt: Instant, premiumSince: Optional<Instant?> = Optional.Missing(), deaf: Boolean, mute: Boolean, guildId: Snowflake, pending: OptionalBoolean = OptionalBoolean.Missing, avatar: Optional<String?> = Optional.Missing(), communicationDisabledUntil: Optional<Instant?> = Optional.Missing())","description":"dev.kord.common.entity.DiscordAddedGuildMember.DiscordAddedGuildMember","location":"common/dev.kord.common.entity/-discord-added-guild-member/-discord-added-guild-member.html","searchKeys":["DiscordAddedGuildMember","fun DiscordAddedGuildMember(user: Optional<DiscordUser> = Optional.Missing(), nick: Optional<String?> = Optional.Missing(), roles: List<Snowflake>, joinedAt: Instant, premiumSince: Optional<Instant?> = Optional.Missing(), deaf: Boolean, mute: Boolean, guildId: Snowflake, pending: OptionalBoolean = OptionalBoolean.Missing, avatar: Optional<String?> = Optional.Missing(), communicationDisabledUntil: Optional<Instant?> = Optional.Missing())","dev.kord.common.entity.DiscordAddedGuildMember.DiscordAddedGuildMember"]},{"name":"fun DiscordApplication(id: Snowflake, name: String, icon: String?, description: String, rpcOrigins: Optional<List<String>> = Optional.Missing(), botPublic: Boolean, botRequireCodeGrant: Boolean, termsOfServiceUrl: Optional<String> = Optional.Missing(), privacyPolicyUrl: Optional<String> = Optional.Missing(), owner: Optional<DiscordUser> = Optional.Missing(), verifyKey: String, team: DiscordTeam?, guildId: OptionalSnowflake = OptionalSnowflake.Missing, primarySkuId: OptionalSnowflake = OptionalSnowflake.Missing, slug: Optional<String> = Optional.Missing(), coverImage: Optional<String> = Optional.Missing(), flags: Optional<ApplicationFlags> = Optional.Missing(), tags: Optional<List<String>> = Optional.Missing(), installParams: Optional<InstallParams> = Optional.Missing(), customInstallUrl: Optional<String> = Optional.Missing())","description":"dev.kord.common.entity.DiscordApplication.DiscordApplication","location":"common/dev.kord.common.entity/-discord-application/-discord-application.html","searchKeys":["DiscordApplication","fun DiscordApplication(id: Snowflake, name: String, icon: String?, description: String, rpcOrigins: Optional<List<String>> = Optional.Missing(), botPublic: Boolean, botRequireCodeGrant: Boolean, termsOfServiceUrl: Optional<String> = Optional.Missing(), privacyPolicyUrl: Optional<String> = Optional.Missing(), owner: Optional<DiscordUser> = Optional.Missing(), verifyKey: String, team: DiscordTeam?, guildId: OptionalSnowflake = OptionalSnowflake.Missing, primarySkuId: OptionalSnowflake = OptionalSnowflake.Missing, slug: Optional<String> = Optional.Missing(), coverImage: Optional<String> = Optional.Missing(), flags: Optional<ApplicationFlags> = Optional.Missing(), tags: Optional<List<String>> = Optional.Missing(), installParams: Optional<InstallParams> = Optional.Missing(), customInstallUrl: Optional<String> = Optional.Missing())","dev.kord.common.entity.DiscordApplication.DiscordApplication"]},{"name":"fun DiscordApplicationCommand(id: Snowflake, type: Optional<ApplicationCommandType> = Optional.Missing(), applicationId: Snowflake, name: String, nameLocalizations: Optional<Map<Locale, String>?> = Optional.Missing(), description: String?, descriptionLocalizations: Optional<Map<Locale, String>?> = Optional.Missing(), guildId: OptionalSnowflake = OptionalSnowflake.Missing, options: Optional<List<ApplicationCommandOption>> = Optional.Missing(), defaultMemberPermissions: Permissions?, dmPermission: OptionalBoolean = OptionalBoolean.Missing, defaultPermission: OptionalBoolean? = OptionalBoolean.Missing, version: Snowflake)","description":"dev.kord.common.entity.DiscordApplicationCommand.DiscordApplicationCommand","location":"common/dev.kord.common.entity/-discord-application-command/-discord-application-command.html","searchKeys":["DiscordApplicationCommand","fun DiscordApplicationCommand(id: Snowflake, type: Optional<ApplicationCommandType> = Optional.Missing(), applicationId: Snowflake, name: String, nameLocalizations: Optional<Map<Locale, String>?> = Optional.Missing(), description: String?, descriptionLocalizations: Optional<Map<Locale, String>?> = Optional.Missing(), guildId: OptionalSnowflake = OptionalSnowflake.Missing, options: Optional<List<ApplicationCommandOption>> = Optional.Missing(), defaultMemberPermissions: Permissions?, dmPermission: OptionalBoolean = OptionalBoolean.Missing, defaultPermission: OptionalBoolean? = OptionalBoolean.Missing, version: Snowflake)","dev.kord.common.entity.DiscordApplicationCommand.DiscordApplicationCommand"]},{"name":"fun DiscordAttachment(id: Snowflake, filename: String, description: Optional<String> = Optional.Missing(), contentType: Optional<String> = Optional.Missing(), size: Int, url: String, proxyUrl: String, height: OptionalInt? = OptionalInt.Missing, width: OptionalInt? = OptionalInt.Missing, ephemeral: OptionalBoolean = OptionalBoolean.Missing)","description":"dev.kord.common.entity.DiscordAttachment.DiscordAttachment","location":"common/dev.kord.common.entity/-discord-attachment/-discord-attachment.html","searchKeys":["DiscordAttachment","fun DiscordAttachment(id: Snowflake, filename: String, description: Optional<String> = Optional.Missing(), contentType: Optional<String> = Optional.Missing(), size: Int, url: String, proxyUrl: String, height: OptionalInt? = OptionalInt.Missing, width: OptionalInt? = OptionalInt.Missing, ephemeral: OptionalBoolean = OptionalBoolean.Missing)","dev.kord.common.entity.DiscordAttachment.DiscordAttachment"]},{"name":"fun DiscordAuditLog(webhooks: List<DiscordWebhook>, users: List<DiscordUser>, applicationCommands: List<DiscordApplicationCommand>, auditLogEntries: List<DiscordAuditLogEntry>, autoModerationRules: List<DiscordAutoModerationRule>, integrations: List<DiscordPartialIntegration>, threads: List<DiscordChannel>)","description":"dev.kord.common.entity.DiscordAuditLog.DiscordAuditLog","location":"common/dev.kord.common.entity/-discord-audit-log/-discord-audit-log.html","searchKeys":["DiscordAuditLog","fun DiscordAuditLog(webhooks: List<DiscordWebhook>, users: List<DiscordUser>, applicationCommands: List<DiscordApplicationCommand>, auditLogEntries: List<DiscordAuditLogEntry>, autoModerationRules: List<DiscordAutoModerationRule>, integrations: List<DiscordPartialIntegration>, threads: List<DiscordChannel>)","dev.kord.common.entity.DiscordAuditLog.DiscordAuditLog"]},{"name":"fun DiscordAuditLogEntry(targetId: Snowflake?, changes: Optional<List<AuditLogChange<in Any?>>> = Optional.Missing(), userId: Snowflake, id: Snowflake, actionType: AuditLogEvent, options: Optional<AuditLogEntryOptionalInfo> = Optional.Missing(), reason: Optional<String> = Optional.Missing())","description":"dev.kord.common.entity.DiscordAuditLogEntry.DiscordAuditLogEntry","location":"common/dev.kord.common.entity/-discord-audit-log-entry/-discord-audit-log-entry.html","searchKeys":["DiscordAuditLogEntry","fun DiscordAuditLogEntry(targetId: Snowflake?, changes: Optional<List<AuditLogChange<in Any?>>> = Optional.Missing(), userId: Snowflake, id: Snowflake, actionType: AuditLogEvent, options: Optional<AuditLogEntryOptionalInfo> = Optional.Missing(), reason: Optional<String> = Optional.Missing())","dev.kord.common.entity.DiscordAuditLogEntry.DiscordAuditLogEntry"]},{"name":"fun DiscordAuditLogRoleChange(id: String, name: String? = null, color: Int? = null, hoist: Boolean? = null, position: Int? = null, permissions: Permissions? = null, managed: Boolean? = null, mentionable: Boolean? = null)","description":"dev.kord.common.entity.DiscordAuditLogRoleChange.DiscordAuditLogRoleChange","location":"common/dev.kord.common.entity/-discord-audit-log-role-change/-discord-audit-log-role-change.html","searchKeys":["DiscordAuditLogRoleChange","fun DiscordAuditLogRoleChange(id: String, name: String? = null, color: Int? = null, hoist: Boolean? = null, position: Int? = null, permissions: Permissions? = null, managed: Boolean? = null, mentionable: Boolean? = null)","dev.kord.common.entity.DiscordAuditLogRoleChange.DiscordAuditLogRoleChange"]},{"name":"fun DiscordAutoModerationAction(type: AutoModerationActionType, metadata: Optional<DiscordAutoModerationActionMetadata> = Optional.Missing())","description":"dev.kord.common.entity.DiscordAutoModerationAction.DiscordAutoModerationAction","location":"common/dev.kord.common.entity/-discord-auto-moderation-action/-discord-auto-moderation-action.html","searchKeys":["DiscordAutoModerationAction","fun DiscordAutoModerationAction(type: AutoModerationActionType, metadata: Optional<DiscordAutoModerationActionMetadata> = Optional.Missing())","dev.kord.common.entity.DiscordAutoModerationAction.DiscordAutoModerationAction"]},{"name":"fun DiscordAutoModerationActionMetadata(channelId: OptionalSnowflake = OptionalSnowflake.Missing, durationSeconds: Optional<DurationInSeconds> = Optional.Missing())","description":"dev.kord.common.entity.DiscordAutoModerationActionMetadata.DiscordAutoModerationActionMetadata","location":"common/dev.kord.common.entity/-discord-auto-moderation-action-metadata/-discord-auto-moderation-action-metadata.html","searchKeys":["DiscordAutoModerationActionMetadata","fun DiscordAutoModerationActionMetadata(channelId: OptionalSnowflake = OptionalSnowflake.Missing, durationSeconds: Optional<DurationInSeconds> = Optional.Missing())","dev.kord.common.entity.DiscordAutoModerationActionMetadata.DiscordAutoModerationActionMetadata"]},{"name":"fun DiscordAutoModerationRule(id: Snowflake, guildId: Snowflake, name: String, creatorId: Snowflake, eventType: AutoModerationRuleEventType, triggerType: AutoModerationRuleTriggerType, triggerMetadata: DiscordAutoModerationRuleTriggerMetadata, actions: List<DiscordAutoModerationAction>, enabled: Boolean, exemptRoles: List<Snowflake>, exemptChannels: List<Snowflake>)","description":"dev.kord.common.entity.DiscordAutoModerationRule.DiscordAutoModerationRule","location":"common/dev.kord.common.entity/-discord-auto-moderation-rule/-discord-auto-moderation-rule.html","searchKeys":["DiscordAutoModerationRule","fun DiscordAutoModerationRule(id: Snowflake, guildId: Snowflake, name: String, creatorId: Snowflake, eventType: AutoModerationRuleEventType, triggerType: AutoModerationRuleTriggerType, triggerMetadata: DiscordAutoModerationRuleTriggerMetadata, actions: List<DiscordAutoModerationAction>, enabled: Boolean, exemptRoles: List<Snowflake>, exemptChannels: List<Snowflake>)","dev.kord.common.entity.DiscordAutoModerationRule.DiscordAutoModerationRule"]},{"name":"fun DiscordAutoModerationRuleTriggerMetadata(keywordFilter: Optional<List<String>> = Optional.Missing(), regexPatterns: Optional<List<String>> = Optional.Missing(), presets: Optional<List<AutoModerationRuleKeywordPresetType>> = Optional.Missing(), allowList: Optional<List<String>> = Optional.Missing(), mentionTotalLimit: OptionalInt = OptionalInt.Missing)","description":"dev.kord.common.entity.DiscordAutoModerationRuleTriggerMetadata.DiscordAutoModerationRuleTriggerMetadata","location":"common/dev.kord.common.entity/-discord-auto-moderation-rule-trigger-metadata/-discord-auto-moderation-rule-trigger-metadata.html","searchKeys":["DiscordAutoModerationRuleTriggerMetadata","fun DiscordAutoModerationRuleTriggerMetadata(keywordFilter: Optional<List<String>> = Optional.Missing(), regexPatterns: Optional<List<String>> = Optional.Missing(), presets: Optional<List<AutoModerationRuleKeywordPresetType>> = Optional.Missing(), allowList: Optional<List<String>> = Optional.Missing(), mentionTotalLimit: OptionalInt = OptionalInt.Missing)","dev.kord.common.entity.DiscordAutoModerationRuleTriggerMetadata.DiscordAutoModerationRuleTriggerMetadata"]},{"name":"fun DiscordBitSet(data: LongArray)","description":"dev.kord.common.DiscordBitSet.DiscordBitSet","location":"common/dev.kord.common/-discord-bit-set/-discord-bit-set.html","searchKeys":["DiscordBitSet","fun DiscordBitSet(data: LongArray)","dev.kord.common.DiscordBitSet.DiscordBitSet"]},{"name":"fun DiscordBitSet(value: String): DiscordBitSet","description":"dev.kord.common.DiscordBitSet","location":"common/dev.kord.common/-discord-bit-set.html","searchKeys":["DiscordBitSet","fun DiscordBitSet(value: String): DiscordBitSet","dev.kord.common.DiscordBitSet"]},{"name":"fun DiscordBitSet(vararg widths: Long): DiscordBitSet","description":"dev.kord.common.DiscordBitSet","location":"common/dev.kord.common/-discord-bit-set.html","searchKeys":["DiscordBitSet","fun DiscordBitSet(vararg widths: Long): DiscordBitSet","dev.kord.common.DiscordBitSet"]},{"name":"fun DiscordBotActivity(name: String, type: ActivityType, url: Optional<String?> = Optional.Missing())","description":"dev.kord.common.entity.DiscordBotActivity.DiscordBotActivity","location":"common/dev.kord.common.entity/-discord-bot-activity/-discord-bot-activity.html","searchKeys":["DiscordBotActivity","fun DiscordBotActivity(name: String, type: ActivityType, url: Optional<String?> = Optional.Missing())","dev.kord.common.entity.DiscordBotActivity.DiscordBotActivity"]},{"name":"fun DiscordChannel(id: Snowflake, type: ChannelType, guildId: OptionalSnowflake = OptionalSnowflake.Missing, position: OptionalInt = OptionalInt.Missing, permissionOverwrites: Optional<List<Overwrite>> = Optional.Missing(), name: Optional<String?> = Optional.Missing(), topic: Optional<String?> = Optional.Missing(), nsfw: OptionalBoolean = OptionalBoolean.Missing, lastMessageId: OptionalSnowflake? = OptionalSnowflake.Missing, bitrate: OptionalInt = OptionalInt.Missing, userLimit: OptionalInt = OptionalInt.Missing, rateLimitPerUser: Optional<DurationInSeconds> = Optional.Missing(), recipients: Optional<List<DiscordUser>> = Optional.Missing(), icon: Optional<String?> = Optional.Missing(), ownerId: OptionalSnowflake = OptionalSnowflake.Missing, applicationId: OptionalSnowflake = OptionalSnowflake.Missing, parentId: OptionalSnowflake? = OptionalSnowflake.Missing, lastPinTimestamp: Optional<Instant?> = Optional.Missing(), rtcRegion: Optional<String?> = Optional.Missing(), videoQualityMode: Optional<VideoQualityMode> = Optional.Missing(), permissions: Optional<Permissions> = Optional.Missing(), messageCount: OptionalInt = OptionalInt.Missing, memberCount: OptionalInt = OptionalInt.Missing, threadMetadata: Optional<DiscordThreadMetadata> = Optional.Missing(), defaultAutoArchiveDuration: Optional<ArchiveDuration> = Optional.Missing(), member: Optional<DiscordThreadMember> = Optional.Missing())","description":"dev.kord.common.entity.DiscordChannel.DiscordChannel","location":"common/dev.kord.common.entity/-discord-channel/-discord-channel.html","searchKeys":["DiscordChannel","fun DiscordChannel(id: Snowflake, type: ChannelType, guildId: OptionalSnowflake = OptionalSnowflake.Missing, position: OptionalInt = OptionalInt.Missing, permissionOverwrites: Optional<List<Overwrite>> = Optional.Missing(), name: Optional<String?> = Optional.Missing(), topic: Optional<String?> = Optional.Missing(), nsfw: OptionalBoolean = OptionalBoolean.Missing, lastMessageId: OptionalSnowflake? = OptionalSnowflake.Missing, bitrate: OptionalInt = OptionalInt.Missing, userLimit: OptionalInt = OptionalInt.Missing, rateLimitPerUser: Optional<DurationInSeconds> = Optional.Missing(), recipients: Optional<List<DiscordUser>> = Optional.Missing(), icon: Optional<String?> = Optional.Missing(), ownerId: OptionalSnowflake = OptionalSnowflake.Missing, applicationId: OptionalSnowflake = OptionalSnowflake.Missing, parentId: OptionalSnowflake? = OptionalSnowflake.Missing, lastPinTimestamp: Optional<Instant?> = Optional.Missing(), rtcRegion: Optional<String?> = Optional.Missing(), videoQualityMode: Optional<VideoQualityMode> = Optional.Missing(), permissions: Optional<Permissions> = Optional.Missing(), messageCount: OptionalInt = OptionalInt.Missing, memberCount: OptionalInt = OptionalInt.Missing, threadMetadata: Optional<DiscordThreadMetadata> = Optional.Missing(), defaultAutoArchiveDuration: Optional<ArchiveDuration> = Optional.Missing(), member: Optional<DiscordThreadMember> = Optional.Missing())","dev.kord.common.entity.DiscordChannel.DiscordChannel"]},{"name":"fun DiscordChatComponent(type: ComponentType, style: Optional<ButtonStyle> = Optional.Missing(), label: Optional<String> = Optional.Missing(), emoji: Optional<DiscordPartialEmoji> = Optional.Missing(), customId: Optional<String> = Optional.Missing(), url: Optional<String> = Optional.Missing(), disabled: OptionalBoolean = OptionalBoolean.Missing, components: Optional<List<DiscordComponent>> = Optional.Missing(), options: Optional<List<DiscordSelectOption>> = Optional.Missing(), placeholder: Optional<String> = Optional.Missing(), minValues: OptionalInt = OptionalInt.Missing, maxValues: OptionalInt = OptionalInt.Missing, minLength: OptionalInt = OptionalInt.Missing, maxLength: OptionalInt = OptionalInt.Missing, required: OptionalBoolean = OptionalBoolean.Missing, value: Optional<String> = Optional.Missing())","description":"dev.kord.common.entity.DiscordChatComponent.DiscordChatComponent","location":"common/dev.kord.common.entity/-discord-chat-component/-discord-chat-component.html","searchKeys":["DiscordChatComponent","fun DiscordChatComponent(type: ComponentType, style: Optional<ButtonStyle> = Optional.Missing(), label: Optional<String> = Optional.Missing(), emoji: Optional<DiscordPartialEmoji> = Optional.Missing(), customId: Optional<String> = Optional.Missing(), url: Optional<String> = Optional.Missing(), disabled: OptionalBoolean = OptionalBoolean.Missing, components: Optional<List<DiscordComponent>> = Optional.Missing(), options: Optional<List<DiscordSelectOption>> = Optional.Missing(), placeholder: Optional<String> = Optional.Missing(), minValues: OptionalInt = OptionalInt.Missing, maxValues: OptionalInt = OptionalInt.Missing, minLength: OptionalInt = OptionalInt.Missing, maxLength: OptionalInt = OptionalInt.Missing, required: OptionalBoolean = OptionalBoolean.Missing, value: Optional<String> = Optional.Missing())","dev.kord.common.entity.DiscordChatComponent.DiscordChatComponent"]},{"name":"fun DiscordClientStatus(desktop: Optional<PresenceStatus> = Optional.Missing(), mobile: Optional<PresenceStatus> = Optional.Missing(), web: Optional<PresenceStatus> = Optional.Missing())","description":"dev.kord.common.entity.DiscordClientStatus.DiscordClientStatus","location":"common/dev.kord.common.entity/-discord-client-status/-discord-client-status.html","searchKeys":["DiscordClientStatus","fun DiscordClientStatus(desktop: Optional<PresenceStatus> = Optional.Missing(), mobile: Optional<PresenceStatus> = Optional.Missing(), web: Optional<PresenceStatus> = Optional.Missing())","dev.kord.common.entity.DiscordClientStatus.DiscordClientStatus"]},{"name":"fun DiscordConnection(id: String, name: String, type: String, revoked: OptionalBoolean = OptionalBoolean.Missing, integrations: Optional<List<DiscordIntegration>> = Optional.Missing(), verified: Boolean, friendSync: Boolean, showActivity: Boolean, visibility: DiscordConnectionVisibility)","description":"dev.kord.common.entity.DiscordConnection.DiscordConnection","location":"common/dev.kord.common.entity/-discord-connection/-discord-connection.html","searchKeys":["DiscordConnection","fun DiscordConnection(id: String, name: String, type: String, revoked: OptionalBoolean = OptionalBoolean.Missing, integrations: Optional<List<DiscordIntegration>> = Optional.Missing(), verified: Boolean, friendSync: Boolean, showActivity: Boolean, visibility: DiscordConnectionVisibility)","dev.kord.common.entity.DiscordConnection.DiscordConnection"]},{"name":"fun DiscordDeletedGuildRole(guildId: Snowflake, id: Snowflake)","description":"dev.kord.common.entity.DiscordDeletedGuildRole.DiscordDeletedGuildRole","location":"common/dev.kord.common.entity/-discord-deleted-guild-role/-discord-deleted-guild-role.html","searchKeys":["DiscordDeletedGuildRole","fun DiscordDeletedGuildRole(guildId: Snowflake, id: Snowflake)","dev.kord.common.entity.DiscordDeletedGuildRole.DiscordDeletedGuildRole"]},{"name":"fun DiscordEmbed(title: Optional<String> = Optional.Missing(), type: Optional<EmbedType> = Optional.Missing(), description: Optional<String> = Optional.Missing(), url: Optional<String> = Optional.Missing(), timestamp: Optional<Instant> = Optional.Missing(), color: OptionalInt = OptionalInt.Missing, footer: Optional<DiscordEmbed.Footer> = Optional.Missing(), image: Optional<DiscordEmbed.Image> = Optional.Missing(), thumbnail: Optional<DiscordEmbed.Thumbnail> = Optional.Missing(), video: Optional<DiscordEmbed.Video> = Optional.Missing(), provider: Optional<DiscordEmbed.Provider> = Optional.Missing(), author: Optional<DiscordEmbed.Author> = Optional.Missing(), fields: Optional<List<DiscordEmbed.Field>> = Optional.Missing())","description":"dev.kord.common.entity.DiscordEmbed.DiscordEmbed","location":"common/dev.kord.common.entity/-discord-embed/-discord-embed.html","searchKeys":["DiscordEmbed","fun DiscordEmbed(title: Optional<String> = Optional.Missing(), type: Optional<EmbedType> = Optional.Missing(), description: Optional<String> = Optional.Missing(), url: Optional<String> = Optional.Missing(), timestamp: Optional<Instant> = Optional.Missing(), color: OptionalInt = OptionalInt.Missing, footer: Optional<DiscordEmbed.Footer> = Optional.Missing(), image: Optional<DiscordEmbed.Image> = Optional.Missing(), thumbnail: Optional<DiscordEmbed.Thumbnail> = Optional.Missing(), video: Optional<DiscordEmbed.Video> = Optional.Missing(), provider: Optional<DiscordEmbed.Provider> = Optional.Missing(), author: Optional<DiscordEmbed.Author> = Optional.Missing(), fields: Optional<List<DiscordEmbed.Field>> = Optional.Missing())","dev.kord.common.entity.DiscordEmbed.DiscordEmbed"]},{"name":"fun DiscordEmoji(id: Snowflake?, name: String?, roles: Optional<List<Snowflake>> = Optional.Missing(), user: Optional<DiscordUser> = Optional.Missing(), requireColons: OptionalBoolean = OptionalBoolean.Missing, managed: OptionalBoolean = OptionalBoolean.Missing, animated: OptionalBoolean = OptionalBoolean.Missing, available: OptionalBoolean = OptionalBoolean.Missing)","description":"dev.kord.common.entity.DiscordEmoji.DiscordEmoji","location":"common/dev.kord.common.entity/-discord-emoji/-discord-emoji.html","searchKeys":["DiscordEmoji","fun DiscordEmoji(id: Snowflake?, name: String?, roles: Optional<List<Snowflake>> = Optional.Missing(), user: Optional<DiscordUser> = Optional.Missing(), requireColons: OptionalBoolean = OptionalBoolean.Missing, managed: OptionalBoolean = OptionalBoolean.Missing, animated: OptionalBoolean = OptionalBoolean.Missing, available: OptionalBoolean = OptionalBoolean.Missing)","dev.kord.common.entity.DiscordEmoji.DiscordEmoji"]},{"name":"fun DiscordGuild(id: Snowflake, name: String, icon: String?, iconHash: Optional<String?> = Optional.Missing(), splash: Optional<String?> = Optional.Missing(), discoverySplash: Optional<String?> = Optional.Missing(), owner: OptionalBoolean = OptionalBoolean.Missing, ownerId: Snowflake, permissions: Optional<Permissions> = Optional.Missing(), region: String, afkChannelId: Snowflake?, afkTimeout: DurationInSeconds, widgetEnabled: OptionalBoolean = OptionalBoolean.Missing, widgetChannelId: OptionalSnowflake? = OptionalSnowflake.Missing, verificationLevel: VerificationLevel, defaultMessageNotifications: DefaultMessageNotificationLevel, explicitContentFilter: ExplicitContentFilter, roles: List<DiscordRole>, emojis: List<DiscordEmoji>, features: List<GuildFeature>, mfaLevel: MFALevel, applicationId: Snowflake?, systemChannelId: Snowflake?, systemChannelFlags: SystemChannelFlags, rulesChannelId: Snowflake?, joinedAt: Optional<Instant> = Optional.Missing(), large: OptionalBoolean = OptionalBoolean.Missing, unavailable: OptionalBoolean = OptionalBoolean.Missing, memberCount: OptionalInt = OptionalInt.Missing, voiceStates: Optional<List<DiscordVoiceState>> = Optional.Missing(), members: Optional<List<DiscordGuildMember>> = Optional.Missing(), channels: Optional<List<DiscordChannel>> = Optional.Missing(), threads: Optional<List<DiscordChannel>> = Optional.Missing(), presences: Optional<List<DiscordPresenceUpdate>> = Optional.Missing(), maxPresences: OptionalInt? = OptionalInt.Missing, maxMembers: OptionalInt = OptionalInt.Missing, vanityUrlCode: String?, description: String?, banner: String?, premiumTier: PremiumTier, premiumSubscriptionCount: OptionalInt = OptionalInt.Missing, preferredLocale: String, publicUpdatesChannelId: Snowflake?, maxVideoChannelUsers: OptionalInt = OptionalInt.Missing, approximateMemberCount: OptionalInt = OptionalInt.Missing, approximatePresenceCount: OptionalInt = OptionalInt.Missing, welcomeScreen: Optional<DiscordWelcomeScreen> = Optional.Missing(), nsfwLevel: NsfwLevel, stageInstances: Optional<List<DiscordStageInstance>> = Optional.Missing(), stickers: Optional<List<DiscordMessageSticker>> = Optional.Missing(), guildScheduledEvents: Optional<List<DiscordGuildScheduledEvent>> = Optional.Missing(), premiumProgressBarEnabled: Boolean)","description":"dev.kord.common.entity.DiscordGuild.DiscordGuild","location":"common/dev.kord.common.entity/-discord-guild/-discord-guild.html","searchKeys":["DiscordGuild","fun DiscordGuild(id: Snowflake, name: String, icon: String?, iconHash: Optional<String?> = Optional.Missing(), splash: Optional<String?> = Optional.Missing(), discoverySplash: Optional<String?> = Optional.Missing(), owner: OptionalBoolean = OptionalBoolean.Missing, ownerId: Snowflake, permissions: Optional<Permissions> = Optional.Missing(), region: String, afkChannelId: Snowflake?, afkTimeout: DurationInSeconds, widgetEnabled: OptionalBoolean = OptionalBoolean.Missing, widgetChannelId: OptionalSnowflake? = OptionalSnowflake.Missing, verificationLevel: VerificationLevel, defaultMessageNotifications: DefaultMessageNotificationLevel, explicitContentFilter: ExplicitContentFilter, roles: List<DiscordRole>, emojis: List<DiscordEmoji>, features: List<GuildFeature>, mfaLevel: MFALevel, applicationId: Snowflake?, systemChannelId: Snowflake?, systemChannelFlags: SystemChannelFlags, rulesChannelId: Snowflake?, joinedAt: Optional<Instant> = Optional.Missing(), large: OptionalBoolean = OptionalBoolean.Missing, unavailable: OptionalBoolean = OptionalBoolean.Missing, memberCount: OptionalInt = OptionalInt.Missing, voiceStates: Optional<List<DiscordVoiceState>> = Optional.Missing(), members: Optional<List<DiscordGuildMember>> = Optional.Missing(), channels: Optional<List<DiscordChannel>> = Optional.Missing(), threads: Optional<List<DiscordChannel>> = Optional.Missing(), presences: Optional<List<DiscordPresenceUpdate>> = Optional.Missing(), maxPresences: OptionalInt? = OptionalInt.Missing, maxMembers: OptionalInt = OptionalInt.Missing, vanityUrlCode: String?, description: String?, banner: String?, premiumTier: PremiumTier, premiumSubscriptionCount: OptionalInt = OptionalInt.Missing, preferredLocale: String, publicUpdatesChannelId: Snowflake?, maxVideoChannelUsers: OptionalInt = OptionalInt.Missing, approximateMemberCount: OptionalInt = OptionalInt.Missing, approximatePresenceCount: OptionalInt = OptionalInt.Missing, welcomeScreen: Optional<DiscordWelcomeScreen> = Optional.Missing(), nsfwLevel: NsfwLevel, stageInstances: Optional<List<DiscordStageInstance>> = Optional.Missing(), stickers: Optional<List<DiscordMessageSticker>> = Optional.Missing(), guildScheduledEvents: Optional<List<DiscordGuildScheduledEvent>> = Optional.Missing(), premiumProgressBarEnabled: Boolean)","dev.kord.common.entity.DiscordGuild.DiscordGuild"]},{"name":"fun DiscordGuildApplicationCommandPermission(id: Snowflake, type: ApplicationCommandPermissionType, permission: Boolean)","description":"dev.kord.common.entity.DiscordGuildApplicationCommandPermission.DiscordGuildApplicationCommandPermission","location":"common/dev.kord.common.entity/-discord-guild-application-command-permission/-discord-guild-application-command-permission.html","searchKeys":["DiscordGuildApplicationCommandPermission","fun DiscordGuildApplicationCommandPermission(id: Snowflake, type: ApplicationCommandPermissionType, permission: Boolean)","dev.kord.common.entity.DiscordGuildApplicationCommandPermission.DiscordGuildApplicationCommandPermission"]},{"name":"fun DiscordGuildApplicationCommandPermission(id: Snowflake, type: DiscordGuildApplicationCommandPermission.Type, permission: Boolean)","description":"dev.kord.common.entity.DiscordGuildApplicationCommandPermission.DiscordGuildApplicationCommandPermission","location":"common/dev.kord.common.entity/-discord-guild-application-command-permission/-discord-guild-application-command-permission.html","searchKeys":["DiscordGuildApplicationCommandPermission","fun DiscordGuildApplicationCommandPermission(id: Snowflake, type: DiscordGuildApplicationCommandPermission.Type, permission: Boolean)","dev.kord.common.entity.DiscordGuildApplicationCommandPermission.DiscordGuildApplicationCommandPermission"]},{"name":"fun DiscordGuildApplicationCommandPermissions(id: Snowflake, applicationId: Snowflake, guildId: Snowflake, permissions: List<DiscordGuildApplicationCommandPermission>)","description":"dev.kord.common.entity.DiscordGuildApplicationCommandPermissions.DiscordGuildApplicationCommandPermissions","location":"common/dev.kord.common.entity/-discord-guild-application-command-permissions/-discord-guild-application-command-permissions.html","searchKeys":["DiscordGuildApplicationCommandPermissions","fun DiscordGuildApplicationCommandPermissions(id: Snowflake, applicationId: Snowflake, guildId: Snowflake, permissions: List<DiscordGuildApplicationCommandPermission>)","dev.kord.common.entity.DiscordGuildApplicationCommandPermissions.DiscordGuildApplicationCommandPermissions"]},{"name":"fun DiscordGuildBan(guildId: Snowflake, user: DiscordUser)","description":"dev.kord.common.entity.DiscordGuildBan.DiscordGuildBan","location":"common/dev.kord.common.entity/-discord-guild-ban/-discord-guild-ban.html","searchKeys":["DiscordGuildBan","fun DiscordGuildBan(guildId: Snowflake, user: DiscordUser)","dev.kord.common.entity.DiscordGuildBan.DiscordGuildBan"]},{"name":"fun DiscordGuildIntegrations(guildId: Snowflake)","description":"dev.kord.common.entity.DiscordGuildIntegrations.DiscordGuildIntegrations","location":"common/dev.kord.common.entity/-discord-guild-integrations/-discord-guild-integrations.html","searchKeys":["DiscordGuildIntegrations","fun DiscordGuildIntegrations(guildId: Snowflake)","dev.kord.common.entity.DiscordGuildIntegrations.DiscordGuildIntegrations"]},{"name":"fun DiscordGuildMember(user: Optional<DiscordUser> = Optional.Missing(), nick: Optional<String?> = Optional.Missing(), roles: List<Snowflake>, joinedAt: Instant, premiumSince: Optional<Instant?> = Optional.Missing(), deaf: OptionalBoolean = OptionalBoolean.Missing, mute: OptionalBoolean = OptionalBoolean.Missing, pending: OptionalBoolean = OptionalBoolean.Missing, avatar: Optional<String?> = Optional.Missing(), communicationDisabledUntil: Optional<Instant?> = Optional.Missing())","description":"dev.kord.common.entity.DiscordGuildMember.DiscordGuildMember","location":"common/dev.kord.common.entity/-discord-guild-member/-discord-guild-member.html","searchKeys":["DiscordGuildMember","fun DiscordGuildMember(user: Optional<DiscordUser> = Optional.Missing(), nick: Optional<String?> = Optional.Missing(), roles: List<Snowflake>, joinedAt: Instant, premiumSince: Optional<Instant?> = Optional.Missing(), deaf: OptionalBoolean = OptionalBoolean.Missing, mute: OptionalBoolean = OptionalBoolean.Missing, pending: OptionalBoolean = OptionalBoolean.Missing, avatar: Optional<String?> = Optional.Missing(), communicationDisabledUntil: Optional<Instant?> = Optional.Missing())","dev.kord.common.entity.DiscordGuildMember.DiscordGuildMember"]},{"name":"fun DiscordGuildPreview(id: Snowflake, name: String, icon: String?, splash: String?, discoverySplash: String?, emojis: List<DiscordEmoji>, features: List<GuildFeature>, approximateMemberCount: Int, approximatePresenceCount: Int, description: String?, stickers: List<DiscordMessageSticker>)","description":"dev.kord.common.entity.DiscordGuildPreview.DiscordGuildPreview","location":"common/dev.kord.common.entity/-discord-guild-preview/-discord-guild-preview.html","searchKeys":["DiscordGuildPreview","fun DiscordGuildPreview(id: Snowflake, name: String, icon: String?, splash: String?, discoverySplash: String?, emojis: List<DiscordEmoji>, features: List<GuildFeature>, approximateMemberCount: Int, approximatePresenceCount: Int, description: String?, stickers: List<DiscordMessageSticker>)","dev.kord.common.entity.DiscordGuildPreview.DiscordGuildPreview"]},{"name":"fun DiscordGuildRole(guildId: Snowflake, role: DiscordRole)","description":"dev.kord.common.entity.DiscordGuildRole.DiscordGuildRole","location":"common/dev.kord.common.entity/-discord-guild-role/-discord-guild-role.html","searchKeys":["DiscordGuildRole","fun DiscordGuildRole(guildId: Snowflake, role: DiscordRole)","dev.kord.common.entity.DiscordGuildRole.DiscordGuildRole"]},{"name":"fun DiscordGuildScheduledEvent(id: Snowflake, guildId: Snowflake, channelId: Snowflake?, creatorId: OptionalSnowflake? = OptionalSnowflake.Missing, name: String, description: Optional<String?> = Optional.Missing(), scheduledStartTime: Instant, scheduledEndTime: Instant?, privacyLevel: GuildScheduledEventPrivacyLevel, status: GuildScheduledEventStatus, entityType: ScheduledEntityType, entityId: Snowflake?, entityMetadata: GuildScheduledEventEntityMetadata?, creator: Optional<DiscordUser> = Optional.Missing(), userCount: OptionalInt = OptionalInt.Missing, image: Optional<String?> = Optional.Missing())","description":"dev.kord.common.entity.DiscordGuildScheduledEvent.DiscordGuildScheduledEvent","location":"common/dev.kord.common.entity/-discord-guild-scheduled-event/-discord-guild-scheduled-event.html","searchKeys":["DiscordGuildScheduledEvent","fun DiscordGuildScheduledEvent(id: Snowflake, guildId: Snowflake, channelId: Snowflake?, creatorId: OptionalSnowflake? = OptionalSnowflake.Missing, name: String, description: Optional<String?> = Optional.Missing(), scheduledStartTime: Instant, scheduledEndTime: Instant?, privacyLevel: GuildScheduledEventPrivacyLevel, status: GuildScheduledEventStatus, entityType: ScheduledEntityType, entityId: Snowflake?, entityMetadata: GuildScheduledEventEntityMetadata?, creator: Optional<DiscordUser> = Optional.Missing(), userCount: OptionalInt = OptionalInt.Missing, image: Optional<String?> = Optional.Missing())","dev.kord.common.entity.DiscordGuildScheduledEvent.DiscordGuildScheduledEvent"]},{"name":"fun DiscordGuildWidget(enabled: Boolean, channelId: Snowflake?)","description":"dev.kord.common.entity.DiscordGuildWidget.DiscordGuildWidget","location":"common/dev.kord.common.entity/-discord-guild-widget/-discord-guild-widget.html","searchKeys":["DiscordGuildWidget","fun DiscordGuildWidget(enabled: Boolean, channelId: Snowflake?)","dev.kord.common.entity.DiscordGuildWidget.DiscordGuildWidget"]},{"name":"fun DiscordIntegration(id: Snowflake, name: String, type: String, enabled: Boolean, syncing: Boolean, roleId: Snowflake, enableEmoticons: OptionalBoolean = OptionalBoolean.Missing, expireBehavior: IntegrationExpireBehavior, expireGracePeriod: DurationInDays, user: DiscordUser, account: DiscordIntegrationsAccount, syncedAt: Instant, subscriberCount: Int, revoked: Boolean, application: IntegrationApplication)","description":"dev.kord.common.entity.DiscordIntegration.DiscordIntegration","location":"common/dev.kord.common.entity/-discord-integration/-discord-integration.html","searchKeys":["DiscordIntegration","fun DiscordIntegration(id: Snowflake, name: String, type: String, enabled: Boolean, syncing: Boolean, roleId: Snowflake, enableEmoticons: OptionalBoolean = OptionalBoolean.Missing, expireBehavior: IntegrationExpireBehavior, expireGracePeriod: DurationInDays, user: DiscordUser, account: DiscordIntegrationsAccount, syncedAt: Instant, subscriberCount: Int, revoked: Boolean, application: IntegrationApplication)","dev.kord.common.entity.DiscordIntegration.DiscordIntegration"]},{"name":"fun DiscordIntegrationAccount(id: String, name: String)","description":"dev.kord.common.entity.DiscordIntegrationAccount.DiscordIntegrationAccount","location":"common/dev.kord.common.entity/-discord-integration-account/-discord-integration-account.html","searchKeys":["DiscordIntegrationAccount","fun DiscordIntegrationAccount(id: String, name: String)","dev.kord.common.entity.DiscordIntegrationAccount.DiscordIntegrationAccount"]},{"name":"fun DiscordIntegrationsAccount(id: String, name: String)","description":"dev.kord.common.entity.DiscordIntegrationsAccount.DiscordIntegrationsAccount","location":"common/dev.kord.common.entity/-discord-integrations-account/-discord-integrations-account.html","searchKeys":["DiscordIntegrationsAccount","fun DiscordIntegrationsAccount(id: String, name: String)","dev.kord.common.entity.DiscordIntegrationsAccount.DiscordIntegrationsAccount"]},{"name":"fun DiscordInteraction(id: Snowflake, applicationId: Snowflake, type: InteractionType, data: InteractionCallbackData, guildId: OptionalSnowflake = OptionalSnowflake.Missing, channelId: Snowflake, member: Optional<DiscordInteractionGuildMember> = Optional.Missing(), user: Optional<DiscordUser> = Optional.Missing(), token: String, version: Int, message: Optional<DiscordMessage> = Optional.Missing(), appPermissions: Optional<Permissions> = Optional.Missing(), locale: Optional<Locale> = Optional.Missing(), guildLocale: Optional<Locale> = Optional.Missing())","description":"dev.kord.common.entity.DiscordInteraction.DiscordInteraction","location":"common/dev.kord.common.entity/-discord-interaction/-discord-interaction.html","searchKeys":["DiscordInteraction","fun DiscordInteraction(id: Snowflake, applicationId: Snowflake, type: InteractionType, data: InteractionCallbackData, guildId: OptionalSnowflake = OptionalSnowflake.Missing, channelId: Snowflake, member: Optional<DiscordInteractionGuildMember> = Optional.Missing(), user: Optional<DiscordUser> = Optional.Missing(), token: String, version: Int, message: Optional<DiscordMessage> = Optional.Missing(), appPermissions: Optional<Permissions> = Optional.Missing(), locale: Optional<Locale> = Optional.Missing(), guildLocale: Optional<Locale> = Optional.Missing())","dev.kord.common.entity.DiscordInteraction.DiscordInteraction"]},{"name":"fun DiscordInteractionGuildMember(user: Optional<DiscordUser> = Optional.Missing(), nick: Optional<String?> = Optional.Missing(), roles: List<Snowflake>, joinedAt: Instant, premiumSince: Optional<Instant?> = Optional.Missing(), permissions: Permissions, pending: OptionalBoolean = OptionalBoolean.Missing, avatar: Optional<String?> = Optional.Missing(), communicationDisabledUntil: Optional<Instant?> = Optional.Missing())","description":"dev.kord.common.entity.DiscordInteractionGuildMember.DiscordInteractionGuildMember","location":"common/dev.kord.common.entity/-discord-interaction-guild-member/-discord-interaction-guild-member.html","searchKeys":["DiscordInteractionGuildMember","fun DiscordInteractionGuildMember(user: Optional<DiscordUser> = Optional.Missing(), nick: Optional<String?> = Optional.Missing(), roles: List<Snowflake>, joinedAt: Instant, premiumSince: Optional<Instant?> = Optional.Missing(), permissions: Permissions, pending: OptionalBoolean = OptionalBoolean.Missing, avatar: Optional<String?> = Optional.Missing(), communicationDisabledUntil: Optional<Instant?> = Optional.Missing())","dev.kord.common.entity.DiscordInteractionGuildMember.DiscordInteractionGuildMember"]},{"name":"fun DiscordInvite(code: String, guild: Optional<DiscordPartialGuild> = Optional.Missing(), channel: DiscordChannel?, inviter: Optional<DiscordUser> = Optional.Missing(), targetType: Optional<InviteTargetType> = Optional.Missing(), targetUser: Optional<DiscordUser> = Optional.Missing(), targetApplication: Optional<DiscordPartialApplication> = Optional.Missing(), targetUserType: Optional<TargetUserType> = Optional.Missing(), approximatePresenceCount: OptionalInt = OptionalInt.Missing, approximateMemberCount: OptionalInt = OptionalInt.Missing, expiresAt: Optional<Instant?> = Optional.Missing(), stageInstance: Optional<DiscordStageInstance> = Optional.Missing(), guildScheduledEvent: Optional<DiscordGuildScheduledEvent> = Optional.Missing())","description":"dev.kord.common.entity.DiscordInvite.DiscordInvite","location":"common/dev.kord.common.entity/-discord-invite/-discord-invite.html","searchKeys":["DiscordInvite","fun DiscordInvite(code: String, guild: Optional<DiscordPartialGuild> = Optional.Missing(), channel: DiscordChannel?, inviter: Optional<DiscordUser> = Optional.Missing(), targetType: Optional<InviteTargetType> = Optional.Missing(), targetUser: Optional<DiscordUser> = Optional.Missing(), targetApplication: Optional<DiscordPartialApplication> = Optional.Missing(), targetUserType: Optional<TargetUserType> = Optional.Missing(), approximatePresenceCount: OptionalInt = OptionalInt.Missing, approximateMemberCount: OptionalInt = OptionalInt.Missing, expiresAt: Optional<Instant?> = Optional.Missing(), stageInstance: Optional<DiscordStageInstance> = Optional.Missing(), guildScheduledEvent: Optional<DiscordGuildScheduledEvent> = Optional.Missing())","dev.kord.common.entity.DiscordInvite.DiscordInvite"]},{"name":"fun DiscordInviteWithMetadata(code: String, guild: Optional<DiscordPartialGuild> = Optional.Missing(), channel: DiscordChannel?, inviter: Optional<DiscordUser> = Optional.Missing(), targetType: Optional<InviteTargetType> = Optional.Missing(), targetUser: Optional<DiscordUser> = Optional.Missing(), targetApplication: Optional<DiscordPartialApplication> = Optional.Missing(), approximatePresenceCount: OptionalInt = OptionalInt.Missing, approximateMemberCount: OptionalInt = OptionalInt.Missing, expiresAt: Optional<Instant?> = Optional.Missing(), guildScheduledEvent: Optional<DiscordGuildScheduledEvent> = Optional.Missing(), uses: Int, maxUses: Int, maxAge: DurationInSeconds, temporary: Boolean, createdAt: Instant)","description":"dev.kord.common.entity.DiscordInviteWithMetadata.DiscordInviteWithMetadata","location":"common/dev.kord.common.entity/-discord-invite-with-metadata/-discord-invite-with-metadata.html","searchKeys":["DiscordInviteWithMetadata","fun DiscordInviteWithMetadata(code: String, guild: Optional<DiscordPartialGuild> = Optional.Missing(), channel: DiscordChannel?, inviter: Optional<DiscordUser> = Optional.Missing(), targetType: Optional<InviteTargetType> = Optional.Missing(), targetUser: Optional<DiscordUser> = Optional.Missing(), targetApplication: Optional<DiscordPartialApplication> = Optional.Missing(), approximatePresenceCount: OptionalInt = OptionalInt.Missing, approximateMemberCount: OptionalInt = OptionalInt.Missing, expiresAt: Optional<Instant?> = Optional.Missing(), guildScheduledEvent: Optional<DiscordGuildScheduledEvent> = Optional.Missing(), uses: Int, maxUses: Int, maxAge: DurationInSeconds, temporary: Boolean, createdAt: Instant)","dev.kord.common.entity.DiscordInviteWithMetadata.DiscordInviteWithMetadata"]},{"name":"fun DiscordMentionedChannel(id: Snowflake, guildId: Snowflake, type: ChannelType, name: String)","description":"dev.kord.common.entity.DiscordMentionedChannel.DiscordMentionedChannel","location":"common/dev.kord.common.entity/-discord-mentioned-channel/-discord-mentioned-channel.html","searchKeys":["DiscordMentionedChannel","fun DiscordMentionedChannel(id: Snowflake, guildId: Snowflake, type: ChannelType, name: String)","dev.kord.common.entity.DiscordMentionedChannel.DiscordMentionedChannel"]},{"name":"fun DiscordMessage(id: Snowflake, channelId: Snowflake, guildId: OptionalSnowflake = OptionalSnowflake.Missing, author: DiscordUser, member: Optional<DiscordGuildMember> = Optional.Missing(), content: String, timestamp: Instant, editedTimestamp: Instant?, tts: Boolean, mentionEveryone: Boolean, mentions: List<DiscordOptionallyMemberUser>, mentionRoles: List<Snowflake>, mentionedChannels: Optional<List<DiscordMentionedChannel>> = Optional.Missing(), attachments: List<DiscordAttachment>, embeds: List<DiscordEmbed>, reactions: Optional<List<Reaction>> = Optional.Missing(), nonce: Optional<String> = Optional.Missing(), pinned: Boolean, webhookId: OptionalSnowflake = OptionalSnowflake.Missing, type: MessageType, activity: Optional<MessageActivity> = Optional.Missing(), application: Optional<MessageApplication> = Optional.Missing(), applicationId: OptionalSnowflake = OptionalSnowflake.Missing, messageReference: Optional<DiscordMessageReference> = Optional.Missing(), flags: Optional<MessageFlags> = Optional.Missing(), stickers: Optional<List<DiscordStickerItem>> = Optional.Missing(), referencedMessage: Optional<DiscordMessage?> = Optional.Missing(), components: Optional<List<DiscordComponent>> = Optional.Missing(), interaction: Optional<DiscordMessageInteraction> = Optional.Missing(), thread: Optional<DiscordChannel> = Optional.Missing())","description":"dev.kord.common.entity.DiscordMessage.DiscordMessage","location":"common/dev.kord.common.entity/-discord-message/-discord-message.html","searchKeys":["DiscordMessage","fun DiscordMessage(id: Snowflake, channelId: Snowflake, guildId: OptionalSnowflake = OptionalSnowflake.Missing, author: DiscordUser, member: Optional<DiscordGuildMember> = Optional.Missing(), content: String, timestamp: Instant, editedTimestamp: Instant?, tts: Boolean, mentionEveryone: Boolean, mentions: List<DiscordOptionallyMemberUser>, mentionRoles: List<Snowflake>, mentionedChannels: Optional<List<DiscordMentionedChannel>> = Optional.Missing(), attachments: List<DiscordAttachment>, embeds: List<DiscordEmbed>, reactions: Optional<List<Reaction>> = Optional.Missing(), nonce: Optional<String> = Optional.Missing(), pinned: Boolean, webhookId: OptionalSnowflake = OptionalSnowflake.Missing, type: MessageType, activity: Optional<MessageActivity> = Optional.Missing(), application: Optional<MessageApplication> = Optional.Missing(), applicationId: OptionalSnowflake = OptionalSnowflake.Missing, messageReference: Optional<DiscordMessageReference> = Optional.Missing(), flags: Optional<MessageFlags> = Optional.Missing(), stickers: Optional<List<DiscordStickerItem>> = Optional.Missing(), referencedMessage: Optional<DiscordMessage?> = Optional.Missing(), components: Optional<List<DiscordComponent>> = Optional.Missing(), interaction: Optional<DiscordMessageInteraction> = Optional.Missing(), thread: Optional<DiscordChannel> = Optional.Missing())","dev.kord.common.entity.DiscordMessage.DiscordMessage"]},{"name":"fun DiscordMessageInteraction(id: Snowflake, type: InteractionType, name: String, user: DiscordUser)","description":"dev.kord.common.entity.DiscordMessageInteraction.DiscordMessageInteraction","location":"common/dev.kord.common.entity/-discord-message-interaction/-discord-message-interaction.html","searchKeys":["DiscordMessageInteraction","fun DiscordMessageInteraction(id: Snowflake, type: InteractionType, name: String, user: DiscordUser)","dev.kord.common.entity.DiscordMessageInteraction.DiscordMessageInteraction"]},{"name":"fun DiscordMessageReference(id: OptionalSnowflake = OptionalSnowflake.Missing, channelId: OptionalSnowflake = OptionalSnowflake.Missing, guildId: OptionalSnowflake = OptionalSnowflake.Missing, failIfNotExists: OptionalBoolean = OptionalBoolean.Missing)","description":"dev.kord.common.entity.DiscordMessageReference.DiscordMessageReference","location":"common/dev.kord.common.entity/-discord-message-reference/-discord-message-reference.html","searchKeys":["DiscordMessageReference","fun DiscordMessageReference(id: OptionalSnowflake = OptionalSnowflake.Missing, channelId: OptionalSnowflake = OptionalSnowflake.Missing, guildId: OptionalSnowflake = OptionalSnowflake.Missing, failIfNotExists: OptionalBoolean = OptionalBoolean.Missing)","dev.kord.common.entity.DiscordMessageReference.DiscordMessageReference"]},{"name":"fun DiscordMessageSticker(id: Snowflake, packId: OptionalSnowflake = OptionalSnowflake.Missing, name: String, description: String?, tags: Optional<String> = Optional.Missing(), formatType: MessageStickerType, available: OptionalBoolean = OptionalBoolean.Missing, guildId: OptionalSnowflake = OptionalSnowflake.Missing, user: Optional<DiscordUser> = Optional.Missing(), sortValue: OptionalInt = OptionalInt.Missing)","description":"dev.kord.common.entity.DiscordMessageSticker.DiscordMessageSticker","location":"common/dev.kord.common.entity/-discord-message-sticker/-discord-message-sticker.html","searchKeys":["DiscordMessageSticker","fun DiscordMessageSticker(id: Snowflake, packId: OptionalSnowflake = OptionalSnowflake.Missing, name: String, description: String?, tags: Optional<String> = Optional.Missing(), formatType: MessageStickerType, available: OptionalBoolean = OptionalBoolean.Missing, guildId: OptionalSnowflake = OptionalSnowflake.Missing, user: Optional<DiscordUser> = Optional.Missing(), sortValue: OptionalInt = OptionalInt.Missing)","dev.kord.common.entity.DiscordMessageSticker.DiscordMessageSticker"]},{"name":"fun DiscordModal(title: String, customId: String, components: List<DiscordComponent>)","description":"dev.kord.common.entity.DiscordModal.DiscordModal","location":"common/dev.kord.common.entity/-discord-modal/-discord-modal.html","searchKeys":["DiscordModal","fun DiscordModal(title: String, customId: String, components: List<DiscordComponent>)","dev.kord.common.entity.DiscordModal.DiscordModal"]},{"name":"fun DiscordOptionallyMemberUser(id: Snowflake, username: String, discriminator: String, avatar: String?, bot: OptionalBoolean = OptionalBoolean.Missing, system: OptionalBoolean = OptionalBoolean.Missing, mfaEnabled: OptionalBoolean = OptionalBoolean.Missing, locale: Optional<String> = Optional.Missing(), verified: OptionalBoolean = OptionalBoolean.Missing, email: Optional<String?> = Optional.Missing(), flags: Optional<UserFlags> = Optional.Missing(), premiumType: Optional<UserPremium> = Optional.Missing(), publicFlags: Optional<UserFlags> = Optional.Missing(), member: Optional<DiscordGuildMember> = Optional.Missing())","description":"dev.kord.common.entity.DiscordOptionallyMemberUser.DiscordOptionallyMemberUser","location":"common/dev.kord.common.entity/-discord-optionally-member-user/-discord-optionally-member-user.html","searchKeys":["DiscordOptionallyMemberUser","fun DiscordOptionallyMemberUser(id: Snowflake, username: String, discriminator: String, avatar: String?, bot: OptionalBoolean = OptionalBoolean.Missing, system: OptionalBoolean = OptionalBoolean.Missing, mfaEnabled: OptionalBoolean = OptionalBoolean.Missing, locale: Optional<String> = Optional.Missing(), verified: OptionalBoolean = OptionalBoolean.Missing, email: Optional<String?> = Optional.Missing(), flags: Optional<UserFlags> = Optional.Missing(), premiumType: Optional<UserPremium> = Optional.Missing(), publicFlags: Optional<UserFlags> = Optional.Missing(), member: Optional<DiscordGuildMember> = Optional.Missing())","dev.kord.common.entity.DiscordOptionallyMemberUser.DiscordOptionallyMemberUser"]},{"name":"fun DiscordPartialApplication(id: Snowflake, name: String, icon: String?, description: String, rpcOrigins: Optional<List<String>> = Optional.Missing(), termsOfServiceUrl: Optional<String> = Optional.Missing(), privacyPolicyUrl: Optional<String> = Optional.Missing(), owner: Optional<DiscordUser> = Optional.Missing(), verifyKey: String, guildId: OptionalSnowflake = OptionalSnowflake.Missing, primarySkuId: OptionalSnowflake = OptionalSnowflake.Missing, slug: Optional<String> = Optional.Missing(), coverImage: Optional<String> = Optional.Missing(), flags: Optional<ApplicationFlags> = Optional.Missing(), tags: Optional<List<String>> = Optional.Missing(), installParams: Optional<InstallParams> = Optional.Missing(), customInstallUrl: Optional<String> = Optional.Missing())","description":"dev.kord.common.entity.DiscordPartialApplication.DiscordPartialApplication","location":"common/dev.kord.common.entity/-discord-partial-application/-discord-partial-application.html","searchKeys":["DiscordPartialApplication","fun DiscordPartialApplication(id: Snowflake, name: String, icon: String?, description: String, rpcOrigins: Optional<List<String>> = Optional.Missing(), termsOfServiceUrl: Optional<String> = Optional.Missing(), privacyPolicyUrl: Optional<String> = Optional.Missing(), owner: Optional<DiscordUser> = Optional.Missing(), verifyKey: String, guildId: OptionalSnowflake = OptionalSnowflake.Missing, primarySkuId: OptionalSnowflake = OptionalSnowflake.Missing, slug: Optional<String> = Optional.Missing(), coverImage: Optional<String> = Optional.Missing(), flags: Optional<ApplicationFlags> = Optional.Missing(), tags: Optional<List<String>> = Optional.Missing(), installParams: Optional<InstallParams> = Optional.Missing(), customInstallUrl: Optional<String> = Optional.Missing())","dev.kord.common.entity.DiscordPartialApplication.DiscordPartialApplication"]},{"name":"fun DiscordPartialEmoji(id: Snowflake? = null, name: String? = null, animated: OptionalBoolean = OptionalBoolean.Missing)","description":"dev.kord.common.entity.DiscordPartialEmoji.DiscordPartialEmoji","location":"common/dev.kord.common.entity/-discord-partial-emoji/-discord-partial-emoji.html","searchKeys":["DiscordPartialEmoji","fun DiscordPartialEmoji(id: Snowflake? = null, name: String? = null, animated: OptionalBoolean = OptionalBoolean.Missing)","dev.kord.common.entity.DiscordPartialEmoji.DiscordPartialEmoji"]},{"name":"fun DiscordPartialGuild(id: Snowflake, name: String, icon: String?, owner: OptionalBoolean = OptionalBoolean.Missing, permissions: Optional<Permissions> = Optional.Missing(), features: List<GuildFeature>, welcomeScreen: Optional<DiscordWelcomeScreen> = Optional.Missing(), vanityUrlCode: Optional<String?> = Optional.Missing(), description: Optional<String?> = Optional.Missing(), banner: Optional<String?> = Optional.Missing(), splash: Optional<String?> = Optional.Missing(), nsfwLevel: Optional<NsfwLevel> = Optional.Missing(), verificationLevel: Optional<VerificationLevel> = Optional.Missing(), stageInstances: Optional<List<DiscordStageInstance>> = Optional.Missing(), stickers: Optional<List<DiscordMessageSticker>> = Optional.Missing(), guildScheduledEvents: Optional<List<DiscordGuildScheduledEvent>> = Optional.Missing(), premiumProgressBarEnabled: OptionalBoolean = OptionalBoolean.Missing)","description":"dev.kord.common.entity.DiscordPartialGuild.DiscordPartialGuild","location":"common/dev.kord.common.entity/-discord-partial-guild/-discord-partial-guild.html","searchKeys":["DiscordPartialGuild","fun DiscordPartialGuild(id: Snowflake, name: String, icon: String?, owner: OptionalBoolean = OptionalBoolean.Missing, permissions: Optional<Permissions> = Optional.Missing(), features: List<GuildFeature>, welcomeScreen: Optional<DiscordWelcomeScreen> = Optional.Missing(), vanityUrlCode: Optional<String?> = Optional.Missing(), description: Optional<String?> = Optional.Missing(), banner: Optional<String?> = Optional.Missing(), splash: Optional<String?> = Optional.Missing(), nsfwLevel: Optional<NsfwLevel> = Optional.Missing(), verificationLevel: Optional<VerificationLevel> = Optional.Missing(), stageInstances: Optional<List<DiscordStageInstance>> = Optional.Missing(), stickers: Optional<List<DiscordMessageSticker>> = Optional.Missing(), guildScheduledEvents: Optional<List<DiscordGuildScheduledEvent>> = Optional.Missing(), premiumProgressBarEnabled: OptionalBoolean = OptionalBoolean.Missing)","dev.kord.common.entity.DiscordPartialGuild.DiscordPartialGuild"]},{"name":"fun DiscordPartialIntegration(id: Snowflake, name: String, type: String, account: DiscordIntegrationsAccount)","description":"dev.kord.common.entity.DiscordPartialIntegration.DiscordPartialIntegration","location":"common/dev.kord.common.entity/-discord-partial-integration/-discord-partial-integration.html","searchKeys":["DiscordPartialIntegration","fun DiscordPartialIntegration(id: Snowflake, name: String, type: String, account: DiscordIntegrationsAccount)","dev.kord.common.entity.DiscordPartialIntegration.DiscordPartialIntegration"]},{"name":"fun DiscordPartialInvite(code: String?, uses: Int)","description":"dev.kord.common.entity.DiscordPartialInvite.DiscordPartialInvite","location":"common/dev.kord.common.entity/-discord-partial-invite/-discord-partial-invite.html","searchKeys":["DiscordPartialInvite","fun DiscordPartialInvite(code: String?, uses: Int)","dev.kord.common.entity.DiscordPartialInvite.DiscordPartialInvite"]},{"name":"fun DiscordPartialMessage(id: Snowflake, channelId: Snowflake, guildId: OptionalSnowflake = OptionalSnowflake.Missing, author: Optional<DiscordUser> = Optional.Missing(), member: Optional<DiscordGuildMember> = Optional.Missing(), content: Optional<String> = Optional.Missing(), timestamp: Optional<Instant> = Optional.Missing(), editedTimestamp: Optional<Instant?> = Optional.Missing(), tts: OptionalBoolean = OptionalBoolean.Missing, mentionEveryone: OptionalBoolean = OptionalBoolean.Missing, mentions: Optional<List<DiscordOptionallyMemberUser>> = Optional.Missing(), mentionRoles: Optional<List<Snowflake>> = Optional.Missing(), mentionedChannels: Optional<List<DiscordMentionedChannel>> = Optional.Missing(), attachments: Optional<List<DiscordAttachment>> = Optional.Missing(), embeds: Optional<List<DiscordEmbed>> = Optional.Missing(), reactions: Optional<List<Reaction>> = Optional.Missing(), nonce: Optional<String> = Optional.Missing(), pinned: OptionalBoolean = OptionalBoolean.Missing, webhookId: OptionalSnowflake = OptionalSnowflake.Missing, type: Optional<MessageType> = Optional.Missing(), activity: Optional<MessageActivity> = Optional.Missing(), application: Optional<MessageApplication> = Optional.Missing(), messageReference: Optional<DiscordMessageReference> = Optional.Missing(), flags: Optional<MessageFlags> = Optional.Missing(), stickers: Optional<List<DiscordStickerItem>> = Optional.Missing(), referencedMessage: Optional<DiscordMessage?> = Optional.Missing(), interaction: Optional<DiscordMessageInteraction> = Optional.Missing())","description":"dev.kord.common.entity.DiscordPartialMessage.DiscordPartialMessage","location":"common/dev.kord.common.entity/-discord-partial-message/-discord-partial-message.html","searchKeys":["DiscordPartialMessage","fun DiscordPartialMessage(id: Snowflake, channelId: Snowflake, guildId: OptionalSnowflake = OptionalSnowflake.Missing, author: Optional<DiscordUser> = Optional.Missing(), member: Optional<DiscordGuildMember> = Optional.Missing(), content: Optional<String> = Optional.Missing(), timestamp: Optional<Instant> = Optional.Missing(), editedTimestamp: Optional<Instant?> = Optional.Missing(), tts: OptionalBoolean = OptionalBoolean.Missing, mentionEveryone: OptionalBoolean = OptionalBoolean.Missing, mentions: Optional<List<DiscordOptionallyMemberUser>> = Optional.Missing(), mentionRoles: Optional<List<Snowflake>> = Optional.Missing(), mentionedChannels: Optional<List<DiscordMentionedChannel>> = Optional.Missing(), attachments: Optional<List<DiscordAttachment>> = Optional.Missing(), embeds: Optional<List<DiscordEmbed>> = Optional.Missing(), reactions: Optional<List<Reaction>> = Optional.Missing(), nonce: Optional<String> = Optional.Missing(), pinned: OptionalBoolean = OptionalBoolean.Missing, webhookId: OptionalSnowflake = OptionalSnowflake.Missing, type: Optional<MessageType> = Optional.Missing(), activity: Optional<MessageActivity> = Optional.Missing(), application: Optional<MessageApplication> = Optional.Missing(), messageReference: Optional<DiscordMessageReference> = Optional.Missing(), flags: Optional<MessageFlags> = Optional.Missing(), stickers: Optional<List<DiscordStickerItem>> = Optional.Missing(), referencedMessage: Optional<DiscordMessage?> = Optional.Missing(), interaction: Optional<DiscordMessageInteraction> = Optional.Missing())","dev.kord.common.entity.DiscordPartialMessage.DiscordPartialMessage"]},{"name":"fun DiscordPartialRole(id: Snowflake, name: Optional<String> = Optional.Missing(), color: OptionalInt = OptionalInt.Missing, hoist: OptionalBoolean = OptionalBoolean.Missing, icon: Optional<String?> = Optional.Missing(), unicodeEmoji: Optional<String?> = Optional.Missing(), position: OptionalInt = OptionalInt.Missing, permissions: Optional<Permissions> = Optional.Missing(), managed: OptionalBoolean = OptionalBoolean.Missing, mentionable: OptionalBoolean = OptionalBoolean.Missing, tags: Optional<DiscordRoleTags> = Optional.Missing())","description":"dev.kord.common.entity.DiscordPartialRole.DiscordPartialRole","location":"common/dev.kord.common.entity/-discord-partial-role/-discord-partial-role.html","searchKeys":["DiscordPartialRole","fun DiscordPartialRole(id: Snowflake, name: Optional<String> = Optional.Missing(), color: OptionalInt = OptionalInt.Missing, hoist: OptionalBoolean = OptionalBoolean.Missing, icon: Optional<String?> = Optional.Missing(), unicodeEmoji: Optional<String?> = Optional.Missing(), position: OptionalInt = OptionalInt.Missing, permissions: Optional<Permissions> = Optional.Missing(), managed: OptionalBoolean = OptionalBoolean.Missing, mentionable: OptionalBoolean = OptionalBoolean.Missing, tags: Optional<DiscordRoleTags> = Optional.Missing())","dev.kord.common.entity.DiscordPartialRole.DiscordPartialRole"]},{"name":"fun DiscordPinsUpdateData(guildId: OptionalSnowflake = OptionalSnowflake.Missing, channelId: Snowflake, lastPinTimestamp: Optional<Instant?> = Optional.Missing())","description":"dev.kord.common.entity.DiscordPinsUpdateData.DiscordPinsUpdateData","location":"common/dev.kord.common.entity/-discord-pins-update-data/-discord-pins-update-data.html","searchKeys":["DiscordPinsUpdateData","fun DiscordPinsUpdateData(guildId: OptionalSnowflake = OptionalSnowflake.Missing, channelId: Snowflake, lastPinTimestamp: Optional<Instant?> = Optional.Missing())","dev.kord.common.entity.DiscordPinsUpdateData.DiscordPinsUpdateData"]},{"name":"fun DiscordPresenceUpdate(user: DiscordPresenceUser, guildId: OptionalSnowflake = OptionalSnowflake.Missing, status: PresenceStatus, activities: List<DiscordActivity>, clientStatus: DiscordClientStatus)","description":"dev.kord.common.entity.DiscordPresenceUpdate.DiscordPresenceUpdate","location":"common/dev.kord.common.entity/-discord-presence-update/-discord-presence-update.html","searchKeys":["DiscordPresenceUpdate","fun DiscordPresenceUpdate(user: DiscordPresenceUser, guildId: OptionalSnowflake = OptionalSnowflake.Missing, status: PresenceStatus, activities: List<DiscordActivity>, clientStatus: DiscordClientStatus)","dev.kord.common.entity.DiscordPresenceUpdate.DiscordPresenceUpdate"]},{"name":"fun DiscordPresenceUser(id: Snowflake, details: JsonObject)","description":"dev.kord.common.entity.DiscordPresenceUser.DiscordPresenceUser","location":"common/dev.kord.common.entity/-discord-presence-user/-discord-presence-user.html","searchKeys":["DiscordPresenceUser","fun DiscordPresenceUser(id: Snowflake, details: JsonObject)","dev.kord.common.entity.DiscordPresenceUser.DiscordPresenceUser"]},{"name":"fun DiscordRemovedGuildMember(guildId: Snowflake, user: DiscordUser)","description":"dev.kord.common.entity.DiscordRemovedGuildMember.DiscordRemovedGuildMember","location":"common/dev.kord.common.entity/-discord-removed-guild-member/-discord-removed-guild-member.html","searchKeys":["DiscordRemovedGuildMember","fun DiscordRemovedGuildMember(guildId: Snowflake, user: DiscordUser)","dev.kord.common.entity.DiscordRemovedGuildMember.DiscordRemovedGuildMember"]},{"name":"fun DiscordRole(id: Snowflake, name: String, color: Int, hoist: Boolean, icon: Optional<String?> = Optional.Missing(), unicodeEmoji: Optional<String?> = Optional.Missing(), position: Int, permissions: Permissions, managed: Boolean, mentionable: Boolean, tags: Optional<DiscordRoleTags> = Optional.Missing())","description":"dev.kord.common.entity.DiscordRole.DiscordRole","location":"common/dev.kord.common.entity/-discord-role/-discord-role.html","searchKeys":["DiscordRole","fun DiscordRole(id: Snowflake, name: String, color: Int, hoist: Boolean, icon: Optional<String?> = Optional.Missing(), unicodeEmoji: Optional<String?> = Optional.Missing(), position: Int, permissions: Permissions, managed: Boolean, mentionable: Boolean, tags: Optional<DiscordRoleTags> = Optional.Missing())","dev.kord.common.entity.DiscordRole.DiscordRole"]},{"name":"fun DiscordRoleTags(botId: OptionalSnowflake = OptionalSnowflake.Missing, integrationId: OptionalSnowflake = OptionalSnowflake.Missing, premiumSubscriber: Optional<DiscordNull?> = Optional.Missing())","description":"dev.kord.common.entity.DiscordRoleTags.DiscordRoleTags","location":"common/dev.kord.common.entity/-discord-role-tags/-discord-role-tags.html","searchKeys":["DiscordRoleTags","fun DiscordRoleTags(botId: OptionalSnowflake = OptionalSnowflake.Missing, integrationId: OptionalSnowflake = OptionalSnowflake.Missing, premiumSubscriber: Optional<DiscordNull?> = Optional.Missing())","dev.kord.common.entity.DiscordRoleTags.DiscordRoleTags"]},{"name":"fun DiscordSelectOption(label: String, value: String, description: Optional<String> = Optional.Missing(), emoji: Optional<DiscordPartialEmoji> = Optional.Missing(), default: OptionalBoolean = OptionalBoolean.Missing)","description":"dev.kord.common.entity.DiscordSelectOption.DiscordSelectOption","location":"common/dev.kord.common.entity/-discord-select-option/-discord-select-option.html","searchKeys":["DiscordSelectOption","fun DiscordSelectOption(label: String, value: String, description: Optional<String> = Optional.Missing(), emoji: Optional<DiscordPartialEmoji> = Optional.Missing(), default: OptionalBoolean = OptionalBoolean.Missing)","dev.kord.common.entity.DiscordSelectOption.DiscordSelectOption"]},{"name":"fun DiscordShard(index: Int, count: Int)","description":"dev.kord.common.entity.DiscordShard.DiscordShard","location":"common/dev.kord.common.entity/-discord-shard/-discord-shard.html","searchKeys":["DiscordShard","fun DiscordShard(index: Int, count: Int)","dev.kord.common.entity.DiscordShard.DiscordShard"]},{"name":"fun DiscordStageInstance(id: Snowflake, guildId: Snowflake, channelId: Snowflake, topic: String, privacyLevel: StageInstancePrivacyLevel, discoverableDisabled: Boolean, guildScheduledEventId: Snowflake?)","description":"dev.kord.common.entity.DiscordStageInstance.DiscordStageInstance","location":"common/dev.kord.common.entity/-discord-stage-instance/-discord-stage-instance.html","searchKeys":["DiscordStageInstance","fun DiscordStageInstance(id: Snowflake, guildId: Snowflake, channelId: Snowflake, topic: String, privacyLevel: StageInstancePrivacyLevel, discoverableDisabled: Boolean, guildScheduledEventId: Snowflake?)","dev.kord.common.entity.DiscordStageInstance.DiscordStageInstance"]},{"name":"fun DiscordStickerItem(id: Snowflake, name: String, formatType: MessageStickerType)","description":"dev.kord.common.entity.DiscordStickerItem.DiscordStickerItem","location":"common/dev.kord.common.entity/-discord-sticker-item/-discord-sticker-item.html","searchKeys":["DiscordStickerItem","fun DiscordStickerItem(id: Snowflake, name: String, formatType: MessageStickerType)","dev.kord.common.entity.DiscordStickerItem.DiscordStickerItem"]},{"name":"fun DiscordStickerPack(id: Snowflake, stickers: List<DiscordMessageSticker>, name: String, skuId: Snowflake, coverStickerId: OptionalSnowflake = OptionalSnowflake.Missing, description: String, bannerAssetId: Snowflake)","description":"dev.kord.common.entity.DiscordStickerPack.DiscordStickerPack","location":"common/dev.kord.common.entity/-discord-sticker-pack/-discord-sticker-pack.html","searchKeys":["DiscordStickerPack","fun DiscordStickerPack(id: Snowflake, stickers: List<DiscordMessageSticker>, name: String, skuId: Snowflake, coverStickerId: OptionalSnowflake = OptionalSnowflake.Missing, description: String, bannerAssetId: Snowflake)","dev.kord.common.entity.DiscordStickerPack.DiscordStickerPack"]},{"name":"fun DiscordTeam(icon: String?, id: Snowflake, members: List<DiscordTeamMember>, ownerUserId: Snowflake)","description":"dev.kord.common.entity.DiscordTeam.DiscordTeam","location":"common/dev.kord.common.entity/-discord-team/-discord-team.html","searchKeys":["DiscordTeam","fun DiscordTeam(icon: String?, id: Snowflake, members: List<DiscordTeamMember>, ownerUserId: Snowflake)","dev.kord.common.entity.DiscordTeam.DiscordTeam"]},{"name":"fun DiscordTeamMember(membershipState: TeamMembershipState, permissions: List<String>, teamId: Snowflake, user: DiscordUser)","description":"dev.kord.common.entity.DiscordTeamMember.DiscordTeamMember","location":"common/dev.kord.common.entity/-discord-team-member/-discord-team-member.html","searchKeys":["DiscordTeamMember","fun DiscordTeamMember(membershipState: TeamMembershipState, permissions: List<String>, teamId: Snowflake, user: DiscordUser)","dev.kord.common.entity.DiscordTeamMember.DiscordTeamMember"]},{"name":"fun DiscordTemplate(code: String, name: String, description: String?, usageCount: Int, creatorId: Snowflake, creator: DiscordUser, createdAt: Instant, updatedAt: Instant, sourceGuildId: Snowflake, serializedSourceGuild: DiscordPartialGuild, isDirty: Boolean?)","description":"dev.kord.common.entity.DiscordTemplate.DiscordTemplate","location":"common/dev.kord.common.entity/-discord-template/-discord-template.html","searchKeys":["DiscordTemplate","fun DiscordTemplate(code: String, name: String, description: String?, usageCount: Int, creatorId: Snowflake, creator: DiscordUser, createdAt: Instant, updatedAt: Instant, sourceGuildId: Snowflake, serializedSourceGuild: DiscordPartialGuild, isDirty: Boolean?)","dev.kord.common.entity.DiscordTemplate.DiscordTemplate"]},{"name":"fun DiscordTextInputComponent(type: ComponentType, style: Optional<TextInputStyle> = Optional.Missing(), label: Optional<String> = Optional.Missing(), emoji: Optional<DiscordPartialEmoji> = Optional.Missing(), customId: Optional<String> = Optional.Missing(), url: Optional<String> = Optional.Missing(), disabled: OptionalBoolean = OptionalBoolean.Missing, components: Optional<List<DiscordComponent>> = Optional.Missing(), options: Optional<List<DiscordSelectOption>> = Optional.Missing(), placeholder: Optional<String> = Optional.Missing(), minValues: OptionalInt = OptionalInt.Missing, maxValues: OptionalInt = OptionalInt.Missing, minLength: OptionalInt = OptionalInt.Missing, maxLength: OptionalInt = OptionalInt.Missing, required: OptionalBoolean = OptionalBoolean.Missing, value: Optional<String> = Optional.Missing())","description":"dev.kord.common.entity.DiscordTextInputComponent.DiscordTextInputComponent","location":"common/dev.kord.common.entity/-discord-text-input-component/-discord-text-input-component.html","searchKeys":["DiscordTextInputComponent","fun DiscordTextInputComponent(type: ComponentType, style: Optional<TextInputStyle> = Optional.Missing(), label: Optional<String> = Optional.Missing(), emoji: Optional<DiscordPartialEmoji> = Optional.Missing(), customId: Optional<String> = Optional.Missing(), url: Optional<String> = Optional.Missing(), disabled: OptionalBoolean = OptionalBoolean.Missing, components: Optional<List<DiscordComponent>> = Optional.Missing(), options: Optional<List<DiscordSelectOption>> = Optional.Missing(), placeholder: Optional<String> = Optional.Missing(), minValues: OptionalInt = OptionalInt.Missing, maxValues: OptionalInt = OptionalInt.Missing, minLength: OptionalInt = OptionalInt.Missing, maxLength: OptionalInt = OptionalInt.Missing, required: OptionalBoolean = OptionalBoolean.Missing, value: Optional<String> = Optional.Missing())","dev.kord.common.entity.DiscordTextInputComponent.DiscordTextInputComponent"]},{"name":"fun DiscordThreadMember(id: OptionalSnowflake = OptionalSnowflake.Missing, userId: OptionalSnowflake = OptionalSnowflake.Missing, joinTimestamp: Instant, flags: Int)","description":"dev.kord.common.entity.DiscordThreadMember.DiscordThreadMember","location":"common/dev.kord.common.entity/-discord-thread-member/-discord-thread-member.html","searchKeys":["DiscordThreadMember","fun DiscordThreadMember(id: OptionalSnowflake = OptionalSnowflake.Missing, userId: OptionalSnowflake = OptionalSnowflake.Missing, joinTimestamp: Instant, flags: Int)","dev.kord.common.entity.DiscordThreadMember.DiscordThreadMember"]},{"name":"fun DiscordThreadMetadata(archived: Boolean, archiveTimestamp: Instant, autoArchiveDuration: ArchiveDuration, locked: OptionalBoolean = OptionalBoolean.Missing, invitable: OptionalBoolean = OptionalBoolean.Missing, createTimestamp: Optional<Instant?> = Optional.Missing())","description":"dev.kord.common.entity.DiscordThreadMetadata.DiscordThreadMetadata","location":"common/dev.kord.common.entity/-discord-thread-metadata/-discord-thread-metadata.html","searchKeys":["DiscordThreadMetadata","fun DiscordThreadMetadata(archived: Boolean, archiveTimestamp: Instant, autoArchiveDuration: ArchiveDuration, locked: OptionalBoolean = OptionalBoolean.Missing, invitable: OptionalBoolean = OptionalBoolean.Missing, createTimestamp: Optional<Instant?> = Optional.Missing())","dev.kord.common.entity.DiscordThreadMetadata.DiscordThreadMetadata"]},{"name":"fun DiscordTyping(channelId: Snowflake, guildId: OptionalSnowflake = OptionalSnowflake.Missing, userId: Snowflake, timestamp: Instant, member: Optional<DiscordGuildMember> = Optional.Missing())","description":"dev.kord.common.entity.DiscordTyping.DiscordTyping","location":"common/dev.kord.common.entity/-discord-typing/-discord-typing.html","searchKeys":["DiscordTyping","fun DiscordTyping(channelId: Snowflake, guildId: OptionalSnowflake = OptionalSnowflake.Missing, userId: Snowflake, timestamp: Instant, member: Optional<DiscordGuildMember> = Optional.Missing())","dev.kord.common.entity.DiscordTyping.DiscordTyping"]},{"name":"fun DiscordUnavailableGuild(id: Snowflake, unavailable: OptionalBoolean = OptionalBoolean.Missing)","description":"dev.kord.common.entity.DiscordUnavailableGuild.DiscordUnavailableGuild","location":"common/dev.kord.common.entity/-discord-unavailable-guild/-discord-unavailable-guild.html","searchKeys":["DiscordUnavailableGuild","fun DiscordUnavailableGuild(id: Snowflake, unavailable: OptionalBoolean = OptionalBoolean.Missing)","dev.kord.common.entity.DiscordUnavailableGuild.DiscordUnavailableGuild"]},{"name":"fun DiscordUpdatedEmojis(guildId: Snowflake, emojis: List<DiscordEmoji>)","description":"dev.kord.common.entity.DiscordUpdatedEmojis.DiscordUpdatedEmojis","location":"common/dev.kord.common.entity/-discord-updated-emojis/-discord-updated-emojis.html","searchKeys":["DiscordUpdatedEmojis","fun DiscordUpdatedEmojis(guildId: Snowflake, emojis: List<DiscordEmoji>)","dev.kord.common.entity.DiscordUpdatedEmojis.DiscordUpdatedEmojis"]},{"name":"fun DiscordUpdatedGuildMember(guildId: Snowflake, roles: List<Snowflake>, user: DiscordUser, nick: Optional<String?> = Optional.Missing(), joinedAt: Instant, premiumSince: Optional<Instant?> = Optional.Missing(), pending: OptionalBoolean = OptionalBoolean.Missing, avatar: Optional<String?> = Optional.Missing(), communicationDisabledUntil: Optional<Instant?> = Optional.Missing())","description":"dev.kord.common.entity.DiscordUpdatedGuildMember.DiscordUpdatedGuildMember","location":"common/dev.kord.common.entity/-discord-updated-guild-member/-discord-updated-guild-member.html","searchKeys":["DiscordUpdatedGuildMember","fun DiscordUpdatedGuildMember(guildId: Snowflake, roles: List<Snowflake>, user: DiscordUser, nick: Optional<String?> = Optional.Missing(), joinedAt: Instant, premiumSince: Optional<Instant?> = Optional.Missing(), pending: OptionalBoolean = OptionalBoolean.Missing, avatar: Optional<String?> = Optional.Missing(), communicationDisabledUntil: Optional<Instant?> = Optional.Missing())","dev.kord.common.entity.DiscordUpdatedGuildMember.DiscordUpdatedGuildMember"]},{"name":"fun DiscordUser(id: Snowflake, username: String, discriminator: String, avatar: String?, bot: OptionalBoolean = OptionalBoolean.Missing, system: OptionalBoolean = OptionalBoolean.Missing, mfaEnabled: OptionalBoolean = OptionalBoolean.Missing, locale: Optional<String> = Optional.Missing(), verified: OptionalBoolean = OptionalBoolean.Missing, email: Optional<String?> = Optional.Missing(), flags: Optional<UserFlags> = Optional.Missing(), premiumType: Optional<UserPremium> = Optional.Missing(), publicFlags: Optional<UserFlags> = Optional.Missing(), banner: String? = null, accentColor: Int? = null)","description":"dev.kord.common.entity.DiscordUser.DiscordUser","location":"common/dev.kord.common.entity/-discord-user/-discord-user.html","searchKeys":["DiscordUser","fun DiscordUser(id: Snowflake, username: String, discriminator: String, avatar: String?, bot: OptionalBoolean = OptionalBoolean.Missing, system: OptionalBoolean = OptionalBoolean.Missing, mfaEnabled: OptionalBoolean = OptionalBoolean.Missing, locale: Optional<String> = Optional.Missing(), verified: OptionalBoolean = OptionalBoolean.Missing, email: Optional<String?> = Optional.Missing(), flags: Optional<UserFlags> = Optional.Missing(), premiumType: Optional<UserPremium> = Optional.Missing(), publicFlags: Optional<UserFlags> = Optional.Missing(), banner: String? = null, accentColor: Int? = null)","dev.kord.common.entity.DiscordUser.DiscordUser"]},{"name":"fun DiscordVoiceRegion(id: String, name: String, optimal: Boolean, deprecated: Boolean, custom: Boolean)","description":"dev.kord.common.entity.DiscordVoiceRegion.DiscordVoiceRegion","location":"common/dev.kord.common.entity/-discord-voice-region/-discord-voice-region.html","searchKeys":["DiscordVoiceRegion","fun DiscordVoiceRegion(id: String, name: String, optimal: Boolean, deprecated: Boolean, custom: Boolean)","dev.kord.common.entity.DiscordVoiceRegion.DiscordVoiceRegion"]},{"name":"fun DiscordVoiceServerUpdateData(token: String, guildId: Snowflake, endpoint: String?)","description":"dev.kord.common.entity.DiscordVoiceServerUpdateData.DiscordVoiceServerUpdateData","location":"common/dev.kord.common.entity/-discord-voice-server-update-data/-discord-voice-server-update-data.html","searchKeys":["DiscordVoiceServerUpdateData","fun DiscordVoiceServerUpdateData(token: String, guildId: Snowflake, endpoint: String?)","dev.kord.common.entity.DiscordVoiceServerUpdateData.DiscordVoiceServerUpdateData"]},{"name":"fun DiscordVoiceState(guildId: OptionalSnowflake = OptionalSnowflake.Missing, channelId: Snowflake?, userId: Snowflake, member: Optional<DiscordGuildMember> = Optional.Missing(), sessionId: String, deaf: Boolean, mute: Boolean, selfDeaf: Boolean, selfMute: Boolean, selfVideo: Boolean, selfStream: OptionalBoolean = OptionalBoolean.Missing, suppress: Boolean, requestToSpeakTimestamp: Instant?)","description":"dev.kord.common.entity.DiscordVoiceState.DiscordVoiceState","location":"common/dev.kord.common.entity/-discord-voice-state/-discord-voice-state.html","searchKeys":["DiscordVoiceState","fun DiscordVoiceState(guildId: OptionalSnowflake = OptionalSnowflake.Missing, channelId: Snowflake?, userId: Snowflake, member: Optional<DiscordGuildMember> = Optional.Missing(), sessionId: String, deaf: Boolean, mute: Boolean, selfDeaf: Boolean, selfMute: Boolean, selfVideo: Boolean, selfStream: OptionalBoolean = OptionalBoolean.Missing, suppress: Boolean, requestToSpeakTimestamp: Instant?)","dev.kord.common.entity.DiscordVoiceState.DiscordVoiceState"]},{"name":"fun DiscordWebhook(id: Snowflake, type: WebhookType, guildId: OptionalSnowflake = OptionalSnowflake.Missing, channelId: Snowflake, user: Optional<DiscordUser> = Optional.Missing(), name: String?, avatar: String?, token: Optional<String> = Optional.Missing(), applicationId: Snowflake?)","description":"dev.kord.common.entity.DiscordWebhook.DiscordWebhook","location":"common/dev.kord.common.entity/-discord-webhook/-discord-webhook.html","searchKeys":["DiscordWebhook","fun DiscordWebhook(id: Snowflake, type: WebhookType, guildId: OptionalSnowflake = OptionalSnowflake.Missing, channelId: Snowflake, user: Optional<DiscordUser> = Optional.Missing(), name: String?, avatar: String?, token: Optional<String> = Optional.Missing(), applicationId: Snowflake?)","dev.kord.common.entity.DiscordWebhook.DiscordWebhook"]},{"name":"fun DiscordWebhooksUpdateData(guildId: Snowflake, channelId: Snowflake)","description":"dev.kord.common.entity.DiscordWebhooksUpdateData.DiscordWebhooksUpdateData","location":"common/dev.kord.common.entity/-discord-webhooks-update-data/-discord-webhooks-update-data.html","searchKeys":["DiscordWebhooksUpdateData","fun DiscordWebhooksUpdateData(guildId: Snowflake, channelId: Snowflake)","dev.kord.common.entity.DiscordWebhooksUpdateData.DiscordWebhooksUpdateData"]},{"name":"fun DiscordWelcomeScreen(description: String?, welcomeChannels: List<DiscordWelcomeScreenChannel>)","description":"dev.kord.common.entity.DiscordWelcomeScreen.DiscordWelcomeScreen","location":"common/dev.kord.common.entity/-discord-welcome-screen/-discord-welcome-screen.html","searchKeys":["DiscordWelcomeScreen","fun DiscordWelcomeScreen(description: String?, welcomeChannels: List<DiscordWelcomeScreenChannel>)","dev.kord.common.entity.DiscordWelcomeScreen.DiscordWelcomeScreen"]},{"name":"fun DiscordWelcomeScreenChannel(channelId: Snowflake, description: String, emojiId: Snowflake?, emojiName: String?)","description":"dev.kord.common.entity.DiscordWelcomeScreenChannel.DiscordWelcomeScreenChannel","location":"common/dev.kord.common.entity/-discord-welcome-screen-channel/-discord-welcome-screen-channel.html","searchKeys":["DiscordWelcomeScreenChannel","fun DiscordWelcomeScreenChannel(channelId: Snowflake, description: String, emojiId: Snowflake?, emojiName: String?)","dev.kord.common.entity.DiscordWelcomeScreenChannel.DiscordWelcomeScreenChannel"]},{"name":"fun EmptyBitSet(): DiscordBitSet","description":"dev.kord.common.EmptyBitSet","location":"common/dev.kord.common/-empty-bit-set.html","searchKeys":["EmptyBitSet","fun EmptyBitSet(): DiscordBitSet","dev.kord.common.EmptyBitSet"]},{"name":"fun Field(name: String, value: String, inline: OptionalBoolean = OptionalBoolean.Missing)","description":"dev.kord.common.entity.DiscordEmbed.Field.Field","location":"common/dev.kord.common.entity/-discord-embed/-field/-field.html","searchKeys":["Field","fun Field(name: String, value: String, inline: OptionalBoolean = OptionalBoolean.Missing)","dev.kord.common.entity.DiscordEmbed.Field.Field"]},{"name":"fun Footer(text: String, iconUrl: Optional<String> = Optional.Missing(), proxyIconUrl: Optional<String> = Optional.Missing())","description":"dev.kord.common.entity.DiscordEmbed.Footer.Footer","location":"common/dev.kord.common.entity/-discord-embed/-footer/-footer.html","searchKeys":["Footer","fun Footer(text: String, iconUrl: Optional<String> = Optional.Missing(), proxyIconUrl: Optional<String> = Optional.Missing())","dev.kord.common.entity.DiscordEmbed.Footer.Footer"]},{"name":"fun GuildScheduledEventEntityMetadata(location: Optional<String> = Optional.Missing())","description":"dev.kord.common.entity.GuildScheduledEventEntityMetadata.GuildScheduledEventEntityMetadata","location":"common/dev.kord.common.entity/-guild-scheduled-event-entity-metadata/-guild-scheduled-event-entity-metadata.html","searchKeys":["GuildScheduledEventEntityMetadata","fun GuildScheduledEventEntityMetadata(location: Optional<String> = Optional.Missing())","dev.kord.common.entity.GuildScheduledEventEntityMetadata.GuildScheduledEventEntityMetadata"]},{"name":"fun Image(url: Optional<String> = Optional.Missing(), proxyUrl: Optional<String> = Optional.Missing(), height: OptionalInt = OptionalInt.Missing, width: OptionalInt = OptionalInt.Missing)","description":"dev.kord.common.entity.DiscordEmbed.Image.Image","location":"common/dev.kord.common.entity/-discord-embed/-image/-image.html","searchKeys":["Image","fun Image(url: Optional<String> = Optional.Missing(), proxyUrl: Optional<String> = Optional.Missing(), height: OptionalInt = OptionalInt.Missing, width: OptionalInt = OptionalInt.Missing)","dev.kord.common.entity.DiscordEmbed.Image.Image"]},{"name":"fun InstallParams(scopes: List<String>, permissions: Permissions)","description":"dev.kord.common.entity.InstallParams.InstallParams","location":"common/dev.kord.common.entity/-install-params/-install-params.html","searchKeys":["InstallParams","fun InstallParams(scopes: List<String>, permissions: Permissions)","dev.kord.common.entity.InstallParams.InstallParams"]},{"name":"fun Instant.toMessageFormat(style: DiscordTimestampStyle? = null): String","description":"dev.kord.common.toMessageFormat","location":"common/dev.kord.common/to-message-format.html","searchKeys":["toMessageFormat","fun Instant.toMessageFormat(style: DiscordTimestampStyle? = null): String","dev.kord.common.toMessageFormat"]},{"name":"fun Int.optionalInt(): OptionalInt.Value","description":"dev.kord.common.entity.optional.optionalInt","location":"common/dev.kord.common.entity.optional/optional-int.html","searchKeys":["optionalInt","fun Int.optionalInt(): OptionalInt.Value","dev.kord.common.entity.optional.optionalInt"]},{"name":"fun IntChoice(name: String, nameLocalizations: Optional<Map<Locale, String>?>, value: Long)","description":"dev.kord.common.entity.Choice.IntChoice.IntChoice","location":"common/dev.kord.common.entity/-choice/-int-choice/-int-choice.html","searchKeys":["IntChoice","fun IntChoice(name: String, nameLocalizations: Optional<Map<Locale, String>?>, value: Long)","dev.kord.common.entity.Choice.IntChoice.IntChoice"]},{"name":"fun IntegerArgument(name: String, value: Long, focused: OptionalBoolean = OptionalBoolean.Missing)","description":"dev.kord.common.entity.CommandArgument.IntegerArgument.IntegerArgument","location":"common/dev.kord.common.entity/-command-argument/-integer-argument/-integer-argument.html","searchKeys":["IntegerArgument","fun IntegerArgument(name: String, value: Long, focused: OptionalBoolean = OptionalBoolean.Missing)","dev.kord.common.entity.CommandArgument.IntegerArgument.IntegerArgument"]},{"name":"fun IntegrationApplication(id: Snowflake, name: String, icon: String?, description: String, summary: String, bot: Optional<DiscordUser> = Optional.Missing())","description":"dev.kord.common.entity.IntegrationApplication.IntegrationApplication","location":"common/dev.kord.common.entity/-integration-application/-integration-application.html","searchKeys":["IntegrationApplication","fun IntegrationApplication(id: Snowflake, name: String, icon: String?, description: String, summary: String, bot: Optional<DiscordUser> = Optional.Missing())","dev.kord.common.entity.IntegrationApplication.IntegrationApplication"]},{"name":"fun InteractionCallbackData(id: OptionalSnowflake = OptionalSnowflake.Missing, type: Optional<ApplicationCommandType> = Optional.Missing(), targetId: OptionalSnowflake = OptionalSnowflake.Missing, name: Optional<String> = Optional.Missing(), resolved: Optional<ResolvedObjects> = Optional.Missing(), options: Optional<List<Option>> = Optional.Missing(), guildId: OptionalSnowflake = OptionalSnowflake.Missing, customId: Optional<String> = Optional.Missing(), componentType: Optional<ComponentType> = Optional.Missing(), values: Optional<List<String>> = Optional.Missing(), components: Optional<List<DiscordComponent>> = Optional.Missing())","description":"dev.kord.common.entity.InteractionCallbackData.InteractionCallbackData","location":"common/dev.kord.common.entity/-interaction-callback-data/-interaction-callback-data.html","searchKeys":["InteractionCallbackData","fun InteractionCallbackData(id: OptionalSnowflake = OptionalSnowflake.Missing, type: Optional<ApplicationCommandType> = Optional.Missing(), targetId: OptionalSnowflake = OptionalSnowflake.Missing, name: Optional<String> = Optional.Missing(), resolved: Optional<ResolvedObjects> = Optional.Missing(), options: Optional<List<Option>> = Optional.Missing(), guildId: OptionalSnowflake = OptionalSnowflake.Missing, customId: Optional<String> = Optional.Missing(), componentType: Optional<ComponentType> = Optional.Missing(), values: Optional<List<String>> = Optional.Missing(), components: Optional<List<DiscordComponent>> = Optional.Missing())","dev.kord.common.entity.InteractionCallbackData.InteractionCallbackData"]},{"name":"fun IntervalRateLimiter(limit: Int, interval: Duration, clock: Clock): IntervalRateLimiter","description":"dev.kord.common.ratelimit.IntervalRateLimiter","location":"common/dev.kord.common.ratelimit/-interval-rate-limiter.html","searchKeys":["IntervalRateLimiter","fun IntervalRateLimiter(limit: Int, interval: Duration, clock: Clock): IntervalRateLimiter","dev.kord.common.ratelimit.IntervalRateLimiter"]},{"name":"fun IntervalRateLimiter(limit: Int, interval: Duration, timeSource: TimeSource = TimeSource.Monotonic): IntervalRateLimiter","description":"dev.kord.common.ratelimit.IntervalRateLimiter","location":"common/dev.kord.common.ratelimit/-interval-rate-limiter.html","searchKeys":["IntervalRateLimiter","fun IntervalRateLimiter(limit: Int, interval: Duration, timeSource: TimeSource = TimeSource.Monotonic): IntervalRateLimiter","dev.kord.common.ratelimit.IntervalRateLimiter"]},{"name":"fun KMutableProperty0<OptionalBoolean>.delegate(): ReadWriteProperty<Any?, Boolean?>","description":"dev.kord.common.entity.optional.delegate.delegate","location":"common/dev.kord.common.entity.optional.delegate/delegate.html","searchKeys":["delegate","fun KMutableProperty0<OptionalBoolean>.delegate(): ReadWriteProperty<Any?, Boolean?>","dev.kord.common.entity.optional.delegate.delegate"]},{"name":"fun KMutableProperty0<OptionalInt>.delegate(): ReadWriteProperty<Any?, Int?>","description":"dev.kord.common.entity.optional.delegate.delegate","location":"common/dev.kord.common.entity.optional.delegate/delegate.html","searchKeys":["delegate","fun KMutableProperty0<OptionalInt>.delegate(): ReadWriteProperty<Any?, Int?>","dev.kord.common.entity.optional.delegate.delegate"]},{"name":"fun KMutableProperty0<OptionalInt?>.delegate(): ReadWriteProperty<Any?, Int?>","description":"dev.kord.common.entity.optional.delegate.delegate","location":"common/dev.kord.common.entity.optional.delegate/delegate.html","searchKeys":["delegate","fun KMutableProperty0<OptionalInt?>.delegate(): ReadWriteProperty<Any?, Int?>","dev.kord.common.entity.optional.delegate.delegate"]},{"name":"fun KMutableProperty0<OptionalLong>.delegate(): ReadWriteProperty<Any?, Long?>","description":"dev.kord.common.entity.optional.delegate.delegate","location":"common/dev.kord.common.entity.optional.delegate/delegate.html","searchKeys":["delegate","fun KMutableProperty0<OptionalLong>.delegate(): ReadWriteProperty<Any?, Long?>","dev.kord.common.entity.optional.delegate.delegate"]},{"name":"fun KMutableProperty0<OptionalLong?>.delegate(): ReadWriteProperty<Any?, Long?>","description":"dev.kord.common.entity.optional.delegate.delegate","location":"common/dev.kord.common.entity.optional.delegate/delegate.html","searchKeys":["delegate","fun KMutableProperty0<OptionalLong?>.delegate(): ReadWriteProperty<Any?, Long?>","dev.kord.common.entity.optional.delegate.delegate"]},{"name":"fun KMutableProperty0<OptionalSnowflake>.delegate(): ReadWriteProperty<Any?, Snowflake?>","description":"dev.kord.common.entity.optional.delegate.delegate","location":"common/dev.kord.common.entity.optional.delegate/delegate.html","searchKeys":["delegate","fun KMutableProperty0<OptionalSnowflake>.delegate(): ReadWriteProperty<Any?, Snowflake?>","dev.kord.common.entity.optional.delegate.delegate"]},{"name":"fun KMutableProperty0<OptionalSnowflake?>.delegate(): ReadWriteProperty<Any?, Snowflake?>","description":"dev.kord.common.entity.optional.delegate.delegate","location":"common/dev.kord.common.entity.optional.delegate/delegate.html","searchKeys":["delegate","fun KMutableProperty0<OptionalSnowflake?>.delegate(): ReadWriteProperty<Any?, Snowflake?>","dev.kord.common.entity.optional.delegate.delegate"]},{"name":"fun Locale(language: String, country: String? = null)","description":"dev.kord.common.Locale.Locale","location":"common/dev.kord.common/-locale/-locale.html","searchKeys":["Locale","fun Locale(language: String, country: String? = null)","dev.kord.common.Locale.Locale"]},{"name":"fun Long?.optional(): OptionalLong","description":"dev.kord.common.entity.optional.optional","location":"common/dev.kord.common.entity.optional/optional.html","searchKeys":["optional","fun Long?.optional(): OptionalLong","dev.kord.common.entity.optional.optional"]},{"name":"fun MentionableArgument(name: String, value: Snowflake, focused: OptionalBoolean = OptionalBoolean.Missing)","description":"dev.kord.common.entity.CommandArgument.MentionableArgument.MentionableArgument","location":"common/dev.kord.common.entity/-command-argument/-mentionable-argument/-mentionable-argument.html","searchKeys":["MentionableArgument","fun MentionableArgument(name: String, value: Snowflake, focused: OptionalBoolean = OptionalBoolean.Missing)","dev.kord.common.entity.CommandArgument.MentionableArgument.MentionableArgument"]},{"name":"fun MessageActivity(type: MessageActivityType, partyId: Optional<String> = Optional.Missing())","description":"dev.kord.common.entity.MessageActivity.MessageActivity","location":"common/dev.kord.common.entity/-message-activity/-message-activity.html","searchKeys":["MessageActivity","fun MessageActivity(type: MessageActivityType, partyId: Optional<String> = Optional.Missing())","dev.kord.common.entity.MessageActivity.MessageActivity"]},{"name":"fun MessageApplication(id: Snowflake, coverImage: Optional<String> = Optional.Missing(), description: String, icon: String? = null, name: String)","description":"dev.kord.common.entity.MessageApplication.MessageApplication","location":"common/dev.kord.common.entity/-message-application/-message-application.html","searchKeys":["MessageApplication","fun MessageApplication(id: Snowflake, coverImage: Optional<String> = Optional.Missing(), description: String, icon: String? = null, name: String)","dev.kord.common.entity.MessageApplication.MessageApplication"]},{"name":"fun MessageFlags(flags: Iterable<MessageFlag>): MessageFlags","description":"dev.kord.common.entity.MessageFlags","location":"common/dev.kord.common.entity/-message-flags.html","searchKeys":["MessageFlags","fun MessageFlags(flags: Iterable<MessageFlag>): MessageFlags","dev.kord.common.entity.MessageFlags"]},{"name":"fun MessageFlags(flags: Iterable<MessageFlags>): MessageFlags","description":"dev.kord.common.entity.MessageFlags","location":"common/dev.kord.common.entity/-message-flags.html","searchKeys":["MessageFlags","fun MessageFlags(flags: Iterable<MessageFlags>): MessageFlags","dev.kord.common.entity.MessageFlags"]},{"name":"fun MessageFlags(vararg flags: MessageFlag): MessageFlags","description":"dev.kord.common.entity.MessageFlags","location":"common/dev.kord.common.entity/-message-flags.html","searchKeys":["MessageFlags","fun MessageFlags(vararg flags: MessageFlag): MessageFlags","dev.kord.common.entity.MessageFlags"]},{"name":"fun MessageFlags(vararg flags: MessageFlags): MessageFlags","description":"dev.kord.common.entity.MessageFlags","location":"common/dev.kord.common.entity/-message-flags.html","searchKeys":["MessageFlags","fun MessageFlags(vararg flags: MessageFlags): MessageFlags","dev.kord.common.entity.MessageFlags"]},{"name":"fun MessageReactionAddData(userId: Snowflake, channelId: Snowflake, messageId: Snowflake, guildId: OptionalSnowflake = OptionalSnowflake.Missing, member: Optional<DiscordGuildMember> = Optional.Missing(), emoji: DiscordPartialEmoji)","description":"dev.kord.common.entity.MessageReactionAddData.MessageReactionAddData","location":"common/dev.kord.common.entity/-message-reaction-add-data/-message-reaction-add-data.html","searchKeys":["MessageReactionAddData","fun MessageReactionAddData(userId: Snowflake, channelId: Snowflake, messageId: Snowflake, guildId: OptionalSnowflake = OptionalSnowflake.Missing, member: Optional<DiscordGuildMember> = Optional.Missing(), emoji: DiscordPartialEmoji)","dev.kord.common.entity.MessageReactionAddData.MessageReactionAddData"]},{"name":"fun MessageReactionRemoveData(userId: Snowflake, channelId: Snowflake, messageId: Snowflake, guildId: OptionalSnowflake = OptionalSnowflake.Missing, emoji: DiscordPartialEmoji)","description":"dev.kord.common.entity.MessageReactionRemoveData.MessageReactionRemoveData","location":"common/dev.kord.common.entity/-message-reaction-remove-data/-message-reaction-remove-data.html","searchKeys":["MessageReactionRemoveData","fun MessageReactionRemoveData(userId: Snowflake, channelId: Snowflake, messageId: Snowflake, guildId: OptionalSnowflake = OptionalSnowflake.Missing, emoji: DiscordPartialEmoji)","dev.kord.common.entity.MessageReactionRemoveData.MessageReactionRemoveData"]},{"name":"fun NumberArgument(name: String, value: Double, focused: OptionalBoolean = OptionalBoolean.Missing)","description":"dev.kord.common.entity.CommandArgument.NumberArgument.NumberArgument","location":"common/dev.kord.common.entity/-command-argument/-number-argument/-number-argument.html","searchKeys":["NumberArgument","fun NumberArgument(name: String, value: Double, focused: OptionalBoolean = OptionalBoolean.Missing)","dev.kord.common.entity.CommandArgument.NumberArgument.NumberArgument"]},{"name":"fun NumberChoice(name: String, nameLocalizations: Optional<Map<Locale, String>?>, value: Double)","description":"dev.kord.common.entity.Choice.NumberChoice.NumberChoice","location":"common/dev.kord.common.entity/-choice/-number-choice/-number-choice.html","searchKeys":["NumberChoice","fun NumberChoice(name: String, nameLocalizations: Optional<Map<Locale, String>?>, value: Double)","dev.kord.common.entity.Choice.NumberChoice.NumberChoice"]},{"name":"fun Optional<Boolean>.toPrimitive(): OptionalBoolean","description":"dev.kord.common.entity.optional.toPrimitive","location":"common/dev.kord.common.entity.optional/to-primitive.html","searchKeys":["toPrimitive","fun Optional<Boolean>.toPrimitive(): OptionalBoolean","dev.kord.common.entity.optional.toPrimitive"]},{"name":"fun OptionalBoolean?.orElse(default: Boolean): Boolean","description":"dev.kord.common.entity.optional.orElse","location":"common/dev.kord.common.entity.optional/or-else.html","searchKeys":["orElse","fun OptionalBoolean?.orElse(default: Boolean): Boolean","dev.kord.common.entity.optional.orElse"]},{"name":"fun OptionalInt?.getOrThrow(): Int","description":"dev.kord.common.entity.optional.getOrThrow","location":"common/dev.kord.common.entity.optional/get-or-throw.html","searchKeys":["getOrThrow","fun OptionalInt?.getOrThrow(): Int","dev.kord.common.entity.optional.getOrThrow"]},{"name":"fun OptionalInt?.orElse(default: Int): Int","description":"dev.kord.common.entity.optional.orElse","location":"common/dev.kord.common.entity.optional/or-else.html","searchKeys":["orElse","fun OptionalInt?.orElse(default: Int): Int","dev.kord.common.entity.optional.orElse"]},{"name":"fun OptionalLong?.orElse(default: Long): Long","description":"dev.kord.common.entity.optional.orElse","location":"common/dev.kord.common.entity.optional/or-else.html","searchKeys":["orElse","fun OptionalLong?.orElse(default: Long): Long","dev.kord.common.entity.optional.orElse"]},{"name":"fun Overwrite(id: Snowflake, type: OverwriteType, allow: Permissions, deny: Permissions)","description":"dev.kord.common.entity.Overwrite.Overwrite","location":"common/dev.kord.common.entity/-overwrite/-overwrite.html","searchKeys":["Overwrite","fun Overwrite(id: Snowflake, type: OverwriteType, allow: Permissions, deny: Permissions)","dev.kord.common.entity.Overwrite.Overwrite"]},{"name":"fun Permissions(code: DiscordBitSet)","description":"dev.kord.common.entity.Permissions.Permissions","location":"common/dev.kord.common.entity/-permissions/-permissions.html","searchKeys":["Permissions","fun Permissions(code: DiscordBitSet)","dev.kord.common.entity.Permissions.Permissions"]},{"name":"fun Permissions(permissions: Iterable<Permission>): Permissions","description":"dev.kord.common.entity.Permissions","location":"common/dev.kord.common.entity/-permissions.html","searchKeys":["Permissions","fun Permissions(permissions: Iterable<Permission>): Permissions","dev.kord.common.entity.Permissions"]},{"name":"fun Permissions(permissions: Iterable<Permissions>): Permissions","description":"dev.kord.common.entity.Permissions","location":"common/dev.kord.common.entity/-permissions.html","searchKeys":["Permissions","fun Permissions(permissions: Iterable<Permissions>): Permissions","dev.kord.common.entity.Permissions"]},{"name":"fun Permissions(value: String): Permissions","description":"dev.kord.common.entity.Permissions","location":"common/dev.kord.common.entity/-permissions.html","searchKeys":["Permissions","fun Permissions(value: String): Permissions","dev.kord.common.entity.Permissions"]},{"name":"fun Permissions(vararg permissions: Permission): Permissions","description":"dev.kord.common.entity.Permissions","location":"common/dev.kord.common.entity/-permissions.html","searchKeys":["Permissions","fun Permissions(vararg permissions: Permission): Permissions","dev.kord.common.entity.Permissions"]},{"name":"fun Permissions(vararg permissions: Permissions): Permissions","description":"dev.kord.common.entity.Permissions","location":"common/dev.kord.common.entity/-permissions.html","searchKeys":["Permissions","fun Permissions(vararg permissions: Permissions): Permissions","dev.kord.common.entity.Permissions"]},{"name":"fun PermissionsBuilder(code: DiscordBitSet)","description":"dev.kord.common.entity.Permissions.PermissionsBuilder.PermissionsBuilder","location":"common/dev.kord.common.entity/-permissions/-permissions-builder/-permissions-builder.html","searchKeys":["PermissionsBuilder","fun PermissionsBuilder(code: DiscordBitSet)","dev.kord.common.entity.Permissions.PermissionsBuilder.PermissionsBuilder"]},{"name":"fun Provider(name: Optional<String> = Optional.Missing(), url: Optional<String?> = Optional.Missing())","description":"dev.kord.common.entity.DiscordEmbed.Provider.Provider","location":"common/dev.kord.common.entity/-discord-embed/-provider/-provider.html","searchKeys":["Provider","fun Provider(name: Optional<String> = Optional.Missing(), url: Optional<String?> = Optional.Missing())","dev.kord.common.entity.DiscordEmbed.Provider.Provider"]},{"name":"fun Reaction(count: Int, me: Boolean, emoji: DiscordEmoji)","description":"dev.kord.common.entity.Reaction.Reaction","location":"common/dev.kord.common.entity/-reaction/-reaction.html","searchKeys":["Reaction","fun Reaction(count: Int, me: Boolean, emoji: DiscordEmoji)","dev.kord.common.entity.Reaction.Reaction"]},{"name":"fun RequestException(cause: Throwable)","description":"dev.kord.common.exception.RequestException.RequestException","location":"common/dev.kord.common.exception/-request-exception/-request-exception.html","searchKeys":["RequestException","fun RequestException(cause: Throwable)","dev.kord.common.exception.RequestException.RequestException"]},{"name":"fun RequestException(message: String)","description":"dev.kord.common.exception.RequestException.RequestException","location":"common/dev.kord.common.exception/-request-exception/-request-exception.html","searchKeys":["RequestException","fun RequestException(message: String)","dev.kord.common.exception.RequestException.RequestException"]},{"name":"fun RequestException(message: String, cause: Throwable)","description":"dev.kord.common.exception.RequestException.RequestException","location":"common/dev.kord.common.exception/-request-exception/-request-exception.html","searchKeys":["RequestException","fun RequestException(message: String, cause: Throwable)","dev.kord.common.exception.RequestException.RequestException"]},{"name":"fun ResolvedObjects(members: Optional<Map<Snowflake, DiscordInteractionGuildMember>> = Optional.Missing(), users: Optional<Map<Snowflake, DiscordUser>> = Optional.Missing(), roles: Optional<Map<Snowflake, DiscordRole>> = Optional.Missing(), channels: Optional<Map<Snowflake, DiscordChannel>> = Optional.Missing(), messages: Optional<Map<Snowflake, DiscordMessage>> = Optional.Missing(), attachments: Optional<Map<Snowflake, DiscordAttachment>> = Optional.Missing())","description":"dev.kord.common.entity.ResolvedObjects.ResolvedObjects","location":"common/dev.kord.common.entity/-resolved-objects/-resolved-objects.html","searchKeys":["ResolvedObjects","fun ResolvedObjects(members: Optional<Map<Snowflake, DiscordInteractionGuildMember>> = Optional.Missing(), users: Optional<Map<Snowflake, DiscordUser>> = Optional.Missing(), roles: Optional<Map<Snowflake, DiscordRole>> = Optional.Missing(), channels: Optional<Map<Snowflake, DiscordChannel>> = Optional.Missing(), messages: Optional<Map<Snowflake, DiscordMessage>> = Optional.Missing(), attachments: Optional<Map<Snowflake, DiscordAttachment>> = Optional.Missing())","dev.kord.common.entity.ResolvedObjects.ResolvedObjects"]},{"name":"fun RoleArgument(name: String, value: Snowflake, focused: OptionalBoolean = OptionalBoolean.Missing)","description":"dev.kord.common.entity.CommandArgument.RoleArgument.RoleArgument","location":"common/dev.kord.common.entity/-command-argument/-role-argument/-role-argument.html","searchKeys":["RoleArgument","fun RoleArgument(name: String, value: Snowflake, focused: OptionalBoolean = OptionalBoolean.Missing)","dev.kord.common.entity.CommandArgument.RoleArgument.RoleArgument"]},{"name":"fun Snowflake(timestamp: Instant)","description":"dev.kord.common.entity.Snowflake.Snowflake","location":"common/dev.kord.common.entity/-snowflake/-snowflake.html","searchKeys":["Snowflake","fun Snowflake(timestamp: Instant)","dev.kord.common.entity.Snowflake.Snowflake"]},{"name":"fun Snowflake(value: Long): Snowflake","description":"dev.kord.common.entity.Snowflake","location":"common/dev.kord.common.entity/-snowflake.html","searchKeys":["Snowflake","fun Snowflake(value: Long): Snowflake","dev.kord.common.entity.Snowflake"]},{"name":"fun Snowflake(value: String)","description":"dev.kord.common.entity.Snowflake.Snowflake","location":"common/dev.kord.common.entity/-snowflake/-snowflake.html","searchKeys":["Snowflake","fun Snowflake(value: String)","dev.kord.common.entity.Snowflake.Snowflake"]},{"name":"fun Snowflake(value: ULong)","description":"dev.kord.common.entity.Snowflake.Snowflake","location":"common/dev.kord.common.entity/-snowflake/-snowflake.html","searchKeys":["Snowflake","fun Snowflake(value: ULong)","dev.kord.common.entity.Snowflake.Snowflake"]},{"name":"fun Snowflake.optionalSnowflake(): OptionalSnowflake.Value","description":"dev.kord.common.entity.optional.optionalSnowflake","location":"common/dev.kord.common.entity.optional/optional-snowflake.html","searchKeys":["optionalSnowflake","fun Snowflake.optionalSnowflake(): OptionalSnowflake.Value","dev.kord.common.entity.optional.optionalSnowflake"]},{"name":"fun Snowflake?.optionalSnowflake(): OptionalSnowflake.Value?","description":"dev.kord.common.entity.optional.optionalSnowflake","location":"common/dev.kord.common.entity.optional/optional-snowflake.html","searchKeys":["optionalSnowflake","fun Snowflake?.optionalSnowflake(): OptionalSnowflake.Value?","dev.kord.common.entity.optional.optionalSnowflake"]},{"name":"fun StringArgument(name: String, value: String, focused: OptionalBoolean = OptionalBoolean.Missing)","description":"dev.kord.common.entity.CommandArgument.StringArgument.StringArgument","location":"common/dev.kord.common.entity/-command-argument/-string-argument/-string-argument.html","searchKeys":["StringArgument","fun StringArgument(name: String, value: String, focused: OptionalBoolean = OptionalBoolean.Missing)","dev.kord.common.entity.CommandArgument.StringArgument.StringArgument"]},{"name":"fun StringChoice(name: String, nameLocalizations: Optional<Map<Locale, String>?>, value: String)","description":"dev.kord.common.entity.Choice.StringChoice.StringChoice","location":"common/dev.kord.common.entity/-choice/-string-choice/-string-choice.html","searchKeys":["StringChoice","fun StringChoice(name: String, nameLocalizations: Optional<Map<Locale, String>?>, value: String)","dev.kord.common.entity.Choice.StringChoice.StringChoice"]},{"name":"fun SubCommand(name: String, options: Optional<List<CommandArgument<Any?>>> = Optional.Missing())","description":"dev.kord.common.entity.SubCommand.SubCommand","location":"common/dev.kord.common.entity/-sub-command/-sub-command.html","searchKeys":["SubCommand","fun SubCommand(name: String, options: Optional<List<CommandArgument<Any?>>> = Optional.Missing())","dev.kord.common.entity.SubCommand.SubCommand"]},{"name":"fun SystemChannelFlags(code: Int)","description":"dev.kord.common.entity.SystemChannelFlags.SystemChannelFlags","location":"common/dev.kord.common.entity/-system-channel-flags/-system-channel-flags.html","searchKeys":["SystemChannelFlags","fun SystemChannelFlags(code: Int)","dev.kord.common.entity.SystemChannelFlags.SystemChannelFlags"]},{"name":"fun Thumbnail(url: Optional<String> = Optional.Missing(), proxyUrl: Optional<String> = Optional.Missing(), height: OptionalInt = OptionalInt.Missing, width: OptionalInt = OptionalInt.Missing)","description":"dev.kord.common.entity.DiscordEmbed.Thumbnail.Thumbnail","location":"common/dev.kord.common.entity/-discord-embed/-thumbnail/-thumbnail.html","searchKeys":["Thumbnail","fun Thumbnail(url: Optional<String> = Optional.Missing(), proxyUrl: Optional<String> = Optional.Missing(), height: OptionalInt = OptionalInt.Missing, width: OptionalInt = OptionalInt.Missing)","dev.kord.common.entity.DiscordEmbed.Thumbnail.Thumbnail"]},{"name":"fun Unknown(code: DiscordBitSet)","description":"dev.kord.common.entity.Permission.Unknown.Unknown","location":"common/dev.kord.common.entity/-permission/-unknown/-unknown.html","searchKeys":["Unknown","fun Unknown(code: DiscordBitSet)","dev.kord.common.entity.Permission.Unknown.Unknown"]},{"name":"fun Unknown(code: Int)","description":"dev.kord.common.entity.ActivityType.Unknown.Unknown","location":"common/dev.kord.common.entity/-activity-type/-unknown/-unknown.html","searchKeys":["Unknown","fun Unknown(code: Int)","dev.kord.common.entity.ActivityType.Unknown.Unknown"]},{"name":"fun Unknown(code: Int)","description":"dev.kord.common.entity.MessageType.Unknown.Unknown","location":"common/dev.kord.common.entity/-message-type/-unknown/-unknown.html","searchKeys":["Unknown","fun Unknown(code: Int)","dev.kord.common.entity.MessageType.Unknown.Unknown"]},{"name":"fun Unknown(duration: Duration)","description":"dev.kord.common.entity.ArchiveDuration.Unknown.Unknown","location":"common/dev.kord.common.entity/-archive-duration/-unknown/-unknown.html","searchKeys":["Unknown","fun Unknown(duration: Duration)","dev.kord.common.entity.ArchiveDuration.Unknown.Unknown"]},{"name":"fun Unknown(name: String)","description":"dev.kord.common.entity.AuditLogChangeKey.Unknown.Unknown","location":"common/dev.kord.common.entity/-audit-log-change-key/-unknown/-unknown.html","searchKeys":["Unknown","fun Unknown(name: String)","dev.kord.common.entity.AuditLogChangeKey.Unknown.Unknown"]},{"name":"fun Unknown(type: Int)","description":"dev.kord.common.entity.ApplicationCommandOptionType.Unknown.Unknown","location":"common/dev.kord.common.entity/-application-command-option-type/-unknown/-unknown.html","searchKeys":["Unknown","fun Unknown(type: Int)","dev.kord.common.entity.ApplicationCommandOptionType.Unknown.Unknown"]},{"name":"fun Unknown(type: Int)","description":"dev.kord.common.entity.InteractionResponseType.Unknown.Unknown","location":"common/dev.kord.common.entity/-interaction-response-type/-unknown/-unknown.html","searchKeys":["Unknown","fun Unknown(type: Int)","dev.kord.common.entity.InteractionResponseType.Unknown.Unknown"]},{"name":"fun Unknown(type: Int)","description":"dev.kord.common.entity.InteractionType.Unknown.Unknown","location":"common/dev.kord.common.entity/-interaction-type/-unknown/-unknown.html","searchKeys":["Unknown","fun Unknown(type: Int)","dev.kord.common.entity.InteractionType.Unknown.Unknown"]},{"name":"fun Unknown(value: Int)","description":"dev.kord.common.entity.ApplicationCommandPermissionType.Unknown.Unknown","location":"common/dev.kord.common.entity/-application-command-permission-type/-unknown/-unknown.html","searchKeys":["Unknown","fun Unknown(value: Int)","dev.kord.common.entity.ApplicationCommandPermissionType.Unknown.Unknown"]},{"name":"fun Unknown(value: Int)","description":"dev.kord.common.entity.ApplicationCommandType.Unknown.Unknown","location":"common/dev.kord.common.entity/-application-command-type/-unknown/-unknown.html","searchKeys":["Unknown","fun Unknown(value: Int)","dev.kord.common.entity.ApplicationCommandType.Unknown.Unknown"]},{"name":"fun Unknown(value: Int)","description":"dev.kord.common.entity.AuditLogEvent.Unknown.Unknown","location":"common/dev.kord.common.entity/-audit-log-event/-unknown/-unknown.html","searchKeys":["Unknown","fun Unknown(value: Int)","dev.kord.common.entity.AuditLogEvent.Unknown.Unknown"]},{"name":"fun Unknown(value: Int)","description":"dev.kord.common.entity.AutoModerationActionType.Unknown.Unknown","location":"common/dev.kord.common.entity/-auto-moderation-action-type/-unknown/-unknown.html","searchKeys":["Unknown","fun Unknown(value: Int)","dev.kord.common.entity.AutoModerationActionType.Unknown.Unknown"]},{"name":"fun Unknown(value: Int)","description":"dev.kord.common.entity.AutoModerationRuleEventType.Unknown.Unknown","location":"common/dev.kord.common.entity/-auto-moderation-rule-event-type/-unknown/-unknown.html","searchKeys":["Unknown","fun Unknown(value: Int)","dev.kord.common.entity.AutoModerationRuleEventType.Unknown.Unknown"]},{"name":"fun Unknown(value: Int)","description":"dev.kord.common.entity.AutoModerationRuleKeywordPresetType.Unknown.Unknown","location":"common/dev.kord.common.entity/-auto-moderation-rule-keyword-preset-type/-unknown/-unknown.html","searchKeys":["Unknown","fun Unknown(value: Int)","dev.kord.common.entity.AutoModerationRuleKeywordPresetType.Unknown.Unknown"]},{"name":"fun Unknown(value: Int)","description":"dev.kord.common.entity.AutoModerationRuleTriggerType.Unknown.Unknown","location":"common/dev.kord.common.entity/-auto-moderation-rule-trigger-type/-unknown/-unknown.html","searchKeys":["Unknown","fun Unknown(value: Int)","dev.kord.common.entity.AutoModerationRuleTriggerType.Unknown.Unknown"]},{"name":"fun Unknown(value: Int)","description":"dev.kord.common.entity.ButtonStyle.Unknown.Unknown","location":"common/dev.kord.common.entity/-button-style/-unknown/-unknown.html","searchKeys":["Unknown","fun Unknown(value: Int)","dev.kord.common.entity.ButtonStyle.Unknown.Unknown"]},{"name":"fun Unknown(value: Int)","description":"dev.kord.common.entity.ChannelType.Unknown.Unknown","location":"common/dev.kord.common.entity/-channel-type/-unknown/-unknown.html","searchKeys":["Unknown","fun Unknown(value: Int)","dev.kord.common.entity.ChannelType.Unknown.Unknown"]},{"name":"fun Unknown(value: Int)","description":"dev.kord.common.entity.ComponentType.Unknown.Unknown","location":"common/dev.kord.common.entity/-component-type/-unknown/-unknown.html","searchKeys":["Unknown","fun Unknown(value: Int)","dev.kord.common.entity.ComponentType.Unknown.Unknown"]},{"name":"fun Unknown(value: Int)","description":"dev.kord.common.entity.DefaultMessageNotificationLevel.Unknown.Unknown","location":"common/dev.kord.common.entity/-default-message-notification-level/-unknown/-unknown.html","searchKeys":["Unknown","fun Unknown(value: Int)","dev.kord.common.entity.DefaultMessageNotificationLevel.Unknown.Unknown"]},{"name":"fun Unknown(value: Int)","description":"dev.kord.common.entity.DiscordConnectionVisibility.Unknown.Unknown","location":"common/dev.kord.common.entity/-discord-connection-visibility/-unknown/-unknown.html","searchKeys":["Unknown","fun Unknown(value: Int)","dev.kord.common.entity.DiscordConnectionVisibility.Unknown.Unknown"]},{"name":"fun Unknown(value: Int)","description":"dev.kord.common.entity.DiscordGuildApplicationCommandPermission.Type.Unknown.Unknown","location":"common/dev.kord.common.entity/-discord-guild-application-command-permission/-type/-unknown/-unknown.html","searchKeys":["Unknown","fun Unknown(value: Int)","dev.kord.common.entity.DiscordGuildApplicationCommandPermission.Type.Unknown.Unknown"]},{"name":"fun Unknown(value: Int)","description":"dev.kord.common.entity.ExplicitContentFilter.Unknown.Unknown","location":"common/dev.kord.common.entity/-explicit-content-filter/-unknown/-unknown.html","searchKeys":["Unknown","fun Unknown(value: Int)","dev.kord.common.entity.ExplicitContentFilter.Unknown.Unknown"]},{"name":"fun Unknown(value: Int)","description":"dev.kord.common.entity.GuildScheduledEventPrivacyLevel.Unknown.Unknown","location":"common/dev.kord.common.entity/-guild-scheduled-event-privacy-level/-unknown/-unknown.html","searchKeys":["Unknown","fun Unknown(value: Int)","dev.kord.common.entity.GuildScheduledEventPrivacyLevel.Unknown.Unknown"]},{"name":"fun Unknown(value: Int)","description":"dev.kord.common.entity.GuildScheduledEventStatus.Unknown.Unknown","location":"common/dev.kord.common.entity/-guild-scheduled-event-status/-unknown/-unknown.html","searchKeys":["Unknown","fun Unknown(value: Int)","dev.kord.common.entity.GuildScheduledEventStatus.Unknown.Unknown"]},{"name":"fun Unknown(value: Int)","description":"dev.kord.common.entity.IntegrationExpireBehavior.Unknown.Unknown","location":"common/dev.kord.common.entity/-integration-expire-behavior/-unknown/-unknown.html","searchKeys":["Unknown","fun Unknown(value: Int)","dev.kord.common.entity.IntegrationExpireBehavior.Unknown.Unknown"]},{"name":"fun Unknown(value: Int)","description":"dev.kord.common.entity.InviteTargetType.Unknown.Unknown","location":"common/dev.kord.common.entity/-invite-target-type/-unknown/-unknown.html","searchKeys":["Unknown","fun Unknown(value: Int)","dev.kord.common.entity.InviteTargetType.Unknown.Unknown"]},{"name":"fun Unknown(value: Int)","description":"dev.kord.common.entity.MFALevel.Unknown.Unknown","location":"common/dev.kord.common.entity/-m-f-a-level/-unknown/-unknown.html","searchKeys":["Unknown","fun Unknown(value: Int)","dev.kord.common.entity.MFALevel.Unknown.Unknown"]},{"name":"fun Unknown(value: Int)","description":"dev.kord.common.entity.MessageActivityType.Unknown.Unknown","location":"common/dev.kord.common.entity/-message-activity-type/-unknown/-unknown.html","searchKeys":["Unknown","fun Unknown(value: Int)","dev.kord.common.entity.MessageActivityType.Unknown.Unknown"]},{"name":"fun Unknown(value: Int)","description":"dev.kord.common.entity.MessageStickerType.Unknown.Unknown","location":"common/dev.kord.common.entity/-message-sticker-type/-unknown/-unknown.html","searchKeys":["Unknown","fun Unknown(value: Int)","dev.kord.common.entity.MessageStickerType.Unknown.Unknown"]},{"name":"fun Unknown(value: Int)","description":"dev.kord.common.entity.NsfwLevel.Unknown.Unknown","location":"common/dev.kord.common.entity/-nsfw-level/-unknown/-unknown.html","searchKeys":["Unknown","fun Unknown(value: Int)","dev.kord.common.entity.NsfwLevel.Unknown.Unknown"]},{"name":"fun Unknown(value: Int)","description":"dev.kord.common.entity.OverwriteType.Unknown.Unknown","location":"common/dev.kord.common.entity/-overwrite-type/-unknown/-unknown.html","searchKeys":["Unknown","fun Unknown(value: Int)","dev.kord.common.entity.OverwriteType.Unknown.Unknown"]},{"name":"fun Unknown(value: Int)","description":"dev.kord.common.entity.PremiumTier.Unknown.Unknown","location":"common/dev.kord.common.entity/-premium-tier/-unknown/-unknown.html","searchKeys":["Unknown","fun Unknown(value: Int)","dev.kord.common.entity.PremiumTier.Unknown.Unknown"]},{"name":"fun Unknown(value: Int)","description":"dev.kord.common.entity.ScheduledEntityType.Unknown.Unknown","location":"common/dev.kord.common.entity/-scheduled-entity-type/-unknown/-unknown.html","searchKeys":["Unknown","fun Unknown(value: Int)","dev.kord.common.entity.ScheduledEntityType.Unknown.Unknown"]},{"name":"fun Unknown(value: Int)","description":"dev.kord.common.entity.StageInstancePrivacyLevel.Unknown.Unknown","location":"common/dev.kord.common.entity/-stage-instance-privacy-level/-unknown/-unknown.html","searchKeys":["Unknown","fun Unknown(value: Int)","dev.kord.common.entity.StageInstancePrivacyLevel.Unknown.Unknown"]},{"name":"fun Unknown(value: Int)","description":"dev.kord.common.entity.TeamMembershipState.Unknown.Unknown","location":"common/dev.kord.common.entity/-team-membership-state/-unknown/-unknown.html","searchKeys":["Unknown","fun Unknown(value: Int)","dev.kord.common.entity.TeamMembershipState.Unknown.Unknown"]},{"name":"fun Unknown(value: Int)","description":"dev.kord.common.entity.TextInputStyle.Unknown.Unknown","location":"common/dev.kord.common.entity/-text-input-style/-unknown/-unknown.html","searchKeys":["Unknown","fun Unknown(value: Int)","dev.kord.common.entity.TextInputStyle.Unknown.Unknown"]},{"name":"fun Unknown(value: Int)","description":"dev.kord.common.entity.UserPremium.Unknown.Unknown","location":"common/dev.kord.common.entity/-user-premium/-unknown/-unknown.html","searchKeys":["Unknown","fun Unknown(value: Int)","dev.kord.common.entity.UserPremium.Unknown.Unknown"]},{"name":"fun Unknown(value: Int)","description":"dev.kord.common.entity.VerificationLevel.Unknown.Unknown","location":"common/dev.kord.common.entity/-verification-level/-unknown/-unknown.html","searchKeys":["Unknown","fun Unknown(value: Int)","dev.kord.common.entity.VerificationLevel.Unknown.Unknown"]},{"name":"fun Unknown(value: Int)","description":"dev.kord.common.entity.VideoQualityMode.Unknown.Unknown","location":"common/dev.kord.common.entity/-video-quality-mode/-unknown/-unknown.html","searchKeys":["Unknown","fun Unknown(value: Int)","dev.kord.common.entity.VideoQualityMode.Unknown.Unknown"]},{"name":"fun Unknown(value: Int)","description":"dev.kord.common.entity.WebhookType.Unknown.Unknown","location":"common/dev.kord.common.entity/-webhook-type/-unknown/-unknown.html","searchKeys":["Unknown","fun Unknown(value: Int)","dev.kord.common.entity.WebhookType.Unknown.Unknown"]},{"name":"fun Unknown(value: String)","description":"dev.kord.common.entity.AllowedMentionType.Unknown.Unknown","location":"common/dev.kord.common.entity/-allowed-mention-type/-unknown/-unknown.html","searchKeys":["Unknown","fun Unknown(value: String)","dev.kord.common.entity.AllowedMentionType.Unknown.Unknown"]},{"name":"fun Unknown(value: String)","description":"dev.kord.common.entity.EmbedType.Unknown.Unknown","location":"common/dev.kord.common.entity/-embed-type/-unknown/-unknown.html","searchKeys":["Unknown","fun Unknown(value: String)","dev.kord.common.entity.EmbedType.Unknown.Unknown"]},{"name":"fun Unknown(value: String)","description":"dev.kord.common.entity.GuildFeature.Unknown.Unknown","location":"common/dev.kord.common.entity/-guild-feature/-unknown/-unknown.html","searchKeys":["Unknown","fun Unknown(value: String)","dev.kord.common.entity.GuildFeature.Unknown.Unknown"]},{"name":"fun Unknown(value: String)","description":"dev.kord.common.entity.PresenceStatus.Unknown.Unknown","location":"common/dev.kord.common.entity/-presence-status/-unknown/-unknown.html","searchKeys":["Unknown","fun Unknown(value: String)","dev.kord.common.entity.PresenceStatus.Unknown.Unknown"]},{"name":"fun Unknown(vararg values: Long)","description":"dev.kord.common.entity.Permission.Unknown.Unknown","location":"common/dev.kord.common.entity/-permission/-unknown/-unknown.html","searchKeys":["Unknown","fun Unknown(vararg values: Long)","dev.kord.common.entity.Permission.Unknown.Unknown"]},{"name":"fun UserArgument(name: String, value: Snowflake, focused: OptionalBoolean = OptionalBoolean.Missing)","description":"dev.kord.common.entity.CommandArgument.UserArgument.UserArgument","location":"common/dev.kord.common.entity/-command-argument/-user-argument/-user-argument.html","searchKeys":["UserArgument","fun UserArgument(name: String, value: Snowflake, focused: OptionalBoolean = OptionalBoolean.Missing)","dev.kord.common.entity.CommandArgument.UserArgument.UserArgument"]},{"name":"fun UserFlags(code: Int)","description":"dev.kord.common.entity.UserFlags.UserFlags","location":"common/dev.kord.common.entity/-user-flags/-user-flags.html","searchKeys":["UserFlags","fun UserFlags(code: Int)","dev.kord.common.entity.UserFlags.UserFlags"]},{"name":"fun UserFlagsBuilder(code: Int = 0)","description":"dev.kord.common.entity.UserFlags.UserFlagsBuilder.UserFlagsBuilder","location":"common/dev.kord.common.entity/-user-flags/-user-flags-builder/-user-flags-builder.html","searchKeys":["UserFlagsBuilder","fun UserFlagsBuilder(code: Int = 0)","dev.kord.common.entity.UserFlags.UserFlagsBuilder.UserFlagsBuilder"]},{"name":"fun Value(uLongValue: ULong)","description":"dev.kord.common.entity.optional.OptionalSnowflake.Value.Value","location":"common/dev.kord.common.entity.optional/-optional-snowflake/-value/-value.html","searchKeys":["Value","fun Value(uLongValue: ULong)","dev.kord.common.entity.optional.OptionalSnowflake.Value.Value"]},{"name":"fun Value(value: Boolean)","description":"dev.kord.common.entity.optional.OptionalBoolean.Value.Value","location":"common/dev.kord.common.entity.optional/-optional-boolean/-value/-value.html","searchKeys":["Value","fun Value(value: Boolean)","dev.kord.common.entity.optional.OptionalBoolean.Value.Value"]},{"name":"fun Value(value: Int)","description":"dev.kord.common.entity.optional.OptionalInt.Value.Value","location":"common/dev.kord.common.entity.optional/-optional-int/-value/-value.html","searchKeys":["Value","fun Value(value: Int)","dev.kord.common.entity.optional.OptionalInt.Value.Value"]},{"name":"fun Value(value: Long)","description":"dev.kord.common.entity.optional.OptionalLong.Value.Value","location":"common/dev.kord.common.entity.optional/-optional-long/-value/-value.html","searchKeys":["Value","fun Value(value: Long)","dev.kord.common.entity.optional.OptionalLong.Value.Value"]},{"name":"fun Value(value: Snowflake)","description":"dev.kord.common.entity.optional.OptionalSnowflake.Value.Value","location":"common/dev.kord.common.entity.optional/-optional-snowflake/-value/-value.html","searchKeys":["Value","fun Value(value: Snowflake)","dev.kord.common.entity.optional.OptionalSnowflake.Value.Value"]},{"name":"fun Video(url: Optional<String> = Optional.Missing(), height: OptionalInt = OptionalInt.Missing, width: OptionalInt = OptionalInt.Missing)","description":"dev.kord.common.entity.DiscordEmbed.Video.Video","location":"common/dev.kord.common.entity/-discord-embed/-video/-video.html","searchKeys":["Video","fun Video(url: Optional<String> = Optional.Missing(), height: OptionalInt = OptionalInt.Missing, width: OptionalInt = OptionalInt.Missing)","dev.kord.common.entity.DiscordEmbed.Video.Video"]},{"name":"fun add(another: DiscordBitSet)","description":"dev.kord.common.DiscordBitSet.add","location":"common/dev.kord.common/-discord-bit-set/add.html","searchKeys":["add","fun add(another: DiscordBitSet)","dev.kord.common.DiscordBitSet.add"]},{"name":"fun asJavaLocale(): Locale","description":"dev.kord.common.Locale.asJavaLocale","location":"common/dev.kord.common/-locale/as-java-locale.html","searchKeys":["asJavaLocale","fun asJavaLocale(): Locale","dev.kord.common.Locale.asJavaLocale"]},{"name":"fun copy(id: Snowflake = this.id, type: DiscordGuildApplicationCommandPermission.Type = this.type.toDeprecatedType(), permission: Boolean = this.permission): DiscordGuildApplicationCommandPermission","description":"dev.kord.common.entity.DiscordGuildApplicationCommandPermission.copy","location":"common/dev.kord.common.entity/-discord-guild-application-command-permission/copy.html","searchKeys":["copy","fun copy(id: Snowflake = this.id, type: DiscordGuildApplicationCommandPermission.Type = this.type.toDeprecatedType(), permission: Boolean = this.permission): DiscordGuildApplicationCommandPermission","dev.kord.common.entity.DiscordGuildApplicationCommandPermission.copy"]},{"name":"fun flags(): ApplicationFlags","description":"dev.kord.common.entity.ApplicationFlags.Builder.flags","location":"common/dev.kord.common.entity/-application-flags/-builder/flags.html","searchKeys":["flags","fun flags(): ApplicationFlags","dev.kord.common.entity.ApplicationFlags.Builder.flags"]},{"name":"fun flags(): MessageFlags","description":"dev.kord.common.entity.MessageFlags.Builder.flags","location":"common/dev.kord.common.entity/-message-flags/-builder/flags.html","searchKeys":["flags","fun flags(): MessageFlags","dev.kord.common.entity.MessageFlags.Builder.flags"]},{"name":"fun flags(): UserFlags","description":"dev.kord.common.entity.UserFlags.UserFlagsBuilder.flags","location":"common/dev.kord.common.entity/-user-flags/-user-flags-builder/flags.html","searchKeys":["flags","fun flags(): UserFlags","dev.kord.common.entity.UserFlags.UserFlagsBuilder.flags"]},{"name":"fun fromString(string: String): Locale","description":"dev.kord.common.Locale.Companion.fromString","location":"common/dev.kord.common/-locale/-companion/from-string.html","searchKeys":["fromString","fun fromString(string: String): Locale","dev.kord.common.Locale.Companion.fromString"]},{"name":"fun orElse(default: Boolean): Boolean","description":"dev.kord.common.entity.optional.OptionalBoolean.orElse","location":"common/dev.kord.common.entity.optional/-optional-boolean/or-else.html","searchKeys":["orElse","fun orElse(default: Boolean): Boolean","dev.kord.common.entity.optional.OptionalBoolean.orElse"]},{"name":"fun orElse(default: Int): Int","description":"dev.kord.common.entity.optional.OptionalInt.orElse","location":"common/dev.kord.common.entity.optional/-optional-int/or-else.html","searchKeys":["orElse","fun orElse(default: Int): Int","dev.kord.common.entity.optional.OptionalInt.orElse"]},{"name":"fun orElse(default: Long): Long","description":"dev.kord.common.entity.optional.OptionalLong.orElse","location":"common/dev.kord.common.entity.optional/-optional-long/or-else.html","searchKeys":["orElse","fun orElse(default: Long): Long","dev.kord.common.entity.optional.OptionalLong.orElse"]},{"name":"fun orElse(default: Snowflake): Snowflake","description":"dev.kord.common.entity.optional.OptionalSnowflake.orElse","location":"common/dev.kord.common.entity.optional/-optional-snowflake/or-else.html","searchKeys":["orElse","fun orElse(default: Snowflake): Snowflake","dev.kord.common.entity.optional.OptionalSnowflake.orElse"]},{"name":"fun permissions(): Permissions","description":"dev.kord.common.entity.Permissions.PermissionsBuilder.permissions","location":"common/dev.kord.common.entity/-permissions/-permissions-builder/permissions.html","searchKeys":["permissions","fun permissions(): Permissions","dev.kord.common.entity.Permissions.PermissionsBuilder.permissions"]},{"name":"fun remove(another: DiscordBitSet)","description":"dev.kord.common.DiscordBitSet.remove","location":"common/dev.kord.common/-discord-bit-set/remove.html","searchKeys":["remove","fun remove(another: DiscordBitSet)","dev.kord.common.DiscordBitSet.remove"]},{"name":"fun serializer(): KSerializer<ActivityType>","description":"dev.kord.common.entity.ActivityType.ActivityTypeSerializer.serializer","location":"common/dev.kord.common.entity/-activity-type/-activity-type-serializer/serializer.html","searchKeys":["serializer","fun serializer(): KSerializer<ActivityType>","dev.kord.common.entity.ActivityType.ActivityTypeSerializer.serializer"]},{"name":"fun serializer(): KSerializer<ButtonStyle>","description":"dev.kord.common.entity.ButtonStyle.Serializer.serializer","location":"common/dev.kord.common.entity/-button-style/-serializer/serializer.html","searchKeys":["serializer","fun serializer(): KSerializer<ButtonStyle>","dev.kord.common.entity.ButtonStyle.Serializer.serializer"]},{"name":"fun serializer(): KSerializer<ComponentType>","description":"dev.kord.common.entity.ComponentType.Serializer.serializer","location":"common/dev.kord.common.entity/-component-type/-serializer/serializer.html","searchKeys":["serializer","fun serializer(): KSerializer<ComponentType>","dev.kord.common.entity.ComponentType.Serializer.serializer"]},{"name":"fun serializer(): KSerializer<GuildScheduledEventStatus>","description":"dev.kord.common.entity.GuildScheduledEventStatus.Serializer.serializer","location":"common/dev.kord.common.entity/-guild-scheduled-event-status/-serializer/serializer.html","searchKeys":["serializer","fun serializer(): KSerializer<GuildScheduledEventStatus>","dev.kord.common.entity.GuildScheduledEventStatus.Serializer.serializer"]},{"name":"fun serializer(): KSerializer<IntegrationExpireBehavior>","description":"dev.kord.common.entity.IntegrationExpireBehavior.Serializer.serializer","location":"common/dev.kord.common.entity/-integration-expire-behavior/-serializer/serializer.html","searchKeys":["serializer","fun serializer(): KSerializer<IntegrationExpireBehavior>","dev.kord.common.entity.IntegrationExpireBehavior.Serializer.serializer"]},{"name":"fun serializer(): KSerializer<PresenceStatus>","description":"dev.kord.common.entity.PresenceStatus.StatusSerializer.serializer","location":"common/dev.kord.common.entity/-presence-status/-status-serializer/serializer.html","searchKeys":["serializer","fun serializer(): KSerializer<PresenceStatus>","dev.kord.common.entity.PresenceStatus.StatusSerializer.serializer"]},{"name":"fun serializer(): KSerializer<ScheduledEntityType>","description":"dev.kord.common.entity.ScheduledEntityType.Serializer.serializer","location":"common/dev.kord.common.entity/-scheduled-entity-type/-serializer/serializer.html","searchKeys":["serializer","fun serializer(): KSerializer<ScheduledEntityType>","dev.kord.common.entity.ScheduledEntityType.Serializer.serializer"]},{"name":"fun serializer(): KSerializer<StageInstancePrivacyLevel>","description":"dev.kord.common.entity.StageInstancePrivacyLevel.Serializer.serializer","location":"common/dev.kord.common.entity/-stage-instance-privacy-level/-serializer/serializer.html","searchKeys":["serializer","fun serializer(): KSerializer<StageInstancePrivacyLevel>","dev.kord.common.entity.StageInstancePrivacyLevel.Serializer.serializer"]},{"name":"fun serializer(): KSerializer<TeamMembershipState>","description":"dev.kord.common.entity.TeamMembershipState.TeamMembershipStateSerializer.serializer","location":"common/dev.kord.common.entity/-team-membership-state/-team-membership-state-serializer/serializer.html","searchKeys":["serializer","fun serializer(): KSerializer<TeamMembershipState>","dev.kord.common.entity.TeamMembershipState.TeamMembershipStateSerializer.serializer"]},{"name":"fun valueOf(value: String): ActivityFlag","description":"dev.kord.common.entity.ActivityFlag.valueOf","location":"common/dev.kord.common.entity/-activity-flag/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): ActivityFlag","dev.kord.common.entity.ActivityFlag.valueOf"]},{"name":"fun valueOf(value: String): ApplicationFlag","description":"dev.kord.common.entity.ApplicationFlag.valueOf","location":"common/dev.kord.common.entity/-application-flag/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): ApplicationFlag","dev.kord.common.entity.ApplicationFlag.valueOf"]},{"name":"fun valueOf(value: String): DiscordTimestampStyle","description":"dev.kord.common.DiscordTimestampStyle.valueOf","location":"common/dev.kord.common/-discord-timestamp-style/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): DiscordTimestampStyle","dev.kord.common.DiscordTimestampStyle.valueOf"]},{"name":"fun valueOf(value: String): MessageFlag","description":"dev.kord.common.entity.MessageFlag.valueOf","location":"common/dev.kord.common.entity/-message-flag/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): MessageFlag","dev.kord.common.entity.MessageFlag.valueOf"]},{"name":"fun valueOf(value: String): SystemChannelFlag","description":"dev.kord.common.entity.SystemChannelFlag.valueOf","location":"common/dev.kord.common.entity/-system-channel-flag/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): SystemChannelFlag","dev.kord.common.entity.SystemChannelFlag.valueOf"]},{"name":"fun valueOf(value: String): UserFlag","description":"dev.kord.common.entity.UserFlag.valueOf","location":"common/dev.kord.common.entity/-user-flag/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): UserFlag","dev.kord.common.entity.UserFlag.valueOf"]},{"name":"fun values(): Array<ActivityFlag>","description":"dev.kord.common.entity.ActivityFlag.values","location":"common/dev.kord.common.entity/-activity-flag/values.html","searchKeys":["values","fun values(): Array<ActivityFlag>","dev.kord.common.entity.ActivityFlag.values"]},{"name":"fun values(): Array<ApplicationFlag>","description":"dev.kord.common.entity.ApplicationFlag.values","location":"common/dev.kord.common.entity/-application-flag/values.html","searchKeys":["values","fun values(): Array<ApplicationFlag>","dev.kord.common.entity.ApplicationFlag.values"]},{"name":"fun values(): Array<DiscordTimestampStyle>","description":"dev.kord.common.DiscordTimestampStyle.values","location":"common/dev.kord.common/-discord-timestamp-style/values.html","searchKeys":["values","fun values(): Array<DiscordTimestampStyle>","dev.kord.common.DiscordTimestampStyle.values"]},{"name":"fun values(): Array<MessageFlag>","description":"dev.kord.common.entity.MessageFlag.values","location":"common/dev.kord.common.entity/-message-flag/values.html","searchKeys":["values","fun values(): Array<MessageFlag>","dev.kord.common.entity.MessageFlag.values"]},{"name":"fun values(): Array<SystemChannelFlag>","description":"dev.kord.common.entity.SystemChannelFlag.values","location":"common/dev.kord.common.entity/-system-channel-flag/values.html","searchKeys":["values","fun values(): Array<SystemChannelFlag>","dev.kord.common.entity.SystemChannelFlag.values"]},{"name":"fun values(): Array<UserFlag>","description":"dev.kord.common.entity.UserFlag.values","location":"common/dev.kord.common.entity/-user-flag/values.html","searchKeys":["values","fun values(): Array<UserFlag>","dev.kord.common.entity.UserFlag.values"]},{"name":"inline fun <E : Any, T : Any> Optional<E>.flatMap(mapper: (E) -> Optional<T>): Optional<T>","description":"dev.kord.common.entity.optional.flatMap","location":"common/dev.kord.common.entity.optional/flat-map.html","searchKeys":["flatMap","inline fun <E : Any, T : Any> Optional<E>.flatMap(mapper: (E) -> Optional<T>): Optional<T>","dev.kord.common.entity.optional.flatMap"]},{"name":"inline fun <E : Any, T : Any> Optional<E>.map(mapper: (E) -> T): Optional<T>","description":"dev.kord.common.entity.optional.map","location":"common/dev.kord.common.entity.optional/map.html","searchKeys":["map","inline fun <E : Any, T : Any> Optional<E>.map(mapper: (E) -> T): Optional<T>","dev.kord.common.entity.optional.map"]},{"name":"inline fun <E : Any, T : Any> Optional<E?>.map(mapper: (E) -> T): Optional<T?>","description":"dev.kord.common.entity.optional.map","location":"common/dev.kord.common.entity.optional/map.html","searchKeys":["map","inline fun <E : Any, T : Any> Optional<E?>.map(mapper: (E) -> T): Optional<T?>","dev.kord.common.entity.optional.map"]},{"name":"inline fun <E : Any, T> Optional<E?>.mapNotNull(mapper: (E) -> T): Optional<T?>","description":"dev.kord.common.entity.optional.mapNotNull","location":"common/dev.kord.common.entity.optional/map-not-null.html","searchKeys":["mapNotNull","inline fun <E : Any, T> Optional<E?>.mapNotNull(mapper: (E) -> T): Optional<T?>","dev.kord.common.entity.optional.mapNotNull"]},{"name":"inline fun <E : Any> Optional<E>.mapSnowflake(mapper: (E) -> Snowflake): OptionalSnowflake","description":"dev.kord.common.entity.optional.mapSnowflake","location":"common/dev.kord.common.entity.optional/map-snowflake.html","searchKeys":["mapSnowflake","inline fun <E : Any> Optional<E>.mapSnowflake(mapper: (E) -> Snowflake): OptionalSnowflake","dev.kord.common.entity.optional.mapSnowflake"]},{"name":"inline fun <E : Any> Optional<E?>.mapSnowflake(mapper: (E) -> Snowflake): OptionalSnowflake","description":"dev.kord.common.entity.optional.mapSnowflake","location":"common/dev.kord.common.entity.optional/map-snowflake.html","searchKeys":["mapSnowflake","inline fun <E : Any> Optional<E?>.mapSnowflake(mapper: (E) -> Snowflake): OptionalSnowflake","dev.kord.common.entity.optional.mapSnowflake"]},{"name":"inline fun <E, T> Optional<E>.mapNullable(mapper: (E) -> T): Optional<T?>","description":"dev.kord.common.entity.optional.mapNullable","location":"common/dev.kord.common.entity.optional/map-nullable.html","searchKeys":["mapNullable","inline fun <E, T> Optional<E>.mapNullable(mapper: (E) -> T): Optional<T?>","dev.kord.common.entity.optional.mapNullable"]},{"name":"inline fun <E, T> Optional<List<E>>.mapList(mapper: (E) -> T): Optional<List<T>>","description":"dev.kord.common.entity.optional.mapList","location":"common/dev.kord.common.entity.optional/map-list.html","searchKeys":["mapList","inline fun <E, T> Optional<List<E>>.mapList(mapper: (E) -> T): Optional<List<T>>","dev.kord.common.entity.optional.mapList"]},{"name":"inline fun <E> Optional<List<E>>.filterList(mapper: (E) -> Boolean): Optional<List<E>>","description":"dev.kord.common.entity.optional.filterList","location":"common/dev.kord.common.entity.optional/filter-list.html","searchKeys":["filterList","inline fun <E> Optional<List<E>>.filterList(mapper: (E) -> Boolean): Optional<List<E>>","dev.kord.common.entity.optional.filterList"]},{"name":"inline fun <E> Optional<List<E>>.first(predicate: (E) -> Boolean): E","description":"dev.kord.common.entity.optional.first","location":"common/dev.kord.common.entity.optional/first.html","searchKeys":["first","inline fun <E> Optional<List<E>>.first(predicate: (E) -> Boolean): E","dev.kord.common.entity.optional.first"]},{"name":"inline fun <E> Optional<List<E>>.firstOrNull(predicate: (E) -> Boolean): E?","description":"dev.kord.common.entity.optional.firstOrNull","location":"common/dev.kord.common.entity.optional/first-or-null.html","searchKeys":["firstOrNull","inline fun <E> Optional<List<E>>.firstOrNull(predicate: (E) -> Boolean): E?","dev.kord.common.entity.optional.firstOrNull"]},{"name":"inline fun <K, V, R> Optional<Map<K, V>>.mapValues(mapper: (Map.Entry<K, V>) -> R): Optional<Map<K, R>>","description":"dev.kord.common.entity.optional.mapValues","location":"common/dev.kord.common.entity.optional/map-values.html","searchKeys":["mapValues","inline fun <K, V, R> Optional<Map<K, V>>.mapValues(mapper: (Map.Entry<K, V>) -> R): Optional<Map<K, R>>","dev.kord.common.entity.optional.mapValues"]},{"name":"inline fun <R> Optional<List<*>>.filterInstanceOfList(): Optional<List<R>>","description":"dev.kord.common.entity.optional.filterInstanceOfList","location":"common/dev.kord.common.entity.optional/filter-instance-of-list.html","searchKeys":["filterInstanceOfList","inline fun <R> Optional<List<*>>.filterInstanceOfList(): Optional<List<R>>","dev.kord.common.entity.optional.filterInstanceOfList"]},{"name":"inline fun <T : Any> OptionalSnowflake.map(mapper: (Snowflake) -> T): Optional<T>","description":"dev.kord.common.entity.optional.map","location":"common/dev.kord.common.entity.optional/map.html","searchKeys":["map","inline fun <T : Any> OptionalSnowflake.map(mapper: (Snowflake) -> T): Optional<T>","dev.kord.common.entity.optional.map"]},{"name":"inline fun <T, R : Any> Optional<T>.unwrap(mapper: (T) -> R): R?","description":"dev.kord.common.entity.optional.unwrap","location":"common/dev.kord.common.entity.optional/unwrap.html","searchKeys":["unwrap","inline fun <T, R : Any> Optional<T>.unwrap(mapper: (T) -> R): R?","dev.kord.common.entity.optional.unwrap"]},{"name":"inline fun ApplicationFlags(builder: ApplicationFlags.Builder.() -> Unit): ApplicationFlags","description":"dev.kord.common.entity.ApplicationFlags","location":"common/dev.kord.common.entity/-application-flags.html","searchKeys":["ApplicationFlags","inline fun ApplicationFlags(builder: ApplicationFlags.Builder.() -> Unit): ApplicationFlags","dev.kord.common.entity.ApplicationFlags"]},{"name":"inline fun MessageFlags(builder: MessageFlags.Builder.() -> Unit): MessageFlags","description":"dev.kord.common.entity.MessageFlags","location":"common/dev.kord.common.entity/-message-flags.html","searchKeys":["MessageFlags","inline fun MessageFlags(builder: MessageFlags.Builder.() -> Unit): MessageFlags","dev.kord.common.entity.MessageFlags"]},{"name":"inline fun OptionalInt.map(mapper: (Int) -> Int): OptionalInt","description":"dev.kord.common.entity.optional.map","location":"common/dev.kord.common.entity.optional/map.html","searchKeys":["map","inline fun OptionalInt.map(mapper: (Int) -> Int): OptionalInt","dev.kord.common.entity.optional.map"]},{"name":"inline fun Permissions(block: Permissions.PermissionsBuilder.() -> Unit = {}): Permissions","description":"dev.kord.common.entity.Permissions","location":"common/dev.kord.common.entity/-permissions.html","searchKeys":["Permissions","inline fun Permissions(block: Permissions.PermissionsBuilder.() -> Unit = {}): Permissions","dev.kord.common.entity.Permissions"]},{"name":"inline fun UserFlags(builder: UserFlags.UserFlagsBuilder.() -> Unit): UserFlags","description":"dev.kord.common.entity.UserFlags","location":"common/dev.kord.common.entity/-user-flags.html","searchKeys":["UserFlags","inline fun UserFlags(builder: UserFlags.UserFlagsBuilder.() -> Unit): UserFlags","dev.kord.common.entity.UserFlags"]},{"name":"inline fun copy(block: MessageFlags.Builder.() -> Unit): MessageFlags","description":"dev.kord.common.entity.MessageFlags.copy","location":"common/dev.kord.common.entity/-message-flags/copy.html","searchKeys":["copy","inline fun copy(block: MessageFlags.Builder.() -> Unit): MessageFlags","dev.kord.common.entity.MessageFlags.copy"]},{"name":"inline fun copy(block: Permissions.PermissionsBuilder.() -> Unit): Permissions","description":"dev.kord.common.entity.Permissions.copy","location":"common/dev.kord.common.entity/-permissions/copy.html","searchKeys":["copy","inline fun copy(block: Permissions.PermissionsBuilder.() -> Unit): Permissions","dev.kord.common.entity.Permissions.copy"]},{"name":"inline fun copy(block: UserFlags.UserFlagsBuilder.() -> Unit): UserFlags","description":"dev.kord.common.entity.UserFlags.copy","location":"common/dev.kord.common.entity/-user-flags/copy.html","searchKeys":["copy","inline fun copy(block: UserFlags.UserFlagsBuilder.() -> Unit): UserFlags","dev.kord.common.entity.UserFlags.copy"]},{"name":"inline fun copy(builder: ApplicationFlags.Builder.() -> Unit): ApplicationFlags","description":"dev.kord.common.entity.ApplicationFlags.copy","location":"common/dev.kord.common.entity/-application-flags/copy.html","searchKeys":["copy","inline fun copy(builder: ApplicationFlags.Builder.() -> Unit): ApplicationFlags","dev.kord.common.entity.ApplicationFlags.copy"]},{"name":"inline suspend fun <T> RateLimiter.consume(action: () -> T): T","description":"dev.kord.common.ratelimit.consume","location":"common/dev.kord.common.ratelimit/consume.html","searchKeys":["consume","inline suspend fun <T> RateLimiter.consume(action: () -> T): T","dev.kord.common.ratelimit.consume"]},{"name":"interface BaseDiscordApplication","description":"dev.kord.common.entity.BaseDiscordApplication","location":"common/dev.kord.common.entity/-base-discord-application/index.html","searchKeys":["BaseDiscordApplication","interface BaseDiscordApplication","dev.kord.common.entity.BaseDiscordApplication"]},{"name":"interface BaseDiscordInvite","description":"dev.kord.common.entity.BaseDiscordInvite","location":"common/dev.kord.common.entity/-base-discord-invite/index.html","searchKeys":["BaseDiscordInvite","interface BaseDiscordInvite","dev.kord.common.entity.BaseDiscordInvite"]},{"name":"interface IntervalRateLimiter : RateLimiter","description":"dev.kord.common.ratelimit.IntervalRateLimiter","location":"common/dev.kord.common.ratelimit/-interval-rate-limiter/index.html","searchKeys":["IntervalRateLimiter","interface IntervalRateLimiter : RateLimiter","dev.kord.common.ratelimit.IntervalRateLimiter"]},{"name":"interface RateLimiter","description":"dev.kord.common.ratelimit.RateLimiter","location":"common/dev.kord.common.ratelimit/-rate-limiter/index.html","searchKeys":["RateLimiter","interface RateLimiter","dev.kord.common.ratelimit.RateLimiter"]},{"name":"object APNG : MessageStickerType","description":"dev.kord.common.entity.MessageStickerType.APNG","location":"common/dev.kord.common.entity/-message-sticker-type/-a-p-n-g/index.html","searchKeys":["APNG","object APNG : MessageStickerType","dev.kord.common.entity.MessageStickerType.APNG"]},{"name":"object Accepted : TeamMembershipState","description":"dev.kord.common.entity.TeamMembershipState.Accepted","location":"common/dev.kord.common.entity/-team-membership-state/-accepted/index.html","searchKeys":["Accepted","object Accepted : TeamMembershipState","dev.kord.common.entity.TeamMembershipState.Accepted"]},{"name":"object ActionRow : ComponentType","description":"dev.kord.common.entity.ComponentType.ActionRow","location":"common/dev.kord.common.entity/-component-type/-action-row/index.html","searchKeys":["ActionRow","object ActionRow : ComponentType","dev.kord.common.entity.ComponentType.ActionRow"]},{"name":"object Active : GuildScheduledEventStatus","description":"dev.kord.common.entity.GuildScheduledEventStatus.Active","location":"common/dev.kord.common.entity/-guild-scheduled-event-status/-active/index.html","searchKeys":["Active","object Active : GuildScheduledEventStatus","dev.kord.common.entity.GuildScheduledEventStatus.Active"]},{"name":"object ActivityTypeSerializer : KSerializer<ActivityType> ","description":"dev.kord.common.entity.ActivityType.ActivityTypeSerializer","location":"common/dev.kord.common.entity/-activity-type/-activity-type-serializer/index.html","searchKeys":["ActivityTypeSerializer","object ActivityTypeSerializer : KSerializer<ActivityType> ","dev.kord.common.entity.ActivityType.ActivityTypeSerializer"]},{"name":"object Add : AuditLogChangeKey<List<DiscordPartialRole>> ","description":"dev.kord.common.entity.AuditLogChangeKey.Add","location":"common/dev.kord.common.entity/-audit-log-change-key/-add/index.html","searchKeys":["Add","object Add : AuditLogChangeKey<List<DiscordPartialRole>> ","dev.kord.common.entity.AuditLogChangeKey.Add"]},{"name":"object AddReactions : Permission","description":"dev.kord.common.entity.Permission.AddReactions","location":"common/dev.kord.common.entity/-permission/-add-reactions/index.html","searchKeys":["AddReactions","object AddReactions : Permission","dev.kord.common.entity.Permission.AddReactions"]},{"name":"object Administrator : Permission","description":"dev.kord.common.entity.Permission.Administrator","location":"common/dev.kord.common.entity/-permission/-administrator/index.html","searchKeys":["Administrator","object Administrator : Permission","dev.kord.common.entity.Permission.Administrator"]},{"name":"object AfkChannelId : AuditLogChangeKey<Snowflake> ","description":"dev.kord.common.entity.AuditLogChangeKey.AfkChannelId","location":"common/dev.kord.common.entity/-audit-log-change-key/-afk-channel-id/index.html","searchKeys":["AfkChannelId","object AfkChannelId : AuditLogChangeKey<Snowflake> ","dev.kord.common.entity.AuditLogChangeKey.AfkChannelId"]},{"name":"object AfkTimeout : AuditLogChangeKey<Duration> ","description":"dev.kord.common.entity.AuditLogChangeKey.AfkTimeout","location":"common/dev.kord.common.entity/-audit-log-change-key/-afk-timeout/index.html","searchKeys":["AfkTimeout","object AfkTimeout : AuditLogChangeKey<Duration> ","dev.kord.common.entity.AuditLogChangeKey.AfkTimeout"]},{"name":"object AgeRestricted : NsfwLevel","description":"dev.kord.common.entity.NsfwLevel.AgeRestricted","location":"common/dev.kord.common.entity/-nsfw-level/-age-restricted/index.html","searchKeys":["AgeRestricted","object AgeRestricted : NsfwLevel","dev.kord.common.entity.NsfwLevel.AgeRestricted"]},{"name":"object All : Permission","description":"dev.kord.common.entity.Permission.All","location":"common/dev.kord.common.entity/-permission/-all/index.html","searchKeys":["All","object All : Permission","dev.kord.common.entity.Permission.All"]},{"name":"object AllMembers : ExplicitContentFilter","description":"dev.kord.common.entity.ExplicitContentFilter.AllMembers","location":"common/dev.kord.common.entity/-explicit-content-filter/-all-members/index.html","searchKeys":["AllMembers","object AllMembers : ExplicitContentFilter","dev.kord.common.entity.ExplicitContentFilter.AllMembers"]},{"name":"object AllMessages : DefaultMessageNotificationLevel","description":"dev.kord.common.entity.DefaultMessageNotificationLevel.AllMessages","location":"common/dev.kord.common.entity/-default-message-notification-level/-all-messages/index.html","searchKeys":["AllMessages","object AllMessages : DefaultMessageNotificationLevel","dev.kord.common.entity.DefaultMessageNotificationLevel.AllMessages"]},{"name":"object Allow : AuditLogChangeKey<Permissions> ","description":"dev.kord.common.entity.AuditLogChangeKey.Allow","location":"common/dev.kord.common.entity/-audit-log-change-key/-allow/index.html","searchKeys":["Allow","object Allow : AuditLogChangeKey<Permissions> ","dev.kord.common.entity.AuditLogChangeKey.Allow"]},{"name":"object AnimatedBanner : GuildFeature","description":"dev.kord.common.entity.GuildFeature.AnimatedBanner","location":"common/dev.kord.common.entity/-guild-feature/-animated-banner/index.html","searchKeys":["AnimatedBanner","object AnimatedBanner : GuildFeature","dev.kord.common.entity.GuildFeature.AnimatedBanner"]},{"name":"object AnimatedIcon : GuildFeature","description":"dev.kord.common.entity.GuildFeature.AnimatedIcon","location":"common/dev.kord.common.entity/-guild-feature/-animated-icon/index.html","searchKeys":["AnimatedIcon","object AnimatedIcon : GuildFeature","dev.kord.common.entity.GuildFeature.AnimatedIcon"]},{"name":"object Application : WebhookType","description":"dev.kord.common.entity.WebhookType.Application","location":"common/dev.kord.common.entity/-webhook-type/-application/index.html","searchKeys":["Application","object Application : WebhookType","dev.kord.common.entity.WebhookType.Application"]},{"name":"object ApplicationCommand : InteractionType","description":"dev.kord.common.entity.InteractionType.ApplicationCommand","location":"common/dev.kord.common.entity/-interaction-type/-application-command/index.html","searchKeys":["ApplicationCommand","object ApplicationCommand : InteractionType","dev.kord.common.entity.InteractionType.ApplicationCommand"]},{"name":"object ApplicationCommandAutoCompleteResult : InteractionResponseType","description":"dev.kord.common.entity.InteractionResponseType.ApplicationCommandAutoCompleteResult","location":"common/dev.kord.common.entity/-interaction-response-type/-application-command-auto-complete-result/index.html","searchKeys":["ApplicationCommandAutoCompleteResult","object ApplicationCommandAutoCompleteResult : InteractionResponseType","dev.kord.common.entity.InteractionResponseType.ApplicationCommandAutoCompleteResult"]},{"name":"object ApplicationCommandPermissionUpdate : AuditLogEvent","description":"dev.kord.common.entity.AuditLogEvent.ApplicationCommandPermissionUpdate","location":"common/dev.kord.common.entity/-audit-log-event/-application-command-permission-update/index.html","searchKeys":["ApplicationCommandPermissionUpdate","object ApplicationCommandPermissionUpdate : AuditLogEvent","dev.kord.common.entity.AuditLogEvent.ApplicationCommandPermissionUpdate"]},{"name":"object ApplicationId : AuditLogChangeKey<Snowflake> ","description":"dev.kord.common.entity.AuditLogChangeKey.ApplicationId","location":"common/dev.kord.common.entity/-audit-log-change-key/-application-id/index.html","searchKeys":["ApplicationId","object ApplicationId : AuditLogChangeKey<Snowflake> ","dev.kord.common.entity.AuditLogChangeKey.ApplicationId"]},{"name":"object Archived : AuditLogChangeKey<Boolean> ","description":"dev.kord.common.entity.AuditLogChangeKey.Archived","location":"common/dev.kord.common.entity/-audit-log-change-key/-archived/index.html","searchKeys":["Archived","object Archived : AuditLogChangeKey<Boolean> ","dev.kord.common.entity.AuditLogChangeKey.Archived"]},{"name":"object Article : EmbedType","description":"dev.kord.common.entity.EmbedType.Article","location":"common/dev.kord.common.entity/-embed-type/-article/index.html","searchKeys":["Article","object Article : EmbedType","dev.kord.common.entity.EmbedType.Article"]},{"name":"object AttachFiles : Permission","description":"dev.kord.common.entity.Permission.AttachFiles","location":"common/dev.kord.common.entity/-permission/-attach-files/index.html","searchKeys":["AttachFiles","object AttachFiles : Permission","dev.kord.common.entity.Permission.AttachFiles"]},{"name":"object Attachment : ApplicationCommandOptionType","description":"dev.kord.common.entity.ApplicationCommandOptionType.Attachment","location":"common/dev.kord.common.entity/-application-command-option-type/-attachment/index.html","searchKeys":["Attachment","object Attachment : ApplicationCommandOptionType","dev.kord.common.entity.ApplicationCommandOptionType.Attachment"]},{"name":"object Auto : VideoQualityMode","description":"dev.kord.common.entity.VideoQualityMode.Auto","location":"common/dev.kord.common.entity/-video-quality-mode/-auto/index.html","searchKeys":["Auto","object Auto : VideoQualityMode","dev.kord.common.entity.VideoQualityMode.Auto"]},{"name":"object AutoArchiveDuration : AuditLogChangeKey<ArchiveDuration> ","description":"dev.kord.common.entity.AuditLogChangeKey.AutoArchiveDuration","location":"common/dev.kord.common.entity/-audit-log-change-key/-auto-archive-duration/index.html","searchKeys":["AutoArchiveDuration","object AutoArchiveDuration : AuditLogChangeKey<ArchiveDuration> ","dev.kord.common.entity.AuditLogChangeKey.AutoArchiveDuration"]},{"name":"object AutoComplete : InteractionType","description":"dev.kord.common.entity.InteractionType.AutoComplete","location":"common/dev.kord.common.entity/-interaction-type/-auto-complete/index.html","searchKeys":["AutoComplete","object AutoComplete : InteractionType","dev.kord.common.entity.InteractionType.AutoComplete"]},{"name":"object AutoModeration : GuildFeature","description":"dev.kord.common.entity.GuildFeature.AutoModeration","location":"common/dev.kord.common.entity/-guild-feature/-auto-moderation/index.html","searchKeys":["AutoModeration","object AutoModeration : GuildFeature","dev.kord.common.entity.GuildFeature.AutoModeration"]},{"name":"object AutoModerationAction : MessageType","description":"dev.kord.common.entity.MessageType.AutoModerationAction","location":"common/dev.kord.common.entity/-message-type/-auto-moderation-action/index.html","searchKeys":["AutoModerationAction","object AutoModerationAction : MessageType","dev.kord.common.entity.MessageType.AutoModerationAction"]},{"name":"object AutoModerationBlockMessage : AuditLogEvent","description":"dev.kord.common.entity.AuditLogEvent.AutoModerationBlockMessage","location":"common/dev.kord.common.entity/-audit-log-event/-auto-moderation-block-message/index.html","searchKeys":["AutoModerationBlockMessage","object AutoModerationBlockMessage : AuditLogEvent","dev.kord.common.entity.AuditLogEvent.AutoModerationBlockMessage"]},{"name":"object AutoModerationFlagToChannel : AuditLogEvent","description":"dev.kord.common.entity.AuditLogEvent.AutoModerationFlagToChannel","location":"common/dev.kord.common.entity/-audit-log-event/-auto-moderation-flag-to-channel/index.html","searchKeys":["AutoModerationFlagToChannel","object AutoModerationFlagToChannel : AuditLogEvent","dev.kord.common.entity.AuditLogEvent.AutoModerationFlagToChannel"]},{"name":"object AutoModerationRuleCreate : AuditLogEvent","description":"dev.kord.common.entity.AuditLogEvent.AutoModerationRuleCreate","location":"common/dev.kord.common.entity/-audit-log-event/-auto-moderation-rule-create/index.html","searchKeys":["AutoModerationRuleCreate","object AutoModerationRuleCreate : AuditLogEvent","dev.kord.common.entity.AuditLogEvent.AutoModerationRuleCreate"]},{"name":"object AutoModerationRuleDelete : AuditLogEvent","description":"dev.kord.common.entity.AuditLogEvent.AutoModerationRuleDelete","location":"common/dev.kord.common.entity/-audit-log-event/-auto-moderation-rule-delete/index.html","searchKeys":["AutoModerationRuleDelete","object AutoModerationRuleDelete : AuditLogEvent","dev.kord.common.entity.AuditLogEvent.AutoModerationRuleDelete"]},{"name":"object AutoModerationRuleUpdate : AuditLogEvent","description":"dev.kord.common.entity.AuditLogEvent.AutoModerationRuleUpdate","location":"common/dev.kord.common.entity/-audit-log-event/-auto-moderation-rule-update/index.html","searchKeys":["AutoModerationRuleUpdate","object AutoModerationRuleUpdate : AuditLogEvent","dev.kord.common.entity.AuditLogEvent.AutoModerationRuleUpdate"]},{"name":"object AutoModerationUserCommunicationDisabled : AuditLogEvent","description":"dev.kord.common.entity.AuditLogEvent.AutoModerationUserCommunicationDisabled","location":"common/dev.kord.common.entity/-audit-log-event/-auto-moderation-user-communication-disabled/index.html","searchKeys":["AutoModerationUserCommunicationDisabled","object AutoModerationUserCommunicationDisabled : AuditLogEvent","dev.kord.common.entity.AuditLogEvent.AutoModerationUserCommunicationDisabled"]},{"name":"object AvatarHash : AuditLogChangeKey<String> ","description":"dev.kord.common.entity.AuditLogChangeKey.AvatarHash","location":"common/dev.kord.common.entity/-audit-log-change-key/-avatar-hash/index.html","searchKeys":["AvatarHash","object AvatarHash : AuditLogChangeKey<String> ","dev.kord.common.entity.AuditLogChangeKey.AvatarHash"]},{"name":"object BanMembers : Permission","description":"dev.kord.common.entity.Permission.BanMembers","location":"common/dev.kord.common.entity/-permission/-ban-members/index.html","searchKeys":["BanMembers","object BanMembers : Permission","dev.kord.common.entity.Permission.BanMembers"]},{"name":"object Banner : GuildFeature","description":"dev.kord.common.entity.GuildFeature.Banner","location":"common/dev.kord.common.entity/-guild-feature/-banner/index.html","searchKeys":["Banner","object Banner : GuildFeature","dev.kord.common.entity.GuildFeature.Banner"]},{"name":"object Bitrate : AuditLogChangeKey<Int> ","description":"dev.kord.common.entity.AuditLogChangeKey.Bitrate","location":"common/dev.kord.common.entity/-audit-log-change-key/-bitrate/index.html","searchKeys":["Bitrate","object Bitrate : AuditLogChangeKey<Int> ","dev.kord.common.entity.AuditLogChangeKey.Bitrate"]},{"name":"object BlockMessage : AutoModerationActionType","description":"dev.kord.common.entity.AutoModerationActionType.BlockMessage","location":"common/dev.kord.common.entity/-auto-moderation-action-type/-block-message/index.html","searchKeys":["BlockMessage","object BlockMessage : AutoModerationActionType","dev.kord.common.entity.AutoModerationActionType.BlockMessage"]},{"name":"object Boolean : ApplicationCommandOptionType","description":"dev.kord.common.entity.ApplicationCommandOptionType.Boolean","location":"common/dev.kord.common.entity/-application-command-option-type/-boolean/index.html","searchKeys":["Boolean","object Boolean : ApplicationCommandOptionType","dev.kord.common.entity.ApplicationCommandOptionType.Boolean"]},{"name":"object BotAdd : AuditLogEvent","description":"dev.kord.common.entity.AuditLogEvent.BotAdd","location":"common/dev.kord.common.entity/-audit-log-event/-bot-add/index.html","searchKeys":["BotAdd","object BotAdd : AuditLogEvent","dev.kord.common.entity.AuditLogEvent.BotAdd"]},{"name":"object Button : ComponentType","description":"dev.kord.common.entity.ComponentType.Button","location":"common/dev.kord.common.entity/-component-type/-button/index.html","searchKeys":["Button","object Button : ComponentType","dev.kord.common.entity.ComponentType.Button"]},{"name":"object Call : MessageType","description":"dev.kord.common.entity.MessageType.Call","location":"common/dev.kord.common.entity/-message-type/-call/index.html","searchKeys":["Call","object Call : MessageType","dev.kord.common.entity.MessageType.Call"]},{"name":"object Cancelled : GuildScheduledEventStatus","description":"dev.kord.common.entity.GuildScheduledEventStatus.Cancelled","location":"common/dev.kord.common.entity/-guild-scheduled-event-status/-cancelled/index.html","searchKeys":["Cancelled","object Cancelled : GuildScheduledEventStatus","dev.kord.common.entity.GuildScheduledEventStatus.Cancelled"]},{"name":"object ChangeNickname : Permission","description":"dev.kord.common.entity.Permission.ChangeNickname","location":"common/dev.kord.common.entity/-permission/-change-nickname/index.html","searchKeys":["ChangeNickname","object ChangeNickname : Permission","dev.kord.common.entity.Permission.ChangeNickname"]},{"name":"object Channel : ApplicationCommandOptionType","description":"dev.kord.common.entity.ApplicationCommandOptionType.Channel","location":"common/dev.kord.common.entity/-application-command-option-type/-channel/index.html","searchKeys":["Channel","object Channel : ApplicationCommandOptionType","dev.kord.common.entity.ApplicationCommandOptionType.Channel"]},{"name":"object Channel : ApplicationCommandPermissionType","description":"dev.kord.common.entity.ApplicationCommandPermissionType.Channel","location":"common/dev.kord.common.entity/-application-command-permission-type/-channel/index.html","searchKeys":["Channel","object Channel : ApplicationCommandPermissionType","dev.kord.common.entity.ApplicationCommandPermissionType.Channel"]},{"name":"object Channel : DiscordGuildApplicationCommandPermission.Type","description":"dev.kord.common.entity.DiscordGuildApplicationCommandPermission.Type.Channel","location":"common/dev.kord.common.entity/-discord-guild-application-command-permission/-type/-channel/index.html","searchKeys":["Channel","object Channel : DiscordGuildApplicationCommandPermission.Type","dev.kord.common.entity.DiscordGuildApplicationCommandPermission.Type.Channel"]},{"name":"object ChannelCreate : AuditLogEvent","description":"dev.kord.common.entity.AuditLogEvent.ChannelCreate","location":"common/dev.kord.common.entity/-audit-log-event/-channel-create/index.html","searchKeys":["ChannelCreate","object ChannelCreate : AuditLogEvent","dev.kord.common.entity.AuditLogEvent.ChannelCreate"]},{"name":"object ChannelDelete : AuditLogEvent","description":"dev.kord.common.entity.AuditLogEvent.ChannelDelete","location":"common/dev.kord.common.entity/-audit-log-event/-channel-delete/index.html","searchKeys":["ChannelDelete","object ChannelDelete : AuditLogEvent","dev.kord.common.entity.AuditLogEvent.ChannelDelete"]},{"name":"object ChannelFollowAdd : MessageType","description":"dev.kord.common.entity.MessageType.ChannelFollowAdd","location":"common/dev.kord.common.entity/-message-type/-channel-follow-add/index.html","searchKeys":["ChannelFollowAdd","object ChannelFollowAdd : MessageType","dev.kord.common.entity.MessageType.ChannelFollowAdd"]},{"name":"object ChannelFollower : WebhookType","description":"dev.kord.common.entity.WebhookType.ChannelFollower","location":"common/dev.kord.common.entity/-webhook-type/-channel-follower/index.html","searchKeys":["ChannelFollower","object ChannelFollower : WebhookType","dev.kord.common.entity.WebhookType.ChannelFollower"]},{"name":"object ChannelIconChange : MessageType","description":"dev.kord.common.entity.MessageType.ChannelIconChange","location":"common/dev.kord.common.entity/-message-type/-channel-icon-change/index.html","searchKeys":["ChannelIconChange","object ChannelIconChange : MessageType","dev.kord.common.entity.MessageType.ChannelIconChange"]},{"name":"object ChannelId : AuditLogChangeKey<Snowflake> ","description":"dev.kord.common.entity.AuditLogChangeKey.ChannelId","location":"common/dev.kord.common.entity/-audit-log-change-key/-channel-id/index.html","searchKeys":["ChannelId","object ChannelId : AuditLogChangeKey<Snowflake> ","dev.kord.common.entity.AuditLogChangeKey.ChannelId"]},{"name":"object ChannelMessageWithSource : InteractionResponseType","description":"dev.kord.common.entity.InteractionResponseType.ChannelMessageWithSource","location":"common/dev.kord.common.entity/-interaction-response-type/-channel-message-with-source/index.html","searchKeys":["ChannelMessageWithSource","object ChannelMessageWithSource : InteractionResponseType","dev.kord.common.entity.InteractionResponseType.ChannelMessageWithSource"]},{"name":"object ChannelNameChange : MessageType","description":"dev.kord.common.entity.MessageType.ChannelNameChange","location":"common/dev.kord.common.entity/-message-type/-channel-name-change/index.html","searchKeys":["ChannelNameChange","object ChannelNameChange : MessageType","dev.kord.common.entity.MessageType.ChannelNameChange"]},{"name":"object ChannelOverwriteCreate : AuditLogEvent","description":"dev.kord.common.entity.AuditLogEvent.ChannelOverwriteCreate","location":"common/dev.kord.common.entity/-audit-log-event/-channel-overwrite-create/index.html","searchKeys":["ChannelOverwriteCreate","object ChannelOverwriteCreate : AuditLogEvent","dev.kord.common.entity.AuditLogEvent.ChannelOverwriteCreate"]},{"name":"object ChannelOverwriteDelete : AuditLogEvent","description":"dev.kord.common.entity.AuditLogEvent.ChannelOverwriteDelete","location":"common/dev.kord.common.entity/-audit-log-event/-channel-overwrite-delete/index.html","searchKeys":["ChannelOverwriteDelete","object ChannelOverwriteDelete : AuditLogEvent","dev.kord.common.entity.AuditLogEvent.ChannelOverwriteDelete"]},{"name":"object ChannelOverwriteUpdate : AuditLogEvent","description":"dev.kord.common.entity.AuditLogEvent.ChannelOverwriteUpdate","location":"common/dev.kord.common.entity/-audit-log-event/-channel-overwrite-update/index.html","searchKeys":["ChannelOverwriteUpdate","object ChannelOverwriteUpdate : AuditLogEvent","dev.kord.common.entity.AuditLogEvent.ChannelOverwriteUpdate"]},{"name":"object ChannelPinnedMessage : MessageType","description":"dev.kord.common.entity.MessageType.ChannelPinnedMessage","location":"common/dev.kord.common.entity/-message-type/-channel-pinned-message/index.html","searchKeys":["ChannelPinnedMessage","object ChannelPinnedMessage : MessageType","dev.kord.common.entity.MessageType.ChannelPinnedMessage"]},{"name":"object ChannelUpdate : AuditLogEvent","description":"dev.kord.common.entity.AuditLogEvent.ChannelUpdate","location":"common/dev.kord.common.entity/-audit-log-event/-channel-update/index.html","searchKeys":["ChannelUpdate","object ChannelUpdate : AuditLogEvent","dev.kord.common.entity.AuditLogEvent.ChannelUpdate"]},{"name":"object ChatInput : ApplicationCommandType","description":"dev.kord.common.entity.ApplicationCommandType.ChatInput","location":"common/dev.kord.common.entity/-application-command-type/-chat-input/index.html","searchKeys":["ChatInput","object ChatInput : ApplicationCommandType","dev.kord.common.entity.ApplicationCommandType.ChatInput"]},{"name":"object ChatInputCommand : MessageType","description":"dev.kord.common.entity.MessageType.ChatInputCommand","location":"common/dev.kord.common.entity/-message-type/-chat-input-command/index.html","searchKeys":["ChatInputCommand","object ChatInputCommand : MessageType","dev.kord.common.entity.MessageType.ChatInputCommand"]},{"name":"object Code : AuditLogChangeKey<String> ","description":"dev.kord.common.entity.AuditLogChangeKey.Code","location":"common/dev.kord.common.entity/-audit-log-change-key/-code/index.html","searchKeys":["Code","object Code : AuditLogChangeKey<String> ","dev.kord.common.entity.AuditLogChangeKey.Code"]},{"name":"object Color : AuditLogChangeKey<Color> ","description":"dev.kord.common.entity.AuditLogChangeKey.Color","location":"common/dev.kord.common.entity/-audit-log-change-key/-color/index.html","searchKeys":["Color","object Color : AuditLogChangeKey<Color> ","dev.kord.common.entity.AuditLogChangeKey.Color"]},{"name":"object CommandId : AuditLogChangeKey<Snowflake> ","description":"dev.kord.common.entity.AuditLogChangeKey.CommandId","location":"common/dev.kord.common.entity/-audit-log-change-key/-command-id/index.html","searchKeys":["CommandId","object CommandId : AuditLogChangeKey<Snowflake> ","dev.kord.common.entity.AuditLogChangeKey.CommandId"]},{"name":"object CommunicationDisabledUntil : AuditLogChangeKey<Instant> ","description":"dev.kord.common.entity.AuditLogChangeKey.CommunicationDisabledUntil","location":"common/dev.kord.common.entity/-audit-log-change-key/-communication-disabled-until/index.html","searchKeys":["CommunicationDisabledUntil","object CommunicationDisabledUntil : AuditLogChangeKey<Instant> ","dev.kord.common.entity.AuditLogChangeKey.CommunicationDisabledUntil"]},{"name":"object Community : GuildFeature","description":"dev.kord.common.entity.GuildFeature.Community","location":"common/dev.kord.common.entity/-guild-feature/-community/index.html","searchKeys":["Community","object Community : GuildFeature","dev.kord.common.entity.GuildFeature.Community"]},{"name":"object Companion","description":"dev.kord.common.Color.Companion","location":"common/dev.kord.common/-color/-companion/index.html","searchKeys":["Companion","object Companion","dev.kord.common.Color.Companion"]},{"name":"object Companion","description":"dev.kord.common.Locale.Companion","location":"common/dev.kord.common/-locale/-companion/index.html","searchKeys":["Companion","object Companion","dev.kord.common.Locale.Companion"]},{"name":"object Companion","description":"dev.kord.common.entity.ActivityType.Companion","location":"common/dev.kord.common.entity/-activity-type/-companion/index.html","searchKeys":["Companion","object Companion","dev.kord.common.entity.ActivityType.Companion"]},{"name":"object Companion","description":"dev.kord.common.entity.AllowedMentionType.Companion","location":"common/dev.kord.common.entity/-allowed-mention-type/-companion/index.html","searchKeys":["Companion","object Companion","dev.kord.common.entity.AllowedMentionType.Companion"]},{"name":"object Companion","description":"dev.kord.common.entity.ApplicationCommandOptionType.Companion","location":"common/dev.kord.common.entity/-application-command-option-type/-companion/index.html","searchKeys":["Companion","object Companion","dev.kord.common.entity.ApplicationCommandOptionType.Companion"]},{"name":"object Companion","description":"dev.kord.common.entity.ApplicationCommandPermissionType.Companion","location":"common/dev.kord.common.entity/-application-command-permission-type/-companion/index.html","searchKeys":["Companion","object Companion","dev.kord.common.entity.ApplicationCommandPermissionType.Companion"]},{"name":"object Companion","description":"dev.kord.common.entity.ApplicationCommandType.Companion","location":"common/dev.kord.common.entity/-application-command-type/-companion/index.html","searchKeys":["Companion","object Companion","dev.kord.common.entity.ApplicationCommandType.Companion"]},{"name":"object Companion","description":"dev.kord.common.entity.ArchiveDuration.Companion","location":"common/dev.kord.common.entity/-archive-duration/-companion/index.html","searchKeys":["Companion","object Companion","dev.kord.common.entity.ArchiveDuration.Companion"]},{"name":"object Companion","description":"dev.kord.common.entity.AuditLogEvent.Companion","location":"common/dev.kord.common.entity/-audit-log-event/-companion/index.html","searchKeys":["Companion","object Companion","dev.kord.common.entity.AuditLogEvent.Companion"]},{"name":"object Companion","description":"dev.kord.common.entity.AutoModerationActionType.Companion","location":"common/dev.kord.common.entity/-auto-moderation-action-type/-companion/index.html","searchKeys":["Companion","object Companion","dev.kord.common.entity.AutoModerationActionType.Companion"]},{"name":"object Companion","description":"dev.kord.common.entity.AutoModerationRuleEventType.Companion","location":"common/dev.kord.common.entity/-auto-moderation-rule-event-type/-companion/index.html","searchKeys":["Companion","object Companion","dev.kord.common.entity.AutoModerationRuleEventType.Companion"]},{"name":"object Companion","description":"dev.kord.common.entity.AutoModerationRuleKeywordPresetType.Companion","location":"common/dev.kord.common.entity/-auto-moderation-rule-keyword-preset-type/-companion/index.html","searchKeys":["Companion","object Companion","dev.kord.common.entity.AutoModerationRuleKeywordPresetType.Companion"]},{"name":"object Companion","description":"dev.kord.common.entity.AutoModerationRuleTriggerType.Companion","location":"common/dev.kord.common.entity/-auto-moderation-rule-trigger-type/-companion/index.html","searchKeys":["Companion","object Companion","dev.kord.common.entity.AutoModerationRuleTriggerType.Companion"]},{"name":"object Companion","description":"dev.kord.common.entity.ButtonStyle.Companion","location":"common/dev.kord.common.entity/-button-style/-companion/index.html","searchKeys":["Companion","object Companion","dev.kord.common.entity.ButtonStyle.Companion"]},{"name":"object Companion","description":"dev.kord.common.entity.ChannelType.Companion","location":"common/dev.kord.common.entity/-channel-type/-companion/index.html","searchKeys":["Companion","object Companion","dev.kord.common.entity.ChannelType.Companion"]},{"name":"object Companion","description":"dev.kord.common.entity.ComponentType.Companion","location":"common/dev.kord.common.entity/-component-type/-companion/index.html","searchKeys":["Companion","object Companion","dev.kord.common.entity.ComponentType.Companion"]},{"name":"object Companion","description":"dev.kord.common.entity.DefaultMessageNotificationLevel.Companion","location":"common/dev.kord.common.entity/-default-message-notification-level/-companion/index.html","searchKeys":["Companion","object Companion","dev.kord.common.entity.DefaultMessageNotificationLevel.Companion"]},{"name":"object Companion","description":"dev.kord.common.entity.DiscordConnectionVisibility.Companion","location":"common/dev.kord.common.entity/-discord-connection-visibility/-companion/index.html","searchKeys":["Companion","object Companion","dev.kord.common.entity.DiscordConnectionVisibility.Companion"]},{"name":"object Companion","description":"dev.kord.common.entity.DiscordGuildApplicationCommandPermission.Companion","location":"common/dev.kord.common.entity/-discord-guild-application-command-permission/-companion/index.html","searchKeys":["Companion","object Companion","dev.kord.common.entity.DiscordGuildApplicationCommandPermission.Companion"]},{"name":"object Companion","description":"dev.kord.common.entity.EmbedType.Companion","location":"common/dev.kord.common.entity/-embed-type/-companion/index.html","searchKeys":["Companion","object Companion","dev.kord.common.entity.EmbedType.Companion"]},{"name":"object Companion","description":"dev.kord.common.entity.ExplicitContentFilter.Companion","location":"common/dev.kord.common.entity/-explicit-content-filter/-companion/index.html","searchKeys":["Companion","object Companion","dev.kord.common.entity.ExplicitContentFilter.Companion"]},{"name":"object Companion","description":"dev.kord.common.entity.GuildFeature.Companion","location":"common/dev.kord.common.entity/-guild-feature/-companion/index.html","searchKeys":["Companion","object Companion","dev.kord.common.entity.GuildFeature.Companion"]},{"name":"object Companion","description":"dev.kord.common.entity.GuildScheduledEventPrivacyLevel.Companion","location":"common/dev.kord.common.entity/-guild-scheduled-event-privacy-level/-companion/index.html","searchKeys":["Companion","object Companion","dev.kord.common.entity.GuildScheduledEventPrivacyLevel.Companion"]},{"name":"object Companion","description":"dev.kord.common.entity.GuildScheduledEventStatus.Companion","location":"common/dev.kord.common.entity/-guild-scheduled-event-status/-companion/index.html","searchKeys":["Companion","object Companion","dev.kord.common.entity.GuildScheduledEventStatus.Companion"]},{"name":"object Companion","description":"dev.kord.common.entity.IntegrationExpireBehavior.Companion","location":"common/dev.kord.common.entity/-integration-expire-behavior/-companion/index.html","searchKeys":["Companion","object Companion","dev.kord.common.entity.IntegrationExpireBehavior.Companion"]},{"name":"object Companion","description":"dev.kord.common.entity.InteractionResponseType.Companion","location":"common/dev.kord.common.entity/-interaction-response-type/-companion/index.html","searchKeys":["Companion","object Companion","dev.kord.common.entity.InteractionResponseType.Companion"]},{"name":"object Companion","description":"dev.kord.common.entity.InteractionType.Companion","location":"common/dev.kord.common.entity/-interaction-type/-companion/index.html","searchKeys":["Companion","object Companion","dev.kord.common.entity.InteractionType.Companion"]},{"name":"object Companion","description":"dev.kord.common.entity.InviteTargetType.Companion","location":"common/dev.kord.common.entity/-invite-target-type/-companion/index.html","searchKeys":["Companion","object Companion","dev.kord.common.entity.InviteTargetType.Companion"]},{"name":"object Companion","description":"dev.kord.common.entity.MFALevel.Companion","location":"common/dev.kord.common.entity/-m-f-a-level/-companion/index.html","searchKeys":["Companion","object Companion","dev.kord.common.entity.MFALevel.Companion"]},{"name":"object Companion","description":"dev.kord.common.entity.MessageActivityType.Companion","location":"common/dev.kord.common.entity/-message-activity-type/-companion/index.html","searchKeys":["Companion","object Companion","dev.kord.common.entity.MessageActivityType.Companion"]},{"name":"object Companion","description":"dev.kord.common.entity.MessageStickerType.Companion","location":"common/dev.kord.common.entity/-message-sticker-type/-companion/index.html","searchKeys":["Companion","object Companion","dev.kord.common.entity.MessageStickerType.Companion"]},{"name":"object Companion","description":"dev.kord.common.entity.MessageType.Companion","location":"common/dev.kord.common.entity/-message-type/-companion/index.html","searchKeys":["Companion","object Companion","dev.kord.common.entity.MessageType.Companion"]},{"name":"object Companion","description":"dev.kord.common.entity.NsfwLevel.Companion","location":"common/dev.kord.common.entity/-nsfw-level/-companion/index.html","searchKeys":["Companion","object Companion","dev.kord.common.entity.NsfwLevel.Companion"]},{"name":"object Companion","description":"dev.kord.common.entity.OverwriteType.Companion","location":"common/dev.kord.common.entity/-overwrite-type/-companion/index.html","searchKeys":["Companion","object Companion","dev.kord.common.entity.OverwriteType.Companion"]},{"name":"object Companion","description":"dev.kord.common.entity.Permission.Companion","location":"common/dev.kord.common.entity/-permission/-companion/index.html","searchKeys":["Companion","object Companion","dev.kord.common.entity.Permission.Companion"]},{"name":"object Companion","description":"dev.kord.common.entity.PremiumTier.Companion","location":"common/dev.kord.common.entity/-premium-tier/-companion/index.html","searchKeys":["Companion","object Companion","dev.kord.common.entity.PremiumTier.Companion"]},{"name":"object Companion","description":"dev.kord.common.entity.PresenceStatus.Companion","location":"common/dev.kord.common.entity/-presence-status/-companion/index.html","searchKeys":["Companion","object Companion","dev.kord.common.entity.PresenceStatus.Companion"]},{"name":"object Companion","description":"dev.kord.common.entity.ScheduledEntityType.Companion","location":"common/dev.kord.common.entity/-scheduled-entity-type/-companion/index.html","searchKeys":["Companion","object Companion","dev.kord.common.entity.ScheduledEntityType.Companion"]},{"name":"object Companion","description":"dev.kord.common.entity.Snowflake.Companion","location":"common/dev.kord.common.entity/-snowflake/-companion/index.html","searchKeys":["Companion","object Companion","dev.kord.common.entity.Snowflake.Companion"]},{"name":"object Companion","description":"dev.kord.common.entity.StageInstancePrivacyLevel.Companion","location":"common/dev.kord.common.entity/-stage-instance-privacy-level/-companion/index.html","searchKeys":["Companion","object Companion","dev.kord.common.entity.StageInstancePrivacyLevel.Companion"]},{"name":"object Companion","description":"dev.kord.common.entity.TeamMembershipState.Companion","location":"common/dev.kord.common.entity/-team-membership-state/-companion/index.html","searchKeys":["Companion","object Companion","dev.kord.common.entity.TeamMembershipState.Companion"]},{"name":"object Companion","description":"dev.kord.common.entity.TextInputStyle.Companion","location":"common/dev.kord.common.entity/-text-input-style/-companion/index.html","searchKeys":["Companion","object Companion","dev.kord.common.entity.TextInputStyle.Companion"]},{"name":"object Companion","description":"dev.kord.common.entity.UserPremium.Companion","location":"common/dev.kord.common.entity/-user-premium/-companion/index.html","searchKeys":["Companion","object Companion","dev.kord.common.entity.UserPremium.Companion"]},{"name":"object Companion","description":"dev.kord.common.entity.VerificationLevel.Companion","location":"common/dev.kord.common.entity/-verification-level/-companion/index.html","searchKeys":["Companion","object Companion","dev.kord.common.entity.VerificationLevel.Companion"]},{"name":"object Companion","description":"dev.kord.common.entity.VideoQualityMode.Companion","location":"common/dev.kord.common.entity/-video-quality-mode/-companion/index.html","searchKeys":["Companion","object Companion","dev.kord.common.entity.VideoQualityMode.Companion"]},{"name":"object Companion","description":"dev.kord.common.entity.WebhookType.Companion","location":"common/dev.kord.common.entity/-webhook-type/-companion/index.html","searchKeys":["Companion","object Companion","dev.kord.common.entity.WebhookType.Companion"]},{"name":"object Companion","description":"dev.kord.common.entity.optional.Optional.Companion","location":"common/dev.kord.common.entity.optional/-optional/-companion/index.html","searchKeys":["Companion","object Companion","dev.kord.common.entity.optional.Optional.Companion"]},{"name":"object Companion","description":"dev.kord.common.entity.optional.Optional.Missing.Companion","location":"common/dev.kord.common.entity.optional/-optional/-missing/-companion/index.html","searchKeys":["Companion","object Companion","dev.kord.common.entity.optional.Optional.Missing.Companion"]},{"name":"object Companion","description":"dev.kord.common.entity.optional.Optional.Null.Companion","location":"common/dev.kord.common.entity.optional/-optional/-null/-companion/index.html","searchKeys":["Companion","object Companion","dev.kord.common.entity.optional.Optional.Null.Companion"]},{"name":"object Companion : KSerializer<DiscordShard> ","description":"dev.kord.common.entity.DiscordShard.Companion","location":"common/dev.kord.common.entity/-discord-shard/-companion/index.html","searchKeys":["Companion","object Companion : KSerializer<DiscordShard> ","dev.kord.common.entity.DiscordShard.Companion"]},{"name":"object Companion : KSerializer<Permissions> ","description":"dev.kord.common.entity.Permissions.Companion","location":"common/dev.kord.common.entity/-permissions/-companion/index.html","searchKeys":["Companion","object Companion : KSerializer<Permissions> ","dev.kord.common.entity.Permissions.Companion"]},{"name":"object Companion : KSerializer<SystemChannelFlags> ","description":"dev.kord.common.entity.SystemChannelFlags.Companion","location":"common/dev.kord.common.entity/-system-channel-flags/-companion/index.html","searchKeys":["Companion","object Companion : KSerializer<SystemChannelFlags> ","dev.kord.common.entity.SystemChannelFlags.Companion"]},{"name":"object Competing : ActivityType","description":"dev.kord.common.entity.ActivityType.Competing","location":"common/dev.kord.common.entity/-activity-type/-competing/index.html","searchKeys":["Competing","object Competing : ActivityType","dev.kord.common.entity.ActivityType.Competing"]},{"name":"object Completed : GuildScheduledEventStatus","description":"dev.kord.common.entity.GuildScheduledEventStatus.Completed","location":"common/dev.kord.common.entity/-guild-scheduled-event-status/-completed/index.html","searchKeys":["Completed","object Completed : GuildScheduledEventStatus","dev.kord.common.entity.GuildScheduledEventStatus.Completed"]},{"name":"object Component : InteractionType","description":"dev.kord.common.entity.InteractionType.Component","location":"common/dev.kord.common.entity/-interaction-type/-component/index.html","searchKeys":["Component","object Component : InteractionType","dev.kord.common.entity.InteractionType.Component"]},{"name":"object Connect : Permission","description":"dev.kord.common.entity.Permission.Connect","location":"common/dev.kord.common.entity/-permission/-connect/index.html","searchKeys":["Connect","object Connect : Permission","dev.kord.common.entity.Permission.Connect"]},{"name":"object ContextMenuCommand : MessageType","description":"dev.kord.common.entity.MessageType.ContextMenuCommand","location":"common/dev.kord.common.entity/-message-type/-context-menu-command/index.html","searchKeys":["ContextMenuCommand","object ContextMenuCommand : MessageType","dev.kord.common.entity.MessageType.ContextMenuCommand"]},{"name":"object CreateInstantInvite : Permission","description":"dev.kord.common.entity.Permission.CreateInstantInvite","location":"common/dev.kord.common.entity/-permission/-create-instant-invite/index.html","searchKeys":["CreateInstantInvite","object CreateInstantInvite : Permission","dev.kord.common.entity.Permission.CreateInstantInvite"]},{"name":"object CreatePrivateThreads : Permission","description":"dev.kord.common.entity.Permission.CreatePrivateThreads","location":"common/dev.kord.common.entity/-permission/-create-private-threads/index.html","searchKeys":["CreatePrivateThreads","object CreatePrivateThreads : Permission","dev.kord.common.entity.Permission.CreatePrivateThreads"]},{"name":"object CreatePublicThreads : Permission","description":"dev.kord.common.entity.Permission.CreatePublicThreads","location":"common/dev.kord.common.entity/-permission/-create-public-threads/index.html","searchKeys":["CreatePublicThreads","object CreatePublicThreads : Permission","dev.kord.common.entity.Permission.CreatePublicThreads"]},{"name":"object Custom : ActivityType","description":"dev.kord.common.entity.ActivityType.Custom","location":"common/dev.kord.common.entity/-activity-type/-custom/index.html","searchKeys":["Custom","object Custom : ActivityType","dev.kord.common.entity.ActivityType.Custom"]},{"name":"object DM : ChannelType","description":"dev.kord.common.entity.ChannelType.DM","location":"common/dev.kord.common.entity/-channel-type/-d-m/index.html","searchKeys":["DM","object DM : ChannelType","dev.kord.common.entity.ChannelType.DM"]},{"name":"object Danger : ButtonStyle","description":"dev.kord.common.entity.ButtonStyle.Danger","location":"common/dev.kord.common.entity/-button-style/-danger/index.html","searchKeys":["Danger","object Danger : ButtonStyle","dev.kord.common.entity.ButtonStyle.Danger"]},{"name":"object Day : ArchiveDuration","description":"dev.kord.common.entity.ArchiveDuration.Day","location":"common/dev.kord.common.entity/-archive-duration/-day/index.html","searchKeys":["Day","object Day : ArchiveDuration","dev.kord.common.entity.ArchiveDuration.Day"]},{"name":"object Deaf : AuditLogChangeKey<Boolean> ","description":"dev.kord.common.entity.AuditLogChangeKey.Deaf","location":"common/dev.kord.common.entity/-audit-log-change-key/-deaf/index.html","searchKeys":["Deaf","object Deaf : AuditLogChangeKey<Boolean> ","dev.kord.common.entity.AuditLogChangeKey.Deaf"]},{"name":"object DeafenMembers : Permission","description":"dev.kord.common.entity.Permission.DeafenMembers","location":"common/dev.kord.common.entity/-permission/-deafen-members/index.html","searchKeys":["DeafenMembers","object DeafenMembers : Permission","dev.kord.common.entity.Permission.DeafenMembers"]},{"name":"object Default : MessageType","description":"dev.kord.common.entity.MessageType.Default","location":"common/dev.kord.common.entity/-message-type/-default/index.html","searchKeys":["Default","object Default : MessageType","dev.kord.common.entity.MessageType.Default"]},{"name":"object Default : NsfwLevel","description":"dev.kord.common.entity.NsfwLevel.Default","location":"common/dev.kord.common.entity/-nsfw-level/-default/index.html","searchKeys":["Default","object Default : NsfwLevel","dev.kord.common.entity.NsfwLevel.Default"]},{"name":"object DefaultAutoArchiveDuration : AuditLogChangeKey<ArchiveDuration> ","description":"dev.kord.common.entity.AuditLogChangeKey.DefaultAutoArchiveDuration","location":"common/dev.kord.common.entity/-audit-log-change-key/-default-auto-archive-duration/index.html","searchKeys":["DefaultAutoArchiveDuration","object DefaultAutoArchiveDuration : AuditLogChangeKey<ArchiveDuration> ","dev.kord.common.entity.AuditLogChangeKey.DefaultAutoArchiveDuration"]},{"name":"object DefaultMessageNotificationLevel : AuditLogChangeKey<DefaultMessageNotificationLevel> ","description":"dev.kord.common.entity.AuditLogChangeKey.DefaultMessageNotificationLevel","location":"common/dev.kord.common.entity/-audit-log-change-key/-default-message-notification-level/index.html","searchKeys":["DefaultMessageNotificationLevel","object DefaultMessageNotificationLevel : AuditLogChangeKey<DefaultMessageNotificationLevel> ","dev.kord.common.entity.AuditLogChangeKey.DefaultMessageNotificationLevel"]},{"name":"object DeferredChannelMessageWithSource : InteractionResponseType","description":"dev.kord.common.entity.InteractionResponseType.DeferredChannelMessageWithSource","location":"common/dev.kord.common.entity/-interaction-response-type/-deferred-channel-message-with-source/index.html","searchKeys":["DeferredChannelMessageWithSource","object DeferredChannelMessageWithSource : InteractionResponseType","dev.kord.common.entity.InteractionResponseType.DeferredChannelMessageWithSource"]},{"name":"object DeferredUpdateMessage : InteractionResponseType","description":"dev.kord.common.entity.InteractionResponseType.DeferredUpdateMessage","location":"common/dev.kord.common.entity/-interaction-response-type/-deferred-update-message/index.html","searchKeys":["DeferredUpdateMessage","object DeferredUpdateMessage : InteractionResponseType","dev.kord.common.entity.InteractionResponseType.DeferredUpdateMessage"]},{"name":"object Deny : AuditLogChangeKey<Permissions> ","description":"dev.kord.common.entity.AuditLogChangeKey.Deny","location":"common/dev.kord.common.entity/-audit-log-change-key/-deny/index.html","searchKeys":["Deny","object Deny : AuditLogChangeKey<Permissions> ","dev.kord.common.entity.AuditLogChangeKey.Deny"]},{"name":"object Disabled : ExplicitContentFilter","description":"dev.kord.common.entity.ExplicitContentFilter.Disabled","location":"common/dev.kord.common.entity/-explicit-content-filter/-disabled/index.html","searchKeys":["Disabled","object Disabled : ExplicitContentFilter","dev.kord.common.entity.ExplicitContentFilter.Disabled"]},{"name":"object DiscordBitSetSerializer : KSerializer<DiscordBitSet> ","description":"dev.kord.common.DiscordBitSetSerializer","location":"common/dev.kord.common/-discord-bit-set-serializer/index.html","searchKeys":["DiscordBitSetSerializer","object DiscordBitSetSerializer : KSerializer<DiscordBitSet> ","dev.kord.common.DiscordBitSetSerializer"]},{"name":"object Discoverable : GuildFeature","description":"dev.kord.common.entity.GuildFeature.Discoverable","location":"common/dev.kord.common.entity/-guild-feature/-discoverable/index.html","searchKeys":["Discoverable","object Discoverable : GuildFeature","dev.kord.common.entity.GuildFeature.Discoverable"]},{"name":"object DoNotDisturb : PresenceStatus","description":"dev.kord.common.entity.PresenceStatus.DoNotDisturb","location":"common/dev.kord.common.entity/-presence-status/-do-not-disturb/index.html","searchKeys":["DoNotDisturb","object DoNotDisturb : PresenceStatus","dev.kord.common.entity.PresenceStatus.DoNotDisturb"]},{"name":"object DurationInDaysSerializer : DurationAsLongSerializer","description":"dev.kord.common.serialization.DurationInDaysSerializer","location":"common/dev.kord.common.serialization/-duration-in-days-serializer/index.html","searchKeys":["DurationInDaysSerializer","object DurationInDaysSerializer : DurationAsLongSerializer","dev.kord.common.serialization.DurationInDaysSerializer"]},{"name":"object DurationInHoursSerializer : DurationAsLongSerializer","description":"dev.kord.common.serialization.DurationInHoursSerializer","location":"common/dev.kord.common.serialization/-duration-in-hours-serializer/index.html","searchKeys":["DurationInHoursSerializer","object DurationInHoursSerializer : DurationAsLongSerializer","dev.kord.common.serialization.DurationInHoursSerializer"]},{"name":"object DurationInMicrosecondsSerializer : DurationAsLongSerializer","description":"dev.kord.common.serialization.DurationInMicrosecondsSerializer","location":"common/dev.kord.common.serialization/-duration-in-microseconds-serializer/index.html","searchKeys":["DurationInMicrosecondsSerializer","object DurationInMicrosecondsSerializer : DurationAsLongSerializer","dev.kord.common.serialization.DurationInMicrosecondsSerializer"]},{"name":"object DurationInMillisecondsSerializer : DurationAsLongSerializer","description":"dev.kord.common.serialization.DurationInMillisecondsSerializer","location":"common/dev.kord.common.serialization/-duration-in-milliseconds-serializer/index.html","searchKeys":["DurationInMillisecondsSerializer","object DurationInMillisecondsSerializer : DurationAsLongSerializer","dev.kord.common.serialization.DurationInMillisecondsSerializer"]},{"name":"object DurationInMinutesSerializer : DurationAsLongSerializer","description":"dev.kord.common.serialization.DurationInMinutesSerializer","location":"common/dev.kord.common.serialization/-duration-in-minutes-serializer/index.html","searchKeys":["DurationInMinutesSerializer","object DurationInMinutesSerializer : DurationAsLongSerializer","dev.kord.common.serialization.DurationInMinutesSerializer"]},{"name":"object DurationInNanosecondsSerializer : DurationAsLongSerializer","description":"dev.kord.common.serialization.DurationInNanosecondsSerializer","location":"common/dev.kord.common.serialization/-duration-in-nanoseconds-serializer/index.html","searchKeys":["DurationInNanosecondsSerializer","object DurationInNanosecondsSerializer : DurationAsLongSerializer","dev.kord.common.serialization.DurationInNanosecondsSerializer"]},{"name":"object DurationInSecondsSerializer : DurationAsLongSerializer","description":"dev.kord.common.serialization.DurationInSecondsSerializer","location":"common/dev.kord.common.serialization/-duration-in-seconds-serializer/index.html","searchKeys":["DurationInSecondsSerializer","object DurationInSecondsSerializer : DurationAsLongSerializer","dev.kord.common.serialization.DurationInSecondsSerializer"]},{"name":"object Elevated : MFALevel","description":"dev.kord.common.entity.MFALevel.Elevated","location":"common/dev.kord.common.entity/-m-f-a-level/-elevated/index.html","searchKeys":["Elevated","object Elevated : MFALevel","dev.kord.common.entity.MFALevel.Elevated"]},{"name":"object EmbedLinks : Permission","description":"dev.kord.common.entity.Permission.EmbedLinks","location":"common/dev.kord.common.entity/-permission/-embed-links/index.html","searchKeys":["EmbedLinks","object EmbedLinks : Permission","dev.kord.common.entity.Permission.EmbedLinks"]},{"name":"object EmbeddedApplication : InviteTargetType","description":"dev.kord.common.entity.InviteTargetType.EmbeddedApplication","location":"common/dev.kord.common.entity/-invite-target-type/-embedded-application/index.html","searchKeys":["EmbeddedApplication","object EmbeddedApplication : InviteTargetType","dev.kord.common.entity.InviteTargetType.EmbeddedApplication"]},{"name":"object EmojiCreate : AuditLogEvent","description":"dev.kord.common.entity.AuditLogEvent.EmojiCreate","location":"common/dev.kord.common.entity/-audit-log-event/-emoji-create/index.html","searchKeys":["EmojiCreate","object EmojiCreate : AuditLogEvent","dev.kord.common.entity.AuditLogEvent.EmojiCreate"]},{"name":"object EmojiDelete : AuditLogEvent","description":"dev.kord.common.entity.AuditLogEvent.EmojiDelete","location":"common/dev.kord.common.entity/-audit-log-event/-emoji-delete/index.html","searchKeys":["EmojiDelete","object EmojiDelete : AuditLogEvent","dev.kord.common.entity.AuditLogEvent.EmojiDelete"]},{"name":"object EmojiUpdate : AuditLogEvent","description":"dev.kord.common.entity.AuditLogEvent.EmojiUpdate","location":"common/dev.kord.common.entity/-audit-log-event/-emoji-update/index.html","searchKeys":["EmojiUpdate","object EmojiUpdate : AuditLogEvent","dev.kord.common.entity.AuditLogEvent.EmojiUpdate"]},{"name":"object EnableEmoticons : AuditLogChangeKey<Boolean> ","description":"dev.kord.common.entity.AuditLogChangeKey.EnableEmoticons","location":"common/dev.kord.common.entity/-audit-log-change-key/-enable-emoticons/index.html","searchKeys":["EnableEmoticons","object EnableEmoticons : AuditLogChangeKey<Boolean> ","dev.kord.common.entity.AuditLogChangeKey.EnableEmoticons"]},{"name":"object EntityType : AuditLogChangeKey<ScheduledEntityType> ","description":"dev.kord.common.entity.AuditLogChangeKey.EntityType","location":"common/dev.kord.common.entity/-audit-log-change-key/-entity-type/index.html","searchKeys":["EntityType","object EntityType : AuditLogChangeKey<ScheduledEntityType> ","dev.kord.common.entity.AuditLogChangeKey.EntityType"]},{"name":"object Everyone : DiscordConnectionVisibility","description":"dev.kord.common.entity.DiscordConnectionVisibility.Everyone","location":"common/dev.kord.common.entity/-discord-connection-visibility/-everyone/index.html","searchKeys":["Everyone","object Everyone : DiscordConnectionVisibility","dev.kord.common.entity.DiscordConnectionVisibility.Everyone"]},{"name":"object EveryoneMentions : AllowedMentionType","description":"dev.kord.common.entity.AllowedMentionType.EveryoneMentions","location":"common/dev.kord.common.entity/-allowed-mention-type/-everyone-mentions/index.html","searchKeys":["EveryoneMentions","object EveryoneMentions : AllowedMentionType","dev.kord.common.entity.AllowedMentionType.EveryoneMentions"]},{"name":"object ExpireBehavior : AuditLogChangeKey<IntegrationExpireBehavior> ","description":"dev.kord.common.entity.AuditLogChangeKey.ExpireBehavior","location":"common/dev.kord.common.entity/-audit-log-change-key/-expire-behavior/index.html","searchKeys":["ExpireBehavior","object ExpireBehavior : AuditLogChangeKey<IntegrationExpireBehavior> ","dev.kord.common.entity.AuditLogChangeKey.ExpireBehavior"]},{"name":"object ExpireGracePeriod : AuditLogChangeKey<Duration> ","description":"dev.kord.common.entity.AuditLogChangeKey.ExpireGracePeriod","location":"common/dev.kord.common.entity/-audit-log-change-key/-expire-grace-period/index.html","searchKeys":["ExpireGracePeriod","object ExpireGracePeriod : AuditLogChangeKey<Duration> ","dev.kord.common.entity.AuditLogChangeKey.ExpireGracePeriod"]},{"name":"object Explicit : NsfwLevel","description":"dev.kord.common.entity.NsfwLevel.Explicit","location":"common/dev.kord.common.entity/-nsfw-level/-explicit/index.html","searchKeys":["Explicit","object Explicit : NsfwLevel","dev.kord.common.entity.NsfwLevel.Explicit"]},{"name":"object ExplicitContentFilter : AuditLogChangeKey<ExplicitContentFilter> ","description":"dev.kord.common.entity.AuditLogChangeKey.ExplicitContentFilter","location":"common/dev.kord.common.entity/-audit-log-change-key/-explicit-content-filter/index.html","searchKeys":["ExplicitContentFilter","object ExplicitContentFilter : AuditLogChangeKey<ExplicitContentFilter> ","dev.kord.common.entity.AuditLogChangeKey.ExplicitContentFilter"]},{"name":"object External : ScheduledEntityType","description":"dev.kord.common.entity.ScheduledEntityType.External","location":"common/dev.kord.common.entity/-scheduled-entity-type/-external/index.html","searchKeys":["External","object External : ScheduledEntityType","dev.kord.common.entity.ScheduledEntityType.External"]},{"name":"object Featurable : GuildFeature","description":"dev.kord.common.entity.GuildFeature.Featurable","location":"common/dev.kord.common.entity/-guild-feature/-featurable/index.html","searchKeys":["Featurable","object Featurable : GuildFeature","dev.kord.common.entity.GuildFeature.Featurable"]},{"name":"object Full : VideoQualityMode","description":"dev.kord.common.entity.VideoQualityMode.Full","location":"common/dev.kord.common.entity/-video-quality-mode/-full/index.html","searchKeys":["Full","object Full : VideoQualityMode","dev.kord.common.entity.VideoQualityMode.Full"]},{"name":"object Game : ActivityType","description":"dev.kord.common.entity.ActivityType.Game","location":"common/dev.kord.common.entity/-activity-type/-game/index.html","searchKeys":["Game","object Game : ActivityType","dev.kord.common.entity.ActivityType.Game"]},{"name":"object Gifv : EmbedType","description":"dev.kord.common.entity.EmbedType.Gifv","location":"common/dev.kord.common.entity/-embed-type/-gifv/index.html","searchKeys":["Gifv","object Gifv : EmbedType","dev.kord.common.entity.EmbedType.Gifv"]},{"name":"object GroupDM : ChannelType","description":"dev.kord.common.entity.ChannelType.GroupDM","location":"common/dev.kord.common.entity/-channel-type/-group-d-m/index.html","searchKeys":["GroupDM","object GroupDM : ChannelType","dev.kord.common.entity.ChannelType.GroupDM"]},{"name":"object GuildBoost : MessageType","description":"dev.kord.common.entity.MessageType.GuildBoost","location":"common/dev.kord.common.entity/-message-type/-guild-boost/index.html","searchKeys":["GuildBoost","object GuildBoost : MessageType","dev.kord.common.entity.MessageType.GuildBoost"]},{"name":"object GuildBoostTier1 : MessageType","description":"dev.kord.common.entity.MessageType.GuildBoostTier1","location":"common/dev.kord.common.entity/-message-type/-guild-boost-tier1/index.html","searchKeys":["GuildBoostTier1","object GuildBoostTier1 : MessageType","dev.kord.common.entity.MessageType.GuildBoostTier1"]},{"name":"object GuildBoostTier2 : MessageType","description":"dev.kord.common.entity.MessageType.GuildBoostTier2","location":"common/dev.kord.common.entity/-message-type/-guild-boost-tier2/index.html","searchKeys":["GuildBoostTier2","object GuildBoostTier2 : MessageType","dev.kord.common.entity.MessageType.GuildBoostTier2"]},{"name":"object GuildBoostTier3 : MessageType","description":"dev.kord.common.entity.MessageType.GuildBoostTier3","location":"common/dev.kord.common.entity/-message-type/-guild-boost-tier3/index.html","searchKeys":["GuildBoostTier3","object GuildBoostTier3 : MessageType","dev.kord.common.entity.MessageType.GuildBoostTier3"]},{"name":"object GuildCategory : ChannelType","description":"dev.kord.common.entity.ChannelType.GuildCategory","location":"common/dev.kord.common.entity/-channel-type/-guild-category/index.html","searchKeys":["GuildCategory","object GuildCategory : ChannelType","dev.kord.common.entity.ChannelType.GuildCategory"]},{"name":"object GuildDirectory : ChannelType","description":"dev.kord.common.entity.ChannelType.GuildDirectory","location":"common/dev.kord.common.entity/-channel-type/-guild-directory/index.html","searchKeys":["GuildDirectory","object GuildDirectory : ChannelType","dev.kord.common.entity.ChannelType.GuildDirectory"]},{"name":"object GuildDiscoveryDisqualified : MessageType","description":"dev.kord.common.entity.MessageType.GuildDiscoveryDisqualified","location":"common/dev.kord.common.entity/-message-type/-guild-discovery-disqualified/index.html","searchKeys":["GuildDiscoveryDisqualified","object GuildDiscoveryDisqualified : MessageType","dev.kord.common.entity.MessageType.GuildDiscoveryDisqualified"]},{"name":"object GuildDiscoveryGracePeriodFinalWarning : MessageType","description":"dev.kord.common.entity.MessageType.GuildDiscoveryGracePeriodFinalWarning","location":"common/dev.kord.common.entity/-message-type/-guild-discovery-grace-period-final-warning/index.html","searchKeys":["GuildDiscoveryGracePeriodFinalWarning","object GuildDiscoveryGracePeriodFinalWarning : MessageType","dev.kord.common.entity.MessageType.GuildDiscoveryGracePeriodFinalWarning"]},{"name":"object GuildDiscoveryGracePeriodInitialWarning : MessageType","description":"dev.kord.common.entity.MessageType.GuildDiscoveryGracePeriodInitialWarning","location":"common/dev.kord.common.entity/-message-type/-guild-discovery-grace-period-initial-warning/index.html","searchKeys":["GuildDiscoveryGracePeriodInitialWarning","object GuildDiscoveryGracePeriodInitialWarning : MessageType","dev.kord.common.entity.MessageType.GuildDiscoveryGracePeriodInitialWarning"]},{"name":"object GuildDiscoveryRequalified : MessageType","description":"dev.kord.common.entity.MessageType.GuildDiscoveryRequalified","location":"common/dev.kord.common.entity/-message-type/-guild-discovery-requalified/index.html","searchKeys":["GuildDiscoveryRequalified","object GuildDiscoveryRequalified : MessageType","dev.kord.common.entity.MessageType.GuildDiscoveryRequalified"]},{"name":"object GuildInviteReminder : MessageType","description":"dev.kord.common.entity.MessageType.GuildInviteReminder","location":"common/dev.kord.common.entity/-message-type/-guild-invite-reminder/index.html","searchKeys":["GuildInviteReminder","object GuildInviteReminder : MessageType","dev.kord.common.entity.MessageType.GuildInviteReminder"]},{"name":"object GuildNews : ChannelType","description":"dev.kord.common.entity.ChannelType.GuildNews","location":"common/dev.kord.common.entity/-channel-type/-guild-news/index.html","searchKeys":["GuildNews","object GuildNews : ChannelType","dev.kord.common.entity.ChannelType.GuildNews"]},{"name":"object GuildOnly : GuildScheduledEventPrivacyLevel","description":"dev.kord.common.entity.GuildScheduledEventPrivacyLevel.GuildOnly","location":"common/dev.kord.common.entity/-guild-scheduled-event-privacy-level/-guild-only/index.html","searchKeys":["GuildOnly","object GuildOnly : GuildScheduledEventPrivacyLevel","dev.kord.common.entity.GuildScheduledEventPrivacyLevel.GuildOnly"]},{"name":"object GuildOnly : StageInstancePrivacyLevel","description":"dev.kord.common.entity.StageInstancePrivacyLevel.GuildOnly","location":"common/dev.kord.common.entity/-stage-instance-privacy-level/-guild-only/index.html","searchKeys":["GuildOnly","object GuildOnly : StageInstancePrivacyLevel","dev.kord.common.entity.StageInstancePrivacyLevel.GuildOnly"]},{"name":"object GuildScheduledEventCreate : AuditLogEvent","description":"dev.kord.common.entity.AuditLogEvent.GuildScheduledEventCreate","location":"common/dev.kord.common.entity/-audit-log-event/-guild-scheduled-event-create/index.html","searchKeys":["GuildScheduledEventCreate","object GuildScheduledEventCreate : AuditLogEvent","dev.kord.common.entity.AuditLogEvent.GuildScheduledEventCreate"]},{"name":"object GuildScheduledEventDelete : AuditLogEvent","description":"dev.kord.common.entity.AuditLogEvent.GuildScheduledEventDelete","location":"common/dev.kord.common.entity/-audit-log-event/-guild-scheduled-event-delete/index.html","searchKeys":["GuildScheduledEventDelete","object GuildScheduledEventDelete : AuditLogEvent","dev.kord.common.entity.AuditLogEvent.GuildScheduledEventDelete"]},{"name":"object GuildScheduledEventUpdate : AuditLogEvent","description":"dev.kord.common.entity.AuditLogEvent.GuildScheduledEventUpdate","location":"common/dev.kord.common.entity/-audit-log-event/-guild-scheduled-event-update/index.html","searchKeys":["GuildScheduledEventUpdate","object GuildScheduledEventUpdate : AuditLogEvent","dev.kord.common.entity.AuditLogEvent.GuildScheduledEventUpdate"]},{"name":"object GuildStageVoice : ChannelType","description":"dev.kord.common.entity.ChannelType.GuildStageVoice","location":"common/dev.kord.common.entity/-channel-type/-guild-stage-voice/index.html","searchKeys":["GuildStageVoice","object GuildStageVoice : ChannelType","dev.kord.common.entity.ChannelType.GuildStageVoice"]},{"name":"object GuildText : ChannelType","description":"dev.kord.common.entity.ChannelType.GuildText","location":"common/dev.kord.common.entity/-channel-type/-guild-text/index.html","searchKeys":["GuildText","object GuildText : ChannelType","dev.kord.common.entity.ChannelType.GuildText"]},{"name":"object GuildUpdate : AuditLogEvent","description":"dev.kord.common.entity.AuditLogEvent.GuildUpdate","location":"common/dev.kord.common.entity/-audit-log-event/-guild-update/index.html","searchKeys":["GuildUpdate","object GuildUpdate : AuditLogEvent","dev.kord.common.entity.AuditLogEvent.GuildUpdate"]},{"name":"object GuildVoice : ChannelType","description":"dev.kord.common.entity.ChannelType.GuildVoice","location":"common/dev.kord.common.entity/-channel-type/-guild-voice/index.html","searchKeys":["GuildVoice","object GuildVoice : ChannelType","dev.kord.common.entity.ChannelType.GuildVoice"]},{"name":"object High : VerificationLevel","description":"dev.kord.common.entity.VerificationLevel.High","location":"common/dev.kord.common.entity/-verification-level/-high/index.html","searchKeys":["High","object High : VerificationLevel","dev.kord.common.entity.VerificationLevel.High"]},{"name":"object Hoist : AuditLogChangeKey<Boolean> ","description":"dev.kord.common.entity.AuditLogChangeKey.Hoist","location":"common/dev.kord.common.entity/-audit-log-change-key/-hoist/index.html","searchKeys":["Hoist","object Hoist : AuditLogChangeKey<Boolean> ","dev.kord.common.entity.AuditLogChangeKey.Hoist"]},{"name":"object Hour : ArchiveDuration","description":"dev.kord.common.entity.ArchiveDuration.Hour","location":"common/dev.kord.common.entity/-archive-duration/-hour/index.html","searchKeys":["Hour","object Hour : ArchiveDuration","dev.kord.common.entity.ArchiveDuration.Hour"]},{"name":"object IconHash : AuditLogChangeKey<String> ","description":"dev.kord.common.entity.AuditLogChangeKey.IconHash","location":"common/dev.kord.common.entity/-audit-log-change-key/-icon-hash/index.html","searchKeys":["IconHash","object IconHash : AuditLogChangeKey<String> ","dev.kord.common.entity.AuditLogChangeKey.IconHash"]},{"name":"object Id : AuditLogChangeKey<Snowflake> ","description":"dev.kord.common.entity.AuditLogChangeKey.Id","location":"common/dev.kord.common.entity/-audit-log-change-key/-id/index.html","searchKeys":["Id","object Id : AuditLogChangeKey<Snowflake> ","dev.kord.common.entity.AuditLogChangeKey.Id"]},{"name":"object Idle : PresenceStatus","description":"dev.kord.common.entity.PresenceStatus.Idle","location":"common/dev.kord.common.entity/-presence-status/-idle/index.html","searchKeys":["Idle","object Idle : PresenceStatus","dev.kord.common.entity.PresenceStatus.Idle"]},{"name":"object Image : EmbedType","description":"dev.kord.common.entity.EmbedType.Image","location":"common/dev.kord.common.entity/-embed-type/-image/index.html","searchKeys":["Image","object Image : EmbedType","dev.kord.common.entity.EmbedType.Image"]},{"name":"object ImageHash : AuditLogChangeKey<String> ","description":"dev.kord.common.entity.AuditLogChangeKey.ImageHash","location":"common/dev.kord.common.entity/-audit-log-change-key/-image-hash/index.html","searchKeys":["ImageHash","object ImageHash : AuditLogChangeKey<String> ","dev.kord.common.entity.AuditLogChangeKey.ImageHash"]},{"name":"object Incoming : WebhookType","description":"dev.kord.common.entity.WebhookType.Incoming","location":"common/dev.kord.common.entity/-webhook-type/-incoming/index.html","searchKeys":["Incoming","object Incoming : WebhookType","dev.kord.common.entity.WebhookType.Incoming"]},{"name":"object InstantInEpochMillisecondsSerializer : KSerializer<Instant> ","description":"dev.kord.common.serialization.InstantInEpochMillisecondsSerializer","location":"common/dev.kord.common.serialization/-instant-in-epoch-milliseconds-serializer/index.html","searchKeys":["InstantInEpochMillisecondsSerializer","object InstantInEpochMillisecondsSerializer : KSerializer<Instant> ","dev.kord.common.serialization.InstantInEpochMillisecondsSerializer"]},{"name":"object InstantInEpochSecondsSerializer : KSerializer<Instant> ","description":"dev.kord.common.serialization.InstantInEpochSecondsSerializer","location":"common/dev.kord.common.serialization/-instant-in-epoch-seconds-serializer/index.html","searchKeys":["InstantInEpochSecondsSerializer","object InstantInEpochSecondsSerializer : KSerializer<Instant> ","dev.kord.common.serialization.InstantInEpochSecondsSerializer"]},{"name":"object Integer : ApplicationCommandOptionType","description":"dev.kord.common.entity.ApplicationCommandOptionType.Integer","location":"common/dev.kord.common.entity/-application-command-option-type/-integer/index.html","searchKeys":["Integer","object Integer : ApplicationCommandOptionType","dev.kord.common.entity.ApplicationCommandOptionType.Integer"]},{"name":"object IntegrationCreate : AuditLogEvent","description":"dev.kord.common.entity.AuditLogEvent.IntegrationCreate","location":"common/dev.kord.common.entity/-audit-log-event/-integration-create/index.html","searchKeys":["IntegrationCreate","object IntegrationCreate : AuditLogEvent","dev.kord.common.entity.AuditLogEvent.IntegrationCreate"]},{"name":"object IntegrationDelete : AuditLogEvent","description":"dev.kord.common.entity.AuditLogEvent.IntegrationDelete","location":"common/dev.kord.common.entity/-audit-log-event/-integration-delete/index.html","searchKeys":["IntegrationDelete","object IntegrationDelete : AuditLogEvent","dev.kord.common.entity.AuditLogEvent.IntegrationDelete"]},{"name":"object IntegrationUpdate : AuditLogEvent","description":"dev.kord.common.entity.AuditLogEvent.IntegrationUpdate","location":"common/dev.kord.common.entity/-audit-log-event/-integration-update/index.html","searchKeys":["IntegrationUpdate","object IntegrationUpdate : AuditLogEvent","dev.kord.common.entity.AuditLogEvent.IntegrationUpdate"]},{"name":"object Invisible : PresenceStatus","description":"dev.kord.common.entity.PresenceStatus.Invisible","location":"common/dev.kord.common.entity/-presence-status/-invisible/index.html","searchKeys":["Invisible","object Invisible : PresenceStatus","dev.kord.common.entity.PresenceStatus.Invisible"]},{"name":"object InviteCreate : AuditLogEvent","description":"dev.kord.common.entity.AuditLogEvent.InviteCreate","location":"common/dev.kord.common.entity/-audit-log-event/-invite-create/index.html","searchKeys":["InviteCreate","object InviteCreate : AuditLogEvent","dev.kord.common.entity.AuditLogEvent.InviteCreate"]},{"name":"object InviteDelete : AuditLogEvent","description":"dev.kord.common.entity.AuditLogEvent.InviteDelete","location":"common/dev.kord.common.entity/-audit-log-event/-invite-delete/index.html","searchKeys":["InviteDelete","object InviteDelete : AuditLogEvent","dev.kord.common.entity.AuditLogEvent.InviteDelete"]},{"name":"object InviteSplash : GuildFeature","description":"dev.kord.common.entity.GuildFeature.InviteSplash","location":"common/dev.kord.common.entity/-guild-feature/-invite-splash/index.html","searchKeys":["InviteSplash","object InviteSplash : GuildFeature","dev.kord.common.entity.GuildFeature.InviteSplash"]},{"name":"object InviteUpdate : AuditLogEvent","description":"dev.kord.common.entity.AuditLogEvent.InviteUpdate","location":"common/dev.kord.common.entity/-audit-log-event/-invite-update/index.html","searchKeys":["InviteUpdate","object InviteUpdate : AuditLogEvent","dev.kord.common.entity.AuditLogEvent.InviteUpdate"]},{"name":"object Invited : TeamMembershipState","description":"dev.kord.common.entity.TeamMembershipState.Invited","location":"common/dev.kord.common.entity/-team-membership-state/-invited/index.html","searchKeys":["Invited","object Invited : TeamMembershipState","dev.kord.common.entity.TeamMembershipState.Invited"]},{"name":"object InviterId : AuditLogChangeKey<Snowflake> ","description":"dev.kord.common.entity.AuditLogChangeKey.InviterId","location":"common/dev.kord.common.entity/-audit-log-change-key/-inviter-id/index.html","searchKeys":["InviterId","object InviterId : AuditLogChangeKey<Snowflake> ","dev.kord.common.entity.AuditLogChangeKey.InviterId"]},{"name":"object Join : MessageActivityType","description":"dev.kord.common.entity.MessageActivityType.Join","location":"common/dev.kord.common.entity/-message-activity-type/-join/index.html","searchKeys":["Join","object Join : MessageActivityType","dev.kord.common.entity.MessageActivityType.Join"]},{"name":"object JoinRequest : MessageActivityType","description":"dev.kord.common.entity.MessageActivityType.JoinRequest","location":"common/dev.kord.common.entity/-message-activity-type/-join-request/index.html","searchKeys":["JoinRequest","object JoinRequest : MessageActivityType","dev.kord.common.entity.MessageActivityType.JoinRequest"]},{"name":"object Keyword : AutoModerationRuleTriggerType","description":"dev.kord.common.entity.AutoModerationRuleTriggerType.Keyword","location":"common/dev.kord.common.entity/-auto-moderation-rule-trigger-type/-keyword/index.html","searchKeys":["Keyword","object Keyword : AutoModerationRuleTriggerType","dev.kord.common.entity.AutoModerationRuleTriggerType.Keyword"]},{"name":"object KeywordPreset : AutoModerationRuleTriggerType","description":"dev.kord.common.entity.AutoModerationRuleTriggerType.KeywordPreset","location":"common/dev.kord.common.entity/-auto-moderation-rule-trigger-type/-keyword-preset/index.html","searchKeys":["KeywordPreset","object KeywordPreset : AutoModerationRuleTriggerType","dev.kord.common.entity.AutoModerationRuleTriggerType.KeywordPreset"]},{"name":"object Kick : IntegrationExpireBehavior","description":"dev.kord.common.entity.IntegrationExpireBehavior.Kick","location":"common/dev.kord.common.entity/-integration-expire-behavior/-kick/index.html","searchKeys":["Kick","object Kick : IntegrationExpireBehavior","dev.kord.common.entity.IntegrationExpireBehavior.Kick"]},{"name":"object KickMembers : Permission","description":"dev.kord.common.entity.Permission.KickMembers","location":"common/dev.kord.common.entity/-permission/-kick-members/index.html","searchKeys":["KickMembers","object KickMembers : Permission","dev.kord.common.entity.Permission.KickMembers"]},{"name":"object KordConfiguration","description":"dev.kord.common.KordConfiguration","location":"common/dev.kord.common/-kord-configuration/index.html","searchKeys":["KordConfiguration","object KordConfiguration","dev.kord.common.KordConfiguration"]},{"name":"object KordConstants","description":"dev.kord.common.KordConstants","location":"common/dev.kord.common/-kord-constants/index.html","searchKeys":["KordConstants","object KordConstants","dev.kord.common.KordConstants"]},{"name":"object LOTTIE : MessageStickerType","description":"dev.kord.common.entity.MessageStickerType.LOTTIE","location":"common/dev.kord.common.entity/-message-sticker-type/-l-o-t-t-i-e/index.html","searchKeys":["LOTTIE","object LOTTIE : MessageStickerType","dev.kord.common.entity.MessageStickerType.LOTTIE"]},{"name":"object Link : ButtonStyle","description":"dev.kord.common.entity.ButtonStyle.Link","location":"common/dev.kord.common.entity/-button-style/-link/index.html","searchKeys":["Link","object Link : ButtonStyle","dev.kord.common.entity.ButtonStyle.Link"]},{"name":"object Link : EmbedType","description":"dev.kord.common.entity.EmbedType.Link","location":"common/dev.kord.common.entity/-embed-type/-link/index.html","searchKeys":["Link","object Link : EmbedType","dev.kord.common.entity.EmbedType.Link"]},{"name":"object Listen : MessageActivityType","description":"dev.kord.common.entity.MessageActivityType.Listen","location":"common/dev.kord.common.entity/-message-activity-type/-listen/index.html","searchKeys":["Listen","object Listen : MessageActivityType","dev.kord.common.entity.MessageActivityType.Listen"]},{"name":"object Listening : ActivityType","description":"dev.kord.common.entity.ActivityType.Listening","location":"common/dev.kord.common.entity/-activity-type/-listening/index.html","searchKeys":["Listening","object Listening : ActivityType","dev.kord.common.entity.ActivityType.Listening"]},{"name":"object Location : AuditLogChangeKey<String> ","description":"dev.kord.common.entity.AuditLogChangeKey.Location","location":"common/dev.kord.common.entity/-audit-log-change-key/-location/index.html","searchKeys":["Location","object Location : AuditLogChangeKey<String> ","dev.kord.common.entity.AuditLogChangeKey.Location"]},{"name":"object Locked : AuditLogChangeKey<Boolean> ","description":"dev.kord.common.entity.AuditLogChangeKey.Locked","location":"common/dev.kord.common.entity/-audit-log-change-key/-locked/index.html","searchKeys":["Locked","object Locked : AuditLogChangeKey<Boolean> ","dev.kord.common.entity.AuditLogChangeKey.Locked"]},{"name":"object Low : VerificationLevel","description":"dev.kord.common.entity.VerificationLevel.Low","location":"common/dev.kord.common.entity/-verification-level/-low/index.html","searchKeys":["Low","object Low : VerificationLevel","dev.kord.common.entity.VerificationLevel.Low"]},{"name":"object MFALevel : AuditLogChangeKey<MFALevel> ","description":"dev.kord.common.entity.AuditLogChangeKey.MFALevel","location":"common/dev.kord.common.entity/-audit-log-change-key/-m-f-a-level/index.html","searchKeys":["MFALevel","object MFALevel : AuditLogChangeKey<MFALevel> ","dev.kord.common.entity.AuditLogChangeKey.MFALevel"]},{"name":"object ManageChannels : Permission","description":"dev.kord.common.entity.Permission.ManageChannels","location":"common/dev.kord.common.entity/-permission/-manage-channels/index.html","searchKeys":["ManageChannels","object ManageChannels : Permission","dev.kord.common.entity.Permission.ManageChannels"]},{"name":"object ManageEmojisAndStickers : Permission","description":"dev.kord.common.entity.Permission.ManageEmojisAndStickers","location":"common/dev.kord.common.entity/-permission/-manage-emojis-and-stickers/index.html","searchKeys":["ManageEmojisAndStickers","object ManageEmojisAndStickers : Permission","dev.kord.common.entity.Permission.ManageEmojisAndStickers"]},{"name":"object ManageEvents : Permission","description":"dev.kord.common.entity.Permission.ManageEvents","location":"common/dev.kord.common.entity/-permission/-manage-events/index.html","searchKeys":["ManageEvents","object ManageEvents : Permission","dev.kord.common.entity.Permission.ManageEvents"]},{"name":"object ManageGuild : Permission","description":"dev.kord.common.entity.Permission.ManageGuild","location":"common/dev.kord.common.entity/-permission/-manage-guild/index.html","searchKeys":["ManageGuild","object ManageGuild : Permission","dev.kord.common.entity.Permission.ManageGuild"]},{"name":"object ManageMessages : Permission","description":"dev.kord.common.entity.Permission.ManageMessages","location":"common/dev.kord.common.entity/-permission/-manage-messages/index.html","searchKeys":["ManageMessages","object ManageMessages : Permission","dev.kord.common.entity.Permission.ManageMessages"]},{"name":"object ManageNicknames : Permission","description":"dev.kord.common.entity.Permission.ManageNicknames","location":"common/dev.kord.common.entity/-permission/-manage-nicknames/index.html","searchKeys":["ManageNicknames","object ManageNicknames : Permission","dev.kord.common.entity.Permission.ManageNicknames"]},{"name":"object ManageRoles : Permission","description":"dev.kord.common.entity.Permission.ManageRoles","location":"common/dev.kord.common.entity/-permission/-manage-roles/index.html","searchKeys":["ManageRoles","object ManageRoles : Permission","dev.kord.common.entity.Permission.ManageRoles"]},{"name":"object ManageThreads : Permission","description":"dev.kord.common.entity.Permission.ManageThreads","location":"common/dev.kord.common.entity/-permission/-manage-threads/index.html","searchKeys":["ManageThreads","object ManageThreads : Permission","dev.kord.common.entity.Permission.ManageThreads"]},{"name":"object ManageWebhooks : Permission","description":"dev.kord.common.entity.Permission.ManageWebhooks","location":"common/dev.kord.common.entity/-permission/-manage-webhooks/index.html","searchKeys":["ManageWebhooks","object ManageWebhooks : Permission","dev.kord.common.entity.Permission.ManageWebhooks"]},{"name":"object MaxAges : AuditLogChangeKey<Duration> ","description":"dev.kord.common.entity.AuditLogChangeKey.MaxAges","location":"common/dev.kord.common.entity/-audit-log-change-key/-max-ages/index.html","searchKeys":["MaxAges","object MaxAges : AuditLogChangeKey<Duration> ","dev.kord.common.entity.AuditLogChangeKey.MaxAges"]},{"name":"object MaxUses : AuditLogChangeKey<Int> ","description":"dev.kord.common.entity.AuditLogChangeKey.MaxUses","location":"common/dev.kord.common.entity/-audit-log-change-key/-max-uses/index.html","searchKeys":["MaxUses","object MaxUses : AuditLogChangeKey<Int> ","dev.kord.common.entity.AuditLogChangeKey.MaxUses"]},{"name":"object Medium : VerificationLevel","description":"dev.kord.common.entity.VerificationLevel.Medium","location":"common/dev.kord.common.entity/-verification-level/-medium/index.html","searchKeys":["Medium","object Medium : VerificationLevel","dev.kord.common.entity.VerificationLevel.Medium"]},{"name":"object Member : OverwriteType","description":"dev.kord.common.entity.OverwriteType.Member","location":"common/dev.kord.common.entity/-overwrite-type/-member/index.html","searchKeys":["Member","object Member : OverwriteType","dev.kord.common.entity.OverwriteType.Member"]},{"name":"object MemberBanAdd : AuditLogEvent","description":"dev.kord.common.entity.AuditLogEvent.MemberBanAdd","location":"common/dev.kord.common.entity/-audit-log-event/-member-ban-add/index.html","searchKeys":["MemberBanAdd","object MemberBanAdd : AuditLogEvent","dev.kord.common.entity.AuditLogEvent.MemberBanAdd"]},{"name":"object MemberBanRemove : AuditLogEvent","description":"dev.kord.common.entity.AuditLogEvent.MemberBanRemove","location":"common/dev.kord.common.entity/-audit-log-event/-member-ban-remove/index.html","searchKeys":["MemberBanRemove","object MemberBanRemove : AuditLogEvent","dev.kord.common.entity.AuditLogEvent.MemberBanRemove"]},{"name":"object MemberDisconnect : AuditLogEvent","description":"dev.kord.common.entity.AuditLogEvent.MemberDisconnect","location":"common/dev.kord.common.entity/-audit-log-event/-member-disconnect/index.html","searchKeys":["MemberDisconnect","object MemberDisconnect : AuditLogEvent","dev.kord.common.entity.AuditLogEvent.MemberDisconnect"]},{"name":"object MemberKick : AuditLogEvent","description":"dev.kord.common.entity.AuditLogEvent.MemberKick","location":"common/dev.kord.common.entity/-audit-log-event/-member-kick/index.html","searchKeys":["MemberKick","object MemberKick : AuditLogEvent","dev.kord.common.entity.AuditLogEvent.MemberKick"]},{"name":"object MemberMove : AuditLogEvent","description":"dev.kord.common.entity.AuditLogEvent.MemberMove","location":"common/dev.kord.common.entity/-audit-log-event/-member-move/index.html","searchKeys":["MemberMove","object MemberMove : AuditLogEvent","dev.kord.common.entity.AuditLogEvent.MemberMove"]},{"name":"object MemberPrune : AuditLogEvent","description":"dev.kord.common.entity.AuditLogEvent.MemberPrune","location":"common/dev.kord.common.entity/-audit-log-event/-member-prune/index.html","searchKeys":["MemberPrune","object MemberPrune : AuditLogEvent","dev.kord.common.entity.AuditLogEvent.MemberPrune"]},{"name":"object MemberRoleUpdate : AuditLogEvent","description":"dev.kord.common.entity.AuditLogEvent.MemberRoleUpdate","location":"common/dev.kord.common.entity/-audit-log-event/-member-role-update/index.html","searchKeys":["MemberRoleUpdate","object MemberRoleUpdate : AuditLogEvent","dev.kord.common.entity.AuditLogEvent.MemberRoleUpdate"]},{"name":"object MemberUpdate : AuditLogEvent","description":"dev.kord.common.entity.AuditLogEvent.MemberUpdate","location":"common/dev.kord.common.entity/-audit-log-event/-member-update/index.html","searchKeys":["MemberUpdate","object MemberUpdate : AuditLogEvent","dev.kord.common.entity.AuditLogEvent.MemberUpdate"]},{"name":"object MemberVerificationGateEnabled : GuildFeature","description":"dev.kord.common.entity.GuildFeature.MemberVerificationGateEnabled","location":"common/dev.kord.common.entity/-guild-feature/-member-verification-gate-enabled/index.html","searchKeys":["MemberVerificationGateEnabled","object MemberVerificationGateEnabled : GuildFeature","dev.kord.common.entity.GuildFeature.MemberVerificationGateEnabled"]},{"name":"object MembersWithoutRoles : ExplicitContentFilter","description":"dev.kord.common.entity.ExplicitContentFilter.MembersWithoutRoles","location":"common/dev.kord.common.entity/-explicit-content-filter/-members-without-roles/index.html","searchKeys":["MembersWithoutRoles","object MembersWithoutRoles : ExplicitContentFilter","dev.kord.common.entity.ExplicitContentFilter.MembersWithoutRoles"]},{"name":"object MentionEveryone : Permission","description":"dev.kord.common.entity.Permission.MentionEveryone","location":"common/dev.kord.common.entity/-permission/-mention-everyone/index.html","searchKeys":["MentionEveryone","object MentionEveryone : Permission","dev.kord.common.entity.Permission.MentionEveryone"]},{"name":"object MentionSpam : AutoModerationRuleTriggerType","description":"dev.kord.common.entity.AutoModerationRuleTriggerType.MentionSpam","location":"common/dev.kord.common.entity/-auto-moderation-rule-trigger-type/-mention-spam/index.html","searchKeys":["MentionSpam","object MentionSpam : AutoModerationRuleTriggerType","dev.kord.common.entity.AutoModerationRuleTriggerType.MentionSpam"]},{"name":"object Mentionable : ApplicationCommandOptionType","description":"dev.kord.common.entity.ApplicationCommandOptionType.Mentionable","location":"common/dev.kord.common.entity/-application-command-option-type/-mentionable/index.html","searchKeys":["Mentionable","object Mentionable : ApplicationCommandOptionType","dev.kord.common.entity.ApplicationCommandOptionType.Mentionable"]},{"name":"object Mentionable : AuditLogChangeKey<Boolean> ","description":"dev.kord.common.entity.AuditLogChangeKey.Mentionable","location":"common/dev.kord.common.entity/-audit-log-change-key/-mentionable/index.html","searchKeys":["Mentionable","object Mentionable : AuditLogChangeKey<Boolean> ","dev.kord.common.entity.AuditLogChangeKey.Mentionable"]},{"name":"object Message : ApplicationCommandType","description":"dev.kord.common.entity.ApplicationCommandType.Message","location":"common/dev.kord.common.entity/-application-command-type/-message/index.html","searchKeys":["Message","object Message : ApplicationCommandType","dev.kord.common.entity.ApplicationCommandType.Message"]},{"name":"object MessageBulkDelete : AuditLogEvent","description":"dev.kord.common.entity.AuditLogEvent.MessageBulkDelete","location":"common/dev.kord.common.entity/-audit-log-event/-message-bulk-delete/index.html","searchKeys":["MessageBulkDelete","object MessageBulkDelete : AuditLogEvent","dev.kord.common.entity.AuditLogEvent.MessageBulkDelete"]},{"name":"object MessageDelete : AuditLogEvent","description":"dev.kord.common.entity.AuditLogEvent.MessageDelete","location":"common/dev.kord.common.entity/-audit-log-event/-message-delete/index.html","searchKeys":["MessageDelete","object MessageDelete : AuditLogEvent","dev.kord.common.entity.AuditLogEvent.MessageDelete"]},{"name":"object MessagePin : AuditLogEvent","description":"dev.kord.common.entity.AuditLogEvent.MessagePin","location":"common/dev.kord.common.entity/-audit-log-event/-message-pin/index.html","searchKeys":["MessagePin","object MessagePin : AuditLogEvent","dev.kord.common.entity.AuditLogEvent.MessagePin"]},{"name":"object MessageSend : AutoModerationRuleEventType","description":"dev.kord.common.entity.AutoModerationRuleEventType.MessageSend","location":"common/dev.kord.common.entity/-auto-moderation-rule-event-type/-message-send/index.html","searchKeys":["MessageSend","object MessageSend : AutoModerationRuleEventType","dev.kord.common.entity.AutoModerationRuleEventType.MessageSend"]},{"name":"object MessageUnpin : AuditLogEvent","description":"dev.kord.common.entity.AuditLogEvent.MessageUnpin","location":"common/dev.kord.common.entity/-audit-log-event/-message-unpin/index.html","searchKeys":["MessageUnpin","object MessageUnpin : AuditLogEvent","dev.kord.common.entity.AuditLogEvent.MessageUnpin"]},{"name":"object Missing : OptionalBoolean","description":"dev.kord.common.entity.optional.OptionalBoolean.Missing","location":"common/dev.kord.common.entity.optional/-optional-boolean/-missing/index.html","searchKeys":["Missing","object Missing : OptionalBoolean","dev.kord.common.entity.optional.OptionalBoolean.Missing"]},{"name":"object Missing : OptionalInt","description":"dev.kord.common.entity.optional.OptionalInt.Missing","location":"common/dev.kord.common.entity.optional/-optional-int/-missing/index.html","searchKeys":["Missing","object Missing : OptionalInt","dev.kord.common.entity.optional.OptionalInt.Missing"]},{"name":"object Missing : OptionalLong","description":"dev.kord.common.entity.optional.OptionalLong.Missing","location":"common/dev.kord.common.entity.optional/-optional-long/-missing/index.html","searchKeys":["Missing","object Missing : OptionalLong","dev.kord.common.entity.optional.OptionalLong.Missing"]},{"name":"object Missing : OptionalSnowflake","description":"dev.kord.common.entity.optional.OptionalSnowflake.Missing","location":"common/dev.kord.common.entity.optional/-optional-snowflake/-missing/index.html","searchKeys":["Missing","object Missing : OptionalSnowflake","dev.kord.common.entity.optional.OptionalSnowflake.Missing"]},{"name":"object Modal : InteractionResponseType","description":"dev.kord.common.entity.InteractionResponseType.Modal","location":"common/dev.kord.common.entity/-interaction-response-type/-modal/index.html","searchKeys":["Modal","object Modal : InteractionResponseType","dev.kord.common.entity.InteractionResponseType.Modal"]},{"name":"object ModalSubmit : InteractionType","description":"dev.kord.common.entity.InteractionType.ModalSubmit","location":"common/dev.kord.common.entity/-interaction-type/-modal-submit/index.html","searchKeys":["ModalSubmit","object ModalSubmit : InteractionType","dev.kord.common.entity.InteractionType.ModalSubmit"]},{"name":"object ModerateMembers : Permission","description":"dev.kord.common.entity.Permission.ModerateMembers","location":"common/dev.kord.common.entity/-permission/-moderate-members/index.html","searchKeys":["ModerateMembers","object ModerateMembers : Permission","dev.kord.common.entity.Permission.ModerateMembers"]},{"name":"object MonetizationEnabled : GuildFeature","description":"dev.kord.common.entity.GuildFeature.MonetizationEnabled","location":"common/dev.kord.common.entity/-guild-feature/-monetization-enabled/index.html","searchKeys":["MonetizationEnabled","object MonetizationEnabled : GuildFeature","dev.kord.common.entity.GuildFeature.MonetizationEnabled"]},{"name":"object MoreStickers : GuildFeature","description":"dev.kord.common.entity.GuildFeature.MoreStickers","location":"common/dev.kord.common.entity/-guild-feature/-more-stickers/index.html","searchKeys":["MoreStickers","object MoreStickers : GuildFeature","dev.kord.common.entity.GuildFeature.MoreStickers"]},{"name":"object MoveMembers : Permission","description":"dev.kord.common.entity.Permission.MoveMembers","location":"common/dev.kord.common.entity/-permission/-move-members/index.html","searchKeys":["MoveMembers","object MoveMembers : Permission","dev.kord.common.entity.Permission.MoveMembers"]},{"name":"object Mute : AuditLogChangeKey<Boolean> ","description":"dev.kord.common.entity.AuditLogChangeKey.Mute","location":"common/dev.kord.common.entity/-audit-log-change-key/-mute/index.html","searchKeys":["Mute","object Mute : AuditLogChangeKey<Boolean> ","dev.kord.common.entity.AuditLogChangeKey.Mute"]},{"name":"object MuteMembers : Permission","description":"dev.kord.common.entity.Permission.MuteMembers","location":"common/dev.kord.common.entity/-permission/-mute-members/index.html","searchKeys":["MuteMembers","object MuteMembers : Permission","dev.kord.common.entity.Permission.MuteMembers"]},{"name":"object Name : AuditLogChangeKey<String> ","description":"dev.kord.common.entity.AuditLogChangeKey.Name","location":"common/dev.kord.common.entity/-audit-log-change-key/-name/index.html","searchKeys":["Name","object Name : AuditLogChangeKey<String> ","dev.kord.common.entity.AuditLogChangeKey.Name"]},{"name":"object News : GuildFeature","description":"dev.kord.common.entity.GuildFeature.News","location":"common/dev.kord.common.entity/-guild-feature/-news/index.html","searchKeys":["News","object News : GuildFeature","dev.kord.common.entity.GuildFeature.News"]},{"name":"object Nick : AuditLogChangeKey<String> ","description":"dev.kord.common.entity.AuditLogChangeKey.Nick","location":"common/dev.kord.common.entity/-audit-log-change-key/-nick/index.html","searchKeys":["Nick","object Nick : AuditLogChangeKey<String> ","dev.kord.common.entity.AuditLogChangeKey.Nick"]},{"name":"object Nitro : UserPremium","description":"dev.kord.common.entity.UserPremium.Nitro","location":"common/dev.kord.common.entity/-user-premium/-nitro/index.html","searchKeys":["Nitro","object Nitro : UserPremium","dev.kord.common.entity.UserPremium.Nitro"]},{"name":"object NitroBasic : UserPremium","description":"dev.kord.common.entity.UserPremium.NitroBasic","location":"common/dev.kord.common.entity/-user-premium/-nitro-basic/index.html","searchKeys":["NitroBasic","object NitroBasic : UserPremium","dev.kord.common.entity.UserPremium.NitroBasic"]},{"name":"object NitroClassic : UserPremium","description":"dev.kord.common.entity.UserPremium.NitroClassic","location":"common/dev.kord.common.entity/-user-premium/-nitro-classic/index.html","searchKeys":["NitroClassic","object NitroClassic : UserPremium","dev.kord.common.entity.UserPremium.NitroClassic"]},{"name":"object None : DiscordConnectionVisibility","description":"dev.kord.common.entity.DiscordConnectionVisibility.None","location":"common/dev.kord.common.entity/-discord-connection-visibility/-none/index.html","searchKeys":["None","object None : DiscordConnectionVisibility","dev.kord.common.entity.DiscordConnectionVisibility.None"]},{"name":"object None : MFALevel","description":"dev.kord.common.entity.MFALevel.None","location":"common/dev.kord.common.entity/-m-f-a-level/-none/index.html","searchKeys":["None","object None : MFALevel","dev.kord.common.entity.MFALevel.None"]},{"name":"object None : PremiumTier","description":"dev.kord.common.entity.PremiumTier.None","location":"common/dev.kord.common.entity/-premium-tier/-none/index.html","searchKeys":["None","object None : PremiumTier","dev.kord.common.entity.PremiumTier.None"]},{"name":"object None : UserPremium","description":"dev.kord.common.entity.UserPremium.None","location":"common/dev.kord.common.entity/-user-premium/-none/index.html","searchKeys":["None","object None : UserPremium","dev.kord.common.entity.UserPremium.None"]},{"name":"object None : VerificationLevel","description":"dev.kord.common.entity.VerificationLevel.None","location":"common/dev.kord.common.entity/-verification-level/-none/index.html","searchKeys":["None","object None : VerificationLevel","dev.kord.common.entity.VerificationLevel.None"]},{"name":"object NotSerializable : KSerializer<Any?> ","description":"dev.kord.common.entity.NotSerializable","location":"common/dev.kord.common.entity/-not-serializable/index.html","searchKeys":["NotSerializable","object NotSerializable : KSerializer<Any?> ","dev.kord.common.entity.NotSerializable"]},{"name":"object Nsfw : AuditLogChangeKey<Boolean> ","description":"dev.kord.common.entity.AuditLogChangeKey.Nsfw","location":"common/dev.kord.common.entity/-audit-log-change-key/-nsfw/index.html","searchKeys":["Nsfw","object Nsfw : AuditLogChangeKey<Boolean> ","dev.kord.common.entity.AuditLogChangeKey.Nsfw"]},{"name":"object Number : ApplicationCommandOptionType","description":"dev.kord.common.entity.ApplicationCommandOptionType.Number","location":"common/dev.kord.common.entity/-application-command-option-type/-number/index.html","searchKeys":["Number","object Number : ApplicationCommandOptionType","dev.kord.common.entity.ApplicationCommandOptionType.Number"]},{"name":"object Offline : PresenceStatus","description":"dev.kord.common.entity.PresenceStatus.Offline","location":"common/dev.kord.common.entity/-presence-status/-offline/index.html","searchKeys":["Offline","object Offline : PresenceStatus","dev.kord.common.entity.PresenceStatus.Offline"]},{"name":"object One : PremiumTier","description":"dev.kord.common.entity.PremiumTier.One","location":"common/dev.kord.common.entity/-premium-tier/-one/index.html","searchKeys":["One","object One : PremiumTier","dev.kord.common.entity.PremiumTier.One"]},{"name":"object Online : PresenceStatus","description":"dev.kord.common.entity.PresenceStatus.Online","location":"common/dev.kord.common.entity/-presence-status/-online/index.html","searchKeys":["Online","object Online : PresenceStatus","dev.kord.common.entity.PresenceStatus.Online"]},{"name":"object OnlyMentions : DefaultMessageNotificationLevel","description":"dev.kord.common.entity.DefaultMessageNotificationLevel.OnlyMentions","location":"common/dev.kord.common.entity/-default-message-notification-level/-only-mentions/index.html","searchKeys":["OnlyMentions","object OnlyMentions : DefaultMessageNotificationLevel","dev.kord.common.entity.DefaultMessageNotificationLevel.OnlyMentions"]},{"name":"object OwnerId : AuditLogChangeKey<Snowflake> ","description":"dev.kord.common.entity.AuditLogChangeKey.OwnerId","location":"common/dev.kord.common.entity/-audit-log-change-key/-owner-id/index.html","searchKeys":["OwnerId","object OwnerId : AuditLogChangeKey<Snowflake> ","dev.kord.common.entity.AuditLogChangeKey.OwnerId"]},{"name":"object PNG : MessageStickerType","description":"dev.kord.common.entity.MessageStickerType.PNG","location":"common/dev.kord.common.entity/-message-sticker-type/-p-n-g/index.html","searchKeys":["PNG","object PNG : MessageStickerType","dev.kord.common.entity.MessageStickerType.PNG"]},{"name":"object Paragraph : TextInputStyle","description":"dev.kord.common.entity.TextInputStyle.Paragraph","location":"common/dev.kord.common.entity/-text-input-style/-paragraph/index.html","searchKeys":["Paragraph","object Paragraph : TextInputStyle","dev.kord.common.entity.TextInputStyle.Paragraph"]},{"name":"object Partnered : GuildFeature","description":"dev.kord.common.entity.GuildFeature.Partnered","location":"common/dev.kord.common.entity/-guild-feature/-partnered/index.html","searchKeys":["Partnered","object Partnered : GuildFeature","dev.kord.common.entity.GuildFeature.Partnered"]},{"name":"object PermissionOverwrites : AuditLogChangeKey<List<Overwrite>> ","description":"dev.kord.common.entity.AuditLogChangeKey.PermissionOverwrites","location":"common/dev.kord.common.entity/-audit-log-change-key/-permission-overwrites/index.html","searchKeys":["PermissionOverwrites","object PermissionOverwrites : AuditLogChangeKey<List<Overwrite>> ","dev.kord.common.entity.AuditLogChangeKey.PermissionOverwrites"]},{"name":"object Permissions : AuditLogChangeKey<Permissions> ","description":"dev.kord.common.entity.AuditLogChangeKey.Permissions","location":"common/dev.kord.common.entity/-audit-log-change-key/-permissions/index.html","searchKeys":["Permissions","object Permissions : AuditLogChangeKey<Permissions> ","dev.kord.common.entity.AuditLogChangeKey.Permissions"]},{"name":"object Ping : InteractionType","description":"dev.kord.common.entity.InteractionType.Ping","location":"common/dev.kord.common.entity/-interaction-type/-ping/index.html","searchKeys":["Ping","object Ping : InteractionType","dev.kord.common.entity.InteractionType.Ping"]},{"name":"object Pong : InteractionResponseType","description":"dev.kord.common.entity.InteractionResponseType.Pong","location":"common/dev.kord.common.entity/-interaction-response-type/-pong/index.html","searchKeys":["Pong","object Pong : InteractionResponseType","dev.kord.common.entity.InteractionResponseType.Pong"]},{"name":"object Position : AuditLogChangeKey<Int> ","description":"dev.kord.common.entity.AuditLogChangeKey.Position","location":"common/dev.kord.common.entity/-audit-log-change-key/-position/index.html","searchKeys":["Position","object Position : AuditLogChangeKey<Int> ","dev.kord.common.entity.AuditLogChangeKey.Position"]},{"name":"object PreviewEnabled : GuildFeature","description":"dev.kord.common.entity.GuildFeature.PreviewEnabled","location":"common/dev.kord.common.entity/-guild-feature/-preview-enabled/index.html","searchKeys":["PreviewEnabled","object PreviewEnabled : GuildFeature","dev.kord.common.entity.GuildFeature.PreviewEnabled"]},{"name":"object Primary : ButtonStyle","description":"dev.kord.common.entity.ButtonStyle.Primary","location":"common/dev.kord.common.entity/-button-style/-primary/index.html","searchKeys":["Primary","object Primary : ButtonStyle","dev.kord.common.entity.ButtonStyle.Primary"]},{"name":"object PrioritySpeaker : Permission","description":"dev.kord.common.entity.Permission.PrioritySpeaker","location":"common/dev.kord.common.entity/-permission/-priority-speaker/index.html","searchKeys":["PrioritySpeaker","object PrioritySpeaker : Permission","dev.kord.common.entity.Permission.PrioritySpeaker"]},{"name":"object PrivateThread : ChannelType","description":"dev.kord.common.entity.ChannelType.PrivateThread","location":"common/dev.kord.common.entity/-channel-type/-private-thread/index.html","searchKeys":["PrivateThread","object PrivateThread : ChannelType","dev.kord.common.entity.ChannelType.PrivateThread"]},{"name":"object PrivateThreads : GuildFeature","description":"dev.kord.common.entity.GuildFeature.PrivateThreads","location":"common/dev.kord.common.entity/-guild-feature/-private-threads/index.html","searchKeys":["PrivateThreads","object PrivateThreads : GuildFeature","dev.kord.common.entity.GuildFeature.PrivateThreads"]},{"name":"object Profanity : AutoModerationRuleKeywordPresetType","description":"dev.kord.common.entity.AutoModerationRuleKeywordPresetType.Profanity","location":"common/dev.kord.common.entity/-auto-moderation-rule-keyword-preset-type/-profanity/index.html","searchKeys":["Profanity","object Profanity : AutoModerationRuleKeywordPresetType","dev.kord.common.entity.AutoModerationRuleKeywordPresetType.Profanity"]},{"name":"object PruneDeleteDays : AuditLogChangeKey<Int> ","description":"dev.kord.common.entity.AuditLogChangeKey.PruneDeleteDays","location":"common/dev.kord.common.entity/-audit-log-change-key/-prune-delete-days/index.html","searchKeys":["PruneDeleteDays","object PruneDeleteDays : AuditLogChangeKey<Int> ","dev.kord.common.entity.AuditLogChangeKey.PruneDeleteDays"]},{"name":"object Public : StageInstancePrivacyLevel","description":"dev.kord.common.entity.StageInstancePrivacyLevel.Public","location":"common/dev.kord.common.entity/-stage-instance-privacy-level/-public/index.html","searchKeys":["Public","object Public : StageInstancePrivacyLevel","dev.kord.common.entity.StageInstancePrivacyLevel.Public"]},{"name":"object PublicGuildThread : ChannelType","description":"dev.kord.common.entity.ChannelType.PublicGuildThread","location":"common/dev.kord.common.entity/-channel-type/-public-guild-thread/index.html","searchKeys":["PublicGuildThread","object PublicGuildThread : ChannelType","dev.kord.common.entity.ChannelType.PublicGuildThread"]},{"name":"object PublicNewsThread : ChannelType","description":"dev.kord.common.entity.ChannelType.PublicNewsThread","location":"common/dev.kord.common.entity/-channel-type/-public-news-thread/index.html","searchKeys":["PublicNewsThread","object PublicNewsThread : ChannelType","dev.kord.common.entity.ChannelType.PublicNewsThread"]},{"name":"object RateLimitPerUser : AuditLogChangeKey<Duration> ","description":"dev.kord.common.entity.AuditLogChangeKey.RateLimitPerUser","location":"common/dev.kord.common.entity/-audit-log-change-key/-rate-limit-per-user/index.html","searchKeys":["RateLimitPerUser","object RateLimitPerUser : AuditLogChangeKey<Duration> ","dev.kord.common.entity.AuditLogChangeKey.RateLimitPerUser"]},{"name":"object ReadMessageHistory : Permission","description":"dev.kord.common.entity.Permission.ReadMessageHistory","location":"common/dev.kord.common.entity/-permission/-read-message-history/index.html","searchKeys":["ReadMessageHistory","object ReadMessageHistory : Permission","dev.kord.common.entity.Permission.ReadMessageHistory"]},{"name":"object RecipientAdd : MessageType","description":"dev.kord.common.entity.MessageType.RecipientAdd","location":"common/dev.kord.common.entity/-message-type/-recipient-add/index.html","searchKeys":["RecipientAdd","object RecipientAdd : MessageType","dev.kord.common.entity.MessageType.RecipientAdd"]},{"name":"object RecipientRemove : MessageType","description":"dev.kord.common.entity.MessageType.RecipientRemove","location":"common/dev.kord.common.entity/-message-type/-recipient-remove/index.html","searchKeys":["RecipientRemove","object RecipientRemove : MessageType","dev.kord.common.entity.MessageType.RecipientRemove"]},{"name":"object Region : AuditLogChangeKey<String> ","description":"dev.kord.common.entity.AuditLogChangeKey.Region","location":"common/dev.kord.common.entity/-audit-log-change-key/-region/index.html","searchKeys":["Region","object Region : AuditLogChangeKey<String> ","dev.kord.common.entity.AuditLogChangeKey.Region"]},{"name":"object Remove : AuditLogChangeKey<List<DiscordPartialRole>> ","description":"dev.kord.common.entity.AuditLogChangeKey.Remove","location":"common/dev.kord.common.entity/-audit-log-change-key/-remove/index.html","searchKeys":["Remove","object Remove : AuditLogChangeKey<List<DiscordPartialRole>> ","dev.kord.common.entity.AuditLogChangeKey.Remove"]},{"name":"object RemoveRole : IntegrationExpireBehavior","description":"dev.kord.common.entity.IntegrationExpireBehavior.RemoveRole","location":"common/dev.kord.common.entity/-integration-expire-behavior/-remove-role/index.html","searchKeys":["RemoveRole","object RemoveRole : IntegrationExpireBehavior","dev.kord.common.entity.IntegrationExpireBehavior.RemoveRole"]},{"name":"object Reply : MessageType","description":"dev.kord.common.entity.MessageType.Reply","location":"common/dev.kord.common.entity/-message-type/-reply/index.html","searchKeys":["Reply","object Reply : MessageType","dev.kord.common.entity.MessageType.Reply"]},{"name":"object RequestToSpeak : Permission","description":"dev.kord.common.entity.Permission.RequestToSpeak","location":"common/dev.kord.common.entity/-permission/-request-to-speak/index.html","searchKeys":["RequestToSpeak","object RequestToSpeak : Permission","dev.kord.common.entity.Permission.RequestToSpeak"]},{"name":"object Rich : EmbedType","description":"dev.kord.common.entity.EmbedType.Rich","location":"common/dev.kord.common.entity/-embed-type/-rich/index.html","searchKeys":["Rich","object Rich : EmbedType","dev.kord.common.entity.EmbedType.Rich"]},{"name":"object Role : ApplicationCommandOptionType","description":"dev.kord.common.entity.ApplicationCommandOptionType.Role","location":"common/dev.kord.common.entity/-application-command-option-type/-role/index.html","searchKeys":["Role","object Role : ApplicationCommandOptionType","dev.kord.common.entity.ApplicationCommandOptionType.Role"]},{"name":"object Role : ApplicationCommandPermissionType","description":"dev.kord.common.entity.ApplicationCommandPermissionType.Role","location":"common/dev.kord.common.entity/-application-command-permission-type/-role/index.html","searchKeys":["Role","object Role : ApplicationCommandPermissionType","dev.kord.common.entity.ApplicationCommandPermissionType.Role"]},{"name":"object Role : DiscordGuildApplicationCommandPermission.Type","description":"dev.kord.common.entity.DiscordGuildApplicationCommandPermission.Type.Role","location":"common/dev.kord.common.entity/-discord-guild-application-command-permission/-type/-role/index.html","searchKeys":["Role","object Role : DiscordGuildApplicationCommandPermission.Type","dev.kord.common.entity.DiscordGuildApplicationCommandPermission.Type.Role"]},{"name":"object Role : OverwriteType","description":"dev.kord.common.entity.OverwriteType.Role","location":"common/dev.kord.common.entity/-overwrite-type/-role/index.html","searchKeys":["Role","object Role : OverwriteType","dev.kord.common.entity.OverwriteType.Role"]},{"name":"object RoleCreate : AuditLogEvent","description":"dev.kord.common.entity.AuditLogEvent.RoleCreate","location":"common/dev.kord.common.entity/-audit-log-event/-role-create/index.html","searchKeys":["RoleCreate","object RoleCreate : AuditLogEvent","dev.kord.common.entity.AuditLogEvent.RoleCreate"]},{"name":"object RoleDelete : AuditLogEvent","description":"dev.kord.common.entity.AuditLogEvent.RoleDelete","location":"common/dev.kord.common.entity/-audit-log-event/-role-delete/index.html","searchKeys":["RoleDelete","object RoleDelete : AuditLogEvent","dev.kord.common.entity.AuditLogEvent.RoleDelete"]},{"name":"object RoleIcons : GuildFeature","description":"dev.kord.common.entity.GuildFeature.RoleIcons","location":"common/dev.kord.common.entity/-guild-feature/-role-icons/index.html","searchKeys":["RoleIcons","object RoleIcons : GuildFeature","dev.kord.common.entity.GuildFeature.RoleIcons"]},{"name":"object RoleMentions : AllowedMentionType","description":"dev.kord.common.entity.AllowedMentionType.RoleMentions","location":"common/dev.kord.common.entity/-allowed-mention-type/-role-mentions/index.html","searchKeys":["RoleMentions","object RoleMentions : AllowedMentionType","dev.kord.common.entity.AllowedMentionType.RoleMentions"]},{"name":"object RoleUpdate : AuditLogEvent","description":"dev.kord.common.entity.AuditLogEvent.RoleUpdate","location":"common/dev.kord.common.entity/-audit-log-event/-role-update/index.html","searchKeys":["RoleUpdate","object RoleUpdate : AuditLogEvent","dev.kord.common.entity.AuditLogEvent.RoleUpdate"]},{"name":"object Safe : NsfwLevel","description":"dev.kord.common.entity.NsfwLevel.Safe","location":"common/dev.kord.common.entity/-nsfw-level/-safe/index.html","searchKeys":["Safe","object Safe : NsfwLevel","dev.kord.common.entity.NsfwLevel.Safe"]},{"name":"object Scheduled : GuildScheduledEventStatus","description":"dev.kord.common.entity.GuildScheduledEventStatus.Scheduled","location":"common/dev.kord.common.entity/-guild-scheduled-event-status/-scheduled/index.html","searchKeys":["Scheduled","object Scheduled : GuildScheduledEventStatus","dev.kord.common.entity.GuildScheduledEventStatus.Scheduled"]},{"name":"object Secondary : ButtonStyle","description":"dev.kord.common.entity.ButtonStyle.Secondary","location":"common/dev.kord.common.entity/-button-style/-secondary/index.html","searchKeys":["Secondary","object Secondary : ButtonStyle","dev.kord.common.entity.ButtonStyle.Secondary"]},{"name":"object SelectMenu : ComponentType","description":"dev.kord.common.entity.ComponentType.SelectMenu","location":"common/dev.kord.common.entity/-component-type/-select-menu/index.html","searchKeys":["SelectMenu","object SelectMenu : ComponentType","dev.kord.common.entity.ComponentType.SelectMenu"]},{"name":"object SendAlertMessage : AutoModerationActionType","description":"dev.kord.common.entity.AutoModerationActionType.SendAlertMessage","location":"common/dev.kord.common.entity/-auto-moderation-action-type/-send-alert-message/index.html","searchKeys":["SendAlertMessage","object SendAlertMessage : AutoModerationActionType","dev.kord.common.entity.AutoModerationActionType.SendAlertMessage"]},{"name":"object SendMessages : Permission","description":"dev.kord.common.entity.Permission.SendMessages","location":"common/dev.kord.common.entity/-permission/-send-messages/index.html","searchKeys":["SendMessages","object SendMessages : Permission","dev.kord.common.entity.Permission.SendMessages"]},{"name":"object SendMessagesInThreads : Permission","description":"dev.kord.common.entity.Permission.SendMessagesInThreads","location":"common/dev.kord.common.entity/-permission/-send-messages-in-threads/index.html","searchKeys":["SendMessagesInThreads","object SendMessagesInThreads : Permission","dev.kord.common.entity.Permission.SendMessagesInThreads"]},{"name":"object SendTTSMessages : Permission","description":"dev.kord.common.entity.Permission.SendTTSMessages","location":"common/dev.kord.common.entity/-permission/-send-t-t-s-messages/index.html","searchKeys":["SendTTSMessages","object SendTTSMessages : Permission","dev.kord.common.entity.Permission.SendTTSMessages"]},{"name":"object Serializer : KSerializer<ArchiveDuration> ","description":"dev.kord.common.entity.ArchiveDuration.Serializer","location":"common/dev.kord.common.entity/-archive-duration/-serializer/index.html","searchKeys":["Serializer","object Serializer : KSerializer<ArchiveDuration> ","dev.kord.common.entity.ArchiveDuration.Serializer"]},{"name":"object Serializer : KSerializer<ButtonStyle> ","description":"dev.kord.common.entity.ButtonStyle.Serializer","location":"common/dev.kord.common.entity/-button-style/-serializer/index.html","searchKeys":["Serializer","object Serializer : KSerializer<ButtonStyle> ","dev.kord.common.entity.ButtonStyle.Serializer"]},{"name":"object Serializer : KSerializer<ComponentType> ","description":"dev.kord.common.entity.ComponentType.Serializer","location":"common/dev.kord.common.entity/-component-type/-serializer/index.html","searchKeys":["Serializer","object Serializer : KSerializer<ComponentType> ","dev.kord.common.entity.ComponentType.Serializer"]},{"name":"object Serializer : KSerializer<DiscordGuildApplicationCommandPermission.Type> ","description":"dev.kord.common.entity.DiscordGuildApplicationCommandPermission.Type.Serializer","location":"common/dev.kord.common.entity/-discord-guild-application-command-permission/-type/-serializer/index.html","searchKeys":["Serializer","object Serializer : KSerializer<DiscordGuildApplicationCommandPermission.Type> ","dev.kord.common.entity.DiscordGuildApplicationCommandPermission.Type.Serializer"]},{"name":"object Serializer : KSerializer<GuildScheduledEventStatus> ","description":"dev.kord.common.entity.GuildScheduledEventStatus.Serializer","location":"common/dev.kord.common.entity/-guild-scheduled-event-status/-serializer/index.html","searchKeys":["Serializer","object Serializer : KSerializer<GuildScheduledEventStatus> ","dev.kord.common.entity.GuildScheduledEventStatus.Serializer"]},{"name":"object Serializer : KSerializer<IntegrationExpireBehavior> ","description":"dev.kord.common.entity.IntegrationExpireBehavior.Serializer","location":"common/dev.kord.common.entity/-integration-expire-behavior/-serializer/index.html","searchKeys":["Serializer","object Serializer : KSerializer<IntegrationExpireBehavior> ","dev.kord.common.entity.IntegrationExpireBehavior.Serializer"]},{"name":"object Serializer : KSerializer<Locale> ","description":"dev.kord.common.Locale.Serializer","location":"common/dev.kord.common/-locale/-serializer/index.html","searchKeys":["Serializer","object Serializer : KSerializer<Locale> ","dev.kord.common.Locale.Serializer"]},{"name":"object Serializer : KSerializer<ScheduledEntityType> ","description":"dev.kord.common.entity.ScheduledEntityType.Serializer","location":"common/dev.kord.common.entity/-scheduled-entity-type/-serializer/index.html","searchKeys":["Serializer","object Serializer : KSerializer<ScheduledEntityType> ","dev.kord.common.entity.ScheduledEntityType.Serializer"]},{"name":"object Serializer : KSerializer<StageInstancePrivacyLevel> ","description":"dev.kord.common.entity.StageInstancePrivacyLevel.Serializer","location":"common/dev.kord.common.entity/-stage-instance-privacy-level/-serializer/index.html","searchKeys":["Serializer","object Serializer : KSerializer<StageInstancePrivacyLevel> ","dev.kord.common.entity.StageInstancePrivacyLevel.Serializer"]},{"name":"object SexualContent : AutoModerationRuleKeywordPresetType","description":"dev.kord.common.entity.AutoModerationRuleKeywordPresetType.SexualContent","location":"common/dev.kord.common.entity/-auto-moderation-rule-keyword-preset-type/-sexual-content/index.html","searchKeys":["SexualContent","object SexualContent : AutoModerationRuleKeywordPresetType","dev.kord.common.entity.AutoModerationRuleKeywordPresetType.SexualContent"]},{"name":"object Short : TextInputStyle","description":"dev.kord.common.entity.TextInputStyle.Short","location":"common/dev.kord.common.entity/-text-input-style/-short/index.html","searchKeys":["Short","object Short : TextInputStyle","dev.kord.common.entity.TextInputStyle.Short"]},{"name":"object SkuIds : AuditLogChangeKey<List<Snowflake>> ","description":"dev.kord.common.entity.AuditLogChangeKey.SkuIds","location":"common/dev.kord.common.entity/-audit-log-change-key/-sku-ids/index.html","searchKeys":["SkuIds","object SkuIds : AuditLogChangeKey<List<Snowflake>> ","dev.kord.common.entity.AuditLogChangeKey.SkuIds"]},{"name":"object Slurs : AutoModerationRuleKeywordPresetType","description":"dev.kord.common.entity.AutoModerationRuleKeywordPresetType.Slurs","location":"common/dev.kord.common.entity/-auto-moderation-rule-keyword-preset-type/-slurs/index.html","searchKeys":["Slurs","object Slurs : AutoModerationRuleKeywordPresetType","dev.kord.common.entity.AutoModerationRuleKeywordPresetType.Slurs"]},{"name":"object Spam : AutoModerationRuleTriggerType","description":"dev.kord.common.entity.AutoModerationRuleTriggerType.Spam","location":"common/dev.kord.common.entity/-auto-moderation-rule-trigger-type/-spam/index.html","searchKeys":["Spam","object Spam : AutoModerationRuleTriggerType","dev.kord.common.entity.AutoModerationRuleTriggerType.Spam"]},{"name":"object Speak : Permission","description":"dev.kord.common.entity.Permission.Speak","location":"common/dev.kord.common.entity/-permission/-speak/index.html","searchKeys":["Speak","object Speak : Permission","dev.kord.common.entity.Permission.Speak"]},{"name":"object Spectate : MessageActivityType","description":"dev.kord.common.entity.MessageActivityType.Spectate","location":"common/dev.kord.common.entity/-message-activity-type/-spectate/index.html","searchKeys":["Spectate","object Spectate : MessageActivityType","dev.kord.common.entity.MessageActivityType.Spectate"]},{"name":"object SplashHash : AuditLogChangeKey<String> ","description":"dev.kord.common.entity.AuditLogChangeKey.SplashHash","location":"common/dev.kord.common.entity/-audit-log-change-key/-splash-hash/index.html","searchKeys":["SplashHash","object SplashHash : AuditLogChangeKey<String> ","dev.kord.common.entity.AuditLogChangeKey.SplashHash"]},{"name":"object StageInstance : ScheduledEntityType","description":"dev.kord.common.entity.ScheduledEntityType.StageInstance","location":"common/dev.kord.common.entity/-scheduled-entity-type/-stage-instance/index.html","searchKeys":["StageInstance","object StageInstance : ScheduledEntityType","dev.kord.common.entity.ScheduledEntityType.StageInstance"]},{"name":"object StageInstanceCreate : AuditLogEvent","description":"dev.kord.common.entity.AuditLogEvent.StageInstanceCreate","location":"common/dev.kord.common.entity/-audit-log-event/-stage-instance-create/index.html","searchKeys":["StageInstanceCreate","object StageInstanceCreate : AuditLogEvent","dev.kord.common.entity.AuditLogEvent.StageInstanceCreate"]},{"name":"object StageInstanceDelete : AuditLogEvent","description":"dev.kord.common.entity.AuditLogEvent.StageInstanceDelete","location":"common/dev.kord.common.entity/-audit-log-event/-stage-instance-delete/index.html","searchKeys":["StageInstanceDelete","object StageInstanceDelete : AuditLogEvent","dev.kord.common.entity.AuditLogEvent.StageInstanceDelete"]},{"name":"object StageInstanceUpdate : AuditLogEvent","description":"dev.kord.common.entity.AuditLogEvent.StageInstanceUpdate","location":"common/dev.kord.common.entity/-audit-log-event/-stage-instance-update/index.html","searchKeys":["StageInstanceUpdate","object StageInstanceUpdate : AuditLogEvent","dev.kord.common.entity.AuditLogEvent.StageInstanceUpdate"]},{"name":"object Status : AuditLogChangeKey<GuildScheduledEventStatus> ","description":"dev.kord.common.entity.AuditLogChangeKey.Status","location":"common/dev.kord.common.entity/-audit-log-change-key/-status/index.html","searchKeys":["Status","object Status : AuditLogChangeKey<GuildScheduledEventStatus> ","dev.kord.common.entity.AuditLogChangeKey.Status"]},{"name":"object StatusSerializer : KSerializer<PresenceStatus> ","description":"dev.kord.common.entity.PresenceStatus.StatusSerializer","location":"common/dev.kord.common.entity/-presence-status/-status-serializer/index.html","searchKeys":["StatusSerializer","object StatusSerializer : KSerializer<PresenceStatus> ","dev.kord.common.entity.PresenceStatus.StatusSerializer"]},{"name":"object StickerCreate : AuditLogEvent","description":"dev.kord.common.entity.AuditLogEvent.StickerCreate","location":"common/dev.kord.common.entity/-audit-log-event/-sticker-create/index.html","searchKeys":["StickerCreate","object StickerCreate : AuditLogEvent","dev.kord.common.entity.AuditLogEvent.StickerCreate"]},{"name":"object StickerDelete : AuditLogEvent","description":"dev.kord.common.entity.AuditLogEvent.StickerDelete","location":"common/dev.kord.common.entity/-audit-log-event/-sticker-delete/index.html","searchKeys":["StickerDelete","object StickerDelete : AuditLogEvent","dev.kord.common.entity.AuditLogEvent.StickerDelete"]},{"name":"object StickerUpdate : AuditLogEvent","description":"dev.kord.common.entity.AuditLogEvent.StickerUpdate","location":"common/dev.kord.common.entity/-audit-log-event/-sticker-update/index.html","searchKeys":["StickerUpdate","object StickerUpdate : AuditLogEvent","dev.kord.common.entity.AuditLogEvent.StickerUpdate"]},{"name":"object Stream : InviteTargetType","description":"dev.kord.common.entity.InviteTargetType.Stream","location":"common/dev.kord.common.entity/-invite-target-type/-stream/index.html","searchKeys":["Stream","object Stream : InviteTargetType","dev.kord.common.entity.InviteTargetType.Stream"]},{"name":"object Stream : Permission","description":"dev.kord.common.entity.Permission.Stream","location":"common/dev.kord.common.entity/-permission/-stream/index.html","searchKeys":["Stream","object Stream : Permission","dev.kord.common.entity.Permission.Stream"]},{"name":"object Streaming : ActivityType","description":"dev.kord.common.entity.ActivityType.Streaming","location":"common/dev.kord.common.entity/-activity-type/-streaming/index.html","searchKeys":["Streaming","object Streaming : ActivityType","dev.kord.common.entity.ActivityType.Streaming"]},{"name":"object String : ApplicationCommandOptionType","description":"dev.kord.common.entity.ApplicationCommandOptionType.String","location":"common/dev.kord.common.entity/-application-command-option-type/-string/index.html","searchKeys":["String","object String : ApplicationCommandOptionType","dev.kord.common.entity.ApplicationCommandOptionType.String"]},{"name":"object SubCommand : ApplicationCommandOptionType","description":"dev.kord.common.entity.ApplicationCommandOptionType.SubCommand","location":"common/dev.kord.common.entity/-application-command-option-type/-sub-command/index.html","searchKeys":["SubCommand","object SubCommand : ApplicationCommandOptionType","dev.kord.common.entity.ApplicationCommandOptionType.SubCommand"]},{"name":"object SubCommandGroup : ApplicationCommandOptionType","description":"dev.kord.common.entity.ApplicationCommandOptionType.SubCommandGroup","location":"common/dev.kord.common.entity/-application-command-option-type/-sub-command-group/index.html","searchKeys":["SubCommandGroup","object SubCommandGroup : ApplicationCommandOptionType","dev.kord.common.entity.ApplicationCommandOptionType.SubCommandGroup"]},{"name":"object Success : ButtonStyle","description":"dev.kord.common.entity.ButtonStyle.Success","location":"common/dev.kord.common.entity/-button-style/-success/index.html","searchKeys":["Success","object Success : ButtonStyle","dev.kord.common.entity.ButtonStyle.Success"]},{"name":"object SystemChannelId : AuditLogChangeKey<Snowflake> ","description":"dev.kord.common.entity.AuditLogChangeKey.SystemChannelId","location":"common/dev.kord.common.entity/-audit-log-change-key/-system-channel-id/index.html","searchKeys":["SystemChannelId","object SystemChannelId : AuditLogChangeKey<Snowflake> ","dev.kord.common.entity.AuditLogChangeKey.SystemChannelId"]},{"name":"object TeamMembershipStateSerializer : KSerializer<TeamMembershipState> ","description":"dev.kord.common.entity.TeamMembershipState.TeamMembershipStateSerializer","location":"common/dev.kord.common.entity/-team-membership-state/-team-membership-state-serializer/index.html","searchKeys":["TeamMembershipStateSerializer","object TeamMembershipStateSerializer : KSerializer<TeamMembershipState> ","dev.kord.common.entity.TeamMembershipState.TeamMembershipStateSerializer"]},{"name":"object Temporary : AuditLogChangeKey<Boolean> ","description":"dev.kord.common.entity.AuditLogChangeKey.Temporary","location":"common/dev.kord.common.entity/-audit-log-change-key/-temporary/index.html","searchKeys":["Temporary","object Temporary : AuditLogChangeKey<Boolean> ","dev.kord.common.entity.AuditLogChangeKey.Temporary"]},{"name":"object TextInput : ComponentType","description":"dev.kord.common.entity.ComponentType.TextInput","location":"common/dev.kord.common.entity/-component-type/-text-input/index.html","searchKeys":["TextInput","object TextInput : ComponentType","dev.kord.common.entity.ComponentType.TextInput"]},{"name":"object ThreadCreate : AuditLogEvent","description":"dev.kord.common.entity.AuditLogEvent.ThreadCreate","location":"common/dev.kord.common.entity/-audit-log-event/-thread-create/index.html","searchKeys":["ThreadCreate","object ThreadCreate : AuditLogEvent","dev.kord.common.entity.AuditLogEvent.ThreadCreate"]},{"name":"object ThreadCreated : MessageType","description":"dev.kord.common.entity.MessageType.ThreadCreated","location":"common/dev.kord.common.entity/-message-type/-thread-created/index.html","searchKeys":["ThreadCreated","object ThreadCreated : MessageType","dev.kord.common.entity.MessageType.ThreadCreated"]},{"name":"object ThreadDelete : AuditLogEvent","description":"dev.kord.common.entity.AuditLogEvent.ThreadDelete","location":"common/dev.kord.common.entity/-audit-log-event/-thread-delete/index.html","searchKeys":["ThreadDelete","object ThreadDelete : AuditLogEvent","dev.kord.common.entity.AuditLogEvent.ThreadDelete"]},{"name":"object ThreadStarterMessage : MessageType","description":"dev.kord.common.entity.MessageType.ThreadStarterMessage","location":"common/dev.kord.common.entity/-message-type/-thread-starter-message/index.html","searchKeys":["ThreadStarterMessage","object ThreadStarterMessage : MessageType","dev.kord.common.entity.MessageType.ThreadStarterMessage"]},{"name":"object ThreadUpdate : AuditLogEvent","description":"dev.kord.common.entity.AuditLogEvent.ThreadUpdate","location":"common/dev.kord.common.entity/-audit-log-event/-thread-update/index.html","searchKeys":["ThreadUpdate","object ThreadUpdate : AuditLogEvent","dev.kord.common.entity.AuditLogEvent.ThreadUpdate"]},{"name":"object Three : PremiumTier","description":"dev.kord.common.entity.PremiumTier.Three","location":"common/dev.kord.common.entity/-premium-tier/-three/index.html","searchKeys":["Three","object Three : PremiumTier","dev.kord.common.entity.PremiumTier.Three"]},{"name":"object ThreeDays : ArchiveDuration","description":"dev.kord.common.entity.ArchiveDuration.ThreeDays","location":"common/dev.kord.common.entity/-archive-duration/-three-days/index.html","searchKeys":["ThreeDays","object ThreeDays : ArchiveDuration","dev.kord.common.entity.ArchiveDuration.ThreeDays"]},{"name":"object TicketedEventsEnabled : GuildFeature","description":"dev.kord.common.entity.GuildFeature.TicketedEventsEnabled","location":"common/dev.kord.common.entity/-guild-feature/-ticketed-events-enabled/index.html","searchKeys":["TicketedEventsEnabled","object TicketedEventsEnabled : GuildFeature","dev.kord.common.entity.GuildFeature.TicketedEventsEnabled"]},{"name":"object Timeout : AutoModerationActionType","description":"dev.kord.common.entity.AutoModerationActionType.Timeout","location":"common/dev.kord.common.entity/-auto-moderation-action-type/-timeout/index.html","searchKeys":["Timeout","object Timeout : AutoModerationActionType","dev.kord.common.entity.AutoModerationActionType.Timeout"]},{"name":"object Topic : AuditLogChangeKey<String> ","description":"dev.kord.common.entity.AuditLogChangeKey.Topic","location":"common/dev.kord.common.entity/-audit-log-change-key/-topic/index.html","searchKeys":["Topic","object Topic : AuditLogChangeKey<String> ","dev.kord.common.entity.AuditLogChangeKey.Topic"]},{"name":"object Two : PremiumTier","description":"dev.kord.common.entity.PremiumTier.Two","location":"common/dev.kord.common.entity/-premium-tier/-two/index.html","searchKeys":["Two","object Two : PremiumTier","dev.kord.common.entity.PremiumTier.Two"]},{"name":"object Type : AuditLogChangeKey<String> ","description":"dev.kord.common.entity.AuditLogChangeKey.Type","location":"common/dev.kord.common.entity/-audit-log-change-key/-type/index.html","searchKeys":["Type","object Type : AuditLogChangeKey<String> ","dev.kord.common.entity.AuditLogChangeKey.Type"]},{"name":"object UpdateMessage : InteractionResponseType","description":"dev.kord.common.entity.InteractionResponseType.UpdateMessage","location":"common/dev.kord.common.entity/-interaction-response-type/-update-message/index.html","searchKeys":["UpdateMessage","object UpdateMessage : InteractionResponseType","dev.kord.common.entity.InteractionResponseType.UpdateMessage"]},{"name":"object UseApplicationCommands : Permission","description":"dev.kord.common.entity.Permission.UseApplicationCommands","location":"common/dev.kord.common.entity/-permission/-use-application-commands/index.html","searchKeys":["UseApplicationCommands","object UseApplicationCommands : Permission","dev.kord.common.entity.Permission.UseApplicationCommands"]},{"name":"object UseEmbeddedActivities : Permission","description":"dev.kord.common.entity.Permission.UseEmbeddedActivities","location":"common/dev.kord.common.entity/-permission/-use-embedded-activities/index.html","searchKeys":["UseEmbeddedActivities","object UseEmbeddedActivities : Permission","dev.kord.common.entity.Permission.UseEmbeddedActivities"]},{"name":"object UseExternalEmojis : Permission","description":"dev.kord.common.entity.Permission.UseExternalEmojis","location":"common/dev.kord.common.entity/-permission/-use-external-emojis/index.html","searchKeys":["UseExternalEmojis","object UseExternalEmojis : Permission","dev.kord.common.entity.Permission.UseExternalEmojis"]},{"name":"object UseExternalStickers : Permission","description":"dev.kord.common.entity.Permission.UseExternalStickers","location":"common/dev.kord.common.entity/-permission/-use-external-stickers/index.html","searchKeys":["UseExternalStickers","object UseExternalStickers : Permission","dev.kord.common.entity.Permission.UseExternalStickers"]},{"name":"object UseVAD : Permission","description":"dev.kord.common.entity.Permission.UseVAD","location":"common/dev.kord.common.entity/-permission/-use-v-a-d/index.html","searchKeys":["UseVAD","object UseVAD : Permission","dev.kord.common.entity.Permission.UseVAD"]},{"name":"object User : ApplicationCommandOptionType","description":"dev.kord.common.entity.ApplicationCommandOptionType.User","location":"common/dev.kord.common.entity/-application-command-option-type/-user/index.html","searchKeys":["User","object User : ApplicationCommandOptionType","dev.kord.common.entity.ApplicationCommandOptionType.User"]},{"name":"object User : ApplicationCommandPermissionType","description":"dev.kord.common.entity.ApplicationCommandPermissionType.User","location":"common/dev.kord.common.entity/-application-command-permission-type/-user/index.html","searchKeys":["User","object User : ApplicationCommandPermissionType","dev.kord.common.entity.ApplicationCommandPermissionType.User"]},{"name":"object User : ApplicationCommandType","description":"dev.kord.common.entity.ApplicationCommandType.User","location":"common/dev.kord.common.entity/-application-command-type/-user/index.html","searchKeys":["User","object User : ApplicationCommandType","dev.kord.common.entity.ApplicationCommandType.User"]},{"name":"object User : DiscordGuildApplicationCommandPermission.Type","description":"dev.kord.common.entity.DiscordGuildApplicationCommandPermission.Type.User","location":"common/dev.kord.common.entity/-discord-guild-application-command-permission/-type/-user/index.html","searchKeys":["User","object User : DiscordGuildApplicationCommandPermission.Type","dev.kord.common.entity.DiscordGuildApplicationCommandPermission.Type.User"]},{"name":"object UserFlagsSerializer : KSerializer<UserFlags> ","description":"dev.kord.common.entity.UserFlags.UserFlagsSerializer","location":"common/dev.kord.common.entity/-user-flags/-user-flags-serializer/index.html","searchKeys":["UserFlagsSerializer","object UserFlagsSerializer : KSerializer<UserFlags> ","dev.kord.common.entity.UserFlags.UserFlagsSerializer"]},{"name":"object UserJoin : MessageType","description":"dev.kord.common.entity.MessageType.UserJoin","location":"common/dev.kord.common.entity/-message-type/-user-join/index.html","searchKeys":["UserJoin","object UserJoin : MessageType","dev.kord.common.entity.MessageType.UserJoin"]},{"name":"object UserLimit : AuditLogChangeKey<Int> ","description":"dev.kord.common.entity.AuditLogChangeKey.UserLimit","location":"common/dev.kord.common.entity/-audit-log-change-key/-user-limit/index.html","searchKeys":["UserLimit","object UserLimit : AuditLogChangeKey<Int> ","dev.kord.common.entity.AuditLogChangeKey.UserLimit"]},{"name":"object UserMentions : AllowedMentionType","description":"dev.kord.common.entity.AllowedMentionType.UserMentions","location":"common/dev.kord.common.entity/-allowed-mention-type/-user-mentions/index.html","searchKeys":["UserMentions","object UserMentions : AllowedMentionType","dev.kord.common.entity.AllowedMentionType.UserMentions"]},{"name":"object Uses : AuditLogChangeKey<Int> ","description":"dev.kord.common.entity.AuditLogChangeKey.Uses","location":"common/dev.kord.common.entity/-audit-log-change-key/-uses/index.html","searchKeys":["Uses","object Uses : AuditLogChangeKey<Int> ","dev.kord.common.entity.AuditLogChangeKey.Uses"]},{"name":"object VIPRegions : GuildFeature","description":"dev.kord.common.entity.GuildFeature.VIPRegions","location":"common/dev.kord.common.entity/-guild-feature/-v-i-p-regions/index.html","searchKeys":["VIPRegions","object VIPRegions : GuildFeature","dev.kord.common.entity.GuildFeature.VIPRegions"]},{"name":"object VanityUrl : GuildFeature","description":"dev.kord.common.entity.GuildFeature.VanityUrl","location":"common/dev.kord.common.entity/-guild-feature/-vanity-url/index.html","searchKeys":["VanityUrl","object VanityUrl : GuildFeature","dev.kord.common.entity.GuildFeature.VanityUrl"]},{"name":"object VanityUrlCode : AuditLogChangeKey<String> ","description":"dev.kord.common.entity.AuditLogChangeKey.VanityUrlCode","location":"common/dev.kord.common.entity/-audit-log-change-key/-vanity-url-code/index.html","searchKeys":["VanityUrlCode","object VanityUrlCode : AuditLogChangeKey<String> ","dev.kord.common.entity.AuditLogChangeKey.VanityUrlCode"]},{"name":"object VerificationLevel : AuditLogChangeKey<VerificationLevel> ","description":"dev.kord.common.entity.AuditLogChangeKey.VerificationLevel","location":"common/dev.kord.common.entity/-audit-log-change-key/-verification-level/index.html","searchKeys":["VerificationLevel","object VerificationLevel : AuditLogChangeKey<VerificationLevel> ","dev.kord.common.entity.AuditLogChangeKey.VerificationLevel"]},{"name":"object Verified : GuildFeature","description":"dev.kord.common.entity.GuildFeature.Verified","location":"common/dev.kord.common.entity/-guild-feature/-verified/index.html","searchKeys":["Verified","object Verified : GuildFeature","dev.kord.common.entity.GuildFeature.Verified"]},{"name":"object VeryHigh : VerificationLevel","description":"dev.kord.common.entity.VerificationLevel.VeryHigh","location":"common/dev.kord.common.entity/-verification-level/-very-high/index.html","searchKeys":["VeryHigh","object VeryHigh : VerificationLevel","dev.kord.common.entity.VerificationLevel.VeryHigh"]},{"name":"object Video : EmbedType","description":"dev.kord.common.entity.EmbedType.Video","location":"common/dev.kord.common.entity/-embed-type/-video/index.html","searchKeys":["Video","object Video : EmbedType","dev.kord.common.entity.EmbedType.Video"]},{"name":"object ViewAuditLog : Permission","description":"dev.kord.common.entity.Permission.ViewAuditLog","location":"common/dev.kord.common.entity/-permission/-view-audit-log/index.html","searchKeys":["ViewAuditLog","object ViewAuditLog : Permission","dev.kord.common.entity.Permission.ViewAuditLog"]},{"name":"object ViewChannel : Permission","description":"dev.kord.common.entity.Permission.ViewChannel","location":"common/dev.kord.common.entity/-permission/-view-channel/index.html","searchKeys":["ViewChannel","object ViewChannel : Permission","dev.kord.common.entity.Permission.ViewChannel"]},{"name":"object ViewGuildInsights : Permission","description":"dev.kord.common.entity.Permission.ViewGuildInsights","location":"common/dev.kord.common.entity/-permission/-view-guild-insights/index.html","searchKeys":["ViewGuildInsights","object ViewGuildInsights : Permission","dev.kord.common.entity.Permission.ViewGuildInsights"]},{"name":"object Voice : ScheduledEntityType","description":"dev.kord.common.entity.ScheduledEntityType.Voice","location":"common/dev.kord.common.entity/-scheduled-entity-type/-voice/index.html","searchKeys":["Voice","object Voice : ScheduledEntityType","dev.kord.common.entity.ScheduledEntityType.Voice"]},{"name":"object Watching : ActivityType","description":"dev.kord.common.entity.ActivityType.Watching","location":"common/dev.kord.common.entity/-activity-type/-watching/index.html","searchKeys":["Watching","object Watching : ActivityType","dev.kord.common.entity.ActivityType.Watching"]},{"name":"object WebhookCreate : AuditLogEvent","description":"dev.kord.common.entity.AuditLogEvent.WebhookCreate","location":"common/dev.kord.common.entity/-audit-log-event/-webhook-create/index.html","searchKeys":["WebhookCreate","object WebhookCreate : AuditLogEvent","dev.kord.common.entity.AuditLogEvent.WebhookCreate"]},{"name":"object WebhookDelete : AuditLogEvent","description":"dev.kord.common.entity.AuditLogEvent.WebhookDelete","location":"common/dev.kord.common.entity/-audit-log-event/-webhook-delete/index.html","searchKeys":["WebhookDelete","object WebhookDelete : AuditLogEvent","dev.kord.common.entity.AuditLogEvent.WebhookDelete"]},{"name":"object WebhookUpdate : AuditLogEvent","description":"dev.kord.common.entity.AuditLogEvent.WebhookUpdate","location":"common/dev.kord.common.entity/-audit-log-event/-webhook-update/index.html","searchKeys":["WebhookUpdate","object WebhookUpdate : AuditLogEvent","dev.kord.common.entity.AuditLogEvent.WebhookUpdate"]},{"name":"object Week : ArchiveDuration","description":"dev.kord.common.entity.ArchiveDuration.Week","location":"common/dev.kord.common.entity/-archive-duration/-week/index.html","searchKeys":["Week","object Week : ArchiveDuration","dev.kord.common.entity.ArchiveDuration.Week"]},{"name":"object WelcomeScreenEnabled : GuildFeature","description":"dev.kord.common.entity.GuildFeature.WelcomeScreenEnabled","location":"common/dev.kord.common.entity/-guild-feature/-welcome-screen-enabled/index.html","searchKeys":["WelcomeScreenEnabled","object WelcomeScreenEnabled : GuildFeature","dev.kord.common.entity.GuildFeature.WelcomeScreenEnabled"]},{"name":"object WidgetChannelId : AuditLogChangeKey<Snowflake> ","description":"dev.kord.common.entity.AuditLogChangeKey.WidgetChannelId","location":"common/dev.kord.common.entity/-audit-log-change-key/-widget-channel-id/index.html","searchKeys":["WidgetChannelId","object WidgetChannelId : AuditLogChangeKey<Snowflake> ","dev.kord.common.entity.AuditLogChangeKey.WidgetChannelId"]},{"name":"object WidgetEnabled : AuditLogChangeKey<Boolean> ","description":"dev.kord.common.entity.AuditLogChangeKey.WidgetEnabled","location":"common/dev.kord.common.entity/-audit-log-change-key/-widget-enabled/index.html","searchKeys":["WidgetEnabled","object WidgetEnabled : AuditLogChangeKey<Boolean> ","dev.kord.common.entity.AuditLogChangeKey.WidgetEnabled"]},{"name":"open operator override fun compareTo(other: Snowflake): Int","description":"dev.kord.common.entity.Snowflake.compareTo","location":"common/dev.kord.common.entity/-snowflake/compare-to.html","searchKeys":["compareTo","open operator override fun compareTo(other: Snowflake): Int","dev.kord.common.entity.Snowflake.compareTo"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"dev.kord.common.Color.equals","location":"common/dev.kord.common/-color/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","dev.kord.common.Color.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"dev.kord.common.DiscordBitSet.equals","location":"common/dev.kord.common/-discord-bit-set/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","dev.kord.common.DiscordBitSet.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"dev.kord.common.entity.Snowflake.equals","location":"common/dev.kord.common.entity/-snowflake/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","dev.kord.common.entity.Snowflake.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"dev.kord.common.entity.optional.Optional.Missing.equals","location":"common/dev.kord.common.entity.optional/-optional/-missing/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","dev.kord.common.entity.optional.Optional.Missing.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"dev.kord.common.entity.optional.Optional.Null.equals","location":"common/dev.kord.common.entity.optional/-optional/-null/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","dev.kord.common.entity.optional.Optional.Null.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"dev.kord.common.entity.optional.Optional.Value.equals","location":"common/dev.kord.common.entity.optional/-optional/-value/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","dev.kord.common.entity.optional.Optional.Value.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"dev.kord.common.entity.optional.OptionalBoolean.Value.equals","location":"common/dev.kord.common.entity.optional/-optional-boolean/-value/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","dev.kord.common.entity.optional.OptionalBoolean.Value.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"dev.kord.common.entity.optional.OptionalInt.Value.equals","location":"common/dev.kord.common.entity.optional/-optional-int/-value/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","dev.kord.common.entity.optional.OptionalInt.Value.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"dev.kord.common.entity.optional.OptionalLong.Value.equals","location":"common/dev.kord.common.entity.optional/-optional-long/-value/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","dev.kord.common.entity.optional.OptionalLong.Value.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"dev.kord.common.entity.optional.OptionalSnowflake.Value.equals","location":"common/dev.kord.common.entity.optional/-optional-snowflake/-value/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","dev.kord.common.entity.optional.OptionalSnowflake.Value.equals"]},{"name":"open override fun deserialize(decoder: Decoder): DiscordBitSet","description":"dev.kord.common.DiscordBitSetSerializer.deserialize","location":"common/dev.kord.common/-discord-bit-set-serializer/deserialize.html","searchKeys":["deserialize","open override fun deserialize(decoder: Decoder): DiscordBitSet","dev.kord.common.DiscordBitSetSerializer.deserialize"]},{"name":"open override fun deserialize(decoder: Decoder): DiscordGuildApplicationCommandPermission.Type","description":"dev.kord.common.entity.DiscordGuildApplicationCommandPermission.Type.Serializer.deserialize","location":"common/dev.kord.common.entity/-discord-guild-application-command-permission/-type/-serializer/deserialize.html","searchKeys":["deserialize","open override fun deserialize(decoder: Decoder): DiscordGuildApplicationCommandPermission.Type","dev.kord.common.entity.DiscordGuildApplicationCommandPermission.Type.Serializer.deserialize"]},{"name":"open override fun deserialize(decoder: Decoder): DiscordShard","description":"dev.kord.common.entity.DiscordShard.Companion.deserialize","location":"common/dev.kord.common.entity/-discord-shard/-companion/deserialize.html","searchKeys":["deserialize","open override fun deserialize(decoder: Decoder): DiscordShard","dev.kord.common.entity.DiscordShard.Companion.deserialize"]},{"name":"open override fun deserialize(decoder: Decoder): Instant","description":"dev.kord.common.serialization.InstantInEpochMillisecondsSerializer.deserialize","location":"common/dev.kord.common.serialization/-instant-in-epoch-milliseconds-serializer/deserialize.html","searchKeys":["deserialize","open override fun deserialize(decoder: Decoder): Instant","dev.kord.common.serialization.InstantInEpochMillisecondsSerializer.deserialize"]},{"name":"open override fun deserialize(decoder: Decoder): Instant","description":"dev.kord.common.serialization.InstantInEpochSecondsSerializer.deserialize","location":"common/dev.kord.common.serialization/-instant-in-epoch-seconds-serializer/deserialize.html","searchKeys":["deserialize","open override fun deserialize(decoder: Decoder): Instant","dev.kord.common.serialization.InstantInEpochSecondsSerializer.deserialize"]},{"name":"open override fun deserialize(decoder: Decoder): Locale","description":"dev.kord.common.Locale.Serializer.deserialize","location":"common/dev.kord.common/-locale/-serializer/deserialize.html","searchKeys":["deserialize","open override fun deserialize(decoder: Decoder): Locale","dev.kord.common.Locale.Serializer.deserialize"]},{"name":"open override fun deserialize(decoder: Decoder): Nothing","description":"dev.kord.common.entity.NotSerializable.deserialize","location":"common/dev.kord.common.entity/-not-serializable/deserialize.html","searchKeys":["deserialize","open override fun deserialize(decoder: Decoder): Nothing","dev.kord.common.entity.NotSerializable.deserialize"]},{"name":"open override fun deserialize(decoder: Decoder): Permissions","description":"dev.kord.common.entity.Permissions.Companion.deserialize","location":"common/dev.kord.common.entity/-permissions/-companion/deserialize.html","searchKeys":["deserialize","open override fun deserialize(decoder: Decoder): Permissions","dev.kord.common.entity.Permissions.Companion.deserialize"]},{"name":"open override fun deserialize(decoder: Decoder): SystemChannelFlags","description":"dev.kord.common.entity.SystemChannelFlags.Companion.deserialize","location":"common/dev.kord.common.entity/-system-channel-flags/-companion/deserialize.html","searchKeys":["deserialize","open override fun deserialize(decoder: Decoder): SystemChannelFlags","dev.kord.common.entity.SystemChannelFlags.Companion.deserialize"]},{"name":"open override fun deserialize(decoder: Decoder): UserFlags","description":"dev.kord.common.entity.UserFlags.UserFlagsSerializer.deserialize","location":"common/dev.kord.common.entity/-user-flags/-user-flags-serializer/deserialize.html","searchKeys":["deserialize","open override fun deserialize(decoder: Decoder): UserFlags","dev.kord.common.entity.UserFlags.UserFlagsSerializer.deserialize"]},{"name":"open override fun hashCode(): Int","description":"dev.kord.common.Color.hashCode","location":"common/dev.kord.common/-color/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","dev.kord.common.Color.hashCode"]},{"name":"open override fun hashCode(): Int","description":"dev.kord.common.DiscordBitSet.hashCode","location":"common/dev.kord.common/-discord-bit-set/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","dev.kord.common.DiscordBitSet.hashCode"]},{"name":"open override fun hashCode(): Int","description":"dev.kord.common.entity.Snowflake.hashCode","location":"common/dev.kord.common.entity/-snowflake/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","dev.kord.common.entity.Snowflake.hashCode"]},{"name":"open override fun hashCode(): Int","description":"dev.kord.common.entity.optional.Optional.Missing.hashCode","location":"common/dev.kord.common.entity.optional/-optional/-missing/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","dev.kord.common.entity.optional.Optional.Missing.hashCode"]},{"name":"open override fun hashCode(): Int","description":"dev.kord.common.entity.optional.Optional.Null.hashCode","location":"common/dev.kord.common.entity.optional/-optional/-null/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","dev.kord.common.entity.optional.Optional.Null.hashCode"]},{"name":"open override fun hashCode(): Int","description":"dev.kord.common.entity.optional.Optional.Value.hashCode","location":"common/dev.kord.common.entity.optional/-optional/-value/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","dev.kord.common.entity.optional.Optional.Value.hashCode"]},{"name":"open override fun hashCode(): Int","description":"dev.kord.common.entity.optional.OptionalBoolean.Value.hashCode","location":"common/dev.kord.common.entity.optional/-optional-boolean/-value/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","dev.kord.common.entity.optional.OptionalBoolean.Value.hashCode"]},{"name":"open override fun hashCode(): Int","description":"dev.kord.common.entity.optional.OptionalInt.Value.hashCode","location":"common/dev.kord.common.entity.optional/-optional-int/-value/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","dev.kord.common.entity.optional.OptionalInt.Value.hashCode"]},{"name":"open override fun hashCode(): Int","description":"dev.kord.common.entity.optional.OptionalLong.Value.hashCode","location":"common/dev.kord.common.entity.optional/-optional-long/-value/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","dev.kord.common.entity.optional.OptionalLong.Value.hashCode"]},{"name":"open override fun hashCode(): Int","description":"dev.kord.common.entity.optional.OptionalSnowflake.Value.hashCode","location":"common/dev.kord.common.entity.optional/-optional-snowflake/-value/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","dev.kord.common.entity.optional.OptionalSnowflake.Value.hashCode"]},{"name":"open override fun serialize(encoder: Encoder, value: Any?): Nothing","description":"dev.kord.common.entity.NotSerializable.serialize","location":"common/dev.kord.common.entity/-not-serializable/serialize.html","searchKeys":["serialize","open override fun serialize(encoder: Encoder, value: Any?): Nothing","dev.kord.common.entity.NotSerializable.serialize"]},{"name":"open override fun serialize(encoder: Encoder, value: DiscordBitSet)","description":"dev.kord.common.DiscordBitSetSerializer.serialize","location":"common/dev.kord.common/-discord-bit-set-serializer/serialize.html","searchKeys":["serialize","open override fun serialize(encoder: Encoder, value: DiscordBitSet)","dev.kord.common.DiscordBitSetSerializer.serialize"]},{"name":"open override fun serialize(encoder: Encoder, value: DiscordGuildApplicationCommandPermission.Type)","description":"dev.kord.common.entity.DiscordGuildApplicationCommandPermission.Type.Serializer.serialize","location":"common/dev.kord.common.entity/-discord-guild-application-command-permission/-type/-serializer/serialize.html","searchKeys":["serialize","open override fun serialize(encoder: Encoder, value: DiscordGuildApplicationCommandPermission.Type)","dev.kord.common.entity.DiscordGuildApplicationCommandPermission.Type.Serializer.serialize"]},{"name":"open override fun serialize(encoder: Encoder, value: DiscordShard)","description":"dev.kord.common.entity.DiscordShard.Companion.serialize","location":"common/dev.kord.common.entity/-discord-shard/-companion/serialize.html","searchKeys":["serialize","open override fun serialize(encoder: Encoder, value: DiscordShard)","dev.kord.common.entity.DiscordShard.Companion.serialize"]},{"name":"open override fun serialize(encoder: Encoder, value: Instant)","description":"dev.kord.common.serialization.InstantInEpochMillisecondsSerializer.serialize","location":"common/dev.kord.common.serialization/-instant-in-epoch-milliseconds-serializer/serialize.html","searchKeys":["serialize","open override fun serialize(encoder: Encoder, value: Instant)","dev.kord.common.serialization.InstantInEpochMillisecondsSerializer.serialize"]},{"name":"open override fun serialize(encoder: Encoder, value: Instant)","description":"dev.kord.common.serialization.InstantInEpochSecondsSerializer.serialize","location":"common/dev.kord.common.serialization/-instant-in-epoch-seconds-serializer/serialize.html","searchKeys":["serialize","open override fun serialize(encoder: Encoder, value: Instant)","dev.kord.common.serialization.InstantInEpochSecondsSerializer.serialize"]},{"name":"open override fun serialize(encoder: Encoder, value: Locale)","description":"dev.kord.common.Locale.Serializer.serialize","location":"common/dev.kord.common/-locale/-serializer/serialize.html","searchKeys":["serialize","open override fun serialize(encoder: Encoder, value: Locale)","dev.kord.common.Locale.Serializer.serialize"]},{"name":"open override fun serialize(encoder: Encoder, value: Permissions)","description":"dev.kord.common.entity.Permissions.Companion.serialize","location":"common/dev.kord.common.entity/-permissions/-companion/serialize.html","searchKeys":["serialize","open override fun serialize(encoder: Encoder, value: Permissions)","dev.kord.common.entity.Permissions.Companion.serialize"]},{"name":"open override fun serialize(encoder: Encoder, value: SystemChannelFlags)","description":"dev.kord.common.entity.SystemChannelFlags.Companion.serialize","location":"common/dev.kord.common.entity/-system-channel-flags/-companion/serialize.html","searchKeys":["serialize","open override fun serialize(encoder: Encoder, value: SystemChannelFlags)","dev.kord.common.entity.SystemChannelFlags.Companion.serialize"]},{"name":"open override fun serialize(encoder: Encoder, value: UserFlags)","description":"dev.kord.common.entity.UserFlags.UserFlagsSerializer.serialize","location":"common/dev.kord.common.entity/-user-flags/-user-flags-serializer/serialize.html","searchKeys":["serialize","open override fun serialize(encoder: Encoder, value: UserFlags)","dev.kord.common.entity.UserFlags.UserFlagsSerializer.serialize"]},{"name":"open override fun toString(): String","description":"dev.kord.common.Color.toString","location":"common/dev.kord.common/-color/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.kord.common.Color.toString"]},{"name":"open override fun toString(): String","description":"dev.kord.common.DiscordBitSet.toString","location":"common/dev.kord.common/-discord-bit-set/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.kord.common.DiscordBitSet.toString"]},{"name":"open override fun toString(): String","description":"dev.kord.common.entity.AuditLogChangeKey.toString","location":"common/dev.kord.common.entity/-audit-log-change-key/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.kord.common.entity.AuditLogChangeKey.toString"]},{"name":"open override fun toString(): String","description":"dev.kord.common.entity.MessageFlags.toString","location":"common/dev.kord.common.entity/-message-flags/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.kord.common.entity.MessageFlags.toString"]},{"name":"open override fun toString(): String","description":"dev.kord.common.entity.Permissions.toString","location":"common/dev.kord.common.entity/-permissions/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.kord.common.entity.Permissions.toString"]},{"name":"open override fun toString(): String","description":"dev.kord.common.entity.Snowflake.toString","location":"common/dev.kord.common.entity/-snowflake/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.kord.common.entity.Snowflake.toString"]},{"name":"open override fun toString(): String","description":"dev.kord.common.entity.optional.Optional.Missing.toString","location":"common/dev.kord.common.entity.optional/-optional/-missing/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.kord.common.entity.optional.Optional.Missing.toString"]},{"name":"open override fun toString(): String","description":"dev.kord.common.entity.optional.Optional.Null.toString","location":"common/dev.kord.common.entity.optional/-optional/-null/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.kord.common.entity.optional.Optional.Null.toString"]},{"name":"open override fun toString(): String","description":"dev.kord.common.entity.optional.Optional.Value.toString","location":"common/dev.kord.common.entity.optional/-optional/-value/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.kord.common.entity.optional.Optional.Value.toString"]},{"name":"open override fun toString(): String","description":"dev.kord.common.entity.optional.OptionalBoolean.Missing.toString","location":"common/dev.kord.common.entity.optional/-optional-boolean/-missing/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.kord.common.entity.optional.OptionalBoolean.Missing.toString"]},{"name":"open override fun toString(): String","description":"dev.kord.common.entity.optional.OptionalBoolean.Value.toString","location":"common/dev.kord.common.entity.optional/-optional-boolean/-value/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.kord.common.entity.optional.OptionalBoolean.Value.toString"]},{"name":"open override fun toString(): String","description":"dev.kord.common.entity.optional.OptionalInt.Missing.toString","location":"common/dev.kord.common.entity.optional/-optional-int/-missing/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.kord.common.entity.optional.OptionalInt.Missing.toString"]},{"name":"open override fun toString(): String","description":"dev.kord.common.entity.optional.OptionalInt.Value.toString","location":"common/dev.kord.common.entity.optional/-optional-int/-value/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.kord.common.entity.optional.OptionalInt.Value.toString"]},{"name":"open override fun toString(): String","description":"dev.kord.common.entity.optional.OptionalLong.Missing.toString","location":"common/dev.kord.common.entity.optional/-optional-long/-missing/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.kord.common.entity.optional.OptionalLong.Missing.toString"]},{"name":"open override fun toString(): String","description":"dev.kord.common.entity.optional.OptionalLong.Value.toString","location":"common/dev.kord.common.entity.optional/-optional-long/-value/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.kord.common.entity.optional.OptionalLong.Value.toString"]},{"name":"open override fun toString(): String","description":"dev.kord.common.entity.optional.OptionalSnowflake.Missing.toString","location":"common/dev.kord.common.entity.optional/-optional-snowflake/-missing/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.kord.common.entity.optional.OptionalSnowflake.Missing.toString"]},{"name":"open override fun toString(): String","description":"dev.kord.common.entity.optional.OptionalSnowflake.Value.toString","location":"common/dev.kord.common.entity.optional/-optional-snowflake/-value/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.kord.common.entity.optional.OptionalSnowflake.Value.toString"]},{"name":"open override val approximateMemberCount: OptionalInt","description":"dev.kord.common.entity.DiscordInvite.approximateMemberCount","location":"common/dev.kord.common.entity/-discord-invite/approximate-member-count.html","searchKeys":["approximateMemberCount","open override val approximateMemberCount: OptionalInt","dev.kord.common.entity.DiscordInvite.approximateMemberCount"]},{"name":"open override val approximateMemberCount: OptionalInt","description":"dev.kord.common.entity.DiscordInviteWithMetadata.approximateMemberCount","location":"common/dev.kord.common.entity/-discord-invite-with-metadata/approximate-member-count.html","searchKeys":["approximateMemberCount","open override val approximateMemberCount: OptionalInt","dev.kord.common.entity.DiscordInviteWithMetadata.approximateMemberCount"]},{"name":"open override val approximatePresenceCount: OptionalInt","description":"dev.kord.common.entity.DiscordInvite.approximatePresenceCount","location":"common/dev.kord.common.entity/-discord-invite/approximate-presence-count.html","searchKeys":["approximatePresenceCount","open override val approximatePresenceCount: OptionalInt","dev.kord.common.entity.DiscordInvite.approximatePresenceCount"]},{"name":"open override val approximatePresenceCount: OptionalInt","description":"dev.kord.common.entity.DiscordInviteWithMetadata.approximatePresenceCount","location":"common/dev.kord.common.entity/-discord-invite-with-metadata/approximate-presence-count.html","searchKeys":["approximatePresenceCount","open override val approximatePresenceCount: OptionalInt","dev.kord.common.entity.DiscordInviteWithMetadata.approximatePresenceCount"]},{"name":"open override val channel: DiscordChannel?","description":"dev.kord.common.entity.DiscordInvite.channel","location":"common/dev.kord.common.entity/-discord-invite/channel.html","searchKeys":["channel","open override val channel: DiscordChannel?","dev.kord.common.entity.DiscordInvite.channel"]},{"name":"open override val channel: DiscordChannel?","description":"dev.kord.common.entity.DiscordInviteWithMetadata.channel","location":"common/dev.kord.common.entity/-discord-invite-with-metadata/channel.html","searchKeys":["channel","open override val channel: DiscordChannel?","dev.kord.common.entity.DiscordInviteWithMetadata.channel"]},{"name":"open override val code: String","description":"dev.kord.common.entity.DiscordInvite.code","location":"common/dev.kord.common.entity/-discord-invite/code.html","searchKeys":["code","open override val code: String","dev.kord.common.entity.DiscordInvite.code"]},{"name":"open override val code: String","description":"dev.kord.common.entity.DiscordInviteWithMetadata.code","location":"common/dev.kord.common.entity/-discord-invite-with-metadata/code.html","searchKeys":["code","open override val code: String","dev.kord.common.entity.DiscordInviteWithMetadata.code"]},{"name":"open override val components: Optional<List<DiscordComponent>>","description":"dev.kord.common.entity.DiscordChatComponent.components","location":"common/dev.kord.common.entity/-discord-chat-component/components.html","searchKeys":["components","open override val components: Optional<List<DiscordComponent>>","dev.kord.common.entity.DiscordChatComponent.components"]},{"name":"open override val components: Optional<List<DiscordComponent>>","description":"dev.kord.common.entity.DiscordTextInputComponent.components","location":"common/dev.kord.common.entity/-discord-text-input-component/components.html","searchKeys":["components","open override val components: Optional<List<DiscordComponent>>","dev.kord.common.entity.DiscordTextInputComponent.components"]},{"name":"open override val coverImage: Optional<String>","description":"dev.kord.common.entity.DiscordApplication.coverImage","location":"common/dev.kord.common.entity/-discord-application/cover-image.html","searchKeys":["coverImage","open override val coverImage: Optional<String>","dev.kord.common.entity.DiscordApplication.coverImage"]},{"name":"open override val coverImage: Optional<String>","description":"dev.kord.common.entity.DiscordPartialApplication.coverImage","location":"common/dev.kord.common.entity/-discord-partial-application/cover-image.html","searchKeys":["coverImage","open override val coverImage: Optional<String>","dev.kord.common.entity.DiscordPartialApplication.coverImage"]},{"name":"open override val customId: Optional<String>","description":"dev.kord.common.entity.DiscordChatComponent.customId","location":"common/dev.kord.common.entity/-discord-chat-component/custom-id.html","searchKeys":["customId","open override val customId: Optional<String>","dev.kord.common.entity.DiscordChatComponent.customId"]},{"name":"open override val customId: Optional<String>","description":"dev.kord.common.entity.DiscordTextInputComponent.customId","location":"common/dev.kord.common.entity/-discord-text-input-component/custom-id.html","searchKeys":["customId","open override val customId: Optional<String>","dev.kord.common.entity.DiscordTextInputComponent.customId"]},{"name":"open override val customInstallUrl: Optional<String>","description":"dev.kord.common.entity.DiscordApplication.customInstallUrl","location":"common/dev.kord.common.entity/-discord-application/custom-install-url.html","searchKeys":["customInstallUrl","open override val customInstallUrl: Optional<String>","dev.kord.common.entity.DiscordApplication.customInstallUrl"]},{"name":"open override val customInstallUrl: Optional<String>","description":"dev.kord.common.entity.DiscordPartialApplication.customInstallUrl","location":"common/dev.kord.common.entity/-discord-partial-application/custom-install-url.html","searchKeys":["customInstallUrl","open override val customInstallUrl: Optional<String>","dev.kord.common.entity.DiscordPartialApplication.customInstallUrl"]},{"name":"open override val description: String","description":"dev.kord.common.entity.DiscordApplication.description","location":"common/dev.kord.common.entity/-discord-application/description.html","searchKeys":["description","open override val description: String","dev.kord.common.entity.DiscordApplication.description"]},{"name":"open override val description: String","description":"dev.kord.common.entity.DiscordPartialApplication.description","location":"common/dev.kord.common.entity/-discord-partial-application/description.html","searchKeys":["description","open override val description: String","dev.kord.common.entity.DiscordPartialApplication.description"]},{"name":"open override val descriptor: SerialDescriptor","description":"dev.kord.common.DiscordBitSetSerializer.descriptor","location":"common/dev.kord.common/-discord-bit-set-serializer/descriptor.html","searchKeys":["descriptor","open override val descriptor: SerialDescriptor","dev.kord.common.DiscordBitSetSerializer.descriptor"]},{"name":"open override val descriptor: SerialDescriptor","description":"dev.kord.common.Locale.Serializer.descriptor","location":"common/dev.kord.common/-locale/-serializer/descriptor.html","searchKeys":["descriptor","open override val descriptor: SerialDescriptor","dev.kord.common.Locale.Serializer.descriptor"]},{"name":"open override val descriptor: SerialDescriptor","description":"dev.kord.common.entity.DiscordGuildApplicationCommandPermission.Type.Serializer.descriptor","location":"common/dev.kord.common.entity/-discord-guild-application-command-permission/-type/-serializer/descriptor.html","searchKeys":["descriptor","open override val descriptor: SerialDescriptor","dev.kord.common.entity.DiscordGuildApplicationCommandPermission.Type.Serializer.descriptor"]},{"name":"open override val descriptor: SerialDescriptor","description":"dev.kord.common.entity.DiscordShard.Companion.descriptor","location":"common/dev.kord.common.entity/-discord-shard/-companion/descriptor.html","searchKeys":["descriptor","open override val descriptor: SerialDescriptor","dev.kord.common.entity.DiscordShard.Companion.descriptor"]},{"name":"open override val descriptor: SerialDescriptor","description":"dev.kord.common.entity.NotSerializable.descriptor","location":"common/dev.kord.common.entity/-not-serializable/descriptor.html","searchKeys":["descriptor","open override val descriptor: SerialDescriptor","dev.kord.common.entity.NotSerializable.descriptor"]},{"name":"open override val descriptor: SerialDescriptor","description":"dev.kord.common.entity.Permissions.Companion.descriptor","location":"common/dev.kord.common.entity/-permissions/-companion/descriptor.html","searchKeys":["descriptor","open override val descriptor: SerialDescriptor","dev.kord.common.entity.Permissions.Companion.descriptor"]},{"name":"open override val descriptor: SerialDescriptor","description":"dev.kord.common.entity.SystemChannelFlags.Companion.descriptor","location":"common/dev.kord.common.entity/-system-channel-flags/-companion/descriptor.html","searchKeys":["descriptor","open override val descriptor: SerialDescriptor","dev.kord.common.entity.SystemChannelFlags.Companion.descriptor"]},{"name":"open override val descriptor: SerialDescriptor","description":"dev.kord.common.entity.UserFlags.UserFlagsSerializer.descriptor","location":"common/dev.kord.common.entity/-user-flags/-user-flags-serializer/descriptor.html","searchKeys":["descriptor","open override val descriptor: SerialDescriptor","dev.kord.common.entity.UserFlags.UserFlagsSerializer.descriptor"]},{"name":"open override val descriptor: SerialDescriptor","description":"dev.kord.common.serialization.InstantInEpochMillisecondsSerializer.descriptor","location":"common/dev.kord.common.serialization/-instant-in-epoch-milliseconds-serializer/descriptor.html","searchKeys":["descriptor","open override val descriptor: SerialDescriptor","dev.kord.common.serialization.InstantInEpochMillisecondsSerializer.descriptor"]},{"name":"open override val descriptor: SerialDescriptor","description":"dev.kord.common.serialization.InstantInEpochSecondsSerializer.descriptor","location":"common/dev.kord.common.serialization/-instant-in-epoch-seconds-serializer/descriptor.html","searchKeys":["descriptor","open override val descriptor: SerialDescriptor","dev.kord.common.serialization.InstantInEpochSecondsSerializer.descriptor"]},{"name":"open override val disabled: OptionalBoolean","description":"dev.kord.common.entity.DiscordChatComponent.disabled","location":"common/dev.kord.common.entity/-discord-chat-component/disabled.html","searchKeys":["disabled","open override val disabled: OptionalBoolean","dev.kord.common.entity.DiscordChatComponent.disabled"]},{"name":"open override val disabled: OptionalBoolean","description":"dev.kord.common.entity.DiscordTextInputComponent.disabled","location":"common/dev.kord.common.entity/-discord-text-input-component/disabled.html","searchKeys":["disabled","open override val disabled: OptionalBoolean","dev.kord.common.entity.DiscordTextInputComponent.disabled"]},{"name":"open override val emoji: Optional<DiscordPartialEmoji>","description":"dev.kord.common.entity.DiscordChatComponent.emoji","location":"common/dev.kord.common.entity/-discord-chat-component/emoji.html","searchKeys":["emoji","open override val emoji: Optional<DiscordPartialEmoji>","dev.kord.common.entity.DiscordChatComponent.emoji"]},{"name":"open override val emoji: Optional<DiscordPartialEmoji>","description":"dev.kord.common.entity.DiscordTextInputComponent.emoji","location":"common/dev.kord.common.entity/-discord-text-input-component/emoji.html","searchKeys":["emoji","open override val emoji: Optional<DiscordPartialEmoji>","dev.kord.common.entity.DiscordTextInputComponent.emoji"]},{"name":"open override val expiresAt: Optional<Instant?>","description":"dev.kord.common.entity.DiscordInvite.expiresAt","location":"common/dev.kord.common.entity/-discord-invite/expires-at.html","searchKeys":["expiresAt","open override val expiresAt: Optional<Instant?>","dev.kord.common.entity.DiscordInvite.expiresAt"]},{"name":"open override val expiresAt: Optional<Instant?>","description":"dev.kord.common.entity.DiscordInviteWithMetadata.expiresAt","location":"common/dev.kord.common.entity/-discord-invite-with-metadata/expires-at.html","searchKeys":["expiresAt","open override val expiresAt: Optional<Instant?>","dev.kord.common.entity.DiscordInviteWithMetadata.expiresAt"]},{"name":"open override val flags: Optional<ApplicationFlags>","description":"dev.kord.common.entity.DiscordApplication.flags","location":"common/dev.kord.common.entity/-discord-application/flags.html","searchKeys":["flags","open override val flags: Optional<ApplicationFlags>","dev.kord.common.entity.DiscordApplication.flags"]},{"name":"open override val flags: Optional<ApplicationFlags>","description":"dev.kord.common.entity.DiscordPartialApplication.flags","location":"common/dev.kord.common.entity/-discord-partial-application/flags.html","searchKeys":["flags","open override val flags: Optional<ApplicationFlags>","dev.kord.common.entity.DiscordPartialApplication.flags"]},{"name":"open override val focused: OptionalBoolean","description":"dev.kord.common.entity.CommandArgument.AttachmentArgument.focused","location":"common/dev.kord.common.entity/-command-argument/-attachment-argument/focused.html","searchKeys":["focused","open override val focused: OptionalBoolean","dev.kord.common.entity.CommandArgument.AttachmentArgument.focused"]},{"name":"open override val focused: OptionalBoolean","description":"dev.kord.common.entity.CommandArgument.AutoCompleteArgument.focused","location":"common/dev.kord.common.entity/-command-argument/-auto-complete-argument/focused.html","searchKeys":["focused","open override val focused: OptionalBoolean","dev.kord.common.entity.CommandArgument.AutoCompleteArgument.focused"]},{"name":"open override val focused: OptionalBoolean","description":"dev.kord.common.entity.CommandArgument.BooleanArgument.focused","location":"common/dev.kord.common.entity/-command-argument/-boolean-argument/focused.html","searchKeys":["focused","open override val focused: OptionalBoolean","dev.kord.common.entity.CommandArgument.BooleanArgument.focused"]},{"name":"open override val focused: OptionalBoolean","description":"dev.kord.common.entity.CommandArgument.ChannelArgument.focused","location":"common/dev.kord.common.entity/-command-argument/-channel-argument/focused.html","searchKeys":["focused","open override val focused: OptionalBoolean","dev.kord.common.entity.CommandArgument.ChannelArgument.focused"]},{"name":"open override val focused: OptionalBoolean","description":"dev.kord.common.entity.CommandArgument.IntegerArgument.focused","location":"common/dev.kord.common.entity/-command-argument/-integer-argument/focused.html","searchKeys":["focused","open override val focused: OptionalBoolean","dev.kord.common.entity.CommandArgument.IntegerArgument.focused"]},{"name":"open override val focused: OptionalBoolean","description":"dev.kord.common.entity.CommandArgument.MentionableArgument.focused","location":"common/dev.kord.common.entity/-command-argument/-mentionable-argument/focused.html","searchKeys":["focused","open override val focused: OptionalBoolean","dev.kord.common.entity.CommandArgument.MentionableArgument.focused"]},{"name":"open override val focused: OptionalBoolean","description":"dev.kord.common.entity.CommandArgument.NumberArgument.focused","location":"common/dev.kord.common.entity/-command-argument/-number-argument/focused.html","searchKeys":["focused","open override val focused: OptionalBoolean","dev.kord.common.entity.CommandArgument.NumberArgument.focused"]},{"name":"open override val focused: OptionalBoolean","description":"dev.kord.common.entity.CommandArgument.RoleArgument.focused","location":"common/dev.kord.common.entity/-command-argument/-role-argument/focused.html","searchKeys":["focused","open override val focused: OptionalBoolean","dev.kord.common.entity.CommandArgument.RoleArgument.focused"]},{"name":"open override val focused: OptionalBoolean","description":"dev.kord.common.entity.CommandArgument.StringArgument.focused","location":"common/dev.kord.common.entity/-command-argument/-string-argument/focused.html","searchKeys":["focused","open override val focused: OptionalBoolean","dev.kord.common.entity.CommandArgument.StringArgument.focused"]},{"name":"open override val focused: OptionalBoolean","description":"dev.kord.common.entity.CommandArgument.UserArgument.focused","location":"common/dev.kord.common.entity/-command-argument/-user-argument/focused.html","searchKeys":["focused","open override val focused: OptionalBoolean","dev.kord.common.entity.CommandArgument.UserArgument.focused"]},{"name":"open override val guild: Optional<DiscordPartialGuild>","description":"dev.kord.common.entity.DiscordInvite.guild","location":"common/dev.kord.common.entity/-discord-invite/guild.html","searchKeys":["guild","open override val guild: Optional<DiscordPartialGuild>","dev.kord.common.entity.DiscordInvite.guild"]},{"name":"open override val guild: Optional<DiscordPartialGuild>","description":"dev.kord.common.entity.DiscordInviteWithMetadata.guild","location":"common/dev.kord.common.entity/-discord-invite-with-metadata/guild.html","searchKeys":["guild","open override val guild: Optional<DiscordPartialGuild>","dev.kord.common.entity.DiscordInviteWithMetadata.guild"]},{"name":"open override val guildId: OptionalSnowflake","description":"dev.kord.common.entity.DiscordApplication.guildId","location":"common/dev.kord.common.entity/-discord-application/guild-id.html","searchKeys":["guildId","open override val guildId: OptionalSnowflake","dev.kord.common.entity.DiscordApplication.guildId"]},{"name":"open override val guildId: OptionalSnowflake","description":"dev.kord.common.entity.DiscordPartialApplication.guildId","location":"common/dev.kord.common.entity/-discord-partial-application/guild-id.html","searchKeys":["guildId","open override val guildId: OptionalSnowflake","dev.kord.common.entity.DiscordPartialApplication.guildId"]},{"name":"open override val guildScheduledEvent: Optional<DiscordGuildScheduledEvent>","description":"dev.kord.common.entity.DiscordInvite.guildScheduledEvent","location":"common/dev.kord.common.entity/-discord-invite/guild-scheduled-event.html","searchKeys":["guildScheduledEvent","open override val guildScheduledEvent: Optional<DiscordGuildScheduledEvent>","dev.kord.common.entity.DiscordInvite.guildScheduledEvent"]},{"name":"open override val guildScheduledEvent: Optional<DiscordGuildScheduledEvent>","description":"dev.kord.common.entity.DiscordInviteWithMetadata.guildScheduledEvent","location":"common/dev.kord.common.entity/-discord-invite-with-metadata/guild-scheduled-event.html","searchKeys":["guildScheduledEvent","open override val guildScheduledEvent: Optional<DiscordGuildScheduledEvent>","dev.kord.common.entity.DiscordInviteWithMetadata.guildScheduledEvent"]},{"name":"open override val icon: String?","description":"dev.kord.common.entity.DiscordApplication.icon","location":"common/dev.kord.common.entity/-discord-application/icon.html","searchKeys":["icon","open override val icon: String?","dev.kord.common.entity.DiscordApplication.icon"]},{"name":"open override val icon: String?","description":"dev.kord.common.entity.DiscordPartialApplication.icon","location":"common/dev.kord.common.entity/-discord-partial-application/icon.html","searchKeys":["icon","open override val icon: String?","dev.kord.common.entity.DiscordPartialApplication.icon"]},{"name":"open override val id: Snowflake","description":"dev.kord.common.entity.DiscordApplication.id","location":"common/dev.kord.common.entity/-discord-application/id.html","searchKeys":["id","open override val id: Snowflake","dev.kord.common.entity.DiscordApplication.id"]},{"name":"open override val id: Snowflake","description":"dev.kord.common.entity.DiscordPartialApplication.id","location":"common/dev.kord.common.entity/-discord-partial-application/id.html","searchKeys":["id","open override val id: Snowflake","dev.kord.common.entity.DiscordPartialApplication.id"]},{"name":"open override val installParams: Optional<InstallParams>","description":"dev.kord.common.entity.DiscordApplication.installParams","location":"common/dev.kord.common.entity/-discord-application/install-params.html","searchKeys":["installParams","open override val installParams: Optional<InstallParams>","dev.kord.common.entity.DiscordApplication.installParams"]},{"name":"open override val installParams: Optional<InstallParams>","description":"dev.kord.common.entity.DiscordPartialApplication.installParams","location":"common/dev.kord.common.entity/-discord-partial-application/install-params.html","searchKeys":["installParams","open override val installParams: Optional<InstallParams>","dev.kord.common.entity.DiscordPartialApplication.installParams"]},{"name":"open override val inviter: Optional<DiscordUser>","description":"dev.kord.common.entity.DiscordInvite.inviter","location":"common/dev.kord.common.entity/-discord-invite/inviter.html","searchKeys":["inviter","open override val inviter: Optional<DiscordUser>","dev.kord.common.entity.DiscordInvite.inviter"]},{"name":"open override val inviter: Optional<DiscordUser>","description":"dev.kord.common.entity.DiscordInviteWithMetadata.inviter","location":"common/dev.kord.common.entity/-discord-invite-with-metadata/inviter.html","searchKeys":["inviter","open override val inviter: Optional<DiscordUser>","dev.kord.common.entity.DiscordInviteWithMetadata.inviter"]},{"name":"open override val label: Optional<String>","description":"dev.kord.common.entity.DiscordChatComponent.label","location":"common/dev.kord.common.entity/-discord-chat-component/label.html","searchKeys":["label","open override val label: Optional<String>","dev.kord.common.entity.DiscordChatComponent.label"]},{"name":"open override val label: Optional<String>","description":"dev.kord.common.entity.DiscordTextInputComponent.label","location":"common/dev.kord.common.entity/-discord-text-input-component/label.html","searchKeys":["label","open override val label: Optional<String>","dev.kord.common.entity.DiscordTextInputComponent.label"]},{"name":"open override val maxLength: OptionalInt","description":"dev.kord.common.entity.DiscordChatComponent.maxLength","location":"common/dev.kord.common.entity/-discord-chat-component/max-length.html","searchKeys":["maxLength","open override val maxLength: OptionalInt","dev.kord.common.entity.DiscordChatComponent.maxLength"]},{"name":"open override val maxLength: OptionalInt","description":"dev.kord.common.entity.DiscordTextInputComponent.maxLength","location":"common/dev.kord.common.entity/-discord-text-input-component/max-length.html","searchKeys":["maxLength","open override val maxLength: OptionalInt","dev.kord.common.entity.DiscordTextInputComponent.maxLength"]},{"name":"open override val maxValues: OptionalInt","description":"dev.kord.common.entity.DiscordChatComponent.maxValues","location":"common/dev.kord.common.entity/-discord-chat-component/max-values.html","searchKeys":["maxValues","open override val maxValues: OptionalInt","dev.kord.common.entity.DiscordChatComponent.maxValues"]},{"name":"open override val maxValues: OptionalInt","description":"dev.kord.common.entity.DiscordTextInputComponent.maxValues","location":"common/dev.kord.common.entity/-discord-text-input-component/max-values.html","searchKeys":["maxValues","open override val maxValues: OptionalInt","dev.kord.common.entity.DiscordTextInputComponent.maxValues"]},{"name":"open override val minLength: OptionalInt","description":"dev.kord.common.entity.DiscordChatComponent.minLength","location":"common/dev.kord.common.entity/-discord-chat-component/min-length.html","searchKeys":["minLength","open override val minLength: OptionalInt","dev.kord.common.entity.DiscordChatComponent.minLength"]},{"name":"open override val minLength: OptionalInt","description":"dev.kord.common.entity.DiscordTextInputComponent.minLength","location":"common/dev.kord.common.entity/-discord-text-input-component/min-length.html","searchKeys":["minLength","open override val minLength: OptionalInt","dev.kord.common.entity.DiscordTextInputComponent.minLength"]},{"name":"open override val minValues: OptionalInt","description":"dev.kord.common.entity.DiscordChatComponent.minValues","location":"common/dev.kord.common.entity/-discord-chat-component/min-values.html","searchKeys":["minValues","open override val minValues: OptionalInt","dev.kord.common.entity.DiscordChatComponent.minValues"]},{"name":"open override val minValues: OptionalInt","description":"dev.kord.common.entity.DiscordTextInputComponent.minValues","location":"common/dev.kord.common.entity/-discord-text-input-component/min-values.html","searchKeys":["minValues","open override val minValues: OptionalInt","dev.kord.common.entity.DiscordTextInputComponent.minValues"]},{"name":"open override val name: String","description":"dev.kord.common.entity.Choice.IntChoice.name","location":"common/dev.kord.common.entity/-choice/-int-choice/name.html","searchKeys":["name","open override val name: String","dev.kord.common.entity.Choice.IntChoice.name"]},{"name":"open override val name: String","description":"dev.kord.common.entity.Choice.NumberChoice.name","location":"common/dev.kord.common.entity/-choice/-number-choice/name.html","searchKeys":["name","open override val name: String","dev.kord.common.entity.Choice.NumberChoice.name"]},{"name":"open override val name: String","description":"dev.kord.common.entity.Choice.StringChoice.name","location":"common/dev.kord.common.entity/-choice/-string-choice/name.html","searchKeys":["name","open override val name: String","dev.kord.common.entity.Choice.StringChoice.name"]},{"name":"open override val name: String","description":"dev.kord.common.entity.CommandArgument.AttachmentArgument.name","location":"common/dev.kord.common.entity/-command-argument/-attachment-argument/name.html","searchKeys":["name","open override val name: String","dev.kord.common.entity.CommandArgument.AttachmentArgument.name"]},{"name":"open override val name: String","description":"dev.kord.common.entity.CommandArgument.AutoCompleteArgument.name","location":"common/dev.kord.common.entity/-command-argument/-auto-complete-argument/name.html","searchKeys":["name","open override val name: String","dev.kord.common.entity.CommandArgument.AutoCompleteArgument.name"]},{"name":"open override val name: String","description":"dev.kord.common.entity.CommandArgument.BooleanArgument.name","location":"common/dev.kord.common.entity/-command-argument/-boolean-argument/name.html","searchKeys":["name","open override val name: String","dev.kord.common.entity.CommandArgument.BooleanArgument.name"]},{"name":"open override val name: String","description":"dev.kord.common.entity.CommandArgument.ChannelArgument.name","location":"common/dev.kord.common.entity/-command-argument/-channel-argument/name.html","searchKeys":["name","open override val name: String","dev.kord.common.entity.CommandArgument.ChannelArgument.name"]},{"name":"open override val name: String","description":"dev.kord.common.entity.CommandArgument.IntegerArgument.name","location":"common/dev.kord.common.entity/-command-argument/-integer-argument/name.html","searchKeys":["name","open override val name: String","dev.kord.common.entity.CommandArgument.IntegerArgument.name"]},{"name":"open override val name: String","description":"dev.kord.common.entity.CommandArgument.MentionableArgument.name","location":"common/dev.kord.common.entity/-command-argument/-mentionable-argument/name.html","searchKeys":["name","open override val name: String","dev.kord.common.entity.CommandArgument.MentionableArgument.name"]},{"name":"open override val name: String","description":"dev.kord.common.entity.CommandArgument.NumberArgument.name","location":"common/dev.kord.common.entity/-command-argument/-number-argument/name.html","searchKeys":["name","open override val name: String","dev.kord.common.entity.CommandArgument.NumberArgument.name"]},{"name":"open override val name: String","description":"dev.kord.common.entity.CommandArgument.RoleArgument.name","location":"common/dev.kord.common.entity/-command-argument/-role-argument/name.html","searchKeys":["name","open override val name: String","dev.kord.common.entity.CommandArgument.RoleArgument.name"]},{"name":"open override val name: String","description":"dev.kord.common.entity.CommandArgument.StringArgument.name","location":"common/dev.kord.common.entity/-command-argument/-string-argument/name.html","searchKeys":["name","open override val name: String","dev.kord.common.entity.CommandArgument.StringArgument.name"]},{"name":"open override val name: String","description":"dev.kord.common.entity.CommandArgument.UserArgument.name","location":"common/dev.kord.common.entity/-command-argument/-user-argument/name.html","searchKeys":["name","open override val name: String","dev.kord.common.entity.CommandArgument.UserArgument.name"]},{"name":"open override val name: String","description":"dev.kord.common.entity.CommandGroup.name","location":"common/dev.kord.common.entity/-command-group/name.html","searchKeys":["name","open override val name: String","dev.kord.common.entity.CommandGroup.name"]},{"name":"open override val name: String","description":"dev.kord.common.entity.DiscordApplication.name","location":"common/dev.kord.common.entity/-discord-application/name.html","searchKeys":["name","open override val name: String","dev.kord.common.entity.DiscordApplication.name"]},{"name":"open override val name: String","description":"dev.kord.common.entity.DiscordPartialApplication.name","location":"common/dev.kord.common.entity/-discord-partial-application/name.html","searchKeys":["name","open override val name: String","dev.kord.common.entity.DiscordPartialApplication.name"]},{"name":"open override val name: String","description":"dev.kord.common.entity.SubCommand.name","location":"common/dev.kord.common.entity/-sub-command/name.html","searchKeys":["name","open override val name: String","dev.kord.common.entity.SubCommand.name"]},{"name":"open override val nameLocalizations: Optional<Map<Locale, String>?>","description":"dev.kord.common.entity.Choice.IntChoice.nameLocalizations","location":"common/dev.kord.common.entity/-choice/-int-choice/name-localizations.html","searchKeys":["nameLocalizations","open override val nameLocalizations: Optional<Map<Locale, String>?>","dev.kord.common.entity.Choice.IntChoice.nameLocalizations"]},{"name":"open override val nameLocalizations: Optional<Map<Locale, String>?>","description":"dev.kord.common.entity.Choice.NumberChoice.nameLocalizations","location":"common/dev.kord.common.entity/-choice/-number-choice/name-localizations.html","searchKeys":["nameLocalizations","open override val nameLocalizations: Optional<Map<Locale, String>?>","dev.kord.common.entity.Choice.NumberChoice.nameLocalizations"]},{"name":"open override val nameLocalizations: Optional<Map<Locale, String>?>","description":"dev.kord.common.entity.Choice.StringChoice.nameLocalizations","location":"common/dev.kord.common.entity/-choice/-string-choice/name-localizations.html","searchKeys":["nameLocalizations","open override val nameLocalizations: Optional<Map<Locale, String>?>","dev.kord.common.entity.Choice.StringChoice.nameLocalizations"]},{"name":"open override val options: Optional<List<DiscordSelectOption>>","description":"dev.kord.common.entity.DiscordChatComponent.options","location":"common/dev.kord.common.entity/-discord-chat-component/options.html","searchKeys":["options","open override val options: Optional<List<DiscordSelectOption>>","dev.kord.common.entity.DiscordChatComponent.options"]},{"name":"open override val options: Optional<List<DiscordSelectOption>>","description":"dev.kord.common.entity.DiscordTextInputComponent.options","location":"common/dev.kord.common.entity/-discord-text-input-component/options.html","searchKeys":["options","open override val options: Optional<List<DiscordSelectOption>>","dev.kord.common.entity.DiscordTextInputComponent.options"]},{"name":"open override val owner: Optional<DiscordUser>","description":"dev.kord.common.entity.DiscordApplication.owner","location":"common/dev.kord.common.entity/-discord-application/owner.html","searchKeys":["owner","open override val owner: Optional<DiscordUser>","dev.kord.common.entity.DiscordApplication.owner"]},{"name":"open override val owner: Optional<DiscordUser>","description":"dev.kord.common.entity.DiscordPartialApplication.owner","location":"common/dev.kord.common.entity/-discord-partial-application/owner.html","searchKeys":["owner","open override val owner: Optional<DiscordUser>","dev.kord.common.entity.DiscordPartialApplication.owner"]},{"name":"open override val placeholder: Optional<String>","description":"dev.kord.common.entity.DiscordChatComponent.placeholder","location":"common/dev.kord.common.entity/-discord-chat-component/placeholder.html","searchKeys":["placeholder","open override val placeholder: Optional<String>","dev.kord.common.entity.DiscordChatComponent.placeholder"]},{"name":"open override val placeholder: Optional<String>","description":"dev.kord.common.entity.DiscordTextInputComponent.placeholder","location":"common/dev.kord.common.entity/-discord-text-input-component/placeholder.html","searchKeys":["placeholder","open override val placeholder: Optional<String>","dev.kord.common.entity.DiscordTextInputComponent.placeholder"]},{"name":"open override val primarySkuId: OptionalSnowflake","description":"dev.kord.common.entity.DiscordApplication.primarySkuId","location":"common/dev.kord.common.entity/-discord-application/primary-sku-id.html","searchKeys":["primarySkuId","open override val primarySkuId: OptionalSnowflake","dev.kord.common.entity.DiscordApplication.primarySkuId"]},{"name":"open override val primarySkuId: OptionalSnowflake","description":"dev.kord.common.entity.DiscordPartialApplication.primarySkuId","location":"common/dev.kord.common.entity/-discord-partial-application/primary-sku-id.html","searchKeys":["primarySkuId","open override val primarySkuId: OptionalSnowflake","dev.kord.common.entity.DiscordPartialApplication.primarySkuId"]},{"name":"open override val privacyPolicyUrl: Optional<String>","description":"dev.kord.common.entity.DiscordApplication.privacyPolicyUrl","location":"common/dev.kord.common.entity/-discord-application/privacy-policy-url.html","searchKeys":["privacyPolicyUrl","open override val privacyPolicyUrl: Optional<String>","dev.kord.common.entity.DiscordApplication.privacyPolicyUrl"]},{"name":"open override val privacyPolicyUrl: Optional<String>","description":"dev.kord.common.entity.DiscordPartialApplication.privacyPolicyUrl","location":"common/dev.kord.common.entity/-discord-partial-application/privacy-policy-url.html","searchKeys":["privacyPolicyUrl","open override val privacyPolicyUrl: Optional<String>","dev.kord.common.entity.DiscordPartialApplication.privacyPolicyUrl"]},{"name":"open override val required: OptionalBoolean","description":"dev.kord.common.entity.DiscordChatComponent.required","location":"common/dev.kord.common.entity/-discord-chat-component/required.html","searchKeys":["required","open override val required: OptionalBoolean","dev.kord.common.entity.DiscordChatComponent.required"]},{"name":"open override val required: OptionalBoolean","description":"dev.kord.common.entity.DiscordTextInputComponent.required","location":"common/dev.kord.common.entity/-discord-text-input-component/required.html","searchKeys":["required","open override val required: OptionalBoolean","dev.kord.common.entity.DiscordTextInputComponent.required"]},{"name":"open override val rpcOrigins: Optional<List<String>>","description":"dev.kord.common.entity.DiscordApplication.rpcOrigins","location":"common/dev.kord.common.entity/-discord-application/rpc-origins.html","searchKeys":["rpcOrigins","open override val rpcOrigins: Optional<List<String>>","dev.kord.common.entity.DiscordApplication.rpcOrigins"]},{"name":"open override val rpcOrigins: Optional<List<String>>","description":"dev.kord.common.entity.DiscordPartialApplication.rpcOrigins","location":"common/dev.kord.common.entity/-discord-partial-application/rpc-origins.html","searchKeys":["rpcOrigins","open override val rpcOrigins: Optional<List<String>>","dev.kord.common.entity.DiscordPartialApplication.rpcOrigins"]},{"name":"open override val slug: Optional<String>","description":"dev.kord.common.entity.DiscordApplication.slug","location":"common/dev.kord.common.entity/-discord-application/slug.html","searchKeys":["slug","open override val slug: Optional<String>","dev.kord.common.entity.DiscordApplication.slug"]},{"name":"open override val slug: Optional<String>","description":"dev.kord.common.entity.DiscordPartialApplication.slug","location":"common/dev.kord.common.entity/-discord-partial-application/slug.html","searchKeys":["slug","open override val slug: Optional<String>","dev.kord.common.entity.DiscordPartialApplication.slug"]},{"name":"open override val tags: Optional<List<String>>","description":"dev.kord.common.entity.DiscordApplication.tags","location":"common/dev.kord.common.entity/-discord-application/tags.html","searchKeys":["tags","open override val tags: Optional<List<String>>","dev.kord.common.entity.DiscordApplication.tags"]},{"name":"open override val tags: Optional<List<String>>","description":"dev.kord.common.entity.DiscordPartialApplication.tags","location":"common/dev.kord.common.entity/-discord-partial-application/tags.html","searchKeys":["tags","open override val tags: Optional<List<String>>","dev.kord.common.entity.DiscordPartialApplication.tags"]},{"name":"open override val targetApplication: Optional<DiscordPartialApplication>","description":"dev.kord.common.entity.DiscordInvite.targetApplication","location":"common/dev.kord.common.entity/-discord-invite/target-application.html","searchKeys":["targetApplication","open override val targetApplication: Optional<DiscordPartialApplication>","dev.kord.common.entity.DiscordInvite.targetApplication"]},{"name":"open override val targetApplication: Optional<DiscordPartialApplication>","description":"dev.kord.common.entity.DiscordInviteWithMetadata.targetApplication","location":"common/dev.kord.common.entity/-discord-invite-with-metadata/target-application.html","searchKeys":["targetApplication","open override val targetApplication: Optional<DiscordPartialApplication>","dev.kord.common.entity.DiscordInviteWithMetadata.targetApplication"]},{"name":"open override val targetType: Optional<InviteTargetType>","description":"dev.kord.common.entity.DiscordInvite.targetType","location":"common/dev.kord.common.entity/-discord-invite/target-type.html","searchKeys":["targetType","open override val targetType: Optional<InviteTargetType>","dev.kord.common.entity.DiscordInvite.targetType"]},{"name":"open override val targetType: Optional<InviteTargetType>","description":"dev.kord.common.entity.DiscordInviteWithMetadata.targetType","location":"common/dev.kord.common.entity/-discord-invite-with-metadata/target-type.html","searchKeys":["targetType","open override val targetType: Optional<InviteTargetType>","dev.kord.common.entity.DiscordInviteWithMetadata.targetType"]},{"name":"open override val targetUser: Optional<DiscordUser>","description":"dev.kord.common.entity.DiscordInvite.targetUser","location":"common/dev.kord.common.entity/-discord-invite/target-user.html","searchKeys":["targetUser","open override val targetUser: Optional<DiscordUser>","dev.kord.common.entity.DiscordInvite.targetUser"]},{"name":"open override val targetUser: Optional<DiscordUser>","description":"dev.kord.common.entity.DiscordInviteWithMetadata.targetUser","location":"common/dev.kord.common.entity/-discord-invite-with-metadata/target-user.html","searchKeys":["targetUser","open override val targetUser: Optional<DiscordUser>","dev.kord.common.entity.DiscordInviteWithMetadata.targetUser"]},{"name":"open override val termsOfServiceUrl: Optional<String>","description":"dev.kord.common.entity.DiscordApplication.termsOfServiceUrl","location":"common/dev.kord.common.entity/-discord-application/terms-of-service-url.html","searchKeys":["termsOfServiceUrl","open override val termsOfServiceUrl: Optional<String>","dev.kord.common.entity.DiscordApplication.termsOfServiceUrl"]},{"name":"open override val termsOfServiceUrl: Optional<String>","description":"dev.kord.common.entity.DiscordPartialApplication.termsOfServiceUrl","location":"common/dev.kord.common.entity/-discord-partial-application/terms-of-service-url.html","searchKeys":["termsOfServiceUrl","open override val termsOfServiceUrl: Optional<String>","dev.kord.common.entity.DiscordPartialApplication.termsOfServiceUrl"]},{"name":"open override val type: ApplicationCommandOptionType","description":"dev.kord.common.entity.CommandArgument.AttachmentArgument.type","location":"common/dev.kord.common.entity/-command-argument/-attachment-argument/type.html","searchKeys":["type","open override val type: ApplicationCommandOptionType","dev.kord.common.entity.CommandArgument.AttachmentArgument.type"]},{"name":"open override val type: ApplicationCommandOptionType","description":"dev.kord.common.entity.CommandArgument.AutoCompleteArgument.type","location":"common/dev.kord.common.entity/-command-argument/-auto-complete-argument/type.html","searchKeys":["type","open override val type: ApplicationCommandOptionType","dev.kord.common.entity.CommandArgument.AutoCompleteArgument.type"]},{"name":"open override val type: ApplicationCommandOptionType","description":"dev.kord.common.entity.CommandArgument.BooleanArgument.type","location":"common/dev.kord.common.entity/-command-argument/-boolean-argument/type.html","searchKeys":["type","open override val type: ApplicationCommandOptionType","dev.kord.common.entity.CommandArgument.BooleanArgument.type"]},{"name":"open override val type: ApplicationCommandOptionType","description":"dev.kord.common.entity.CommandArgument.ChannelArgument.type","location":"common/dev.kord.common.entity/-command-argument/-channel-argument/type.html","searchKeys":["type","open override val type: ApplicationCommandOptionType","dev.kord.common.entity.CommandArgument.ChannelArgument.type"]},{"name":"open override val type: ApplicationCommandOptionType","description":"dev.kord.common.entity.CommandArgument.IntegerArgument.type","location":"common/dev.kord.common.entity/-command-argument/-integer-argument/type.html","searchKeys":["type","open override val type: ApplicationCommandOptionType","dev.kord.common.entity.CommandArgument.IntegerArgument.type"]},{"name":"open override val type: ApplicationCommandOptionType","description":"dev.kord.common.entity.CommandArgument.MentionableArgument.type","location":"common/dev.kord.common.entity/-command-argument/-mentionable-argument/type.html","searchKeys":["type","open override val type: ApplicationCommandOptionType","dev.kord.common.entity.CommandArgument.MentionableArgument.type"]},{"name":"open override val type: ApplicationCommandOptionType","description":"dev.kord.common.entity.CommandArgument.NumberArgument.type","location":"common/dev.kord.common.entity/-command-argument/-number-argument/type.html","searchKeys":["type","open override val type: ApplicationCommandOptionType","dev.kord.common.entity.CommandArgument.NumberArgument.type"]},{"name":"open override val type: ApplicationCommandOptionType","description":"dev.kord.common.entity.CommandArgument.RoleArgument.type","location":"common/dev.kord.common.entity/-command-argument/-role-argument/type.html","searchKeys":["type","open override val type: ApplicationCommandOptionType","dev.kord.common.entity.CommandArgument.RoleArgument.type"]},{"name":"open override val type: ApplicationCommandOptionType","description":"dev.kord.common.entity.CommandArgument.StringArgument.type","location":"common/dev.kord.common.entity/-command-argument/-string-argument/type.html","searchKeys":["type","open override val type: ApplicationCommandOptionType","dev.kord.common.entity.CommandArgument.StringArgument.type"]},{"name":"open override val type: ApplicationCommandOptionType","description":"dev.kord.common.entity.CommandArgument.UserArgument.type","location":"common/dev.kord.common.entity/-command-argument/-user-argument/type.html","searchKeys":["type","open override val type: ApplicationCommandOptionType","dev.kord.common.entity.CommandArgument.UserArgument.type"]},{"name":"open override val type: ApplicationCommandOptionType","description":"dev.kord.common.entity.CommandGroup.type","location":"common/dev.kord.common.entity/-command-group/type.html","searchKeys":["type","open override val type: ApplicationCommandOptionType","dev.kord.common.entity.CommandGroup.type"]},{"name":"open override val type: ApplicationCommandOptionType","description":"dev.kord.common.entity.SubCommand.type","location":"common/dev.kord.common.entity/-sub-command/type.html","searchKeys":["type","open override val type: ApplicationCommandOptionType","dev.kord.common.entity.SubCommand.type"]},{"name":"open override val type: ComponentType","description":"dev.kord.common.entity.DiscordChatComponent.type","location":"common/dev.kord.common.entity/-discord-chat-component/type.html","searchKeys":["type","open override val type: ComponentType","dev.kord.common.entity.DiscordChatComponent.type"]},{"name":"open override val type: ComponentType","description":"dev.kord.common.entity.DiscordTextInputComponent.type","location":"common/dev.kord.common.entity/-discord-text-input-component/type.html","searchKeys":["type","open override val type: ComponentType","dev.kord.common.entity.DiscordTextInputComponent.type"]},{"name":"open override val url: Optional<String>","description":"dev.kord.common.entity.DiscordChatComponent.url","location":"common/dev.kord.common.entity/-discord-chat-component/url.html","searchKeys":["url","open override val url: Optional<String>","dev.kord.common.entity.DiscordChatComponent.url"]},{"name":"open override val url: Optional<String>","description":"dev.kord.common.entity.DiscordTextInputComponent.url","location":"common/dev.kord.common.entity/-discord-text-input-component/url.html","searchKeys":["url","open override val url: Optional<String>","dev.kord.common.entity.DiscordTextInputComponent.url"]},{"name":"open override val value: Boolean","description":"dev.kord.common.entity.CommandArgument.BooleanArgument.value","location":"common/dev.kord.common.entity/-command-argument/-boolean-argument/value.html","searchKeys":["value","open override val value: Boolean","dev.kord.common.entity.CommandArgument.BooleanArgument.value"]},{"name":"open override val value: Double","description":"dev.kord.common.entity.Choice.NumberChoice.value","location":"common/dev.kord.common.entity/-choice/-number-choice/value.html","searchKeys":["value","open override val value: Double","dev.kord.common.entity.Choice.NumberChoice.value"]},{"name":"open override val value: Double","description":"dev.kord.common.entity.CommandArgument.NumberArgument.value","location":"common/dev.kord.common.entity/-command-argument/-number-argument/value.html","searchKeys":["value","open override val value: Double","dev.kord.common.entity.CommandArgument.NumberArgument.value"]},{"name":"open override val value: Long","description":"dev.kord.common.entity.Choice.IntChoice.value","location":"common/dev.kord.common.entity/-choice/-int-choice/value.html","searchKeys":["value","open override val value: Long","dev.kord.common.entity.Choice.IntChoice.value"]},{"name":"open override val value: Long","description":"dev.kord.common.entity.CommandArgument.IntegerArgument.value","location":"common/dev.kord.common.entity/-command-argument/-integer-argument/value.html","searchKeys":["value","open override val value: Long","dev.kord.common.entity.CommandArgument.IntegerArgument.value"]},{"name":"open override val value: Optional<String>","description":"dev.kord.common.entity.DiscordChatComponent.value","location":"common/dev.kord.common.entity/-discord-chat-component/value.html","searchKeys":["value","open override val value: Optional<String>","dev.kord.common.entity.DiscordChatComponent.value"]},{"name":"open override val value: Optional<String>","description":"dev.kord.common.entity.DiscordTextInputComponent.value","location":"common/dev.kord.common.entity/-discord-text-input-component/value.html","searchKeys":["value","open override val value: Optional<String>","dev.kord.common.entity.DiscordTextInputComponent.value"]},{"name":"open override val value: Snowflake","description":"dev.kord.common.entity.CommandArgument.AttachmentArgument.value","location":"common/dev.kord.common.entity/-command-argument/-attachment-argument/value.html","searchKeys":["value","open override val value: Snowflake","dev.kord.common.entity.CommandArgument.AttachmentArgument.value"]},{"name":"open override val value: Snowflake","description":"dev.kord.common.entity.CommandArgument.ChannelArgument.value","location":"common/dev.kord.common.entity/-command-argument/-channel-argument/value.html","searchKeys":["value","open override val value: Snowflake","dev.kord.common.entity.CommandArgument.ChannelArgument.value"]},{"name":"open override val value: Snowflake","description":"dev.kord.common.entity.CommandArgument.MentionableArgument.value","location":"common/dev.kord.common.entity/-command-argument/-mentionable-argument/value.html","searchKeys":["value","open override val value: Snowflake","dev.kord.common.entity.CommandArgument.MentionableArgument.value"]},{"name":"open override val value: Snowflake","description":"dev.kord.common.entity.CommandArgument.RoleArgument.value","location":"common/dev.kord.common.entity/-command-argument/-role-argument/value.html","searchKeys":["value","open override val value: Snowflake","dev.kord.common.entity.CommandArgument.RoleArgument.value"]},{"name":"open override val value: Snowflake","description":"dev.kord.common.entity.CommandArgument.UserArgument.value","location":"common/dev.kord.common.entity/-command-argument/-user-argument/value.html","searchKeys":["value","open override val value: Snowflake","dev.kord.common.entity.CommandArgument.UserArgument.value"]},{"name":"open override val value: Snowflake","description":"dev.kord.common.entity.optional.OptionalSnowflake.Value.value","location":"common/dev.kord.common.entity.optional/-optional-snowflake/-value/value.html","searchKeys":["value","open override val value: Snowflake","dev.kord.common.entity.optional.OptionalSnowflake.Value.value"]},{"name":"open override val value: String","description":"dev.kord.common.entity.Choice.StringChoice.value","location":"common/dev.kord.common.entity/-choice/-string-choice/value.html","searchKeys":["value","open override val value: String","dev.kord.common.entity.Choice.StringChoice.value"]},{"name":"open override val value: String","description":"dev.kord.common.entity.CommandArgument.AutoCompleteArgument.value","location":"common/dev.kord.common.entity/-command-argument/-auto-complete-argument/value.html","searchKeys":["value","open override val value: String","dev.kord.common.entity.CommandArgument.AutoCompleteArgument.value"]},{"name":"open override val value: String","description":"dev.kord.common.entity.CommandArgument.StringArgument.value","location":"common/dev.kord.common.entity/-command-argument/-string-argument/value.html","searchKeys":["value","open override val value: String","dev.kord.common.entity.CommandArgument.StringArgument.value"]},{"name":"open override val value: T","description":"dev.kord.common.entity.optional.Optional.Value.value","location":"common/dev.kord.common.entity.optional/-optional/-value/value.html","searchKeys":["value","open override val value: T","dev.kord.common.entity.optional.Optional.Value.value"]},{"name":"open override val value: T?","description":"dev.kord.common.entity.optional.Optional.Missing.value","location":"common/dev.kord.common.entity.optional/-optional/-missing/value.html","searchKeys":["value","open override val value: T?","dev.kord.common.entity.optional.Optional.Missing.value"]},{"name":"open override val value: T?","description":"dev.kord.common.entity.optional.Optional.Null.value","location":"common/dev.kord.common.entity.optional/-optional/-null/value.html","searchKeys":["value","open override val value: T?","dev.kord.common.entity.optional.Optional.Null.value"]},{"name":"open override val verifyKey: String","description":"dev.kord.common.entity.DiscordApplication.verifyKey","location":"common/dev.kord.common.entity/-discord-application/verify-key.html","searchKeys":["verifyKey","open override val verifyKey: String","dev.kord.common.entity.DiscordApplication.verifyKey"]},{"name":"open override val verifyKey: String","description":"dev.kord.common.entity.DiscordPartialApplication.verifyKey","location":"common/dev.kord.common.entity/-discord-partial-application/verify-key.html","searchKeys":["verifyKey","open override val verifyKey: String","dev.kord.common.entity.DiscordPartialApplication.verifyKey"]},{"name":"open val value: Snowflake?","description":"dev.kord.common.entity.optional.OptionalSnowflake.value","location":"common/dev.kord.common.entity.optional/-optional-snowflake/value.html","searchKeys":["value","open val value: Snowflake?","dev.kord.common.entity.optional.OptionalSnowflake.value"]},{"name":"open val value: T?","description":"dev.kord.common.entity.optional.Optional.value","location":"common/dev.kord.common.entity.optional/-optional/value.html","searchKeys":["value","open val value: T?","dev.kord.common.entity.optional.Optional.value"]},{"name":"operator fun <T : Any> invoke(): Optional.Missing<T>","description":"dev.kord.common.entity.optional.Optional.Companion.invoke","location":"common/dev.kord.common.entity.optional/-optional/-companion/invoke.html","searchKeys":["invoke","operator fun <T : Any> invoke(): Optional.Missing<T>","dev.kord.common.entity.optional.Optional.Companion.invoke"]},{"name":"operator fun <T : Any> invoke(): Optional.Missing<T>","description":"dev.kord.common.entity.optional.Optional.Missing.Companion.invoke","location":"common/dev.kord.common.entity.optional/-optional/-missing/-companion/invoke.html","searchKeys":["invoke","operator fun <T : Any> invoke(): Optional.Missing<T>","dev.kord.common.entity.optional.Optional.Missing.Companion.invoke"]},{"name":"operator fun <T : Any> invoke(): Optional.Null<T>","description":"dev.kord.common.entity.optional.Optional.Null.Companion.invoke","location":"common/dev.kord.common.entity.optional/-optional/-null/-companion/invoke.html","searchKeys":["invoke","operator fun <T : Any> invoke(): Optional.Null<T>","dev.kord.common.entity.optional.Optional.Null.Companion.invoke"]},{"name":"operator fun <T : Any> invoke(value: T): Optional.Value<T>","description":"dev.kord.common.entity.optional.Optional.Companion.invoke","location":"common/dev.kord.common.entity.optional/-optional/-companion/invoke.html","searchKeys":["invoke","operator fun <T : Any> invoke(value: T): Optional.Value<T>","dev.kord.common.entity.optional.Optional.Companion.invoke"]},{"name":"operator fun <T : Any> invoke(value: T?): Optional<T?>","description":"dev.kord.common.entity.optional.Optional.Companion.invoke","location":"common/dev.kord.common.entity.optional/-optional/-companion/invoke.html","searchKeys":["invoke","operator fun <T : Any> invoke(value: T?): Optional<T?>","dev.kord.common.entity.optional.Optional.Companion.invoke"]},{"name":"operator fun <T> get(value: AuditLogChangeKey<T>): AuditLogChange<T>?","description":"dev.kord.common.entity.DiscordAuditLogEntry.get","location":"common/dev.kord.common.entity/-discord-audit-log-entry/get.html","searchKeys":["get","operator fun <T> get(value: AuditLogChangeKey<T>): AuditLogChange<T>?","dev.kord.common.entity.DiscordAuditLogEntry.get"]},{"name":"operator fun ApplicationFlag.unaryMinus()","description":"dev.kord.common.entity.ApplicationFlags.Builder.unaryMinus","location":"common/dev.kord.common.entity/-application-flags/-builder/unary-minus.html","searchKeys":["unaryMinus","operator fun ApplicationFlag.unaryMinus()","dev.kord.common.entity.ApplicationFlags.Builder.unaryMinus"]},{"name":"operator fun ApplicationFlag.unaryPlus()","description":"dev.kord.common.entity.ApplicationFlags.Builder.unaryPlus","location":"common/dev.kord.common.entity/-application-flags/-builder/unary-plus.html","searchKeys":["unaryPlus","operator fun ApplicationFlag.unaryPlus()","dev.kord.common.entity.ApplicationFlags.Builder.unaryPlus"]},{"name":"operator fun ApplicationFlags.unaryMinus()","description":"dev.kord.common.entity.ApplicationFlags.Builder.unaryMinus","location":"common/dev.kord.common.entity/-application-flags/-builder/unary-minus.html","searchKeys":["unaryMinus","operator fun ApplicationFlags.unaryMinus()","dev.kord.common.entity.ApplicationFlags.Builder.unaryMinus"]},{"name":"operator fun ApplicationFlags.unaryPlus()","description":"dev.kord.common.entity.ApplicationFlags.Builder.unaryPlus","location":"common/dev.kord.common.entity/-application-flags/-builder/unary-plus.html","searchKeys":["unaryPlus","operator fun ApplicationFlags.unaryPlus()","dev.kord.common.entity.ApplicationFlags.Builder.unaryPlus"]},{"name":"operator fun MessageFlag.unaryMinus()","description":"dev.kord.common.entity.MessageFlags.Builder.unaryMinus","location":"common/dev.kord.common.entity/-message-flags/-builder/unary-minus.html","searchKeys":["unaryMinus","operator fun MessageFlag.unaryMinus()","dev.kord.common.entity.MessageFlags.Builder.unaryMinus"]},{"name":"operator fun MessageFlag.unaryPlus()","description":"dev.kord.common.entity.MessageFlags.Builder.unaryPlus","location":"common/dev.kord.common.entity/-message-flags/-builder/unary-plus.html","searchKeys":["unaryPlus","operator fun MessageFlag.unaryPlus()","dev.kord.common.entity.MessageFlags.Builder.unaryPlus"]},{"name":"operator fun MessageFlags.unaryMinus()","description":"dev.kord.common.entity.MessageFlags.Builder.unaryMinus","location":"common/dev.kord.common.entity/-message-flags/-builder/unary-minus.html","searchKeys":["unaryMinus","operator fun MessageFlags.unaryMinus()","dev.kord.common.entity.MessageFlags.Builder.unaryMinus"]},{"name":"operator fun MessageFlags.unaryPlus()","description":"dev.kord.common.entity.MessageFlags.Builder.unaryPlus","location":"common/dev.kord.common.entity/-message-flags/-builder/unary-plus.html","searchKeys":["unaryPlus","operator fun MessageFlags.unaryPlus()","dev.kord.common.entity.MessageFlags.Builder.unaryPlus"]},{"name":"operator fun Permission.unaryMinus()","description":"dev.kord.common.entity.Permissions.PermissionsBuilder.unaryMinus","location":"common/dev.kord.common.entity/-permissions/-permissions-builder/unary-minus.html","searchKeys":["unaryMinus","operator fun Permission.unaryMinus()","dev.kord.common.entity.Permissions.PermissionsBuilder.unaryMinus"]},{"name":"operator fun Permission.unaryPlus()","description":"dev.kord.common.entity.Permissions.PermissionsBuilder.unaryPlus","location":"common/dev.kord.common.entity/-permissions/-permissions-builder/unary-plus.html","searchKeys":["unaryPlus","operator fun Permission.unaryPlus()","dev.kord.common.entity.Permissions.PermissionsBuilder.unaryPlus"]},{"name":"operator fun Permissions.unaryMinus()","description":"dev.kord.common.entity.Permissions.PermissionsBuilder.unaryMinus","location":"common/dev.kord.common.entity/-permissions/-permissions-builder/unary-minus.html","searchKeys":["unaryMinus","operator fun Permissions.unaryMinus()","dev.kord.common.entity.Permissions.PermissionsBuilder.unaryMinus"]},{"name":"operator fun Permissions.unaryPlus()","description":"dev.kord.common.entity.Permissions.PermissionsBuilder.unaryPlus","location":"common/dev.kord.common.entity/-permissions/-permissions-builder/unary-plus.html","searchKeys":["unaryPlus","operator fun Permissions.unaryPlus()","dev.kord.common.entity.Permissions.PermissionsBuilder.unaryPlus"]},{"name":"operator fun UserFlag.unaryMinus()","description":"dev.kord.common.entity.UserFlags.UserFlagsBuilder.unaryMinus","location":"common/dev.kord.common.entity/-user-flags/-user-flags-builder/unary-minus.html","searchKeys":["unaryMinus","operator fun UserFlag.unaryMinus()","dev.kord.common.entity.UserFlags.UserFlagsBuilder.unaryMinus"]},{"name":"operator fun UserFlag.unaryPlus()","description":"dev.kord.common.entity.UserFlags.UserFlagsBuilder.unaryPlus","location":"common/dev.kord.common.entity/-user-flags/-user-flags-builder/unary-plus.html","searchKeys":["unaryPlus","operator fun UserFlag.unaryPlus()","dev.kord.common.entity.UserFlags.UserFlagsBuilder.unaryPlus"]},{"name":"operator fun component1(): Boolean","description":"dev.kord.common.entity.optional.OptionalBoolean.Value.component1","location":"common/dev.kord.common.entity.optional/-optional-boolean/-value/component1.html","searchKeys":["component1","operator fun component1(): Boolean","dev.kord.common.entity.optional.OptionalBoolean.Value.component1"]},{"name":"operator fun component1(): Instant","description":"dev.kord.common.entity.Snowflake.component1","location":"common/dev.kord.common.entity/-snowflake/component1.html","searchKeys":["component1","operator fun component1(): Instant","dev.kord.common.entity.Snowflake.component1"]},{"name":"operator fun component1(): Int","description":"dev.kord.common.entity.optional.OptionalInt.Value.component1","location":"common/dev.kord.common.entity.optional/-optional-int/-value/component1.html","searchKeys":["component1","operator fun component1(): Int","dev.kord.common.entity.optional.OptionalInt.Value.component1"]},{"name":"operator fun component1(): Long","description":"dev.kord.common.entity.optional.OptionalLong.Value.component1","location":"common/dev.kord.common.entity.optional/-optional-long/-value/component1.html","searchKeys":["component1","operator fun component1(): Long","dev.kord.common.entity.optional.OptionalLong.Value.component1"]},{"name":"operator fun component1(): Snowflake","description":"dev.kord.common.entity.optional.OptionalSnowflake.Value.component1","location":"common/dev.kord.common.entity.optional/-optional-snowflake/-value/component1.html","searchKeys":["component1","operator fun component1(): Snowflake","dev.kord.common.entity.optional.OptionalSnowflake.Value.component1"]},{"name":"operator fun component1(): T","description":"dev.kord.common.entity.optional.Optional.Value.component1","location":"common/dev.kord.common.entity.optional/-optional/-value/component1.html","searchKeys":["component1","operator fun component1(): T","dev.kord.common.entity.optional.Optional.Value.component1"]},{"name":"operator fun component2(): UByte","description":"dev.kord.common.entity.Snowflake.component2","location":"common/dev.kord.common.entity/-snowflake/component2.html","searchKeys":["component2","operator fun component2(): UByte","dev.kord.common.entity.Snowflake.component2"]},{"name":"operator fun component3(): UByte","description":"dev.kord.common.entity.Snowflake.component3","location":"common/dev.kord.common.entity/-snowflake/component3.html","searchKeys":["component3","operator fun component3(): UByte","dev.kord.common.entity.Snowflake.component3"]},{"name":"operator fun component4(): UShort","description":"dev.kord.common.entity.Snowflake.component4","location":"common/dev.kord.common.entity/-snowflake/component4.html","searchKeys":["component4","operator fun component4(): UShort","dev.kord.common.entity.Snowflake.component4"]},{"name":"operator fun contains(flag: ActivityFlag): Boolean","description":"dev.kord.common.entity.ActivityFlags.contains","location":"common/dev.kord.common.entity/-activity-flags/contains.html","searchKeys":["contains","operator fun contains(flag: ActivityFlag): Boolean","dev.kord.common.entity.ActivityFlags.contains"]},{"name":"operator fun contains(flag: ApplicationFlag): Boolean","description":"dev.kord.common.entity.ApplicationFlags.contains","location":"common/dev.kord.common.entity/-application-flags/contains.html","searchKeys":["contains","operator fun contains(flag: ApplicationFlag): Boolean","dev.kord.common.entity.ApplicationFlags.contains"]},{"name":"operator fun contains(flag: MessageFlag): Boolean","description":"dev.kord.common.entity.MessageFlags.contains","location":"common/dev.kord.common.entity/-message-flags/contains.html","searchKeys":["contains","operator fun contains(flag: MessageFlag): Boolean","dev.kord.common.entity.MessageFlags.contains"]},{"name":"operator fun contains(flag: SystemChannelFlags): Boolean","description":"dev.kord.common.entity.SystemChannelFlags.contains","location":"common/dev.kord.common.entity/-system-channel-flags/contains.html","searchKeys":["contains","operator fun contains(flag: SystemChannelFlags): Boolean","dev.kord.common.entity.SystemChannelFlags.contains"]},{"name":"operator fun contains(flag: UserFlag): Boolean","description":"dev.kord.common.entity.UserFlags.contains","location":"common/dev.kord.common.entity/-user-flags/contains.html","searchKeys":["contains","operator fun contains(flag: UserFlag): Boolean","dev.kord.common.entity.UserFlags.contains"]},{"name":"operator fun contains(flags: ApplicationFlags): Boolean","description":"dev.kord.common.entity.ApplicationFlags.contains","location":"common/dev.kord.common.entity/-application-flags/contains.html","searchKeys":["contains","operator fun contains(flags: ApplicationFlags): Boolean","dev.kord.common.entity.ApplicationFlags.contains"]},{"name":"operator fun contains(flags: MessageFlags): Boolean","description":"dev.kord.common.entity.MessageFlags.contains","location":"common/dev.kord.common.entity/-message-flags/contains.html","searchKeys":["contains","operator fun contains(flags: MessageFlags): Boolean","dev.kord.common.entity.MessageFlags.contains"]},{"name":"operator fun contains(other: DiscordBitSet): Boolean","description":"dev.kord.common.DiscordBitSet.contains","location":"common/dev.kord.common/-discord-bit-set/contains.html","searchKeys":["contains","operator fun contains(other: DiscordBitSet): Boolean","dev.kord.common.DiscordBitSet.contains"]},{"name":"operator fun contains(permission: Permission): Boolean","description":"dev.kord.common.entity.Permissions.contains","location":"common/dev.kord.common.entity/-permissions/contains.html","searchKeys":["contains","operator fun contains(permission: Permission): Boolean","dev.kord.common.entity.Permissions.contains"]},{"name":"operator fun contains(permission: Permissions): Boolean","description":"dev.kord.common.entity.Permissions.contains","location":"common/dev.kord.common.entity/-permissions/contains.html","searchKeys":["contains","operator fun contains(permission: Permissions): Boolean","dev.kord.common.entity.Permissions.contains"]},{"name":"operator fun get(index: Int): Boolean","description":"dev.kord.common.DiscordBitSet.get","location":"common/dev.kord.common/-discord-bit-set/get.html","searchKeys":["get","operator fun get(index: Int): Boolean","dev.kord.common.DiscordBitSet.get"]},{"name":"operator fun minus(another: DiscordBitSet): DiscordBitSet","description":"dev.kord.common.DiscordBitSet.minus","location":"common/dev.kord.common/-discord-bit-set/minus.html","searchKeys":["minus","operator fun minus(another: DiscordBitSet): DiscordBitSet","dev.kord.common.DiscordBitSet.minus"]},{"name":"operator fun minus(flag: ApplicationFlag): ApplicationFlags","description":"dev.kord.common.entity.ApplicationFlags.minus","location":"common/dev.kord.common.entity/-application-flags/minus.html","searchKeys":["minus","operator fun minus(flag: ApplicationFlag): ApplicationFlags","dev.kord.common.entity.ApplicationFlags.minus"]},{"name":"operator fun minus(flag: UserFlag): UserFlags","description":"dev.kord.common.entity.UserFlags.minus","location":"common/dev.kord.common.entity/-user-flags/minus.html","searchKeys":["minus","operator fun minus(flag: UserFlag): UserFlags","dev.kord.common.entity.UserFlags.minus"]},{"name":"operator fun minus(flags: ApplicationFlags): ApplicationFlags","description":"dev.kord.common.entity.ApplicationFlags.minus","location":"common/dev.kord.common.entity/-application-flags/minus.html","searchKeys":["minus","operator fun minus(flags: ApplicationFlags): ApplicationFlags","dev.kord.common.entity.ApplicationFlags.minus"]},{"name":"operator fun minus(flags: MessageFlag): MessageFlags","description":"dev.kord.common.entity.MessageFlags.minus","location":"common/dev.kord.common.entity/-message-flags/minus.html","searchKeys":["minus","operator fun minus(flags: MessageFlag): MessageFlags","dev.kord.common.entity.MessageFlags.minus"]},{"name":"operator fun minus(flags: MessageFlags): MessageFlags","description":"dev.kord.common.entity.MessageFlags.minus","location":"common/dev.kord.common.entity/-message-flags/minus.html","searchKeys":["minus","operator fun minus(flags: MessageFlags): MessageFlags","dev.kord.common.entity.MessageFlags.minus"]},{"name":"operator fun minus(permission: Permission): Permissions","description":"dev.kord.common.entity.Permissions.minus","location":"common/dev.kord.common.entity/-permissions/minus.html","searchKeys":["minus","operator fun minus(permission: Permission): Permissions","dev.kord.common.entity.Permissions.minus"]},{"name":"operator fun minus(permission: Permissions): Permissions","description":"dev.kord.common.entity.Permissions.minus","location":"common/dev.kord.common.entity/-permissions/minus.html","searchKeys":["minus","operator fun minus(permission: Permissions): Permissions","dev.kord.common.entity.Permissions.minus"]},{"name":"operator fun not(): OptionalBoolean","description":"dev.kord.common.entity.optional.OptionalBoolean.not","location":"common/dev.kord.common.entity.optional/-optional-boolean/not.html","searchKeys":["not","operator fun not(): OptionalBoolean","dev.kord.common.entity.optional.OptionalBoolean.not"]},{"name":"operator fun plus(another: DiscordBitSet): DiscordBitSet","description":"dev.kord.common.DiscordBitSet.plus","location":"common/dev.kord.common/-discord-bit-set/plus.html","searchKeys":["plus","operator fun plus(another: DiscordBitSet): DiscordBitSet","dev.kord.common.DiscordBitSet.plus"]},{"name":"operator fun plus(flag: ApplicationFlag): ApplicationFlags","description":"dev.kord.common.entity.ApplicationFlag.plus","location":"common/dev.kord.common.entity/-application-flag/plus.html","searchKeys":["plus","operator fun plus(flag: ApplicationFlag): ApplicationFlags","dev.kord.common.entity.ApplicationFlag.plus"]},{"name":"operator fun plus(flag: ApplicationFlag): ApplicationFlags","description":"dev.kord.common.entity.ApplicationFlags.plus","location":"common/dev.kord.common.entity/-application-flags/plus.html","searchKeys":["plus","operator fun plus(flag: ApplicationFlag): ApplicationFlags","dev.kord.common.entity.ApplicationFlags.plus"]},{"name":"operator fun plus(flags: ApplicationFlags): ApplicationFlags","description":"dev.kord.common.entity.ApplicationFlag.plus","location":"common/dev.kord.common.entity/-application-flag/plus.html","searchKeys":["plus","operator fun plus(flags: ApplicationFlags): ApplicationFlags","dev.kord.common.entity.ApplicationFlag.plus"]},{"name":"operator fun plus(flags: ApplicationFlags): ApplicationFlags","description":"dev.kord.common.entity.ApplicationFlags.plus","location":"common/dev.kord.common.entity/-application-flags/plus.html","searchKeys":["plus","operator fun plus(flags: ApplicationFlags): ApplicationFlags","dev.kord.common.entity.ApplicationFlags.plus"]},{"name":"operator fun plus(flags: MessageFlag): MessageFlags","description":"dev.kord.common.entity.MessageFlags.plus","location":"common/dev.kord.common.entity/-message-flags/plus.html","searchKeys":["plus","operator fun plus(flags: MessageFlag): MessageFlags","dev.kord.common.entity.MessageFlags.plus"]},{"name":"operator fun plus(flags: MessageFlags): MessageFlags","description":"dev.kord.common.entity.MessageFlags.plus","location":"common/dev.kord.common.entity/-message-flags/plus.html","searchKeys":["plus","operator fun plus(flags: MessageFlags): MessageFlags","dev.kord.common.entity.MessageFlags.plus"]},{"name":"operator fun plus(flags: UserFlags): UserFlags","description":"dev.kord.common.entity.UserFlags.plus","location":"common/dev.kord.common.entity/-user-flags/plus.html","searchKeys":["plus","operator fun plus(flags: UserFlags): UserFlags","dev.kord.common.entity.UserFlags.plus"]},{"name":"operator fun plus(permission: Permission): Permissions","description":"dev.kord.common.entity.Permissions.plus","location":"common/dev.kord.common.entity/-permissions/plus.html","searchKeys":["plus","operator fun plus(permission: Permission): Permissions","dev.kord.common.entity.Permissions.plus"]},{"name":"operator fun plus(permission: Permissions): Permissions","description":"dev.kord.common.entity.Permissions.plus","location":"common/dev.kord.common.entity/-permissions/plus.html","searchKeys":["plus","operator fun plus(permission: Permissions): Permissions","dev.kord.common.entity.Permissions.plus"]},{"name":"operator fun set(index: Int, value: Boolean)","description":"dev.kord.common.DiscordBitSet.set","location":"common/dev.kord.common/-discord-bit-set/set.html","searchKeys":["set","operator fun set(index: Int, value: Boolean)","dev.kord.common.DiscordBitSet.set"]},{"name":"operator override fun equals(other: Any?): Boolean","description":"dev.kord.common.entity.ActivityType.equals","location":"common/dev.kord.common.entity/-activity-type/equals.html","searchKeys":["equals","operator override fun equals(other: Any?): Boolean","dev.kord.common.entity.ActivityType.equals"]},{"name":"operator override fun equals(other: Any?): Boolean","description":"dev.kord.common.entity.AllowedMentionType.equals","location":"common/dev.kord.common.entity/-allowed-mention-type/equals.html","searchKeys":["equals","operator override fun equals(other: Any?): Boolean","dev.kord.common.entity.AllowedMentionType.equals"]},{"name":"operator override fun equals(other: Any?): Boolean","description":"dev.kord.common.entity.ApplicationCommandOptionType.equals","location":"common/dev.kord.common.entity/-application-command-option-type/equals.html","searchKeys":["equals","operator override fun equals(other: Any?): Boolean","dev.kord.common.entity.ApplicationCommandOptionType.equals"]},{"name":"operator override fun equals(other: Any?): Boolean","description":"dev.kord.common.entity.ApplicationCommandPermissionType.equals","location":"common/dev.kord.common.entity/-application-command-permission-type/equals.html","searchKeys":["equals","operator override fun equals(other: Any?): Boolean","dev.kord.common.entity.ApplicationCommandPermissionType.equals"]},{"name":"operator override fun equals(other: Any?): Boolean","description":"dev.kord.common.entity.ApplicationCommandType.equals","location":"common/dev.kord.common.entity/-application-command-type/equals.html","searchKeys":["equals","operator override fun equals(other: Any?): Boolean","dev.kord.common.entity.ApplicationCommandType.equals"]},{"name":"operator override fun equals(other: Any?): Boolean","description":"dev.kord.common.entity.ArchiveDuration.equals","location":"common/dev.kord.common.entity/-archive-duration/equals.html","searchKeys":["equals","operator override fun equals(other: Any?): Boolean","dev.kord.common.entity.ArchiveDuration.equals"]},{"name":"operator override fun equals(other: Any?): Boolean","description":"dev.kord.common.entity.AuditLogEvent.equals","location":"common/dev.kord.common.entity/-audit-log-event/equals.html","searchKeys":["equals","operator override fun equals(other: Any?): Boolean","dev.kord.common.entity.AuditLogEvent.equals"]},{"name":"operator override fun equals(other: Any?): Boolean","description":"dev.kord.common.entity.AutoModerationActionType.equals","location":"common/dev.kord.common.entity/-auto-moderation-action-type/equals.html","searchKeys":["equals","operator override fun equals(other: Any?): Boolean","dev.kord.common.entity.AutoModerationActionType.equals"]},{"name":"operator override fun equals(other: Any?): Boolean","description":"dev.kord.common.entity.AutoModerationRuleEventType.equals","location":"common/dev.kord.common.entity/-auto-moderation-rule-event-type/equals.html","searchKeys":["equals","operator override fun equals(other: Any?): Boolean","dev.kord.common.entity.AutoModerationRuleEventType.equals"]},{"name":"operator override fun equals(other: Any?): Boolean","description":"dev.kord.common.entity.AutoModerationRuleKeywordPresetType.equals","location":"common/dev.kord.common.entity/-auto-moderation-rule-keyword-preset-type/equals.html","searchKeys":["equals","operator override fun equals(other: Any?): Boolean","dev.kord.common.entity.AutoModerationRuleKeywordPresetType.equals"]},{"name":"operator override fun equals(other: Any?): Boolean","description":"dev.kord.common.entity.AutoModerationRuleTriggerType.equals","location":"common/dev.kord.common.entity/-auto-moderation-rule-trigger-type/equals.html","searchKeys":["equals","operator override fun equals(other: Any?): Boolean","dev.kord.common.entity.AutoModerationRuleTriggerType.equals"]},{"name":"operator override fun equals(other: Any?): Boolean","description":"dev.kord.common.entity.ButtonStyle.equals","location":"common/dev.kord.common.entity/-button-style/equals.html","searchKeys":["equals","operator override fun equals(other: Any?): Boolean","dev.kord.common.entity.ButtonStyle.equals"]},{"name":"operator override fun equals(other: Any?): Boolean","description":"dev.kord.common.entity.ChannelType.equals","location":"common/dev.kord.common.entity/-channel-type/equals.html","searchKeys":["equals","operator override fun equals(other: Any?): Boolean","dev.kord.common.entity.ChannelType.equals"]},{"name":"operator override fun equals(other: Any?): Boolean","description":"dev.kord.common.entity.ComponentType.equals","location":"common/dev.kord.common.entity/-component-type/equals.html","searchKeys":["equals","operator override fun equals(other: Any?): Boolean","dev.kord.common.entity.ComponentType.equals"]},{"name":"operator override fun equals(other: Any?): Boolean","description":"dev.kord.common.entity.DefaultMessageNotificationLevel.equals","location":"common/dev.kord.common.entity/-default-message-notification-level/equals.html","searchKeys":["equals","operator override fun equals(other: Any?): Boolean","dev.kord.common.entity.DefaultMessageNotificationLevel.equals"]},{"name":"operator override fun equals(other: Any?): Boolean","description":"dev.kord.common.entity.DiscordConnectionVisibility.equals","location":"common/dev.kord.common.entity/-discord-connection-visibility/equals.html","searchKeys":["equals","operator override fun equals(other: Any?): Boolean","dev.kord.common.entity.DiscordConnectionVisibility.equals"]},{"name":"operator override fun equals(other: Any?): Boolean","description":"dev.kord.common.entity.EmbedType.equals","location":"common/dev.kord.common.entity/-embed-type/equals.html","searchKeys":["equals","operator override fun equals(other: Any?): Boolean","dev.kord.common.entity.EmbedType.equals"]},{"name":"operator override fun equals(other: Any?): Boolean","description":"dev.kord.common.entity.ExplicitContentFilter.equals","location":"common/dev.kord.common.entity/-explicit-content-filter/equals.html","searchKeys":["equals","operator override fun equals(other: Any?): Boolean","dev.kord.common.entity.ExplicitContentFilter.equals"]},{"name":"operator override fun equals(other: Any?): Boolean","description":"dev.kord.common.entity.GuildFeature.equals","location":"common/dev.kord.common.entity/-guild-feature/equals.html","searchKeys":["equals","operator override fun equals(other: Any?): Boolean","dev.kord.common.entity.GuildFeature.equals"]},{"name":"operator override fun equals(other: Any?): Boolean","description":"dev.kord.common.entity.GuildScheduledEventPrivacyLevel.equals","location":"common/dev.kord.common.entity/-guild-scheduled-event-privacy-level/equals.html","searchKeys":["equals","operator override fun equals(other: Any?): Boolean","dev.kord.common.entity.GuildScheduledEventPrivacyLevel.equals"]},{"name":"operator override fun equals(other: Any?): Boolean","description":"dev.kord.common.entity.GuildScheduledEventStatus.equals","location":"common/dev.kord.common.entity/-guild-scheduled-event-status/equals.html","searchKeys":["equals","operator override fun equals(other: Any?): Boolean","dev.kord.common.entity.GuildScheduledEventStatus.equals"]},{"name":"operator override fun equals(other: Any?): Boolean","description":"dev.kord.common.entity.IntegrationExpireBehavior.equals","location":"common/dev.kord.common.entity/-integration-expire-behavior/equals.html","searchKeys":["equals","operator override fun equals(other: Any?): Boolean","dev.kord.common.entity.IntegrationExpireBehavior.equals"]},{"name":"operator override fun equals(other: Any?): Boolean","description":"dev.kord.common.entity.InteractionResponseType.equals","location":"common/dev.kord.common.entity/-interaction-response-type/equals.html","searchKeys":["equals","operator override fun equals(other: Any?): Boolean","dev.kord.common.entity.InteractionResponseType.equals"]},{"name":"operator override fun equals(other: Any?): Boolean","description":"dev.kord.common.entity.InteractionType.equals","location":"common/dev.kord.common.entity/-interaction-type/equals.html","searchKeys":["equals","operator override fun equals(other: Any?): Boolean","dev.kord.common.entity.InteractionType.equals"]},{"name":"operator override fun equals(other: Any?): Boolean","description":"dev.kord.common.entity.InviteTargetType.equals","location":"common/dev.kord.common.entity/-invite-target-type/equals.html","searchKeys":["equals","operator override fun equals(other: Any?): Boolean","dev.kord.common.entity.InviteTargetType.equals"]},{"name":"operator override fun equals(other: Any?): Boolean","description":"dev.kord.common.entity.MFALevel.equals","location":"common/dev.kord.common.entity/-m-f-a-level/equals.html","searchKeys":["equals","operator override fun equals(other: Any?): Boolean","dev.kord.common.entity.MFALevel.equals"]},{"name":"operator override fun equals(other: Any?): Boolean","description":"dev.kord.common.entity.MessageActivityType.equals","location":"common/dev.kord.common.entity/-message-activity-type/equals.html","searchKeys":["equals","operator override fun equals(other: Any?): Boolean","dev.kord.common.entity.MessageActivityType.equals"]},{"name":"operator override fun equals(other: Any?): Boolean","description":"dev.kord.common.entity.MessageStickerType.equals","location":"common/dev.kord.common.entity/-message-sticker-type/equals.html","searchKeys":["equals","operator override fun equals(other: Any?): Boolean","dev.kord.common.entity.MessageStickerType.equals"]},{"name":"operator override fun equals(other: Any?): Boolean","description":"dev.kord.common.entity.MessageType.equals","location":"common/dev.kord.common.entity/-message-type/equals.html","searchKeys":["equals","operator override fun equals(other: Any?): Boolean","dev.kord.common.entity.MessageType.equals"]},{"name":"operator override fun equals(other: Any?): Boolean","description":"dev.kord.common.entity.NsfwLevel.equals","location":"common/dev.kord.common.entity/-nsfw-level/equals.html","searchKeys":["equals","operator override fun equals(other: Any?): Boolean","dev.kord.common.entity.NsfwLevel.equals"]},{"name":"operator override fun equals(other: Any?): Boolean","description":"dev.kord.common.entity.OverwriteType.equals","location":"common/dev.kord.common.entity/-overwrite-type/equals.html","searchKeys":["equals","operator override fun equals(other: Any?): Boolean","dev.kord.common.entity.OverwriteType.equals"]},{"name":"operator override fun equals(other: Any?): Boolean","description":"dev.kord.common.entity.PremiumTier.equals","location":"common/dev.kord.common.entity/-premium-tier/equals.html","searchKeys":["equals","operator override fun equals(other: Any?): Boolean","dev.kord.common.entity.PremiumTier.equals"]},{"name":"operator override fun equals(other: Any?): Boolean","description":"dev.kord.common.entity.PresenceStatus.equals","location":"common/dev.kord.common.entity/-presence-status/equals.html","searchKeys":["equals","operator override fun equals(other: Any?): Boolean","dev.kord.common.entity.PresenceStatus.equals"]},{"name":"operator override fun equals(other: Any?): Boolean","description":"dev.kord.common.entity.ScheduledEntityType.equals","location":"common/dev.kord.common.entity/-scheduled-entity-type/equals.html","searchKeys":["equals","operator override fun equals(other: Any?): Boolean","dev.kord.common.entity.ScheduledEntityType.equals"]},{"name":"operator override fun equals(other: Any?): Boolean","description":"dev.kord.common.entity.StageInstancePrivacyLevel.equals","location":"common/dev.kord.common.entity/-stage-instance-privacy-level/equals.html","searchKeys":["equals","operator override fun equals(other: Any?): Boolean","dev.kord.common.entity.StageInstancePrivacyLevel.equals"]},{"name":"operator override fun equals(other: Any?): Boolean","description":"dev.kord.common.entity.TeamMembershipState.equals","location":"common/dev.kord.common.entity/-team-membership-state/equals.html","searchKeys":["equals","operator override fun equals(other: Any?): Boolean","dev.kord.common.entity.TeamMembershipState.equals"]},{"name":"operator override fun equals(other: Any?): Boolean","description":"dev.kord.common.entity.TextInputStyle.equals","location":"common/dev.kord.common.entity/-text-input-style/equals.html","searchKeys":["equals","operator override fun equals(other: Any?): Boolean","dev.kord.common.entity.TextInputStyle.equals"]},{"name":"operator override fun equals(other: Any?): Boolean","description":"dev.kord.common.entity.UserPremium.equals","location":"common/dev.kord.common.entity/-user-premium/equals.html","searchKeys":["equals","operator override fun equals(other: Any?): Boolean","dev.kord.common.entity.UserPremium.equals"]},{"name":"operator override fun equals(other: Any?): Boolean","description":"dev.kord.common.entity.VerificationLevel.equals","location":"common/dev.kord.common.entity/-verification-level/equals.html","searchKeys":["equals","operator override fun equals(other: Any?): Boolean","dev.kord.common.entity.VerificationLevel.equals"]},{"name":"operator override fun equals(other: Any?): Boolean","description":"dev.kord.common.entity.VideoQualityMode.equals","location":"common/dev.kord.common.entity/-video-quality-mode/equals.html","searchKeys":["equals","operator override fun equals(other: Any?): Boolean","dev.kord.common.entity.VideoQualityMode.equals"]},{"name":"operator override fun equals(other: Any?): Boolean","description":"dev.kord.common.entity.WebhookType.equals","location":"common/dev.kord.common.entity/-webhook-type/equals.html","searchKeys":["equals","operator override fun equals(other: Any?): Boolean","dev.kord.common.entity.WebhookType.equals"]},{"name":"override fun deserialize(decoder: Decoder): Duration","description":"dev.kord.common.serialization.DurationAsLongSerializer.deserialize","location":"common/dev.kord.common.serialization/-duration-as-long-serializer/deserialize.html","searchKeys":["deserialize","override fun deserialize(decoder: Decoder): Duration","dev.kord.common.serialization.DurationAsLongSerializer.deserialize"]},{"name":"override fun hashCode(): Int","description":"dev.kord.common.entity.ActivityType.hashCode","location":"common/dev.kord.common.entity/-activity-type/hash-code.html","searchKeys":["hashCode","override fun hashCode(): Int","dev.kord.common.entity.ActivityType.hashCode"]},{"name":"override fun hashCode(): Int","description":"dev.kord.common.entity.AllowedMentionType.hashCode","location":"common/dev.kord.common.entity/-allowed-mention-type/hash-code.html","searchKeys":["hashCode","override fun hashCode(): Int","dev.kord.common.entity.AllowedMentionType.hashCode"]},{"name":"override fun hashCode(): Int","description":"dev.kord.common.entity.ApplicationCommandOptionType.hashCode","location":"common/dev.kord.common.entity/-application-command-option-type/hash-code.html","searchKeys":["hashCode","override fun hashCode(): Int","dev.kord.common.entity.ApplicationCommandOptionType.hashCode"]},{"name":"override fun hashCode(): Int","description":"dev.kord.common.entity.ApplicationCommandPermissionType.hashCode","location":"common/dev.kord.common.entity/-application-command-permission-type/hash-code.html","searchKeys":["hashCode","override fun hashCode(): Int","dev.kord.common.entity.ApplicationCommandPermissionType.hashCode"]},{"name":"override fun hashCode(): Int","description":"dev.kord.common.entity.ApplicationCommandType.hashCode","location":"common/dev.kord.common.entity/-application-command-type/hash-code.html","searchKeys":["hashCode","override fun hashCode(): Int","dev.kord.common.entity.ApplicationCommandType.hashCode"]},{"name":"override fun hashCode(): Int","description":"dev.kord.common.entity.ArchiveDuration.hashCode","location":"common/dev.kord.common.entity/-archive-duration/hash-code.html","searchKeys":["hashCode","override fun hashCode(): Int","dev.kord.common.entity.ArchiveDuration.hashCode"]},{"name":"override fun hashCode(): Int","description":"dev.kord.common.entity.AuditLogEvent.hashCode","location":"common/dev.kord.common.entity/-audit-log-event/hash-code.html","searchKeys":["hashCode","override fun hashCode(): Int","dev.kord.common.entity.AuditLogEvent.hashCode"]},{"name":"override fun hashCode(): Int","description":"dev.kord.common.entity.AutoModerationActionType.hashCode","location":"common/dev.kord.common.entity/-auto-moderation-action-type/hash-code.html","searchKeys":["hashCode","override fun hashCode(): Int","dev.kord.common.entity.AutoModerationActionType.hashCode"]},{"name":"override fun hashCode(): Int","description":"dev.kord.common.entity.AutoModerationRuleEventType.hashCode","location":"common/dev.kord.common.entity/-auto-moderation-rule-event-type/hash-code.html","searchKeys":["hashCode","override fun hashCode(): Int","dev.kord.common.entity.AutoModerationRuleEventType.hashCode"]},{"name":"override fun hashCode(): Int","description":"dev.kord.common.entity.AutoModerationRuleKeywordPresetType.hashCode","location":"common/dev.kord.common.entity/-auto-moderation-rule-keyword-preset-type/hash-code.html","searchKeys":["hashCode","override fun hashCode(): Int","dev.kord.common.entity.AutoModerationRuleKeywordPresetType.hashCode"]},{"name":"override fun hashCode(): Int","description":"dev.kord.common.entity.AutoModerationRuleTriggerType.hashCode","location":"common/dev.kord.common.entity/-auto-moderation-rule-trigger-type/hash-code.html","searchKeys":["hashCode","override fun hashCode(): Int","dev.kord.common.entity.AutoModerationRuleTriggerType.hashCode"]},{"name":"override fun hashCode(): Int","description":"dev.kord.common.entity.ButtonStyle.hashCode","location":"common/dev.kord.common.entity/-button-style/hash-code.html","searchKeys":["hashCode","override fun hashCode(): Int","dev.kord.common.entity.ButtonStyle.hashCode"]},{"name":"override fun hashCode(): Int","description":"dev.kord.common.entity.ChannelType.hashCode","location":"common/dev.kord.common.entity/-channel-type/hash-code.html","searchKeys":["hashCode","override fun hashCode(): Int","dev.kord.common.entity.ChannelType.hashCode"]},{"name":"override fun hashCode(): Int","description":"dev.kord.common.entity.ComponentType.hashCode","location":"common/dev.kord.common.entity/-component-type/hash-code.html","searchKeys":["hashCode","override fun hashCode(): Int","dev.kord.common.entity.ComponentType.hashCode"]},{"name":"override fun hashCode(): Int","description":"dev.kord.common.entity.DefaultMessageNotificationLevel.hashCode","location":"common/dev.kord.common.entity/-default-message-notification-level/hash-code.html","searchKeys":["hashCode","override fun hashCode(): Int","dev.kord.common.entity.DefaultMessageNotificationLevel.hashCode"]},{"name":"override fun hashCode(): Int","description":"dev.kord.common.entity.DiscordConnectionVisibility.hashCode","location":"common/dev.kord.common.entity/-discord-connection-visibility/hash-code.html","searchKeys":["hashCode","override fun hashCode(): Int","dev.kord.common.entity.DiscordConnectionVisibility.hashCode"]},{"name":"override fun hashCode(): Int","description":"dev.kord.common.entity.EmbedType.hashCode","location":"common/dev.kord.common.entity/-embed-type/hash-code.html","searchKeys":["hashCode","override fun hashCode(): Int","dev.kord.common.entity.EmbedType.hashCode"]},{"name":"override fun hashCode(): Int","description":"dev.kord.common.entity.ExplicitContentFilter.hashCode","location":"common/dev.kord.common.entity/-explicit-content-filter/hash-code.html","searchKeys":["hashCode","override fun hashCode(): Int","dev.kord.common.entity.ExplicitContentFilter.hashCode"]},{"name":"override fun hashCode(): Int","description":"dev.kord.common.entity.GuildFeature.hashCode","location":"common/dev.kord.common.entity/-guild-feature/hash-code.html","searchKeys":["hashCode","override fun hashCode(): Int","dev.kord.common.entity.GuildFeature.hashCode"]},{"name":"override fun hashCode(): Int","description":"dev.kord.common.entity.GuildScheduledEventPrivacyLevel.hashCode","location":"common/dev.kord.common.entity/-guild-scheduled-event-privacy-level/hash-code.html","searchKeys":["hashCode","override fun hashCode(): Int","dev.kord.common.entity.GuildScheduledEventPrivacyLevel.hashCode"]},{"name":"override fun hashCode(): Int","description":"dev.kord.common.entity.GuildScheduledEventStatus.hashCode","location":"common/dev.kord.common.entity/-guild-scheduled-event-status/hash-code.html","searchKeys":["hashCode","override fun hashCode(): Int","dev.kord.common.entity.GuildScheduledEventStatus.hashCode"]},{"name":"override fun hashCode(): Int","description":"dev.kord.common.entity.IntegrationExpireBehavior.hashCode","location":"common/dev.kord.common.entity/-integration-expire-behavior/hash-code.html","searchKeys":["hashCode","override fun hashCode(): Int","dev.kord.common.entity.IntegrationExpireBehavior.hashCode"]},{"name":"override fun hashCode(): Int","description":"dev.kord.common.entity.InteractionResponseType.hashCode","location":"common/dev.kord.common.entity/-interaction-response-type/hash-code.html","searchKeys":["hashCode","override fun hashCode(): Int","dev.kord.common.entity.InteractionResponseType.hashCode"]},{"name":"override fun hashCode(): Int","description":"dev.kord.common.entity.InteractionType.hashCode","location":"common/dev.kord.common.entity/-interaction-type/hash-code.html","searchKeys":["hashCode","override fun hashCode(): Int","dev.kord.common.entity.InteractionType.hashCode"]},{"name":"override fun hashCode(): Int","description":"dev.kord.common.entity.InviteTargetType.hashCode","location":"common/dev.kord.common.entity/-invite-target-type/hash-code.html","searchKeys":["hashCode","override fun hashCode(): Int","dev.kord.common.entity.InviteTargetType.hashCode"]},{"name":"override fun hashCode(): Int","description":"dev.kord.common.entity.MFALevel.hashCode","location":"common/dev.kord.common.entity/-m-f-a-level/hash-code.html","searchKeys":["hashCode","override fun hashCode(): Int","dev.kord.common.entity.MFALevel.hashCode"]},{"name":"override fun hashCode(): Int","description":"dev.kord.common.entity.MessageActivityType.hashCode","location":"common/dev.kord.common.entity/-message-activity-type/hash-code.html","searchKeys":["hashCode","override fun hashCode(): Int","dev.kord.common.entity.MessageActivityType.hashCode"]},{"name":"override fun hashCode(): Int","description":"dev.kord.common.entity.MessageStickerType.hashCode","location":"common/dev.kord.common.entity/-message-sticker-type/hash-code.html","searchKeys":["hashCode","override fun hashCode(): Int","dev.kord.common.entity.MessageStickerType.hashCode"]},{"name":"override fun hashCode(): Int","description":"dev.kord.common.entity.MessageType.hashCode","location":"common/dev.kord.common.entity/-message-type/hash-code.html","searchKeys":["hashCode","override fun hashCode(): Int","dev.kord.common.entity.MessageType.hashCode"]},{"name":"override fun hashCode(): Int","description":"dev.kord.common.entity.NsfwLevel.hashCode","location":"common/dev.kord.common.entity/-nsfw-level/hash-code.html","searchKeys":["hashCode","override fun hashCode(): Int","dev.kord.common.entity.NsfwLevel.hashCode"]},{"name":"override fun hashCode(): Int","description":"dev.kord.common.entity.OverwriteType.hashCode","location":"common/dev.kord.common.entity/-overwrite-type/hash-code.html","searchKeys":["hashCode","override fun hashCode(): Int","dev.kord.common.entity.OverwriteType.hashCode"]},{"name":"override fun hashCode(): Int","description":"dev.kord.common.entity.PremiumTier.hashCode","location":"common/dev.kord.common.entity/-premium-tier/hash-code.html","searchKeys":["hashCode","override fun hashCode(): Int","dev.kord.common.entity.PremiumTier.hashCode"]},{"name":"override fun hashCode(): Int","description":"dev.kord.common.entity.PresenceStatus.hashCode","location":"common/dev.kord.common.entity/-presence-status/hash-code.html","searchKeys":["hashCode","override fun hashCode(): Int","dev.kord.common.entity.PresenceStatus.hashCode"]},{"name":"override fun hashCode(): Int","description":"dev.kord.common.entity.ScheduledEntityType.hashCode","location":"common/dev.kord.common.entity/-scheduled-entity-type/hash-code.html","searchKeys":["hashCode","override fun hashCode(): Int","dev.kord.common.entity.ScheduledEntityType.hashCode"]},{"name":"override fun hashCode(): Int","description":"dev.kord.common.entity.StageInstancePrivacyLevel.hashCode","location":"common/dev.kord.common.entity/-stage-instance-privacy-level/hash-code.html","searchKeys":["hashCode","override fun hashCode(): Int","dev.kord.common.entity.StageInstancePrivacyLevel.hashCode"]},{"name":"override fun hashCode(): Int","description":"dev.kord.common.entity.TeamMembershipState.hashCode","location":"common/dev.kord.common.entity/-team-membership-state/hash-code.html","searchKeys":["hashCode","override fun hashCode(): Int","dev.kord.common.entity.TeamMembershipState.hashCode"]},{"name":"override fun hashCode(): Int","description":"dev.kord.common.entity.TextInputStyle.hashCode","location":"common/dev.kord.common.entity/-text-input-style/hash-code.html","searchKeys":["hashCode","override fun hashCode(): Int","dev.kord.common.entity.TextInputStyle.hashCode"]},{"name":"override fun hashCode(): Int","description":"dev.kord.common.entity.UserPremium.hashCode","location":"common/dev.kord.common.entity/-user-premium/hash-code.html","searchKeys":["hashCode","override fun hashCode(): Int","dev.kord.common.entity.UserPremium.hashCode"]},{"name":"override fun hashCode(): Int","description":"dev.kord.common.entity.VerificationLevel.hashCode","location":"common/dev.kord.common.entity/-verification-level/hash-code.html","searchKeys":["hashCode","override fun hashCode(): Int","dev.kord.common.entity.VerificationLevel.hashCode"]},{"name":"override fun hashCode(): Int","description":"dev.kord.common.entity.VideoQualityMode.hashCode","location":"common/dev.kord.common.entity/-video-quality-mode/hash-code.html","searchKeys":["hashCode","override fun hashCode(): Int","dev.kord.common.entity.VideoQualityMode.hashCode"]},{"name":"override fun hashCode(): Int","description":"dev.kord.common.entity.WebhookType.hashCode","location":"common/dev.kord.common.entity/-webhook-type/hash-code.html","searchKeys":["hashCode","override fun hashCode(): Int","dev.kord.common.entity.WebhookType.hashCode"]},{"name":"override fun serialize(encoder: Encoder, value: Duration)","description":"dev.kord.common.serialization.DurationAsLongSerializer.serialize","location":"common/dev.kord.common.serialization/-duration-as-long-serializer/serialize.html","searchKeys":["serialize","override fun serialize(encoder: Encoder, value: Duration)","dev.kord.common.serialization.DurationAsLongSerializer.serialize"]},{"name":"override fun toString(): String","description":"dev.kord.common.entity.ActivityType.toString","location":"common/dev.kord.common.entity/-activity-type/to-string.html","searchKeys":["toString","override fun toString(): String","dev.kord.common.entity.ActivityType.toString"]},{"name":"override fun toString(): String","description":"dev.kord.common.entity.AllowedMentionType.toString","location":"common/dev.kord.common.entity/-allowed-mention-type/to-string.html","searchKeys":["toString","override fun toString(): String","dev.kord.common.entity.AllowedMentionType.toString"]},{"name":"override fun toString(): String","description":"dev.kord.common.entity.ApplicationCommandOptionType.toString","location":"common/dev.kord.common.entity/-application-command-option-type/to-string.html","searchKeys":["toString","override fun toString(): String","dev.kord.common.entity.ApplicationCommandOptionType.toString"]},{"name":"override fun toString(): String","description":"dev.kord.common.entity.ApplicationCommandPermissionType.toString","location":"common/dev.kord.common.entity/-application-command-permission-type/to-string.html","searchKeys":["toString","override fun toString(): String","dev.kord.common.entity.ApplicationCommandPermissionType.toString"]},{"name":"override fun toString(): String","description":"dev.kord.common.entity.ApplicationCommandType.toString","location":"common/dev.kord.common.entity/-application-command-type/to-string.html","searchKeys":["toString","override fun toString(): String","dev.kord.common.entity.ApplicationCommandType.toString"]},{"name":"override fun toString(): String","description":"dev.kord.common.entity.ArchiveDuration.toString","location":"common/dev.kord.common.entity/-archive-duration/to-string.html","searchKeys":["toString","override fun toString(): String","dev.kord.common.entity.ArchiveDuration.toString"]},{"name":"override fun toString(): String","description":"dev.kord.common.entity.AuditLogEvent.toString","location":"common/dev.kord.common.entity/-audit-log-event/to-string.html","searchKeys":["toString","override fun toString(): String","dev.kord.common.entity.AuditLogEvent.toString"]},{"name":"override fun toString(): String","description":"dev.kord.common.entity.AutoModerationActionType.toString","location":"common/dev.kord.common.entity/-auto-moderation-action-type/to-string.html","searchKeys":["toString","override fun toString(): String","dev.kord.common.entity.AutoModerationActionType.toString"]},{"name":"override fun toString(): String","description":"dev.kord.common.entity.AutoModerationRuleEventType.toString","location":"common/dev.kord.common.entity/-auto-moderation-rule-event-type/to-string.html","searchKeys":["toString","override fun toString(): String","dev.kord.common.entity.AutoModerationRuleEventType.toString"]},{"name":"override fun toString(): String","description":"dev.kord.common.entity.AutoModerationRuleKeywordPresetType.toString","location":"common/dev.kord.common.entity/-auto-moderation-rule-keyword-preset-type/to-string.html","searchKeys":["toString","override fun toString(): String","dev.kord.common.entity.AutoModerationRuleKeywordPresetType.toString"]},{"name":"override fun toString(): String","description":"dev.kord.common.entity.AutoModerationRuleTriggerType.toString","location":"common/dev.kord.common.entity/-auto-moderation-rule-trigger-type/to-string.html","searchKeys":["toString","override fun toString(): String","dev.kord.common.entity.AutoModerationRuleTriggerType.toString"]},{"name":"override fun toString(): String","description":"dev.kord.common.entity.ButtonStyle.toString","location":"common/dev.kord.common.entity/-button-style/to-string.html","searchKeys":["toString","override fun toString(): String","dev.kord.common.entity.ButtonStyle.toString"]},{"name":"override fun toString(): String","description":"dev.kord.common.entity.ChannelType.toString","location":"common/dev.kord.common.entity/-channel-type/to-string.html","searchKeys":["toString","override fun toString(): String","dev.kord.common.entity.ChannelType.toString"]},{"name":"override fun toString(): String","description":"dev.kord.common.entity.ComponentType.toString","location":"common/dev.kord.common.entity/-component-type/to-string.html","searchKeys":["toString","override fun toString(): String","dev.kord.common.entity.ComponentType.toString"]},{"name":"override fun toString(): String","description":"dev.kord.common.entity.DefaultMessageNotificationLevel.toString","location":"common/dev.kord.common.entity/-default-message-notification-level/to-string.html","searchKeys":["toString","override fun toString(): String","dev.kord.common.entity.DefaultMessageNotificationLevel.toString"]},{"name":"override fun toString(): String","description":"dev.kord.common.entity.DiscordConnectionVisibility.toString","location":"common/dev.kord.common.entity/-discord-connection-visibility/to-string.html","searchKeys":["toString","override fun toString(): String","dev.kord.common.entity.DiscordConnectionVisibility.toString"]},{"name":"override fun toString(): String","description":"dev.kord.common.entity.EmbedType.toString","location":"common/dev.kord.common.entity/-embed-type/to-string.html","searchKeys":["toString","override fun toString(): String","dev.kord.common.entity.EmbedType.toString"]},{"name":"override fun toString(): String","description":"dev.kord.common.entity.ExplicitContentFilter.toString","location":"common/dev.kord.common.entity/-explicit-content-filter/to-string.html","searchKeys":["toString","override fun toString(): String","dev.kord.common.entity.ExplicitContentFilter.toString"]},{"name":"override fun toString(): String","description":"dev.kord.common.entity.GuildFeature.toString","location":"common/dev.kord.common.entity/-guild-feature/to-string.html","searchKeys":["toString","override fun toString(): String","dev.kord.common.entity.GuildFeature.toString"]},{"name":"override fun toString(): String","description":"dev.kord.common.entity.GuildScheduledEventPrivacyLevel.toString","location":"common/dev.kord.common.entity/-guild-scheduled-event-privacy-level/to-string.html","searchKeys":["toString","override fun toString(): String","dev.kord.common.entity.GuildScheduledEventPrivacyLevel.toString"]},{"name":"override fun toString(): String","description":"dev.kord.common.entity.GuildScheduledEventStatus.toString","location":"common/dev.kord.common.entity/-guild-scheduled-event-status/to-string.html","searchKeys":["toString","override fun toString(): String","dev.kord.common.entity.GuildScheduledEventStatus.toString"]},{"name":"override fun toString(): String","description":"dev.kord.common.entity.IntegrationExpireBehavior.toString","location":"common/dev.kord.common.entity/-integration-expire-behavior/to-string.html","searchKeys":["toString","override fun toString(): String","dev.kord.common.entity.IntegrationExpireBehavior.toString"]},{"name":"override fun toString(): String","description":"dev.kord.common.entity.InteractionResponseType.toString","location":"common/dev.kord.common.entity/-interaction-response-type/to-string.html","searchKeys":["toString","override fun toString(): String","dev.kord.common.entity.InteractionResponseType.toString"]},{"name":"override fun toString(): String","description":"dev.kord.common.entity.InteractionType.toString","location":"common/dev.kord.common.entity/-interaction-type/to-string.html","searchKeys":["toString","override fun toString(): String","dev.kord.common.entity.InteractionType.toString"]},{"name":"override fun toString(): String","description":"dev.kord.common.entity.InviteTargetType.toString","location":"common/dev.kord.common.entity/-invite-target-type/to-string.html","searchKeys":["toString","override fun toString(): String","dev.kord.common.entity.InviteTargetType.toString"]},{"name":"override fun toString(): String","description":"dev.kord.common.entity.MFALevel.toString","location":"common/dev.kord.common.entity/-m-f-a-level/to-string.html","searchKeys":["toString","override fun toString(): String","dev.kord.common.entity.MFALevel.toString"]},{"name":"override fun toString(): String","description":"dev.kord.common.entity.MessageActivityType.toString","location":"common/dev.kord.common.entity/-message-activity-type/to-string.html","searchKeys":["toString","override fun toString(): String","dev.kord.common.entity.MessageActivityType.toString"]},{"name":"override fun toString(): String","description":"dev.kord.common.entity.MessageStickerType.toString","location":"common/dev.kord.common.entity/-message-sticker-type/to-string.html","searchKeys":["toString","override fun toString(): String","dev.kord.common.entity.MessageStickerType.toString"]},{"name":"override fun toString(): String","description":"dev.kord.common.entity.MessageType.toString","location":"common/dev.kord.common.entity/-message-type/to-string.html","searchKeys":["toString","override fun toString(): String","dev.kord.common.entity.MessageType.toString"]},{"name":"override fun toString(): String","description":"dev.kord.common.entity.NsfwLevel.toString","location":"common/dev.kord.common.entity/-nsfw-level/to-string.html","searchKeys":["toString","override fun toString(): String","dev.kord.common.entity.NsfwLevel.toString"]},{"name":"override fun toString(): String","description":"dev.kord.common.entity.OverwriteType.toString","location":"common/dev.kord.common.entity/-overwrite-type/to-string.html","searchKeys":["toString","override fun toString(): String","dev.kord.common.entity.OverwriteType.toString"]},{"name":"override fun toString(): String","description":"dev.kord.common.entity.PremiumTier.toString","location":"common/dev.kord.common.entity/-premium-tier/to-string.html","searchKeys":["toString","override fun toString(): String","dev.kord.common.entity.PremiumTier.toString"]},{"name":"override fun toString(): String","description":"dev.kord.common.entity.PresenceStatus.toString","location":"common/dev.kord.common.entity/-presence-status/to-string.html","searchKeys":["toString","override fun toString(): String","dev.kord.common.entity.PresenceStatus.toString"]},{"name":"override fun toString(): String","description":"dev.kord.common.entity.ScheduledEntityType.toString","location":"common/dev.kord.common.entity/-scheduled-entity-type/to-string.html","searchKeys":["toString","override fun toString(): String","dev.kord.common.entity.ScheduledEntityType.toString"]},{"name":"override fun toString(): String","description":"dev.kord.common.entity.StageInstancePrivacyLevel.toString","location":"common/dev.kord.common.entity/-stage-instance-privacy-level/to-string.html","searchKeys":["toString","override fun toString(): String","dev.kord.common.entity.StageInstancePrivacyLevel.toString"]},{"name":"override fun toString(): String","description":"dev.kord.common.entity.TeamMembershipState.toString","location":"common/dev.kord.common.entity/-team-membership-state/to-string.html","searchKeys":["toString","override fun toString(): String","dev.kord.common.entity.TeamMembershipState.toString"]},{"name":"override fun toString(): String","description":"dev.kord.common.entity.TextInputStyle.toString","location":"common/dev.kord.common.entity/-text-input-style/to-string.html","searchKeys":["toString","override fun toString(): String","dev.kord.common.entity.TextInputStyle.toString"]},{"name":"override fun toString(): String","description":"dev.kord.common.entity.UserPremium.toString","location":"common/dev.kord.common.entity/-user-premium/to-string.html","searchKeys":["toString","override fun toString(): String","dev.kord.common.entity.UserPremium.toString"]},{"name":"override fun toString(): String","description":"dev.kord.common.entity.VerificationLevel.toString","location":"common/dev.kord.common.entity/-verification-level/to-string.html","searchKeys":["toString","override fun toString(): String","dev.kord.common.entity.VerificationLevel.toString"]},{"name":"override fun toString(): String","description":"dev.kord.common.entity.VideoQualityMode.toString","location":"common/dev.kord.common.entity/-video-quality-mode/to-string.html","searchKeys":["toString","override fun toString(): String","dev.kord.common.entity.VideoQualityMode.toString"]},{"name":"override fun toString(): String","description":"dev.kord.common.entity.WebhookType.toString","location":"common/dev.kord.common.entity/-webhook-type/to-string.html","searchKeys":["toString","override fun toString(): String","dev.kord.common.entity.WebhookType.toString"]},{"name":"override val descriptor: SerialDescriptor","description":"dev.kord.common.serialization.DurationAsLongSerializer.descriptor","location":"common/dev.kord.common.serialization/-duration-as-long-serializer/descriptor.html","searchKeys":["descriptor","override val descriptor: SerialDescriptor","dev.kord.common.serialization.DurationAsLongSerializer.descriptor"]},{"name":"override val interval: Duration","description":"dev.kord.common.ratelimit.AbstractIntervalRateLimiter.interval","location":"common/dev.kord.common.ratelimit/-abstract-interval-rate-limiter/interval.html","searchKeys":["interval","override val interval: Duration","dev.kord.common.ratelimit.AbstractIntervalRateLimiter.interval"]},{"name":"override val limit: Int","description":"dev.kord.common.ratelimit.AbstractIntervalRateLimiter.limit","location":"common/dev.kord.common.ratelimit/-abstract-interval-rate-limiter/limit.html","searchKeys":["limit","override val limit: Int","dev.kord.common.ratelimit.AbstractIntervalRateLimiter.limit"]},{"name":"sealed class ActivityType","description":"dev.kord.common.entity.ActivityType","location":"common/dev.kord.common.entity/-activity-type/index.html","searchKeys":["ActivityType","sealed class ActivityType","dev.kord.common.entity.ActivityType"]},{"name":"sealed class AllowedMentionType","description":"dev.kord.common.entity.AllowedMentionType","location":"common/dev.kord.common.entity/-allowed-mention-type/index.html","searchKeys":["AllowedMentionType","sealed class AllowedMentionType","dev.kord.common.entity.AllowedMentionType"]},{"name":"sealed class ApplicationCommandOptionType","description":"dev.kord.common.entity.ApplicationCommandOptionType","location":"common/dev.kord.common.entity/-application-command-option-type/index.html","searchKeys":["ApplicationCommandOptionType","sealed class ApplicationCommandOptionType","dev.kord.common.entity.ApplicationCommandOptionType"]},{"name":"sealed class ApplicationCommandPermissionType","description":"dev.kord.common.entity.ApplicationCommandPermissionType","location":"common/dev.kord.common.entity/-application-command-permission-type/index.html","searchKeys":["ApplicationCommandPermissionType","sealed class ApplicationCommandPermissionType","dev.kord.common.entity.ApplicationCommandPermissionType"]},{"name":"sealed class ApplicationCommandType","description":"dev.kord.common.entity.ApplicationCommandType","location":"common/dev.kord.common.entity/-application-command-type/index.html","searchKeys":["ApplicationCommandType","sealed class ApplicationCommandType","dev.kord.common.entity.ApplicationCommandType"]},{"name":"sealed class ArchiveDuration","description":"dev.kord.common.entity.ArchiveDuration","location":"common/dev.kord.common.entity/-archive-duration/index.html","searchKeys":["ArchiveDuration","sealed class ArchiveDuration","dev.kord.common.entity.ArchiveDuration"]},{"name":"sealed class AuditLogChangeKey<T>","description":"dev.kord.common.entity.AuditLogChangeKey","location":"common/dev.kord.common.entity/-audit-log-change-key/index.html","searchKeys":["AuditLogChangeKey","sealed class AuditLogChangeKey<T>","dev.kord.common.entity.AuditLogChangeKey"]},{"name":"sealed class AuditLogEvent","description":"dev.kord.common.entity.AuditLogEvent","location":"common/dev.kord.common.entity/-audit-log-event/index.html","searchKeys":["AuditLogEvent","sealed class AuditLogEvent","dev.kord.common.entity.AuditLogEvent"]},{"name":"sealed class AutoModerationActionType","description":"dev.kord.common.entity.AutoModerationActionType","location":"common/dev.kord.common.entity/-auto-moderation-action-type/index.html","searchKeys":["AutoModerationActionType","sealed class AutoModerationActionType","dev.kord.common.entity.AutoModerationActionType"]},{"name":"sealed class AutoModerationRuleEventType","description":"dev.kord.common.entity.AutoModerationRuleEventType","location":"common/dev.kord.common.entity/-auto-moderation-rule-event-type/index.html","searchKeys":["AutoModerationRuleEventType","sealed class AutoModerationRuleEventType","dev.kord.common.entity.AutoModerationRuleEventType"]},{"name":"sealed class AutoModerationRuleKeywordPresetType","description":"dev.kord.common.entity.AutoModerationRuleKeywordPresetType","location":"common/dev.kord.common.entity/-auto-moderation-rule-keyword-preset-type/index.html","searchKeys":["AutoModerationRuleKeywordPresetType","sealed class AutoModerationRuleKeywordPresetType","dev.kord.common.entity.AutoModerationRuleKeywordPresetType"]},{"name":"sealed class AutoModerationRuleTriggerType","description":"dev.kord.common.entity.AutoModerationRuleTriggerType","location":"common/dev.kord.common.entity/-auto-moderation-rule-trigger-type/index.html","searchKeys":["AutoModerationRuleTriggerType","sealed class AutoModerationRuleTriggerType","dev.kord.common.entity.AutoModerationRuleTriggerType"]},{"name":"sealed class ButtonStyle","description":"dev.kord.common.entity.ButtonStyle","location":"common/dev.kord.common.entity/-button-style/index.html","searchKeys":["ButtonStyle","sealed class ButtonStyle","dev.kord.common.entity.ButtonStyle"]},{"name":"sealed class ChannelType","description":"dev.kord.common.entity.ChannelType","location":"common/dev.kord.common.entity/-channel-type/index.html","searchKeys":["ChannelType","sealed class ChannelType","dev.kord.common.entity.ChannelType"]},{"name":"sealed class Choice<out T>","description":"dev.kord.common.entity.Choice","location":"common/dev.kord.common.entity/-choice/index.html","searchKeys":["Choice","sealed class Choice<out T>","dev.kord.common.entity.Choice"]},{"name":"sealed class CommandArgument<out T> : Option","description":"dev.kord.common.entity.CommandArgument","location":"common/dev.kord.common.entity/-command-argument/index.html","searchKeys":["CommandArgument","sealed class CommandArgument<out T> : Option","dev.kord.common.entity.CommandArgument"]},{"name":"sealed class ComponentType","description":"dev.kord.common.entity.ComponentType","location":"common/dev.kord.common.entity/-component-type/index.html","searchKeys":["ComponentType","sealed class ComponentType","dev.kord.common.entity.ComponentType"]},{"name":"sealed class DefaultMessageNotificationLevel","description":"dev.kord.common.entity.DefaultMessageNotificationLevel","location":"common/dev.kord.common.entity/-default-message-notification-level/index.html","searchKeys":["DefaultMessageNotificationLevel","sealed class DefaultMessageNotificationLevel","dev.kord.common.entity.DefaultMessageNotificationLevel"]},{"name":"sealed class DiscordComponent","description":"dev.kord.common.entity.DiscordComponent","location":"common/dev.kord.common.entity/-discord-component/index.html","searchKeys":["DiscordComponent","sealed class DiscordComponent","dev.kord.common.entity.DiscordComponent"]},{"name":"sealed class DiscordConnectionVisibility","description":"dev.kord.common.entity.DiscordConnectionVisibility","location":"common/dev.kord.common.entity/-discord-connection-visibility/index.html","searchKeys":["DiscordConnectionVisibility","sealed class DiscordConnectionVisibility","dev.kord.common.entity.DiscordConnectionVisibility"]},{"name":"sealed class DurationAsLongSerializer : KSerializer<Duration> ","description":"dev.kord.common.serialization.DurationAsLongSerializer","location":"common/dev.kord.common.serialization/-duration-as-long-serializer/index.html","searchKeys":["DurationAsLongSerializer","sealed class DurationAsLongSerializer : KSerializer<Duration> ","dev.kord.common.serialization.DurationAsLongSerializer"]},{"name":"sealed class EmbedType","description":"dev.kord.common.entity.EmbedType","location":"common/dev.kord.common.entity/-embed-type/index.html","searchKeys":["EmbedType","sealed class EmbedType","dev.kord.common.entity.EmbedType"]},{"name":"sealed class ExplicitContentFilter","description":"dev.kord.common.entity.ExplicitContentFilter","location":"common/dev.kord.common.entity/-explicit-content-filter/index.html","searchKeys":["ExplicitContentFilter","sealed class ExplicitContentFilter","dev.kord.common.entity.ExplicitContentFilter"]},{"name":"sealed class GuildFeature","description":"dev.kord.common.entity.GuildFeature","location":"common/dev.kord.common.entity/-guild-feature/index.html","searchKeys":["GuildFeature","sealed class GuildFeature","dev.kord.common.entity.GuildFeature"]},{"name":"sealed class GuildScheduledEventPrivacyLevel","description":"dev.kord.common.entity.GuildScheduledEventPrivacyLevel","location":"common/dev.kord.common.entity/-guild-scheduled-event-privacy-level/index.html","searchKeys":["GuildScheduledEventPrivacyLevel","sealed class GuildScheduledEventPrivacyLevel","dev.kord.common.entity.GuildScheduledEventPrivacyLevel"]},{"name":"sealed class GuildScheduledEventStatus","description":"dev.kord.common.entity.GuildScheduledEventStatus","location":"common/dev.kord.common.entity/-guild-scheduled-event-status/index.html","searchKeys":["GuildScheduledEventStatus","sealed class GuildScheduledEventStatus","dev.kord.common.entity.GuildScheduledEventStatus"]},{"name":"sealed class IntegrationExpireBehavior","description":"dev.kord.common.entity.IntegrationExpireBehavior","location":"common/dev.kord.common.entity/-integration-expire-behavior/index.html","searchKeys":["IntegrationExpireBehavior","sealed class IntegrationExpireBehavior","dev.kord.common.entity.IntegrationExpireBehavior"]},{"name":"sealed class InteractionResponseType","description":"dev.kord.common.entity.InteractionResponseType","location":"common/dev.kord.common.entity/-interaction-response-type/index.html","searchKeys":["InteractionResponseType","sealed class InteractionResponseType","dev.kord.common.entity.InteractionResponseType"]},{"name":"sealed class InteractionType","description":"dev.kord.common.entity.InteractionType","location":"common/dev.kord.common.entity/-interaction-type/index.html","searchKeys":["InteractionType","sealed class InteractionType","dev.kord.common.entity.InteractionType"]},{"name":"sealed class InviteTargetType","description":"dev.kord.common.entity.InviteTargetType","location":"common/dev.kord.common.entity/-invite-target-type/index.html","searchKeys":["InviteTargetType","sealed class InviteTargetType","dev.kord.common.entity.InviteTargetType"]},{"name":"sealed class MFALevel","description":"dev.kord.common.entity.MFALevel","location":"common/dev.kord.common.entity/-m-f-a-level/index.html","searchKeys":["MFALevel","sealed class MFALevel","dev.kord.common.entity.MFALevel"]},{"name":"sealed class MessageActivityType","description":"dev.kord.common.entity.MessageActivityType","location":"common/dev.kord.common.entity/-message-activity-type/index.html","searchKeys":["MessageActivityType","sealed class MessageActivityType","dev.kord.common.entity.MessageActivityType"]},{"name":"sealed class MessageStickerType","description":"dev.kord.common.entity.MessageStickerType","location":"common/dev.kord.common.entity/-message-sticker-type/index.html","searchKeys":["MessageStickerType","sealed class MessageStickerType","dev.kord.common.entity.MessageStickerType"]},{"name":"sealed class MessageType","description":"dev.kord.common.entity.MessageType","location":"common/dev.kord.common.entity/-message-type/index.html","searchKeys":["MessageType","sealed class MessageType","dev.kord.common.entity.MessageType"]},{"name":"sealed class NsfwLevel","description":"dev.kord.common.entity.NsfwLevel","location":"common/dev.kord.common.entity/-nsfw-level/index.html","searchKeys":["NsfwLevel","sealed class NsfwLevel","dev.kord.common.entity.NsfwLevel"]},{"name":"sealed class Option","description":"dev.kord.common.entity.Option","location":"common/dev.kord.common.entity/-option/index.html","searchKeys":["Option","sealed class Option","dev.kord.common.entity.Option"]},{"name":"sealed class Optional<out T>","description":"dev.kord.common.entity.optional.Optional","location":"common/dev.kord.common.entity.optional/-optional/index.html","searchKeys":["Optional","sealed class Optional<out T>","dev.kord.common.entity.optional.Optional"]},{"name":"sealed class OptionalBoolean","description":"dev.kord.common.entity.optional.OptionalBoolean","location":"common/dev.kord.common.entity.optional/-optional-boolean/index.html","searchKeys":["OptionalBoolean","sealed class OptionalBoolean","dev.kord.common.entity.optional.OptionalBoolean"]},{"name":"sealed class OptionalInt","description":"dev.kord.common.entity.optional.OptionalInt","location":"common/dev.kord.common.entity.optional/-optional-int/index.html","searchKeys":["OptionalInt","sealed class OptionalInt","dev.kord.common.entity.optional.OptionalInt"]},{"name":"sealed class OptionalLong","description":"dev.kord.common.entity.optional.OptionalLong","location":"common/dev.kord.common.entity.optional/-optional-long/index.html","searchKeys":["OptionalLong","sealed class OptionalLong","dev.kord.common.entity.optional.OptionalLong"]},{"name":"sealed class OptionalSnowflake","description":"dev.kord.common.entity.optional.OptionalSnowflake","location":"common/dev.kord.common.entity.optional/-optional-snowflake/index.html","searchKeys":["OptionalSnowflake","sealed class OptionalSnowflake","dev.kord.common.entity.optional.OptionalSnowflake"]},{"name":"sealed class OverwriteType","description":"dev.kord.common.entity.OverwriteType","location":"common/dev.kord.common.entity/-overwrite-type/index.html","searchKeys":["OverwriteType","sealed class OverwriteType","dev.kord.common.entity.OverwriteType"]},{"name":"sealed class Permission","description":"dev.kord.common.entity.Permission","location":"common/dev.kord.common.entity/-permission/index.html","searchKeys":["Permission","sealed class Permission","dev.kord.common.entity.Permission"]},{"name":"sealed class PremiumTier","description":"dev.kord.common.entity.PremiumTier","location":"common/dev.kord.common.entity/-premium-tier/index.html","searchKeys":["PremiumTier","sealed class PremiumTier","dev.kord.common.entity.PremiumTier"]},{"name":"sealed class PresenceStatus","description":"dev.kord.common.entity.PresenceStatus","location":"common/dev.kord.common.entity/-presence-status/index.html","searchKeys":["PresenceStatus","sealed class PresenceStatus","dev.kord.common.entity.PresenceStatus"]},{"name":"sealed class ScheduledEntityType","description":"dev.kord.common.entity.ScheduledEntityType","location":"common/dev.kord.common.entity/-scheduled-entity-type/index.html","searchKeys":["ScheduledEntityType","sealed class ScheduledEntityType","dev.kord.common.entity.ScheduledEntityType"]},{"name":"sealed class StageInstancePrivacyLevel","description":"dev.kord.common.entity.StageInstancePrivacyLevel","location":"common/dev.kord.common.entity/-stage-instance-privacy-level/index.html","searchKeys":["StageInstancePrivacyLevel","sealed class StageInstancePrivacyLevel","dev.kord.common.entity.StageInstancePrivacyLevel"]},{"name":"sealed class TeamMembershipState","description":"dev.kord.common.entity.TeamMembershipState","location":"common/dev.kord.common.entity/-team-membership-state/index.html","searchKeys":["TeamMembershipState","sealed class TeamMembershipState","dev.kord.common.entity.TeamMembershipState"]},{"name":"sealed class TextInputStyle","description":"dev.kord.common.entity.TextInputStyle","location":"common/dev.kord.common.entity/-text-input-style/index.html","searchKeys":["TextInputStyle","sealed class TextInputStyle","dev.kord.common.entity.TextInputStyle"]},{"name":"sealed class Type","description":"dev.kord.common.entity.DiscordGuildApplicationCommandPermission.Type","location":"common/dev.kord.common.entity/-discord-guild-application-command-permission/-type/index.html","searchKeys":["Type","sealed class Type","dev.kord.common.entity.DiscordGuildApplicationCommandPermission.Type"]},{"name":"sealed class UserPremium","description":"dev.kord.common.entity.UserPremium","location":"common/dev.kord.common.entity/-user-premium/index.html","searchKeys":["UserPremium","sealed class UserPremium","dev.kord.common.entity.UserPremium"]},{"name":"sealed class VerificationLevel","description":"dev.kord.common.entity.VerificationLevel","location":"common/dev.kord.common.entity/-verification-level/index.html","searchKeys":["VerificationLevel","sealed class VerificationLevel","dev.kord.common.entity.VerificationLevel"]},{"name":"sealed class VideoQualityMode","description":"dev.kord.common.entity.VideoQualityMode","location":"common/dev.kord.common.entity/-video-quality-mode/index.html","searchKeys":["VideoQualityMode","sealed class VideoQualityMode","dev.kord.common.entity.VideoQualityMode"]},{"name":"sealed class WebhookType","description":"dev.kord.common.entity.WebhookType","location":"common/dev.kord.common.entity/-webhook-type/index.html","searchKeys":["WebhookType","sealed class WebhookType","dev.kord.common.entity.WebhookType"]},{"name":"suspend override fun consume()","description":"dev.kord.common.ratelimit.AbstractIntervalRateLimiter.consume","location":"common/dev.kord.common.ratelimit/-abstract-interval-rate-limiter/consume.html","searchKeys":["consume","suspend override fun consume()","dev.kord.common.ratelimit.AbstractIntervalRateLimiter.consume"]},{"name":"val ALL: List<Locale>","description":"dev.kord.common.Locale.Companion.ALL","location":"common/dev.kord.common/-locale/-companion/-a-l-l.html","searchKeys":["ALL","val ALL: List<Locale>","dev.kord.common.Locale.Companion.ALL"]},{"name":"val BULGARIAN: Locale","description":"dev.kord.common.Locale.Companion.BULGARIAN","location":"common/dev.kord.common/-locale/-companion/-b-u-l-g-a-r-i-a-n.html","searchKeys":["BULGARIAN","val BULGARIAN: Locale","dev.kord.common.Locale.Companion.BULGARIAN"]},{"name":"val CHINESE_CHINA: Locale","description":"dev.kord.common.Locale.Companion.CHINESE_CHINA","location":"common/dev.kord.common/-locale/-companion/-c-h-i-n-e-s-e_-c-h-i-n-a.html","searchKeys":["CHINESE_CHINA","val CHINESE_CHINA: Locale","dev.kord.common.Locale.Companion.CHINESE_CHINA"]},{"name":"val CHINESE_TAIWAN: Locale","description":"dev.kord.common.Locale.Companion.CHINESE_TAIWAN","location":"common/dev.kord.common/-locale/-companion/-c-h-i-n-e-s-e_-t-a-i-w-a-n.html","searchKeys":["CHINESE_TAIWAN","val CHINESE_TAIWAN: Locale","dev.kord.common.Locale.Companion.CHINESE_TAIWAN"]},{"name":"val CROATIAN: Locale","description":"dev.kord.common.Locale.Companion.CROATIAN","location":"common/dev.kord.common/-locale/-companion/-c-r-o-a-t-i-a-n.html","searchKeys":["CROATIAN","val CROATIAN: Locale","dev.kord.common.Locale.Companion.CROATIAN"]},{"name":"val CZECH: Locale","description":"dev.kord.common.Locale.Companion.CZECH","location":"common/dev.kord.common/-locale/-companion/-c-z-e-c-h.html","searchKeys":["CZECH","val CZECH: Locale","dev.kord.common.Locale.Companion.CZECH"]},{"name":"val Color.kColor: Color","description":"dev.kord.common.kColor","location":"common/dev.kord.common/k-color.html","searchKeys":["kColor","val Color.kColor: Color","dev.kord.common.kColor"]},{"name":"val DANISH: Locale","description":"dev.kord.common.Locale.Companion.DANISH","location":"common/dev.kord.common/-locale/-companion/-d-a-n-i-s-h.html","searchKeys":["DANISH","val DANISH: Locale","dev.kord.common.Locale.Companion.DANISH"]},{"name":"val DUTCH: Locale","description":"dev.kord.common.Locale.Companion.DUTCH","location":"common/dev.kord.common/-locale/-companion/-d-u-t-c-h.html","searchKeys":["DUTCH","val DUTCH: Locale","dev.kord.common.Locale.Companion.DUTCH"]},{"name":"val ENGLISH_GREAT_BRITAIN: Locale","description":"dev.kord.common.Locale.Companion.ENGLISH_GREAT_BRITAIN","location":"common/dev.kord.common/-locale/-companion/-e-n-g-l-i-s-h_-g-r-e-a-t_-b-r-i-t-a-i-n.html","searchKeys":["ENGLISH_GREAT_BRITAIN","val ENGLISH_GREAT_BRITAIN: Locale","dev.kord.common.Locale.Companion.ENGLISH_GREAT_BRITAIN"]},{"name":"val ENGLISH_UNITED_STATES: Locale","description":"dev.kord.common.Locale.Companion.ENGLISH_UNITED_STATES","location":"common/dev.kord.common/-locale/-companion/-e-n-g-l-i-s-h_-u-n-i-t-e-d_-s-t-a-t-e-s.html","searchKeys":["ENGLISH_UNITED_STATES","val ENGLISH_UNITED_STATES: Locale","dev.kord.common.Locale.Companion.ENGLISH_UNITED_STATES"]},{"name":"val FINNISH: Locale","description":"dev.kord.common.Locale.Companion.FINNISH","location":"common/dev.kord.common/-locale/-companion/-f-i-n-n-i-s-h.html","searchKeys":["FINNISH","val FINNISH: Locale","dev.kord.common.Locale.Companion.FINNISH"]},{"name":"val FRENCH: Locale","description":"dev.kord.common.Locale.Companion.FRENCH","location":"common/dev.kord.common/-locale/-companion/-f-r-e-n-c-h.html","searchKeys":["FRENCH","val FRENCH: Locale","dev.kord.common.Locale.Companion.FRENCH"]},{"name":"val GERMAN: Locale","description":"dev.kord.common.Locale.Companion.GERMAN","location":"common/dev.kord.common/-locale/-companion/-g-e-r-m-a-n.html","searchKeys":["GERMAN","val GERMAN: Locale","dev.kord.common.Locale.Companion.GERMAN"]},{"name":"val GREEK: Locale","description":"dev.kord.common.Locale.Companion.GREEK","location":"common/dev.kord.common/-locale/-companion/-g-r-e-e-k.html","searchKeys":["GREEK","val GREEK: Locale","dev.kord.common.Locale.Companion.GREEK"]},{"name":"val HINDI: Locale","description":"dev.kord.common.Locale.Companion.HINDI","location":"common/dev.kord.common/-locale/-companion/-h-i-n-d-i.html","searchKeys":["HINDI","val HINDI: Locale","dev.kord.common.Locale.Companion.HINDI"]},{"name":"val HUNGARIAN: Locale","description":"dev.kord.common.Locale.Companion.HUNGARIAN","location":"common/dev.kord.common/-locale/-companion/-h-u-n-g-a-r-i-a-n.html","searchKeys":["HUNGARIAN","val HUNGARIAN: Locale","dev.kord.common.Locale.Companion.HUNGARIAN"]},{"name":"val ITALIAN: Locale","description":"dev.kord.common.Locale.Companion.ITALIAN","location":"common/dev.kord.common/-locale/-companion/-i-t-a-l-i-a-n.html","searchKeys":["ITALIAN","val ITALIAN: Locale","dev.kord.common.Locale.Companion.ITALIAN"]},{"name":"val JAPANESE: Locale","description":"dev.kord.common.Locale.Companion.JAPANESE","location":"common/dev.kord.common/-locale/-companion/-j-a-p-a-n-e-s-e.html","searchKeys":["JAPANESE","val JAPANESE: Locale","dev.kord.common.Locale.Companion.JAPANESE"]},{"name":"val KORD_COMMIT_HASH: String","description":"dev.kord.common.KordConstants.KORD_COMMIT_HASH","location":"common/dev.kord.common/-kord-constants/-k-o-r-d_-c-o-m-m-i-t_-h-a-s-h.html","searchKeys":["KORD_COMMIT_HASH","val KORD_COMMIT_HASH: String","dev.kord.common.KordConstants.KORD_COMMIT_HASH"]},{"name":"val KORD_GITHUB_URL: String","description":"dev.kord.common.KordConstants.KORD_GITHUB_URL","location":"common/dev.kord.common/-kord-constants/-k-o-r-d_-g-i-t-h-u-b_-u-r-l.html","searchKeys":["KORD_GITHUB_URL","val KORD_GITHUB_URL: String","dev.kord.common.KordConstants.KORD_GITHUB_URL"]},{"name":"val KORD_SHORT_COMMIT_HASH: String","description":"dev.kord.common.KordConstants.KORD_SHORT_COMMIT_HASH","location":"common/dev.kord.common/-kord-constants/-k-o-r-d_-s-h-o-r-t_-c-o-m-m-i-t_-h-a-s-h.html","searchKeys":["KORD_SHORT_COMMIT_HASH","val KORD_SHORT_COMMIT_HASH: String","dev.kord.common.KordConstants.KORD_SHORT_COMMIT_HASH"]},{"name":"val KORD_VERSION: String","description":"dev.kord.common.KordConstants.KORD_VERSION","location":"common/dev.kord.common/-kord-constants/-k-o-r-d_-v-e-r-s-i-o-n.html","searchKeys":["KORD_VERSION","val KORD_VERSION: String","dev.kord.common.KordConstants.KORD_VERSION"]},{"name":"val KOREAN: Locale","description":"dev.kord.common.Locale.Companion.KOREAN","location":"common/dev.kord.common/-locale/-companion/-k-o-r-e-a-n.html","searchKeys":["KOREAN","val KOREAN: Locale","dev.kord.common.Locale.Companion.KOREAN"]},{"name":"val LITHUANIAN: Locale","description":"dev.kord.common.Locale.Companion.LITHUANIAN","location":"common/dev.kord.common/-locale/-companion/-l-i-t-h-u-a-n-i-a-n.html","searchKeys":["LITHUANIAN","val LITHUANIAN: Locale","dev.kord.common.Locale.Companion.LITHUANIAN"]},{"name":"val Locale.kLocale: Locale","description":"dev.kord.common.kLocale","location":"common/dev.kord.common/k-locale.html","searchKeys":["kLocale","val Locale.kLocale: Locale","dev.kord.common.kLocale"]},{"name":"val NORWEGIAN: Locale","description":"dev.kord.common.Locale.Companion.NORWEGIAN","location":"common/dev.kord.common/-locale/-companion/-n-o-r-w-e-g-i-a-n.html","searchKeys":["NORWEGIAN","val NORWEGIAN: Locale","dev.kord.common.Locale.Companion.NORWEGIAN"]},{"name":"val OptionalBoolean?.asNullable: Boolean?","description":"dev.kord.common.entity.optional.asNullable","location":"common/dev.kord.common.entity.optional/as-nullable.html","searchKeys":["asNullable","val OptionalBoolean?.asNullable: Boolean?","dev.kord.common.entity.optional.asNullable"]},{"name":"val OptionalBoolean?.value: Boolean?","description":"dev.kord.common.entity.optional.value","location":"common/dev.kord.common.entity.optional/value.html","searchKeys":["value","val OptionalBoolean?.value: Boolean?","dev.kord.common.entity.optional.value"]},{"name":"val OptionalInt?.asNullable: Int?","description":"dev.kord.common.entity.optional.asNullable","location":"common/dev.kord.common.entity.optional/as-nullable.html","searchKeys":["asNullable","val OptionalInt?.asNullable: Int?","dev.kord.common.entity.optional.asNullable"]},{"name":"val OptionalInt?.value: Int?","description":"dev.kord.common.entity.optional.value","location":"common/dev.kord.common.entity.optional/value.html","searchKeys":["value","val OptionalInt?.value: Int?","dev.kord.common.entity.optional.value"]},{"name":"val OptionalLong?.asNullable: Long?","description":"dev.kord.common.entity.optional.asNullable","location":"common/dev.kord.common.entity.optional/as-nullable.html","searchKeys":["asNullable","val OptionalLong?.asNullable: Long?","dev.kord.common.entity.optional.asNullable"]},{"name":"val OptionalLong?.value: Long?","description":"dev.kord.common.entity.optional.value","location":"common/dev.kord.common.entity.optional/value.html","searchKeys":["value","val OptionalLong?.value: Long?","dev.kord.common.entity.optional.value"]},{"name":"val OptionalSnowflake?.value: Snowflake?","description":"dev.kord.common.entity.optional.value","location":"common/dev.kord.common.entity.optional/value.html","searchKeys":["value","val OptionalSnowflake?.value: Snowflake?","dev.kord.common.entity.optional.value"]},{"name":"val POLISH: Locale","description":"dev.kord.common.Locale.Companion.POLISH","location":"common/dev.kord.common/-locale/-companion/-p-o-l-i-s-h.html","searchKeys":["POLISH","val POLISH: Locale","dev.kord.common.Locale.Companion.POLISH"]},{"name":"val PORTUGUESE_BRAZIL: Locale","description":"dev.kord.common.Locale.Companion.PORTUGUESE_BRAZIL","location":"common/dev.kord.common/-locale/-companion/-p-o-r-t-u-g-u-e-s-e_-b-r-a-z-i-l.html","searchKeys":["PORTUGUESE_BRAZIL","val PORTUGUESE_BRAZIL: Locale","dev.kord.common.Locale.Companion.PORTUGUESE_BRAZIL"]},{"name":"val ROMANIAN: Locale","description":"dev.kord.common.Locale.Companion.ROMANIAN","location":"common/dev.kord.common/-locale/-companion/-r-o-m-a-n-i-a-n.html","searchKeys":["ROMANIAN","val ROMANIAN: Locale","dev.kord.common.Locale.Companion.ROMANIAN"]},{"name":"val RUSSIAN: Locale","description":"dev.kord.common.Locale.Companion.RUSSIAN","location":"common/dev.kord.common/-locale/-companion/-r-u-s-s-i-a-n.html","searchKeys":["RUSSIAN","val RUSSIAN: Locale","dev.kord.common.Locale.Companion.RUSSIAN"]},{"name":"val SPANISH_SPAIN: Locale","description":"dev.kord.common.Locale.Companion.SPANISH_SPAIN","location":"common/dev.kord.common/-locale/-companion/-s-p-a-n-i-s-h_-s-p-a-i-n.html","searchKeys":["SPANISH_SPAIN","val SPANISH_SPAIN: Locale","dev.kord.common.Locale.Companion.SPANISH_SPAIN"]},{"name":"val SWEDISH: Locale","description":"dev.kord.common.Locale.Companion.SWEDISH","location":"common/dev.kord.common/-locale/-companion/-s-w-e-d-i-s-h.html","searchKeys":["SWEDISH","val SWEDISH: Locale","dev.kord.common.Locale.Companion.SWEDISH"]},{"name":"val THAI: Locale","description":"dev.kord.common.Locale.Companion.THAI","location":"common/dev.kord.common/-locale/-companion/-t-h-a-i.html","searchKeys":["THAI","val THAI: Locale","dev.kord.common.Locale.Companion.THAI"]},{"name":"val TURKISH: Locale","description":"dev.kord.common.Locale.Companion.TURKISH","location":"common/dev.kord.common/-locale/-companion/-t-u-r-k-i-s-h.html","searchKeys":["TURKISH","val TURKISH: Locale","dev.kord.common.Locale.Companion.TURKISH"]},{"name":"val UKRAINIAN: Locale","description":"dev.kord.common.Locale.Companion.UKRAINIAN","location":"common/dev.kord.common/-locale/-companion/-u-k-r-a-i-n-i-a-n.html","searchKeys":["UKRAINIAN","val UKRAINIAN: Locale","dev.kord.common.Locale.Companion.UKRAINIAN"]},{"name":"val USER_AGENT: String","description":"dev.kord.common.KordConstants.USER_AGENT","location":"common/dev.kord.common/-kord-constants/-u-s-e-r_-a-g-e-n-t.html","searchKeys":["USER_AGENT","val USER_AGENT: String","dev.kord.common.KordConstants.USER_AGENT"]},{"name":"val VIETNAMESE: Locale","description":"dev.kord.common.Locale.Companion.VIETNAMESE","location":"common/dev.kord.common/-locale/-companion/-v-i-e-t-n-a-m-e-s-e.html","searchKeys":["VIETNAMESE","val VIETNAMESE: Locale","dev.kord.common.Locale.Companion.VIETNAMESE"]},{"name":"val accentColor: Int? = null","description":"dev.kord.common.entity.DiscordUser.accentColor","location":"common/dev.kord.common.entity/-discord-user/accent-color.html","searchKeys":["accentColor","val accentColor: Int? = null","dev.kord.common.entity.DiscordUser.accentColor"]},{"name":"val account: DiscordIntegrationsAccount","description":"dev.kord.common.entity.DiscordIntegration.account","location":"common/dev.kord.common.entity/-discord-integration/account.html","searchKeys":["account","val account: DiscordIntegrationsAccount","dev.kord.common.entity.DiscordIntegration.account"]},{"name":"val account: DiscordIntegrationsAccount","description":"dev.kord.common.entity.DiscordPartialIntegration.account","location":"common/dev.kord.common.entity/-discord-partial-integration/account.html","searchKeys":["account","val account: DiscordIntegrationsAccount","dev.kord.common.entity.DiscordPartialIntegration.account"]},{"name":"val actionType: AuditLogEvent","description":"dev.kord.common.entity.DiscordAuditLogEntry.actionType","location":"common/dev.kord.common.entity/-discord-audit-log-entry/action-type.html","searchKeys":["actionType","val actionType: AuditLogEvent","dev.kord.common.entity.DiscordAuditLogEntry.actionType"]},{"name":"val actions: List<DiscordAutoModerationAction>","description":"dev.kord.common.entity.DiscordAutoModerationRule.actions","location":"common/dev.kord.common.entity/-discord-auto-moderation-rule/actions.html","searchKeys":["actions","val actions: List<DiscordAutoModerationAction>","dev.kord.common.entity.DiscordAutoModerationRule.actions"]},{"name":"val activities: List<DiscordActivity>","description":"dev.kord.common.entity.DiscordPresenceUpdate.activities","location":"common/dev.kord.common.entity/-discord-presence-update/activities.html","searchKeys":["activities","val activities: List<DiscordActivity>","dev.kord.common.entity.DiscordPresenceUpdate.activities"]},{"name":"val activity: Optional<MessageActivity>","description":"dev.kord.common.entity.DiscordMessage.activity","location":"common/dev.kord.common.entity/-discord-message/activity.html","searchKeys":["activity","val activity: Optional<MessageActivity>","dev.kord.common.entity.DiscordMessage.activity"]},{"name":"val activity: Optional<MessageActivity>","description":"dev.kord.common.entity.DiscordPartialMessage.activity","location":"common/dev.kord.common.entity/-discord-partial-message/activity.html","searchKeys":["activity","val activity: Optional<MessageActivity>","dev.kord.common.entity.DiscordPartialMessage.activity"]},{"name":"val afkChannelId: Snowflake?","description":"dev.kord.common.entity.DiscordGuild.afkChannelId","location":"common/dev.kord.common.entity/-discord-guild/afk-channel-id.html","searchKeys":["afkChannelId","val afkChannelId: Snowflake?","dev.kord.common.entity.DiscordGuild.afkChannelId"]},{"name":"val afkTimeout: DurationInSeconds","description":"dev.kord.common.entity.DiscordGuild.afkTimeout","location":"common/dev.kord.common.entity/-discord-guild/afk-timeout.html","searchKeys":["afkTimeout","val afkTimeout: DurationInSeconds","dev.kord.common.entity.DiscordGuild.afkTimeout"]},{"name":"val allow: Permissions","description":"dev.kord.common.entity.Overwrite.allow","location":"common/dev.kord.common.entity/-overwrite/allow.html","searchKeys":["allow","val allow: Permissions","dev.kord.common.entity.Overwrite.allow"]},{"name":"val allowList: Optional<List<String>>","description":"dev.kord.common.entity.DiscordAutoModerationRuleTriggerMetadata.allowList","location":"common/dev.kord.common.entity/-discord-auto-moderation-rule-trigger-metadata/allow-list.html","searchKeys":["allowList","val allowList: Optional<List<String>>","dev.kord.common.entity.DiscordAutoModerationRuleTriggerMetadata.allowList"]},{"name":"val animated: OptionalBoolean","description":"dev.kord.common.entity.DiscordActivityEmoji.animated","location":"common/dev.kord.common.entity/-discord-activity-emoji/animated.html","searchKeys":["animated","val animated: OptionalBoolean","dev.kord.common.entity.DiscordActivityEmoji.animated"]},{"name":"val animated: OptionalBoolean","description":"dev.kord.common.entity.DiscordEmoji.animated","location":"common/dev.kord.common.entity/-discord-emoji/animated.html","searchKeys":["animated","val animated: OptionalBoolean","dev.kord.common.entity.DiscordEmoji.animated"]},{"name":"val animated: OptionalBoolean","description":"dev.kord.common.entity.DiscordPartialEmoji.animated","location":"common/dev.kord.common.entity/-discord-partial-emoji/animated.html","searchKeys":["animated","val animated: OptionalBoolean","dev.kord.common.entity.DiscordPartialEmoji.animated"]},{"name":"val appPermissions: Optional<Permissions>","description":"dev.kord.common.entity.DiscordInteraction.appPermissions","location":"common/dev.kord.common.entity/-discord-interaction/app-permissions.html","searchKeys":["appPermissions","val appPermissions: Optional<Permissions>","dev.kord.common.entity.DiscordInteraction.appPermissions"]},{"name":"val application: IntegrationApplication","description":"dev.kord.common.entity.DiscordIntegration.application","location":"common/dev.kord.common.entity/-discord-integration/application.html","searchKeys":["application","val application: IntegrationApplication","dev.kord.common.entity.DiscordIntegration.application"]},{"name":"val application: Optional<MessageApplication>","description":"dev.kord.common.entity.DiscordMessage.application","location":"common/dev.kord.common.entity/-discord-message/application.html","searchKeys":["application","val application: Optional<MessageApplication>","dev.kord.common.entity.DiscordMessage.application"]},{"name":"val application: Optional<MessageApplication>","description":"dev.kord.common.entity.DiscordPartialMessage.application","location":"common/dev.kord.common.entity/-discord-partial-message/application.html","searchKeys":["application","val application: Optional<MessageApplication>","dev.kord.common.entity.DiscordPartialMessage.application"]},{"name":"val applicationCommands: List<DiscordApplicationCommand>","description":"dev.kord.common.entity.DiscordAuditLog.applicationCommands","location":"common/dev.kord.common.entity/-discord-audit-log/application-commands.html","searchKeys":["applicationCommands","val applicationCommands: List<DiscordApplicationCommand>","dev.kord.common.entity.DiscordAuditLog.applicationCommands"]},{"name":"val applicationId: OptionalSnowflake","description":"dev.kord.common.entity.AuditLogEntryOptionalInfo.applicationId","location":"common/dev.kord.common.entity/-audit-log-entry-optional-info/application-id.html","searchKeys":["applicationId","val applicationId: OptionalSnowflake","dev.kord.common.entity.AuditLogEntryOptionalInfo.applicationId"]},{"name":"val applicationId: OptionalSnowflake","description":"dev.kord.common.entity.DiscordActivity.applicationId","location":"common/dev.kord.common.entity/-discord-activity/application-id.html","searchKeys":["applicationId","val applicationId: OptionalSnowflake","dev.kord.common.entity.DiscordActivity.applicationId"]},{"name":"val applicationId: OptionalSnowflake","description":"dev.kord.common.entity.DiscordChannel.applicationId","location":"common/dev.kord.common.entity/-discord-channel/application-id.html","searchKeys":["applicationId","val applicationId: OptionalSnowflake","dev.kord.common.entity.DiscordChannel.applicationId"]},{"name":"val applicationId: OptionalSnowflake","description":"dev.kord.common.entity.DiscordMessage.applicationId","location":"common/dev.kord.common.entity/-discord-message/application-id.html","searchKeys":["applicationId","val applicationId: OptionalSnowflake","dev.kord.common.entity.DiscordMessage.applicationId"]},{"name":"val applicationId: Snowflake","description":"dev.kord.common.entity.DiscordApplicationCommand.applicationId","location":"common/dev.kord.common.entity/-discord-application-command/application-id.html","searchKeys":["applicationId","val applicationId: Snowflake","dev.kord.common.entity.DiscordApplicationCommand.applicationId"]},{"name":"val applicationId: Snowflake","description":"dev.kord.common.entity.DiscordGuildApplicationCommandPermissions.applicationId","location":"common/dev.kord.common.entity/-discord-guild-application-command-permissions/application-id.html","searchKeys":["applicationId","val applicationId: Snowflake","dev.kord.common.entity.DiscordGuildApplicationCommandPermissions.applicationId"]},{"name":"val applicationId: Snowflake","description":"dev.kord.common.entity.DiscordInteraction.applicationId","location":"common/dev.kord.common.entity/-discord-interaction/application-id.html","searchKeys":["applicationId","val applicationId: Snowflake","dev.kord.common.entity.DiscordInteraction.applicationId"]},{"name":"val applicationId: Snowflake?","description":"dev.kord.common.entity.DiscordGuild.applicationId","location":"common/dev.kord.common.entity/-discord-guild/application-id.html","searchKeys":["applicationId","val applicationId: Snowflake?","dev.kord.common.entity.DiscordGuild.applicationId"]},{"name":"val applicationId: Snowflake?","description":"dev.kord.common.entity.DiscordWebhook.applicationId","location":"common/dev.kord.common.entity/-discord-webhook/application-id.html","searchKeys":["applicationId","val applicationId: Snowflake?","dev.kord.common.entity.DiscordWebhook.applicationId"]},{"name":"val approximateMemberCount: Int","description":"dev.kord.common.entity.DiscordGuildPreview.approximateMemberCount","location":"common/dev.kord.common.entity/-discord-guild-preview/approximate-member-count.html","searchKeys":["approximateMemberCount","val approximateMemberCount: Int","dev.kord.common.entity.DiscordGuildPreview.approximateMemberCount"]},{"name":"val approximateMemberCount: OptionalInt","description":"dev.kord.common.entity.DiscordGuild.approximateMemberCount","location":"common/dev.kord.common.entity/-discord-guild/approximate-member-count.html","searchKeys":["approximateMemberCount","val approximateMemberCount: OptionalInt","dev.kord.common.entity.DiscordGuild.approximateMemberCount"]},{"name":"val approximatePresenceCount: Int","description":"dev.kord.common.entity.DiscordGuildPreview.approximatePresenceCount","location":"common/dev.kord.common.entity/-discord-guild-preview/approximate-presence-count.html","searchKeys":["approximatePresenceCount","val approximatePresenceCount: Int","dev.kord.common.entity.DiscordGuildPreview.approximatePresenceCount"]},{"name":"val approximatePresenceCount: OptionalInt","description":"dev.kord.common.entity.DiscordGuild.approximatePresenceCount","location":"common/dev.kord.common.entity/-discord-guild/approximate-presence-count.html","searchKeys":["approximatePresenceCount","val approximatePresenceCount: OptionalInt","dev.kord.common.entity.DiscordGuild.approximatePresenceCount"]},{"name":"val archiveTimestamp: Instant","description":"dev.kord.common.entity.DiscordThreadMetadata.archiveTimestamp","location":"common/dev.kord.common.entity/-discord-thread-metadata/archive-timestamp.html","searchKeys":["archiveTimestamp","val archiveTimestamp: Instant","dev.kord.common.entity.DiscordThreadMetadata.archiveTimestamp"]},{"name":"val archived: Boolean","description":"dev.kord.common.entity.DiscordThreadMetadata.archived","location":"common/dev.kord.common.entity/-discord-thread-metadata/archived.html","searchKeys":["archived","val archived: Boolean","dev.kord.common.entity.DiscordThreadMetadata.archived"]},{"name":"val asNullable: Boolean?","description":"dev.kord.common.entity.optional.OptionalBoolean.asNullable","location":"common/dev.kord.common.entity.optional/-optional-boolean/as-nullable.html","searchKeys":["asNullable","val asNullable: Boolean?","dev.kord.common.entity.optional.OptionalBoolean.asNullable"]},{"name":"val asNullable: Int?","description":"dev.kord.common.entity.optional.OptionalInt.asNullable","location":"common/dev.kord.common.entity.optional/-optional-int/as-nullable.html","searchKeys":["asNullable","val asNullable: Int?","dev.kord.common.entity.optional.OptionalInt.asNullable"]},{"name":"val asNullable: Long?","description":"dev.kord.common.entity.optional.OptionalLong.asNullable","location":"common/dev.kord.common.entity.optional/-optional-long/as-nullable.html","searchKeys":["asNullable","val asNullable: Long?","dev.kord.common.entity.optional.OptionalLong.asNullable"]},{"name":"val asOptional: Optional<Boolean>","description":"dev.kord.common.entity.optional.OptionalBoolean.asOptional","location":"common/dev.kord.common.entity.optional/-optional-boolean/as-optional.html","searchKeys":["asOptional","val asOptional: Optional<Boolean>","dev.kord.common.entity.optional.OptionalBoolean.asOptional"]},{"name":"val asOptional: Optional<Int>","description":"dev.kord.common.entity.optional.OptionalInt.asOptional","location":"common/dev.kord.common.entity.optional/-optional-int/as-optional.html","searchKeys":["asOptional","val asOptional: Optional<Int>","dev.kord.common.entity.optional.OptionalInt.asOptional"]},{"name":"val asOptional: Optional<Long>","description":"dev.kord.common.entity.optional.OptionalLong.asOptional","location":"common/dev.kord.common.entity.optional/-optional-long/as-optional.html","searchKeys":["asOptional","val asOptional: Optional<Long>","dev.kord.common.entity.optional.OptionalLong.asOptional"]},{"name":"val asOptional: Optional<Snowflake>","description":"dev.kord.common.entity.optional.OptionalSnowflake.asOptional","location":"common/dev.kord.common.entity.optional/-optional-snowflake/as-optional.html","searchKeys":["asOptional","val asOptional: Optional<Snowflake>","dev.kord.common.entity.optional.OptionalSnowflake.asOptional"]},{"name":"val assets: Optional<DiscordActivityAssets>","description":"dev.kord.common.entity.DiscordActivity.assets","location":"common/dev.kord.common.entity/-discord-activity/assets.html","searchKeys":["assets","val assets: Optional<DiscordActivityAssets>","dev.kord.common.entity.DiscordActivity.assets"]},{"name":"val attachments: List<DiscordAttachment>","description":"dev.kord.common.entity.DiscordMessage.attachments","location":"common/dev.kord.common.entity/-discord-message/attachments.html","searchKeys":["attachments","val attachments: List<DiscordAttachment>","dev.kord.common.entity.DiscordMessage.attachments"]},{"name":"val attachments: Optional<List<DiscordAttachment>>","description":"dev.kord.common.entity.DiscordPartialMessage.attachments","location":"common/dev.kord.common.entity/-discord-partial-message/attachments.html","searchKeys":["attachments","val attachments: Optional<List<DiscordAttachment>>","dev.kord.common.entity.DiscordPartialMessage.attachments"]},{"name":"val attachments: Optional<Map<Snowflake, DiscordAttachment>>","description":"dev.kord.common.entity.ResolvedObjects.attachments","location":"common/dev.kord.common.entity/-resolved-objects/attachments.html","searchKeys":["attachments","val attachments: Optional<Map<Snowflake, DiscordAttachment>>","dev.kord.common.entity.ResolvedObjects.attachments"]},{"name":"val auditLogEntries: List<DiscordAuditLogEntry>","description":"dev.kord.common.entity.DiscordAuditLog.auditLogEntries","location":"common/dev.kord.common.entity/-discord-audit-log/audit-log-entries.html","searchKeys":["auditLogEntries","val auditLogEntries: List<DiscordAuditLogEntry>","dev.kord.common.entity.DiscordAuditLog.auditLogEntries"]},{"name":"val author: DiscordUser","description":"dev.kord.common.entity.DiscordMessage.author","location":"common/dev.kord.common.entity/-discord-message/author.html","searchKeys":["author","val author: DiscordUser","dev.kord.common.entity.DiscordMessage.author"]},{"name":"val author: Optional<DiscordEmbed.Author>","description":"dev.kord.common.entity.DiscordEmbed.author","location":"common/dev.kord.common.entity/-discord-embed/author.html","searchKeys":["author","val author: Optional<DiscordEmbed.Author>","dev.kord.common.entity.DiscordEmbed.author"]},{"name":"val author: Optional<DiscordUser>","description":"dev.kord.common.entity.DiscordPartialMessage.author","location":"common/dev.kord.common.entity/-discord-partial-message/author.html","searchKeys":["author","val author: Optional<DiscordUser>","dev.kord.common.entity.DiscordPartialMessage.author"]},{"name":"val autoArchiveDuration: ArchiveDuration","description":"dev.kord.common.entity.DiscordThreadMetadata.autoArchiveDuration","location":"common/dev.kord.common.entity/-discord-thread-metadata/auto-archive-duration.html","searchKeys":["autoArchiveDuration","val autoArchiveDuration: ArchiveDuration","dev.kord.common.entity.DiscordThreadMetadata.autoArchiveDuration"]},{"name":"val autoModerationRuleName: Optional<String>","description":"dev.kord.common.entity.AuditLogEntryOptionalInfo.autoModerationRuleName","location":"common/dev.kord.common.entity/-audit-log-entry-optional-info/auto-moderation-rule-name.html","searchKeys":["autoModerationRuleName","val autoModerationRuleName: Optional<String>","dev.kord.common.entity.AuditLogEntryOptionalInfo.autoModerationRuleName"]},{"name":"val autoModerationRuleTriggerType: Optional<String>","description":"dev.kord.common.entity.AuditLogEntryOptionalInfo.autoModerationRuleTriggerType","location":"common/dev.kord.common.entity/-audit-log-entry-optional-info/auto-moderation-rule-trigger-type.html","searchKeys":["autoModerationRuleTriggerType","val autoModerationRuleTriggerType: Optional<String>","dev.kord.common.entity.AuditLogEntryOptionalInfo.autoModerationRuleTriggerType"]},{"name":"val autoModerationRules: List<DiscordAutoModerationRule>","description":"dev.kord.common.entity.DiscordAuditLog.autoModerationRules","location":"common/dev.kord.common.entity/-discord-audit-log/auto-moderation-rules.html","searchKeys":["autoModerationRules","val autoModerationRules: List<DiscordAutoModerationRule>","dev.kord.common.entity.DiscordAuditLog.autoModerationRules"]},{"name":"val autocomplete: OptionalBoolean","description":"dev.kord.common.entity.ApplicationCommandOption.autocomplete","location":"common/dev.kord.common.entity/-application-command-option/autocomplete.html","searchKeys":["autocomplete","val autocomplete: OptionalBoolean","dev.kord.common.entity.ApplicationCommandOption.autocomplete"]},{"name":"val available: OptionalBoolean","description":"dev.kord.common.entity.DiscordEmoji.available","location":"common/dev.kord.common.entity/-discord-emoji/available.html","searchKeys":["available","val available: OptionalBoolean","dev.kord.common.entity.DiscordEmoji.available"]},{"name":"val available: OptionalBoolean","description":"dev.kord.common.entity.DiscordMessageSticker.available","location":"common/dev.kord.common.entity/-discord-message-sticker/available.html","searchKeys":["available","val available: OptionalBoolean","dev.kord.common.entity.DiscordMessageSticker.available"]},{"name":"val avatar: Optional<String?>","description":"dev.kord.common.entity.DiscordAddedGuildMember.avatar","location":"common/dev.kord.common.entity/-discord-added-guild-member/avatar.html","searchKeys":["avatar","val avatar: Optional<String?>","dev.kord.common.entity.DiscordAddedGuildMember.avatar"]},{"name":"val avatar: Optional<String?>","description":"dev.kord.common.entity.DiscordGuildMember.avatar","location":"common/dev.kord.common.entity/-discord-guild-member/avatar.html","searchKeys":["avatar","val avatar: Optional<String?>","dev.kord.common.entity.DiscordGuildMember.avatar"]},{"name":"val avatar: Optional<String?>","description":"dev.kord.common.entity.DiscordInteractionGuildMember.avatar","location":"common/dev.kord.common.entity/-discord-interaction-guild-member/avatar.html","searchKeys":["avatar","val avatar: Optional<String?>","dev.kord.common.entity.DiscordInteractionGuildMember.avatar"]},{"name":"val avatar: Optional<String?>","description":"dev.kord.common.entity.DiscordUpdatedGuildMember.avatar","location":"common/dev.kord.common.entity/-discord-updated-guild-member/avatar.html","searchKeys":["avatar","val avatar: Optional<String?>","dev.kord.common.entity.DiscordUpdatedGuildMember.avatar"]},{"name":"val avatar: String?","description":"dev.kord.common.entity.DiscordOptionallyMemberUser.avatar","location":"common/dev.kord.common.entity/-discord-optionally-member-user/avatar.html","searchKeys":["avatar","val avatar: String?","dev.kord.common.entity.DiscordOptionallyMemberUser.avatar"]},{"name":"val avatar: String?","description":"dev.kord.common.entity.DiscordUser.avatar","location":"common/dev.kord.common.entity/-discord-user/avatar.html","searchKeys":["avatar","val avatar: String?","dev.kord.common.entity.DiscordUser.avatar"]},{"name":"val avatar: String?","description":"dev.kord.common.entity.DiscordWebhook.avatar","location":"common/dev.kord.common.entity/-discord-webhook/avatar.html","searchKeys":["avatar","val avatar: String?","dev.kord.common.entity.DiscordWebhook.avatar"]},{"name":"val banner: Optional<String?>","description":"dev.kord.common.entity.DiscordPartialGuild.banner","location":"common/dev.kord.common.entity/-discord-partial-guild/banner.html","searchKeys":["banner","val banner: Optional<String?>","dev.kord.common.entity.DiscordPartialGuild.banner"]},{"name":"val banner: String?","description":"dev.kord.common.entity.DiscordGuild.banner","location":"common/dev.kord.common.entity/-discord-guild/banner.html","searchKeys":["banner","val banner: String?","dev.kord.common.entity.DiscordGuild.banner"]},{"name":"val banner: String? = null","description":"dev.kord.common.entity.DiscordUser.banner","location":"common/dev.kord.common.entity/-discord-user/banner.html","searchKeys":["banner","val banner: String? = null","dev.kord.common.entity.DiscordUser.banner"]},{"name":"val bannerAssetId: Snowflake","description":"dev.kord.common.entity.DiscordStickerPack.bannerAssetId","location":"common/dev.kord.common.entity/-discord-sticker-pack/banner-asset-id.html","searchKeys":["bannerAssetId","val bannerAssetId: Snowflake","dev.kord.common.entity.DiscordStickerPack.bannerAssetId"]},{"name":"val binary: String","description":"dev.kord.common.DiscordBitSet.binary","location":"common/dev.kord.common/-discord-bit-set/binary.html","searchKeys":["binary","val binary: String","dev.kord.common.DiscordBitSet.binary"]},{"name":"val bitrate: OptionalInt","description":"dev.kord.common.entity.DiscordChannel.bitrate","location":"common/dev.kord.common.entity/-discord-channel/bitrate.html","searchKeys":["bitrate","val bitrate: OptionalInt","dev.kord.common.entity.DiscordChannel.bitrate"]},{"name":"val blue: Int","description":"dev.kord.common.Color.blue","location":"common/dev.kord.common/-color/blue.html","searchKeys":["blue","val blue: Int","dev.kord.common.Color.blue"]},{"name":"val bot: Optional<DiscordUser>","description":"dev.kord.common.entity.IntegrationApplication.bot","location":"common/dev.kord.common.entity/-integration-application/bot.html","searchKeys":["bot","val bot: Optional<DiscordUser>","dev.kord.common.entity.IntegrationApplication.bot"]},{"name":"val bot: OptionalBoolean","description":"dev.kord.common.entity.DiscordOptionallyMemberUser.bot","location":"common/dev.kord.common.entity/-discord-optionally-member-user/bot.html","searchKeys":["bot","val bot: OptionalBoolean","dev.kord.common.entity.DiscordOptionallyMemberUser.bot"]},{"name":"val bot: OptionalBoolean","description":"dev.kord.common.entity.DiscordUser.bot","location":"common/dev.kord.common.entity/-discord-user/bot.html","searchKeys":["bot","val bot: OptionalBoolean","dev.kord.common.entity.DiscordUser.bot"]},{"name":"val botId: OptionalSnowflake","description":"dev.kord.common.entity.DiscordRoleTags.botId","location":"common/dev.kord.common.entity/-discord-role-tags/bot-id.html","searchKeys":["botId","val botId: OptionalSnowflake","dev.kord.common.entity.DiscordRoleTags.botId"]},{"name":"val botPublic: Boolean","description":"dev.kord.common.entity.DiscordApplication.botPublic","location":"common/dev.kord.common.entity/-discord-application/bot-public.html","searchKeys":["botPublic","val botPublic: Boolean","dev.kord.common.entity.DiscordApplication.botPublic"]},{"name":"val botRequireCodeGrant: Boolean","description":"dev.kord.common.entity.DiscordApplication.botRequireCodeGrant","location":"common/dev.kord.common.entity/-discord-application/bot-require-code-grant.html","searchKeys":["botRequireCodeGrant","val botRequireCodeGrant: Boolean","dev.kord.common.entity.DiscordApplication.botRequireCodeGrant"]},{"name":"val buttons: Optional<List<String>>","description":"dev.kord.common.entity.DiscordActivity.buttons","location":"common/dev.kord.common.entity/-discord-activity/buttons.html","searchKeys":["buttons","val buttons: Optional<List<String>>","dev.kord.common.entity.DiscordActivity.buttons"]},{"name":"val changes: Optional<List<AuditLogChange<in Any?>>>","description":"dev.kord.common.entity.DiscordAuditLogEntry.changes","location":"common/dev.kord.common.entity/-discord-audit-log-entry/changes.html","searchKeys":["changes","val changes: Optional<List<AuditLogChange<in Any?>>>","dev.kord.common.entity.DiscordAuditLogEntry.changes"]},{"name":"val channelId: OptionalSnowflake","description":"dev.kord.common.entity.AuditLogEntryOptionalInfo.channelId","location":"common/dev.kord.common.entity/-audit-log-entry-optional-info/channel-id.html","searchKeys":["channelId","val channelId: OptionalSnowflake","dev.kord.common.entity.AuditLogEntryOptionalInfo.channelId"]},{"name":"val channelId: OptionalSnowflake","description":"dev.kord.common.entity.DiscordAutoModerationActionMetadata.channelId","location":"common/dev.kord.common.entity/-discord-auto-moderation-action-metadata/channel-id.html","searchKeys":["channelId","val channelId: OptionalSnowflake","dev.kord.common.entity.DiscordAutoModerationActionMetadata.channelId"]},{"name":"val channelId: OptionalSnowflake","description":"dev.kord.common.entity.DiscordMessageReference.channelId","location":"common/dev.kord.common.entity/-discord-message-reference/channel-id.html","searchKeys":["channelId","val channelId: OptionalSnowflake","dev.kord.common.entity.DiscordMessageReference.channelId"]},{"name":"val channelId: Snowflake","description":"dev.kord.common.entity.AllRemovedMessageReactions.channelId","location":"common/dev.kord.common.entity/-all-removed-message-reactions/channel-id.html","searchKeys":["channelId","val channelId: Snowflake","dev.kord.common.entity.AllRemovedMessageReactions.channelId"]},{"name":"val channelId: Snowflake","description":"dev.kord.common.entity.BulkDeleteData.channelId","location":"common/dev.kord.common.entity/-bulk-delete-data/channel-id.html","searchKeys":["channelId","val channelId: Snowflake","dev.kord.common.entity.BulkDeleteData.channelId"]},{"name":"val channelId: Snowflake","description":"dev.kord.common.entity.DeletedMessage.channelId","location":"common/dev.kord.common.entity/-deleted-message/channel-id.html","searchKeys":["channelId","val channelId: Snowflake","dev.kord.common.entity.DeletedMessage.channelId"]},{"name":"val channelId: Snowflake","description":"dev.kord.common.entity.DiscordInteraction.channelId","location":"common/dev.kord.common.entity/-discord-interaction/channel-id.html","searchKeys":["channelId","val channelId: Snowflake","dev.kord.common.entity.DiscordInteraction.channelId"]},{"name":"val channelId: Snowflake","description":"dev.kord.common.entity.DiscordMessage.channelId","location":"common/dev.kord.common.entity/-discord-message/channel-id.html","searchKeys":["channelId","val channelId: Snowflake","dev.kord.common.entity.DiscordMessage.channelId"]},{"name":"val channelId: Snowflake","description":"dev.kord.common.entity.DiscordPartialMessage.channelId","location":"common/dev.kord.common.entity/-discord-partial-message/channel-id.html","searchKeys":["channelId","val channelId: Snowflake","dev.kord.common.entity.DiscordPartialMessage.channelId"]},{"name":"val channelId: Snowflake","description":"dev.kord.common.entity.DiscordPinsUpdateData.channelId","location":"common/dev.kord.common.entity/-discord-pins-update-data/channel-id.html","searchKeys":["channelId","val channelId: Snowflake","dev.kord.common.entity.DiscordPinsUpdateData.channelId"]},{"name":"val channelId: Snowflake","description":"dev.kord.common.entity.DiscordStageInstance.channelId","location":"common/dev.kord.common.entity/-discord-stage-instance/channel-id.html","searchKeys":["channelId","val channelId: Snowflake","dev.kord.common.entity.DiscordStageInstance.channelId"]},{"name":"val channelId: Snowflake","description":"dev.kord.common.entity.DiscordTyping.channelId","location":"common/dev.kord.common.entity/-discord-typing/channel-id.html","searchKeys":["channelId","val channelId: Snowflake","dev.kord.common.entity.DiscordTyping.channelId"]},{"name":"val channelId: Snowflake","description":"dev.kord.common.entity.DiscordWebhook.channelId","location":"common/dev.kord.common.entity/-discord-webhook/channel-id.html","searchKeys":["channelId","val channelId: Snowflake","dev.kord.common.entity.DiscordWebhook.channelId"]},{"name":"val channelId: Snowflake","description":"dev.kord.common.entity.DiscordWebhooksUpdateData.channelId","location":"common/dev.kord.common.entity/-discord-webhooks-update-data/channel-id.html","searchKeys":["channelId","val channelId: Snowflake","dev.kord.common.entity.DiscordWebhooksUpdateData.channelId"]},{"name":"val channelId: Snowflake","description":"dev.kord.common.entity.DiscordWelcomeScreenChannel.channelId","location":"common/dev.kord.common.entity/-discord-welcome-screen-channel/channel-id.html","searchKeys":["channelId","val channelId: Snowflake","dev.kord.common.entity.DiscordWelcomeScreenChannel.channelId"]},{"name":"val channelId: Snowflake","description":"dev.kord.common.entity.MessageReactionAddData.channelId","location":"common/dev.kord.common.entity/-message-reaction-add-data/channel-id.html","searchKeys":["channelId","val channelId: Snowflake","dev.kord.common.entity.MessageReactionAddData.channelId"]},{"name":"val channelId: Snowflake","description":"dev.kord.common.entity.MessageReactionRemoveData.channelId","location":"common/dev.kord.common.entity/-message-reaction-remove-data/channel-id.html","searchKeys":["channelId","val channelId: Snowflake","dev.kord.common.entity.MessageReactionRemoveData.channelId"]},{"name":"val channelId: Snowflake?","description":"dev.kord.common.entity.DiscordGuildScheduledEvent.channelId","location":"common/dev.kord.common.entity/-discord-guild-scheduled-event/channel-id.html","searchKeys":["channelId","val channelId: Snowflake?","dev.kord.common.entity.DiscordGuildScheduledEvent.channelId"]},{"name":"val channelId: Snowflake?","description":"dev.kord.common.entity.DiscordGuildWidget.channelId","location":"common/dev.kord.common.entity/-discord-guild-widget/channel-id.html","searchKeys":["channelId","val channelId: Snowflake?","dev.kord.common.entity.DiscordGuildWidget.channelId"]},{"name":"val channelId: Snowflake?","description":"dev.kord.common.entity.DiscordVoiceState.channelId","location":"common/dev.kord.common.entity/-discord-voice-state/channel-id.html","searchKeys":["channelId","val channelId: Snowflake?","dev.kord.common.entity.DiscordVoiceState.channelId"]},{"name":"val channelTypes: Optional<List<ChannelType>>","description":"dev.kord.common.entity.ApplicationCommandOption.channelTypes","location":"common/dev.kord.common.entity/-application-command-option/channel-types.html","searchKeys":["channelTypes","val channelTypes: Optional<List<ChannelType>>","dev.kord.common.entity.ApplicationCommandOption.channelTypes"]},{"name":"val channels: Optional<List<DiscordChannel>>","description":"dev.kord.common.entity.DiscordGuild.channels","location":"common/dev.kord.common.entity/-discord-guild/channels.html","searchKeys":["channels","val channels: Optional<List<DiscordChannel>>","dev.kord.common.entity.DiscordGuild.channels"]},{"name":"val channels: Optional<Map<Snowflake, DiscordChannel>>","description":"dev.kord.common.entity.ResolvedObjects.channels","location":"common/dev.kord.common.entity/-resolved-objects/channels.html","searchKeys":["channels","val channels: Optional<Map<Snowflake, DiscordChannel>>","dev.kord.common.entity.ResolvedObjects.channels"]},{"name":"val choices: List<Choice<T>>","description":"dev.kord.common.entity.DiscordAutoComplete.choices","location":"common/dev.kord.common.entity/-discord-auto-complete/choices.html","searchKeys":["choices","val choices: List<Choice<T>>","dev.kord.common.entity.DiscordAutoComplete.choices"]},{"name":"val choices: Optional<List<Choice<Any?>>>","description":"dev.kord.common.entity.ApplicationCommandOption.choices","location":"common/dev.kord.common.entity/-application-command-option/choices.html","searchKeys":["choices","val choices: Optional<List<Choice<Any?>>>","dev.kord.common.entity.ApplicationCommandOption.choices"]},{"name":"val clientStatus: DiscordClientStatus","description":"dev.kord.common.entity.DiscordPresenceUpdate.clientStatus","location":"common/dev.kord.common.entity/-discord-presence-update/client-status.html","searchKeys":["clientStatus","val clientStatus: DiscordClientStatus","dev.kord.common.entity.DiscordPresenceUpdate.clientStatus"]},{"name":"val code: DiscordBitSet","description":"dev.kord.common.entity.Permission.code","location":"common/dev.kord.common.entity/-permission/code.html","searchKeys":["code","val code: DiscordBitSet","dev.kord.common.entity.Permission.code"]},{"name":"val code: DiscordBitSet","description":"dev.kord.common.entity.Permissions.code","location":"common/dev.kord.common.entity/-permissions/code.html","searchKeys":["code","val code: DiscordBitSet","dev.kord.common.entity.Permissions.code"]},{"name":"val code: Int","description":"dev.kord.common.entity.ActivityType.code","location":"common/dev.kord.common.entity/-activity-type/code.html","searchKeys":["code","val code: Int","dev.kord.common.entity.ActivityType.code"]},{"name":"val code: Int","description":"dev.kord.common.entity.ApplicationFlag.code","location":"common/dev.kord.common.entity/-application-flag/code.html","searchKeys":["code","val code: Int","dev.kord.common.entity.ApplicationFlag.code"]},{"name":"val code: Int","description":"dev.kord.common.entity.ApplicationFlags.code","location":"common/dev.kord.common.entity/-application-flags/code.html","searchKeys":["code","val code: Int","dev.kord.common.entity.ApplicationFlags.code"]},{"name":"val code: Int","description":"dev.kord.common.entity.MessageFlag.code","location":"common/dev.kord.common.entity/-message-flag/code.html","searchKeys":["code","val code: Int","dev.kord.common.entity.MessageFlag.code"]},{"name":"val code: Int","description":"dev.kord.common.entity.MessageFlags.code","location":"common/dev.kord.common.entity/-message-flags/code.html","searchKeys":["code","val code: Int","dev.kord.common.entity.MessageFlags.code"]},{"name":"val code: Int","description":"dev.kord.common.entity.MessageType.code","location":"common/dev.kord.common.entity/-message-type/code.html","searchKeys":["code","val code: Int","dev.kord.common.entity.MessageType.code"]},{"name":"val code: Int","description":"dev.kord.common.entity.SystemChannelFlag.code","location":"common/dev.kord.common.entity/-system-channel-flag/code.html","searchKeys":["code","val code: Int","dev.kord.common.entity.SystemChannelFlag.code"]},{"name":"val code: Int","description":"dev.kord.common.entity.SystemChannelFlags.code","location":"common/dev.kord.common.entity/-system-channel-flags/code.html","searchKeys":["code","val code: Int","dev.kord.common.entity.SystemChannelFlags.code"]},{"name":"val code: Int","description":"dev.kord.common.entity.UserFlag.code","location":"common/dev.kord.common.entity/-user-flag/code.html","searchKeys":["code","val code: Int","dev.kord.common.entity.UserFlag.code"]},{"name":"val code: Int","description":"dev.kord.common.entity.UserFlags.code","location":"common/dev.kord.common.entity/-user-flags/code.html","searchKeys":["code","val code: Int","dev.kord.common.entity.UserFlags.code"]},{"name":"val code: String","description":"dev.kord.common.entity.DiscordTemplate.code","location":"common/dev.kord.common.entity/-discord-template/code.html","searchKeys":["code","val code: String","dev.kord.common.entity.DiscordTemplate.code"]},{"name":"val code: String?","description":"dev.kord.common.entity.DiscordPartialInvite.code","location":"common/dev.kord.common.entity/-discord-partial-invite/code.html","searchKeys":["code","val code: String?","dev.kord.common.entity.DiscordPartialInvite.code"]},{"name":"val color: Int","description":"dev.kord.common.entity.DiscordRole.color","location":"common/dev.kord.common.entity/-discord-role/color.html","searchKeys":["color","val color: Int","dev.kord.common.entity.DiscordRole.color"]},{"name":"val color: Int? = null","description":"dev.kord.common.entity.DiscordAuditLogRoleChange.color","location":"common/dev.kord.common.entity/-discord-audit-log-role-change/color.html","searchKeys":["color","val color: Int? = null","dev.kord.common.entity.DiscordAuditLogRoleChange.color"]},{"name":"val color: OptionalInt","description":"dev.kord.common.entity.DiscordEmbed.color","location":"common/dev.kord.common.entity/-discord-embed/color.html","searchKeys":["color","val color: OptionalInt","dev.kord.common.entity.DiscordEmbed.color"]},{"name":"val color: OptionalInt","description":"dev.kord.common.entity.DiscordPartialRole.color","location":"common/dev.kord.common.entity/-discord-partial-role/color.html","searchKeys":["color","val color: OptionalInt","dev.kord.common.entity.DiscordPartialRole.color"]},{"name":"val communicationDisabledUntil: Optional<Instant?>","description":"dev.kord.common.entity.DiscordAddedGuildMember.communicationDisabledUntil","location":"common/dev.kord.common.entity/-discord-added-guild-member/communication-disabled-until.html","searchKeys":["communicationDisabledUntil","val communicationDisabledUntil: Optional<Instant?>","dev.kord.common.entity.DiscordAddedGuildMember.communicationDisabledUntil"]},{"name":"val communicationDisabledUntil: Optional<Instant?>","description":"dev.kord.common.entity.DiscordGuildMember.communicationDisabledUntil","location":"common/dev.kord.common.entity/-discord-guild-member/communication-disabled-until.html","searchKeys":["communicationDisabledUntil","val communicationDisabledUntil: Optional<Instant?>","dev.kord.common.entity.DiscordGuildMember.communicationDisabledUntil"]},{"name":"val communicationDisabledUntil: Optional<Instant?>","description":"dev.kord.common.entity.DiscordInteractionGuildMember.communicationDisabledUntil","location":"common/dev.kord.common.entity/-discord-interaction-guild-member/communication-disabled-until.html","searchKeys":["communicationDisabledUntil","val communicationDisabledUntil: Optional<Instant?>","dev.kord.common.entity.DiscordInteractionGuildMember.communicationDisabledUntil"]},{"name":"val communicationDisabledUntil: Optional<Instant?>","description":"dev.kord.common.entity.DiscordUpdatedGuildMember.communicationDisabledUntil","location":"common/dev.kord.common.entity/-discord-updated-guild-member/communication-disabled-until.html","searchKeys":["communicationDisabledUntil","val communicationDisabledUntil: Optional<Instant?>","dev.kord.common.entity.DiscordUpdatedGuildMember.communicationDisabledUntil"]},{"name":"val componentType: Optional<ComponentType>","description":"dev.kord.common.entity.InteractionCallbackData.componentType","location":"common/dev.kord.common.entity/-interaction-callback-data/component-type.html","searchKeys":["componentType","val componentType: Optional<ComponentType>","dev.kord.common.entity.InteractionCallbackData.componentType"]},{"name":"val components: List<DiscordComponent>","description":"dev.kord.common.entity.DiscordModal.components","location":"common/dev.kord.common.entity/-discord-modal/components.html","searchKeys":["components","val components: List<DiscordComponent>","dev.kord.common.entity.DiscordModal.components"]},{"name":"val components: Optional<List<DiscordComponent>>","description":"dev.kord.common.entity.DiscordMessage.components","location":"common/dev.kord.common.entity/-discord-message/components.html","searchKeys":["components","val components: Optional<List<DiscordComponent>>","dev.kord.common.entity.DiscordMessage.components"]},{"name":"val components: Optional<List<DiscordComponent>>","description":"dev.kord.common.entity.InteractionCallbackData.components","location":"common/dev.kord.common.entity/-interaction-callback-data/components.html","searchKeys":["components","val components: Optional<List<DiscordComponent>>","dev.kord.common.entity.InteractionCallbackData.components"]},{"name":"val content: Optional<String>","description":"dev.kord.common.entity.DiscordPartialMessage.content","location":"common/dev.kord.common.entity/-discord-partial-message/content.html","searchKeys":["content","val content: Optional<String>","dev.kord.common.entity.DiscordPartialMessage.content"]},{"name":"val content: String","description":"dev.kord.common.entity.DiscordMessage.content","location":"common/dev.kord.common.entity/-discord-message/content.html","searchKeys":["content","val content: String","dev.kord.common.entity.DiscordMessage.content"]},{"name":"val contentType: Optional<String>","description":"dev.kord.common.entity.DiscordAttachment.contentType","location":"common/dev.kord.common.entity/-discord-attachment/content-type.html","searchKeys":["contentType","val contentType: Optional<String>","dev.kord.common.entity.DiscordAttachment.contentType"]},{"name":"val count: Int","description":"dev.kord.common.entity.DiscordShard.count","location":"common/dev.kord.common.entity/-discord-shard/count.html","searchKeys":["count","val count: Int","dev.kord.common.entity.DiscordShard.count"]},{"name":"val count: Int","description":"dev.kord.common.entity.Reaction.count","location":"common/dev.kord.common.entity/-reaction/count.html","searchKeys":["count","val count: Int","dev.kord.common.entity.Reaction.count"]},{"name":"val count: Optional<String>","description":"dev.kord.common.entity.AuditLogEntryOptionalInfo.count","location":"common/dev.kord.common.entity/-audit-log-entry-optional-info/count.html","searchKeys":["count","val count: Optional<String>","dev.kord.common.entity.AuditLogEntryOptionalInfo.count"]},{"name":"val country: String? = null","description":"dev.kord.common.Locale.country","location":"common/dev.kord.common/-locale/country.html","searchKeys":["country","val country: String? = null","dev.kord.common.Locale.country"]},{"name":"val coverImage: Optional<String>","description":"dev.kord.common.entity.MessageApplication.coverImage","location":"common/dev.kord.common.entity/-message-application/cover-image.html","searchKeys":["coverImage","val coverImage: Optional<String>","dev.kord.common.entity.MessageApplication.coverImage"]},{"name":"val coverStickerId: OptionalSnowflake","description":"dev.kord.common.entity.DiscordStickerPack.coverStickerId","location":"common/dev.kord.common.entity/-discord-sticker-pack/cover-sticker-id.html","searchKeys":["coverStickerId","val coverStickerId: OptionalSnowflake","dev.kord.common.entity.DiscordStickerPack.coverStickerId"]},{"name":"val createTimestamp: Optional<Instant?>","description":"dev.kord.common.entity.DiscordThreadMetadata.createTimestamp","location":"common/dev.kord.common.entity/-discord-thread-metadata/create-timestamp.html","searchKeys":["createTimestamp","val createTimestamp: Optional<Instant?>","dev.kord.common.entity.DiscordThreadMetadata.createTimestamp"]},{"name":"val createdAt: Instant","description":"dev.kord.common.entity.DiscordActivity.createdAt","location":"common/dev.kord.common.entity/-discord-activity/created-at.html","searchKeys":["createdAt","val createdAt: Instant","dev.kord.common.entity.DiscordActivity.createdAt"]},{"name":"val createdAt: Instant","description":"dev.kord.common.entity.DiscordInviteWithMetadata.createdAt","location":"common/dev.kord.common.entity/-discord-invite-with-metadata/created-at.html","searchKeys":["createdAt","val createdAt: Instant","dev.kord.common.entity.DiscordInviteWithMetadata.createdAt"]},{"name":"val createdAt: Instant","description":"dev.kord.common.entity.DiscordTemplate.createdAt","location":"common/dev.kord.common.entity/-discord-template/created-at.html","searchKeys":["createdAt","val createdAt: Instant","dev.kord.common.entity.DiscordTemplate.createdAt"]},{"name":"val creator: DiscordUser","description":"dev.kord.common.entity.DiscordTemplate.creator","location":"common/dev.kord.common.entity/-discord-template/creator.html","searchKeys":["creator","val creator: DiscordUser","dev.kord.common.entity.DiscordTemplate.creator"]},{"name":"val creator: Optional<DiscordUser>","description":"dev.kord.common.entity.DiscordGuildScheduledEvent.creator","location":"common/dev.kord.common.entity/-discord-guild-scheduled-event/creator.html","searchKeys":["creator","val creator: Optional<DiscordUser>","dev.kord.common.entity.DiscordGuildScheduledEvent.creator"]},{"name":"val creatorId: OptionalSnowflake?","description":"dev.kord.common.entity.DiscordGuildScheduledEvent.creatorId","location":"common/dev.kord.common.entity/-discord-guild-scheduled-event/creator-id.html","searchKeys":["creatorId","val creatorId: OptionalSnowflake?","dev.kord.common.entity.DiscordGuildScheduledEvent.creatorId"]},{"name":"val creatorId: Snowflake","description":"dev.kord.common.entity.DiscordAutoModerationRule.creatorId","location":"common/dev.kord.common.entity/-discord-auto-moderation-rule/creator-id.html","searchKeys":["creatorId","val creatorId: Snowflake","dev.kord.common.entity.DiscordAutoModerationRule.creatorId"]},{"name":"val creatorId: Snowflake","description":"dev.kord.common.entity.DiscordTemplate.creatorId","location":"common/dev.kord.common.entity/-discord-template/creator-id.html","searchKeys":["creatorId","val creatorId: Snowflake","dev.kord.common.entity.DiscordTemplate.creatorId"]},{"name":"val current: Int","description":"dev.kord.common.entity.DiscordActivityPartySize.current","location":"common/dev.kord.common.entity/-discord-activity-party-size/current.html","searchKeys":["current","val current: Int","dev.kord.common.entity.DiscordActivityPartySize.current"]},{"name":"val custom: Boolean","description":"dev.kord.common.entity.DiscordVoiceRegion.custom","location":"common/dev.kord.common.entity/-discord-voice-region/custom.html","searchKeys":["custom","val custom: Boolean","dev.kord.common.entity.DiscordVoiceRegion.custom"]},{"name":"val customId: Optional<String>","description":"dev.kord.common.entity.InteractionCallbackData.customId","location":"common/dev.kord.common.entity/-interaction-callback-data/custom-id.html","searchKeys":["customId","val customId: Optional<String>","dev.kord.common.entity.InteractionCallbackData.customId"]},{"name":"val customId: String","description":"dev.kord.common.entity.DiscordModal.customId","location":"common/dev.kord.common.entity/-discord-modal/custom-id.html","searchKeys":["customId","val customId: String","dev.kord.common.entity.DiscordModal.customId"]},{"name":"val data: InteractionCallbackData","description":"dev.kord.common.entity.DiscordInteraction.data","location":"common/dev.kord.common.entity/-discord-interaction/data.html","searchKeys":["data","val data: InteractionCallbackData","dev.kord.common.entity.DiscordInteraction.data"]},{"name":"val deaf: Boolean","description":"dev.kord.common.entity.DiscordAddedGuildMember.deaf","location":"common/dev.kord.common.entity/-discord-added-guild-member/deaf.html","searchKeys":["deaf","val deaf: Boolean","dev.kord.common.entity.DiscordAddedGuildMember.deaf"]},{"name":"val deaf: Boolean","description":"dev.kord.common.entity.DiscordVoiceState.deaf","location":"common/dev.kord.common.entity/-discord-voice-state/deaf.html","searchKeys":["deaf","val deaf: Boolean","dev.kord.common.entity.DiscordVoiceState.deaf"]},{"name":"val deaf: OptionalBoolean","description":"dev.kord.common.entity.DiscordGuildMember.deaf","location":"common/dev.kord.common.entity/-discord-guild-member/deaf.html","searchKeys":["deaf","val deaf: OptionalBoolean","dev.kord.common.entity.DiscordGuildMember.deaf"]},{"name":"val default: OptionalBoolean","description":"dev.kord.common.entity.ApplicationCommandOption.default","location":"common/dev.kord.common.entity/-application-command-option/default.html","searchKeys":["default","val default: OptionalBoolean","dev.kord.common.entity.ApplicationCommandOption.default"]},{"name":"val default: OptionalBoolean","description":"dev.kord.common.entity.DiscordSelectOption.default","location":"common/dev.kord.common.entity/-discord-select-option/default.html","searchKeys":["default","val default: OptionalBoolean","dev.kord.common.entity.DiscordSelectOption.default"]},{"name":"val defaultAutoArchiveDuration: Optional<ArchiveDuration>","description":"dev.kord.common.entity.DiscordChannel.defaultAutoArchiveDuration","location":"common/dev.kord.common.entity/-discord-channel/default-auto-archive-duration.html","searchKeys":["defaultAutoArchiveDuration","val defaultAutoArchiveDuration: Optional<ArchiveDuration>","dev.kord.common.entity.DiscordChannel.defaultAutoArchiveDuration"]},{"name":"val defaultMemberPermissions: Permissions?","description":"dev.kord.common.entity.DiscordApplicationCommand.defaultMemberPermissions","location":"common/dev.kord.common.entity/-discord-application-command/default-member-permissions.html","searchKeys":["defaultMemberPermissions","val defaultMemberPermissions: Permissions?","dev.kord.common.entity.DiscordApplicationCommand.defaultMemberPermissions"]},{"name":"val defaultMessageNotifications: DefaultMessageNotificationLevel","description":"dev.kord.common.entity.DiscordGuild.defaultMessageNotifications","location":"common/dev.kord.common.entity/-discord-guild/default-message-notifications.html","searchKeys":["defaultMessageNotifications","val defaultMessageNotifications: DefaultMessageNotificationLevel","dev.kord.common.entity.DiscordGuild.defaultMessageNotifications"]},{"name":"val defaultPermission: OptionalBoolean?","description":"dev.kord.common.entity.DiscordApplicationCommand.defaultPermission","location":"common/dev.kord.common.entity/-discord-application-command/default-permission.html","searchKeys":["defaultPermission","val defaultPermission: OptionalBoolean?","dev.kord.common.entity.DiscordApplicationCommand.defaultPermission"]},{"name":"val deleteMemberDays: Optional<String>","description":"dev.kord.common.entity.AuditLogEntryOptionalInfo.deleteMemberDays","location":"common/dev.kord.common.entity/-audit-log-entry-optional-info/delete-member-days.html","searchKeys":["deleteMemberDays","val deleteMemberDays: Optional<String>","dev.kord.common.entity.AuditLogEntryOptionalInfo.deleteMemberDays"]},{"name":"val deny: Permissions","description":"dev.kord.common.entity.Overwrite.deny","location":"common/dev.kord.common.entity/-overwrite/deny.html","searchKeys":["deny","val deny: Permissions","dev.kord.common.entity.Overwrite.deny"]},{"name":"val deprecated: Boolean","description":"dev.kord.common.entity.DiscordVoiceRegion.deprecated","location":"common/dev.kord.common.entity/-discord-voice-region/deprecated.html","searchKeys":["deprecated","val deprecated: Boolean","dev.kord.common.entity.DiscordVoiceRegion.deprecated"]},{"name":"val description: Optional<String>","description":"dev.kord.common.entity.DiscordAttachment.description","location":"common/dev.kord.common.entity/-discord-attachment/description.html","searchKeys":["description","val description: Optional<String>","dev.kord.common.entity.DiscordAttachment.description"]},{"name":"val description: Optional<String>","description":"dev.kord.common.entity.DiscordEmbed.description","location":"common/dev.kord.common.entity/-discord-embed/description.html","searchKeys":["description","val description: Optional<String>","dev.kord.common.entity.DiscordEmbed.description"]},{"name":"val description: Optional<String>","description":"dev.kord.common.entity.DiscordSelectOption.description","location":"common/dev.kord.common.entity/-discord-select-option/description.html","searchKeys":["description","val description: Optional<String>","dev.kord.common.entity.DiscordSelectOption.description"]},{"name":"val description: Optional<String?>","description":"dev.kord.common.entity.DiscordGuildScheduledEvent.description","location":"common/dev.kord.common.entity/-discord-guild-scheduled-event/description.html","searchKeys":["description","val description: Optional<String?>","dev.kord.common.entity.DiscordGuildScheduledEvent.description"]},{"name":"val description: Optional<String?>","description":"dev.kord.common.entity.DiscordPartialGuild.description","location":"common/dev.kord.common.entity/-discord-partial-guild/description.html","searchKeys":["description","val description: Optional<String?>","dev.kord.common.entity.DiscordPartialGuild.description"]},{"name":"val description: String","description":"dev.kord.common.entity.ApplicationCommandOption.description","location":"common/dev.kord.common.entity/-application-command-option/description.html","searchKeys":["description","val description: String","dev.kord.common.entity.ApplicationCommandOption.description"]},{"name":"val description: String","description":"dev.kord.common.entity.DiscordStickerPack.description","location":"common/dev.kord.common.entity/-discord-sticker-pack/description.html","searchKeys":["description","val description: String","dev.kord.common.entity.DiscordStickerPack.description"]},{"name":"val description: String","description":"dev.kord.common.entity.DiscordWelcomeScreenChannel.description","location":"common/dev.kord.common.entity/-discord-welcome-screen-channel/description.html","searchKeys":["description","val description: String","dev.kord.common.entity.DiscordWelcomeScreenChannel.description"]},{"name":"val description: String","description":"dev.kord.common.entity.IntegrationApplication.description","location":"common/dev.kord.common.entity/-integration-application/description.html","searchKeys":["description","val description: String","dev.kord.common.entity.IntegrationApplication.description"]},{"name":"val description: String","description":"dev.kord.common.entity.MessageApplication.description","location":"common/dev.kord.common.entity/-message-application/description.html","searchKeys":["description","val description: String","dev.kord.common.entity.MessageApplication.description"]},{"name":"val description: String?","description":"dev.kord.common.entity.DiscordApplicationCommand.description","location":"common/dev.kord.common.entity/-discord-application-command/description.html","searchKeys":["description","val description: String?","dev.kord.common.entity.DiscordApplicationCommand.description"]},{"name":"val description: String?","description":"dev.kord.common.entity.DiscordGuild.description","location":"common/dev.kord.common.entity/-discord-guild/description.html","searchKeys":["description","val description: String?","dev.kord.common.entity.DiscordGuild.description"]},{"name":"val description: String?","description":"dev.kord.common.entity.DiscordGuildPreview.description","location":"common/dev.kord.common.entity/-discord-guild-preview/description.html","searchKeys":["description","val description: String?","dev.kord.common.entity.DiscordGuildPreview.description"]},{"name":"val description: String?","description":"dev.kord.common.entity.DiscordMessageSticker.description","location":"common/dev.kord.common.entity/-discord-message-sticker/description.html","searchKeys":["description","val description: String?","dev.kord.common.entity.DiscordMessageSticker.description"]},{"name":"val description: String?","description":"dev.kord.common.entity.DiscordTemplate.description","location":"common/dev.kord.common.entity/-discord-template/description.html","searchKeys":["description","val description: String?","dev.kord.common.entity.DiscordTemplate.description"]},{"name":"val description: String?","description":"dev.kord.common.entity.DiscordWelcomeScreen.description","location":"common/dev.kord.common.entity/-discord-welcome-screen/description.html","searchKeys":["description","val description: String?","dev.kord.common.entity.DiscordWelcomeScreen.description"]},{"name":"val descriptionLocalizations: Optional<Map<Locale, String>?>","description":"dev.kord.common.entity.ApplicationCommandOption.descriptionLocalizations","location":"common/dev.kord.common.entity/-application-command-option/description-localizations.html","searchKeys":["descriptionLocalizations","val descriptionLocalizations: Optional<Map<Locale, String>?>","dev.kord.common.entity.ApplicationCommandOption.descriptionLocalizations"]},{"name":"val descriptionLocalizations: Optional<Map<Locale, String>?>","description":"dev.kord.common.entity.DiscordApplicationCommand.descriptionLocalizations","location":"common/dev.kord.common.entity/-discord-application-command/description-localizations.html","searchKeys":["descriptionLocalizations","val descriptionLocalizations: Optional<Map<Locale, String>?>","dev.kord.common.entity.DiscordApplicationCommand.descriptionLocalizations"]},{"name":"val desktop: Optional<PresenceStatus>","description":"dev.kord.common.entity.DiscordClientStatus.desktop","location":"common/dev.kord.common.entity/-discord-client-status/desktop.html","searchKeys":["desktop","val desktop: Optional<PresenceStatus>","dev.kord.common.entity.DiscordClientStatus.desktop"]},{"name":"val details: JsonObject","description":"dev.kord.common.entity.DiscordPresenceUser.details","location":"common/dev.kord.common.entity/-discord-presence-user/details.html","searchKeys":["details","val details: JsonObject","dev.kord.common.entity.DiscordPresenceUser.details"]},{"name":"val details: Optional<String?>","description":"dev.kord.common.entity.DiscordActivity.details","location":"common/dev.kord.common.entity/-discord-activity/details.html","searchKeys":["details","val details: Optional<String?>","dev.kord.common.entity.DiscordActivity.details"]},{"name":"val discordBoolean: Boolean","description":"dev.kord.common.entity.optional.OptionalBoolean.discordBoolean","location":"common/dev.kord.common.entity.optional/-optional-boolean/discord-boolean.html","searchKeys":["discordBoolean","val discordBoolean: Boolean","dev.kord.common.entity.optional.OptionalBoolean.discordBoolean"]},{"name":"val discordEpoch: Instant","description":"dev.kord.common.entity.Snowflake.Companion.discordEpoch","location":"common/dev.kord.common.entity/-snowflake/-companion/discord-epoch.html","searchKeys":["discordEpoch","val discordEpoch: Instant","dev.kord.common.entity.Snowflake.Companion.discordEpoch"]},{"name":"val discoverableDisabled: Boolean","description":"dev.kord.common.entity.DiscordStageInstance.discoverableDisabled","location":"common/dev.kord.common.entity/-discord-stage-instance/discoverable-disabled.html","searchKeys":["discoverableDisabled","val discoverableDisabled: Boolean","dev.kord.common.entity.DiscordStageInstance.discoverableDisabled"]},{"name":"val discoverySplash: Optional<String?>","description":"dev.kord.common.entity.DiscordGuild.discoverySplash","location":"common/dev.kord.common.entity/-discord-guild/discovery-splash.html","searchKeys":["discoverySplash","val discoverySplash: Optional<String?>","dev.kord.common.entity.DiscordGuild.discoverySplash"]},{"name":"val discoverySplash: String?","description":"dev.kord.common.entity.DiscordGuildPreview.discoverySplash","location":"common/dev.kord.common.entity/-discord-guild-preview/discovery-splash.html","searchKeys":["discoverySplash","val discoverySplash: String?","dev.kord.common.entity.DiscordGuildPreview.discoverySplash"]},{"name":"val discriminator: String","description":"dev.kord.common.entity.DiscordOptionallyMemberUser.discriminator","location":"common/dev.kord.common.entity/-discord-optionally-member-user/discriminator.html","searchKeys":["discriminator","val discriminator: String","dev.kord.common.entity.DiscordOptionallyMemberUser.discriminator"]},{"name":"val discriminator: String","description":"dev.kord.common.entity.DiscordUser.discriminator","location":"common/dev.kord.common.entity/-discord-user/discriminator.html","searchKeys":["discriminator","val discriminator: String","dev.kord.common.entity.DiscordUser.discriminator"]},{"name":"val dmPermission: OptionalBoolean","description":"dev.kord.common.entity.DiscordApplicationCommand.dmPermission","location":"common/dev.kord.common.entity/-discord-application-command/dm-permission.html","searchKeys":["dmPermission","val dmPermission: OptionalBoolean","dev.kord.common.entity.DiscordApplicationCommand.dmPermission"]},{"name":"val duration: Duration","description":"dev.kord.common.entity.ArchiveDuration.duration","location":"common/dev.kord.common.entity/-archive-duration/duration.html","searchKeys":["duration","val duration: Duration","dev.kord.common.entity.ArchiveDuration.duration"]},{"name":"val durationSeconds: Optional<DurationInSeconds>","description":"dev.kord.common.entity.DiscordAutoModerationActionMetadata.durationSeconds","location":"common/dev.kord.common.entity/-discord-auto-moderation-action-metadata/duration-seconds.html","searchKeys":["durationSeconds","val durationSeconds: Optional<DurationInSeconds>","dev.kord.common.entity.DiscordAutoModerationActionMetadata.durationSeconds"]},{"name":"val editedTimestamp: Instant?","description":"dev.kord.common.entity.DiscordMessage.editedTimestamp","location":"common/dev.kord.common.entity/-discord-message/edited-timestamp.html","searchKeys":["editedTimestamp","val editedTimestamp: Instant?","dev.kord.common.entity.DiscordMessage.editedTimestamp"]},{"name":"val editedTimestamp: Optional<Instant?>","description":"dev.kord.common.entity.DiscordPartialMessage.editedTimestamp","location":"common/dev.kord.common.entity/-discord-partial-message/edited-timestamp.html","searchKeys":["editedTimestamp","val editedTimestamp: Optional<Instant?>","dev.kord.common.entity.DiscordPartialMessage.editedTimestamp"]},{"name":"val email: Optional<String?>","description":"dev.kord.common.entity.DiscordOptionallyMemberUser.email","location":"common/dev.kord.common.entity/-discord-optionally-member-user/email.html","searchKeys":["email","val email: Optional<String?>","dev.kord.common.entity.DiscordOptionallyMemberUser.email"]},{"name":"val email: Optional<String?>","description":"dev.kord.common.entity.DiscordUser.email","location":"common/dev.kord.common.entity/-discord-user/email.html","searchKeys":["email","val email: Optional<String?>","dev.kord.common.entity.DiscordUser.email"]},{"name":"val embeds: List<DiscordEmbed>","description":"dev.kord.common.entity.DiscordMessage.embeds","location":"common/dev.kord.common.entity/-discord-message/embeds.html","searchKeys":["embeds","val embeds: List<DiscordEmbed>","dev.kord.common.entity.DiscordMessage.embeds"]},{"name":"val embeds: Optional<List<DiscordEmbed>>","description":"dev.kord.common.entity.DiscordPartialMessage.embeds","location":"common/dev.kord.common.entity/-discord-partial-message/embeds.html","searchKeys":["embeds","val embeds: Optional<List<DiscordEmbed>>","dev.kord.common.entity.DiscordPartialMessage.embeds"]},{"name":"val emoji: DiscordEmoji","description":"dev.kord.common.entity.Reaction.emoji","location":"common/dev.kord.common.entity/-reaction/emoji.html","searchKeys":["emoji","val emoji: DiscordEmoji","dev.kord.common.entity.Reaction.emoji"]},{"name":"val emoji: DiscordPartialEmoji","description":"dev.kord.common.entity.MessageReactionAddData.emoji","location":"common/dev.kord.common.entity/-message-reaction-add-data/emoji.html","searchKeys":["emoji","val emoji: DiscordPartialEmoji","dev.kord.common.entity.MessageReactionAddData.emoji"]},{"name":"val emoji: DiscordPartialEmoji","description":"dev.kord.common.entity.MessageReactionRemoveData.emoji","location":"common/dev.kord.common.entity/-message-reaction-remove-data/emoji.html","searchKeys":["emoji","val emoji: DiscordPartialEmoji","dev.kord.common.entity.MessageReactionRemoveData.emoji"]},{"name":"val emoji: Optional<DiscordActivityEmoji?>","description":"dev.kord.common.entity.DiscordActivity.emoji","location":"common/dev.kord.common.entity/-discord-activity/emoji.html","searchKeys":["emoji","val emoji: Optional<DiscordActivityEmoji?>","dev.kord.common.entity.DiscordActivity.emoji"]},{"name":"val emoji: Optional<DiscordPartialEmoji>","description":"dev.kord.common.entity.DiscordSelectOption.emoji","location":"common/dev.kord.common.entity/-discord-select-option/emoji.html","searchKeys":["emoji","val emoji: Optional<DiscordPartialEmoji>","dev.kord.common.entity.DiscordSelectOption.emoji"]},{"name":"val emojiId: Snowflake?","description":"dev.kord.common.entity.DiscordWelcomeScreenChannel.emojiId","location":"common/dev.kord.common.entity/-discord-welcome-screen-channel/emoji-id.html","searchKeys":["emojiId","val emojiId: Snowflake?","dev.kord.common.entity.DiscordWelcomeScreenChannel.emojiId"]},{"name":"val emojiName: String?","description":"dev.kord.common.entity.DiscordWelcomeScreenChannel.emojiName","location":"common/dev.kord.common.entity/-discord-welcome-screen-channel/emoji-name.html","searchKeys":["emojiName","val emojiName: String?","dev.kord.common.entity.DiscordWelcomeScreenChannel.emojiName"]},{"name":"val emojis: List<DiscordEmoji>","description":"dev.kord.common.entity.DiscordGuild.emojis","location":"common/dev.kord.common.entity/-discord-guild/emojis.html","searchKeys":["emojis","val emojis: List<DiscordEmoji>","dev.kord.common.entity.DiscordGuild.emojis"]},{"name":"val emojis: List<DiscordEmoji>","description":"dev.kord.common.entity.DiscordGuildPreview.emojis","location":"common/dev.kord.common.entity/-discord-guild-preview/emojis.html","searchKeys":["emojis","val emojis: List<DiscordEmoji>","dev.kord.common.entity.DiscordGuildPreview.emojis"]},{"name":"val emojis: List<DiscordEmoji>","description":"dev.kord.common.entity.DiscordUpdatedEmojis.emojis","location":"common/dev.kord.common.entity/-discord-updated-emojis/emojis.html","searchKeys":["emojis","val emojis: List<DiscordEmoji>","dev.kord.common.entity.DiscordUpdatedEmojis.emojis"]},{"name":"val enableEmoticons: OptionalBoolean","description":"dev.kord.common.entity.DiscordIntegration.enableEmoticons","location":"common/dev.kord.common.entity/-discord-integration/enable-emoticons.html","searchKeys":["enableEmoticons","val enableEmoticons: OptionalBoolean","dev.kord.common.entity.DiscordIntegration.enableEmoticons"]},{"name":"val enabled: Boolean","description":"dev.kord.common.entity.DiscordAutoModerationRule.enabled","location":"common/dev.kord.common.entity/-discord-auto-moderation-rule/enabled.html","searchKeys":["enabled","val enabled: Boolean","dev.kord.common.entity.DiscordAutoModerationRule.enabled"]},{"name":"val enabled: Boolean","description":"dev.kord.common.entity.DiscordGuildWidget.enabled","location":"common/dev.kord.common.entity/-discord-guild-widget/enabled.html","searchKeys":["enabled","val enabled: Boolean","dev.kord.common.entity.DiscordGuildWidget.enabled"]},{"name":"val enabled: Boolean","description":"dev.kord.common.entity.DiscordIntegration.enabled","location":"common/dev.kord.common.entity/-discord-integration/enabled.html","searchKeys":["enabled","val enabled: Boolean","dev.kord.common.entity.DiscordIntegration.enabled"]},{"name":"val end: Optional<Instant>","description":"dev.kord.common.entity.DiscordActivityTimestamps.end","location":"common/dev.kord.common.entity/-discord-activity-timestamps/end.html","searchKeys":["end","val end: Optional<Instant>","dev.kord.common.entity.DiscordActivityTimestamps.end"]},{"name":"val endOfTime: Instant","description":"dev.kord.common.entity.Snowflake.Companion.endOfTime","location":"common/dev.kord.common.entity/-snowflake/-companion/end-of-time.html","searchKeys":["endOfTime","val endOfTime: Instant","dev.kord.common.entity.Snowflake.Companion.endOfTime"]},{"name":"val endpoint: String?","description":"dev.kord.common.entity.DiscordVoiceServerUpdateData.endpoint","location":"common/dev.kord.common.entity/-discord-voice-server-update-data/endpoint.html","searchKeys":["endpoint","val endpoint: String?","dev.kord.common.entity.DiscordVoiceServerUpdateData.endpoint"]},{"name":"val entityId: Snowflake?","description":"dev.kord.common.entity.DiscordGuildScheduledEvent.entityId","location":"common/dev.kord.common.entity/-discord-guild-scheduled-event/entity-id.html","searchKeys":["entityId","val entityId: Snowflake?","dev.kord.common.entity.DiscordGuildScheduledEvent.entityId"]},{"name":"val entityMetadata: GuildScheduledEventEntityMetadata?","description":"dev.kord.common.entity.DiscordGuildScheduledEvent.entityMetadata","location":"common/dev.kord.common.entity/-discord-guild-scheduled-event/entity-metadata.html","searchKeys":["entityMetadata","val entityMetadata: GuildScheduledEventEntityMetadata?","dev.kord.common.entity.DiscordGuildScheduledEvent.entityMetadata"]},{"name":"val entityType: ScheduledEntityType","description":"dev.kord.common.entity.DiscordGuildScheduledEvent.entityType","location":"common/dev.kord.common.entity/-discord-guild-scheduled-event/entity-type.html","searchKeys":["entityType","val entityType: ScheduledEntityType","dev.kord.common.entity.DiscordGuildScheduledEvent.entityType"]},{"name":"val entries: List<ActivityType>","description":"dev.kord.common.entity.ActivityType.Companion.entries","location":"common/dev.kord.common.entity/-activity-type/-companion/entries.html","searchKeys":["entries","val entries: List<ActivityType>","dev.kord.common.entity.ActivityType.Companion.entries"]},{"name":"val entries: List<AllowedMentionType>","description":"dev.kord.common.entity.AllowedMentionType.Companion.entries","location":"common/dev.kord.common.entity/-allowed-mention-type/-companion/entries.html","searchKeys":["entries","val entries: List<AllowedMentionType>","dev.kord.common.entity.AllowedMentionType.Companion.entries"]},{"name":"val entries: List<ApplicationCommandOptionType>","description":"dev.kord.common.entity.ApplicationCommandOptionType.Companion.entries","location":"common/dev.kord.common.entity/-application-command-option-type/-companion/entries.html","searchKeys":["entries","val entries: List<ApplicationCommandOptionType>","dev.kord.common.entity.ApplicationCommandOptionType.Companion.entries"]},{"name":"val entries: List<ApplicationCommandPermissionType>","description":"dev.kord.common.entity.ApplicationCommandPermissionType.Companion.entries","location":"common/dev.kord.common.entity/-application-command-permission-type/-companion/entries.html","searchKeys":["entries","val entries: List<ApplicationCommandPermissionType>","dev.kord.common.entity.ApplicationCommandPermissionType.Companion.entries"]},{"name":"val entries: List<ApplicationCommandType>","description":"dev.kord.common.entity.ApplicationCommandType.Companion.entries","location":"common/dev.kord.common.entity/-application-command-type/-companion/entries.html","searchKeys":["entries","val entries: List<ApplicationCommandType>","dev.kord.common.entity.ApplicationCommandType.Companion.entries"]},{"name":"val entries: List<ArchiveDuration>","description":"dev.kord.common.entity.ArchiveDuration.Companion.entries","location":"common/dev.kord.common.entity/-archive-duration/-companion/entries.html","searchKeys":["entries","val entries: List<ArchiveDuration>","dev.kord.common.entity.ArchiveDuration.Companion.entries"]},{"name":"val entries: List<AuditLogEvent>","description":"dev.kord.common.entity.AuditLogEvent.Companion.entries","location":"common/dev.kord.common.entity/-audit-log-event/-companion/entries.html","searchKeys":["entries","val entries: List<AuditLogEvent>","dev.kord.common.entity.AuditLogEvent.Companion.entries"]},{"name":"val entries: List<AutoModerationActionType>","description":"dev.kord.common.entity.AutoModerationActionType.Companion.entries","location":"common/dev.kord.common.entity/-auto-moderation-action-type/-companion/entries.html","searchKeys":["entries","val entries: List<AutoModerationActionType>","dev.kord.common.entity.AutoModerationActionType.Companion.entries"]},{"name":"val entries: List<AutoModerationRuleEventType>","description":"dev.kord.common.entity.AutoModerationRuleEventType.Companion.entries","location":"common/dev.kord.common.entity/-auto-moderation-rule-event-type/-companion/entries.html","searchKeys":["entries","val entries: List<AutoModerationRuleEventType>","dev.kord.common.entity.AutoModerationRuleEventType.Companion.entries"]},{"name":"val entries: List<AutoModerationRuleKeywordPresetType>","description":"dev.kord.common.entity.AutoModerationRuleKeywordPresetType.Companion.entries","location":"common/dev.kord.common.entity/-auto-moderation-rule-keyword-preset-type/-companion/entries.html","searchKeys":["entries","val entries: List<AutoModerationRuleKeywordPresetType>","dev.kord.common.entity.AutoModerationRuleKeywordPresetType.Companion.entries"]},{"name":"val entries: List<AutoModerationRuleTriggerType>","description":"dev.kord.common.entity.AutoModerationRuleTriggerType.Companion.entries","location":"common/dev.kord.common.entity/-auto-moderation-rule-trigger-type/-companion/entries.html","searchKeys":["entries","val entries: List<AutoModerationRuleTriggerType>","dev.kord.common.entity.AutoModerationRuleTriggerType.Companion.entries"]},{"name":"val entries: List<ButtonStyle>","description":"dev.kord.common.entity.ButtonStyle.Companion.entries","location":"common/dev.kord.common.entity/-button-style/-companion/entries.html","searchKeys":["entries","val entries: List<ButtonStyle>","dev.kord.common.entity.ButtonStyle.Companion.entries"]},{"name":"val entries: List<ChannelType>","description":"dev.kord.common.entity.ChannelType.Companion.entries","location":"common/dev.kord.common.entity/-channel-type/-companion/entries.html","searchKeys":["entries","val entries: List<ChannelType>","dev.kord.common.entity.ChannelType.Companion.entries"]},{"name":"val entries: List<ComponentType>","description":"dev.kord.common.entity.ComponentType.Companion.entries","location":"common/dev.kord.common.entity/-component-type/-companion/entries.html","searchKeys":["entries","val entries: List<ComponentType>","dev.kord.common.entity.ComponentType.Companion.entries"]},{"name":"val entries: List<DefaultMessageNotificationLevel>","description":"dev.kord.common.entity.DefaultMessageNotificationLevel.Companion.entries","location":"common/dev.kord.common.entity/-default-message-notification-level/-companion/entries.html","searchKeys":["entries","val entries: List<DefaultMessageNotificationLevel>","dev.kord.common.entity.DefaultMessageNotificationLevel.Companion.entries"]},{"name":"val entries: List<DiscordConnectionVisibility>","description":"dev.kord.common.entity.DiscordConnectionVisibility.Companion.entries","location":"common/dev.kord.common.entity/-discord-connection-visibility/-companion/entries.html","searchKeys":["entries","val entries: List<DiscordConnectionVisibility>","dev.kord.common.entity.DiscordConnectionVisibility.Companion.entries"]},{"name":"val entries: List<EmbedType>","description":"dev.kord.common.entity.EmbedType.Companion.entries","location":"common/dev.kord.common.entity/-embed-type/-companion/entries.html","searchKeys":["entries","val entries: List<EmbedType>","dev.kord.common.entity.EmbedType.Companion.entries"]},{"name":"val entries: List<ExplicitContentFilter>","description":"dev.kord.common.entity.ExplicitContentFilter.Companion.entries","location":"common/dev.kord.common.entity/-explicit-content-filter/-companion/entries.html","searchKeys":["entries","val entries: List<ExplicitContentFilter>","dev.kord.common.entity.ExplicitContentFilter.Companion.entries"]},{"name":"val entries: List<GuildFeature>","description":"dev.kord.common.entity.GuildFeature.Companion.entries","location":"common/dev.kord.common.entity/-guild-feature/-companion/entries.html","searchKeys":["entries","val entries: List<GuildFeature>","dev.kord.common.entity.GuildFeature.Companion.entries"]},{"name":"val entries: List<GuildScheduledEventPrivacyLevel>","description":"dev.kord.common.entity.GuildScheduledEventPrivacyLevel.Companion.entries","location":"common/dev.kord.common.entity/-guild-scheduled-event-privacy-level/-companion/entries.html","searchKeys":["entries","val entries: List<GuildScheduledEventPrivacyLevel>","dev.kord.common.entity.GuildScheduledEventPrivacyLevel.Companion.entries"]},{"name":"val entries: List<GuildScheduledEventStatus>","description":"dev.kord.common.entity.GuildScheduledEventStatus.Companion.entries","location":"common/dev.kord.common.entity/-guild-scheduled-event-status/-companion/entries.html","searchKeys":["entries","val entries: List<GuildScheduledEventStatus>","dev.kord.common.entity.GuildScheduledEventStatus.Companion.entries"]},{"name":"val entries: List<IntegrationExpireBehavior>","description":"dev.kord.common.entity.IntegrationExpireBehavior.Companion.entries","location":"common/dev.kord.common.entity/-integration-expire-behavior/-companion/entries.html","searchKeys":["entries","val entries: List<IntegrationExpireBehavior>","dev.kord.common.entity.IntegrationExpireBehavior.Companion.entries"]},{"name":"val entries: List<InteractionResponseType>","description":"dev.kord.common.entity.InteractionResponseType.Companion.entries","location":"common/dev.kord.common.entity/-interaction-response-type/-companion/entries.html","searchKeys":["entries","val entries: List<InteractionResponseType>","dev.kord.common.entity.InteractionResponseType.Companion.entries"]},{"name":"val entries: List<InteractionType>","description":"dev.kord.common.entity.InteractionType.Companion.entries","location":"common/dev.kord.common.entity/-interaction-type/-companion/entries.html","searchKeys":["entries","val entries: List<InteractionType>","dev.kord.common.entity.InteractionType.Companion.entries"]},{"name":"val entries: List<InviteTargetType>","description":"dev.kord.common.entity.InviteTargetType.Companion.entries","location":"common/dev.kord.common.entity/-invite-target-type/-companion/entries.html","searchKeys":["entries","val entries: List<InviteTargetType>","dev.kord.common.entity.InviteTargetType.Companion.entries"]},{"name":"val entries: List<MFALevel>","description":"dev.kord.common.entity.MFALevel.Companion.entries","location":"common/dev.kord.common.entity/-m-f-a-level/-companion/entries.html","searchKeys":["entries","val entries: List<MFALevel>","dev.kord.common.entity.MFALevel.Companion.entries"]},{"name":"val entries: List<MessageActivityType>","description":"dev.kord.common.entity.MessageActivityType.Companion.entries","location":"common/dev.kord.common.entity/-message-activity-type/-companion/entries.html","searchKeys":["entries","val entries: List<MessageActivityType>","dev.kord.common.entity.MessageActivityType.Companion.entries"]},{"name":"val entries: List<MessageStickerType>","description":"dev.kord.common.entity.MessageStickerType.Companion.entries","location":"common/dev.kord.common.entity/-message-sticker-type/-companion/entries.html","searchKeys":["entries","val entries: List<MessageStickerType>","dev.kord.common.entity.MessageStickerType.Companion.entries"]},{"name":"val entries: List<MessageType>","description":"dev.kord.common.entity.MessageType.Companion.entries","location":"common/dev.kord.common.entity/-message-type/-companion/entries.html","searchKeys":["entries","val entries: List<MessageType>","dev.kord.common.entity.MessageType.Companion.entries"]},{"name":"val entries: List<NsfwLevel>","description":"dev.kord.common.entity.NsfwLevel.Companion.entries","location":"common/dev.kord.common.entity/-nsfw-level/-companion/entries.html","searchKeys":["entries","val entries: List<NsfwLevel>","dev.kord.common.entity.NsfwLevel.Companion.entries"]},{"name":"val entries: List<OverwriteType>","description":"dev.kord.common.entity.OverwriteType.Companion.entries","location":"common/dev.kord.common.entity/-overwrite-type/-companion/entries.html","searchKeys":["entries","val entries: List<OverwriteType>","dev.kord.common.entity.OverwriteType.Companion.entries"]},{"name":"val entries: List<PremiumTier>","description":"dev.kord.common.entity.PremiumTier.Companion.entries","location":"common/dev.kord.common.entity/-premium-tier/-companion/entries.html","searchKeys":["entries","val entries: List<PremiumTier>","dev.kord.common.entity.PremiumTier.Companion.entries"]},{"name":"val entries: List<PresenceStatus>","description":"dev.kord.common.entity.PresenceStatus.Companion.entries","location":"common/dev.kord.common.entity/-presence-status/-companion/entries.html","searchKeys":["entries","val entries: List<PresenceStatus>","dev.kord.common.entity.PresenceStatus.Companion.entries"]},{"name":"val entries: List<ScheduledEntityType>","description":"dev.kord.common.entity.ScheduledEntityType.Companion.entries","location":"common/dev.kord.common.entity/-scheduled-entity-type/-companion/entries.html","searchKeys":["entries","val entries: List<ScheduledEntityType>","dev.kord.common.entity.ScheduledEntityType.Companion.entries"]},{"name":"val entries: List<StageInstancePrivacyLevel>","description":"dev.kord.common.entity.StageInstancePrivacyLevel.Companion.entries","location":"common/dev.kord.common.entity/-stage-instance-privacy-level/-companion/entries.html","searchKeys":["entries","val entries: List<StageInstancePrivacyLevel>","dev.kord.common.entity.StageInstancePrivacyLevel.Companion.entries"]},{"name":"val entries: List<TeamMembershipState>","description":"dev.kord.common.entity.TeamMembershipState.Companion.entries","location":"common/dev.kord.common.entity/-team-membership-state/-companion/entries.html","searchKeys":["entries","val entries: List<TeamMembershipState>","dev.kord.common.entity.TeamMembershipState.Companion.entries"]},{"name":"val entries: List<TextInputStyle>","description":"dev.kord.common.entity.TextInputStyle.Companion.entries","location":"common/dev.kord.common.entity/-text-input-style/-companion/entries.html","searchKeys":["entries","val entries: List<TextInputStyle>","dev.kord.common.entity.TextInputStyle.Companion.entries"]},{"name":"val entries: List<UserPremium>","description":"dev.kord.common.entity.UserPremium.Companion.entries","location":"common/dev.kord.common.entity/-user-premium/-companion/entries.html","searchKeys":["entries","val entries: List<UserPremium>","dev.kord.common.entity.UserPremium.Companion.entries"]},{"name":"val entries: List<VerificationLevel>","description":"dev.kord.common.entity.VerificationLevel.Companion.entries","location":"common/dev.kord.common.entity/-verification-level/-companion/entries.html","searchKeys":["entries","val entries: List<VerificationLevel>","dev.kord.common.entity.VerificationLevel.Companion.entries"]},{"name":"val entries: List<VideoQualityMode>","description":"dev.kord.common.entity.VideoQualityMode.Companion.entries","location":"common/dev.kord.common.entity/-video-quality-mode/-companion/entries.html","searchKeys":["entries","val entries: List<VideoQualityMode>","dev.kord.common.entity.VideoQualityMode.Companion.entries"]},{"name":"val entries: List<WebhookType>","description":"dev.kord.common.entity.WebhookType.Companion.entries","location":"common/dev.kord.common.entity/-webhook-type/-companion/entries.html","searchKeys":["entries","val entries: List<WebhookType>","dev.kord.common.entity.WebhookType.Companion.entries"]},{"name":"val ephemeral: OptionalBoolean","description":"dev.kord.common.entity.DiscordAttachment.ephemeral","location":"common/dev.kord.common.entity/-discord-attachment/ephemeral.html","searchKeys":["ephemeral","val ephemeral: OptionalBoolean","dev.kord.common.entity.DiscordAttachment.ephemeral"]},{"name":"val eventType: AutoModerationRuleEventType","description":"dev.kord.common.entity.DiscordAutoModerationRule.eventType","location":"common/dev.kord.common.entity/-discord-auto-moderation-rule/event-type.html","searchKeys":["eventType","val eventType: AutoModerationRuleEventType","dev.kord.common.entity.DiscordAutoModerationRule.eventType"]},{"name":"val exemptChannels: List<Snowflake>","description":"dev.kord.common.entity.DiscordAutoModerationRule.exemptChannels","location":"common/dev.kord.common.entity/-discord-auto-moderation-rule/exempt-channels.html","searchKeys":["exemptChannels","val exemptChannels: List<Snowflake>","dev.kord.common.entity.DiscordAutoModerationRule.exemptChannels"]},{"name":"val exemptRoles: List<Snowflake>","description":"dev.kord.common.entity.DiscordAutoModerationRule.exemptRoles","location":"common/dev.kord.common.entity/-discord-auto-moderation-rule/exempt-roles.html","searchKeys":["exemptRoles","val exemptRoles: List<Snowflake>","dev.kord.common.entity.DiscordAutoModerationRule.exemptRoles"]},{"name":"val expireBehavior: IntegrationExpireBehavior","description":"dev.kord.common.entity.DiscordIntegration.expireBehavior","location":"common/dev.kord.common.entity/-discord-integration/expire-behavior.html","searchKeys":["expireBehavior","val expireBehavior: IntegrationExpireBehavior","dev.kord.common.entity.DiscordIntegration.expireBehavior"]},{"name":"val expireGracePeriod: DurationInDays","description":"dev.kord.common.entity.DiscordIntegration.expireGracePeriod","location":"common/dev.kord.common.entity/-discord-integration/expire-grace-period.html","searchKeys":["expireGracePeriod","val expireGracePeriod: DurationInDays","dev.kord.common.entity.DiscordIntegration.expireGracePeriod"]},{"name":"val explicitContentFilter: ExplicitContentFilter","description":"dev.kord.common.entity.DiscordGuild.explicitContentFilter","location":"common/dev.kord.common.entity/-discord-guild/explicit-content-filter.html","searchKeys":["explicitContentFilter","val explicitContentFilter: ExplicitContentFilter","dev.kord.common.entity.DiscordGuild.explicitContentFilter"]},{"name":"val failIfNotExists: OptionalBoolean","description":"dev.kord.common.entity.DiscordMessageReference.failIfNotExists","location":"common/dev.kord.common.entity/-discord-message-reference/fail-if-not-exists.html","searchKeys":["failIfNotExists","val failIfNotExists: OptionalBoolean","dev.kord.common.entity.DiscordMessageReference.failIfNotExists"]},{"name":"val features: List<GuildFeature>","description":"dev.kord.common.entity.DiscordGuild.features","location":"common/dev.kord.common.entity/-discord-guild/features.html","searchKeys":["features","val features: List<GuildFeature>","dev.kord.common.entity.DiscordGuild.features"]},{"name":"val features: List<GuildFeature>","description":"dev.kord.common.entity.DiscordGuildPreview.features","location":"common/dev.kord.common.entity/-discord-guild-preview/features.html","searchKeys":["features","val features: List<GuildFeature>","dev.kord.common.entity.DiscordGuildPreview.features"]},{"name":"val features: List<GuildFeature>","description":"dev.kord.common.entity.DiscordPartialGuild.features","location":"common/dev.kord.common.entity/-discord-partial-guild/features.html","searchKeys":["features","val features: List<GuildFeature>","dev.kord.common.entity.DiscordPartialGuild.features"]},{"name":"val fields: Optional<List<DiscordEmbed.Field>>","description":"dev.kord.common.entity.DiscordEmbed.fields","location":"common/dev.kord.common.entity/-discord-embed/fields.html","searchKeys":["fields","val fields: Optional<List<DiscordEmbed.Field>>","dev.kord.common.entity.DiscordEmbed.fields"]},{"name":"val filename: String","description":"dev.kord.common.entity.DiscordAttachment.filename","location":"common/dev.kord.common.entity/-discord-attachment/filename.html","searchKeys":["filename","val filename: String","dev.kord.common.entity.DiscordAttachment.filename"]},{"name":"val flags: Int","description":"dev.kord.common.entity.DiscordThreadMember.flags","location":"common/dev.kord.common.entity/-discord-thread-member/flags.html","searchKeys":["flags","val flags: Int","dev.kord.common.entity.DiscordThreadMember.flags"]},{"name":"val flags: List<ApplicationFlag>","description":"dev.kord.common.entity.ApplicationFlags.flags","location":"common/dev.kord.common.entity/-application-flags/flags.html","searchKeys":["flags","val flags: List<ApplicationFlag>","dev.kord.common.entity.ApplicationFlags.flags"]},{"name":"val flags: List<MessageFlag>","description":"dev.kord.common.entity.MessageFlags.flags","location":"common/dev.kord.common.entity/-message-flags/flags.html","searchKeys":["flags","val flags: List<MessageFlag>","dev.kord.common.entity.MessageFlags.flags"]},{"name":"val flags: List<UserFlag>","description":"dev.kord.common.entity.UserFlags.flags","location":"common/dev.kord.common.entity/-user-flags/flags.html","searchKeys":["flags","val flags: List<UserFlag>","dev.kord.common.entity.UserFlags.flags"]},{"name":"val flags: Optional<ActivityFlags>","description":"dev.kord.common.entity.DiscordActivity.flags","location":"common/dev.kord.common.entity/-discord-activity/flags.html","searchKeys":["flags","val flags: Optional<ActivityFlags>","dev.kord.common.entity.DiscordActivity.flags"]},{"name":"val flags: Optional<MessageFlags>","description":"dev.kord.common.entity.DiscordMessage.flags","location":"common/dev.kord.common.entity/-discord-message/flags.html","searchKeys":["flags","val flags: Optional<MessageFlags>","dev.kord.common.entity.DiscordMessage.flags"]},{"name":"val flags: Optional<MessageFlags>","description":"dev.kord.common.entity.DiscordPartialMessage.flags","location":"common/dev.kord.common.entity/-discord-partial-message/flags.html","searchKeys":["flags","val flags: Optional<MessageFlags>","dev.kord.common.entity.DiscordPartialMessage.flags"]},{"name":"val flags: Optional<UserFlags>","description":"dev.kord.common.entity.DiscordOptionallyMemberUser.flags","location":"common/dev.kord.common.entity/-discord-optionally-member-user/flags.html","searchKeys":["flags","val flags: Optional<UserFlags>","dev.kord.common.entity.DiscordOptionallyMemberUser.flags"]},{"name":"val flags: Optional<UserFlags>","description":"dev.kord.common.entity.DiscordUser.flags","location":"common/dev.kord.common.entity/-discord-user/flags.html","searchKeys":["flags","val flags: Optional<UserFlags>","dev.kord.common.entity.DiscordUser.flags"]},{"name":"val flags: Set<ActivityFlag>","description":"dev.kord.common.entity.ActivityFlags.flags","location":"common/dev.kord.common.entity/-activity-flags/flags.html","searchKeys":["flags","val flags: Set<ActivityFlag>","dev.kord.common.entity.ActivityFlags.flags"]},{"name":"val footer: Optional<DiscordEmbed.Footer>","description":"dev.kord.common.entity.DiscordEmbed.footer","location":"common/dev.kord.common.entity/-discord-embed/footer.html","searchKeys":["footer","val footer: Optional<DiscordEmbed.Footer>","dev.kord.common.entity.DiscordEmbed.footer"]},{"name":"val formatType: MessageStickerType","description":"dev.kord.common.entity.DiscordMessageSticker.formatType","location":"common/dev.kord.common.entity/-discord-message-sticker/format-type.html","searchKeys":["formatType","val formatType: MessageStickerType","dev.kord.common.entity.DiscordMessageSticker.formatType"]},{"name":"val formatType: MessageStickerType","description":"dev.kord.common.entity.DiscordStickerItem.formatType","location":"common/dev.kord.common.entity/-discord-sticker-item/format-type.html","searchKeys":["formatType","val formatType: MessageStickerType","dev.kord.common.entity.DiscordStickerItem.formatType"]},{"name":"val friendSync: Boolean","description":"dev.kord.common.entity.DiscordConnection.friendSync","location":"common/dev.kord.common.entity/-discord-connection/friend-sync.html","searchKeys":["friendSync","val friendSync: Boolean","dev.kord.common.entity.DiscordConnection.friendSync"]},{"name":"val green: Int","description":"dev.kord.common.Color.green","location":"common/dev.kord.common/-color/green.html","searchKeys":["green","val green: Int","dev.kord.common.Color.green"]},{"name":"val guildId: OptionalSnowflake","description":"dev.kord.common.entity.AllRemovedMessageReactions.guildId","location":"common/dev.kord.common.entity/-all-removed-message-reactions/guild-id.html","searchKeys":["guildId","val guildId: OptionalSnowflake","dev.kord.common.entity.AllRemovedMessageReactions.guildId"]},{"name":"val guildId: OptionalSnowflake","description":"dev.kord.common.entity.BulkDeleteData.guildId","location":"common/dev.kord.common.entity/-bulk-delete-data/guild-id.html","searchKeys":["guildId","val guildId: OptionalSnowflake","dev.kord.common.entity.BulkDeleteData.guildId"]},{"name":"val guildId: OptionalSnowflake","description":"dev.kord.common.entity.DeletedMessage.guildId","location":"common/dev.kord.common.entity/-deleted-message/guild-id.html","searchKeys":["guildId","val guildId: OptionalSnowflake","dev.kord.common.entity.DeletedMessage.guildId"]},{"name":"val guildId: OptionalSnowflake","description":"dev.kord.common.entity.DiscordApplicationCommand.guildId","location":"common/dev.kord.common.entity/-discord-application-command/guild-id.html","searchKeys":["guildId","val guildId: OptionalSnowflake","dev.kord.common.entity.DiscordApplicationCommand.guildId"]},{"name":"val guildId: OptionalSnowflake","description":"dev.kord.common.entity.DiscordChannel.guildId","location":"common/dev.kord.common.entity/-discord-channel/guild-id.html","searchKeys":["guildId","val guildId: OptionalSnowflake","dev.kord.common.entity.DiscordChannel.guildId"]},{"name":"val guildId: OptionalSnowflake","description":"dev.kord.common.entity.DiscordInteraction.guildId","location":"common/dev.kord.common.entity/-discord-interaction/guild-id.html","searchKeys":["guildId","val guildId: OptionalSnowflake","dev.kord.common.entity.DiscordInteraction.guildId"]},{"name":"val guildId: OptionalSnowflake","description":"dev.kord.common.entity.DiscordMessage.guildId","location":"common/dev.kord.common.entity/-discord-message/guild-id.html","searchKeys":["guildId","val guildId: OptionalSnowflake","dev.kord.common.entity.DiscordMessage.guildId"]},{"name":"val guildId: OptionalSnowflake","description":"dev.kord.common.entity.DiscordMessageReference.guildId","location":"common/dev.kord.common.entity/-discord-message-reference/guild-id.html","searchKeys":["guildId","val guildId: OptionalSnowflake","dev.kord.common.entity.DiscordMessageReference.guildId"]},{"name":"val guildId: OptionalSnowflake","description":"dev.kord.common.entity.DiscordMessageSticker.guildId","location":"common/dev.kord.common.entity/-discord-message-sticker/guild-id.html","searchKeys":["guildId","val guildId: OptionalSnowflake","dev.kord.common.entity.DiscordMessageSticker.guildId"]},{"name":"val guildId: OptionalSnowflake","description":"dev.kord.common.entity.DiscordPartialMessage.guildId","location":"common/dev.kord.common.entity/-discord-partial-message/guild-id.html","searchKeys":["guildId","val guildId: OptionalSnowflake","dev.kord.common.entity.DiscordPartialMessage.guildId"]},{"name":"val guildId: OptionalSnowflake","description":"dev.kord.common.entity.DiscordPinsUpdateData.guildId","location":"common/dev.kord.common.entity/-discord-pins-update-data/guild-id.html","searchKeys":["guildId","val guildId: OptionalSnowflake","dev.kord.common.entity.DiscordPinsUpdateData.guildId"]},{"name":"val guildId: OptionalSnowflake","description":"dev.kord.common.entity.DiscordPresenceUpdate.guildId","location":"common/dev.kord.common.entity/-discord-presence-update/guild-id.html","searchKeys":["guildId","val guildId: OptionalSnowflake","dev.kord.common.entity.DiscordPresenceUpdate.guildId"]},{"name":"val guildId: OptionalSnowflake","description":"dev.kord.common.entity.DiscordTyping.guildId","location":"common/dev.kord.common.entity/-discord-typing/guild-id.html","searchKeys":["guildId","val guildId: OptionalSnowflake","dev.kord.common.entity.DiscordTyping.guildId"]},{"name":"val guildId: OptionalSnowflake","description":"dev.kord.common.entity.DiscordVoiceState.guildId","location":"common/dev.kord.common.entity/-discord-voice-state/guild-id.html","searchKeys":["guildId","val guildId: OptionalSnowflake","dev.kord.common.entity.DiscordVoiceState.guildId"]},{"name":"val guildId: OptionalSnowflake","description":"dev.kord.common.entity.DiscordWebhook.guildId","location":"common/dev.kord.common.entity/-discord-webhook/guild-id.html","searchKeys":["guildId","val guildId: OptionalSnowflake","dev.kord.common.entity.DiscordWebhook.guildId"]},{"name":"val guildId: OptionalSnowflake","description":"dev.kord.common.entity.InteractionCallbackData.guildId","location":"common/dev.kord.common.entity/-interaction-callback-data/guild-id.html","searchKeys":["guildId","val guildId: OptionalSnowflake","dev.kord.common.entity.InteractionCallbackData.guildId"]},{"name":"val guildId: OptionalSnowflake","description":"dev.kord.common.entity.MessageReactionAddData.guildId","location":"common/dev.kord.common.entity/-message-reaction-add-data/guild-id.html","searchKeys":["guildId","val guildId: OptionalSnowflake","dev.kord.common.entity.MessageReactionAddData.guildId"]},{"name":"val guildId: OptionalSnowflake","description":"dev.kord.common.entity.MessageReactionRemoveData.guildId","location":"common/dev.kord.common.entity/-message-reaction-remove-data/guild-id.html","searchKeys":["guildId","val guildId: OptionalSnowflake","dev.kord.common.entity.MessageReactionRemoveData.guildId"]},{"name":"val guildId: Snowflake","description":"dev.kord.common.entity.DiscordAddedGuildMember.guildId","location":"common/dev.kord.common.entity/-discord-added-guild-member/guild-id.html","searchKeys":["guildId","val guildId: Snowflake","dev.kord.common.entity.DiscordAddedGuildMember.guildId"]},{"name":"val guildId: Snowflake","description":"dev.kord.common.entity.DiscordAutoModerationRule.guildId","location":"common/dev.kord.common.entity/-discord-auto-moderation-rule/guild-id.html","searchKeys":["guildId","val guildId: Snowflake","dev.kord.common.entity.DiscordAutoModerationRule.guildId"]},{"name":"val guildId: Snowflake","description":"dev.kord.common.entity.DiscordDeletedGuildRole.guildId","location":"common/dev.kord.common.entity/-discord-deleted-guild-role/guild-id.html","searchKeys":["guildId","val guildId: Snowflake","dev.kord.common.entity.DiscordDeletedGuildRole.guildId"]},{"name":"val guildId: Snowflake","description":"dev.kord.common.entity.DiscordGuildApplicationCommandPermissions.guildId","location":"common/dev.kord.common.entity/-discord-guild-application-command-permissions/guild-id.html","searchKeys":["guildId","val guildId: Snowflake","dev.kord.common.entity.DiscordGuildApplicationCommandPermissions.guildId"]},{"name":"val guildId: Snowflake","description":"dev.kord.common.entity.DiscordGuildBan.guildId","location":"common/dev.kord.common.entity/-discord-guild-ban/guild-id.html","searchKeys":["guildId","val guildId: Snowflake","dev.kord.common.entity.DiscordGuildBan.guildId"]},{"name":"val guildId: Snowflake","description":"dev.kord.common.entity.DiscordGuildIntegrations.guildId","location":"common/dev.kord.common.entity/-discord-guild-integrations/guild-id.html","searchKeys":["guildId","val guildId: Snowflake","dev.kord.common.entity.DiscordGuildIntegrations.guildId"]},{"name":"val guildId: Snowflake","description":"dev.kord.common.entity.DiscordGuildRole.guildId","location":"common/dev.kord.common.entity/-discord-guild-role/guild-id.html","searchKeys":["guildId","val guildId: Snowflake","dev.kord.common.entity.DiscordGuildRole.guildId"]},{"name":"val guildId: Snowflake","description":"dev.kord.common.entity.DiscordGuildScheduledEvent.guildId","location":"common/dev.kord.common.entity/-discord-guild-scheduled-event/guild-id.html","searchKeys":["guildId","val guildId: Snowflake","dev.kord.common.entity.DiscordGuildScheduledEvent.guildId"]},{"name":"val guildId: Snowflake","description":"dev.kord.common.entity.DiscordMentionedChannel.guildId","location":"common/dev.kord.common.entity/-discord-mentioned-channel/guild-id.html","searchKeys":["guildId","val guildId: Snowflake","dev.kord.common.entity.DiscordMentionedChannel.guildId"]},{"name":"val guildId: Snowflake","description":"dev.kord.common.entity.DiscordRemovedGuildMember.guildId","location":"common/dev.kord.common.entity/-discord-removed-guild-member/guild-id.html","searchKeys":["guildId","val guildId: Snowflake","dev.kord.common.entity.DiscordRemovedGuildMember.guildId"]},{"name":"val guildId: Snowflake","description":"dev.kord.common.entity.DiscordStageInstance.guildId","location":"common/dev.kord.common.entity/-discord-stage-instance/guild-id.html","searchKeys":["guildId","val guildId: Snowflake","dev.kord.common.entity.DiscordStageInstance.guildId"]},{"name":"val guildId: Snowflake","description":"dev.kord.common.entity.DiscordUpdatedEmojis.guildId","location":"common/dev.kord.common.entity/-discord-updated-emojis/guild-id.html","searchKeys":["guildId","val guildId: Snowflake","dev.kord.common.entity.DiscordUpdatedEmojis.guildId"]},{"name":"val guildId: Snowflake","description":"dev.kord.common.entity.DiscordUpdatedGuildMember.guildId","location":"common/dev.kord.common.entity/-discord-updated-guild-member/guild-id.html","searchKeys":["guildId","val guildId: Snowflake","dev.kord.common.entity.DiscordUpdatedGuildMember.guildId"]},{"name":"val guildId: Snowflake","description":"dev.kord.common.entity.DiscordVoiceServerUpdateData.guildId","location":"common/dev.kord.common.entity/-discord-voice-server-update-data/guild-id.html","searchKeys":["guildId","val guildId: Snowflake","dev.kord.common.entity.DiscordVoiceServerUpdateData.guildId"]},{"name":"val guildId: Snowflake","description":"dev.kord.common.entity.DiscordWebhooksUpdateData.guildId","location":"common/dev.kord.common.entity/-discord-webhooks-update-data/guild-id.html","searchKeys":["guildId","val guildId: Snowflake","dev.kord.common.entity.DiscordWebhooksUpdateData.guildId"]},{"name":"val guildLocale: Optional<Locale>","description":"dev.kord.common.entity.DiscordInteraction.guildLocale","location":"common/dev.kord.common.entity/-discord-interaction/guild-locale.html","searchKeys":["guildLocale","val guildLocale: Optional<Locale>","dev.kord.common.entity.DiscordInteraction.guildLocale"]},{"name":"val guildScheduledEventId: Snowflake?","description":"dev.kord.common.entity.DiscordStageInstance.guildScheduledEventId","location":"common/dev.kord.common.entity/-discord-stage-instance/guild-scheduled-event-id.html","searchKeys":["guildScheduledEventId","val guildScheduledEventId: Snowflake?","dev.kord.common.entity.DiscordStageInstance.guildScheduledEventId"]},{"name":"val guildScheduledEvents: Optional<List<DiscordGuildScheduledEvent>>","description":"dev.kord.common.entity.DiscordGuild.guildScheduledEvents","location":"common/dev.kord.common.entity/-discord-guild/guild-scheduled-events.html","searchKeys":["guildScheduledEvents","val guildScheduledEvents: Optional<List<DiscordGuildScheduledEvent>>","dev.kord.common.entity.DiscordGuild.guildScheduledEvents"]},{"name":"val guildScheduledEvents: Optional<List<DiscordGuildScheduledEvent>>","description":"dev.kord.common.entity.DiscordPartialGuild.guildScheduledEvents","location":"common/dev.kord.common.entity/-discord-partial-guild/guild-scheduled-events.html","searchKeys":["guildScheduledEvents","val guildScheduledEvents: Optional<List<DiscordGuildScheduledEvent>>","dev.kord.common.entity.DiscordPartialGuild.guildScheduledEvents"]},{"name":"val height: OptionalInt","description":"dev.kord.common.entity.DiscordEmbed.Image.height","location":"common/dev.kord.common.entity/-discord-embed/-image/height.html","searchKeys":["height","val height: OptionalInt","dev.kord.common.entity.DiscordEmbed.Image.height"]},{"name":"val height: OptionalInt","description":"dev.kord.common.entity.DiscordEmbed.Thumbnail.height","location":"common/dev.kord.common.entity/-discord-embed/-thumbnail/height.html","searchKeys":["height","val height: OptionalInt","dev.kord.common.entity.DiscordEmbed.Thumbnail.height"]},{"name":"val height: OptionalInt","description":"dev.kord.common.entity.DiscordEmbed.Video.height","location":"common/dev.kord.common.entity/-discord-embed/-video/height.html","searchKeys":["height","val height: OptionalInt","dev.kord.common.entity.DiscordEmbed.Video.height"]},{"name":"val height: OptionalInt?","description":"dev.kord.common.entity.DiscordAttachment.height","location":"common/dev.kord.common.entity/-discord-attachment/height.html","searchKeys":["height","val height: OptionalInt?","dev.kord.common.entity.DiscordAttachment.height"]},{"name":"val hoist: Boolean","description":"dev.kord.common.entity.DiscordRole.hoist","location":"common/dev.kord.common.entity/-discord-role/hoist.html","searchKeys":["hoist","val hoist: Boolean","dev.kord.common.entity.DiscordRole.hoist"]},{"name":"val hoist: Boolean? = null","description":"dev.kord.common.entity.DiscordAuditLogRoleChange.hoist","location":"common/dev.kord.common.entity/-discord-audit-log-role-change/hoist.html","searchKeys":["hoist","val hoist: Boolean? = null","dev.kord.common.entity.DiscordAuditLogRoleChange.hoist"]},{"name":"val hoist: OptionalBoolean","description":"dev.kord.common.entity.DiscordPartialRole.hoist","location":"common/dev.kord.common.entity/-discord-partial-role/hoist.html","searchKeys":["hoist","val hoist: OptionalBoolean","dev.kord.common.entity.DiscordPartialRole.hoist"]},{"name":"val icon: Optional<String?>","description":"dev.kord.common.entity.DiscordChannel.icon","location":"common/dev.kord.common.entity/-discord-channel/icon.html","searchKeys":["icon","val icon: Optional<String?>","dev.kord.common.entity.DiscordChannel.icon"]},{"name":"val icon: Optional<String?>","description":"dev.kord.common.entity.DiscordPartialRole.icon","location":"common/dev.kord.common.entity/-discord-partial-role/icon.html","searchKeys":["icon","val icon: Optional<String?>","dev.kord.common.entity.DiscordPartialRole.icon"]},{"name":"val icon: Optional<String?>","description":"dev.kord.common.entity.DiscordRole.icon","location":"common/dev.kord.common.entity/-discord-role/icon.html","searchKeys":["icon","val icon: Optional<String?>","dev.kord.common.entity.DiscordRole.icon"]},{"name":"val icon: String?","description":"dev.kord.common.entity.DiscordGuild.icon","location":"common/dev.kord.common.entity/-discord-guild/icon.html","searchKeys":["icon","val icon: String?","dev.kord.common.entity.DiscordGuild.icon"]},{"name":"val icon: String?","description":"dev.kord.common.entity.DiscordGuildPreview.icon","location":"common/dev.kord.common.entity/-discord-guild-preview/icon.html","searchKeys":["icon","val icon: String?","dev.kord.common.entity.DiscordGuildPreview.icon"]},{"name":"val icon: String?","description":"dev.kord.common.entity.DiscordPartialGuild.icon","location":"common/dev.kord.common.entity/-discord-partial-guild/icon.html","searchKeys":["icon","val icon: String?","dev.kord.common.entity.DiscordPartialGuild.icon"]},{"name":"val icon: String?","description":"dev.kord.common.entity.DiscordTeam.icon","location":"common/dev.kord.common.entity/-discord-team/icon.html","searchKeys":["icon","val icon: String?","dev.kord.common.entity.DiscordTeam.icon"]},{"name":"val icon: String?","description":"dev.kord.common.entity.IntegrationApplication.icon","location":"common/dev.kord.common.entity/-integration-application/icon.html","searchKeys":["icon","val icon: String?","dev.kord.common.entity.IntegrationApplication.icon"]},{"name":"val icon: String? = null","description":"dev.kord.common.entity.MessageApplication.icon","location":"common/dev.kord.common.entity/-message-application/icon.html","searchKeys":["icon","val icon: String? = null","dev.kord.common.entity.MessageApplication.icon"]},{"name":"val iconHash: Optional<String?>","description":"dev.kord.common.entity.DiscordGuild.iconHash","location":"common/dev.kord.common.entity/-discord-guild/icon-hash.html","searchKeys":["iconHash","val iconHash: Optional<String?>","dev.kord.common.entity.DiscordGuild.iconHash"]},{"name":"val iconUrl: Optional<String>","description":"dev.kord.common.entity.DiscordEmbed.Author.iconUrl","location":"common/dev.kord.common.entity/-discord-embed/-author/icon-url.html","searchKeys":["iconUrl","val iconUrl: Optional<String>","dev.kord.common.entity.DiscordEmbed.Author.iconUrl"]},{"name":"val iconUrl: Optional<String>","description":"dev.kord.common.entity.DiscordEmbed.Footer.iconUrl","location":"common/dev.kord.common.entity/-discord-embed/-footer/icon-url.html","searchKeys":["iconUrl","val iconUrl: Optional<String>","dev.kord.common.entity.DiscordEmbed.Footer.iconUrl"]},{"name":"val id: Optional<String>","description":"dev.kord.common.entity.DiscordActivityParty.id","location":"common/dev.kord.common.entity/-discord-activity-party/id.html","searchKeys":["id","val id: Optional<String>","dev.kord.common.entity.DiscordActivityParty.id"]},{"name":"val id: OptionalSnowflake","description":"dev.kord.common.entity.AuditLogEntryOptionalInfo.id","location":"common/dev.kord.common.entity/-audit-log-entry-optional-info/id.html","searchKeys":["id","val id: OptionalSnowflake","dev.kord.common.entity.AuditLogEntryOptionalInfo.id"]},{"name":"val id: OptionalSnowflake","description":"dev.kord.common.entity.DiscordActivityEmoji.id","location":"common/dev.kord.common.entity/-discord-activity-emoji/id.html","searchKeys":["id","val id: OptionalSnowflake","dev.kord.common.entity.DiscordActivityEmoji.id"]},{"name":"val id: OptionalSnowflake","description":"dev.kord.common.entity.DiscordMessageReference.id","location":"common/dev.kord.common.entity/-discord-message-reference/id.html","searchKeys":["id","val id: OptionalSnowflake","dev.kord.common.entity.DiscordMessageReference.id"]},{"name":"val id: OptionalSnowflake","description":"dev.kord.common.entity.DiscordThreadMember.id","location":"common/dev.kord.common.entity/-discord-thread-member/id.html","searchKeys":["id","val id: OptionalSnowflake","dev.kord.common.entity.DiscordThreadMember.id"]},{"name":"val id: OptionalSnowflake","description":"dev.kord.common.entity.InteractionCallbackData.id","location":"common/dev.kord.common.entity/-interaction-callback-data/id.html","searchKeys":["id","val id: OptionalSnowflake","dev.kord.common.entity.InteractionCallbackData.id"]},{"name":"val id: Snowflake","description":"dev.kord.common.entity.DeletedMessage.id","location":"common/dev.kord.common.entity/-deleted-message/id.html","searchKeys":["id","val id: Snowflake","dev.kord.common.entity.DeletedMessage.id"]},{"name":"val id: Snowflake","description":"dev.kord.common.entity.DiscordApplicationCommand.id","location":"common/dev.kord.common.entity/-discord-application-command/id.html","searchKeys":["id","val id: Snowflake","dev.kord.common.entity.DiscordApplicationCommand.id"]},{"name":"val id: Snowflake","description":"dev.kord.common.entity.DiscordAttachment.id","location":"common/dev.kord.common.entity/-discord-attachment/id.html","searchKeys":["id","val id: Snowflake","dev.kord.common.entity.DiscordAttachment.id"]},{"name":"val id: Snowflake","description":"dev.kord.common.entity.DiscordAuditLogEntry.id","location":"common/dev.kord.common.entity/-discord-audit-log-entry/id.html","searchKeys":["id","val id: Snowflake","dev.kord.common.entity.DiscordAuditLogEntry.id"]},{"name":"val id: Snowflake","description":"dev.kord.common.entity.DiscordAutoModerationRule.id","location":"common/dev.kord.common.entity/-discord-auto-moderation-rule/id.html","searchKeys":["id","val id: Snowflake","dev.kord.common.entity.DiscordAutoModerationRule.id"]},{"name":"val id: Snowflake","description":"dev.kord.common.entity.DiscordChannel.id","location":"common/dev.kord.common.entity/-discord-channel/id.html","searchKeys":["id","val id: Snowflake","dev.kord.common.entity.DiscordChannel.id"]},{"name":"val id: Snowflake","description":"dev.kord.common.entity.DiscordDeletedGuildRole.id","location":"common/dev.kord.common.entity/-discord-deleted-guild-role/id.html","searchKeys":["id","val id: Snowflake","dev.kord.common.entity.DiscordDeletedGuildRole.id"]},{"name":"val id: Snowflake","description":"dev.kord.common.entity.DiscordGuild.id","location":"common/dev.kord.common.entity/-discord-guild/id.html","searchKeys":["id","val id: Snowflake","dev.kord.common.entity.DiscordGuild.id"]},{"name":"val id: Snowflake","description":"dev.kord.common.entity.DiscordGuildApplicationCommandPermission.id","location":"common/dev.kord.common.entity/-discord-guild-application-command-permission/id.html","searchKeys":["id","val id: Snowflake","dev.kord.common.entity.DiscordGuildApplicationCommandPermission.id"]},{"name":"val id: Snowflake","description":"dev.kord.common.entity.DiscordGuildApplicationCommandPermissions.id","location":"common/dev.kord.common.entity/-discord-guild-application-command-permissions/id.html","searchKeys":["id","val id: Snowflake","dev.kord.common.entity.DiscordGuildApplicationCommandPermissions.id"]},{"name":"val id: Snowflake","description":"dev.kord.common.entity.DiscordGuildPreview.id","location":"common/dev.kord.common.entity/-discord-guild-preview/id.html","searchKeys":["id","val id: Snowflake","dev.kord.common.entity.DiscordGuildPreview.id"]},{"name":"val id: Snowflake","description":"dev.kord.common.entity.DiscordGuildScheduledEvent.id","location":"common/dev.kord.common.entity/-discord-guild-scheduled-event/id.html","searchKeys":["id","val id: Snowflake","dev.kord.common.entity.DiscordGuildScheduledEvent.id"]},{"name":"val id: Snowflake","description":"dev.kord.common.entity.DiscordIntegration.id","location":"common/dev.kord.common.entity/-discord-integration/id.html","searchKeys":["id","val id: Snowflake","dev.kord.common.entity.DiscordIntegration.id"]},{"name":"val id: Snowflake","description":"dev.kord.common.entity.DiscordInteraction.id","location":"common/dev.kord.common.entity/-discord-interaction/id.html","searchKeys":["id","val id: Snowflake","dev.kord.common.entity.DiscordInteraction.id"]},{"name":"val id: Snowflake","description":"dev.kord.common.entity.DiscordMentionedChannel.id","location":"common/dev.kord.common.entity/-discord-mentioned-channel/id.html","searchKeys":["id","val id: Snowflake","dev.kord.common.entity.DiscordMentionedChannel.id"]},{"name":"val id: Snowflake","description":"dev.kord.common.entity.DiscordMessage.id","location":"common/dev.kord.common.entity/-discord-message/id.html","searchKeys":["id","val id: Snowflake","dev.kord.common.entity.DiscordMessage.id"]},{"name":"val id: Snowflake","description":"dev.kord.common.entity.DiscordMessageInteraction.id","location":"common/dev.kord.common.entity/-discord-message-interaction/id.html","searchKeys":["id","val id: Snowflake","dev.kord.common.entity.DiscordMessageInteraction.id"]},{"name":"val id: Snowflake","description":"dev.kord.common.entity.DiscordMessageSticker.id","location":"common/dev.kord.common.entity/-discord-message-sticker/id.html","searchKeys":["id","val id: Snowflake","dev.kord.common.entity.DiscordMessageSticker.id"]},{"name":"val id: Snowflake","description":"dev.kord.common.entity.DiscordOptionallyMemberUser.id","location":"common/dev.kord.common.entity/-discord-optionally-member-user/id.html","searchKeys":["id","val id: Snowflake","dev.kord.common.entity.DiscordOptionallyMemberUser.id"]},{"name":"val id: Snowflake","description":"dev.kord.common.entity.DiscordPartialGuild.id","location":"common/dev.kord.common.entity/-discord-partial-guild/id.html","searchKeys":["id","val id: Snowflake","dev.kord.common.entity.DiscordPartialGuild.id"]},{"name":"val id: Snowflake","description":"dev.kord.common.entity.DiscordPartialIntegration.id","location":"common/dev.kord.common.entity/-discord-partial-integration/id.html","searchKeys":["id","val id: Snowflake","dev.kord.common.entity.DiscordPartialIntegration.id"]},{"name":"val id: Snowflake","description":"dev.kord.common.entity.DiscordPartialMessage.id","location":"common/dev.kord.common.entity/-discord-partial-message/id.html","searchKeys":["id","val id: Snowflake","dev.kord.common.entity.DiscordPartialMessage.id"]},{"name":"val id: Snowflake","description":"dev.kord.common.entity.DiscordPartialRole.id","location":"common/dev.kord.common.entity/-discord-partial-role/id.html","searchKeys":["id","val id: Snowflake","dev.kord.common.entity.DiscordPartialRole.id"]},{"name":"val id: Snowflake","description":"dev.kord.common.entity.DiscordPresenceUser.id","location":"common/dev.kord.common.entity/-discord-presence-user/id.html","searchKeys":["id","val id: Snowflake","dev.kord.common.entity.DiscordPresenceUser.id"]},{"name":"val id: Snowflake","description":"dev.kord.common.entity.DiscordRole.id","location":"common/dev.kord.common.entity/-discord-role/id.html","searchKeys":["id","val id: Snowflake","dev.kord.common.entity.DiscordRole.id"]},{"name":"val id: Snowflake","description":"dev.kord.common.entity.DiscordStageInstance.id","location":"common/dev.kord.common.entity/-discord-stage-instance/id.html","searchKeys":["id","val id: Snowflake","dev.kord.common.entity.DiscordStageInstance.id"]},{"name":"val id: Snowflake","description":"dev.kord.common.entity.DiscordStickerItem.id","location":"common/dev.kord.common.entity/-discord-sticker-item/id.html","searchKeys":["id","val id: Snowflake","dev.kord.common.entity.DiscordStickerItem.id"]},{"name":"val id: Snowflake","description":"dev.kord.common.entity.DiscordStickerPack.id","location":"common/dev.kord.common.entity/-discord-sticker-pack/id.html","searchKeys":["id","val id: Snowflake","dev.kord.common.entity.DiscordStickerPack.id"]},{"name":"val id: Snowflake","description":"dev.kord.common.entity.DiscordTeam.id","location":"common/dev.kord.common.entity/-discord-team/id.html","searchKeys":["id","val id: Snowflake","dev.kord.common.entity.DiscordTeam.id"]},{"name":"val id: Snowflake","description":"dev.kord.common.entity.DiscordUnavailableGuild.id","location":"common/dev.kord.common.entity/-discord-unavailable-guild/id.html","searchKeys":["id","val id: Snowflake","dev.kord.common.entity.DiscordUnavailableGuild.id"]},{"name":"val id: Snowflake","description":"dev.kord.common.entity.DiscordUser.id","location":"common/dev.kord.common.entity/-discord-user/id.html","searchKeys":["id","val id: Snowflake","dev.kord.common.entity.DiscordUser.id"]},{"name":"val id: Snowflake","description":"dev.kord.common.entity.DiscordWebhook.id","location":"common/dev.kord.common.entity/-discord-webhook/id.html","searchKeys":["id","val id: Snowflake","dev.kord.common.entity.DiscordWebhook.id"]},{"name":"val id: Snowflake","description":"dev.kord.common.entity.IntegrationApplication.id","location":"common/dev.kord.common.entity/-integration-application/id.html","searchKeys":["id","val id: Snowflake","dev.kord.common.entity.IntegrationApplication.id"]},{"name":"val id: Snowflake","description":"dev.kord.common.entity.MessageApplication.id","location":"common/dev.kord.common.entity/-message-application/id.html","searchKeys":["id","val id: Snowflake","dev.kord.common.entity.MessageApplication.id"]},{"name":"val id: Snowflake","description":"dev.kord.common.entity.Overwrite.id","location":"common/dev.kord.common.entity/-overwrite/id.html","searchKeys":["id","val id: Snowflake","dev.kord.common.entity.Overwrite.id"]},{"name":"val id: Snowflake?","description":"dev.kord.common.entity.DiscordEmoji.id","location":"common/dev.kord.common.entity/-discord-emoji/id.html","searchKeys":["id","val id: Snowflake?","dev.kord.common.entity.DiscordEmoji.id"]},{"name":"val id: Snowflake? = null","description":"dev.kord.common.entity.DiscordPartialEmoji.id","location":"common/dev.kord.common.entity/-discord-partial-emoji/id.html","searchKeys":["id","val id: Snowflake? = null","dev.kord.common.entity.DiscordPartialEmoji.id"]},{"name":"val id: String","description":"dev.kord.common.entity.DiscordAuditLogRoleChange.id","location":"common/dev.kord.common.entity/-discord-audit-log-role-change/id.html","searchKeys":["id","val id: String","dev.kord.common.entity.DiscordAuditLogRoleChange.id"]},{"name":"val id: String","description":"dev.kord.common.entity.DiscordConnection.id","location":"common/dev.kord.common.entity/-discord-connection/id.html","searchKeys":["id","val id: String","dev.kord.common.entity.DiscordConnection.id"]},{"name":"val id: String","description":"dev.kord.common.entity.DiscordIntegrationAccount.id","location":"common/dev.kord.common.entity/-discord-integration-account/id.html","searchKeys":["id","val id: String","dev.kord.common.entity.DiscordIntegrationAccount.id"]},{"name":"val id: String","description":"dev.kord.common.entity.DiscordIntegrationsAccount.id","location":"common/dev.kord.common.entity/-discord-integrations-account/id.html","searchKeys":["id","val id: String","dev.kord.common.entity.DiscordIntegrationsAccount.id"]},{"name":"val id: String","description":"dev.kord.common.entity.DiscordVoiceRegion.id","location":"common/dev.kord.common.entity/-discord-voice-region/id.html","searchKeys":["id","val id: String","dev.kord.common.entity.DiscordVoiceRegion.id"]},{"name":"val ids: List<Snowflake>","description":"dev.kord.common.entity.BulkDeleteData.ids","location":"common/dev.kord.common.entity/-bulk-delete-data/ids.html","searchKeys":["ids","val ids: List<Snowflake>","dev.kord.common.entity.BulkDeleteData.ids"]},{"name":"val image: Optional<DiscordEmbed.Image>","description":"dev.kord.common.entity.DiscordEmbed.image","location":"common/dev.kord.common.entity/-discord-embed/image.html","searchKeys":["image","val image: Optional<DiscordEmbed.Image>","dev.kord.common.entity.DiscordEmbed.image"]},{"name":"val image: Optional<String?>","description":"dev.kord.common.entity.DiscordGuildScheduledEvent.image","location":"common/dev.kord.common.entity/-discord-guild-scheduled-event/image.html","searchKeys":["image","val image: Optional<String?>","dev.kord.common.entity.DiscordGuildScheduledEvent.image"]},{"name":"val increment: UShort","description":"dev.kord.common.entity.Snowflake.increment","location":"common/dev.kord.common.entity/-snowflake/increment.html","searchKeys":["increment","val increment: UShort","dev.kord.common.entity.Snowflake.increment"]},{"name":"val index: Int","description":"dev.kord.common.entity.DiscordShard.index","location":"common/dev.kord.common.entity/-discord-shard/--index--.html","searchKeys":["index","val index: Int","dev.kord.common.entity.DiscordShard.index"]},{"name":"val inline: OptionalBoolean","description":"dev.kord.common.entity.DiscordEmbed.Field.inline","location":"common/dev.kord.common.entity/-discord-embed/-field/inline.html","searchKeys":["inline","val inline: OptionalBoolean","dev.kord.common.entity.DiscordEmbed.Field.inline"]},{"name":"val instance: OptionalBoolean","description":"dev.kord.common.entity.DiscordActivity.instance","location":"common/dev.kord.common.entity/-discord-activity/instance.html","searchKeys":["instance","val instance: OptionalBoolean","dev.kord.common.entity.DiscordActivity.instance"]},{"name":"val integrationId: OptionalSnowflake","description":"dev.kord.common.entity.DiscordRoleTags.integrationId","location":"common/dev.kord.common.entity/-discord-role-tags/integration-id.html","searchKeys":["integrationId","val integrationId: OptionalSnowflake","dev.kord.common.entity.DiscordRoleTags.integrationId"]},{"name":"val integrations: List<DiscordPartialIntegration>","description":"dev.kord.common.entity.DiscordAuditLog.integrations","location":"common/dev.kord.common.entity/-discord-audit-log/integrations.html","searchKeys":["integrations","val integrations: List<DiscordPartialIntegration>","dev.kord.common.entity.DiscordAuditLog.integrations"]},{"name":"val integrations: Optional<List<DiscordIntegration>>","description":"dev.kord.common.entity.DiscordConnection.integrations","location":"common/dev.kord.common.entity/-discord-connection/integrations.html","searchKeys":["integrations","val integrations: Optional<List<DiscordIntegration>>","dev.kord.common.entity.DiscordConnection.integrations"]},{"name":"val interaction: Optional<DiscordMessageInteraction>","description":"dev.kord.common.entity.DiscordMessage.interaction","location":"common/dev.kord.common.entity/-discord-message/interaction.html","searchKeys":["interaction","val interaction: Optional<DiscordMessageInteraction>","dev.kord.common.entity.DiscordMessage.interaction"]},{"name":"val interaction: Optional<DiscordMessageInteraction>","description":"dev.kord.common.entity.DiscordPartialMessage.interaction","location":"common/dev.kord.common.entity/-discord-partial-message/interaction.html","searchKeys":["interaction","val interaction: Optional<DiscordMessageInteraction>","dev.kord.common.entity.DiscordPartialMessage.interaction"]},{"name":"val invitable: OptionalBoolean","description":"dev.kord.common.entity.DiscordThreadMetadata.invitable","location":"common/dev.kord.common.entity/-discord-thread-metadata/invitable.html","searchKeys":["invitable","val invitable: OptionalBoolean","dev.kord.common.entity.DiscordThreadMetadata.invitable"]},{"name":"val isDirty: Boolean?","description":"dev.kord.common.entity.DiscordTemplate.isDirty","location":"common/dev.kord.common.entity/-discord-template/is-dirty.html","searchKeys":["isDirty","val isDirty: Boolean?","dev.kord.common.entity.DiscordTemplate.isDirty"]},{"name":"val isEmpty: Boolean","description":"dev.kord.common.DiscordBitSet.isEmpty","location":"common/dev.kord.common/-discord-bit-set/is-empty.html","searchKeys":["isEmpty","val isEmpty: Boolean","dev.kord.common.DiscordBitSet.isEmpty"]},{"name":"val join: Optional<String>","description":"dev.kord.common.entity.DiscordActivitySecrets.join","location":"common/dev.kord.common.entity/-discord-activity-secrets/join.html","searchKeys":["join","val join: Optional<String>","dev.kord.common.entity.DiscordActivitySecrets.join"]},{"name":"val joinTimestamp: Instant","description":"dev.kord.common.entity.DiscordThreadMember.joinTimestamp","location":"common/dev.kord.common.entity/-discord-thread-member/join-timestamp.html","searchKeys":["joinTimestamp","val joinTimestamp: Instant","dev.kord.common.entity.DiscordThreadMember.joinTimestamp"]},{"name":"val joinedAt: Instant","description":"dev.kord.common.entity.DiscordAddedGuildMember.joinedAt","location":"common/dev.kord.common.entity/-discord-added-guild-member/joined-at.html","searchKeys":["joinedAt","val joinedAt: Instant","dev.kord.common.entity.DiscordAddedGuildMember.joinedAt"]},{"name":"val joinedAt: Instant","description":"dev.kord.common.entity.DiscordGuildMember.joinedAt","location":"common/dev.kord.common.entity/-discord-guild-member/joined-at.html","searchKeys":["joinedAt","val joinedAt: Instant","dev.kord.common.entity.DiscordGuildMember.joinedAt"]},{"name":"val joinedAt: Instant","description":"dev.kord.common.entity.DiscordInteractionGuildMember.joinedAt","location":"common/dev.kord.common.entity/-discord-interaction-guild-member/joined-at.html","searchKeys":["joinedAt","val joinedAt: Instant","dev.kord.common.entity.DiscordInteractionGuildMember.joinedAt"]},{"name":"val joinedAt: Instant","description":"dev.kord.common.entity.DiscordUpdatedGuildMember.joinedAt","location":"common/dev.kord.common.entity/-discord-updated-guild-member/joined-at.html","searchKeys":["joinedAt","val joinedAt: Instant","dev.kord.common.entity.DiscordUpdatedGuildMember.joinedAt"]},{"name":"val joinedAt: Optional<Instant>","description":"dev.kord.common.entity.DiscordGuild.joinedAt","location":"common/dev.kord.common.entity/-discord-guild/joined-at.html","searchKeys":["joinedAt","val joinedAt: Optional<Instant>","dev.kord.common.entity.DiscordGuild.joinedAt"]},{"name":"val key: AuditLogChangeKey<T>","description":"dev.kord.common.entity.AuditLogChange.key","location":"common/dev.kord.common.entity/-audit-log-change/key.html","searchKeys":["key","val key: AuditLogChangeKey<T>","dev.kord.common.entity.AuditLogChange.key"]},{"name":"val keywordFilter: Optional<List<String>>","description":"dev.kord.common.entity.DiscordAutoModerationRuleTriggerMetadata.keywordFilter","location":"common/dev.kord.common.entity/-discord-auto-moderation-rule-trigger-metadata/keyword-filter.html","searchKeys":["keywordFilter","val keywordFilter: Optional<List<String>>","dev.kord.common.entity.DiscordAutoModerationRuleTriggerMetadata.keywordFilter"]},{"name":"val label: String","description":"dev.kord.common.entity.DiscordSelectOption.label","location":"common/dev.kord.common.entity/-discord-select-option/label.html","searchKeys":["label","val label: String","dev.kord.common.entity.DiscordSelectOption.label"]},{"name":"val language: String","description":"dev.kord.common.Locale.language","location":"common/dev.kord.common/-locale/language.html","searchKeys":["language","val language: String","dev.kord.common.Locale.language"]},{"name":"val large: OptionalBoolean","description":"dev.kord.common.entity.DiscordGuild.large","location":"common/dev.kord.common.entity/-discord-guild/large.html","searchKeys":["large","val large: OptionalBoolean","dev.kord.common.entity.DiscordGuild.large"]},{"name":"val largeImage: Optional<String>","description":"dev.kord.common.entity.DiscordActivityAssets.largeImage","location":"common/dev.kord.common.entity/-discord-activity-assets/large-image.html","searchKeys":["largeImage","val largeImage: Optional<String>","dev.kord.common.entity.DiscordActivityAssets.largeImage"]},{"name":"val largeText: Optional<String>","description":"dev.kord.common.entity.DiscordActivityAssets.largeText","location":"common/dev.kord.common.entity/-discord-activity-assets/large-text.html","searchKeys":["largeText","val largeText: Optional<String>","dev.kord.common.entity.DiscordActivityAssets.largeText"]},{"name":"val lastMessageId: OptionalSnowflake?","description":"dev.kord.common.entity.DiscordChannel.lastMessageId","location":"common/dev.kord.common.entity/-discord-channel/last-message-id.html","searchKeys":["lastMessageId","val lastMessageId: OptionalSnowflake?","dev.kord.common.entity.DiscordChannel.lastMessageId"]},{"name":"val lastPinTimestamp: Optional<Instant?>","description":"dev.kord.common.entity.DiscordChannel.lastPinTimestamp","location":"common/dev.kord.common.entity/-discord-channel/last-pin-timestamp.html","searchKeys":["lastPinTimestamp","val lastPinTimestamp: Optional<Instant?>","dev.kord.common.entity.DiscordChannel.lastPinTimestamp"]},{"name":"val lastPinTimestamp: Optional<Instant?>","description":"dev.kord.common.entity.DiscordPinsUpdateData.lastPinTimestamp","location":"common/dev.kord.common.entity/-discord-pins-update-data/last-pin-timestamp.html","searchKeys":["lastPinTimestamp","val lastPinTimestamp: Optional<Instant?>","dev.kord.common.entity.DiscordPinsUpdateData.lastPinTimestamp"]},{"name":"val locale: Optional<Locale>","description":"dev.kord.common.entity.DiscordInteraction.locale","location":"common/dev.kord.common.entity/-discord-interaction/locale.html","searchKeys":["locale","val locale: Optional<Locale>","dev.kord.common.entity.DiscordInteraction.locale"]},{"name":"val locale: Optional<String>","description":"dev.kord.common.entity.DiscordOptionallyMemberUser.locale","location":"common/dev.kord.common.entity/-discord-optionally-member-user/locale.html","searchKeys":["locale","val locale: Optional<String>","dev.kord.common.entity.DiscordOptionallyMemberUser.locale"]},{"name":"val locale: Optional<String>","description":"dev.kord.common.entity.DiscordUser.locale","location":"common/dev.kord.common.entity/-discord-user/locale.html","searchKeys":["locale","val locale: Optional<String>","dev.kord.common.entity.DiscordUser.locale"]},{"name":"val location: Optional<String>","description":"dev.kord.common.entity.GuildScheduledEventEntityMetadata.location","location":"common/dev.kord.common.entity/-guild-scheduled-event-entity-metadata/location.html","searchKeys":["location","val location: Optional<String>","dev.kord.common.entity.GuildScheduledEventEntityMetadata.location"]},{"name":"val locked: OptionalBoolean","description":"dev.kord.common.entity.DiscordThreadMetadata.locked","location":"common/dev.kord.common.entity/-discord-thread-metadata/locked.html","searchKeys":["locked","val locked: OptionalBoolean","dev.kord.common.entity.DiscordThreadMetadata.locked"]},{"name":"val managed: Boolean","description":"dev.kord.common.entity.DiscordRole.managed","location":"common/dev.kord.common.entity/-discord-role/managed.html","searchKeys":["managed","val managed: Boolean","dev.kord.common.entity.DiscordRole.managed"]},{"name":"val managed: Boolean? = null","description":"dev.kord.common.entity.DiscordAuditLogRoleChange.managed","location":"common/dev.kord.common.entity/-discord-audit-log-role-change/managed.html","searchKeys":["managed","val managed: Boolean? = null","dev.kord.common.entity.DiscordAuditLogRoleChange.managed"]},{"name":"val managed: OptionalBoolean","description":"dev.kord.common.entity.DiscordEmoji.managed","location":"common/dev.kord.common.entity/-discord-emoji/managed.html","searchKeys":["managed","val managed: OptionalBoolean","dev.kord.common.entity.DiscordEmoji.managed"]},{"name":"val managed: OptionalBoolean","description":"dev.kord.common.entity.DiscordPartialRole.managed","location":"common/dev.kord.common.entity/-discord-partial-role/managed.html","searchKeys":["managed","val managed: OptionalBoolean","dev.kord.common.entity.DiscordPartialRole.managed"]},{"name":"val match: Optional<String>","description":"dev.kord.common.entity.DiscordActivitySecrets.match","location":"common/dev.kord.common.entity/-discord-activity-secrets/match.html","searchKeys":["match","val match: Optional<String>","dev.kord.common.entity.DiscordActivitySecrets.match"]},{"name":"val max: Snowflake","description":"dev.kord.common.entity.Snowflake.Companion.max","location":"common/dev.kord.common.entity/-snowflake/-companion/max.html","searchKeys":["max","val max: Snowflake","dev.kord.common.entity.Snowflake.Companion.max"]},{"name":"val maxAge: DurationInSeconds","description":"dev.kord.common.entity.DiscordInviteWithMetadata.maxAge","location":"common/dev.kord.common.entity/-discord-invite-with-metadata/max-age.html","searchKeys":["maxAge","val maxAge: DurationInSeconds","dev.kord.common.entity.DiscordInviteWithMetadata.maxAge"]},{"name":"val maxLength: OptionalInt","description":"dev.kord.common.entity.ApplicationCommandOption.maxLength","location":"common/dev.kord.common.entity/-application-command-option/max-length.html","searchKeys":["maxLength","val maxLength: OptionalInt","dev.kord.common.entity.ApplicationCommandOption.maxLength"]},{"name":"val maxMembers: OptionalInt","description":"dev.kord.common.entity.DiscordGuild.maxMembers","location":"common/dev.kord.common.entity/-discord-guild/max-members.html","searchKeys":["maxMembers","val maxMembers: OptionalInt","dev.kord.common.entity.DiscordGuild.maxMembers"]},{"name":"val maxPresences: OptionalInt?","description":"dev.kord.common.entity.DiscordGuild.maxPresences","location":"common/dev.kord.common.entity/-discord-guild/max-presences.html","searchKeys":["maxPresences","val maxPresences: OptionalInt?","dev.kord.common.entity.DiscordGuild.maxPresences"]},{"name":"val maxUses: Int","description":"dev.kord.common.entity.DiscordInviteWithMetadata.maxUses","location":"common/dev.kord.common.entity/-discord-invite-with-metadata/max-uses.html","searchKeys":["maxUses","val maxUses: Int","dev.kord.common.entity.DiscordInviteWithMetadata.maxUses"]},{"name":"val maxValue: Optional<JsonPrimitive>","description":"dev.kord.common.entity.ApplicationCommandOption.maxValue","location":"common/dev.kord.common.entity/-application-command-option/max-value.html","searchKeys":["maxValue","val maxValue: Optional<JsonPrimitive>","dev.kord.common.entity.ApplicationCommandOption.maxValue"]},{"name":"val maxVideoChannelUsers: OptionalInt","description":"dev.kord.common.entity.DiscordGuild.maxVideoChannelUsers","location":"common/dev.kord.common.entity/-discord-guild/max-video-channel-users.html","searchKeys":["maxVideoChannelUsers","val maxVideoChannelUsers: OptionalInt","dev.kord.common.entity.DiscordGuild.maxVideoChannelUsers"]},{"name":"val maximum: Int","description":"dev.kord.common.entity.DiscordActivityPartySize.maximum","location":"common/dev.kord.common.entity/-discord-activity-party-size/maximum.html","searchKeys":["maximum","val maximum: Int","dev.kord.common.entity.DiscordActivityPartySize.maximum"]},{"name":"val me: Boolean","description":"dev.kord.common.entity.Reaction.me","location":"common/dev.kord.common.entity/-reaction/me.html","searchKeys":["me","val me: Boolean","dev.kord.common.entity.Reaction.me"]},{"name":"val member: Optional<DiscordGuildMember>","description":"dev.kord.common.entity.DiscordMessage.member","location":"common/dev.kord.common.entity/-discord-message/member.html","searchKeys":["member","val member: Optional<DiscordGuildMember>","dev.kord.common.entity.DiscordMessage.member"]},{"name":"val member: Optional<DiscordGuildMember>","description":"dev.kord.common.entity.DiscordOptionallyMemberUser.member","location":"common/dev.kord.common.entity/-discord-optionally-member-user/member.html","searchKeys":["member","val member: Optional<DiscordGuildMember>","dev.kord.common.entity.DiscordOptionallyMemberUser.member"]},{"name":"val member: Optional<DiscordGuildMember>","description":"dev.kord.common.entity.DiscordPartialMessage.member","location":"common/dev.kord.common.entity/-discord-partial-message/member.html","searchKeys":["member","val member: Optional<DiscordGuildMember>","dev.kord.common.entity.DiscordPartialMessage.member"]},{"name":"val member: Optional<DiscordGuildMember>","description":"dev.kord.common.entity.DiscordTyping.member","location":"common/dev.kord.common.entity/-discord-typing/member.html","searchKeys":["member","val member: Optional<DiscordGuildMember>","dev.kord.common.entity.DiscordTyping.member"]},{"name":"val member: Optional<DiscordGuildMember>","description":"dev.kord.common.entity.DiscordVoiceState.member","location":"common/dev.kord.common.entity/-discord-voice-state/member.html","searchKeys":["member","val member: Optional<DiscordGuildMember>","dev.kord.common.entity.DiscordVoiceState.member"]},{"name":"val member: Optional<DiscordGuildMember>","description":"dev.kord.common.entity.MessageReactionAddData.member","location":"common/dev.kord.common.entity/-message-reaction-add-data/member.html","searchKeys":["member","val member: Optional<DiscordGuildMember>","dev.kord.common.entity.MessageReactionAddData.member"]},{"name":"val member: Optional<DiscordInteractionGuildMember>","description":"dev.kord.common.entity.DiscordInteraction.member","location":"common/dev.kord.common.entity/-discord-interaction/member.html","searchKeys":["member","val member: Optional<DiscordInteractionGuildMember>","dev.kord.common.entity.DiscordInteraction.member"]},{"name":"val member: Optional<DiscordThreadMember>","description":"dev.kord.common.entity.DiscordChannel.member","location":"common/dev.kord.common.entity/-discord-channel/member.html","searchKeys":["member","val member: Optional<DiscordThreadMember>","dev.kord.common.entity.DiscordChannel.member"]},{"name":"val memberCount: OptionalInt","description":"dev.kord.common.entity.DiscordChannel.memberCount","location":"common/dev.kord.common.entity/-discord-channel/member-count.html","searchKeys":["memberCount","val memberCount: OptionalInt","dev.kord.common.entity.DiscordChannel.memberCount"]},{"name":"val memberCount: OptionalInt","description":"dev.kord.common.entity.DiscordGuild.memberCount","location":"common/dev.kord.common.entity/-discord-guild/member-count.html","searchKeys":["memberCount","val memberCount: OptionalInt","dev.kord.common.entity.DiscordGuild.memberCount"]},{"name":"val members: List<DiscordTeamMember>","description":"dev.kord.common.entity.DiscordTeam.members","location":"common/dev.kord.common.entity/-discord-team/members.html","searchKeys":["members","val members: List<DiscordTeamMember>","dev.kord.common.entity.DiscordTeam.members"]},{"name":"val members: Optional<List<DiscordGuildMember>>","description":"dev.kord.common.entity.DiscordGuild.members","location":"common/dev.kord.common.entity/-discord-guild/members.html","searchKeys":["members","val members: Optional<List<DiscordGuildMember>>","dev.kord.common.entity.DiscordGuild.members"]},{"name":"val members: Optional<Map<Snowflake, DiscordInteractionGuildMember>>","description":"dev.kord.common.entity.ResolvedObjects.members","location":"common/dev.kord.common.entity/-resolved-objects/members.html","searchKeys":["members","val members: Optional<Map<Snowflake, DiscordInteractionGuildMember>>","dev.kord.common.entity.ResolvedObjects.members"]},{"name":"val membersRemoved: Optional<String>","description":"dev.kord.common.entity.AuditLogEntryOptionalInfo.membersRemoved","location":"common/dev.kord.common.entity/-audit-log-entry-optional-info/members-removed.html","searchKeys":["membersRemoved","val membersRemoved: Optional<String>","dev.kord.common.entity.AuditLogEntryOptionalInfo.membersRemoved"]},{"name":"val membershipState: TeamMembershipState","description":"dev.kord.common.entity.DiscordTeamMember.membershipState","location":"common/dev.kord.common.entity/-discord-team-member/membership-state.html","searchKeys":["membershipState","val membershipState: TeamMembershipState","dev.kord.common.entity.DiscordTeamMember.membershipState"]},{"name":"val mentionEveryone: Boolean","description":"dev.kord.common.entity.DiscordMessage.mentionEveryone","location":"common/dev.kord.common.entity/-discord-message/mention-everyone.html","searchKeys":["mentionEveryone","val mentionEveryone: Boolean","dev.kord.common.entity.DiscordMessage.mentionEveryone"]},{"name":"val mentionEveryone: OptionalBoolean","description":"dev.kord.common.entity.DiscordPartialMessage.mentionEveryone","location":"common/dev.kord.common.entity/-discord-partial-message/mention-everyone.html","searchKeys":["mentionEveryone","val mentionEveryone: OptionalBoolean","dev.kord.common.entity.DiscordPartialMessage.mentionEveryone"]},{"name":"val mentionRoles: List<Snowflake>","description":"dev.kord.common.entity.DiscordMessage.mentionRoles","location":"common/dev.kord.common.entity/-discord-message/mention-roles.html","searchKeys":["mentionRoles","val mentionRoles: List<Snowflake>","dev.kord.common.entity.DiscordMessage.mentionRoles"]},{"name":"val mentionRoles: Optional<List<Snowflake>>","description":"dev.kord.common.entity.DiscordPartialMessage.mentionRoles","location":"common/dev.kord.common.entity/-discord-partial-message/mention-roles.html","searchKeys":["mentionRoles","val mentionRoles: Optional<List<Snowflake>>","dev.kord.common.entity.DiscordPartialMessage.mentionRoles"]},{"name":"val mentionTotalLimit: OptionalInt","description":"dev.kord.common.entity.DiscordAutoModerationRuleTriggerMetadata.mentionTotalLimit","location":"common/dev.kord.common.entity/-discord-auto-moderation-rule-trigger-metadata/mention-total-limit.html","searchKeys":["mentionTotalLimit","val mentionTotalLimit: OptionalInt","dev.kord.common.entity.DiscordAutoModerationRuleTriggerMetadata.mentionTotalLimit"]},{"name":"val mentionable: Boolean","description":"dev.kord.common.entity.DiscordRole.mentionable","location":"common/dev.kord.common.entity/-discord-role/mentionable.html","searchKeys":["mentionable","val mentionable: Boolean","dev.kord.common.entity.DiscordRole.mentionable"]},{"name":"val mentionable: Boolean? = null","description":"dev.kord.common.entity.DiscordAuditLogRoleChange.mentionable","location":"common/dev.kord.common.entity/-discord-audit-log-role-change/mentionable.html","searchKeys":["mentionable","val mentionable: Boolean? = null","dev.kord.common.entity.DiscordAuditLogRoleChange.mentionable"]},{"name":"val mentionable: OptionalBoolean","description":"dev.kord.common.entity.DiscordPartialRole.mentionable","location":"common/dev.kord.common.entity/-discord-partial-role/mentionable.html","searchKeys":["mentionable","val mentionable: OptionalBoolean","dev.kord.common.entity.DiscordPartialRole.mentionable"]},{"name":"val mentionedChannels: Optional<List<DiscordMentionedChannel>>","description":"dev.kord.common.entity.DiscordMessage.mentionedChannels","location":"common/dev.kord.common.entity/-discord-message/mentioned-channels.html","searchKeys":["mentionedChannels","val mentionedChannels: Optional<List<DiscordMentionedChannel>>","dev.kord.common.entity.DiscordMessage.mentionedChannels"]},{"name":"val mentionedChannels: Optional<List<DiscordMentionedChannel>>","description":"dev.kord.common.entity.DiscordPartialMessage.mentionedChannels","location":"common/dev.kord.common.entity/-discord-partial-message/mentioned-channels.html","searchKeys":["mentionedChannels","val mentionedChannels: Optional<List<DiscordMentionedChannel>>","dev.kord.common.entity.DiscordPartialMessage.mentionedChannels"]},{"name":"val mentions: List<DiscordOptionallyMemberUser>","description":"dev.kord.common.entity.DiscordMessage.mentions","location":"common/dev.kord.common.entity/-discord-message/mentions.html","searchKeys":["mentions","val mentions: List<DiscordOptionallyMemberUser>","dev.kord.common.entity.DiscordMessage.mentions"]},{"name":"val mentions: Optional<List<DiscordOptionallyMemberUser>>","description":"dev.kord.common.entity.DiscordPartialMessage.mentions","location":"common/dev.kord.common.entity/-discord-partial-message/mentions.html","searchKeys":["mentions","val mentions: Optional<List<DiscordOptionallyMemberUser>>","dev.kord.common.entity.DiscordPartialMessage.mentions"]},{"name":"val message: Optional<DiscordMessage>","description":"dev.kord.common.entity.DiscordInteraction.message","location":"common/dev.kord.common.entity/-discord-interaction/message.html","searchKeys":["message","val message: Optional<DiscordMessage>","dev.kord.common.entity.DiscordInteraction.message"]},{"name":"val messageCount: OptionalInt","description":"dev.kord.common.entity.DiscordChannel.messageCount","location":"common/dev.kord.common.entity/-discord-channel/message-count.html","searchKeys":["messageCount","val messageCount: OptionalInt","dev.kord.common.entity.DiscordChannel.messageCount"]},{"name":"val messageId: OptionalSnowflake","description":"dev.kord.common.entity.AuditLogEntryOptionalInfo.messageId","location":"common/dev.kord.common.entity/-audit-log-entry-optional-info/message-id.html","searchKeys":["messageId","val messageId: OptionalSnowflake","dev.kord.common.entity.AuditLogEntryOptionalInfo.messageId"]},{"name":"val messageId: Snowflake","description":"dev.kord.common.entity.AllRemovedMessageReactions.messageId","location":"common/dev.kord.common.entity/-all-removed-message-reactions/message-id.html","searchKeys":["messageId","val messageId: Snowflake","dev.kord.common.entity.AllRemovedMessageReactions.messageId"]},{"name":"val messageId: Snowflake","description":"dev.kord.common.entity.MessageReactionAddData.messageId","location":"common/dev.kord.common.entity/-message-reaction-add-data/message-id.html","searchKeys":["messageId","val messageId: Snowflake","dev.kord.common.entity.MessageReactionAddData.messageId"]},{"name":"val messageId: Snowflake","description":"dev.kord.common.entity.MessageReactionRemoveData.messageId","location":"common/dev.kord.common.entity/-message-reaction-remove-data/message-id.html","searchKeys":["messageId","val messageId: Snowflake","dev.kord.common.entity.MessageReactionRemoveData.messageId"]},{"name":"val messageReference: Optional<DiscordMessageReference>","description":"dev.kord.common.entity.DiscordMessage.messageReference","location":"common/dev.kord.common.entity/-discord-message/message-reference.html","searchKeys":["messageReference","val messageReference: Optional<DiscordMessageReference>","dev.kord.common.entity.DiscordMessage.messageReference"]},{"name":"val messageReference: Optional<DiscordMessageReference>","description":"dev.kord.common.entity.DiscordPartialMessage.messageReference","location":"common/dev.kord.common.entity/-discord-partial-message/message-reference.html","searchKeys":["messageReference","val messageReference: Optional<DiscordMessageReference>","dev.kord.common.entity.DiscordPartialMessage.messageReference"]},{"name":"val messages: Optional<Map<Snowflake, DiscordMessage>>","description":"dev.kord.common.entity.ResolvedObjects.messages","location":"common/dev.kord.common.entity/-resolved-objects/messages.html","searchKeys":["messages","val messages: Optional<Map<Snowflake, DiscordMessage>>","dev.kord.common.entity.ResolvedObjects.messages"]},{"name":"val metadata: Optional<DiscordAutoModerationActionMetadata>","description":"dev.kord.common.entity.DiscordAutoModerationAction.metadata","location":"common/dev.kord.common.entity/-discord-auto-moderation-action/metadata.html","searchKeys":["metadata","val metadata: Optional<DiscordAutoModerationActionMetadata>","dev.kord.common.entity.DiscordAutoModerationAction.metadata"]},{"name":"val mfaEnabled: OptionalBoolean","description":"dev.kord.common.entity.DiscordOptionallyMemberUser.mfaEnabled","location":"common/dev.kord.common.entity/-discord-optionally-member-user/mfa-enabled.html","searchKeys":["mfaEnabled","val mfaEnabled: OptionalBoolean","dev.kord.common.entity.DiscordOptionallyMemberUser.mfaEnabled"]},{"name":"val mfaEnabled: OptionalBoolean","description":"dev.kord.common.entity.DiscordUser.mfaEnabled","location":"common/dev.kord.common.entity/-discord-user/mfa-enabled.html","searchKeys":["mfaEnabled","val mfaEnabled: OptionalBoolean","dev.kord.common.entity.DiscordUser.mfaEnabled"]},{"name":"val mfaLevel: MFALevel","description":"dev.kord.common.entity.DiscordGuild.mfaLevel","location":"common/dev.kord.common.entity/-discord-guild/mfa-level.html","searchKeys":["mfaLevel","val mfaLevel: MFALevel","dev.kord.common.entity.DiscordGuild.mfaLevel"]},{"name":"val min: Snowflake","description":"dev.kord.common.entity.Snowflake.Companion.min","location":"common/dev.kord.common.entity/-snowflake/-companion/min.html","searchKeys":["min","val min: Snowflake","dev.kord.common.entity.Snowflake.Companion.min"]},{"name":"val minLength: OptionalInt","description":"dev.kord.common.entity.ApplicationCommandOption.minLength","location":"common/dev.kord.common.entity/-application-command-option/min-length.html","searchKeys":["minLength","val minLength: OptionalInt","dev.kord.common.entity.ApplicationCommandOption.minLength"]},{"name":"val minValue: Optional<JsonPrimitive>","description":"dev.kord.common.entity.ApplicationCommandOption.minValue","location":"common/dev.kord.common.entity/-application-command-option/min-value.html","searchKeys":["minValue","val minValue: Optional<JsonPrimitive>","dev.kord.common.entity.ApplicationCommandOption.minValue"]},{"name":"val mobile: Optional<PresenceStatus>","description":"dev.kord.common.entity.DiscordClientStatus.mobile","location":"common/dev.kord.common.entity/-discord-client-status/mobile.html","searchKeys":["mobile","val mobile: Optional<PresenceStatus>","dev.kord.common.entity.DiscordClientStatus.mobile"]},{"name":"val mute: Boolean","description":"dev.kord.common.entity.DiscordAddedGuildMember.mute","location":"common/dev.kord.common.entity/-discord-added-guild-member/mute.html","searchKeys":["mute","val mute: Boolean","dev.kord.common.entity.DiscordAddedGuildMember.mute"]},{"name":"val mute: Boolean","description":"dev.kord.common.entity.DiscordVoiceState.mute","location":"common/dev.kord.common.entity/-discord-voice-state/mute.html","searchKeys":["mute","val mute: Boolean","dev.kord.common.entity.DiscordVoiceState.mute"]},{"name":"val mute: OptionalBoolean","description":"dev.kord.common.entity.DiscordGuildMember.mute","location":"common/dev.kord.common.entity/-discord-guild-member/mute.html","searchKeys":["mute","val mute: OptionalBoolean","dev.kord.common.entity.DiscordGuildMember.mute"]},{"name":"val name: Optional<String>","description":"dev.kord.common.entity.DiscordEmbed.Author.name","location":"common/dev.kord.common.entity/-discord-embed/-author/name.html","searchKeys":["name","val name: Optional<String>","dev.kord.common.entity.DiscordEmbed.Author.name"]},{"name":"val name: Optional<String>","description":"dev.kord.common.entity.DiscordEmbed.Provider.name","location":"common/dev.kord.common.entity/-discord-embed/-provider/name.html","searchKeys":["name","val name: Optional<String>","dev.kord.common.entity.DiscordEmbed.Provider.name"]},{"name":"val name: Optional<String>","description":"dev.kord.common.entity.DiscordPartialRole.name","location":"common/dev.kord.common.entity/-discord-partial-role/name.html","searchKeys":["name","val name: Optional<String>","dev.kord.common.entity.DiscordPartialRole.name"]},{"name":"val name: Optional<String>","description":"dev.kord.common.entity.InteractionCallbackData.name","location":"common/dev.kord.common.entity/-interaction-callback-data/name.html","searchKeys":["name","val name: Optional<String>","dev.kord.common.entity.InteractionCallbackData.name"]},{"name":"val name: Optional<String?>","description":"dev.kord.common.entity.DiscordChannel.name","location":"common/dev.kord.common.entity/-discord-channel/name.html","searchKeys":["name","val name: Optional<String?>","dev.kord.common.entity.DiscordChannel.name"]},{"name":"val name: String","description":"dev.kord.common.entity.ApplicationCommandOption.name","location":"common/dev.kord.common.entity/-application-command-option/name.html","searchKeys":["name","val name: String","dev.kord.common.entity.ApplicationCommandOption.name"]},{"name":"val name: String","description":"dev.kord.common.entity.AuditLogChangeKey.name","location":"common/dev.kord.common.entity/-audit-log-change-key/name.html","searchKeys":["name","val name: String","dev.kord.common.entity.AuditLogChangeKey.name"]},{"name":"val name: String","description":"dev.kord.common.entity.DiscordActivity.name","location":"common/dev.kord.common.entity/-discord-activity/name.html","searchKeys":["name","val name: String","dev.kord.common.entity.DiscordActivity.name"]},{"name":"val name: String","description":"dev.kord.common.entity.DiscordActivityEmoji.name","location":"common/dev.kord.common.entity/-discord-activity-emoji/name.html","searchKeys":["name","val name: String","dev.kord.common.entity.DiscordActivityEmoji.name"]},{"name":"val name: String","description":"dev.kord.common.entity.DiscordApplicationCommand.name","location":"common/dev.kord.common.entity/-discord-application-command/name.html","searchKeys":["name","val name: String","dev.kord.common.entity.DiscordApplicationCommand.name"]},{"name":"val name: String","description":"dev.kord.common.entity.DiscordAutoModerationRule.name","location":"common/dev.kord.common.entity/-discord-auto-moderation-rule/name.html","searchKeys":["name","val name: String","dev.kord.common.entity.DiscordAutoModerationRule.name"]},{"name":"val name: String","description":"dev.kord.common.entity.DiscordBotActivity.name","location":"common/dev.kord.common.entity/-discord-bot-activity/name.html","searchKeys":["name","val name: String","dev.kord.common.entity.DiscordBotActivity.name"]},{"name":"val name: String","description":"dev.kord.common.entity.DiscordConnection.name","location":"common/dev.kord.common.entity/-discord-connection/name.html","searchKeys":["name","val name: String","dev.kord.common.entity.DiscordConnection.name"]},{"name":"val name: String","description":"dev.kord.common.entity.DiscordEmbed.Field.name","location":"common/dev.kord.common.entity/-discord-embed/-field/name.html","searchKeys":["name","val name: String","dev.kord.common.entity.DiscordEmbed.Field.name"]},{"name":"val name: String","description":"dev.kord.common.entity.DiscordGuild.name","location":"common/dev.kord.common.entity/-discord-guild/name.html","searchKeys":["name","val name: String","dev.kord.common.entity.DiscordGuild.name"]},{"name":"val name: String","description":"dev.kord.common.entity.DiscordGuildPreview.name","location":"common/dev.kord.common.entity/-discord-guild-preview/name.html","searchKeys":["name","val name: String","dev.kord.common.entity.DiscordGuildPreview.name"]},{"name":"val name: String","description":"dev.kord.common.entity.DiscordGuildScheduledEvent.name","location":"common/dev.kord.common.entity/-discord-guild-scheduled-event/name.html","searchKeys":["name","val name: String","dev.kord.common.entity.DiscordGuildScheduledEvent.name"]},{"name":"val name: String","description":"dev.kord.common.entity.DiscordIntegration.name","location":"common/dev.kord.common.entity/-discord-integration/name.html","searchKeys":["name","val name: String","dev.kord.common.entity.DiscordIntegration.name"]},{"name":"val name: String","description":"dev.kord.common.entity.DiscordIntegrationAccount.name","location":"common/dev.kord.common.entity/-discord-integration-account/name.html","searchKeys":["name","val name: String","dev.kord.common.entity.DiscordIntegrationAccount.name"]},{"name":"val name: String","description":"dev.kord.common.entity.DiscordIntegrationsAccount.name","location":"common/dev.kord.common.entity/-discord-integrations-account/name.html","searchKeys":["name","val name: String","dev.kord.common.entity.DiscordIntegrationsAccount.name"]},{"name":"val name: String","description":"dev.kord.common.entity.DiscordMentionedChannel.name","location":"common/dev.kord.common.entity/-discord-mentioned-channel/name.html","searchKeys":["name","val name: String","dev.kord.common.entity.DiscordMentionedChannel.name"]},{"name":"val name: String","description":"dev.kord.common.entity.DiscordMessageInteraction.name","location":"common/dev.kord.common.entity/-discord-message-interaction/name.html","searchKeys":["name","val name: String","dev.kord.common.entity.DiscordMessageInteraction.name"]},{"name":"val name: String","description":"dev.kord.common.entity.DiscordMessageSticker.name","location":"common/dev.kord.common.entity/-discord-message-sticker/name.html","searchKeys":["name","val name: String","dev.kord.common.entity.DiscordMessageSticker.name"]},{"name":"val name: String","description":"dev.kord.common.entity.DiscordPartialGuild.name","location":"common/dev.kord.common.entity/-discord-partial-guild/name.html","searchKeys":["name","val name: String","dev.kord.common.entity.DiscordPartialGuild.name"]},{"name":"val name: String","description":"dev.kord.common.entity.DiscordPartialIntegration.name","location":"common/dev.kord.common.entity/-discord-partial-integration/name.html","searchKeys":["name","val name: String","dev.kord.common.entity.DiscordPartialIntegration.name"]},{"name":"val name: String","description":"dev.kord.common.entity.DiscordRole.name","location":"common/dev.kord.common.entity/-discord-role/name.html","searchKeys":["name","val name: String","dev.kord.common.entity.DiscordRole.name"]},{"name":"val name: String","description":"dev.kord.common.entity.DiscordStickerItem.name","location":"common/dev.kord.common.entity/-discord-sticker-item/name.html","searchKeys":["name","val name: String","dev.kord.common.entity.DiscordStickerItem.name"]},{"name":"val name: String","description":"dev.kord.common.entity.DiscordStickerPack.name","location":"common/dev.kord.common.entity/-discord-sticker-pack/name.html","searchKeys":["name","val name: String","dev.kord.common.entity.DiscordStickerPack.name"]},{"name":"val name: String","description":"dev.kord.common.entity.DiscordTemplate.name","location":"common/dev.kord.common.entity/-discord-template/name.html","searchKeys":["name","val name: String","dev.kord.common.entity.DiscordTemplate.name"]},{"name":"val name: String","description":"dev.kord.common.entity.DiscordVoiceRegion.name","location":"common/dev.kord.common.entity/-discord-voice-region/name.html","searchKeys":["name","val name: String","dev.kord.common.entity.DiscordVoiceRegion.name"]},{"name":"val name: String","description":"dev.kord.common.entity.IntegrationApplication.name","location":"common/dev.kord.common.entity/-integration-application/name.html","searchKeys":["name","val name: String","dev.kord.common.entity.IntegrationApplication.name"]},{"name":"val name: String","description":"dev.kord.common.entity.MessageApplication.name","location":"common/dev.kord.common.entity/-message-application/name.html","searchKeys":["name","val name: String","dev.kord.common.entity.MessageApplication.name"]},{"name":"val name: String?","description":"dev.kord.common.entity.DiscordEmoji.name","location":"common/dev.kord.common.entity/-discord-emoji/name.html","searchKeys":["name","val name: String?","dev.kord.common.entity.DiscordEmoji.name"]},{"name":"val name: String?","description":"dev.kord.common.entity.DiscordWebhook.name","location":"common/dev.kord.common.entity/-discord-webhook/name.html","searchKeys":["name","val name: String?","dev.kord.common.entity.DiscordWebhook.name"]},{"name":"val name: String? = null","description":"dev.kord.common.entity.DiscordAuditLogRoleChange.name","location":"common/dev.kord.common.entity/-discord-audit-log-role-change/name.html","searchKeys":["name","val name: String? = null","dev.kord.common.entity.DiscordAuditLogRoleChange.name"]},{"name":"val name: String? = null","description":"dev.kord.common.entity.DiscordPartialEmoji.name","location":"common/dev.kord.common.entity/-discord-partial-emoji/name.html","searchKeys":["name","val name: String? = null","dev.kord.common.entity.DiscordPartialEmoji.name"]},{"name":"val nameLocalizations: Optional<Map<Locale, String>?>","description":"dev.kord.common.entity.ApplicationCommandOption.nameLocalizations","location":"common/dev.kord.common.entity/-application-command-option/name-localizations.html","searchKeys":["nameLocalizations","val nameLocalizations: Optional<Map<Locale, String>?>","dev.kord.common.entity.ApplicationCommandOption.nameLocalizations"]},{"name":"val nameLocalizations: Optional<Map<Locale, String>?>","description":"dev.kord.common.entity.DiscordApplicationCommand.nameLocalizations","location":"common/dev.kord.common.entity/-discord-application-command/name-localizations.html","searchKeys":["nameLocalizations","val nameLocalizations: Optional<Map<Locale, String>?>","dev.kord.common.entity.DiscordApplicationCommand.nameLocalizations"]},{"name":"val new: T?","description":"dev.kord.common.entity.AuditLogChange.new","location":"common/dev.kord.common.entity/-audit-log-change/new.html","searchKeys":["new","val new: T?","dev.kord.common.entity.AuditLogChange.new"]},{"name":"val nick: Optional<String?>","description":"dev.kord.common.entity.DiscordAddedGuildMember.nick","location":"common/dev.kord.common.entity/-discord-added-guild-member/nick.html","searchKeys":["nick","val nick: Optional<String?>","dev.kord.common.entity.DiscordAddedGuildMember.nick"]},{"name":"val nick: Optional<String?>","description":"dev.kord.common.entity.DiscordGuildMember.nick","location":"common/dev.kord.common.entity/-discord-guild-member/nick.html","searchKeys":["nick","val nick: Optional<String?>","dev.kord.common.entity.DiscordGuildMember.nick"]},{"name":"val nick: Optional<String?>","description":"dev.kord.common.entity.DiscordInteractionGuildMember.nick","location":"common/dev.kord.common.entity/-discord-interaction-guild-member/nick.html","searchKeys":["nick","val nick: Optional<String?>","dev.kord.common.entity.DiscordInteractionGuildMember.nick"]},{"name":"val nick: Optional<String?>","description":"dev.kord.common.entity.DiscordUpdatedGuildMember.nick","location":"common/dev.kord.common.entity/-discord-updated-guild-member/nick.html","searchKeys":["nick","val nick: Optional<String?>","dev.kord.common.entity.DiscordUpdatedGuildMember.nick"]},{"name":"val nonce: Optional<String>","description":"dev.kord.common.entity.DiscordMessage.nonce","location":"common/dev.kord.common.entity/-discord-message/nonce.html","searchKeys":["nonce","val nonce: Optional<String>","dev.kord.common.entity.DiscordMessage.nonce"]},{"name":"val nonce: Optional<String>","description":"dev.kord.common.entity.DiscordPartialMessage.nonce","location":"common/dev.kord.common.entity/-discord-partial-message/nonce.html","searchKeys":["nonce","val nonce: Optional<String>","dev.kord.common.entity.DiscordPartialMessage.nonce"]},{"name":"val nsfw: OptionalBoolean","description":"dev.kord.common.entity.DiscordChannel.nsfw","location":"common/dev.kord.common.entity/-discord-channel/nsfw.html","searchKeys":["nsfw","val nsfw: OptionalBoolean","dev.kord.common.entity.DiscordChannel.nsfw"]},{"name":"val nsfwLevel: NsfwLevel","description":"dev.kord.common.entity.DiscordGuild.nsfwLevel","location":"common/dev.kord.common.entity/-discord-guild/nsfw-level.html","searchKeys":["nsfwLevel","val nsfwLevel: NsfwLevel","dev.kord.common.entity.DiscordGuild.nsfwLevel"]},{"name":"val nsfwLevel: Optional<NsfwLevel>","description":"dev.kord.common.entity.DiscordPartialGuild.nsfwLevel","location":"common/dev.kord.common.entity/-discord-partial-guild/nsfw-level.html","searchKeys":["nsfwLevel","val nsfwLevel: Optional<NsfwLevel>","dev.kord.common.entity.DiscordPartialGuild.nsfwLevel"]},{"name":"val old: T?","description":"dev.kord.common.entity.AuditLogChange.old","location":"common/dev.kord.common.entity/-audit-log-change/old.html","searchKeys":["old","val old: T?","dev.kord.common.entity.AuditLogChange.old"]},{"name":"val optimal: Boolean","description":"dev.kord.common.entity.DiscordVoiceRegion.optimal","location":"common/dev.kord.common.entity/-discord-voice-region/optimal.html","searchKeys":["optimal","val optimal: Boolean","dev.kord.common.entity.DiscordVoiceRegion.optimal"]},{"name":"val options: Optional<AuditLogEntryOptionalInfo>","description":"dev.kord.common.entity.DiscordAuditLogEntry.options","location":"common/dev.kord.common.entity/-discord-audit-log-entry/options.html","searchKeys":["options","val options: Optional<AuditLogEntryOptionalInfo>","dev.kord.common.entity.DiscordAuditLogEntry.options"]},{"name":"val options: Optional<List<ApplicationCommandOption>>","description":"dev.kord.common.entity.ApplicationCommandOption.options","location":"common/dev.kord.common.entity/-application-command-option/options.html","searchKeys":["options","val options: Optional<List<ApplicationCommandOption>>","dev.kord.common.entity.ApplicationCommandOption.options"]},{"name":"val options: Optional<List<ApplicationCommandOption>>","description":"dev.kord.common.entity.DiscordApplicationCommand.options","location":"common/dev.kord.common.entity/-discord-application-command/options.html","searchKeys":["options","val options: Optional<List<ApplicationCommandOption>>","dev.kord.common.entity.DiscordApplicationCommand.options"]},{"name":"val options: Optional<List<CommandArgument<Any?>>>","description":"dev.kord.common.entity.SubCommand.options","location":"common/dev.kord.common.entity/-sub-command/options.html","searchKeys":["options","val options: Optional<List<CommandArgument<Any?>>>","dev.kord.common.entity.SubCommand.options"]},{"name":"val options: Optional<List<Option>>","description":"dev.kord.common.entity.InteractionCallbackData.options","location":"common/dev.kord.common.entity/-interaction-callback-data/options.html","searchKeys":["options","val options: Optional<List<Option>>","dev.kord.common.entity.InteractionCallbackData.options"]},{"name":"val options: Optional<List<SubCommand>>","description":"dev.kord.common.entity.CommandGroup.options","location":"common/dev.kord.common.entity/-command-group/options.html","searchKeys":["options","val options: Optional<List<SubCommand>>","dev.kord.common.entity.CommandGroup.options"]},{"name":"val owner: OptionalBoolean","description":"dev.kord.common.entity.DiscordGuild.owner","location":"common/dev.kord.common.entity/-discord-guild/owner.html","searchKeys":["owner","val owner: OptionalBoolean","dev.kord.common.entity.DiscordGuild.owner"]},{"name":"val owner: OptionalBoolean","description":"dev.kord.common.entity.DiscordPartialGuild.owner","location":"common/dev.kord.common.entity/-discord-partial-guild/owner.html","searchKeys":["owner","val owner: OptionalBoolean","dev.kord.common.entity.DiscordPartialGuild.owner"]},{"name":"val ownerId: OptionalSnowflake","description":"dev.kord.common.entity.DiscordChannel.ownerId","location":"common/dev.kord.common.entity/-discord-channel/owner-id.html","searchKeys":["ownerId","val ownerId: OptionalSnowflake","dev.kord.common.entity.DiscordChannel.ownerId"]},{"name":"val ownerId: Snowflake","description":"dev.kord.common.entity.DiscordGuild.ownerId","location":"common/dev.kord.common.entity/-discord-guild/owner-id.html","searchKeys":["ownerId","val ownerId: Snowflake","dev.kord.common.entity.DiscordGuild.ownerId"]},{"name":"val ownerUserId: Snowflake","description":"dev.kord.common.entity.DiscordTeam.ownerUserId","location":"common/dev.kord.common.entity/-discord-team/owner-user-id.html","searchKeys":["ownerUserId","val ownerUserId: Snowflake","dev.kord.common.entity.DiscordTeam.ownerUserId"]},{"name":"val packId: OptionalSnowflake","description":"dev.kord.common.entity.DiscordMessageSticker.packId","location":"common/dev.kord.common.entity/-discord-message-sticker/pack-id.html","searchKeys":["packId","val packId: OptionalSnowflake","dev.kord.common.entity.DiscordMessageSticker.packId"]},{"name":"val parentId: OptionalSnowflake?","description":"dev.kord.common.entity.DiscordChannel.parentId","location":"common/dev.kord.common.entity/-discord-channel/parent-id.html","searchKeys":["parentId","val parentId: OptionalSnowflake?","dev.kord.common.entity.DiscordChannel.parentId"]},{"name":"val parse: List<AllowedMentionType>","description":"dev.kord.common.entity.AllowedMentions.parse","location":"common/dev.kord.common.entity/-allowed-mentions/parse.html","searchKeys":["parse","val parse: List<AllowedMentionType>","dev.kord.common.entity.AllowedMentions.parse"]},{"name":"val party: Optional<DiscordActivityParty>","description":"dev.kord.common.entity.DiscordActivity.party","location":"common/dev.kord.common.entity/-discord-activity/party.html","searchKeys":["party","val party: Optional<DiscordActivityParty>","dev.kord.common.entity.DiscordActivity.party"]},{"name":"val partyId: Optional<String>","description":"dev.kord.common.entity.MessageActivity.partyId","location":"common/dev.kord.common.entity/-message-activity/party-id.html","searchKeys":["partyId","val partyId: Optional<String>","dev.kord.common.entity.MessageActivity.partyId"]},{"name":"val pending: OptionalBoolean","description":"dev.kord.common.entity.DiscordAddedGuildMember.pending","location":"common/dev.kord.common.entity/-discord-added-guild-member/pending.html","searchKeys":["pending","val pending: OptionalBoolean","dev.kord.common.entity.DiscordAddedGuildMember.pending"]},{"name":"val pending: OptionalBoolean","description":"dev.kord.common.entity.DiscordGuildMember.pending","location":"common/dev.kord.common.entity/-discord-guild-member/pending.html","searchKeys":["pending","val pending: OptionalBoolean","dev.kord.common.entity.DiscordGuildMember.pending"]},{"name":"val pending: OptionalBoolean","description":"dev.kord.common.entity.DiscordInteractionGuildMember.pending","location":"common/dev.kord.common.entity/-discord-interaction-guild-member/pending.html","searchKeys":["pending","val pending: OptionalBoolean","dev.kord.common.entity.DiscordInteractionGuildMember.pending"]},{"name":"val pending: OptionalBoolean","description":"dev.kord.common.entity.DiscordUpdatedGuildMember.pending","location":"common/dev.kord.common.entity/-discord-updated-guild-member/pending.html","searchKeys":["pending","val pending: OptionalBoolean","dev.kord.common.entity.DiscordUpdatedGuildMember.pending"]},{"name":"val permission: Boolean","description":"dev.kord.common.entity.DiscordGuildApplicationCommandPermission.permission","location":"common/dev.kord.common.entity/-discord-guild-application-command-permission/permission.html","searchKeys":["permission","val permission: Boolean","dev.kord.common.entity.DiscordGuildApplicationCommandPermission.permission"]},{"name":"val permissionOverwrites: Optional<List<Overwrite>>","description":"dev.kord.common.entity.DiscordChannel.permissionOverwrites","location":"common/dev.kord.common.entity/-discord-channel/permission-overwrites.html","searchKeys":["permissionOverwrites","val permissionOverwrites: Optional<List<Overwrite>>","dev.kord.common.entity.DiscordChannel.permissionOverwrites"]},{"name":"val permissions: List<DiscordGuildApplicationCommandPermission>","description":"dev.kord.common.entity.DiscordGuildApplicationCommandPermissions.permissions","location":"common/dev.kord.common.entity/-discord-guild-application-command-permissions/permissions.html","searchKeys":["permissions","val permissions: List<DiscordGuildApplicationCommandPermission>","dev.kord.common.entity.DiscordGuildApplicationCommandPermissions.permissions"]},{"name":"val permissions: List<String>","description":"dev.kord.common.entity.DiscordTeamMember.permissions","location":"common/dev.kord.common.entity/-discord-team-member/permissions.html","searchKeys":["permissions","val permissions: List<String>","dev.kord.common.entity.DiscordTeamMember.permissions"]},{"name":"val permissions: Optional<Permissions>","description":"dev.kord.common.entity.DiscordChannel.permissions","location":"common/dev.kord.common.entity/-discord-channel/permissions.html","searchKeys":["permissions","val permissions: Optional<Permissions>","dev.kord.common.entity.DiscordChannel.permissions"]},{"name":"val permissions: Optional<Permissions>","description":"dev.kord.common.entity.DiscordGuild.permissions","location":"common/dev.kord.common.entity/-discord-guild/permissions.html","searchKeys":["permissions","val permissions: Optional<Permissions>","dev.kord.common.entity.DiscordGuild.permissions"]},{"name":"val permissions: Optional<Permissions>","description":"dev.kord.common.entity.DiscordPartialGuild.permissions","location":"common/dev.kord.common.entity/-discord-partial-guild/permissions.html","searchKeys":["permissions","val permissions: Optional<Permissions>","dev.kord.common.entity.DiscordPartialGuild.permissions"]},{"name":"val permissions: Optional<Permissions>","description":"dev.kord.common.entity.DiscordPartialRole.permissions","location":"common/dev.kord.common.entity/-discord-partial-role/permissions.html","searchKeys":["permissions","val permissions: Optional<Permissions>","dev.kord.common.entity.DiscordPartialRole.permissions"]},{"name":"val permissions: Permissions","description":"dev.kord.common.entity.DiscordInteractionGuildMember.permissions","location":"common/dev.kord.common.entity/-discord-interaction-guild-member/permissions.html","searchKeys":["permissions","val permissions: Permissions","dev.kord.common.entity.DiscordInteractionGuildMember.permissions"]},{"name":"val permissions: Permissions","description":"dev.kord.common.entity.DiscordRole.permissions","location":"common/dev.kord.common.entity/-discord-role/permissions.html","searchKeys":["permissions","val permissions: Permissions","dev.kord.common.entity.DiscordRole.permissions"]},{"name":"val permissions: Permissions","description":"dev.kord.common.entity.InstallParams.permissions","location":"common/dev.kord.common.entity/-install-params/permissions.html","searchKeys":["permissions","val permissions: Permissions","dev.kord.common.entity.InstallParams.permissions"]},{"name":"val permissions: Permissions? = null","description":"dev.kord.common.entity.DiscordAuditLogRoleChange.permissions","location":"common/dev.kord.common.entity/-discord-audit-log-role-change/permissions.html","searchKeys":["permissions","val permissions: Permissions? = null","dev.kord.common.entity.DiscordAuditLogRoleChange.permissions"]},{"name":"val pinned: Boolean","description":"dev.kord.common.entity.DiscordMessage.pinned","location":"common/dev.kord.common.entity/-discord-message/pinned.html","searchKeys":["pinned","val pinned: Boolean","dev.kord.common.entity.DiscordMessage.pinned"]},{"name":"val pinned: OptionalBoolean","description":"dev.kord.common.entity.DiscordPartialMessage.pinned","location":"common/dev.kord.common.entity/-discord-partial-message/pinned.html","searchKeys":["pinned","val pinned: OptionalBoolean","dev.kord.common.entity.DiscordPartialMessage.pinned"]},{"name":"val position: Int","description":"dev.kord.common.entity.DiscordRole.position","location":"common/dev.kord.common.entity/-discord-role/position.html","searchKeys":["position","val position: Int","dev.kord.common.entity.DiscordRole.position"]},{"name":"val position: Int? = null","description":"dev.kord.common.entity.DiscordAuditLogRoleChange.position","location":"common/dev.kord.common.entity/-discord-audit-log-role-change/position.html","searchKeys":["position","val position: Int? = null","dev.kord.common.entity.DiscordAuditLogRoleChange.position"]},{"name":"val position: OptionalInt","description":"dev.kord.common.entity.DiscordChannel.position","location":"common/dev.kord.common.entity/-discord-channel/position.html","searchKeys":["position","val position: OptionalInt","dev.kord.common.entity.DiscordChannel.position"]},{"name":"val position: OptionalInt","description":"dev.kord.common.entity.DiscordPartialRole.position","location":"common/dev.kord.common.entity/-discord-partial-role/position.html","searchKeys":["position","val position: OptionalInt","dev.kord.common.entity.DiscordPartialRole.position"]},{"name":"val preferredLocale: String","description":"dev.kord.common.entity.DiscordGuild.preferredLocale","location":"common/dev.kord.common.entity/-discord-guild/preferred-locale.html","searchKeys":["preferredLocale","val preferredLocale: String","dev.kord.common.entity.DiscordGuild.preferredLocale"]},{"name":"val premiumProgressBarEnabled: Boolean","description":"dev.kord.common.entity.DiscordGuild.premiumProgressBarEnabled","location":"common/dev.kord.common.entity/-discord-guild/premium-progress-bar-enabled.html","searchKeys":["premiumProgressBarEnabled","val premiumProgressBarEnabled: Boolean","dev.kord.common.entity.DiscordGuild.premiumProgressBarEnabled"]},{"name":"val premiumProgressBarEnabled: OptionalBoolean","description":"dev.kord.common.entity.DiscordPartialGuild.premiumProgressBarEnabled","location":"common/dev.kord.common.entity/-discord-partial-guild/premium-progress-bar-enabled.html","searchKeys":["premiumProgressBarEnabled","val premiumProgressBarEnabled: OptionalBoolean","dev.kord.common.entity.DiscordPartialGuild.premiumProgressBarEnabled"]},{"name":"val premiumSince: Optional<Instant?>","description":"dev.kord.common.entity.DiscordAddedGuildMember.premiumSince","location":"common/dev.kord.common.entity/-discord-added-guild-member/premium-since.html","searchKeys":["premiumSince","val premiumSince: Optional<Instant?>","dev.kord.common.entity.DiscordAddedGuildMember.premiumSince"]},{"name":"val premiumSince: Optional<Instant?>","description":"dev.kord.common.entity.DiscordGuildMember.premiumSince","location":"common/dev.kord.common.entity/-discord-guild-member/premium-since.html","searchKeys":["premiumSince","val premiumSince: Optional<Instant?>","dev.kord.common.entity.DiscordGuildMember.premiumSince"]},{"name":"val premiumSince: Optional<Instant?>","description":"dev.kord.common.entity.DiscordInteractionGuildMember.premiumSince","location":"common/dev.kord.common.entity/-discord-interaction-guild-member/premium-since.html","searchKeys":["premiumSince","val premiumSince: Optional<Instant?>","dev.kord.common.entity.DiscordInteractionGuildMember.premiumSince"]},{"name":"val premiumSince: Optional<Instant?>","description":"dev.kord.common.entity.DiscordUpdatedGuildMember.premiumSince","location":"common/dev.kord.common.entity/-discord-updated-guild-member/premium-since.html","searchKeys":["premiumSince","val premiumSince: Optional<Instant?>","dev.kord.common.entity.DiscordUpdatedGuildMember.premiumSince"]},{"name":"val premiumSubscriber: Optional<DiscordNull?>","description":"dev.kord.common.entity.DiscordRoleTags.premiumSubscriber","location":"common/dev.kord.common.entity/-discord-role-tags/premium-subscriber.html","searchKeys":["premiumSubscriber","val premiumSubscriber: Optional<DiscordNull?>","dev.kord.common.entity.DiscordRoleTags.premiumSubscriber"]},{"name":"val premiumSubscriptionCount: OptionalInt","description":"dev.kord.common.entity.DiscordGuild.premiumSubscriptionCount","location":"common/dev.kord.common.entity/-discord-guild/premium-subscription-count.html","searchKeys":["premiumSubscriptionCount","val premiumSubscriptionCount: OptionalInt","dev.kord.common.entity.DiscordGuild.premiumSubscriptionCount"]},{"name":"val premiumTier: PremiumTier","description":"dev.kord.common.entity.DiscordGuild.premiumTier","location":"common/dev.kord.common.entity/-discord-guild/premium-tier.html","searchKeys":["premiumTier","val premiumTier: PremiumTier","dev.kord.common.entity.DiscordGuild.premiumTier"]},{"name":"val premiumType: Optional<UserPremium>","description":"dev.kord.common.entity.DiscordOptionallyMemberUser.premiumType","location":"common/dev.kord.common.entity/-discord-optionally-member-user/premium-type.html","searchKeys":["premiumType","val premiumType: Optional<UserPremium>","dev.kord.common.entity.DiscordOptionallyMemberUser.premiumType"]},{"name":"val premiumType: Optional<UserPremium>","description":"dev.kord.common.entity.DiscordUser.premiumType","location":"common/dev.kord.common.entity/-discord-user/premium-type.html","searchKeys":["premiumType","val premiumType: Optional<UserPremium>","dev.kord.common.entity.DiscordUser.premiumType"]},{"name":"val presences: Optional<List<DiscordPresenceUpdate>>","description":"dev.kord.common.entity.DiscordGuild.presences","location":"common/dev.kord.common.entity/-discord-guild/presences.html","searchKeys":["presences","val presences: Optional<List<DiscordPresenceUpdate>>","dev.kord.common.entity.DiscordGuild.presences"]},{"name":"val presets: Optional<List<AutoModerationRuleKeywordPresetType>>","description":"dev.kord.common.entity.DiscordAutoModerationRuleTriggerMetadata.presets","location":"common/dev.kord.common.entity/-discord-auto-moderation-rule-trigger-metadata/presets.html","searchKeys":["presets","val presets: Optional<List<AutoModerationRuleKeywordPresetType>>","dev.kord.common.entity.DiscordAutoModerationRuleTriggerMetadata.presets"]},{"name":"val privacyLevel: GuildScheduledEventPrivacyLevel","description":"dev.kord.common.entity.DiscordGuildScheduledEvent.privacyLevel","location":"common/dev.kord.common.entity/-discord-guild-scheduled-event/privacy-level.html","searchKeys":["privacyLevel","val privacyLevel: GuildScheduledEventPrivacyLevel","dev.kord.common.entity.DiscordGuildScheduledEvent.privacyLevel"]},{"name":"val privacyLevel: StageInstancePrivacyLevel","description":"dev.kord.common.entity.DiscordStageInstance.privacyLevel","location":"common/dev.kord.common.entity/-discord-stage-instance/privacy-level.html","searchKeys":["privacyLevel","val privacyLevel: StageInstancePrivacyLevel","dev.kord.common.entity.DiscordStageInstance.privacyLevel"]},{"name":"val processId: UByte","description":"dev.kord.common.entity.Snowflake.processId","location":"common/dev.kord.common.entity/-snowflake/process-id.html","searchKeys":["processId","val processId: UByte","dev.kord.common.entity.Snowflake.processId"]},{"name":"val provider: Optional<DiscordEmbed.Provider>","description":"dev.kord.common.entity.DiscordEmbed.provider","location":"common/dev.kord.common.entity/-discord-embed/provider.html","searchKeys":["provider","val provider: Optional<DiscordEmbed.Provider>","dev.kord.common.entity.DiscordEmbed.provider"]},{"name":"val proxyIconUrl: Optional<String>","description":"dev.kord.common.entity.DiscordEmbed.Author.proxyIconUrl","location":"common/dev.kord.common.entity/-discord-embed/-author/proxy-icon-url.html","searchKeys":["proxyIconUrl","val proxyIconUrl: Optional<String>","dev.kord.common.entity.DiscordEmbed.Author.proxyIconUrl"]},{"name":"val proxyIconUrl: Optional<String>","description":"dev.kord.common.entity.DiscordEmbed.Footer.proxyIconUrl","location":"common/dev.kord.common.entity/-discord-embed/-footer/proxy-icon-url.html","searchKeys":["proxyIconUrl","val proxyIconUrl: Optional<String>","dev.kord.common.entity.DiscordEmbed.Footer.proxyIconUrl"]},{"name":"val proxyUrl: Optional<String>","description":"dev.kord.common.entity.DiscordEmbed.Image.proxyUrl","location":"common/dev.kord.common.entity/-discord-embed/-image/proxy-url.html","searchKeys":["proxyUrl","val proxyUrl: Optional<String>","dev.kord.common.entity.DiscordEmbed.Image.proxyUrl"]},{"name":"val proxyUrl: Optional<String>","description":"dev.kord.common.entity.DiscordEmbed.Thumbnail.proxyUrl","location":"common/dev.kord.common.entity/-discord-embed/-thumbnail/proxy-url.html","searchKeys":["proxyUrl","val proxyUrl: Optional<String>","dev.kord.common.entity.DiscordEmbed.Thumbnail.proxyUrl"]},{"name":"val proxyUrl: String","description":"dev.kord.common.entity.DiscordAttachment.proxyUrl","location":"common/dev.kord.common.entity/-discord-attachment/proxy-url.html","searchKeys":["proxyUrl","val proxyUrl: String","dev.kord.common.entity.DiscordAttachment.proxyUrl"]},{"name":"val publicFlags: Optional<UserFlags>","description":"dev.kord.common.entity.DiscordOptionallyMemberUser.publicFlags","location":"common/dev.kord.common.entity/-discord-optionally-member-user/public-flags.html","searchKeys":["publicFlags","val publicFlags: Optional<UserFlags>","dev.kord.common.entity.DiscordOptionallyMemberUser.publicFlags"]},{"name":"val publicFlags: Optional<UserFlags>","description":"dev.kord.common.entity.DiscordUser.publicFlags","location":"common/dev.kord.common.entity/-discord-user/public-flags.html","searchKeys":["publicFlags","val publicFlags: Optional<UserFlags>","dev.kord.common.entity.DiscordUser.publicFlags"]},{"name":"val publicUpdatesChannelId: Snowflake?","description":"dev.kord.common.entity.DiscordGuild.publicUpdatesChannelId","location":"common/dev.kord.common.entity/-discord-guild/public-updates-channel-id.html","searchKeys":["publicUpdatesChannelId","val publicUpdatesChannelId: Snowflake?","dev.kord.common.entity.DiscordGuild.publicUpdatesChannelId"]},{"name":"val rateLimitPerUser: Optional<DurationInSeconds>","description":"dev.kord.common.entity.DiscordChannel.rateLimitPerUser","location":"common/dev.kord.common.entity/-discord-channel/rate-limit-per-user.html","searchKeys":["rateLimitPerUser","val rateLimitPerUser: Optional<DurationInSeconds>","dev.kord.common.entity.DiscordChannel.rateLimitPerUser"]},{"name":"val reactions: Optional<List<Reaction>>","description":"dev.kord.common.entity.DiscordMessage.reactions","location":"common/dev.kord.common.entity/-discord-message/reactions.html","searchKeys":["reactions","val reactions: Optional<List<Reaction>>","dev.kord.common.entity.DiscordMessage.reactions"]},{"name":"val reactions: Optional<List<Reaction>>","description":"dev.kord.common.entity.DiscordPartialMessage.reactions","location":"common/dev.kord.common.entity/-discord-partial-message/reactions.html","searchKeys":["reactions","val reactions: Optional<List<Reaction>>","dev.kord.common.entity.DiscordPartialMessage.reactions"]},{"name":"val reason: Optional<String>","description":"dev.kord.common.entity.DiscordAuditLogEntry.reason","location":"common/dev.kord.common.entity/-discord-audit-log-entry/reason.html","searchKeys":["reason","val reason: Optional<String>","dev.kord.common.entity.DiscordAuditLogEntry.reason"]},{"name":"val recipients: Optional<List<DiscordUser>>","description":"dev.kord.common.entity.DiscordChannel.recipients","location":"common/dev.kord.common.entity/-discord-channel/recipients.html","searchKeys":["recipients","val recipients: Optional<List<DiscordUser>>","dev.kord.common.entity.DiscordChannel.recipients"]},{"name":"val red: Int","description":"dev.kord.common.Color.red","location":"common/dev.kord.common/-color/red.html","searchKeys":["red","val red: Int","dev.kord.common.Color.red"]},{"name":"val referencedMessage: Optional<DiscordMessage?>","description":"dev.kord.common.entity.DiscordMessage.referencedMessage","location":"common/dev.kord.common.entity/-discord-message/referenced-message.html","searchKeys":["referencedMessage","val referencedMessage: Optional<DiscordMessage?>","dev.kord.common.entity.DiscordMessage.referencedMessage"]},{"name":"val referencedMessage: Optional<DiscordMessage?>","description":"dev.kord.common.entity.DiscordPartialMessage.referencedMessage","location":"common/dev.kord.common.entity/-discord-partial-message/referenced-message.html","searchKeys":["referencedMessage","val referencedMessage: Optional<DiscordMessage?>","dev.kord.common.entity.DiscordPartialMessage.referencedMessage"]},{"name":"val regexPatterns: Optional<List<String>>","description":"dev.kord.common.entity.DiscordAutoModerationRuleTriggerMetadata.regexPatterns","location":"common/dev.kord.common.entity/-discord-auto-moderation-rule-trigger-metadata/regex-patterns.html","searchKeys":["regexPatterns","val regexPatterns: Optional<List<String>>","dev.kord.common.entity.DiscordAutoModerationRuleTriggerMetadata.regexPatterns"]},{"name":"val region: String","description":"dev.kord.common.entity.DiscordGuild.region","location":"common/dev.kord.common.entity/-discord-guild/region.html","searchKeys":["region","val region: String","dev.kord.common.entity.DiscordGuild.region"]},{"name":"val repliedUser: OptionalBoolean","description":"dev.kord.common.entity.AllowedMentions.repliedUser","location":"common/dev.kord.common.entity/-allowed-mentions/replied-user.html","searchKeys":["repliedUser","val repliedUser: OptionalBoolean","dev.kord.common.entity.AllowedMentions.repliedUser"]},{"name":"val requestToSpeakTimestamp: Instant?","description":"dev.kord.common.entity.DiscordVoiceState.requestToSpeakTimestamp","location":"common/dev.kord.common.entity/-discord-voice-state/request-to-speak-timestamp.html","searchKeys":["requestToSpeakTimestamp","val requestToSpeakTimestamp: Instant?","dev.kord.common.entity.DiscordVoiceState.requestToSpeakTimestamp"]},{"name":"val requireColons: OptionalBoolean","description":"dev.kord.common.entity.DiscordEmoji.requireColons","location":"common/dev.kord.common.entity/-discord-emoji/require-colons.html","searchKeys":["requireColons","val requireColons: OptionalBoolean","dev.kord.common.entity.DiscordEmoji.requireColons"]},{"name":"val required: OptionalBoolean","description":"dev.kord.common.entity.ApplicationCommandOption.required","location":"common/dev.kord.common.entity/-application-command-option/required.html","searchKeys":["required","val required: OptionalBoolean","dev.kord.common.entity.ApplicationCommandOption.required"]},{"name":"val resolved: Optional<ResolvedObjects>","description":"dev.kord.common.entity.InteractionCallbackData.resolved","location":"common/dev.kord.common.entity/-interaction-callback-data/resolved.html","searchKeys":["resolved","val resolved: Optional<ResolvedObjects>","dev.kord.common.entity.InteractionCallbackData.resolved"]},{"name":"val revoked: Boolean","description":"dev.kord.common.entity.DiscordIntegration.revoked","location":"common/dev.kord.common.entity/-discord-integration/revoked.html","searchKeys":["revoked","val revoked: Boolean","dev.kord.common.entity.DiscordIntegration.revoked"]},{"name":"val revoked: OptionalBoolean","description":"dev.kord.common.entity.DiscordConnection.revoked","location":"common/dev.kord.common.entity/-discord-connection/revoked.html","searchKeys":["revoked","val revoked: OptionalBoolean","dev.kord.common.entity.DiscordConnection.revoked"]},{"name":"val rgb: Int","description":"dev.kord.common.Color.rgb","location":"common/dev.kord.common/-color/rgb.html","searchKeys":["rgb","val rgb: Int","dev.kord.common.Color.rgb"]},{"name":"val role: DiscordRole","description":"dev.kord.common.entity.DiscordGuildRole.role","location":"common/dev.kord.common.entity/-discord-guild-role/role.html","searchKeys":["role","val role: DiscordRole","dev.kord.common.entity.DiscordGuildRole.role"]},{"name":"val roleId: Snowflake","description":"dev.kord.common.entity.DiscordIntegration.roleId","location":"common/dev.kord.common.entity/-discord-integration/role-id.html","searchKeys":["roleId","val roleId: Snowflake","dev.kord.common.entity.DiscordIntegration.roleId"]},{"name":"val roleName: Optional<String>","description":"dev.kord.common.entity.AuditLogEntryOptionalInfo.roleName","location":"common/dev.kord.common.entity/-audit-log-entry-optional-info/role-name.html","searchKeys":["roleName","val roleName: Optional<String>","dev.kord.common.entity.AuditLogEntryOptionalInfo.roleName"]},{"name":"val roles: List<DiscordRole>","description":"dev.kord.common.entity.DiscordGuild.roles","location":"common/dev.kord.common.entity/-discord-guild/roles.html","searchKeys":["roles","val roles: List<DiscordRole>","dev.kord.common.entity.DiscordGuild.roles"]},{"name":"val roles: List<Snowflake>","description":"dev.kord.common.entity.DiscordAddedGuildMember.roles","location":"common/dev.kord.common.entity/-discord-added-guild-member/roles.html","searchKeys":["roles","val roles: List<Snowflake>","dev.kord.common.entity.DiscordAddedGuildMember.roles"]},{"name":"val roles: List<Snowflake>","description":"dev.kord.common.entity.DiscordGuildMember.roles","location":"common/dev.kord.common.entity/-discord-guild-member/roles.html","searchKeys":["roles","val roles: List<Snowflake>","dev.kord.common.entity.DiscordGuildMember.roles"]},{"name":"val roles: List<Snowflake>","description":"dev.kord.common.entity.DiscordInteractionGuildMember.roles","location":"common/dev.kord.common.entity/-discord-interaction-guild-member/roles.html","searchKeys":["roles","val roles: List<Snowflake>","dev.kord.common.entity.DiscordInteractionGuildMember.roles"]},{"name":"val roles: List<Snowflake>","description":"dev.kord.common.entity.DiscordUpdatedGuildMember.roles","location":"common/dev.kord.common.entity/-discord-updated-guild-member/roles.html","searchKeys":["roles","val roles: List<Snowflake>","dev.kord.common.entity.DiscordUpdatedGuildMember.roles"]},{"name":"val roles: List<String>","description":"dev.kord.common.entity.AllowedMentions.roles","location":"common/dev.kord.common.entity/-allowed-mentions/roles.html","searchKeys":["roles","val roles: List<String>","dev.kord.common.entity.AllowedMentions.roles"]},{"name":"val roles: Optional<List<Snowflake>>","description":"dev.kord.common.entity.DiscordEmoji.roles","location":"common/dev.kord.common.entity/-discord-emoji/roles.html","searchKeys":["roles","val roles: Optional<List<Snowflake>>","dev.kord.common.entity.DiscordEmoji.roles"]},{"name":"val roles: Optional<Map<Snowflake, DiscordRole>>","description":"dev.kord.common.entity.ResolvedObjects.roles","location":"common/dev.kord.common.entity/-resolved-objects/roles.html","searchKeys":["roles","val roles: Optional<Map<Snowflake, DiscordRole>>","dev.kord.common.entity.ResolvedObjects.roles"]},{"name":"val rtcRegion: Optional<String?>","description":"dev.kord.common.entity.DiscordChannel.rtcRegion","location":"common/dev.kord.common.entity/-discord-channel/rtc-region.html","searchKeys":["rtcRegion","val rtcRegion: Optional<String?>","dev.kord.common.entity.DiscordChannel.rtcRegion"]},{"name":"val rulesChannelId: Snowflake?","description":"dev.kord.common.entity.DiscordGuild.rulesChannelId","location":"common/dev.kord.common.entity/-discord-guild/rules-channel-id.html","searchKeys":["rulesChannelId","val rulesChannelId: Snowflake?","dev.kord.common.entity.DiscordGuild.rulesChannelId"]},{"name":"val scheduledEndTime: Instant?","description":"dev.kord.common.entity.DiscordGuildScheduledEvent.scheduledEndTime","location":"common/dev.kord.common.entity/-discord-guild-scheduled-event/scheduled-end-time.html","searchKeys":["scheduledEndTime","val scheduledEndTime: Instant?","dev.kord.common.entity.DiscordGuildScheduledEvent.scheduledEndTime"]},{"name":"val scheduledStartTime: Instant","description":"dev.kord.common.entity.DiscordGuildScheduledEvent.scheduledStartTime","location":"common/dev.kord.common.entity/-discord-guild-scheduled-event/scheduled-start-time.html","searchKeys":["scheduledStartTime","val scheduledStartTime: Instant","dev.kord.common.entity.DiscordGuildScheduledEvent.scheduledStartTime"]},{"name":"val scopes: List<String>","description":"dev.kord.common.entity.InstallParams.scopes","location":"common/dev.kord.common.entity/-install-params/scopes.html","searchKeys":["scopes","val scopes: List<String>","dev.kord.common.entity.InstallParams.scopes"]},{"name":"val secrets: Optional<DiscordActivitySecrets>","description":"dev.kord.common.entity.DiscordActivity.secrets","location":"common/dev.kord.common.entity/-discord-activity/secrets.html","searchKeys":["secrets","val secrets: Optional<DiscordActivitySecrets>","dev.kord.common.entity.DiscordActivity.secrets"]},{"name":"val selfDeaf: Boolean","description":"dev.kord.common.entity.DiscordVoiceState.selfDeaf","location":"common/dev.kord.common.entity/-discord-voice-state/self-deaf.html","searchKeys":["selfDeaf","val selfDeaf: Boolean","dev.kord.common.entity.DiscordVoiceState.selfDeaf"]},{"name":"val selfMute: Boolean","description":"dev.kord.common.entity.DiscordVoiceState.selfMute","location":"common/dev.kord.common.entity/-discord-voice-state/self-mute.html","searchKeys":["selfMute","val selfMute: Boolean","dev.kord.common.entity.DiscordVoiceState.selfMute"]},{"name":"val selfStream: OptionalBoolean","description":"dev.kord.common.entity.DiscordVoiceState.selfStream","location":"common/dev.kord.common.entity/-discord-voice-state/self-stream.html","searchKeys":["selfStream","val selfStream: OptionalBoolean","dev.kord.common.entity.DiscordVoiceState.selfStream"]},{"name":"val selfVideo: Boolean","description":"dev.kord.common.entity.DiscordVoiceState.selfVideo","location":"common/dev.kord.common.entity/-discord-voice-state/self-video.html","searchKeys":["selfVideo","val selfVideo: Boolean","dev.kord.common.entity.DiscordVoiceState.selfVideo"]},{"name":"val serializedSourceGuild: DiscordPartialGuild","description":"dev.kord.common.entity.DiscordTemplate.serializedSourceGuild","location":"common/dev.kord.common.entity/-discord-template/serialized-source-guild.html","searchKeys":["serializedSourceGuild","val serializedSourceGuild: DiscordPartialGuild","dev.kord.common.entity.DiscordTemplate.serializedSourceGuild"]},{"name":"val serializer: KSerializer<T>","description":"dev.kord.common.entity.AuditLogChangeKey.serializer","location":"common/dev.kord.common.entity/-audit-log-change-key/serializer.html","searchKeys":["serializer","val serializer: KSerializer<T>","dev.kord.common.entity.AuditLogChangeKey.serializer"]},{"name":"val sessionId: String","description":"dev.kord.common.entity.DiscordVoiceState.sessionId","location":"common/dev.kord.common.entity/-discord-voice-state/session-id.html","searchKeys":["sessionId","val sessionId: String","dev.kord.common.entity.DiscordVoiceState.sessionId"]},{"name":"val showActivity: Boolean","description":"dev.kord.common.entity.DiscordConnection.showActivity","location":"common/dev.kord.common.entity/-discord-connection/show-activity.html","searchKeys":["showActivity","val showActivity: Boolean","dev.kord.common.entity.DiscordConnection.showActivity"]},{"name":"val size: Int","description":"dev.kord.common.DiscordBitSet.size","location":"common/dev.kord.common/-discord-bit-set/size.html","searchKeys":["size","val size: Int","dev.kord.common.DiscordBitSet.size"]},{"name":"val size: Int","description":"dev.kord.common.entity.DiscordAttachment.size","location":"common/dev.kord.common.entity/-discord-attachment/size.html","searchKeys":["size","val size: Int","dev.kord.common.entity.DiscordAttachment.size"]},{"name":"val size: Optional<DiscordActivityPartySize>","description":"dev.kord.common.entity.DiscordActivityParty.size","location":"common/dev.kord.common.entity/-discord-activity-party/size.html","searchKeys":["size","val size: Optional<DiscordActivityPartySize>","dev.kord.common.entity.DiscordActivityParty.size"]},{"name":"val skuId: Snowflake","description":"dev.kord.common.entity.DiscordStickerPack.skuId","location":"common/dev.kord.common.entity/-discord-sticker-pack/sku-id.html","searchKeys":["skuId","val skuId: Snowflake","dev.kord.common.entity.DiscordStickerPack.skuId"]},{"name":"val smallImage: Optional<String>","description":"dev.kord.common.entity.DiscordActivityAssets.smallImage","location":"common/dev.kord.common.entity/-discord-activity-assets/small-image.html","searchKeys":["smallImage","val smallImage: Optional<String>","dev.kord.common.entity.DiscordActivityAssets.smallImage"]},{"name":"val smallText: Optional<String>","description":"dev.kord.common.entity.DiscordActivityAssets.smallText","location":"common/dev.kord.common.entity/-discord-activity-assets/small-text.html","searchKeys":["smallText","val smallText: Optional<String>","dev.kord.common.entity.DiscordActivityAssets.smallText"]},{"name":"val sortValue: OptionalInt","description":"dev.kord.common.entity.DiscordMessageSticker.sortValue","location":"common/dev.kord.common.entity/-discord-message-sticker/sort-value.html","searchKeys":["sortValue","val sortValue: OptionalInt","dev.kord.common.entity.DiscordMessageSticker.sortValue"]},{"name":"val sourceGuildId: Snowflake","description":"dev.kord.common.entity.DiscordTemplate.sourceGuildId","location":"common/dev.kord.common.entity/-discord-template/source-guild-id.html","searchKeys":["sourceGuildId","val sourceGuildId: Snowflake","dev.kord.common.entity.DiscordTemplate.sourceGuildId"]},{"name":"val spectate: Optional<String>","description":"dev.kord.common.entity.DiscordActivitySecrets.spectate","location":"common/dev.kord.common.entity/-discord-activity-secrets/spectate.html","searchKeys":["spectate","val spectate: Optional<String>","dev.kord.common.entity.DiscordActivitySecrets.spectate"]},{"name":"val splash: Optional<String?>","description":"dev.kord.common.entity.DiscordGuild.splash","location":"common/dev.kord.common.entity/-discord-guild/splash.html","searchKeys":["splash","val splash: Optional<String?>","dev.kord.common.entity.DiscordGuild.splash"]},{"name":"val splash: Optional<String?>","description":"dev.kord.common.entity.DiscordPartialGuild.splash","location":"common/dev.kord.common.entity/-discord-partial-guild/splash.html","searchKeys":["splash","val splash: Optional<String?>","dev.kord.common.entity.DiscordPartialGuild.splash"]},{"name":"val splash: String?","description":"dev.kord.common.entity.DiscordGuildPreview.splash","location":"common/dev.kord.common.entity/-discord-guild-preview/splash.html","searchKeys":["splash","val splash: String?","dev.kord.common.entity.DiscordGuildPreview.splash"]},{"name":"val stageInstance: Optional<DiscordStageInstance>","description":"dev.kord.common.entity.DiscordInvite.stageInstance","location":"common/dev.kord.common.entity/-discord-invite/stage-instance.html","searchKeys":["stageInstance","val stageInstance: Optional<DiscordStageInstance>","dev.kord.common.entity.DiscordInvite.stageInstance"]},{"name":"val stageInstances: Optional<List<DiscordStageInstance>>","description":"dev.kord.common.entity.DiscordGuild.stageInstances","location":"common/dev.kord.common.entity/-discord-guild/stage-instances.html","searchKeys":["stageInstances","val stageInstances: Optional<List<DiscordStageInstance>>","dev.kord.common.entity.DiscordGuild.stageInstances"]},{"name":"val stageInstances: Optional<List<DiscordStageInstance>>","description":"dev.kord.common.entity.DiscordPartialGuild.stageInstances","location":"common/dev.kord.common.entity/-discord-partial-guild/stage-instances.html","searchKeys":["stageInstances","val stageInstances: Optional<List<DiscordStageInstance>>","dev.kord.common.entity.DiscordPartialGuild.stageInstances"]},{"name":"val start: Optional<Instant>","description":"dev.kord.common.entity.DiscordActivityTimestamps.start","location":"common/dev.kord.common.entity/-discord-activity-timestamps/start.html","searchKeys":["start","val start: Optional<Instant>","dev.kord.common.entity.DiscordActivityTimestamps.start"]},{"name":"val state: Optional<String?>","description":"dev.kord.common.entity.DiscordActivity.state","location":"common/dev.kord.common.entity/-discord-activity/state.html","searchKeys":["state","val state: Optional<String?>","dev.kord.common.entity.DiscordActivity.state"]},{"name":"val status: GuildScheduledEventStatus","description":"dev.kord.common.entity.DiscordGuildScheduledEvent.status","location":"common/dev.kord.common.entity/-discord-guild-scheduled-event/status.html","searchKeys":["status","val status: GuildScheduledEventStatus","dev.kord.common.entity.DiscordGuildScheduledEvent.status"]},{"name":"val status: PresenceStatus","description":"dev.kord.common.entity.DiscordPresenceUpdate.status","location":"common/dev.kord.common.entity/-discord-presence-update/status.html","searchKeys":["status","val status: PresenceStatus","dev.kord.common.entity.DiscordPresenceUpdate.status"]},{"name":"val stickers: List<DiscordMessageSticker>","description":"dev.kord.common.entity.DiscordGuildPreview.stickers","location":"common/dev.kord.common.entity/-discord-guild-preview/stickers.html","searchKeys":["stickers","val stickers: List<DiscordMessageSticker>","dev.kord.common.entity.DiscordGuildPreview.stickers"]},{"name":"val stickers: List<DiscordMessageSticker>","description":"dev.kord.common.entity.DiscordStickerPack.stickers","location":"common/dev.kord.common.entity/-discord-sticker-pack/stickers.html","searchKeys":["stickers","val stickers: List<DiscordMessageSticker>","dev.kord.common.entity.DiscordStickerPack.stickers"]},{"name":"val stickers: Optional<List<DiscordMessageSticker>>","description":"dev.kord.common.entity.DiscordGuild.stickers","location":"common/dev.kord.common.entity/-discord-guild/stickers.html","searchKeys":["stickers","val stickers: Optional<List<DiscordMessageSticker>>","dev.kord.common.entity.DiscordGuild.stickers"]},{"name":"val stickers: Optional<List<DiscordMessageSticker>>","description":"dev.kord.common.entity.DiscordPartialGuild.stickers","location":"common/dev.kord.common.entity/-discord-partial-guild/stickers.html","searchKeys":["stickers","val stickers: Optional<List<DiscordMessageSticker>>","dev.kord.common.entity.DiscordPartialGuild.stickers"]},{"name":"val stickers: Optional<List<DiscordStickerItem>>","description":"dev.kord.common.entity.DiscordMessage.stickers","location":"common/dev.kord.common.entity/-discord-message/stickers.html","searchKeys":["stickers","val stickers: Optional<List<DiscordStickerItem>>","dev.kord.common.entity.DiscordMessage.stickers"]},{"name":"val stickers: Optional<List<DiscordStickerItem>>","description":"dev.kord.common.entity.DiscordPartialMessage.stickers","location":"common/dev.kord.common.entity/-discord-partial-message/stickers.html","searchKeys":["stickers","val stickers: Optional<List<DiscordStickerItem>>","dev.kord.common.entity.DiscordPartialMessage.stickers"]},{"name":"val style: Optional<ButtonStyle>","description":"dev.kord.common.entity.DiscordChatComponent.style","location":"common/dev.kord.common.entity/-discord-chat-component/style.html","searchKeys":["style","val style: Optional<ButtonStyle>","dev.kord.common.entity.DiscordChatComponent.style"]},{"name":"val style: Optional<TextInputStyle>","description":"dev.kord.common.entity.DiscordTextInputComponent.style","location":"common/dev.kord.common.entity/-discord-text-input-component/style.html","searchKeys":["style","val style: Optional<TextInputStyle>","dev.kord.common.entity.DiscordTextInputComponent.style"]},{"name":"val style: String","description":"dev.kord.common.DiscordTimestampStyle.style","location":"common/dev.kord.common/-discord-timestamp-style/style.html","searchKeys":["style","val style: String","dev.kord.common.DiscordTimestampStyle.style"]},{"name":"val subscriberCount: Int","description":"dev.kord.common.entity.DiscordIntegration.subscriberCount","location":"common/dev.kord.common.entity/-discord-integration/subscriber-count.html","searchKeys":["subscriberCount","val subscriberCount: Int","dev.kord.common.entity.DiscordIntegration.subscriberCount"]},{"name":"val suppress: Boolean","description":"dev.kord.common.entity.DiscordVoiceState.suppress","location":"common/dev.kord.common.entity/-discord-voice-state/suppress.html","searchKeys":["suppress","val suppress: Boolean","dev.kord.common.entity.DiscordVoiceState.suppress"]},{"name":"val syncedAt: Instant","description":"dev.kord.common.entity.DiscordIntegration.syncedAt","location":"common/dev.kord.common.entity/-discord-integration/synced-at.html","searchKeys":["syncedAt","val syncedAt: Instant","dev.kord.common.entity.DiscordIntegration.syncedAt"]},{"name":"val syncing: Boolean","description":"dev.kord.common.entity.DiscordIntegration.syncing","location":"common/dev.kord.common.entity/-discord-integration/syncing.html","searchKeys":["syncing","val syncing: Boolean","dev.kord.common.entity.DiscordIntegration.syncing"]},{"name":"val system: OptionalBoolean","description":"dev.kord.common.entity.DiscordOptionallyMemberUser.system","location":"common/dev.kord.common.entity/-discord-optionally-member-user/system.html","searchKeys":["system","val system: OptionalBoolean","dev.kord.common.entity.DiscordOptionallyMemberUser.system"]},{"name":"val system: OptionalBoolean","description":"dev.kord.common.entity.DiscordUser.system","location":"common/dev.kord.common.entity/-discord-user/system.html","searchKeys":["system","val system: OptionalBoolean","dev.kord.common.entity.DiscordUser.system"]},{"name":"val systemChannelFlags: SystemChannelFlags","description":"dev.kord.common.entity.DiscordGuild.systemChannelFlags","location":"common/dev.kord.common.entity/-discord-guild/system-channel-flags.html","searchKeys":["systemChannelFlags","val systemChannelFlags: SystemChannelFlags","dev.kord.common.entity.DiscordGuild.systemChannelFlags"]},{"name":"val systemChannelId: Snowflake?","description":"dev.kord.common.entity.DiscordGuild.systemChannelId","location":"common/dev.kord.common.entity/-discord-guild/system-channel-id.html","searchKeys":["systemChannelId","val systemChannelId: Snowflake?","dev.kord.common.entity.DiscordGuild.systemChannelId"]},{"name":"val tags: Optional<DiscordRoleTags>","description":"dev.kord.common.entity.DiscordPartialRole.tags","location":"common/dev.kord.common.entity/-discord-partial-role/tags.html","searchKeys":["tags","val tags: Optional<DiscordRoleTags>","dev.kord.common.entity.DiscordPartialRole.tags"]},{"name":"val tags: Optional<DiscordRoleTags>","description":"dev.kord.common.entity.DiscordRole.tags","location":"common/dev.kord.common.entity/-discord-role/tags.html","searchKeys":["tags","val tags: Optional<DiscordRoleTags>","dev.kord.common.entity.DiscordRole.tags"]},{"name":"val tags: Optional<String>","description":"dev.kord.common.entity.DiscordMessageSticker.tags","location":"common/dev.kord.common.entity/-discord-message-sticker/tags.html","searchKeys":["tags","val tags: Optional<String>","dev.kord.common.entity.DiscordMessageSticker.tags"]},{"name":"val targetId: OptionalSnowflake","description":"dev.kord.common.entity.InteractionCallbackData.targetId","location":"common/dev.kord.common.entity/-interaction-callback-data/target-id.html","searchKeys":["targetId","val targetId: OptionalSnowflake","dev.kord.common.entity.InteractionCallbackData.targetId"]},{"name":"val targetId: Snowflake?","description":"dev.kord.common.entity.DiscordAuditLogEntry.targetId","location":"common/dev.kord.common.entity/-discord-audit-log-entry/target-id.html","searchKeys":["targetId","val targetId: Snowflake?","dev.kord.common.entity.DiscordAuditLogEntry.targetId"]},{"name":"val team: DiscordTeam?","description":"dev.kord.common.entity.DiscordApplication.team","location":"common/dev.kord.common.entity/-discord-application/team.html","searchKeys":["team","val team: DiscordTeam?","dev.kord.common.entity.DiscordApplication.team"]},{"name":"val teamId: Snowflake","description":"dev.kord.common.entity.DiscordTeamMember.teamId","location":"common/dev.kord.common.entity/-discord-team-member/team-id.html","searchKeys":["teamId","val teamId: Snowflake","dev.kord.common.entity.DiscordTeamMember.teamId"]},{"name":"val temporary: Boolean","description":"dev.kord.common.entity.DiscordInviteWithMetadata.temporary","location":"common/dev.kord.common.entity/-discord-invite-with-metadata/temporary.html","searchKeys":["temporary","val temporary: Boolean","dev.kord.common.entity.DiscordInviteWithMetadata.temporary"]},{"name":"val text: String","description":"dev.kord.common.entity.DiscordEmbed.Footer.text","location":"common/dev.kord.common.entity/-discord-embed/-footer/text.html","searchKeys":["text","val text: String","dev.kord.common.entity.DiscordEmbed.Footer.text"]},{"name":"val thread: Optional<DiscordChannel>","description":"dev.kord.common.entity.DiscordMessage.thread","location":"common/dev.kord.common.entity/-discord-message/thread.html","searchKeys":["thread","val thread: Optional<DiscordChannel>","dev.kord.common.entity.DiscordMessage.thread"]},{"name":"val threadMetadata: Optional<DiscordThreadMetadata>","description":"dev.kord.common.entity.DiscordChannel.threadMetadata","location":"common/dev.kord.common.entity/-discord-channel/thread-metadata.html","searchKeys":["threadMetadata","val threadMetadata: Optional<DiscordThreadMetadata>","dev.kord.common.entity.DiscordChannel.threadMetadata"]},{"name":"val threads: List<DiscordChannel>","description":"dev.kord.common.entity.DiscordAuditLog.threads","location":"common/dev.kord.common.entity/-discord-audit-log/threads.html","searchKeys":["threads","val threads: List<DiscordChannel>","dev.kord.common.entity.DiscordAuditLog.threads"]},{"name":"val threads: Optional<List<DiscordChannel>>","description":"dev.kord.common.entity.DiscordGuild.threads","location":"common/dev.kord.common.entity/-discord-guild/threads.html","searchKeys":["threads","val threads: Optional<List<DiscordChannel>>","dev.kord.common.entity.DiscordGuild.threads"]},{"name":"val thumbnail: Optional<DiscordEmbed.Thumbnail>","description":"dev.kord.common.entity.DiscordEmbed.thumbnail","location":"common/dev.kord.common.entity/-discord-embed/thumbnail.html","searchKeys":["thumbnail","val thumbnail: Optional<DiscordEmbed.Thumbnail>","dev.kord.common.entity.DiscordEmbed.thumbnail"]},{"name":"val timeMark: TimeMark","description":"dev.kord.common.entity.Snowflake.timeMark","location":"common/dev.kord.common.entity/-snowflake/time-mark.html","searchKeys":["timeMark","val timeMark: TimeMark","dev.kord.common.entity.Snowflake.timeMark"]},{"name":"val timestamp: Instant","description":"dev.kord.common.entity.DiscordMessage.timestamp","location":"common/dev.kord.common.entity/-discord-message/timestamp.html","searchKeys":["timestamp","val timestamp: Instant","dev.kord.common.entity.DiscordMessage.timestamp"]},{"name":"val timestamp: Instant","description":"dev.kord.common.entity.DiscordTyping.timestamp","location":"common/dev.kord.common.entity/-discord-typing/timestamp.html","searchKeys":["timestamp","val timestamp: Instant","dev.kord.common.entity.DiscordTyping.timestamp"]},{"name":"val timestamp: Instant","description":"dev.kord.common.entity.Snowflake.timestamp","location":"common/dev.kord.common.entity/-snowflake/timestamp.html","searchKeys":["timestamp","val timestamp: Instant","dev.kord.common.entity.Snowflake.timestamp"]},{"name":"val timestamp: Optional<Instant>","description":"dev.kord.common.entity.DiscordEmbed.timestamp","location":"common/dev.kord.common.entity/-discord-embed/timestamp.html","searchKeys":["timestamp","val timestamp: Optional<Instant>","dev.kord.common.entity.DiscordEmbed.timestamp"]},{"name":"val timestamp: Optional<Instant>","description":"dev.kord.common.entity.DiscordPartialMessage.timestamp","location":"common/dev.kord.common.entity/-discord-partial-message/timestamp.html","searchKeys":["timestamp","val timestamp: Optional<Instant>","dev.kord.common.entity.DiscordPartialMessage.timestamp"]},{"name":"val timestamps: Optional<DiscordActivityTimestamps>","description":"dev.kord.common.entity.DiscordActivity.timestamps","location":"common/dev.kord.common.entity/-discord-activity/timestamps.html","searchKeys":["timestamps","val timestamps: Optional<DiscordActivityTimestamps>","dev.kord.common.entity.DiscordActivity.timestamps"]},{"name":"val title: Optional<String>","description":"dev.kord.common.entity.DiscordEmbed.title","location":"common/dev.kord.common.entity/-discord-embed/title.html","searchKeys":["title","val title: Optional<String>","dev.kord.common.entity.DiscordEmbed.title"]},{"name":"val title: String","description":"dev.kord.common.entity.DiscordModal.title","location":"common/dev.kord.common.entity/-discord-modal/title.html","searchKeys":["title","val title: String","dev.kord.common.entity.DiscordModal.title"]},{"name":"val token: Optional<String>","description":"dev.kord.common.entity.DiscordWebhook.token","location":"common/dev.kord.common.entity/-discord-webhook/token.html","searchKeys":["token","val token: Optional<String>","dev.kord.common.entity.DiscordWebhook.token"]},{"name":"val token: String","description":"dev.kord.common.entity.DiscordInteraction.token","location":"common/dev.kord.common.entity/-discord-interaction/token.html","searchKeys":["token","val token: String","dev.kord.common.entity.DiscordInteraction.token"]},{"name":"val token: String","description":"dev.kord.common.entity.DiscordVoiceServerUpdateData.token","location":"common/dev.kord.common.entity/-discord-voice-server-update-data/token.html","searchKeys":["token","val token: String","dev.kord.common.entity.DiscordVoiceServerUpdateData.token"]},{"name":"val topic: Optional<String?>","description":"dev.kord.common.entity.DiscordChannel.topic","location":"common/dev.kord.common.entity/-discord-channel/topic.html","searchKeys":["topic","val topic: Optional<String?>","dev.kord.common.entity.DiscordChannel.topic"]},{"name":"val topic: String","description":"dev.kord.common.entity.DiscordStageInstance.topic","location":"common/dev.kord.common.entity/-discord-stage-instance/topic.html","searchKeys":["topic","val topic: String","dev.kord.common.entity.DiscordStageInstance.topic"]},{"name":"val triggerMetadata: DiscordAutoModerationRuleTriggerMetadata","description":"dev.kord.common.entity.DiscordAutoModerationRule.triggerMetadata","location":"common/dev.kord.common.entity/-discord-auto-moderation-rule/trigger-metadata.html","searchKeys":["triggerMetadata","val triggerMetadata: DiscordAutoModerationRuleTriggerMetadata","dev.kord.common.entity.DiscordAutoModerationRule.triggerMetadata"]},{"name":"val triggerType: AutoModerationRuleTriggerType","description":"dev.kord.common.entity.DiscordAutoModerationRule.triggerType","location":"common/dev.kord.common.entity/-discord-auto-moderation-rule/trigger-type.html","searchKeys":["triggerType","val triggerType: AutoModerationRuleTriggerType","dev.kord.common.entity.DiscordAutoModerationRule.triggerType"]},{"name":"val tts: Boolean","description":"dev.kord.common.entity.DiscordMessage.tts","location":"common/dev.kord.common.entity/-discord-message/tts.html","searchKeys":["tts","val tts: Boolean","dev.kord.common.entity.DiscordMessage.tts"]},{"name":"val tts: OptionalBoolean","description":"dev.kord.common.entity.DiscordPartialMessage.tts","location":"common/dev.kord.common.entity/-discord-partial-message/tts.html","searchKeys":["tts","val tts: OptionalBoolean","dev.kord.common.entity.DiscordPartialMessage.tts"]},{"name":"val type: ActivityType","description":"dev.kord.common.entity.DiscordActivity.type","location":"common/dev.kord.common.entity/-discord-activity/type.html","searchKeys":["type","val type: ActivityType","dev.kord.common.entity.DiscordActivity.type"]},{"name":"val type: ActivityType","description":"dev.kord.common.entity.DiscordBotActivity.type","location":"common/dev.kord.common.entity/-discord-bot-activity/type.html","searchKeys":["type","val type: ActivityType","dev.kord.common.entity.DiscordBotActivity.type"]},{"name":"val type: ApplicationCommandOptionType","description":"dev.kord.common.entity.ApplicationCommandOption.type","location":"common/dev.kord.common.entity/-application-command-option/type.html","searchKeys":["type","val type: ApplicationCommandOptionType","dev.kord.common.entity.ApplicationCommandOption.type"]},{"name":"val type: ApplicationCommandPermissionType","description":"dev.kord.common.entity.DiscordGuildApplicationCommandPermission.type","location":"common/dev.kord.common.entity/-discord-guild-application-command-permission/type.html","searchKeys":["type","val type: ApplicationCommandPermissionType","dev.kord.common.entity.DiscordGuildApplicationCommandPermission.type"]},{"name":"val type: AutoModerationActionType","description":"dev.kord.common.entity.DiscordAutoModerationAction.type","location":"common/dev.kord.common.entity/-discord-auto-moderation-action/type.html","searchKeys":["type","val type: AutoModerationActionType","dev.kord.common.entity.DiscordAutoModerationAction.type"]},{"name":"val type: ChannelType","description":"dev.kord.common.entity.DiscordChannel.type","location":"common/dev.kord.common.entity/-discord-channel/type.html","searchKeys":["type","val type: ChannelType","dev.kord.common.entity.DiscordChannel.type"]},{"name":"val type: ChannelType","description":"dev.kord.common.entity.DiscordMentionedChannel.type","location":"common/dev.kord.common.entity/-discord-mentioned-channel/type.html","searchKeys":["type","val type: ChannelType","dev.kord.common.entity.DiscordMentionedChannel.type"]},{"name":"val type: Int","description":"dev.kord.common.entity.ApplicationCommandOptionType.type","location":"common/dev.kord.common.entity/-application-command-option-type/type.html","searchKeys":["type","val type: Int","dev.kord.common.entity.ApplicationCommandOptionType.type"]},{"name":"val type: Int","description":"dev.kord.common.entity.InteractionResponseType.type","location":"common/dev.kord.common.entity/-interaction-response-type/type.html","searchKeys":["type","val type: Int","dev.kord.common.entity.InteractionResponseType.type"]},{"name":"val type: Int","description":"dev.kord.common.entity.InteractionType.type","location":"common/dev.kord.common.entity/-interaction-type/type.html","searchKeys":["type","val type: Int","dev.kord.common.entity.InteractionType.type"]},{"name":"val type: InteractionType","description":"dev.kord.common.entity.DiscordInteraction.type","location":"common/dev.kord.common.entity/-discord-interaction/type.html","searchKeys":["type","val type: InteractionType","dev.kord.common.entity.DiscordInteraction.type"]},{"name":"val type: InteractionType","description":"dev.kord.common.entity.DiscordMessageInteraction.type","location":"common/dev.kord.common.entity/-discord-message-interaction/type.html","searchKeys":["type","val type: InteractionType","dev.kord.common.entity.DiscordMessageInteraction.type"]},{"name":"val type: MessageActivityType","description":"dev.kord.common.entity.MessageActivity.type","location":"common/dev.kord.common.entity/-message-activity/type.html","searchKeys":["type","val type: MessageActivityType","dev.kord.common.entity.MessageActivity.type"]},{"name":"val type: MessageType","description":"dev.kord.common.entity.DiscordMessage.type","location":"common/dev.kord.common.entity/-discord-message/type.html","searchKeys":["type","val type: MessageType","dev.kord.common.entity.DiscordMessage.type"]},{"name":"val type: Optional<ApplicationCommandType>","description":"dev.kord.common.entity.DiscordApplicationCommand.type","location":"common/dev.kord.common.entity/-discord-application-command/type.html","searchKeys":["type","val type: Optional<ApplicationCommandType>","dev.kord.common.entity.DiscordApplicationCommand.type"]},{"name":"val type: Optional<ApplicationCommandType>","description":"dev.kord.common.entity.InteractionCallbackData.type","location":"common/dev.kord.common.entity/-interaction-callback-data/type.html","searchKeys":["type","val type: Optional<ApplicationCommandType>","dev.kord.common.entity.InteractionCallbackData.type"]},{"name":"val type: Optional<EmbedType>","description":"dev.kord.common.entity.DiscordEmbed.type","location":"common/dev.kord.common.entity/-discord-embed/type.html","searchKeys":["type","val type: Optional<EmbedType>","dev.kord.common.entity.DiscordEmbed.type"]},{"name":"val type: Optional<MessageType>","description":"dev.kord.common.entity.DiscordPartialMessage.type","location":"common/dev.kord.common.entity/-discord-partial-message/type.html","searchKeys":["type","val type: Optional<MessageType>","dev.kord.common.entity.DiscordPartialMessage.type"]},{"name":"val type: Optional<OverwriteType>","description":"dev.kord.common.entity.AuditLogEntryOptionalInfo.type","location":"common/dev.kord.common.entity/-audit-log-entry-optional-info/type.html","searchKeys":["type","val type: Optional<OverwriteType>","dev.kord.common.entity.AuditLogEntryOptionalInfo.type"]},{"name":"val type: OverwriteType","description":"dev.kord.common.entity.Overwrite.type","location":"common/dev.kord.common.entity/-overwrite/type.html","searchKeys":["type","val type: OverwriteType","dev.kord.common.entity.Overwrite.type"]},{"name":"val type: String","description":"dev.kord.common.entity.DiscordConnection.type","location":"common/dev.kord.common.entity/-discord-connection/type.html","searchKeys":["type","val type: String","dev.kord.common.entity.DiscordConnection.type"]},{"name":"val type: String","description":"dev.kord.common.entity.DiscordIntegration.type","location":"common/dev.kord.common.entity/-discord-integration/type.html","searchKeys":["type","val type: String","dev.kord.common.entity.DiscordIntegration.type"]},{"name":"val type: String","description":"dev.kord.common.entity.DiscordPartialIntegration.type","location":"common/dev.kord.common.entity/-discord-partial-integration/type.html","searchKeys":["type","val type: String","dev.kord.common.entity.DiscordPartialIntegration.type"]},{"name":"val type: WebhookType","description":"dev.kord.common.entity.DiscordWebhook.type","location":"common/dev.kord.common.entity/-discord-webhook/type.html","searchKeys":["type","val type: WebhookType","dev.kord.common.entity.DiscordWebhook.type"]},{"name":"val unavailable: OptionalBoolean","description":"dev.kord.common.entity.DiscordGuild.unavailable","location":"common/dev.kord.common.entity/-discord-guild/unavailable.html","searchKeys":["unavailable","val unavailable: OptionalBoolean","dev.kord.common.entity.DiscordGuild.unavailable"]},{"name":"val unavailable: OptionalBoolean","description":"dev.kord.common.entity.DiscordUnavailableGuild.unavailable","location":"common/dev.kord.common.entity/-discord-unavailable-guild/unavailable.html","searchKeys":["unavailable","val unavailable: OptionalBoolean","dev.kord.common.entity.DiscordUnavailableGuild.unavailable"]},{"name":"val unicodeEmoji: Optional<String?>","description":"dev.kord.common.entity.DiscordPartialRole.unicodeEmoji","location":"common/dev.kord.common.entity/-discord-partial-role/unicode-emoji.html","searchKeys":["unicodeEmoji","val unicodeEmoji: Optional<String?>","dev.kord.common.entity.DiscordPartialRole.unicodeEmoji"]},{"name":"val unicodeEmoji: Optional<String?>","description":"dev.kord.common.entity.DiscordRole.unicodeEmoji","location":"common/dev.kord.common.entity/-discord-role/unicode-emoji.html","searchKeys":["unicodeEmoji","val unicodeEmoji: Optional<String?>","dev.kord.common.entity.DiscordRole.unicodeEmoji"]},{"name":"val unit: DurationUnit","description":"dev.kord.common.serialization.DurationAsLongSerializer.unit","location":"common/dev.kord.common.serialization/-duration-as-long-serializer/unit.html","searchKeys":["unit","val unit: DurationUnit","dev.kord.common.serialization.DurationAsLongSerializer.unit"]},{"name":"val updatedAt: Instant","description":"dev.kord.common.entity.DiscordTemplate.updatedAt","location":"common/dev.kord.common.entity/-discord-template/updated-at.html","searchKeys":["updatedAt","val updatedAt: Instant","dev.kord.common.entity.DiscordTemplate.updatedAt"]},{"name":"val url: Optional<String>","description":"dev.kord.common.entity.DiscordEmbed.Author.url","location":"common/dev.kord.common.entity/-discord-embed/-author/url.html","searchKeys":["url","val url: Optional<String>","dev.kord.common.entity.DiscordEmbed.Author.url"]},{"name":"val url: Optional<String>","description":"dev.kord.common.entity.DiscordEmbed.Image.url","location":"common/dev.kord.common.entity/-discord-embed/-image/url.html","searchKeys":["url","val url: Optional<String>","dev.kord.common.entity.DiscordEmbed.Image.url"]},{"name":"val url: Optional<String>","description":"dev.kord.common.entity.DiscordEmbed.Thumbnail.url","location":"common/dev.kord.common.entity/-discord-embed/-thumbnail/url.html","searchKeys":["url","val url: Optional<String>","dev.kord.common.entity.DiscordEmbed.Thumbnail.url"]},{"name":"val url: Optional<String>","description":"dev.kord.common.entity.DiscordEmbed.Video.url","location":"common/dev.kord.common.entity/-discord-embed/-video/url.html","searchKeys":["url","val url: Optional<String>","dev.kord.common.entity.DiscordEmbed.Video.url"]},{"name":"val url: Optional<String>","description":"dev.kord.common.entity.DiscordEmbed.url","location":"common/dev.kord.common.entity/-discord-embed/url.html","searchKeys":["url","val url: Optional<String>","dev.kord.common.entity.DiscordEmbed.url"]},{"name":"val url: Optional<String?>","description":"dev.kord.common.entity.DiscordActivity.url","location":"common/dev.kord.common.entity/-discord-activity/url.html","searchKeys":["url","val url: Optional<String?>","dev.kord.common.entity.DiscordActivity.url"]},{"name":"val url: Optional<String?>","description":"dev.kord.common.entity.DiscordBotActivity.url","location":"common/dev.kord.common.entity/-discord-bot-activity/url.html","searchKeys":["url","val url: Optional<String?>","dev.kord.common.entity.DiscordBotActivity.url"]},{"name":"val url: Optional<String?>","description":"dev.kord.common.entity.DiscordEmbed.Provider.url","location":"common/dev.kord.common.entity/-discord-embed/-provider/url.html","searchKeys":["url","val url: Optional<String?>","dev.kord.common.entity.DiscordEmbed.Provider.url"]},{"name":"val url: String","description":"dev.kord.common.entity.DiscordAttachment.url","location":"common/dev.kord.common.entity/-discord-attachment/url.html","searchKeys":["url","val url: String","dev.kord.common.entity.DiscordAttachment.url"]},{"name":"val usageCount: Int","description":"dev.kord.common.entity.DiscordTemplate.usageCount","location":"common/dev.kord.common.entity/-discord-template/usage-count.html","searchKeys":["usageCount","val usageCount: Int","dev.kord.common.entity.DiscordTemplate.usageCount"]},{"name":"val user: DiscordPresenceUser","description":"dev.kord.common.entity.DiscordPresenceUpdate.user","location":"common/dev.kord.common.entity/-discord-presence-update/user.html","searchKeys":["user","val user: DiscordPresenceUser","dev.kord.common.entity.DiscordPresenceUpdate.user"]},{"name":"val user: DiscordUser","description":"dev.kord.common.entity.DiscordGuildBan.user","location":"common/dev.kord.common.entity/-discord-guild-ban/user.html","searchKeys":["user","val user: DiscordUser","dev.kord.common.entity.DiscordGuildBan.user"]},{"name":"val user: DiscordUser","description":"dev.kord.common.entity.DiscordIntegration.user","location":"common/dev.kord.common.entity/-discord-integration/user.html","searchKeys":["user","val user: DiscordUser","dev.kord.common.entity.DiscordIntegration.user"]},{"name":"val user: DiscordUser","description":"dev.kord.common.entity.DiscordMessageInteraction.user","location":"common/dev.kord.common.entity/-discord-message-interaction/user.html","searchKeys":["user","val user: DiscordUser","dev.kord.common.entity.DiscordMessageInteraction.user"]},{"name":"val user: DiscordUser","description":"dev.kord.common.entity.DiscordRemovedGuildMember.user","location":"common/dev.kord.common.entity/-discord-removed-guild-member/user.html","searchKeys":["user","val user: DiscordUser","dev.kord.common.entity.DiscordRemovedGuildMember.user"]},{"name":"val user: DiscordUser","description":"dev.kord.common.entity.DiscordTeamMember.user","location":"common/dev.kord.common.entity/-discord-team-member/user.html","searchKeys":["user","val user: DiscordUser","dev.kord.common.entity.DiscordTeamMember.user"]},{"name":"val user: DiscordUser","description":"dev.kord.common.entity.DiscordUpdatedGuildMember.user","location":"common/dev.kord.common.entity/-discord-updated-guild-member/user.html","searchKeys":["user","val user: DiscordUser","dev.kord.common.entity.DiscordUpdatedGuildMember.user"]},{"name":"val user: Optional<DiscordUser>","description":"dev.kord.common.entity.DiscordAddedGuildMember.user","location":"common/dev.kord.common.entity/-discord-added-guild-member/user.html","searchKeys":["user","val user: Optional<DiscordUser>","dev.kord.common.entity.DiscordAddedGuildMember.user"]},{"name":"val user: Optional<DiscordUser>","description":"dev.kord.common.entity.DiscordEmoji.user","location":"common/dev.kord.common.entity/-discord-emoji/user.html","searchKeys":["user","val user: Optional<DiscordUser>","dev.kord.common.entity.DiscordEmoji.user"]},{"name":"val user: Optional<DiscordUser>","description":"dev.kord.common.entity.DiscordGuildMember.user","location":"common/dev.kord.common.entity/-discord-guild-member/user.html","searchKeys":["user","val user: Optional<DiscordUser>","dev.kord.common.entity.DiscordGuildMember.user"]},{"name":"val user: Optional<DiscordUser>","description":"dev.kord.common.entity.DiscordInteraction.user","location":"common/dev.kord.common.entity/-discord-interaction/user.html","searchKeys":["user","val user: Optional<DiscordUser>","dev.kord.common.entity.DiscordInteraction.user"]},{"name":"val user: Optional<DiscordUser>","description":"dev.kord.common.entity.DiscordInteractionGuildMember.user","location":"common/dev.kord.common.entity/-discord-interaction-guild-member/user.html","searchKeys":["user","val user: Optional<DiscordUser>","dev.kord.common.entity.DiscordInteractionGuildMember.user"]},{"name":"val user: Optional<DiscordUser>","description":"dev.kord.common.entity.DiscordMessageSticker.user","location":"common/dev.kord.common.entity/-discord-message-sticker/user.html","searchKeys":["user","val user: Optional<DiscordUser>","dev.kord.common.entity.DiscordMessageSticker.user"]},{"name":"val user: Optional<DiscordUser>","description":"dev.kord.common.entity.DiscordWebhook.user","location":"common/dev.kord.common.entity/-discord-webhook/user.html","searchKeys":["user","val user: Optional<DiscordUser>","dev.kord.common.entity.DiscordWebhook.user"]},{"name":"val userCount: OptionalInt","description":"dev.kord.common.entity.DiscordGuildScheduledEvent.userCount","location":"common/dev.kord.common.entity/-discord-guild-scheduled-event/user-count.html","searchKeys":["userCount","val userCount: OptionalInt","dev.kord.common.entity.DiscordGuildScheduledEvent.userCount"]},{"name":"val userId: OptionalSnowflake","description":"dev.kord.common.entity.DiscordThreadMember.userId","location":"common/dev.kord.common.entity/-discord-thread-member/user-id.html","searchKeys":["userId","val userId: OptionalSnowflake","dev.kord.common.entity.DiscordThreadMember.userId"]},{"name":"val userId: Snowflake","description":"dev.kord.common.entity.DiscordAuditLogEntry.userId","location":"common/dev.kord.common.entity/-discord-audit-log-entry/user-id.html","searchKeys":["userId","val userId: Snowflake","dev.kord.common.entity.DiscordAuditLogEntry.userId"]},{"name":"val userId: Snowflake","description":"dev.kord.common.entity.DiscordTyping.userId","location":"common/dev.kord.common.entity/-discord-typing/user-id.html","searchKeys":["userId","val userId: Snowflake","dev.kord.common.entity.DiscordTyping.userId"]},{"name":"val userId: Snowflake","description":"dev.kord.common.entity.DiscordVoiceState.userId","location":"common/dev.kord.common.entity/-discord-voice-state/user-id.html","searchKeys":["userId","val userId: Snowflake","dev.kord.common.entity.DiscordVoiceState.userId"]},{"name":"val userId: Snowflake","description":"dev.kord.common.entity.MessageReactionAddData.userId","location":"common/dev.kord.common.entity/-message-reaction-add-data/user-id.html","searchKeys":["userId","val userId: Snowflake","dev.kord.common.entity.MessageReactionAddData.userId"]},{"name":"val userId: Snowflake","description":"dev.kord.common.entity.MessageReactionRemoveData.userId","location":"common/dev.kord.common.entity/-message-reaction-remove-data/user-id.html","searchKeys":["userId","val userId: Snowflake","dev.kord.common.entity.MessageReactionRemoveData.userId"]},{"name":"val userLimit: OptionalInt","description":"dev.kord.common.entity.DiscordChannel.userLimit","location":"common/dev.kord.common.entity/-discord-channel/user-limit.html","searchKeys":["userLimit","val userLimit: OptionalInt","dev.kord.common.entity.DiscordChannel.userLimit"]},{"name":"val username: String","description":"dev.kord.common.entity.DiscordOptionallyMemberUser.username","location":"common/dev.kord.common.entity/-discord-optionally-member-user/username.html","searchKeys":["username","val username: String","dev.kord.common.entity.DiscordOptionallyMemberUser.username"]},{"name":"val username: String","description":"dev.kord.common.entity.DiscordUser.username","location":"common/dev.kord.common.entity/-discord-user/username.html","searchKeys":["username","val username: String","dev.kord.common.entity.DiscordUser.username"]},{"name":"val users: List<DiscordUser>","description":"dev.kord.common.entity.DiscordAuditLog.users","location":"common/dev.kord.common.entity/-discord-audit-log/users.html","searchKeys":["users","val users: List<DiscordUser>","dev.kord.common.entity.DiscordAuditLog.users"]},{"name":"val users: List<String>","description":"dev.kord.common.entity.AllowedMentions.users","location":"common/dev.kord.common.entity/-allowed-mentions/users.html","searchKeys":["users","val users: List<String>","dev.kord.common.entity.AllowedMentions.users"]},{"name":"val users: Optional<Map<Snowflake, DiscordUser>>","description":"dev.kord.common.entity.ResolvedObjects.users","location":"common/dev.kord.common.entity/-resolved-objects/users.html","searchKeys":["users","val users: Optional<Map<Snowflake, DiscordUser>>","dev.kord.common.entity.ResolvedObjects.users"]},{"name":"val uses: Int","description":"dev.kord.common.entity.DiscordInviteWithMetadata.uses","location":"common/dev.kord.common.entity/-discord-invite-with-metadata/uses.html","searchKeys":["uses","val uses: Int","dev.kord.common.entity.DiscordInviteWithMetadata.uses"]},{"name":"val uses: Int","description":"dev.kord.common.entity.DiscordPartialInvite.uses","location":"common/dev.kord.common.entity/-discord-partial-invite/uses.html","searchKeys":["uses","val uses: Int","dev.kord.common.entity.DiscordPartialInvite.uses"]},{"name":"val validValues: ULongRange","description":"dev.kord.common.entity.Snowflake.Companion.validValues","location":"common/dev.kord.common.entity/-snowflake/-companion/valid-values.html","searchKeys":["validValues","val validValues: ULongRange","dev.kord.common.entity.Snowflake.Companion.validValues"]},{"name":"val value: Boolean","description":"dev.kord.common.entity.optional.OptionalBoolean.Value.value","location":"common/dev.kord.common.entity.optional/-optional-boolean/-value/value.html","searchKeys":["value","val value: Boolean","dev.kord.common.entity.optional.OptionalBoolean.Value.value"]},{"name":"val value: Int","description":"dev.kord.common.entity.ActivityFlag.value","location":"common/dev.kord.common.entity/-activity-flag/value.html","searchKeys":["value","val value: Int","dev.kord.common.entity.ActivityFlag.value"]},{"name":"val value: Int","description":"dev.kord.common.entity.ActivityFlags.value","location":"common/dev.kord.common.entity/-activity-flags/value.html","searchKeys":["value","val value: Int","dev.kord.common.entity.ActivityFlags.value"]},{"name":"val value: Int","description":"dev.kord.common.entity.ApplicationCommandPermissionType.value","location":"common/dev.kord.common.entity/-application-command-permission-type/value.html","searchKeys":["value","val value: Int","dev.kord.common.entity.ApplicationCommandPermissionType.value"]},{"name":"val value: Int","description":"dev.kord.common.entity.ApplicationCommandType.value","location":"common/dev.kord.common.entity/-application-command-type/value.html","searchKeys":["value","val value: Int","dev.kord.common.entity.ApplicationCommandType.value"]},{"name":"val value: Int","description":"dev.kord.common.entity.AuditLogEvent.value","location":"common/dev.kord.common.entity/-audit-log-event/value.html","searchKeys":["value","val value: Int","dev.kord.common.entity.AuditLogEvent.value"]},{"name":"val value: Int","description":"dev.kord.common.entity.AutoModerationActionType.value","location":"common/dev.kord.common.entity/-auto-moderation-action-type/value.html","searchKeys":["value","val value: Int","dev.kord.common.entity.AutoModerationActionType.value"]},{"name":"val value: Int","description":"dev.kord.common.entity.AutoModerationRuleEventType.value","location":"common/dev.kord.common.entity/-auto-moderation-rule-event-type/value.html","searchKeys":["value","val value: Int","dev.kord.common.entity.AutoModerationRuleEventType.value"]},{"name":"val value: Int","description":"dev.kord.common.entity.AutoModerationRuleKeywordPresetType.value","location":"common/dev.kord.common.entity/-auto-moderation-rule-keyword-preset-type/value.html","searchKeys":["value","val value: Int","dev.kord.common.entity.AutoModerationRuleKeywordPresetType.value"]},{"name":"val value: Int","description":"dev.kord.common.entity.AutoModerationRuleTriggerType.value","location":"common/dev.kord.common.entity/-auto-moderation-rule-trigger-type/value.html","searchKeys":["value","val value: Int","dev.kord.common.entity.AutoModerationRuleTriggerType.value"]},{"name":"val value: Int","description":"dev.kord.common.entity.ButtonStyle.value","location":"common/dev.kord.common.entity/-button-style/value.html","searchKeys":["value","val value: Int","dev.kord.common.entity.ButtonStyle.value"]},{"name":"val value: Int","description":"dev.kord.common.entity.ChannelType.value","location":"common/dev.kord.common.entity/-channel-type/value.html","searchKeys":["value","val value: Int","dev.kord.common.entity.ChannelType.value"]},{"name":"val value: Int","description":"dev.kord.common.entity.ComponentType.value","location":"common/dev.kord.common.entity/-component-type/value.html","searchKeys":["value","val value: Int","dev.kord.common.entity.ComponentType.value"]},{"name":"val value: Int","description":"dev.kord.common.entity.DefaultMessageNotificationLevel.value","location":"common/dev.kord.common.entity/-default-message-notification-level/value.html","searchKeys":["value","val value: Int","dev.kord.common.entity.DefaultMessageNotificationLevel.value"]},{"name":"val value: Int","description":"dev.kord.common.entity.DiscordConnectionVisibility.value","location":"common/dev.kord.common.entity/-discord-connection-visibility/value.html","searchKeys":["value","val value: Int","dev.kord.common.entity.DiscordConnectionVisibility.value"]},{"name":"val value: Int","description":"dev.kord.common.entity.DiscordGuildApplicationCommandPermission.Type.value","location":"common/dev.kord.common.entity/-discord-guild-application-command-permission/-type/value.html","searchKeys":["value","val value: Int","dev.kord.common.entity.DiscordGuildApplicationCommandPermission.Type.value"]},{"name":"val value: Int","description":"dev.kord.common.entity.ExplicitContentFilter.value","location":"common/dev.kord.common.entity/-explicit-content-filter/value.html","searchKeys":["value","val value: Int","dev.kord.common.entity.ExplicitContentFilter.value"]},{"name":"val value: Int","description":"dev.kord.common.entity.GuildScheduledEventPrivacyLevel.value","location":"common/dev.kord.common.entity/-guild-scheduled-event-privacy-level/value.html","searchKeys":["value","val value: Int","dev.kord.common.entity.GuildScheduledEventPrivacyLevel.value"]},{"name":"val value: Int","description":"dev.kord.common.entity.GuildScheduledEventStatus.value","location":"common/dev.kord.common.entity/-guild-scheduled-event-status/value.html","searchKeys":["value","val value: Int","dev.kord.common.entity.GuildScheduledEventStatus.value"]},{"name":"val value: Int","description":"dev.kord.common.entity.IntegrationExpireBehavior.value","location":"common/dev.kord.common.entity/-integration-expire-behavior/value.html","searchKeys":["value","val value: Int","dev.kord.common.entity.IntegrationExpireBehavior.value"]},{"name":"val value: Int","description":"dev.kord.common.entity.InviteTargetType.value","location":"common/dev.kord.common.entity/-invite-target-type/value.html","searchKeys":["value","val value: Int","dev.kord.common.entity.InviteTargetType.value"]},{"name":"val value: Int","description":"dev.kord.common.entity.MFALevel.value","location":"common/dev.kord.common.entity/-m-f-a-level/value.html","searchKeys":["value","val value: Int","dev.kord.common.entity.MFALevel.value"]},{"name":"val value: Int","description":"dev.kord.common.entity.MessageActivityType.value","location":"common/dev.kord.common.entity/-message-activity-type/value.html","searchKeys":["value","val value: Int","dev.kord.common.entity.MessageActivityType.value"]},{"name":"val value: Int","description":"dev.kord.common.entity.MessageStickerType.value","location":"common/dev.kord.common.entity/-message-sticker-type/value.html","searchKeys":["value","val value: Int","dev.kord.common.entity.MessageStickerType.value"]},{"name":"val value: Int","description":"dev.kord.common.entity.NsfwLevel.value","location":"common/dev.kord.common.entity/-nsfw-level/value.html","searchKeys":["value","val value: Int","dev.kord.common.entity.NsfwLevel.value"]},{"name":"val value: Int","description":"dev.kord.common.entity.OverwriteType.value","location":"common/dev.kord.common.entity/-overwrite-type/value.html","searchKeys":["value","val value: Int","dev.kord.common.entity.OverwriteType.value"]},{"name":"val value: Int","description":"dev.kord.common.entity.PremiumTier.value","location":"common/dev.kord.common.entity/-premium-tier/value.html","searchKeys":["value","val value: Int","dev.kord.common.entity.PremiumTier.value"]},{"name":"val value: Int","description":"dev.kord.common.entity.ScheduledEntityType.value","location":"common/dev.kord.common.entity/-scheduled-entity-type/value.html","searchKeys":["value","val value: Int","dev.kord.common.entity.ScheduledEntityType.value"]},{"name":"val value: Int","description":"dev.kord.common.entity.StageInstancePrivacyLevel.value","location":"common/dev.kord.common.entity/-stage-instance-privacy-level/value.html","searchKeys":["value","val value: Int","dev.kord.common.entity.StageInstancePrivacyLevel.value"]},{"name":"val value: Int","description":"dev.kord.common.entity.TeamMembershipState.value","location":"common/dev.kord.common.entity/-team-membership-state/value.html","searchKeys":["value","val value: Int","dev.kord.common.entity.TeamMembershipState.value"]},{"name":"val value: Int","description":"dev.kord.common.entity.TextInputStyle.value","location":"common/dev.kord.common.entity/-text-input-style/value.html","searchKeys":["value","val value: Int","dev.kord.common.entity.TextInputStyle.value"]},{"name":"val value: Int","description":"dev.kord.common.entity.UserPremium.value","location":"common/dev.kord.common.entity/-user-premium/value.html","searchKeys":["value","val value: Int","dev.kord.common.entity.UserPremium.value"]},{"name":"val value: Int","description":"dev.kord.common.entity.VerificationLevel.value","location":"common/dev.kord.common.entity/-verification-level/value.html","searchKeys":["value","val value: Int","dev.kord.common.entity.VerificationLevel.value"]},{"name":"val value: Int","description":"dev.kord.common.entity.VideoQualityMode.value","location":"common/dev.kord.common.entity/-video-quality-mode/value.html","searchKeys":["value","val value: Int","dev.kord.common.entity.VideoQualityMode.value"]},{"name":"val value: Int","description":"dev.kord.common.entity.WebhookType.value","location":"common/dev.kord.common.entity/-webhook-type/value.html","searchKeys":["value","val value: Int","dev.kord.common.entity.WebhookType.value"]},{"name":"val value: Int","description":"dev.kord.common.entity.optional.OptionalInt.Value.value","location":"common/dev.kord.common.entity.optional/-optional-int/-value/value.html","searchKeys":["value","val value: Int","dev.kord.common.entity.optional.OptionalInt.Value.value"]},{"name":"val value: Long","description":"dev.kord.common.entity.optional.OptionalLong.Value.value","location":"common/dev.kord.common.entity.optional/-optional-long/-value/value.html","searchKeys":["value","val value: Long","dev.kord.common.entity.optional.OptionalLong.Value.value"]},{"name":"val value: String","description":"dev.kord.common.DiscordBitSet.value","location":"common/dev.kord.common/-discord-bit-set/value.html","searchKeys":["value","val value: String","dev.kord.common.DiscordBitSet.value"]},{"name":"val value: String","description":"dev.kord.common.entity.AllowedMentionType.value","location":"common/dev.kord.common.entity/-allowed-mention-type/value.html","searchKeys":["value","val value: String","dev.kord.common.entity.AllowedMentionType.value"]},{"name":"val value: String","description":"dev.kord.common.entity.DiscordEmbed.Field.value","location":"common/dev.kord.common.entity/-discord-embed/-field/value.html","searchKeys":["value","val value: String","dev.kord.common.entity.DiscordEmbed.Field.value"]},{"name":"val value: String","description":"dev.kord.common.entity.DiscordSelectOption.value","location":"common/dev.kord.common.entity/-discord-select-option/value.html","searchKeys":["value","val value: String","dev.kord.common.entity.DiscordSelectOption.value"]},{"name":"val value: String","description":"dev.kord.common.entity.EmbedType.value","location":"common/dev.kord.common.entity/-embed-type/value.html","searchKeys":["value","val value: String","dev.kord.common.entity.EmbedType.value"]},{"name":"val value: String","description":"dev.kord.common.entity.GuildFeature.value","location":"common/dev.kord.common.entity/-guild-feature/value.html","searchKeys":["value","val value: String","dev.kord.common.entity.GuildFeature.value"]},{"name":"val value: String","description":"dev.kord.common.entity.PresenceStatus.value","location":"common/dev.kord.common.entity/-presence-status/value.html","searchKeys":["value","val value: String","dev.kord.common.entity.PresenceStatus.value"]},{"name":"val value: ULong","description":"dev.kord.common.entity.Snowflake.value","location":"common/dev.kord.common.entity/-snowflake/value.html","searchKeys":["value","val value: ULong","dev.kord.common.entity.Snowflake.value"]},{"name":"val values: Optional<List<String>>","description":"dev.kord.common.entity.InteractionCallbackData.values","location":"common/dev.kord.common.entity/-interaction-callback-data/values.html","searchKeys":["values","val values: Optional<List<String>>","dev.kord.common.entity.InteractionCallbackData.values"]},{"name":"val values: Set<ArchiveDuration>","description":"dev.kord.common.entity.ArchiveDuration.Companion.values","location":"common/dev.kord.common.entity/-archive-duration/-companion/values.html","searchKeys":["values","val values: Set<ArchiveDuration>","dev.kord.common.entity.ArchiveDuration.Companion.values"]},{"name":"val values: Set<MessageStickerType>","description":"dev.kord.common.entity.MessageStickerType.Companion.values","location":"common/dev.kord.common.entity/-message-sticker-type/-companion/values.html","searchKeys":["values","val values: Set<MessageStickerType>","dev.kord.common.entity.MessageStickerType.Companion.values"]},{"name":"val values: Set<MessageType>","description":"dev.kord.common.entity.MessageType.Companion.values","location":"common/dev.kord.common.entity/-message-type/-companion/values.html","searchKeys":["values","val values: Set<MessageType>","dev.kord.common.entity.MessageType.Companion.values"]},{"name":"val values: Set<Permission>","description":"dev.kord.common.entity.Permission.Companion.values","location":"common/dev.kord.common.entity/-permission/-companion/values.html","searchKeys":["values","val values: Set<Permission>","dev.kord.common.entity.Permission.Companion.values"]},{"name":"val values: Set<Permission>","description":"dev.kord.common.entity.Permissions.values","location":"common/dev.kord.common.entity/-permissions/values.html","searchKeys":["values","val values: Set<Permission>","dev.kord.common.entity.Permissions.values"]},{"name":"val vanityUrlCode: Optional<String?>","description":"dev.kord.common.entity.DiscordPartialGuild.vanityUrlCode","location":"common/dev.kord.common.entity/-discord-partial-guild/vanity-url-code.html","searchKeys":["vanityUrlCode","val vanityUrlCode: Optional<String?>","dev.kord.common.entity.DiscordPartialGuild.vanityUrlCode"]},{"name":"val vanityUrlCode: String?","description":"dev.kord.common.entity.DiscordGuild.vanityUrlCode","location":"common/dev.kord.common.entity/-discord-guild/vanity-url-code.html","searchKeys":["vanityUrlCode","val vanityUrlCode: String?","dev.kord.common.entity.DiscordGuild.vanityUrlCode"]},{"name":"val verificationLevel: Optional<VerificationLevel>","description":"dev.kord.common.entity.DiscordPartialGuild.verificationLevel","location":"common/dev.kord.common.entity/-discord-partial-guild/verification-level.html","searchKeys":["verificationLevel","val verificationLevel: Optional<VerificationLevel>","dev.kord.common.entity.DiscordPartialGuild.verificationLevel"]},{"name":"val verificationLevel: VerificationLevel","description":"dev.kord.common.entity.DiscordGuild.verificationLevel","location":"common/dev.kord.common.entity/-discord-guild/verification-level.html","searchKeys":["verificationLevel","val verificationLevel: VerificationLevel","dev.kord.common.entity.DiscordGuild.verificationLevel"]},{"name":"val verified: Boolean","description":"dev.kord.common.entity.DiscordConnection.verified","location":"common/dev.kord.common.entity/-discord-connection/verified.html","searchKeys":["verified","val verified: Boolean","dev.kord.common.entity.DiscordConnection.verified"]},{"name":"val verified: OptionalBoolean","description":"dev.kord.common.entity.DiscordOptionallyMemberUser.verified","location":"common/dev.kord.common.entity/-discord-optionally-member-user/verified.html","searchKeys":["verified","val verified: OptionalBoolean","dev.kord.common.entity.DiscordOptionallyMemberUser.verified"]},{"name":"val verified: OptionalBoolean","description":"dev.kord.common.entity.DiscordUser.verified","location":"common/dev.kord.common.entity/-discord-user/verified.html","searchKeys":["verified","val verified: OptionalBoolean","dev.kord.common.entity.DiscordUser.verified"]},{"name":"val version: Int","description":"dev.kord.common.entity.DiscordInteraction.version","location":"common/dev.kord.common.entity/-discord-interaction/version.html","searchKeys":["version","val version: Int","dev.kord.common.entity.DiscordInteraction.version"]},{"name":"val version: Snowflake","description":"dev.kord.common.entity.DiscordApplicationCommand.version","location":"common/dev.kord.common.entity/-discord-application-command/version.html","searchKeys":["version","val version: Snowflake","dev.kord.common.entity.DiscordApplicationCommand.version"]},{"name":"val version: String","description":"dev.kord.common.annotation.DeprecatedSinceKord.version","location":"common/dev.kord.common.annotation/-deprecated-since-kord/version.html","searchKeys":["version","val version: String","dev.kord.common.annotation.DeprecatedSinceKord.version"]},{"name":"val video: Optional<DiscordEmbed.Video>","description":"dev.kord.common.entity.DiscordEmbed.video","location":"common/dev.kord.common.entity/-discord-embed/video.html","searchKeys":["video","val video: Optional<DiscordEmbed.Video>","dev.kord.common.entity.DiscordEmbed.video"]},{"name":"val videoQualityMode: Optional<VideoQualityMode>","description":"dev.kord.common.entity.DiscordChannel.videoQualityMode","location":"common/dev.kord.common.entity/-discord-channel/video-quality-mode.html","searchKeys":["videoQualityMode","val videoQualityMode: Optional<VideoQualityMode>","dev.kord.common.entity.DiscordChannel.videoQualityMode"]},{"name":"val visibility: DiscordConnectionVisibility","description":"dev.kord.common.entity.DiscordConnection.visibility","location":"common/dev.kord.common.entity/-discord-connection/visibility.html","searchKeys":["visibility","val visibility: DiscordConnectionVisibility","dev.kord.common.entity.DiscordConnection.visibility"]},{"name":"val voiceStates: Optional<List<DiscordVoiceState>>","description":"dev.kord.common.entity.DiscordGuild.voiceStates","location":"common/dev.kord.common.entity/-discord-guild/voice-states.html","searchKeys":["voiceStates","val voiceStates: Optional<List<DiscordVoiceState>>","dev.kord.common.entity.DiscordGuild.voiceStates"]},{"name":"val web: Optional<PresenceStatus>","description":"dev.kord.common.entity.DiscordClientStatus.web","location":"common/dev.kord.common.entity/-discord-client-status/web.html","searchKeys":["web","val web: Optional<PresenceStatus>","dev.kord.common.entity.DiscordClientStatus.web"]},{"name":"val webhookId: OptionalSnowflake","description":"dev.kord.common.entity.DiscordMessage.webhookId","location":"common/dev.kord.common.entity/-discord-message/webhook-id.html","searchKeys":["webhookId","val webhookId: OptionalSnowflake","dev.kord.common.entity.DiscordMessage.webhookId"]},{"name":"val webhookId: OptionalSnowflake","description":"dev.kord.common.entity.DiscordPartialMessage.webhookId","location":"common/dev.kord.common.entity/-discord-partial-message/webhook-id.html","searchKeys":["webhookId","val webhookId: OptionalSnowflake","dev.kord.common.entity.DiscordPartialMessage.webhookId"]},{"name":"val webhooks: List<DiscordWebhook>","description":"dev.kord.common.entity.DiscordAuditLog.webhooks","location":"common/dev.kord.common.entity/-discord-audit-log/webhooks.html","searchKeys":["webhooks","val webhooks: List<DiscordWebhook>","dev.kord.common.entity.DiscordAuditLog.webhooks"]},{"name":"val welcomeChannels: List<DiscordWelcomeScreenChannel>","description":"dev.kord.common.entity.DiscordWelcomeScreen.welcomeChannels","location":"common/dev.kord.common.entity/-discord-welcome-screen/welcome-channels.html","searchKeys":["welcomeChannels","val welcomeChannels: List<DiscordWelcomeScreenChannel>","dev.kord.common.entity.DiscordWelcomeScreen.welcomeChannels"]},{"name":"val welcomeScreen: Optional<DiscordWelcomeScreen>","description":"dev.kord.common.entity.DiscordGuild.welcomeScreen","location":"common/dev.kord.common.entity/-discord-guild/welcome-screen.html","searchKeys":["welcomeScreen","val welcomeScreen: Optional<DiscordWelcomeScreen>","dev.kord.common.entity.DiscordGuild.welcomeScreen"]},{"name":"val welcomeScreen: Optional<DiscordWelcomeScreen>","description":"dev.kord.common.entity.DiscordPartialGuild.welcomeScreen","location":"common/dev.kord.common.entity/-discord-partial-guild/welcome-screen.html","searchKeys":["welcomeScreen","val welcomeScreen: Optional<DiscordWelcomeScreen>","dev.kord.common.entity.DiscordPartialGuild.welcomeScreen"]},{"name":"val widgetChannelId: OptionalSnowflake?","description":"dev.kord.common.entity.DiscordGuild.widgetChannelId","location":"common/dev.kord.common.entity/-discord-guild/widget-channel-id.html","searchKeys":["widgetChannelId","val widgetChannelId: OptionalSnowflake?","dev.kord.common.entity.DiscordGuild.widgetChannelId"]},{"name":"val widgetEnabled: OptionalBoolean","description":"dev.kord.common.entity.DiscordGuild.widgetEnabled","location":"common/dev.kord.common.entity/-discord-guild/widget-enabled.html","searchKeys":["widgetEnabled","val widgetEnabled: OptionalBoolean","dev.kord.common.entity.DiscordGuild.widgetEnabled"]},{"name":"val width: OptionalInt","description":"dev.kord.common.entity.DiscordEmbed.Image.width","location":"common/dev.kord.common.entity/-discord-embed/-image/width.html","searchKeys":["width","val width: OptionalInt","dev.kord.common.entity.DiscordEmbed.Image.width"]},{"name":"val width: OptionalInt","description":"dev.kord.common.entity.DiscordEmbed.Thumbnail.width","location":"common/dev.kord.common.entity/-discord-embed/-thumbnail/width.html","searchKeys":["width","val width: OptionalInt","dev.kord.common.entity.DiscordEmbed.Thumbnail.width"]},{"name":"val width: OptionalInt","description":"dev.kord.common.entity.DiscordEmbed.Video.width","location":"common/dev.kord.common.entity/-discord-embed/-video/width.html","searchKeys":["width","val width: OptionalInt","dev.kord.common.entity.DiscordEmbed.Video.width"]},{"name":"val width: OptionalInt?","description":"dev.kord.common.entity.DiscordAttachment.width","location":"common/dev.kord.common.entity/-discord-attachment/width.html","searchKeys":["width","val width: OptionalInt?","dev.kord.common.entity.DiscordAttachment.width"]},{"name":"val workerId: UByte","description":"dev.kord.common.entity.Snowflake.workerId","location":"common/dev.kord.common.entity/-snowflake/worker-id.html","searchKeys":["workerId","val workerId: UByte","dev.kord.common.entity.Snowflake.workerId"]},{"name":"var GATEWAY_VERSION: Int","description":"dev.kord.common.KordConfiguration.GATEWAY_VERSION","location":"common/dev.kord.common/-kord-configuration/-g-a-t-e-w-a-y_-v-e-r-s-i-o-n.html","searchKeys":["GATEWAY_VERSION","var GATEWAY_VERSION: Int","dev.kord.common.KordConfiguration.GATEWAY_VERSION"]},{"name":"var REST_VERSION: Int","description":"dev.kord.common.KordConfiguration.REST_VERSION","location":"common/dev.kord.common/-kord-configuration/-r-e-s-t_-v-e-r-s-i-o-n.html","searchKeys":["REST_VERSION","var REST_VERSION: Int","dev.kord.common.KordConfiguration.REST_VERSION"]},{"name":"var VOICE_GATEWAY_VERSION: Int","description":"dev.kord.common.KordConfiguration.VOICE_GATEWAY_VERSION","location":"common/dev.kord.common/-kord-configuration/-v-o-i-c-e_-g-a-t-e-w-a-y_-v-e-r-s-i-o-n.html","searchKeys":["VOICE_GATEWAY_VERSION","var VOICE_GATEWAY_VERSION: Int","dev.kord.common.KordConfiguration.VOICE_GATEWAY_VERSION"]},{"name":"AlreadyAuthenticated","description":"dev.kord.gateway.GatewayCloseCode.AlreadyAuthenticated","location":"gateway/dev.kord.gateway/-gateway-close-code/-already-authenticated/index.html","searchKeys":["AlreadyAuthenticated","AlreadyAuthenticated","dev.kord.gateway.GatewayCloseCode.AlreadyAuthenticated"]},{"name":"AuthenticationFailed","description":"dev.kord.gateway.GatewayCloseCode.AuthenticationFailed","location":"gateway/dev.kord.gateway/-gateway-close-code/-authentication-failed/index.html","searchKeys":["AuthenticationFailed","AuthenticationFailed","dev.kord.gateway.GatewayCloseCode.AuthenticationFailed"]},{"name":"DecodeError","description":"dev.kord.gateway.GatewayCloseCode.DecodeError","location":"gateway/dev.kord.gateway/-gateway-close-code/-decode-error/index.html","searchKeys":["DecodeError","DecodeError","dev.kord.gateway.GatewayCloseCode.DecodeError"]},{"name":"DisallowedIntents","description":"dev.kord.gateway.GatewayCloseCode.DisallowedIntents","location":"gateway/dev.kord.gateway/-gateway-close-code/-disallowed-intents/index.html","searchKeys":["DisallowedIntents","DisallowedIntents","dev.kord.gateway.GatewayCloseCode.DisallowedIntents"]},{"name":"Dispatch","description":"dev.kord.gateway.OpCode.Dispatch","location":"gateway/dev.kord.gateway/-op-code/-dispatch/index.html","searchKeys":["Dispatch","Dispatch","dev.kord.gateway.OpCode.Dispatch"]},{"name":"Heartbeat","description":"dev.kord.gateway.OpCode.Heartbeat","location":"gateway/dev.kord.gateway/-op-code/-heartbeat/index.html","searchKeys":["Heartbeat","Heartbeat","dev.kord.gateway.OpCode.Heartbeat"]},{"name":"HeartbeatACK","description":"dev.kord.gateway.OpCode.HeartbeatACK","location":"gateway/dev.kord.gateway/-op-code/-heartbeat-a-c-k/index.html","searchKeys":["HeartbeatACK","HeartbeatACK","dev.kord.gateway.OpCode.HeartbeatACK"]},{"name":"Hello","description":"dev.kord.gateway.OpCode.Hello","location":"gateway/dev.kord.gateway/-op-code/-hello/index.html","searchKeys":["Hello","Hello","dev.kord.gateway.OpCode.Hello"]},{"name":"Identify","description":"dev.kord.gateway.OpCode.Identify","location":"gateway/dev.kord.gateway/-op-code/-identify/index.html","searchKeys":["Identify","Identify","dev.kord.gateway.OpCode.Identify"]},{"name":"InvalidApiVersion","description":"dev.kord.gateway.GatewayCloseCode.InvalidApiVersion","location":"gateway/dev.kord.gateway/-gateway-close-code/-invalid-api-version/index.html","searchKeys":["InvalidApiVersion","InvalidApiVersion","dev.kord.gateway.GatewayCloseCode.InvalidApiVersion"]},{"name":"InvalidIntents","description":"dev.kord.gateway.GatewayCloseCode.InvalidIntents","location":"gateway/dev.kord.gateway/-gateway-close-code/-invalid-intents/index.html","searchKeys":["InvalidIntents","InvalidIntents","dev.kord.gateway.GatewayCloseCode.InvalidIntents"]},{"name":"InvalidSeq","description":"dev.kord.gateway.GatewayCloseCode.InvalidSeq","location":"gateway/dev.kord.gateway/-gateway-close-code/-invalid-seq/index.html","searchKeys":["InvalidSeq","InvalidSeq","dev.kord.gateway.GatewayCloseCode.InvalidSeq"]},{"name":"InvalidSession","description":"dev.kord.gateway.OpCode.InvalidSession","location":"gateway/dev.kord.gateway/-op-code/-invalid-session/index.html","searchKeys":["InvalidSession","InvalidSession","dev.kord.gateway.OpCode.InvalidSession"]},{"name":"InvalidShard","description":"dev.kord.gateway.GatewayCloseCode.InvalidShard","location":"gateway/dev.kord.gateway/-gateway-close-code/-invalid-shard/index.html","searchKeys":["InvalidShard","InvalidShard","dev.kord.gateway.GatewayCloseCode.InvalidShard"]},{"name":"NotAuthenticated","description":"dev.kord.gateway.GatewayCloseCode.NotAuthenticated","location":"gateway/dev.kord.gateway/-gateway-close-code/-not-authenticated/index.html","searchKeys":["NotAuthenticated","NotAuthenticated","dev.kord.gateway.GatewayCloseCode.NotAuthenticated"]},{"name":"RateLimited","description":"dev.kord.gateway.GatewayCloseCode.RateLimited","location":"gateway/dev.kord.gateway/-gateway-close-code/-rate-limited/index.html","searchKeys":["RateLimited","RateLimited","dev.kord.gateway.GatewayCloseCode.RateLimited"]},{"name":"Reconnect","description":"dev.kord.gateway.OpCode.Reconnect","location":"gateway/dev.kord.gateway/-op-code/-reconnect/index.html","searchKeys":["Reconnect","Reconnect","dev.kord.gateway.OpCode.Reconnect"]},{"name":"RequestGuildMembers","description":"dev.kord.gateway.OpCode.RequestGuildMembers","location":"gateway/dev.kord.gateway/-op-code/-request-guild-members/index.html","searchKeys":["RequestGuildMembers","RequestGuildMembers","dev.kord.gateway.OpCode.RequestGuildMembers"]},{"name":"Resume","description":"dev.kord.gateway.OpCode.Resume","location":"gateway/dev.kord.gateway/-op-code/-resume/index.html","searchKeys":["Resume","Resume","dev.kord.gateway.OpCode.Resume"]},{"name":"SessionTimeout","description":"dev.kord.gateway.GatewayCloseCode.SessionTimeout","location":"gateway/dev.kord.gateway/-gateway-close-code/-session-timeout/index.html","searchKeys":["SessionTimeout","SessionTimeout","dev.kord.gateway.GatewayCloseCode.SessionTimeout"]},{"name":"ShardingRequired","description":"dev.kord.gateway.GatewayCloseCode.ShardingRequired","location":"gateway/dev.kord.gateway/-gateway-close-code/-sharding-required/index.html","searchKeys":["ShardingRequired","ShardingRequired","dev.kord.gateway.GatewayCloseCode.ShardingRequired"]},{"name":"StatusUpdate","description":"dev.kord.gateway.OpCode.StatusUpdate","location":"gateway/dev.kord.gateway/-op-code/-status-update/index.html","searchKeys":["StatusUpdate","StatusUpdate","dev.kord.gateway.OpCode.StatusUpdate"]},{"name":"Unknown","description":"dev.kord.gateway.GatewayCloseCode.Unknown","location":"gateway/dev.kord.gateway/-gateway-close-code/-unknown/index.html","searchKeys":["Unknown","Unknown","dev.kord.gateway.GatewayCloseCode.Unknown"]},{"name":"Unknown","description":"dev.kord.gateway.OpCode.Unknown","location":"gateway/dev.kord.gateway/-op-code/-unknown/index.html","searchKeys":["Unknown","Unknown","dev.kord.gateway.OpCode.Unknown"]},{"name":"UnknownOpCode","description":"dev.kord.gateway.GatewayCloseCode.UnknownOpCode","location":"gateway/dev.kord.gateway/-gateway-close-code/-unknown-op-code/index.html","searchKeys":["UnknownOpCode","UnknownOpCode","dev.kord.gateway.GatewayCloseCode.UnknownOpCode"]},{"name":"VoiceStateUpdate","description":"dev.kord.gateway.OpCode.VoiceStateUpdate","location":"gateway/dev.kord.gateway/-op-code/-voice-state-update/index.html","searchKeys":["VoiceStateUpdate","VoiceStateUpdate","dev.kord.gateway.OpCode.VoiceStateUpdate"]},{"name":"abstract fun reset()","description":"dev.kord.gateway.retry.Retry.reset","location":"gateway/dev.kord.gateway.retry/-retry/reset.html","searchKeys":["reset","abstract fun reset()","dev.kord.gateway.retry.Retry.reset"]},{"name":"abstract suspend fun consume(shardId: Int, events: SharedFlow<Event>)","description":"dev.kord.gateway.ratelimit.IdentifyRateLimiter.consume","location":"gateway/dev.kord.gateway.ratelimit/-identify-rate-limiter/consume.html","searchKeys":["consume","abstract suspend fun consume(shardId: Int, events: SharedFlow<Event>)","dev.kord.gateway.ratelimit.IdentifyRateLimiter.consume"]},{"name":"abstract suspend fun detach()","description":"dev.kord.gateway.Gateway.detach","location":"gateway/dev.kord.gateway/-gateway/detach.html","searchKeys":["detach","abstract suspend fun detach()","dev.kord.gateway.Gateway.detach"]},{"name":"abstract suspend fun retry()","description":"dev.kord.gateway.retry.Retry.retry","location":"gateway/dev.kord.gateway.retry/-retry/retry.html","searchKeys":["retry","abstract suspend fun retry()","dev.kord.gateway.retry.Retry.retry"]},{"name":"abstract suspend fun send(command: Command)","description":"dev.kord.gateway.Gateway.send","location":"gateway/dev.kord.gateway/-gateway/send.html","searchKeys":["send","abstract suspend fun send(command: Command)","dev.kord.gateway.Gateway.send"]},{"name":"abstract suspend fun start(configuration: GatewayConfiguration)","description":"dev.kord.gateway.Gateway.start","location":"gateway/dev.kord.gateway/-gateway/start.html","searchKeys":["start","abstract suspend fun start(configuration: GatewayConfiguration)","dev.kord.gateway.Gateway.start"]},{"name":"abstract suspend fun stop()","description":"dev.kord.gateway.Gateway.stop","location":"gateway/dev.kord.gateway/-gateway/stop.html","searchKeys":["stop","abstract suspend fun stop()","dev.kord.gateway.Gateway.stop"]},{"name":"abstract val events: SharedFlow<Event>","description":"dev.kord.gateway.Gateway.events","location":"gateway/dev.kord.gateway/-gateway/events.html","searchKeys":["events","abstract val events: SharedFlow<Event>","dev.kord.gateway.Gateway.events"]},{"name":"abstract val hasNext: Boolean","description":"dev.kord.gateway.retry.Retry.hasNext","location":"gateway/dev.kord.gateway.retry/-retry/has-next.html","searchKeys":["hasNext","abstract val hasNext: Boolean","dev.kord.gateway.retry.Retry.hasNext"]},{"name":"abstract val maxConcurrency: Int","description":"dev.kord.gateway.ratelimit.IdentifyRateLimiter.maxConcurrency","location":"gateway/dev.kord.gateway.ratelimit/-identify-rate-limiter/max-concurrency.html","searchKeys":["maxConcurrency","abstract val maxConcurrency: Int","dev.kord.gateway.ratelimit.IdentifyRateLimiter.maxConcurrency"]},{"name":"abstract val ping: StateFlow<Duration?>","description":"dev.kord.gateway.Gateway.ping","location":"gateway/dev.kord.gateway/-gateway/ping.html","searchKeys":["ping","abstract val ping: StateFlow<Duration?>","dev.kord.gateway.Gateway.ping"]},{"name":"abstract val sequence: Int?","description":"dev.kord.gateway.DispatchEvent.sequence","location":"gateway/dev.kord.gateway/-dispatch-event/sequence.html","searchKeys":["sequence","abstract val sequence: Int?","dev.kord.gateway.DispatchEvent.sequence"]},{"name":"annotation class PrivilegedIntent","description":"dev.kord.gateway.PrivilegedIntent","location":"gateway/dev.kord.gateway/-privileged-intent/index.html","searchKeys":["PrivilegedIntent","annotation class PrivilegedIntent","dev.kord.gateway.PrivilegedIntent"]},{"name":"class DefaultGateway(data: DefaultGatewayData) : Gateway","description":"dev.kord.gateway.DefaultGateway","location":"gateway/dev.kord.gateway/-default-gateway/index.html","searchKeys":["DefaultGateway","class DefaultGateway(data: DefaultGatewayData) : Gateway","dev.kord.gateway.DefaultGateway"]},{"name":"class DefaultGatewayBuilder","description":"dev.kord.gateway.DefaultGatewayBuilder","location":"gateway/dev.kord.gateway/-default-gateway-builder/index.html","searchKeys":["DefaultGatewayBuilder","class DefaultGatewayBuilder","dev.kord.gateway.DefaultGatewayBuilder"]},{"name":"class GatewayConfigurationBuilder(val token: String, var name: String = \"Kord\", var shard: DiscordShard = DiscordShard(0, 1), var presence: DiscordPresence? = null, var threshold: Int = 250, var intents: Intents = Intents.nonPrivileged)","description":"dev.kord.gateway.GatewayConfigurationBuilder","location":"gateway/dev.kord.gateway/-gateway-configuration-builder/index.html","searchKeys":["GatewayConfigurationBuilder","class GatewayConfigurationBuilder(val token: String, var name: String = \"Kord\", var shard: DiscordShard = DiscordShard(0, 1), var presence: DiscordPresence? = null, var threshold: Int = 250, var intents: Intents = Intents.nonPrivileged)","dev.kord.gateway.GatewayConfigurationBuilder"]},{"name":"class IntentsBuilder(code: DiscordBitSet = EmptyBitSet())","description":"dev.kord.gateway.Intents.IntentsBuilder","location":"gateway/dev.kord.gateway/-intents/-intents-builder/index.html","searchKeys":["IntentsBuilder","class IntentsBuilder(code: DiscordBitSet = EmptyBitSet())","dev.kord.gateway.Intents.IntentsBuilder"]},{"name":"class LinearRetry(firstBackoff: Duration, maxBackoff: Duration, maxTries: Int) : Retry","description":"dev.kord.gateway.retry.LinearRetry","location":"gateway/dev.kord.gateway.retry/-linear-retry/index.html","searchKeys":["LinearRetry","class LinearRetry(firstBackoff: Duration, maxBackoff: Duration, maxTries: Int) : Retry","dev.kord.gateway.retry.LinearRetry"]},{"name":"class LoginBuilder","description":"dev.kord.gateway.builder.LoginBuilder","location":"gateway/dev.kord.gateway.builder/-login-builder/index.html","searchKeys":["LoginBuilder","class LoginBuilder","dev.kord.gateway.builder.LoginBuilder"]},{"name":"class PresenceBuilder","description":"dev.kord.gateway.builder.PresenceBuilder","location":"gateway/dev.kord.gateway.builder/-presence-builder/index.html","searchKeys":["PresenceBuilder","class PresenceBuilder","dev.kord.gateway.builder.PresenceBuilder"]},{"name":"class RequestGuildMembersBuilder(var guildId: Snowflake)","description":"dev.kord.gateway.builder.RequestGuildMembersBuilder","location":"gateway/dev.kord.gateway.builder/-request-guild-members-builder/index.html","searchKeys":["RequestGuildMembersBuilder","class RequestGuildMembersBuilder(var guildId: Snowflake)","dev.kord.gateway.builder.RequestGuildMembersBuilder"]},{"name":"class Ticker(dispatcher: CoroutineDispatcher = Dispatchers.Default) : CoroutineScope","description":"dev.kord.gateway.Ticker","location":"gateway/dev.kord.gateway/-ticker/index.html","searchKeys":["Ticker","class Ticker(dispatcher: CoroutineDispatcher = Dispatchers.Default) : CoroutineScope","dev.kord.gateway.Ticker"]},{"name":"data class ApplicationCommandCreate(val application: DiscordApplicationCommand, val sequence: Int?) : DispatchEvent","description":"dev.kord.gateway.ApplicationCommandCreate","location":"gateway/dev.kord.gateway/-application-command-create/index.html","searchKeys":["ApplicationCommandCreate","data class ApplicationCommandCreate(val application: DiscordApplicationCommand, val sequence: Int?) : DispatchEvent","dev.kord.gateway.ApplicationCommandCreate"]},{"name":"data class ApplicationCommandDelete(val application: DiscordApplicationCommand, val sequence: Int?) : DispatchEvent","description":"dev.kord.gateway.ApplicationCommandDelete","location":"gateway/dev.kord.gateway/-application-command-delete/index.html","searchKeys":["ApplicationCommandDelete","data class ApplicationCommandDelete(val application: DiscordApplicationCommand, val sequence: Int?) : DispatchEvent","dev.kord.gateway.ApplicationCommandDelete"]},{"name":"data class ApplicationCommandPermissionsUpdate(val permissions: DiscordGuildApplicationCommandPermissions, val sequence: Int?) : DispatchEvent","description":"dev.kord.gateway.ApplicationCommandPermissionsUpdate","location":"gateway/dev.kord.gateway/-application-command-permissions-update/index.html","searchKeys":["ApplicationCommandPermissionsUpdate","data class ApplicationCommandPermissionsUpdate(val permissions: DiscordGuildApplicationCommandPermissions, val sequence: Int?) : DispatchEvent","dev.kord.gateway.ApplicationCommandPermissionsUpdate"]},{"name":"data class ApplicationCommandUpdate(val application: DiscordApplicationCommand, val sequence: Int?) : DispatchEvent","description":"dev.kord.gateway.ApplicationCommandUpdate","location":"gateway/dev.kord.gateway/-application-command-update/index.html","searchKeys":["ApplicationCommandUpdate","data class ApplicationCommandUpdate(val application: DiscordApplicationCommand, val sequence: Int?) : DispatchEvent","dev.kord.gateway.ApplicationCommandUpdate"]},{"name":"data class AutoModerationActionExecution(val actionExecution: DiscordAutoModerationActionExecution, val sequence: Int?) : DispatchEvent","description":"dev.kord.gateway.AutoModerationActionExecution","location":"gateway/dev.kord.gateway/-auto-moderation-action-execution/index.html","searchKeys":["AutoModerationActionExecution","data class AutoModerationActionExecution(val actionExecution: DiscordAutoModerationActionExecution, val sequence: Int?) : DispatchEvent","dev.kord.gateway.AutoModerationActionExecution"]},{"name":"data class AutoModerationRuleCreate(val rule: DiscordAutoModerationRule, val sequence: Int?) : DispatchEvent","description":"dev.kord.gateway.AutoModerationRuleCreate","location":"gateway/dev.kord.gateway/-auto-moderation-rule-create/index.html","searchKeys":["AutoModerationRuleCreate","data class AutoModerationRuleCreate(val rule: DiscordAutoModerationRule, val sequence: Int?) : DispatchEvent","dev.kord.gateway.AutoModerationRuleCreate"]},{"name":"data class AutoModerationRuleDelete(val rule: DiscordAutoModerationRule, val sequence: Int?) : DispatchEvent","description":"dev.kord.gateway.AutoModerationRuleDelete","location":"gateway/dev.kord.gateway/-auto-moderation-rule-delete/index.html","searchKeys":["AutoModerationRuleDelete","data class AutoModerationRuleDelete(val rule: DiscordAutoModerationRule, val sequence: Int?) : DispatchEvent","dev.kord.gateway.AutoModerationRuleDelete"]},{"name":"data class AutoModerationRuleUpdate(val rule: DiscordAutoModerationRule, val sequence: Int?) : DispatchEvent","description":"dev.kord.gateway.AutoModerationRuleUpdate","location":"gateway/dev.kord.gateway/-auto-moderation-rule-update/index.html","searchKeys":["AutoModerationRuleUpdate","data class AutoModerationRuleUpdate(val rule: DiscordAutoModerationRule, val sequence: Int?) : DispatchEvent","dev.kord.gateway.AutoModerationRuleUpdate"]},{"name":"data class ChannelCreate(val channel: DiscordChannel, val sequence: Int?) : DispatchEvent","description":"dev.kord.gateway.ChannelCreate","location":"gateway/dev.kord.gateway/-channel-create/index.html","searchKeys":["ChannelCreate","data class ChannelCreate(val channel: DiscordChannel, val sequence: Int?) : DispatchEvent","dev.kord.gateway.ChannelCreate"]},{"name":"data class ChannelDelete(val channel: DiscordChannel, val sequence: Int?) : DispatchEvent","description":"dev.kord.gateway.ChannelDelete","location":"gateway/dev.kord.gateway/-channel-delete/index.html","searchKeys":["ChannelDelete","data class ChannelDelete(val channel: DiscordChannel, val sequence: Int?) : DispatchEvent","dev.kord.gateway.ChannelDelete"]},{"name":"data class ChannelPinsUpdate(val pins: DiscordPinsUpdateData, val sequence: Int?) : DispatchEvent","description":"dev.kord.gateway.ChannelPinsUpdate","location":"gateway/dev.kord.gateway/-channel-pins-update/index.html","searchKeys":["ChannelPinsUpdate","data class ChannelPinsUpdate(val pins: DiscordPinsUpdateData, val sequence: Int?) : DispatchEvent","dev.kord.gateway.ChannelPinsUpdate"]},{"name":"data class ChannelUpdate(val channel: DiscordChannel, val sequence: Int?) : DispatchEvent","description":"dev.kord.gateway.ChannelUpdate","location":"gateway/dev.kord.gateway/-channel-update/index.html","searchKeys":["ChannelUpdate","data class ChannelUpdate(val channel: DiscordChannel, val sequence: Int?) : DispatchEvent","dev.kord.gateway.ChannelUpdate"]},{"name":"data class DefaultGatewayData(val url: String, val client: HttpClient, val reconnectRetry: Retry, val sendRateLimiter: RateLimiter, val identifyRateLimiter: IdentifyRateLimiter, val dispatcher: CoroutineDispatcher, val eventFlow: MutableSharedFlow<Event>)","description":"dev.kord.gateway.DefaultGatewayData","location":"gateway/dev.kord.gateway/-default-gateway-data/index.html","searchKeys":["DefaultGatewayData","data class DefaultGatewayData(val url: String, val client: HttpClient, val reconnectRetry: Retry, val sendRateLimiter: RateLimiter, val identifyRateLimiter: IdentifyRateLimiter, val dispatcher: CoroutineDispatcher, val eventFlow: MutableSharedFlow<Event>)","dev.kord.gateway.DefaultGatewayData"]},{"name":"data class DiscordAutoModerationActionExecution(val guildId: Snowflake, val action: DiscordAutoModerationAction, val ruleId: Snowflake, val ruleTriggerType: AutoModerationRuleTriggerType, val userId: Snowflake, val channelId: OptionalSnowflake = OptionalSnowflake.Missing, val messageId: OptionalSnowflake = OptionalSnowflake.Missing, val alertSystemMessageId: OptionalSnowflake = OptionalSnowflake.Missing, val content: String, val matchedKeyword: String?, val matchedContent: String?)","description":"dev.kord.gateway.DiscordAutoModerationActionExecution","location":"gateway/dev.kord.gateway/-discord-auto-moderation-action-execution/index.html","searchKeys":["DiscordAutoModerationActionExecution","data class DiscordAutoModerationActionExecution(val guildId: Snowflake, val action: DiscordAutoModerationAction, val ruleId: Snowflake, val ruleTriggerType: AutoModerationRuleTriggerType, val userId: Snowflake, val channelId: OptionalSnowflake = OptionalSnowflake.Missing, val messageId: OptionalSnowflake = OptionalSnowflake.Missing, val alertSystemMessageId: OptionalSnowflake = OptionalSnowflake.Missing, val content: String, val matchedKeyword: String?, val matchedContent: String?)","dev.kord.gateway.DiscordAutoModerationActionExecution"]},{"name":"data class DiscordClose(val closeCode: GatewayCloseCode, val recoverable: Boolean) : Close","description":"dev.kord.gateway.Close.DiscordClose","location":"gateway/dev.kord.gateway/-close/-discord-close/index.html","searchKeys":["DiscordClose","data class DiscordClose(val closeCode: GatewayCloseCode, val recoverable: Boolean) : Close","dev.kord.gateway.Close.DiscordClose"]},{"name":"data class DiscordCreatedInvite(val channelId: Snowflake, val code: String, val createdAt: Instant, val guildId: OptionalSnowflake = OptionalSnowflake.Missing, val inviter: Optional<DiscordUser> = Optional.Missing(), val maxAge: DurationInSeconds, val maxUses: Int, val targetType: Optional<InviteTargetType> = Optional.Missing(), val targetUser: Optional<DiscordUser> = Optional.Missing(), val targetApplication: Optional<DiscordPartialApplication> = Optional.Missing(), targetUserType: Optional<TargetUserType> = Optional.Missing(), val temporary: Boolean, val uses: Int)","description":"dev.kord.gateway.DiscordCreatedInvite","location":"gateway/dev.kord.gateway/-discord-created-invite/index.html","searchKeys":["DiscordCreatedInvite","data class DiscordCreatedInvite(val channelId: Snowflake, val code: String, val createdAt: Instant, val guildId: OptionalSnowflake = OptionalSnowflake.Missing, val inviter: Optional<DiscordUser> = Optional.Missing(), val maxAge: DurationInSeconds, val maxUses: Int, val targetType: Optional<InviteTargetType> = Optional.Missing(), val targetUser: Optional<DiscordUser> = Optional.Missing(), val targetApplication: Optional<DiscordPartialApplication> = Optional.Missing(), targetUserType: Optional<TargetUserType> = Optional.Missing(), val temporary: Boolean, val uses: Int)","dev.kord.gateway.DiscordCreatedInvite"]},{"name":"data class DiscordDeletedInvite(val channelId: Snowflake, val guildId: OptionalSnowflake = OptionalSnowflake.Missing, val code: String)","description":"dev.kord.gateway.DiscordDeletedInvite","location":"gateway/dev.kord.gateway/-discord-deleted-invite/index.html","searchKeys":["DiscordDeletedInvite","data class DiscordDeletedInvite(val channelId: Snowflake, val guildId: OptionalSnowflake = OptionalSnowflake.Missing, val code: String)","dev.kord.gateway.DiscordDeletedInvite"]},{"name":"data class DiscordPresence(val status: PresenceStatus, val afk: Boolean, val since: Instant? = null, val game: DiscordBotActivity? = null)","description":"dev.kord.gateway.DiscordPresence","location":"gateway/dev.kord.gateway/-discord-presence/index.html","searchKeys":["DiscordPresence","data class DiscordPresence(val status: PresenceStatus, val afk: Boolean, val since: Instant? = null, val game: DiscordBotActivity? = null)","dev.kord.gateway.DiscordPresence"]},{"name":"data class DiscordRemovedEmoji(val channelId: Snowflake, val guildId: Snowflake, val messageId: Snowflake, val emoji: DiscordRemovedReactionEmoji)","description":"dev.kord.gateway.DiscordRemovedEmoji","location":"gateway/dev.kord.gateway/-discord-removed-emoji/index.html","searchKeys":["DiscordRemovedEmoji","data class DiscordRemovedEmoji(val channelId: Snowflake, val guildId: Snowflake, val messageId: Snowflake, val emoji: DiscordRemovedReactionEmoji)","dev.kord.gateway.DiscordRemovedEmoji"]},{"name":"data class DiscordRemovedReactionEmoji(val id: Snowflake?, val name: String?)","description":"dev.kord.gateway.DiscordRemovedReactionEmoji","location":"gateway/dev.kord.gateway/-discord-removed-reaction-emoji/index.html","searchKeys":["DiscordRemovedReactionEmoji","data class DiscordRemovedReactionEmoji(val id: Snowflake?, val name: String?)","dev.kord.gateway.DiscordRemovedReactionEmoji"]},{"name":"data class DiscordThreadListSync(val guildId: Snowflake, val channelIds: Optional<List<Snowflake>> = Optional.Missing(), val threads: List<DiscordChannel>, val members: List<DiscordThreadMember>)","description":"dev.kord.gateway.DiscordThreadListSync","location":"gateway/dev.kord.gateway/-discord-thread-list-sync/index.html","searchKeys":["DiscordThreadListSync","data class DiscordThreadListSync(val guildId: Snowflake, val channelIds: Optional<List<Snowflake>> = Optional.Missing(), val threads: List<DiscordChannel>, val members: List<DiscordThreadMember>)","dev.kord.gateway.DiscordThreadListSync"]},{"name":"data class DiscordThreadMembersUpdate(val id: Snowflake, val guildId: Snowflake, val memberCount: Int, val addedMembers: Optional<List<DiscordThreadMember>> = Optional.Missing(), val removedMemberIds: Optional<List<Snowflake>> = Optional.Missing())","description":"dev.kord.gateway.DiscordThreadMembersUpdate","location":"gateway/dev.kord.gateway/-discord-thread-members-update/index.html","searchKeys":["DiscordThreadMembersUpdate","data class DiscordThreadMembersUpdate(val id: Snowflake, val guildId: Snowflake, val memberCount: Int, val addedMembers: Optional<List<DiscordThreadMember>> = Optional.Missing(), val removedMemberIds: Optional<List<Snowflake>> = Optional.Missing())","dev.kord.gateway.DiscordThreadMembersUpdate"]},{"name":"data class GatewayConfiguration(val token: String, val name: String, val shard: DiscordShard, val presence: Optional<DiscordPresence> = Optional.Missing(), val threshold: Int, val intents: Intents)","description":"dev.kord.gateway.GatewayConfiguration","location":"gateway/dev.kord.gateway/-gateway-configuration/index.html","searchKeys":["GatewayConfiguration","data class GatewayConfiguration(val token: String, val name: String, val shard: DiscordShard, val presence: Optional<DiscordPresence> = Optional.Missing(), val threshold: Int, val intents: Intents)","dev.kord.gateway.GatewayConfiguration"]},{"name":"data class GuildBanAdd(val ban: DiscordGuildBan, val sequence: Int?) : DispatchEvent","description":"dev.kord.gateway.GuildBanAdd","location":"gateway/dev.kord.gateway/-guild-ban-add/index.html","searchKeys":["GuildBanAdd","data class GuildBanAdd(val ban: DiscordGuildBan, val sequence: Int?) : DispatchEvent","dev.kord.gateway.GuildBanAdd"]},{"name":"data class GuildBanRemove(val ban: DiscordGuildBan, val sequence: Int?) : DispatchEvent","description":"dev.kord.gateway.GuildBanRemove","location":"gateway/dev.kord.gateway/-guild-ban-remove/index.html","searchKeys":["GuildBanRemove","data class GuildBanRemove(val ban: DiscordGuildBan, val sequence: Int?) : DispatchEvent","dev.kord.gateway.GuildBanRemove"]},{"name":"data class GuildCreate(val guild: DiscordGuild, val sequence: Int?) : DispatchEvent","description":"dev.kord.gateway.GuildCreate","location":"gateway/dev.kord.gateway/-guild-create/index.html","searchKeys":["GuildCreate","data class GuildCreate(val guild: DiscordGuild, val sequence: Int?) : DispatchEvent","dev.kord.gateway.GuildCreate"]},{"name":"data class GuildDelete(val guild: DiscordUnavailableGuild, val sequence: Int?) : DispatchEvent","description":"dev.kord.gateway.GuildDelete","location":"gateway/dev.kord.gateway/-guild-delete/index.html","searchKeys":["GuildDelete","data class GuildDelete(val guild: DiscordUnavailableGuild, val sequence: Int?) : DispatchEvent","dev.kord.gateway.GuildDelete"]},{"name":"data class GuildEmojisUpdate(val emoji: DiscordUpdatedEmojis, val sequence: Int?) : DispatchEvent","description":"dev.kord.gateway.GuildEmojisUpdate","location":"gateway/dev.kord.gateway/-guild-emojis-update/index.html","searchKeys":["GuildEmojisUpdate","data class GuildEmojisUpdate(val emoji: DiscordUpdatedEmojis, val sequence: Int?) : DispatchEvent","dev.kord.gateway.GuildEmojisUpdate"]},{"name":"data class GuildIntegrationsUpdate(val integrations: DiscordGuildIntegrations, val sequence: Int?) : DispatchEvent","description":"dev.kord.gateway.GuildIntegrationsUpdate","location":"gateway/dev.kord.gateway/-guild-integrations-update/index.html","searchKeys":["GuildIntegrationsUpdate","data class GuildIntegrationsUpdate(val integrations: DiscordGuildIntegrations, val sequence: Int?) : DispatchEvent","dev.kord.gateway.GuildIntegrationsUpdate"]},{"name":"data class GuildMemberAdd(val member: DiscordAddedGuildMember, val sequence: Int?) : DispatchEvent","description":"dev.kord.gateway.GuildMemberAdd","location":"gateway/dev.kord.gateway/-guild-member-add/index.html","searchKeys":["GuildMemberAdd","data class GuildMemberAdd(val member: DiscordAddedGuildMember, val sequence: Int?) : DispatchEvent","dev.kord.gateway.GuildMemberAdd"]},{"name":"data class GuildMemberRemove(val member: DiscordRemovedGuildMember, val sequence: Int?) : DispatchEvent","description":"dev.kord.gateway.GuildMemberRemove","location":"gateway/dev.kord.gateway/-guild-member-remove/index.html","searchKeys":["GuildMemberRemove","data class GuildMemberRemove(val member: DiscordRemovedGuildMember, val sequence: Int?) : DispatchEvent","dev.kord.gateway.GuildMemberRemove"]},{"name":"data class GuildMemberUpdate(val member: DiscordUpdatedGuildMember, val sequence: Int?) : DispatchEvent","description":"dev.kord.gateway.GuildMemberUpdate","location":"gateway/dev.kord.gateway/-guild-member-update/index.html","searchKeys":["GuildMemberUpdate","data class GuildMemberUpdate(val member: DiscordUpdatedGuildMember, val sequence: Int?) : DispatchEvent","dev.kord.gateway.GuildMemberUpdate"]},{"name":"data class GuildMembersChunk(val data: GuildMembersChunkData, val sequence: Int?) : DispatchEvent","description":"dev.kord.gateway.GuildMembersChunk","location":"gateway/dev.kord.gateway/-guild-members-chunk/index.html","searchKeys":["GuildMembersChunk","data class GuildMembersChunk(val data: GuildMembersChunkData, val sequence: Int?) : DispatchEvent","dev.kord.gateway.GuildMembersChunk"]},{"name":"data class GuildMembersChunkData(val guildId: Snowflake, val members: List<DiscordGuildMember>, val chunkIndex: Int, val chunkCount: Int, val notFound: Optional<Set<Snowflake>> = Optional.Missing(), val presences: Optional<List<DiscordPresenceUpdate>> = Optional.Missing(), val nonce: Optional<String> = Optional.Missing())","description":"dev.kord.gateway.GuildMembersChunkData","location":"gateway/dev.kord.gateway/-guild-members-chunk-data/index.html","searchKeys":["GuildMembersChunkData","data class GuildMembersChunkData(val guildId: Snowflake, val members: List<DiscordGuildMember>, val chunkIndex: Int, val chunkCount: Int, val notFound: Optional<Set<Snowflake>> = Optional.Missing(), val presences: Optional<List<DiscordPresenceUpdate>> = Optional.Missing(), val nonce: Optional<String> = Optional.Missing())","dev.kord.gateway.GuildMembersChunkData"]},{"name":"data class GuildRoleCreate(val role: DiscordGuildRole, val sequence: Int?) : DispatchEvent","description":"dev.kord.gateway.GuildRoleCreate","location":"gateway/dev.kord.gateway/-guild-role-create/index.html","searchKeys":["GuildRoleCreate","data class GuildRoleCreate(val role: DiscordGuildRole, val sequence: Int?) : DispatchEvent","dev.kord.gateway.GuildRoleCreate"]},{"name":"data class GuildRoleDelete(val role: DiscordDeletedGuildRole, val sequence: Int?) : DispatchEvent","description":"dev.kord.gateway.GuildRoleDelete","location":"gateway/dev.kord.gateway/-guild-role-delete/index.html","searchKeys":["GuildRoleDelete","data class GuildRoleDelete(val role: DiscordDeletedGuildRole, val sequence: Int?) : DispatchEvent","dev.kord.gateway.GuildRoleDelete"]},{"name":"data class GuildRoleUpdate(val role: DiscordGuildRole, val sequence: Int?) : DispatchEvent","description":"dev.kord.gateway.GuildRoleUpdate","location":"gateway/dev.kord.gateway/-guild-role-update/index.html","searchKeys":["GuildRoleUpdate","data class GuildRoleUpdate(val role: DiscordGuildRole, val sequence: Int?) : DispatchEvent","dev.kord.gateway.GuildRoleUpdate"]},{"name":"data class GuildScheduledEventCreate(val event: DiscordGuildScheduledEvent, val sequence: Int?) : DispatchEvent","description":"dev.kord.gateway.GuildScheduledEventCreate","location":"gateway/dev.kord.gateway/-guild-scheduled-event-create/index.html","searchKeys":["GuildScheduledEventCreate","data class GuildScheduledEventCreate(val event: DiscordGuildScheduledEvent, val sequence: Int?) : DispatchEvent","dev.kord.gateway.GuildScheduledEventCreate"]},{"name":"data class GuildScheduledEventDelete(val event: DiscordGuildScheduledEvent, val sequence: Int?) : DispatchEvent","description":"dev.kord.gateway.GuildScheduledEventDelete","location":"gateway/dev.kord.gateway/-guild-scheduled-event-delete/index.html","searchKeys":["GuildScheduledEventDelete","data class GuildScheduledEventDelete(val event: DiscordGuildScheduledEvent, val sequence: Int?) : DispatchEvent","dev.kord.gateway.GuildScheduledEventDelete"]},{"name":"data class GuildScheduledEventUpdate(val event: DiscordGuildScheduledEvent, val sequence: Int?) : DispatchEvent","description":"dev.kord.gateway.GuildScheduledEventUpdate","location":"gateway/dev.kord.gateway/-guild-scheduled-event-update/index.html","searchKeys":["GuildScheduledEventUpdate","data class GuildScheduledEventUpdate(val event: DiscordGuildScheduledEvent, val sequence: Int?) : DispatchEvent","dev.kord.gateway.GuildScheduledEventUpdate"]},{"name":"data class GuildScheduledEventUserAdd(val data: GuildScheduledEventUserMetadata, val sequence: Int?) : DispatchEvent","description":"dev.kord.gateway.GuildScheduledEventUserAdd","location":"gateway/dev.kord.gateway/-guild-scheduled-event-user-add/index.html","searchKeys":["GuildScheduledEventUserAdd","data class GuildScheduledEventUserAdd(val data: GuildScheduledEventUserMetadata, val sequence: Int?) : DispatchEvent","dev.kord.gateway.GuildScheduledEventUserAdd"]},{"name":"data class GuildScheduledEventUserMetadata(val guildScheduledEventId: Snowflake, val userId: Snowflake, val guildId: Snowflake)","description":"dev.kord.gateway.GuildScheduledEventUserMetadata","location":"gateway/dev.kord.gateway/-guild-scheduled-event-user-metadata/index.html","searchKeys":["GuildScheduledEventUserMetadata","data class GuildScheduledEventUserMetadata(val guildScheduledEventId: Snowflake, val userId: Snowflake, val guildId: Snowflake)","dev.kord.gateway.GuildScheduledEventUserMetadata"]},{"name":"data class GuildScheduledEventUserRemove(val data: GuildScheduledEventUserMetadata, val sequence: Int?) : DispatchEvent","description":"dev.kord.gateway.GuildScheduledEventUserRemove","location":"gateway/dev.kord.gateway/-guild-scheduled-event-user-remove/index.html","searchKeys":["GuildScheduledEventUserRemove","data class GuildScheduledEventUserRemove(val data: GuildScheduledEventUserMetadata, val sequence: Int?) : DispatchEvent","dev.kord.gateway.GuildScheduledEventUserRemove"]},{"name":"data class GuildUpdate(val guild: DiscordGuild, val sequence: Int?) : DispatchEvent","description":"dev.kord.gateway.GuildUpdate","location":"gateway/dev.kord.gateway/-guild-update/index.html","searchKeys":["GuildUpdate","data class GuildUpdate(val guild: DiscordGuild, val sequence: Int?) : DispatchEvent","dev.kord.gateway.GuildUpdate"]},{"name":"data class Heartbeat(val data: Long) : Event","description":"dev.kord.gateway.Heartbeat","location":"gateway/dev.kord.gateway/-heartbeat/index.html","searchKeys":["Heartbeat","data class Heartbeat(val data: Long) : Event","dev.kord.gateway.Heartbeat"]},{"name":"data class Hello(val heartbeatInterval: Int) : Event","description":"dev.kord.gateway.Hello","location":"gateway/dev.kord.gateway/-hello/index.html","searchKeys":["Hello","data class Hello(val heartbeatInterval: Int) : Event","dev.kord.gateway.Hello"]},{"name":"data class IdentifyProperties(val os: String, val browser: String, val device: String)","description":"dev.kord.gateway.IdentifyProperties","location":"gateway/dev.kord.gateway/-identify-properties/index.html","searchKeys":["IdentifyProperties","data class IdentifyProperties(val os: String, val browser: String, val device: String)","dev.kord.gateway.IdentifyProperties"]},{"name":"data class Intents","description":"dev.kord.gateway.Intents","location":"gateway/dev.kord.gateway/-intents/index.html","searchKeys":["Intents","data class Intents","dev.kord.gateway.Intents"]},{"name":"data class InteractionCreate(val interaction: DiscordInteraction, val sequence: Int?) : DispatchEvent","description":"dev.kord.gateway.InteractionCreate","location":"gateway/dev.kord.gateway/-interaction-create/index.html","searchKeys":["InteractionCreate","data class InteractionCreate(val interaction: DiscordInteraction, val sequence: Int?) : DispatchEvent","dev.kord.gateway.InteractionCreate"]},{"name":"data class InvalidSession(val resumable: Boolean) : Event","description":"dev.kord.gateway.InvalidSession","location":"gateway/dev.kord.gateway/-invalid-session/index.html","searchKeys":["InvalidSession","data class InvalidSession(val resumable: Boolean) : Event","dev.kord.gateway.InvalidSession"]},{"name":"data class InviteCreate(val invite: DiscordCreatedInvite, val sequence: Int?) : DispatchEvent","description":"dev.kord.gateway.InviteCreate","location":"gateway/dev.kord.gateway/-invite-create/index.html","searchKeys":["InviteCreate","data class InviteCreate(val invite: DiscordCreatedInvite, val sequence: Int?) : DispatchEvent","dev.kord.gateway.InviteCreate"]},{"name":"data class InviteDelete(val invite: DiscordDeletedInvite, val sequence: Int?) : DispatchEvent","description":"dev.kord.gateway.InviteDelete","location":"gateway/dev.kord.gateway/-invite-delete/index.html","searchKeys":["InviteDelete","data class InviteDelete(val invite: DiscordDeletedInvite, val sequence: Int?) : DispatchEvent","dev.kord.gateway.InviteDelete"]},{"name":"data class MessageCreate(val message: DiscordMessage, val sequence: Int?) : DispatchEvent","description":"dev.kord.gateway.MessageCreate","location":"gateway/dev.kord.gateway/-message-create/index.html","searchKeys":["MessageCreate","data class MessageCreate(val message: DiscordMessage, val sequence: Int?) : DispatchEvent","dev.kord.gateway.MessageCreate"]},{"name":"data class MessageDelete(val message: DeletedMessage, val sequence: Int?) : DispatchEvent","description":"dev.kord.gateway.MessageDelete","location":"gateway/dev.kord.gateway/-message-delete/index.html","searchKeys":["MessageDelete","data class MessageDelete(val message: DeletedMessage, val sequence: Int?) : DispatchEvent","dev.kord.gateway.MessageDelete"]},{"name":"data class MessageDeleteBulk(val messageBulk: BulkDeleteData, val sequence: Int?) : DispatchEvent","description":"dev.kord.gateway.MessageDeleteBulk","location":"gateway/dev.kord.gateway/-message-delete-bulk/index.html","searchKeys":["MessageDeleteBulk","data class MessageDeleteBulk(val messageBulk: BulkDeleteData, val sequence: Int?) : DispatchEvent","dev.kord.gateway.MessageDeleteBulk"]},{"name":"data class MessageReactionAdd(val reaction: MessageReactionAddData, val sequence: Int?) : DispatchEvent","description":"dev.kord.gateway.MessageReactionAdd","location":"gateway/dev.kord.gateway/-message-reaction-add/index.html","searchKeys":["MessageReactionAdd","data class MessageReactionAdd(val reaction: MessageReactionAddData, val sequence: Int?) : DispatchEvent","dev.kord.gateway.MessageReactionAdd"]},{"name":"data class MessageReactionRemove(val reaction: MessageReactionRemoveData, val sequence: Int?) : DispatchEvent","description":"dev.kord.gateway.MessageReactionRemove","location":"gateway/dev.kord.gateway/-message-reaction-remove/index.html","searchKeys":["MessageReactionRemove","data class MessageReactionRemove(val reaction: MessageReactionRemoveData, val sequence: Int?) : DispatchEvent","dev.kord.gateway.MessageReactionRemove"]},{"name":"data class MessageReactionRemoveAll(val reactions: AllRemovedMessageReactions, val sequence: Int?) : DispatchEvent","description":"dev.kord.gateway.MessageReactionRemoveAll","location":"gateway/dev.kord.gateway/-message-reaction-remove-all/index.html","searchKeys":["MessageReactionRemoveAll","data class MessageReactionRemoveAll(val reactions: AllRemovedMessageReactions, val sequence: Int?) : DispatchEvent","dev.kord.gateway.MessageReactionRemoveAll"]},{"name":"data class MessageReactionRemoveEmoji(val reaction: DiscordRemovedEmoji, val sequence: Int?) : DispatchEvent","description":"dev.kord.gateway.MessageReactionRemoveEmoji","location":"gateway/dev.kord.gateway/-message-reaction-remove-emoji/index.html","searchKeys":["MessageReactionRemoveEmoji","data class MessageReactionRemoveEmoji(val reaction: DiscordRemovedEmoji, val sequence: Int?) : DispatchEvent","dev.kord.gateway.MessageReactionRemoveEmoji"]},{"name":"data class MessageUpdate(val message: DiscordPartialMessage, val sequence: Int?) : DispatchEvent","description":"dev.kord.gateway.MessageUpdate","location":"gateway/dev.kord.gateway/-message-update/index.html","searchKeys":["MessageUpdate","data class MessageUpdate(val message: DiscordPartialMessage, val sequence: Int?) : DispatchEvent","dev.kord.gateway.MessageUpdate"]},{"name":"data class PresenceUpdate(val presence: DiscordPresenceUpdate, val sequence: Int?) : DispatchEvent","description":"dev.kord.gateway.PresenceUpdate","location":"gateway/dev.kord.gateway/-presence-update/index.html","searchKeys":["PresenceUpdate","data class PresenceUpdate(val presence: DiscordPresenceUpdate, val sequence: Int?) : DispatchEvent","dev.kord.gateway.PresenceUpdate"]},{"name":"data class Ready(val data: ReadyData, val sequence: Int?) : DispatchEvent","description":"dev.kord.gateway.Ready","location":"gateway/dev.kord.gateway/-ready/index.html","searchKeys":["Ready","data class Ready(val data: ReadyData, val sequence: Int?) : DispatchEvent","dev.kord.gateway.Ready"]},{"name":"data class ReadyData(val version: Int, val user: DiscordUser, val privateChannels: List<DiscordChannel>, val guilds: List<DiscordUnavailableGuild>, val sessionId: String, val resumeGatewayUrl: String, val geoOrderedRtcRegions: Optional<JsonElement?> = Optional.Missing(), val guildHashes: Optional<JsonElement?> = Optional.Missing(), val application: Optional<JsonElement?> = Optional.Missing(), val traces: List<String>, val shard: Optional<DiscordShard> = Optional.Missing())","description":"dev.kord.gateway.ReadyData","location":"gateway/dev.kord.gateway/-ready-data/index.html","searchKeys":["ReadyData","data class ReadyData(val version: Int, val user: DiscordUser, val privateChannels: List<DiscordChannel>, val guilds: List<DiscordUnavailableGuild>, val sessionId: String, val resumeGatewayUrl: String, val geoOrderedRtcRegions: Optional<JsonElement?> = Optional.Missing(), val guildHashes: Optional<JsonElement?> = Optional.Missing(), val application: Optional<JsonElement?> = Optional.Missing(), val traces: List<String>, val shard: Optional<DiscordShard> = Optional.Missing())","dev.kord.gateway.ReadyData"]},{"name":"data class RequestGuildMembers(val guildId: Snowflake, val query: Optional<String> = Optional.Missing(), val limit: OptionalInt = OptionalInt.Missing, val presences: OptionalBoolean = OptionalBoolean.Missing, val userIds: Optional<Set<Snowflake>> = Optional.Missing(), val nonce: Optional<String> = Optional.Missing()) : Command","description":"dev.kord.gateway.RequestGuildMembers","location":"gateway/dev.kord.gateway/-request-guild-members/index.html","searchKeys":["RequestGuildMembers","data class RequestGuildMembers(val guildId: Snowflake, val query: Optional<String> = Optional.Missing(), val limit: OptionalInt = OptionalInt.Missing, val presences: OptionalBoolean = OptionalBoolean.Missing, val userIds: Optional<Set<Snowflake>> = Optional.Missing(), val nonce: Optional<String> = Optional.Missing()) : Command","dev.kord.gateway.RequestGuildMembers"]},{"name":"data class Resumed(val sequence: Int?) : DispatchEvent","description":"dev.kord.gateway.Resumed","location":"gateway/dev.kord.gateway/-resumed/index.html","searchKeys":["Resumed","data class Resumed(val sequence: Int?) : DispatchEvent","dev.kord.gateway.Resumed"]},{"name":"data class Shards(val totalShards: Int, val indices: Iterable<Int> = 0 until totalShards)","description":"dev.kord.gateway.builder.Shards","location":"gateway/dev.kord.gateway.builder/-shards/index.html","searchKeys":["Shards","data class Shards(val totalShards: Int, val indices: Iterable<Int> = 0 until totalShards)","dev.kord.gateway.builder.Shards"]},{"name":"data class ThreadCreate(val channel: DiscordChannel, val sequence: Int?) : DispatchEvent","description":"dev.kord.gateway.ThreadCreate","location":"gateway/dev.kord.gateway/-thread-create/index.html","searchKeys":["ThreadCreate","data class ThreadCreate(val channel: DiscordChannel, val sequence: Int?) : DispatchEvent","dev.kord.gateway.ThreadCreate"]},{"name":"data class ThreadDelete(val channel: DiscordChannel, val sequence: Int?) : DispatchEvent","description":"dev.kord.gateway.ThreadDelete","location":"gateway/dev.kord.gateway/-thread-delete/index.html","searchKeys":["ThreadDelete","data class ThreadDelete(val channel: DiscordChannel, val sequence: Int?) : DispatchEvent","dev.kord.gateway.ThreadDelete"]},{"name":"data class ThreadListSync(val sync: DiscordThreadListSync, val sequence: Int?) : DispatchEvent","description":"dev.kord.gateway.ThreadListSync","location":"gateway/dev.kord.gateway/-thread-list-sync/index.html","searchKeys":["ThreadListSync","data class ThreadListSync(val sync: DiscordThreadListSync, val sequence: Int?) : DispatchEvent","dev.kord.gateway.ThreadListSync"]},{"name":"data class ThreadMemberUpdate(val member: DiscordThreadMember, val sequence: Int?) : DispatchEvent","description":"dev.kord.gateway.ThreadMemberUpdate","location":"gateway/dev.kord.gateway/-thread-member-update/index.html","searchKeys":["ThreadMemberUpdate","data class ThreadMemberUpdate(val member: DiscordThreadMember, val sequence: Int?) : DispatchEvent","dev.kord.gateway.ThreadMemberUpdate"]},{"name":"data class ThreadMembersUpdate(val members: DiscordThreadMembersUpdate, val sequence: Int?) : DispatchEvent","description":"dev.kord.gateway.ThreadMembersUpdate","location":"gateway/dev.kord.gateway/-thread-members-update/index.html","searchKeys":["ThreadMembersUpdate","data class ThreadMembersUpdate(val members: DiscordThreadMembersUpdate, val sequence: Int?) : DispatchEvent","dev.kord.gateway.ThreadMembersUpdate"]},{"name":"data class ThreadUpdate(val channel: DiscordChannel, val sequence: Int?) : DispatchEvent","description":"dev.kord.gateway.ThreadUpdate","location":"gateway/dev.kord.gateway/-thread-update/index.html","searchKeys":["ThreadUpdate","data class ThreadUpdate(val channel: DiscordChannel, val sequence: Int?) : DispatchEvent","dev.kord.gateway.ThreadUpdate"]},{"name":"data class TypingStart(val data: DiscordTyping, val sequence: Int?) : DispatchEvent","description":"dev.kord.gateway.TypingStart","location":"gateway/dev.kord.gateway/-typing-start/index.html","searchKeys":["TypingStart","data class TypingStart(val data: DiscordTyping, val sequence: Int?) : DispatchEvent","dev.kord.gateway.TypingStart"]},{"name":"data class UpdateStatus(val since: Instant?, val activities: List<DiscordBotActivity>, val status: PresenceStatus, val afk: Boolean) : Command","description":"dev.kord.gateway.UpdateStatus","location":"gateway/dev.kord.gateway/-update-status/index.html","searchKeys":["UpdateStatus","data class UpdateStatus(val since: Instant?, val activities: List<DiscordBotActivity>, val status: PresenceStatus, val afk: Boolean) : Command","dev.kord.gateway.UpdateStatus"]},{"name":"data class UpdateVoiceStatus(val guildId: Snowflake, val channelId: Snowflake?, val selfMute: Boolean, val selfDeaf: Boolean) : Command","description":"dev.kord.gateway.UpdateVoiceStatus","location":"gateway/dev.kord.gateway/-update-voice-status/index.html","searchKeys":["UpdateVoiceStatus","data class UpdateVoiceStatus(val guildId: Snowflake, val channelId: Snowflake?, val selfMute: Boolean, val selfDeaf: Boolean) : Command","dev.kord.gateway.UpdateVoiceStatus"]},{"name":"data class UserUpdate(val user: DiscordUser, val sequence: Int?) : DispatchEvent","description":"dev.kord.gateway.UserUpdate","location":"gateway/dev.kord.gateway/-user-update/index.html","searchKeys":["UserUpdate","data class UserUpdate(val user: DiscordUser, val sequence: Int?) : DispatchEvent","dev.kord.gateway.UserUpdate"]},{"name":"data class VoiceServerUpdate(val voiceServerUpdateData: DiscordVoiceServerUpdateData, val sequence: Int?) : DispatchEvent","description":"dev.kord.gateway.VoiceServerUpdate","location":"gateway/dev.kord.gateway/-voice-server-update/index.html","searchKeys":["VoiceServerUpdate","data class VoiceServerUpdate(val voiceServerUpdateData: DiscordVoiceServerUpdateData, val sequence: Int?) : DispatchEvent","dev.kord.gateway.VoiceServerUpdate"]},{"name":"data class VoiceStateUpdate(val voiceState: DiscordVoiceState, val sequence: Int?) : DispatchEvent","description":"dev.kord.gateway.VoiceStateUpdate","location":"gateway/dev.kord.gateway/-voice-state-update/index.html","searchKeys":["VoiceStateUpdate","data class VoiceStateUpdate(val voiceState: DiscordVoiceState, val sequence: Int?) : DispatchEvent","dev.kord.gateway.VoiceStateUpdate"]},{"name":"data class WebhooksUpdate(val webhooksUpdateData: DiscordWebhooksUpdateData, val sequence: Int?) : DispatchEvent","description":"dev.kord.gateway.WebhooksUpdate","location":"gateway/dev.kord.gateway/-webhooks-update/index.html","searchKeys":["WebhooksUpdate","data class WebhooksUpdate(val webhooksUpdateData: DiscordWebhooksUpdateData, val sequence: Int?) : DispatchEvent","dev.kord.gateway.WebhooksUpdate"]},{"name":"enum GatewayCloseCode : Enum<GatewayCloseCode> ","description":"dev.kord.gateway.GatewayCloseCode","location":"gateway/dev.kord.gateway/-gateway-close-code/index.html","searchKeys":["GatewayCloseCode","enum GatewayCloseCode : Enum<GatewayCloseCode> ","dev.kord.gateway.GatewayCloseCode"]},{"name":"enum OpCode : Enum<OpCode> ","description":"dev.kord.gateway.OpCode","location":"gateway/dev.kord.gateway/-op-code/index.html","searchKeys":["OpCode","enum OpCode : Enum<OpCode> ","dev.kord.gateway.OpCode"]},{"name":"fun ApplicationCommandCreate(application: DiscordApplicationCommand, sequence: Int?)","description":"dev.kord.gateway.ApplicationCommandCreate.ApplicationCommandCreate","location":"gateway/dev.kord.gateway/-application-command-create/-application-command-create.html","searchKeys":["ApplicationCommandCreate","fun ApplicationCommandCreate(application: DiscordApplicationCommand, sequence: Int?)","dev.kord.gateway.ApplicationCommandCreate.ApplicationCommandCreate"]},{"name":"fun ApplicationCommandDelete(application: DiscordApplicationCommand, sequence: Int?)","description":"dev.kord.gateway.ApplicationCommandDelete.ApplicationCommandDelete","location":"gateway/dev.kord.gateway/-application-command-delete/-application-command-delete.html","searchKeys":["ApplicationCommandDelete","fun ApplicationCommandDelete(application: DiscordApplicationCommand, sequence: Int?)","dev.kord.gateway.ApplicationCommandDelete.ApplicationCommandDelete"]},{"name":"fun ApplicationCommandPermissionsUpdate(permissions: DiscordGuildApplicationCommandPermissions, sequence: Int?)","description":"dev.kord.gateway.ApplicationCommandPermissionsUpdate.ApplicationCommandPermissionsUpdate","location":"gateway/dev.kord.gateway/-application-command-permissions-update/-application-command-permissions-update.html","searchKeys":["ApplicationCommandPermissionsUpdate","fun ApplicationCommandPermissionsUpdate(permissions: DiscordGuildApplicationCommandPermissions, sequence: Int?)","dev.kord.gateway.ApplicationCommandPermissionsUpdate.ApplicationCommandPermissionsUpdate"]},{"name":"fun ApplicationCommandUpdate(application: DiscordApplicationCommand, sequence: Int?)","description":"dev.kord.gateway.ApplicationCommandUpdate.ApplicationCommandUpdate","location":"gateway/dev.kord.gateway/-application-command-update/-application-command-update.html","searchKeys":["ApplicationCommandUpdate","fun ApplicationCommandUpdate(application: DiscordApplicationCommand, sequence: Int?)","dev.kord.gateway.ApplicationCommandUpdate.ApplicationCommandUpdate"]},{"name":"fun AutoModerationActionExecution(actionExecution: DiscordAutoModerationActionExecution, sequence: Int?)","description":"dev.kord.gateway.AutoModerationActionExecution.AutoModerationActionExecution","location":"gateway/dev.kord.gateway/-auto-moderation-action-execution/-auto-moderation-action-execution.html","searchKeys":["AutoModerationActionExecution","fun AutoModerationActionExecution(actionExecution: DiscordAutoModerationActionExecution, sequence: Int?)","dev.kord.gateway.AutoModerationActionExecution.AutoModerationActionExecution"]},{"name":"fun AutoModerationRuleCreate(rule: DiscordAutoModerationRule, sequence: Int?)","description":"dev.kord.gateway.AutoModerationRuleCreate.AutoModerationRuleCreate","location":"gateway/dev.kord.gateway/-auto-moderation-rule-create/-auto-moderation-rule-create.html","searchKeys":["AutoModerationRuleCreate","fun AutoModerationRuleCreate(rule: DiscordAutoModerationRule, sequence: Int?)","dev.kord.gateway.AutoModerationRuleCreate.AutoModerationRuleCreate"]},{"name":"fun AutoModerationRuleDelete(rule: DiscordAutoModerationRule, sequence: Int?)","description":"dev.kord.gateway.AutoModerationRuleDelete.AutoModerationRuleDelete","location":"gateway/dev.kord.gateway/-auto-moderation-rule-delete/-auto-moderation-rule-delete.html","searchKeys":["AutoModerationRuleDelete","fun AutoModerationRuleDelete(rule: DiscordAutoModerationRule, sequence: Int?)","dev.kord.gateway.AutoModerationRuleDelete.AutoModerationRuleDelete"]},{"name":"fun AutoModerationRuleUpdate(rule: DiscordAutoModerationRule, sequence: Int?)","description":"dev.kord.gateway.AutoModerationRuleUpdate.AutoModerationRuleUpdate","location":"gateway/dev.kord.gateway/-auto-moderation-rule-update/-auto-moderation-rule-update.html","searchKeys":["AutoModerationRuleUpdate","fun AutoModerationRuleUpdate(rule: DiscordAutoModerationRule, sequence: Int?)","dev.kord.gateway.AutoModerationRuleUpdate.AutoModerationRuleUpdate"]},{"name":"fun ChannelCreate(channel: DiscordChannel, sequence: Int?)","description":"dev.kord.gateway.ChannelCreate.ChannelCreate","location":"gateway/dev.kord.gateway/-channel-create/-channel-create.html","searchKeys":["ChannelCreate","fun ChannelCreate(channel: DiscordChannel, sequence: Int?)","dev.kord.gateway.ChannelCreate.ChannelCreate"]},{"name":"fun ChannelDelete(channel: DiscordChannel, sequence: Int?)","description":"dev.kord.gateway.ChannelDelete.ChannelDelete","location":"gateway/dev.kord.gateway/-channel-delete/-channel-delete.html","searchKeys":["ChannelDelete","fun ChannelDelete(channel: DiscordChannel, sequence: Int?)","dev.kord.gateway.ChannelDelete.ChannelDelete"]},{"name":"fun ChannelPinsUpdate(pins: DiscordPinsUpdateData, sequence: Int?)","description":"dev.kord.gateway.ChannelPinsUpdate.ChannelPinsUpdate","location":"gateway/dev.kord.gateway/-channel-pins-update/-channel-pins-update.html","searchKeys":["ChannelPinsUpdate","fun ChannelPinsUpdate(pins: DiscordPinsUpdateData, sequence: Int?)","dev.kord.gateway.ChannelPinsUpdate.ChannelPinsUpdate"]},{"name":"fun ChannelUpdate(channel: DiscordChannel, sequence: Int?)","description":"dev.kord.gateway.ChannelUpdate.ChannelUpdate","location":"gateway/dev.kord.gateway/-channel-update/-channel-update.html","searchKeys":["ChannelUpdate","fun ChannelUpdate(channel: DiscordChannel, sequence: Int?)","dev.kord.gateway.ChannelUpdate.ChannelUpdate"]},{"name":"fun DefaultGateway(data: DefaultGatewayData)","description":"dev.kord.gateway.DefaultGateway.DefaultGateway","location":"gateway/dev.kord.gateway/-default-gateway/-default-gateway.html","searchKeys":["DefaultGateway","fun DefaultGateway(data: DefaultGatewayData)","dev.kord.gateway.DefaultGateway.DefaultGateway"]},{"name":"fun DefaultGatewayBuilder()","description":"dev.kord.gateway.DefaultGatewayBuilder.DefaultGatewayBuilder","location":"gateway/dev.kord.gateway/-default-gateway-builder/-default-gateway-builder.html","searchKeys":["DefaultGatewayBuilder","fun DefaultGatewayBuilder()","dev.kord.gateway.DefaultGatewayBuilder.DefaultGatewayBuilder"]},{"name":"fun DefaultGatewayData(url: String, client: HttpClient, reconnectRetry: Retry, sendRateLimiter: RateLimiter, identifyRateLimiter: IdentifyRateLimiter, dispatcher: CoroutineDispatcher, eventFlow: MutableSharedFlow<Event>)","description":"dev.kord.gateway.DefaultGatewayData.DefaultGatewayData","location":"gateway/dev.kord.gateway/-default-gateway-data/-default-gateway-data.html","searchKeys":["DefaultGatewayData","fun DefaultGatewayData(url: String, client: HttpClient, reconnectRetry: Retry, sendRateLimiter: RateLimiter, identifyRateLimiter: IdentifyRateLimiter, dispatcher: CoroutineDispatcher, eventFlow: MutableSharedFlow<Event>)","dev.kord.gateway.DefaultGatewayData.DefaultGatewayData"]},{"name":"fun DiscordAutoModerationActionExecution(guildId: Snowflake, action: DiscordAutoModerationAction, ruleId: Snowflake, ruleTriggerType: AutoModerationRuleTriggerType, userId: Snowflake, channelId: OptionalSnowflake = OptionalSnowflake.Missing, messageId: OptionalSnowflake = OptionalSnowflake.Missing, alertSystemMessageId: OptionalSnowflake = OptionalSnowflake.Missing, content: String, matchedKeyword: String?, matchedContent: String?)","description":"dev.kord.gateway.DiscordAutoModerationActionExecution.DiscordAutoModerationActionExecution","location":"gateway/dev.kord.gateway/-discord-auto-moderation-action-execution/-discord-auto-moderation-action-execution.html","searchKeys":["DiscordAutoModerationActionExecution","fun DiscordAutoModerationActionExecution(guildId: Snowflake, action: DiscordAutoModerationAction, ruleId: Snowflake, ruleTriggerType: AutoModerationRuleTriggerType, userId: Snowflake, channelId: OptionalSnowflake = OptionalSnowflake.Missing, messageId: OptionalSnowflake = OptionalSnowflake.Missing, alertSystemMessageId: OptionalSnowflake = OptionalSnowflake.Missing, content: String, matchedKeyword: String?, matchedContent: String?)","dev.kord.gateway.DiscordAutoModerationActionExecution.DiscordAutoModerationActionExecution"]},{"name":"fun DiscordClose(closeCode: GatewayCloseCode, recoverable: Boolean)","description":"dev.kord.gateway.Close.DiscordClose.DiscordClose","location":"gateway/dev.kord.gateway/-close/-discord-close/-discord-close.html","searchKeys":["DiscordClose","fun DiscordClose(closeCode: GatewayCloseCode, recoverable: Boolean)","dev.kord.gateway.Close.DiscordClose.DiscordClose"]},{"name":"fun DiscordCreatedInvite(channelId: Snowflake, code: String, createdAt: Instant, guildId: OptionalSnowflake = OptionalSnowflake.Missing, inviter: Optional<DiscordUser> = Optional.Missing(), maxAge: DurationInSeconds, maxUses: Int, targetType: Optional<InviteTargetType> = Optional.Missing(), targetUser: Optional<DiscordUser> = Optional.Missing(), targetApplication: Optional<DiscordPartialApplication> = Optional.Missing(), targetUserType: Optional<TargetUserType> = Optional.Missing(), temporary: Boolean, uses: Int)","description":"dev.kord.gateway.DiscordCreatedInvite.DiscordCreatedInvite","location":"gateway/dev.kord.gateway/-discord-created-invite/-discord-created-invite.html","searchKeys":["DiscordCreatedInvite","fun DiscordCreatedInvite(channelId: Snowflake, code: String, createdAt: Instant, guildId: OptionalSnowflake = OptionalSnowflake.Missing, inviter: Optional<DiscordUser> = Optional.Missing(), maxAge: DurationInSeconds, maxUses: Int, targetType: Optional<InviteTargetType> = Optional.Missing(), targetUser: Optional<DiscordUser> = Optional.Missing(), targetApplication: Optional<DiscordPartialApplication> = Optional.Missing(), targetUserType: Optional<TargetUserType> = Optional.Missing(), temporary: Boolean, uses: Int)","dev.kord.gateway.DiscordCreatedInvite.DiscordCreatedInvite"]},{"name":"fun DiscordDeletedInvite(channelId: Snowflake, guildId: OptionalSnowflake = OptionalSnowflake.Missing, code: String)","description":"dev.kord.gateway.DiscordDeletedInvite.DiscordDeletedInvite","location":"gateway/dev.kord.gateway/-discord-deleted-invite/-discord-deleted-invite.html","searchKeys":["DiscordDeletedInvite","fun DiscordDeletedInvite(channelId: Snowflake, guildId: OptionalSnowflake = OptionalSnowflake.Missing, code: String)","dev.kord.gateway.DiscordDeletedInvite.DiscordDeletedInvite"]},{"name":"fun DiscordPresence(status: PresenceStatus, afk: Boolean, since: Instant? = null, game: DiscordBotActivity? = null)","description":"dev.kord.gateway.DiscordPresence.DiscordPresence","location":"gateway/dev.kord.gateway/-discord-presence/-discord-presence.html","searchKeys":["DiscordPresence","fun DiscordPresence(status: PresenceStatus, afk: Boolean, since: Instant? = null, game: DiscordBotActivity? = null)","dev.kord.gateway.DiscordPresence.DiscordPresence"]},{"name":"fun DiscordRemovedEmoji(channelId: Snowflake, guildId: Snowflake, messageId: Snowflake, emoji: DiscordRemovedReactionEmoji)","description":"dev.kord.gateway.DiscordRemovedEmoji.DiscordRemovedEmoji","location":"gateway/dev.kord.gateway/-discord-removed-emoji/-discord-removed-emoji.html","searchKeys":["DiscordRemovedEmoji","fun DiscordRemovedEmoji(channelId: Snowflake, guildId: Snowflake, messageId: Snowflake, emoji: DiscordRemovedReactionEmoji)","dev.kord.gateway.DiscordRemovedEmoji.DiscordRemovedEmoji"]},{"name":"fun DiscordRemovedReactionEmoji(id: Snowflake?, name: String?)","description":"dev.kord.gateway.DiscordRemovedReactionEmoji.DiscordRemovedReactionEmoji","location":"gateway/dev.kord.gateway/-discord-removed-reaction-emoji/-discord-removed-reaction-emoji.html","searchKeys":["DiscordRemovedReactionEmoji","fun DiscordRemovedReactionEmoji(id: Snowflake?, name: String?)","dev.kord.gateway.DiscordRemovedReactionEmoji.DiscordRemovedReactionEmoji"]},{"name":"fun DiscordThreadListSync(guildId: Snowflake, channelIds: Optional<List<Snowflake>> = Optional.Missing(), threads: List<DiscordChannel>, members: List<DiscordThreadMember>)","description":"dev.kord.gateway.DiscordThreadListSync.DiscordThreadListSync","location":"gateway/dev.kord.gateway/-discord-thread-list-sync/-discord-thread-list-sync.html","searchKeys":["DiscordThreadListSync","fun DiscordThreadListSync(guildId: Snowflake, channelIds: Optional<List<Snowflake>> = Optional.Missing(), threads: List<DiscordChannel>, members: List<DiscordThreadMember>)","dev.kord.gateway.DiscordThreadListSync.DiscordThreadListSync"]},{"name":"fun DiscordThreadMembersUpdate(id: Snowflake, guildId: Snowflake, memberCount: Int, addedMembers: Optional<List<DiscordThreadMember>> = Optional.Missing(), removedMemberIds: Optional<List<Snowflake>> = Optional.Missing())","description":"dev.kord.gateway.DiscordThreadMembersUpdate.DiscordThreadMembersUpdate","location":"gateway/dev.kord.gateway/-discord-thread-members-update/-discord-thread-members-update.html","searchKeys":["DiscordThreadMembersUpdate","fun DiscordThreadMembersUpdate(id: Snowflake, guildId: Snowflake, memberCount: Int, addedMembers: Optional<List<DiscordThreadMember>> = Optional.Missing(), removedMemberIds: Optional<List<Snowflake>> = Optional.Missing())","dev.kord.gateway.DiscordThreadMembersUpdate.DiscordThreadMembersUpdate"]},{"name":"fun Gateway.requestGuildMembers(guildId: Snowflake, builder: RequestGuildMembersBuilder.() -> Unit = { requestAllMembers() }): Flow<GuildMembersChunk>","description":"dev.kord.gateway.requestGuildMembers","location":"gateway/dev.kord.gateway/request-guild-members.html","searchKeys":["requestGuildMembers","fun Gateway.requestGuildMembers(guildId: Snowflake, builder: RequestGuildMembersBuilder.() -> Unit = { requestAllMembers() }): Flow<GuildMembersChunk>","dev.kord.gateway.requestGuildMembers"]},{"name":"fun Gateway.requestGuildMembers(request: RequestGuildMembers): Flow<GuildMembersChunk>","description":"dev.kord.gateway.requestGuildMembers","location":"gateway/dev.kord.gateway/request-guild-members.html","searchKeys":["requestGuildMembers","fun Gateway.requestGuildMembers(request: RequestGuildMembers): Flow<GuildMembersChunk>","dev.kord.gateway.requestGuildMembers"]},{"name":"fun GatewayConfiguration(token: String, name: String, shard: DiscordShard, presence: Optional<DiscordPresence> = Optional.Missing(), threshold: Int, intents: Intents)","description":"dev.kord.gateway.GatewayConfiguration.GatewayConfiguration","location":"gateway/dev.kord.gateway/-gateway-configuration/-gateway-configuration.html","searchKeys":["GatewayConfiguration","fun GatewayConfiguration(token: String, name: String, shard: DiscordShard, presence: Optional<DiscordPresence> = Optional.Missing(), threshold: Int, intents: Intents)","dev.kord.gateway.GatewayConfiguration.GatewayConfiguration"]},{"name":"fun GatewayConfigurationBuilder(token: String, name: String = \"Kord\", shard: DiscordShard = DiscordShard(0, 1), presence: DiscordPresence? = null, threshold: Int = 250, intents: Intents = Intents.nonPrivileged)","description":"dev.kord.gateway.GatewayConfigurationBuilder.GatewayConfigurationBuilder","location":"gateway/dev.kord.gateway/-gateway-configuration-builder/-gateway-configuration-builder.html","searchKeys":["GatewayConfigurationBuilder","fun GatewayConfigurationBuilder(token: String, name: String = \"Kord\", shard: DiscordShard = DiscordShard(0, 1), presence: DiscordPresence? = null, threshold: Int = 250, intents: Intents = Intents.nonPrivileged)","dev.kord.gateway.GatewayConfigurationBuilder.GatewayConfigurationBuilder"]},{"name":"fun GuildBanAdd(ban: DiscordGuildBan, sequence: Int?)","description":"dev.kord.gateway.GuildBanAdd.GuildBanAdd","location":"gateway/dev.kord.gateway/-guild-ban-add/-guild-ban-add.html","searchKeys":["GuildBanAdd","fun GuildBanAdd(ban: DiscordGuildBan, sequence: Int?)","dev.kord.gateway.GuildBanAdd.GuildBanAdd"]},{"name":"fun GuildBanRemove(ban: DiscordGuildBan, sequence: Int?)","description":"dev.kord.gateway.GuildBanRemove.GuildBanRemove","location":"gateway/dev.kord.gateway/-guild-ban-remove/-guild-ban-remove.html","searchKeys":["GuildBanRemove","fun GuildBanRemove(ban: DiscordGuildBan, sequence: Int?)","dev.kord.gateway.GuildBanRemove.GuildBanRemove"]},{"name":"fun GuildCreate(guild: DiscordGuild, sequence: Int?)","description":"dev.kord.gateway.GuildCreate.GuildCreate","location":"gateway/dev.kord.gateway/-guild-create/-guild-create.html","searchKeys":["GuildCreate","fun GuildCreate(guild: DiscordGuild, sequence: Int?)","dev.kord.gateway.GuildCreate.GuildCreate"]},{"name":"fun GuildDelete(guild: DiscordUnavailableGuild, sequence: Int?)","description":"dev.kord.gateway.GuildDelete.GuildDelete","location":"gateway/dev.kord.gateway/-guild-delete/-guild-delete.html","searchKeys":["GuildDelete","fun GuildDelete(guild: DiscordUnavailableGuild, sequence: Int?)","dev.kord.gateway.GuildDelete.GuildDelete"]},{"name":"fun GuildEmojisUpdate(emoji: DiscordUpdatedEmojis, sequence: Int?)","description":"dev.kord.gateway.GuildEmojisUpdate.GuildEmojisUpdate","location":"gateway/dev.kord.gateway/-guild-emojis-update/-guild-emojis-update.html","searchKeys":["GuildEmojisUpdate","fun GuildEmojisUpdate(emoji: DiscordUpdatedEmojis, sequence: Int?)","dev.kord.gateway.GuildEmojisUpdate.GuildEmojisUpdate"]},{"name":"fun GuildIntegrationsUpdate(integrations: DiscordGuildIntegrations, sequence: Int?)","description":"dev.kord.gateway.GuildIntegrationsUpdate.GuildIntegrationsUpdate","location":"gateway/dev.kord.gateway/-guild-integrations-update/-guild-integrations-update.html","searchKeys":["GuildIntegrationsUpdate","fun GuildIntegrationsUpdate(integrations: DiscordGuildIntegrations, sequence: Int?)","dev.kord.gateway.GuildIntegrationsUpdate.GuildIntegrationsUpdate"]},{"name":"fun GuildMemberAdd(member: DiscordAddedGuildMember, sequence: Int?)","description":"dev.kord.gateway.GuildMemberAdd.GuildMemberAdd","location":"gateway/dev.kord.gateway/-guild-member-add/-guild-member-add.html","searchKeys":["GuildMemberAdd","fun GuildMemberAdd(member: DiscordAddedGuildMember, sequence: Int?)","dev.kord.gateway.GuildMemberAdd.GuildMemberAdd"]},{"name":"fun GuildMemberRemove(member: DiscordRemovedGuildMember, sequence: Int?)","description":"dev.kord.gateway.GuildMemberRemove.GuildMemberRemove","location":"gateway/dev.kord.gateway/-guild-member-remove/-guild-member-remove.html","searchKeys":["GuildMemberRemove","fun GuildMemberRemove(member: DiscordRemovedGuildMember, sequence: Int?)","dev.kord.gateway.GuildMemberRemove.GuildMemberRemove"]},{"name":"fun GuildMemberUpdate(member: DiscordUpdatedGuildMember, sequence: Int?)","description":"dev.kord.gateway.GuildMemberUpdate.GuildMemberUpdate","location":"gateway/dev.kord.gateway/-guild-member-update/-guild-member-update.html","searchKeys":["GuildMemberUpdate","fun GuildMemberUpdate(member: DiscordUpdatedGuildMember, sequence: Int?)","dev.kord.gateway.GuildMemberUpdate.GuildMemberUpdate"]},{"name":"fun GuildMembersChunk(data: GuildMembersChunkData, sequence: Int?)","description":"dev.kord.gateway.GuildMembersChunk.GuildMembersChunk","location":"gateway/dev.kord.gateway/-guild-members-chunk/-guild-members-chunk.html","searchKeys":["GuildMembersChunk","fun GuildMembersChunk(data: GuildMembersChunkData, sequence: Int?)","dev.kord.gateway.GuildMembersChunk.GuildMembersChunk"]},{"name":"fun GuildMembersChunkData(guildId: Snowflake, members: List<DiscordGuildMember>, chunkIndex: Int, chunkCount: Int, notFound: Optional<Set<Snowflake>> = Optional.Missing(), presences: Optional<List<DiscordPresenceUpdate>> = Optional.Missing(), nonce: Optional<String> = Optional.Missing())","description":"dev.kord.gateway.GuildMembersChunkData.GuildMembersChunkData","location":"gateway/dev.kord.gateway/-guild-members-chunk-data/-guild-members-chunk-data.html","searchKeys":["GuildMembersChunkData","fun GuildMembersChunkData(guildId: Snowflake, members: List<DiscordGuildMember>, chunkIndex: Int, chunkCount: Int, notFound: Optional<Set<Snowflake>> = Optional.Missing(), presences: Optional<List<DiscordPresenceUpdate>> = Optional.Missing(), nonce: Optional<String> = Optional.Missing())","dev.kord.gateway.GuildMembersChunkData.GuildMembersChunkData"]},{"name":"fun GuildRoleCreate(role: DiscordGuildRole, sequence: Int?)","description":"dev.kord.gateway.GuildRoleCreate.GuildRoleCreate","location":"gateway/dev.kord.gateway/-guild-role-create/-guild-role-create.html","searchKeys":["GuildRoleCreate","fun GuildRoleCreate(role: DiscordGuildRole, sequence: Int?)","dev.kord.gateway.GuildRoleCreate.GuildRoleCreate"]},{"name":"fun GuildRoleDelete(role: DiscordDeletedGuildRole, sequence: Int?)","description":"dev.kord.gateway.GuildRoleDelete.GuildRoleDelete","location":"gateway/dev.kord.gateway/-guild-role-delete/-guild-role-delete.html","searchKeys":["GuildRoleDelete","fun GuildRoleDelete(role: DiscordDeletedGuildRole, sequence: Int?)","dev.kord.gateway.GuildRoleDelete.GuildRoleDelete"]},{"name":"fun GuildRoleUpdate(role: DiscordGuildRole, sequence: Int?)","description":"dev.kord.gateway.GuildRoleUpdate.GuildRoleUpdate","location":"gateway/dev.kord.gateway/-guild-role-update/-guild-role-update.html","searchKeys":["GuildRoleUpdate","fun GuildRoleUpdate(role: DiscordGuildRole, sequence: Int?)","dev.kord.gateway.GuildRoleUpdate.GuildRoleUpdate"]},{"name":"fun GuildScheduledEventCreate(event: DiscordGuildScheduledEvent, sequence: Int?)","description":"dev.kord.gateway.GuildScheduledEventCreate.GuildScheduledEventCreate","location":"gateway/dev.kord.gateway/-guild-scheduled-event-create/-guild-scheduled-event-create.html","searchKeys":["GuildScheduledEventCreate","fun GuildScheduledEventCreate(event: DiscordGuildScheduledEvent, sequence: Int?)","dev.kord.gateway.GuildScheduledEventCreate.GuildScheduledEventCreate"]},{"name":"fun GuildScheduledEventDelete(event: DiscordGuildScheduledEvent, sequence: Int?)","description":"dev.kord.gateway.GuildScheduledEventDelete.GuildScheduledEventDelete","location":"gateway/dev.kord.gateway/-guild-scheduled-event-delete/-guild-scheduled-event-delete.html","searchKeys":["GuildScheduledEventDelete","fun GuildScheduledEventDelete(event: DiscordGuildScheduledEvent, sequence: Int?)","dev.kord.gateway.GuildScheduledEventDelete.GuildScheduledEventDelete"]},{"name":"fun GuildScheduledEventUpdate(event: DiscordGuildScheduledEvent, sequence: Int?)","description":"dev.kord.gateway.GuildScheduledEventUpdate.GuildScheduledEventUpdate","location":"gateway/dev.kord.gateway/-guild-scheduled-event-update/-guild-scheduled-event-update.html","searchKeys":["GuildScheduledEventUpdate","fun GuildScheduledEventUpdate(event: DiscordGuildScheduledEvent, sequence: Int?)","dev.kord.gateway.GuildScheduledEventUpdate.GuildScheduledEventUpdate"]},{"name":"fun GuildScheduledEventUserAdd(data: GuildScheduledEventUserMetadata, sequence: Int?)","description":"dev.kord.gateway.GuildScheduledEventUserAdd.GuildScheduledEventUserAdd","location":"gateway/dev.kord.gateway/-guild-scheduled-event-user-add/-guild-scheduled-event-user-add.html","searchKeys":["GuildScheduledEventUserAdd","fun GuildScheduledEventUserAdd(data: GuildScheduledEventUserMetadata, sequence: Int?)","dev.kord.gateway.GuildScheduledEventUserAdd.GuildScheduledEventUserAdd"]},{"name":"fun GuildScheduledEventUserMetadata(guildScheduledEventId: Snowflake, userId: Snowflake, guildId: Snowflake)","description":"dev.kord.gateway.GuildScheduledEventUserMetadata.GuildScheduledEventUserMetadata","location":"gateway/dev.kord.gateway/-guild-scheduled-event-user-metadata/-guild-scheduled-event-user-metadata.html","searchKeys":["GuildScheduledEventUserMetadata","fun GuildScheduledEventUserMetadata(guildScheduledEventId: Snowflake, userId: Snowflake, guildId: Snowflake)","dev.kord.gateway.GuildScheduledEventUserMetadata.GuildScheduledEventUserMetadata"]},{"name":"fun GuildScheduledEventUserRemove(data: GuildScheduledEventUserMetadata, sequence: Int?)","description":"dev.kord.gateway.GuildScheduledEventUserRemove.GuildScheduledEventUserRemove","location":"gateway/dev.kord.gateway/-guild-scheduled-event-user-remove/-guild-scheduled-event-user-remove.html","searchKeys":["GuildScheduledEventUserRemove","fun GuildScheduledEventUserRemove(data: GuildScheduledEventUserMetadata, sequence: Int?)","dev.kord.gateway.GuildScheduledEventUserRemove.GuildScheduledEventUserRemove"]},{"name":"fun GuildUpdate(guild: DiscordGuild, sequence: Int?)","description":"dev.kord.gateway.GuildUpdate.GuildUpdate","location":"gateway/dev.kord.gateway/-guild-update/-guild-update.html","searchKeys":["GuildUpdate","fun GuildUpdate(guild: DiscordGuild, sequence: Int?)","dev.kord.gateway.GuildUpdate.GuildUpdate"]},{"name":"fun Heartbeat(data: Long)","description":"dev.kord.gateway.Heartbeat.Heartbeat","location":"gateway/dev.kord.gateway/-heartbeat/-heartbeat.html","searchKeys":["Heartbeat","fun Heartbeat(data: Long)","dev.kord.gateway.Heartbeat.Heartbeat"]},{"name":"fun Hello(heartbeatInterval: Int)","description":"dev.kord.gateway.Hello.Hello","location":"gateway/dev.kord.gateway/-hello/-hello.html","searchKeys":["Hello","fun Hello(heartbeatInterval: Int)","dev.kord.gateway.Hello.Hello"]},{"name":"fun IdentifyProperties(os: String, browser: String, device: String)","description":"dev.kord.gateway.IdentifyProperties.IdentifyProperties","location":"gateway/dev.kord.gateway/-identify-properties/-identify-properties.html","searchKeys":["IdentifyProperties","fun IdentifyProperties(os: String, browser: String, device: String)","dev.kord.gateway.IdentifyProperties.IdentifyProperties"]},{"name":"fun IdentifyRateLimiter(maxConcurrency: Int, dispatcher: CoroutineDispatcher = Dispatchers.Default): IdentifyRateLimiter","description":"dev.kord.gateway.ratelimit.IdentifyRateLimiter","location":"gateway/dev.kord.gateway.ratelimit/-identify-rate-limiter.html","searchKeys":["IdentifyRateLimiter","fun IdentifyRateLimiter(maxConcurrency: Int, dispatcher: CoroutineDispatcher = Dispatchers.Default): IdentifyRateLimiter","dev.kord.gateway.ratelimit.IdentifyRateLimiter"]},{"name":"fun Intents(intents: Iterable<Intent>): Intents","description":"dev.kord.gateway.Intents","location":"gateway/dev.kord.gateway/-intents.html","searchKeys":["Intents","fun Intents(intents: Iterable<Intent>): Intents","dev.kord.gateway.Intents"]},{"name":"fun Intents(intents: Iterable<Intents>): Intents","description":"dev.kord.gateway.Intents","location":"gateway/dev.kord.gateway/-intents.html","searchKeys":["Intents","fun Intents(intents: Iterable<Intents>): Intents","dev.kord.gateway.Intents"]},{"name":"fun Intents(value: String): Intents","description":"dev.kord.gateway.Intents","location":"gateway/dev.kord.gateway/-intents.html","searchKeys":["Intents","fun Intents(value: String): Intents","dev.kord.gateway.Intents"]},{"name":"fun Intents(vararg intents: Intent): Intents","description":"dev.kord.gateway.Intents","location":"gateway/dev.kord.gateway/-intents.html","searchKeys":["Intents","fun Intents(vararg intents: Intent): Intents","dev.kord.gateway.Intents"]},{"name":"fun Intents(vararg intents: Intents): Intents","description":"dev.kord.gateway.Intents","location":"gateway/dev.kord.gateway/-intents.html","searchKeys":["Intents","fun Intents(vararg intents: Intents): Intents","dev.kord.gateway.Intents"]},{"name":"fun IntentsBuilder(code: DiscordBitSet = EmptyBitSet())","description":"dev.kord.gateway.Intents.IntentsBuilder.IntentsBuilder","location":"gateway/dev.kord.gateway/-intents/-intents-builder/-intents-builder.html","searchKeys":["IntentsBuilder","fun IntentsBuilder(code: DiscordBitSet = EmptyBitSet())","dev.kord.gateway.Intents.IntentsBuilder.IntentsBuilder"]},{"name":"fun InteractionCreate(interaction: DiscordInteraction, sequence: Int?)","description":"dev.kord.gateway.InteractionCreate.InteractionCreate","location":"gateway/dev.kord.gateway/-interaction-create/-interaction-create.html","searchKeys":["InteractionCreate","fun InteractionCreate(interaction: DiscordInteraction, sequence: Int?)","dev.kord.gateway.InteractionCreate.InteractionCreate"]},{"name":"fun InvalidSession(resumable: Boolean)","description":"dev.kord.gateway.InvalidSession.InvalidSession","location":"gateway/dev.kord.gateway/-invalid-session/-invalid-session.html","searchKeys":["InvalidSession","fun InvalidSession(resumable: Boolean)","dev.kord.gateway.InvalidSession.InvalidSession"]},{"name":"fun InviteCreate(invite: DiscordCreatedInvite, sequence: Int?)","description":"dev.kord.gateway.InviteCreate.InviteCreate","location":"gateway/dev.kord.gateway/-invite-create/-invite-create.html","searchKeys":["InviteCreate","fun InviteCreate(invite: DiscordCreatedInvite, sequence: Int?)","dev.kord.gateway.InviteCreate.InviteCreate"]},{"name":"fun InviteDelete(invite: DiscordDeletedInvite, sequence: Int?)","description":"dev.kord.gateway.InviteDelete.InviteDelete","location":"gateway/dev.kord.gateway/-invite-delete/-invite-delete.html","searchKeys":["InviteDelete","fun InviteDelete(invite: DiscordDeletedInvite, sequence: Int?)","dev.kord.gateway.InviteDelete.InviteDelete"]},{"name":"fun LinearRetry(firstBackoff: Duration, maxBackoff: Duration, maxTries: Int)","description":"dev.kord.gateway.retry.LinearRetry.LinearRetry","location":"gateway/dev.kord.gateway.retry/-linear-retry/-linear-retry.html","searchKeys":["LinearRetry","fun LinearRetry(firstBackoff: Duration, maxBackoff: Duration, maxTries: Int)","dev.kord.gateway.retry.LinearRetry.LinearRetry"]},{"name":"fun LoginBuilder()","description":"dev.kord.gateway.builder.LoginBuilder.LoginBuilder","location":"gateway/dev.kord.gateway.builder/-login-builder/-login-builder.html","searchKeys":["LoginBuilder","fun LoginBuilder()","dev.kord.gateway.builder.LoginBuilder.LoginBuilder"]},{"name":"fun MessageCreate(message: DiscordMessage, sequence: Int?)","description":"dev.kord.gateway.MessageCreate.MessageCreate","location":"gateway/dev.kord.gateway/-message-create/-message-create.html","searchKeys":["MessageCreate","fun MessageCreate(message: DiscordMessage, sequence: Int?)","dev.kord.gateway.MessageCreate.MessageCreate"]},{"name":"fun MessageDelete(message: DeletedMessage, sequence: Int?)","description":"dev.kord.gateway.MessageDelete.MessageDelete","location":"gateway/dev.kord.gateway/-message-delete/-message-delete.html","searchKeys":["MessageDelete","fun MessageDelete(message: DeletedMessage, sequence: Int?)","dev.kord.gateway.MessageDelete.MessageDelete"]},{"name":"fun MessageDeleteBulk(messageBulk: BulkDeleteData, sequence: Int?)","description":"dev.kord.gateway.MessageDeleteBulk.MessageDeleteBulk","location":"gateway/dev.kord.gateway/-message-delete-bulk/-message-delete-bulk.html","searchKeys":["MessageDeleteBulk","fun MessageDeleteBulk(messageBulk: BulkDeleteData, sequence: Int?)","dev.kord.gateway.MessageDeleteBulk.MessageDeleteBulk"]},{"name":"fun MessageReactionAdd(reaction: MessageReactionAddData, sequence: Int?)","description":"dev.kord.gateway.MessageReactionAdd.MessageReactionAdd","location":"gateway/dev.kord.gateway/-message-reaction-add/-message-reaction-add.html","searchKeys":["MessageReactionAdd","fun MessageReactionAdd(reaction: MessageReactionAddData, sequence: Int?)","dev.kord.gateway.MessageReactionAdd.MessageReactionAdd"]},{"name":"fun MessageReactionRemove(reaction: MessageReactionRemoveData, sequence: Int?)","description":"dev.kord.gateway.MessageReactionRemove.MessageReactionRemove","location":"gateway/dev.kord.gateway/-message-reaction-remove/-message-reaction-remove.html","searchKeys":["MessageReactionRemove","fun MessageReactionRemove(reaction: MessageReactionRemoveData, sequence: Int?)","dev.kord.gateway.MessageReactionRemove.MessageReactionRemove"]},{"name":"fun MessageReactionRemoveAll(reactions: AllRemovedMessageReactions, sequence: Int?)","description":"dev.kord.gateway.MessageReactionRemoveAll.MessageReactionRemoveAll","location":"gateway/dev.kord.gateway/-message-reaction-remove-all/-message-reaction-remove-all.html","searchKeys":["MessageReactionRemoveAll","fun MessageReactionRemoveAll(reactions: AllRemovedMessageReactions, sequence: Int?)","dev.kord.gateway.MessageReactionRemoveAll.MessageReactionRemoveAll"]},{"name":"fun MessageReactionRemoveEmoji(reaction: DiscordRemovedEmoji, sequence: Int?)","description":"dev.kord.gateway.MessageReactionRemoveEmoji.MessageReactionRemoveEmoji","location":"gateway/dev.kord.gateway/-message-reaction-remove-emoji/-message-reaction-remove-emoji.html","searchKeys":["MessageReactionRemoveEmoji","fun MessageReactionRemoveEmoji(reaction: DiscordRemovedEmoji, sequence: Int?)","dev.kord.gateway.MessageReactionRemoveEmoji.MessageReactionRemoveEmoji"]},{"name":"fun MessageUpdate(message: DiscordPartialMessage, sequence: Int?)","description":"dev.kord.gateway.MessageUpdate.MessageUpdate","location":"gateway/dev.kord.gateway/-message-update/-message-update.html","searchKeys":["MessageUpdate","fun MessageUpdate(message: DiscordPartialMessage, sequence: Int?)","dev.kord.gateway.MessageUpdate.MessageUpdate"]},{"name":"fun PresenceBuilder()","description":"dev.kord.gateway.builder.PresenceBuilder.PresenceBuilder","location":"gateway/dev.kord.gateway.builder/-presence-builder/-presence-builder.html","searchKeys":["PresenceBuilder","fun PresenceBuilder()","dev.kord.gateway.builder.PresenceBuilder.PresenceBuilder"]},{"name":"fun PresenceUpdate(presence: DiscordPresenceUpdate, sequence: Int?)","description":"dev.kord.gateway.PresenceUpdate.PresenceUpdate","location":"gateway/dev.kord.gateway/-presence-update/-presence-update.html","searchKeys":["PresenceUpdate","fun PresenceUpdate(presence: DiscordPresenceUpdate, sequence: Int?)","dev.kord.gateway.PresenceUpdate.PresenceUpdate"]},{"name":"fun Ready(data: ReadyData, sequence: Int?)","description":"dev.kord.gateway.Ready.Ready","location":"gateway/dev.kord.gateway/-ready/-ready.html","searchKeys":["Ready","fun Ready(data: ReadyData, sequence: Int?)","dev.kord.gateway.Ready.Ready"]},{"name":"fun ReadyData(version: Int, user: DiscordUser, privateChannels: List<DiscordChannel>, guilds: List<DiscordUnavailableGuild>, sessionId: String, resumeGatewayUrl: String, geoOrderedRtcRegions: Optional<JsonElement?> = Optional.Missing(), guildHashes: Optional<JsonElement?> = Optional.Missing(), application: Optional<JsonElement?> = Optional.Missing(), traces: List<String>, shard: Optional<DiscordShard> = Optional.Missing())","description":"dev.kord.gateway.ReadyData.ReadyData","location":"gateway/dev.kord.gateway/-ready-data/-ready-data.html","searchKeys":["ReadyData","fun ReadyData(version: Int, user: DiscordUser, privateChannels: List<DiscordChannel>, guilds: List<DiscordUnavailableGuild>, sessionId: String, resumeGatewayUrl: String, geoOrderedRtcRegions: Optional<JsonElement?> = Optional.Missing(), guildHashes: Optional<JsonElement?> = Optional.Missing(), application: Optional<JsonElement?> = Optional.Missing(), traces: List<String>, shard: Optional<DiscordShard> = Optional.Missing())","dev.kord.gateway.ReadyData.ReadyData"]},{"name":"fun RequestGuildMembers(guildId: Snowflake, query: Optional<String> = Optional.Missing(), limit: OptionalInt = OptionalInt.Missing, presences: OptionalBoolean = OptionalBoolean.Missing, userIds: Optional<Set<Snowflake>> = Optional.Missing(), nonce: Optional<String> = Optional.Missing())","description":"dev.kord.gateway.RequestGuildMembers.RequestGuildMembers","location":"gateway/dev.kord.gateway/-request-guild-members/-request-guild-members.html","searchKeys":["RequestGuildMembers","fun RequestGuildMembers(guildId: Snowflake, query: Optional<String> = Optional.Missing(), limit: OptionalInt = OptionalInt.Missing, presences: OptionalBoolean = OptionalBoolean.Missing, userIds: Optional<Set<Snowflake>> = Optional.Missing(), nonce: Optional<String> = Optional.Missing())","dev.kord.gateway.RequestGuildMembers.RequestGuildMembers"]},{"name":"fun RequestGuildMembersBuilder(guildId: Snowflake)","description":"dev.kord.gateway.builder.RequestGuildMembersBuilder.RequestGuildMembersBuilder","location":"gateway/dev.kord.gateway.builder/-request-guild-members-builder/-request-guild-members-builder.html","searchKeys":["RequestGuildMembersBuilder","fun RequestGuildMembersBuilder(guildId: Snowflake)","dev.kord.gateway.builder.RequestGuildMembersBuilder.RequestGuildMembersBuilder"]},{"name":"fun Resumed(sequence: Int?)","description":"dev.kord.gateway.Resumed.Resumed","location":"gateway/dev.kord.gateway/-resumed/-resumed.html","searchKeys":["Resumed","fun Resumed(sequence: Int?)","dev.kord.gateway.Resumed.Resumed"]},{"name":"fun Shards(totalShards: Int, indices: Iterable<Int> = 0 until totalShards)","description":"dev.kord.gateway.builder.Shards.Shards","location":"gateway/dev.kord.gateway.builder/-shards/-shards.html","searchKeys":["Shards","fun Shards(totalShards: Int, indices: Iterable<Int> = 0 until totalShards)","dev.kord.gateway.builder.Shards.Shards"]},{"name":"fun ThreadCreate(channel: DiscordChannel, sequence: Int?)","description":"dev.kord.gateway.ThreadCreate.ThreadCreate","location":"gateway/dev.kord.gateway/-thread-create/-thread-create.html","searchKeys":["ThreadCreate","fun ThreadCreate(channel: DiscordChannel, sequence: Int?)","dev.kord.gateway.ThreadCreate.ThreadCreate"]},{"name":"fun ThreadDelete(channel: DiscordChannel, sequence: Int?)","description":"dev.kord.gateway.ThreadDelete.ThreadDelete","location":"gateway/dev.kord.gateway/-thread-delete/-thread-delete.html","searchKeys":["ThreadDelete","fun ThreadDelete(channel: DiscordChannel, sequence: Int?)","dev.kord.gateway.ThreadDelete.ThreadDelete"]},{"name":"fun ThreadListSync(sync: DiscordThreadListSync, sequence: Int?)","description":"dev.kord.gateway.ThreadListSync.ThreadListSync","location":"gateway/dev.kord.gateway/-thread-list-sync/-thread-list-sync.html","searchKeys":["ThreadListSync","fun ThreadListSync(sync: DiscordThreadListSync, sequence: Int?)","dev.kord.gateway.ThreadListSync.ThreadListSync"]},{"name":"fun ThreadMemberUpdate(member: DiscordThreadMember, sequence: Int?)","description":"dev.kord.gateway.ThreadMemberUpdate.ThreadMemberUpdate","location":"gateway/dev.kord.gateway/-thread-member-update/-thread-member-update.html","searchKeys":["ThreadMemberUpdate","fun ThreadMemberUpdate(member: DiscordThreadMember, sequence: Int?)","dev.kord.gateway.ThreadMemberUpdate.ThreadMemberUpdate"]},{"name":"fun ThreadMembersUpdate(members: DiscordThreadMembersUpdate, sequence: Int?)","description":"dev.kord.gateway.ThreadMembersUpdate.ThreadMembersUpdate","location":"gateway/dev.kord.gateway/-thread-members-update/-thread-members-update.html","searchKeys":["ThreadMembersUpdate","fun ThreadMembersUpdate(members: DiscordThreadMembersUpdate, sequence: Int?)","dev.kord.gateway.ThreadMembersUpdate.ThreadMembersUpdate"]},{"name":"fun ThreadUpdate(channel: DiscordChannel, sequence: Int?)","description":"dev.kord.gateway.ThreadUpdate.ThreadUpdate","location":"gateway/dev.kord.gateway/-thread-update/-thread-update.html","searchKeys":["ThreadUpdate","fun ThreadUpdate(channel: DiscordChannel, sequence: Int?)","dev.kord.gateway.ThreadUpdate.ThreadUpdate"]},{"name":"fun Ticker(dispatcher: CoroutineDispatcher = Dispatchers.Default)","description":"dev.kord.gateway.Ticker.Ticker","location":"gateway/dev.kord.gateway/-ticker/-ticker.html","searchKeys":["Ticker","fun Ticker(dispatcher: CoroutineDispatcher = Dispatchers.Default)","dev.kord.gateway.Ticker.Ticker"]},{"name":"fun TypingStart(data: DiscordTyping, sequence: Int?)","description":"dev.kord.gateway.TypingStart.TypingStart","location":"gateway/dev.kord.gateway/-typing-start/-typing-start.html","searchKeys":["TypingStart","fun TypingStart(data: DiscordTyping, sequence: Int?)","dev.kord.gateway.TypingStart.TypingStart"]},{"name":"fun UpdateStatus(since: Instant?, activities: List<DiscordBotActivity>, status: PresenceStatus, afk: Boolean)","description":"dev.kord.gateway.UpdateStatus.UpdateStatus","location":"gateway/dev.kord.gateway/-update-status/-update-status.html","searchKeys":["UpdateStatus","fun UpdateStatus(since: Instant?, activities: List<DiscordBotActivity>, status: PresenceStatus, afk: Boolean)","dev.kord.gateway.UpdateStatus.UpdateStatus"]},{"name":"fun UpdateVoiceStatus(guildId: Snowflake, channelId: Snowflake?, selfMute: Boolean, selfDeaf: Boolean)","description":"dev.kord.gateway.UpdateVoiceStatus.UpdateVoiceStatus","location":"gateway/dev.kord.gateway/-update-voice-status/-update-voice-status.html","searchKeys":["UpdateVoiceStatus","fun UpdateVoiceStatus(guildId: Snowflake, channelId: Snowflake?, selfMute: Boolean, selfDeaf: Boolean)","dev.kord.gateway.UpdateVoiceStatus.UpdateVoiceStatus"]},{"name":"fun UserUpdate(user: DiscordUser, sequence: Int?)","description":"dev.kord.gateway.UserUpdate.UserUpdate","location":"gateway/dev.kord.gateway/-user-update/-user-update.html","searchKeys":["UserUpdate","fun UserUpdate(user: DiscordUser, sequence: Int?)","dev.kord.gateway.UserUpdate.UserUpdate"]},{"name":"fun VoiceServerUpdate(voiceServerUpdateData: DiscordVoiceServerUpdateData, sequence: Int?)","description":"dev.kord.gateway.VoiceServerUpdate.VoiceServerUpdate","location":"gateway/dev.kord.gateway/-voice-server-update/-voice-server-update.html","searchKeys":["VoiceServerUpdate","fun VoiceServerUpdate(voiceServerUpdateData: DiscordVoiceServerUpdateData, sequence: Int?)","dev.kord.gateway.VoiceServerUpdate.VoiceServerUpdate"]},{"name":"fun VoiceStateUpdate(voiceState: DiscordVoiceState, sequence: Int?)","description":"dev.kord.gateway.VoiceStateUpdate.VoiceStateUpdate","location":"gateway/dev.kord.gateway/-voice-state-update/-voice-state-update.html","searchKeys":["VoiceStateUpdate","fun VoiceStateUpdate(voiceState: DiscordVoiceState, sequence: Int?)","dev.kord.gateway.VoiceStateUpdate.VoiceStateUpdate"]},{"name":"fun WebhooksUpdate(webhooksUpdateData: DiscordWebhooksUpdateData, sequence: Int?)","description":"dev.kord.gateway.WebhooksUpdate.WebhooksUpdate","location":"gateway/dev.kord.gateway/-webhooks-update/-webhooks-update.html","searchKeys":["WebhooksUpdate","fun WebhooksUpdate(webhooksUpdateData: DiscordWebhooksUpdateData, sequence: Int?)","dev.kord.gateway.WebhooksUpdate.WebhooksUpdate"]},{"name":"fun build(): DefaultGateway","description":"dev.kord.gateway.DefaultGatewayBuilder.build","location":"gateway/dev.kord.gateway/-default-gateway-builder/build.html","searchKeys":["build","fun build(): DefaultGateway","dev.kord.gateway.DefaultGatewayBuilder.build"]},{"name":"fun build(): GatewayConfiguration","description":"dev.kord.gateway.GatewayConfigurationBuilder.build","location":"gateway/dev.kord.gateway/-gateway-configuration-builder/build.html","searchKeys":["build","fun build(): GatewayConfiguration","dev.kord.gateway.GatewayConfigurationBuilder.build"]},{"name":"fun competing(name: String)","description":"dev.kord.gateway.builder.PresenceBuilder.competing","location":"gateway/dev.kord.gateway.builder/-presence-builder/competing.html","searchKeys":["competing","fun competing(name: String)","dev.kord.gateway.builder.PresenceBuilder.competing"]},{"name":"fun flags(): Intents","description":"dev.kord.gateway.Intents.IntentsBuilder.flags","location":"gateway/dev.kord.gateway/-intents/-intents-builder/flags.html","searchKeys":["flags","fun flags(): Intents","dev.kord.gateway.Intents.IntentsBuilder.flags"]},{"name":"fun listening(name: String)","description":"dev.kord.gateway.builder.PresenceBuilder.listening","location":"gateway/dev.kord.gateway.builder/-presence-builder/listening.html","searchKeys":["listening","fun listening(name: String)","dev.kord.gateway.builder.PresenceBuilder.listening"]},{"name":"fun new(): String","description":"dev.kord.gateway.RequestGuildMembers.Nonce.new","location":"gateway/dev.kord.gateway/-request-guild-members/-nonce/new.html","searchKeys":["new","fun new(): String","dev.kord.gateway.RequestGuildMembers.Nonce.new"]},{"name":"fun none(): Gateway","description":"dev.kord.gateway.Gateway.Companion.none","location":"gateway/dev.kord.gateway/-gateway/-companion/none.html","searchKeys":["none","fun none(): Gateway","dev.kord.gateway.Gateway.Companion.none"]},{"name":"fun playing(name: String)","description":"dev.kord.gateway.builder.PresenceBuilder.playing","location":"gateway/dev.kord.gateway.builder/-presence-builder/playing.html","searchKeys":["playing","fun playing(name: String)","dev.kord.gateway.builder.PresenceBuilder.playing"]},{"name":"fun requestAllMembers()","description":"dev.kord.gateway.builder.RequestGuildMembersBuilder.requestAllMembers","location":"gateway/dev.kord.gateway.builder/-request-guild-members-builder/request-all-members.html","searchKeys":["requestAllMembers","fun requestAllMembers()","dev.kord.gateway.builder.RequestGuildMembersBuilder.requestAllMembers"]},{"name":"fun streaming(name: String, url: String)","description":"dev.kord.gateway.builder.PresenceBuilder.streaming","location":"gateway/dev.kord.gateway.builder/-presence-builder/streaming.html","searchKeys":["streaming","fun streaming(name: String, url: String)","dev.kord.gateway.builder.PresenceBuilder.streaming"]},{"name":"fun toPresence(): DiscordPresence","description":"dev.kord.gateway.builder.PresenceBuilder.toPresence","location":"gateway/dev.kord.gateway.builder/-presence-builder/to-presence.html","searchKeys":["toPresence","fun toPresence(): DiscordPresence","dev.kord.gateway.builder.PresenceBuilder.toPresence"]},{"name":"fun toRequest(): RequestGuildMembers","description":"dev.kord.gateway.builder.RequestGuildMembersBuilder.toRequest","location":"gateway/dev.kord.gateway.builder/-request-guild-members-builder/to-request.html","searchKeys":["toRequest","fun toRequest(): RequestGuildMembers","dev.kord.gateway.builder.RequestGuildMembersBuilder.toRequest"]},{"name":"fun toUpdateStatus(): UpdateStatus","description":"dev.kord.gateway.builder.PresenceBuilder.toUpdateStatus","location":"gateway/dev.kord.gateway.builder/-presence-builder/to-update-status.html","searchKeys":["toUpdateStatus","fun toUpdateStatus(): UpdateStatus","dev.kord.gateway.builder.PresenceBuilder.toUpdateStatus"]},{"name":"fun valueOf(value: String): GatewayCloseCode","description":"dev.kord.gateway.GatewayCloseCode.valueOf","location":"gateway/dev.kord.gateway/-gateway-close-code/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): GatewayCloseCode","dev.kord.gateway.GatewayCloseCode.valueOf"]},{"name":"fun valueOf(value: String): OpCode","description":"dev.kord.gateway.OpCode.valueOf","location":"gateway/dev.kord.gateway/-op-code/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): OpCode","dev.kord.gateway.OpCode.valueOf"]},{"name":"fun values(): Array<GatewayCloseCode>","description":"dev.kord.gateway.GatewayCloseCode.values","location":"gateway/dev.kord.gateway/-gateway-close-code/values.html","searchKeys":["values","fun values(): Array<GatewayCloseCode>","dev.kord.gateway.GatewayCloseCode.values"]},{"name":"fun values(): Array<OpCode>","description":"dev.kord.gateway.OpCode.values","location":"gateway/dev.kord.gateway/-op-code/values.html","searchKeys":["values","fun values(): Array<OpCode>","dev.kord.gateway.OpCode.values"]},{"name":"fun watching(name: String)","description":"dev.kord.gateway.builder.PresenceBuilder.watching","location":"gateway/dev.kord.gateway.builder/-presence-builder/watching.html","searchKeys":["watching","fun watching(name: String)","dev.kord.gateway.builder.PresenceBuilder.watching"]},{"name":"inline fun <T : Event> Gateway.on(scope: CoroutineScope = this, crossinline consumer: suspend T.() -> Unit): Job","description":"dev.kord.gateway.on","location":"gateway/dev.kord.gateway/on.html","searchKeys":["on","inline fun <T : Event> Gateway.on(scope: CoroutineScope = this, crossinline consumer: suspend T.() -> Unit): Job","dev.kord.gateway.on"]},{"name":"inline fun DefaultGateway(builder: DefaultGatewayBuilder.() -> Unit = {}): DefaultGateway","description":"dev.kord.gateway.DefaultGateway","location":"gateway/dev.kord.gateway/-default-gateway.html","searchKeys":["DefaultGateway","inline fun DefaultGateway(builder: DefaultGatewayBuilder.() -> Unit = {}): DefaultGateway","dev.kord.gateway.DefaultGateway"]},{"name":"inline fun Intents(builder: Intents.IntentsBuilder.() -> Unit = {}): Intents","description":"dev.kord.gateway.Intents","location":"gateway/dev.kord.gateway/-intents.html","searchKeys":["Intents","inline fun Intents(builder: Intents.IntentsBuilder.() -> Unit = {}): Intents","dev.kord.gateway.Intents"]},{"name":"inline fun copy(block: Intents.IntentsBuilder.() -> Unit): Intents","description":"dev.kord.gateway.Intents.copy","location":"gateway/dev.kord.gateway/-intents/copy.html","searchKeys":["copy","inline fun copy(block: Intents.IntentsBuilder.() -> Unit): Intents","dev.kord.gateway.Intents.copy"]},{"name":"inline fun intents(builder: Intents.IntentsBuilder.() -> Unit)","description":"dev.kord.gateway.builder.LoginBuilder.intents","location":"gateway/dev.kord.gateway.builder/-login-builder/intents.html","searchKeys":["intents","inline fun intents(builder: Intents.IntentsBuilder.() -> Unit)","dev.kord.gateway.builder.LoginBuilder.intents"]},{"name":"inline fun presence(builder: PresenceBuilder.() -> Unit)","description":"dev.kord.gateway.GatewayConfigurationBuilder.presence","location":"gateway/dev.kord.gateway/-gateway-configuration-builder/presence.html","searchKeys":["presence","inline fun presence(builder: PresenceBuilder.() -> Unit)","dev.kord.gateway.GatewayConfigurationBuilder.presence"]},{"name":"inline fun presence(builder: PresenceBuilder.() -> Unit)","description":"dev.kord.gateway.builder.LoginBuilder.presence","location":"gateway/dev.kord.gateway.builder/-login-builder/presence.html","searchKeys":["presence","inline fun presence(builder: PresenceBuilder.() -> Unit)","dev.kord.gateway.builder.LoginBuilder.presence"]},{"name":"inline suspend fun Gateway.editPresence(builder: PresenceBuilder.() -> Unit)","description":"dev.kord.gateway.editPresence","location":"gateway/dev.kord.gateway/edit-presence.html","searchKeys":["editPresence","inline suspend fun Gateway.editPresence(builder: PresenceBuilder.() -> Unit)","dev.kord.gateway.editPresence"]},{"name":"inline suspend fun Gateway.start(token: String, config: GatewayConfigurationBuilder.() -> Unit = {})","description":"dev.kord.gateway.start","location":"gateway/dev.kord.gateway/start.html","searchKeys":["start","inline suspend fun Gateway.start(token: String, config: GatewayConfigurationBuilder.() -> Unit = {})","dev.kord.gateway.start"]},{"name":"interface Gateway : CoroutineScope","description":"dev.kord.gateway.Gateway","location":"gateway/dev.kord.gateway/-gateway/index.html","searchKeys":["Gateway","interface Gateway : CoroutineScope","dev.kord.gateway.Gateway"]},{"name":"interface IdentifyRateLimiter","description":"dev.kord.gateway.ratelimit.IdentifyRateLimiter","location":"gateway/dev.kord.gateway.ratelimit/-identify-rate-limiter/index.html","searchKeys":["IdentifyRateLimiter","interface IdentifyRateLimiter","dev.kord.gateway.ratelimit.IdentifyRateLimiter"]},{"name":"interface Retry","description":"dev.kord.gateway.retry.Retry","location":"gateway/dev.kord.gateway.retry/-retry/index.html","searchKeys":["Retry","interface Retry","dev.kord.gateway.retry.Retry"]},{"name":"object AutoModerationConfiguration : Intent","description":"dev.kord.gateway.Intent.AutoModerationConfiguration","location":"gateway/dev.kord.gateway/-intent/-auto-moderation-configuration/index.html","searchKeys":["AutoModerationConfiguration","object AutoModerationConfiguration : Intent","dev.kord.gateway.Intent.AutoModerationConfiguration"]},{"name":"object AutoModerationExecution : Intent","description":"dev.kord.gateway.Intent.AutoModerationExecution","location":"gateway/dev.kord.gateway/-intent/-auto-moderation-execution/index.html","searchKeys":["AutoModerationExecution","object AutoModerationExecution : Intent","dev.kord.gateway.Intent.AutoModerationExecution"]},{"name":"object Companion","description":"dev.kord.gateway.DefaultGateway.Companion","location":"gateway/dev.kord.gateway/-default-gateway/-companion/index.html","searchKeys":["Companion","object Companion","dev.kord.gateway.DefaultGateway.Companion"]},{"name":"object Companion","description":"dev.kord.gateway.Gateway.Companion","location":"gateway/dev.kord.gateway/-gateway/-companion/index.html","searchKeys":["Companion","object Companion","dev.kord.gateway.Gateway.Companion"]},{"name":"object Companion","description":"dev.kord.gateway.Intent.Companion","location":"gateway/dev.kord.gateway/-intent/-companion/index.html","searchKeys":["Companion","object Companion","dev.kord.gateway.Intent.Companion"]},{"name":"object Companion","description":"dev.kord.gateway.Intents.Companion","location":"gateway/dev.kord.gateway/-intents/-companion/index.html","searchKeys":["Companion","object Companion","dev.kord.gateway.Intents.Companion"]},{"name":"object Companion : KSerializer<Heartbeat> ","description":"dev.kord.gateway.Heartbeat.Companion","location":"gateway/dev.kord.gateway/-heartbeat/-companion/index.html","searchKeys":["Companion","object Companion : KSerializer<Heartbeat> ","dev.kord.gateway.Heartbeat.Companion"]},{"name":"object DeserializationStrategy : DeserializationStrategy<Event?> ","description":"dev.kord.gateway.Event.DeserializationStrategy","location":"gateway/dev.kord.gateway/-event/-deserialization-strategy/index.html","searchKeys":["DeserializationStrategy","object DeserializationStrategy : DeserializationStrategy<Event?> ","dev.kord.gateway.Event.DeserializationStrategy"]},{"name":"object Detach : Close","description":"dev.kord.gateway.Close.Detach","location":"gateway/dev.kord.gateway/-close/-detach/index.html","searchKeys":["Detach","object Detach : Close","dev.kord.gateway.Close.Detach"]},{"name":"object DirectMessageTyping : Intent","description":"dev.kord.gateway.Intent.DirectMessageTyping","location":"gateway/dev.kord.gateway/-intent/-direct-message-typing/index.html","searchKeys":["DirectMessageTyping","object DirectMessageTyping : Intent","dev.kord.gateway.Intent.DirectMessageTyping"]},{"name":"object DirectMessages : Intent","description":"dev.kord.gateway.Intent.DirectMessages","location":"gateway/dev.kord.gateway/-intent/-direct-messages/index.html","searchKeys":["DirectMessages","object DirectMessages : Intent","dev.kord.gateway.Intent.DirectMessages"]},{"name":"object DirectMessagesReactions : Intent","description":"dev.kord.gateway.Intent.DirectMessagesReactions","location":"gateway/dev.kord.gateway/-intent/-direct-messages-reactions/index.html","searchKeys":["DirectMessagesReactions","object DirectMessagesReactions : Intent","dev.kord.gateway.Intent.DirectMessagesReactions"]},{"name":"object GuildBans : Intent","description":"dev.kord.gateway.Intent.GuildBans","location":"gateway/dev.kord.gateway/-intent/-guild-bans/index.html","searchKeys":["GuildBans","object GuildBans : Intent","dev.kord.gateway.Intent.GuildBans"]},{"name":"object GuildEmojis : Intent","description":"dev.kord.gateway.Intent.GuildEmojis","location":"gateway/dev.kord.gateway/-intent/-guild-emojis/index.html","searchKeys":["GuildEmojis","object GuildEmojis : Intent","dev.kord.gateway.Intent.GuildEmojis"]},{"name":"object GuildIntegrations : Intent","description":"dev.kord.gateway.Intent.GuildIntegrations","location":"gateway/dev.kord.gateway/-intent/-guild-integrations/index.html","searchKeys":["GuildIntegrations","object GuildIntegrations : Intent","dev.kord.gateway.Intent.GuildIntegrations"]},{"name":"object GuildInvites : Intent","description":"dev.kord.gateway.Intent.GuildInvites","location":"gateway/dev.kord.gateway/-intent/-guild-invites/index.html","searchKeys":["GuildInvites","object GuildInvites : Intent","dev.kord.gateway.Intent.GuildInvites"]},{"name":"object GuildMembers : Intent","description":"dev.kord.gateway.Intent.GuildMembers","location":"gateway/dev.kord.gateway/-intent/-guild-members/index.html","searchKeys":["GuildMembers","object GuildMembers : Intent","dev.kord.gateway.Intent.GuildMembers"]},{"name":"object GuildMessageReactions : Intent","description":"dev.kord.gateway.Intent.GuildMessageReactions","location":"gateway/dev.kord.gateway/-intent/-guild-message-reactions/index.html","searchKeys":["GuildMessageReactions","object GuildMessageReactions : Intent","dev.kord.gateway.Intent.GuildMessageReactions"]},{"name":"object GuildMessageTyping : Intent","description":"dev.kord.gateway.Intent.GuildMessageTyping","location":"gateway/dev.kord.gateway/-intent/-guild-message-typing/index.html","searchKeys":["GuildMessageTyping","object GuildMessageTyping : Intent","dev.kord.gateway.Intent.GuildMessageTyping"]},{"name":"object GuildMessages : Intent","description":"dev.kord.gateway.Intent.GuildMessages","location":"gateway/dev.kord.gateway/-intent/-guild-messages/index.html","searchKeys":["GuildMessages","object GuildMessages : Intent","dev.kord.gateway.Intent.GuildMessages"]},{"name":"object GuildPresences : Intent","description":"dev.kord.gateway.Intent.GuildPresences","location":"gateway/dev.kord.gateway/-intent/-guild-presences/index.html","searchKeys":["GuildPresences","object GuildPresences : Intent","dev.kord.gateway.Intent.GuildPresences"]},{"name":"object GuildScheduledEvents : Intent","description":"dev.kord.gateway.Intent.GuildScheduledEvents","location":"gateway/dev.kord.gateway/-intent/-guild-scheduled-events/index.html","searchKeys":["GuildScheduledEvents","object GuildScheduledEvents : Intent","dev.kord.gateway.Intent.GuildScheduledEvents"]},{"name":"object GuildVoiceStates : Intent","description":"dev.kord.gateway.Intent.GuildVoiceStates","location":"gateway/dev.kord.gateway/-intent/-guild-voice-states/index.html","searchKeys":["GuildVoiceStates","object GuildVoiceStates : Intent","dev.kord.gateway.Intent.GuildVoiceStates"]},{"name":"object GuildWebhooks : Intent","description":"dev.kord.gateway.Intent.GuildWebhooks","location":"gateway/dev.kord.gateway/-intent/-guild-webhooks/index.html","searchKeys":["GuildWebhooks","object GuildWebhooks : Intent","dev.kord.gateway.Intent.GuildWebhooks"]},{"name":"object Guilds : Intent","description":"dev.kord.gateway.Intent.Guilds","location":"gateway/dev.kord.gateway/-intent/-guilds/index.html","searchKeys":["Guilds","object Guilds : Intent","dev.kord.gateway.Intent.Guilds"]},{"name":"object HeartbeatACK : Event","description":"dev.kord.gateway.HeartbeatACK","location":"gateway/dev.kord.gateway/-heartbeat-a-c-k/index.html","searchKeys":["HeartbeatACK","object HeartbeatACK : Event","dev.kord.gateway.HeartbeatACK"]},{"name":"object IntentsSerializer : KSerializer<Intents> ","description":"dev.kord.gateway.IntentsSerializer","location":"gateway/dev.kord.gateway/-intents-serializer/index.html","searchKeys":["IntentsSerializer","object IntentsSerializer : KSerializer<Intents> ","dev.kord.gateway.IntentsSerializer"]},{"name":"object MessageContent : Intent","description":"dev.kord.gateway.Intent.MessageContent","location":"gateway/dev.kord.gateway/-intent/-message-content/index.html","searchKeys":["MessageContent","object MessageContent : Intent","dev.kord.gateway.Intent.MessageContent"]},{"name":"object Nonce","description":"dev.kord.gateway.RequestGuildMembers.Nonce","location":"gateway/dev.kord.gateway/-request-guild-members/-nonce/index.html","searchKeys":["Nonce","object Nonce","dev.kord.gateway.RequestGuildMembers.Nonce"]},{"name":"object OpCodeSerializer : KSerializer<OpCode> ","description":"dev.kord.gateway.OpCode.OpCodeSerializer","location":"gateway/dev.kord.gateway/-op-code/-op-code-serializer/index.html","searchKeys":["OpCodeSerializer","object OpCodeSerializer : KSerializer<OpCode> ","dev.kord.gateway.OpCode.OpCodeSerializer"]},{"name":"object Reconnect : Event","description":"dev.kord.gateway.Reconnect","location":"gateway/dev.kord.gateway/-reconnect/index.html","searchKeys":["Reconnect","object Reconnect : Event","dev.kord.gateway.Reconnect"]},{"name":"object Reconnecting : Close","description":"dev.kord.gateway.Close.Reconnecting","location":"gateway/dev.kord.gateway/-close/-reconnecting/index.html","searchKeys":["Reconnecting","object Reconnecting : Close","dev.kord.gateway.Close.Reconnecting"]},{"name":"object RetryLimitReached : Close","description":"dev.kord.gateway.Close.RetryLimitReached","location":"gateway/dev.kord.gateway/-close/-retry-limit-reached/index.html","searchKeys":["RetryLimitReached","object RetryLimitReached : Close","dev.kord.gateway.Close.RetryLimitReached"]},{"name":"object SerializationStrategy : SerializationStrategy<Command> ","description":"dev.kord.gateway.Command.SerializationStrategy","location":"gateway/dev.kord.gateway/-command/-serialization-strategy/index.html","searchKeys":["SerializationStrategy","object SerializationStrategy : SerializationStrategy<Command> ","dev.kord.gateway.Command.SerializationStrategy"]},{"name":"object SessionReset : Close","description":"dev.kord.gateway.Close.SessionReset","location":"gateway/dev.kord.gateway/-close/-session-reset/index.html","searchKeys":["SessionReset","object SessionReset : Close","dev.kord.gateway.Close.SessionReset"]},{"name":"object Timeout : Close","description":"dev.kord.gateway.Close.Timeout","location":"gateway/dev.kord.gateway/-close/-timeout/index.html","searchKeys":["Timeout","object Timeout : Close","dev.kord.gateway.Close.Timeout"]},{"name":"object UserClose : Close","description":"dev.kord.gateway.Close.UserClose","location":"gateway/dev.kord.gateway/-close/-user-close/index.html","searchKeys":["UserClose","object UserClose : Close","dev.kord.gateway.Close.UserClose"]},{"name":"object ZombieConnection : Close","description":"dev.kord.gateway.Close.ZombieConnection","location":"gateway/dev.kord.gateway/-close/-zombie-connection/index.html","searchKeys":["ZombieConnection","object ZombieConnection : Close","dev.kord.gateway.Close.ZombieConnection"]},{"name":"open override fun deserialize(decoder: Decoder): Event?","description":"dev.kord.gateway.Event.DeserializationStrategy.deserialize","location":"gateway/dev.kord.gateway/-event/-deserialization-strategy/deserialize.html","searchKeys":["deserialize","open override fun deserialize(decoder: Decoder): Event?","dev.kord.gateway.Event.DeserializationStrategy.deserialize"]},{"name":"open override fun deserialize(decoder: Decoder): Heartbeat","description":"dev.kord.gateway.Heartbeat.Companion.deserialize","location":"gateway/dev.kord.gateway/-heartbeat/-companion/deserialize.html","searchKeys":["deserialize","open override fun deserialize(decoder: Decoder): Heartbeat","dev.kord.gateway.Heartbeat.Companion.deserialize"]},{"name":"open override fun deserialize(decoder: Decoder): Intents","description":"dev.kord.gateway.IntentsSerializer.deserialize","location":"gateway/dev.kord.gateway/-intents-serializer/deserialize.html","searchKeys":["deserialize","open override fun deserialize(decoder: Decoder): Intents","dev.kord.gateway.IntentsSerializer.deserialize"]},{"name":"open override fun deserialize(decoder: Decoder): OpCode","description":"dev.kord.gateway.OpCode.OpCodeSerializer.deserialize","location":"gateway/dev.kord.gateway/-op-code/-op-code-serializer/deserialize.html","searchKeys":["deserialize","open override fun deserialize(decoder: Decoder): OpCode","dev.kord.gateway.OpCode.OpCodeSerializer.deserialize"]},{"name":"open override fun reset()","description":"dev.kord.gateway.retry.LinearRetry.reset","location":"gateway/dev.kord.gateway.retry/-linear-retry/reset.html","searchKeys":["reset","open override fun reset()","dev.kord.gateway.retry.LinearRetry.reset"]},{"name":"open override fun serialize(encoder: Encoder, value: Command)","description":"dev.kord.gateway.Command.SerializationStrategy.serialize","location":"gateway/dev.kord.gateway/-command/-serialization-strategy/serialize.html","searchKeys":["serialize","open override fun serialize(encoder: Encoder, value: Command)","dev.kord.gateway.Command.SerializationStrategy.serialize"]},{"name":"open override fun serialize(encoder: Encoder, value: Heartbeat)","description":"dev.kord.gateway.Heartbeat.Companion.serialize","location":"gateway/dev.kord.gateway/-heartbeat/-companion/serialize.html","searchKeys":["serialize","open override fun serialize(encoder: Encoder, value: Heartbeat)","dev.kord.gateway.Heartbeat.Companion.serialize"]},{"name":"open override fun serialize(encoder: Encoder, value: Intents)","description":"dev.kord.gateway.IntentsSerializer.serialize","location":"gateway/dev.kord.gateway/-intents-serializer/serialize.html","searchKeys":["serialize","open override fun serialize(encoder: Encoder, value: Intents)","dev.kord.gateway.IntentsSerializer.serialize"]},{"name":"open override fun serialize(encoder: Encoder, value: OpCode)","description":"dev.kord.gateway.OpCode.OpCodeSerializer.serialize","location":"gateway/dev.kord.gateway/-op-code/-op-code-serializer/serialize.html","searchKeys":["serialize","open override fun serialize(encoder: Encoder, value: OpCode)","dev.kord.gateway.OpCode.OpCodeSerializer.serialize"]},{"name":"open override val coroutineContext: CoroutineContext","description":"dev.kord.gateway.DefaultGateway.coroutineContext","location":"gateway/dev.kord.gateway/-default-gateway/coroutine-context.html","searchKeys":["coroutineContext","open override val coroutineContext: CoroutineContext","dev.kord.gateway.DefaultGateway.coroutineContext"]},{"name":"open override val coroutineContext: CoroutineContext","description":"dev.kord.gateway.Ticker.coroutineContext","location":"gateway/dev.kord.gateway/-ticker/coroutine-context.html","searchKeys":["coroutineContext","open override val coroutineContext: CoroutineContext","dev.kord.gateway.Ticker.coroutineContext"]},{"name":"open override val descriptor: SerialDescriptor","description":"dev.kord.gateway.Command.SerializationStrategy.descriptor","location":"gateway/dev.kord.gateway/-command/-serialization-strategy/descriptor.html","searchKeys":["descriptor","open override val descriptor: SerialDescriptor","dev.kord.gateway.Command.SerializationStrategy.descriptor"]},{"name":"open override val descriptor: SerialDescriptor","description":"dev.kord.gateway.Event.DeserializationStrategy.descriptor","location":"gateway/dev.kord.gateway/-event/-deserialization-strategy/descriptor.html","searchKeys":["descriptor","open override val descriptor: SerialDescriptor","dev.kord.gateway.Event.DeserializationStrategy.descriptor"]},{"name":"open override val descriptor: SerialDescriptor","description":"dev.kord.gateway.Heartbeat.Companion.descriptor","location":"gateway/dev.kord.gateway/-heartbeat/-companion/descriptor.html","searchKeys":["descriptor","open override val descriptor: SerialDescriptor","dev.kord.gateway.Heartbeat.Companion.descriptor"]},{"name":"open override val descriptor: SerialDescriptor","description":"dev.kord.gateway.IntentsSerializer.descriptor","location":"gateway/dev.kord.gateway/-intents-serializer/descriptor.html","searchKeys":["descriptor","open override val descriptor: SerialDescriptor","dev.kord.gateway.IntentsSerializer.descriptor"]},{"name":"open override val descriptor: SerialDescriptor","description":"dev.kord.gateway.OpCode.OpCodeSerializer.descriptor","location":"gateway/dev.kord.gateway/-op-code/-op-code-serializer/descriptor.html","searchKeys":["descriptor","open override val descriptor: SerialDescriptor","dev.kord.gateway.OpCode.OpCodeSerializer.descriptor"]},{"name":"open override val events: SharedFlow<Event>","description":"dev.kord.gateway.DefaultGateway.events","location":"gateway/dev.kord.gateway/-default-gateway/events.html","searchKeys":["events","open override val events: SharedFlow<Event>","dev.kord.gateway.DefaultGateway.events"]},{"name":"open override val hasNext: Boolean","description":"dev.kord.gateway.retry.LinearRetry.hasNext","location":"gateway/dev.kord.gateway.retry/-linear-retry/has-next.html","searchKeys":["hasNext","open override val hasNext: Boolean","dev.kord.gateway.retry.LinearRetry.hasNext"]},{"name":"open override val ping: StateFlow<Duration?>","description":"dev.kord.gateway.DefaultGateway.ping","location":"gateway/dev.kord.gateway/-default-gateway/ping.html","searchKeys":["ping","open override val ping: StateFlow<Duration?>","dev.kord.gateway.DefaultGateway.ping"]},{"name":"open override val sequence: Int?","description":"dev.kord.gateway.ApplicationCommandCreate.sequence","location":"gateway/dev.kord.gateway/-application-command-create/sequence.html","searchKeys":["sequence","open override val sequence: Int?","dev.kord.gateway.ApplicationCommandCreate.sequence"]},{"name":"open override val sequence: Int?","description":"dev.kord.gateway.ApplicationCommandDelete.sequence","location":"gateway/dev.kord.gateway/-application-command-delete/sequence.html","searchKeys":["sequence","open override val sequence: Int?","dev.kord.gateway.ApplicationCommandDelete.sequence"]},{"name":"open override val sequence: Int?","description":"dev.kord.gateway.ApplicationCommandPermissionsUpdate.sequence","location":"gateway/dev.kord.gateway/-application-command-permissions-update/sequence.html","searchKeys":["sequence","open override val sequence: Int?","dev.kord.gateway.ApplicationCommandPermissionsUpdate.sequence"]},{"name":"open override val sequence: Int?","description":"dev.kord.gateway.ApplicationCommandUpdate.sequence","location":"gateway/dev.kord.gateway/-application-command-update/sequence.html","searchKeys":["sequence","open override val sequence: Int?","dev.kord.gateway.ApplicationCommandUpdate.sequence"]},{"name":"open override val sequence: Int?","description":"dev.kord.gateway.AutoModerationActionExecution.sequence","location":"gateway/dev.kord.gateway/-auto-moderation-action-execution/sequence.html","searchKeys":["sequence","open override val sequence: Int?","dev.kord.gateway.AutoModerationActionExecution.sequence"]},{"name":"open override val sequence: Int?","description":"dev.kord.gateway.AutoModerationRuleCreate.sequence","location":"gateway/dev.kord.gateway/-auto-moderation-rule-create/sequence.html","searchKeys":["sequence","open override val sequence: Int?","dev.kord.gateway.AutoModerationRuleCreate.sequence"]},{"name":"open override val sequence: Int?","description":"dev.kord.gateway.AutoModerationRuleDelete.sequence","location":"gateway/dev.kord.gateway/-auto-moderation-rule-delete/sequence.html","searchKeys":["sequence","open override val sequence: Int?","dev.kord.gateway.AutoModerationRuleDelete.sequence"]},{"name":"open override val sequence: Int?","description":"dev.kord.gateway.AutoModerationRuleUpdate.sequence","location":"gateway/dev.kord.gateway/-auto-moderation-rule-update/sequence.html","searchKeys":["sequence","open override val sequence: Int?","dev.kord.gateway.AutoModerationRuleUpdate.sequence"]},{"name":"open override val sequence: Int?","description":"dev.kord.gateway.ChannelCreate.sequence","location":"gateway/dev.kord.gateway/-channel-create/sequence.html","searchKeys":["sequence","open override val sequence: Int?","dev.kord.gateway.ChannelCreate.sequence"]},{"name":"open override val sequence: Int?","description":"dev.kord.gateway.ChannelDelete.sequence","location":"gateway/dev.kord.gateway/-channel-delete/sequence.html","searchKeys":["sequence","open override val sequence: Int?","dev.kord.gateway.ChannelDelete.sequence"]},{"name":"open override val sequence: Int?","description":"dev.kord.gateway.ChannelPinsUpdate.sequence","location":"gateway/dev.kord.gateway/-channel-pins-update/sequence.html","searchKeys":["sequence","open override val sequence: Int?","dev.kord.gateway.ChannelPinsUpdate.sequence"]},{"name":"open override val sequence: Int?","description":"dev.kord.gateway.ChannelUpdate.sequence","location":"gateway/dev.kord.gateway/-channel-update/sequence.html","searchKeys":["sequence","open override val sequence: Int?","dev.kord.gateway.ChannelUpdate.sequence"]},{"name":"open override val sequence: Int?","description":"dev.kord.gateway.GuildBanAdd.sequence","location":"gateway/dev.kord.gateway/-guild-ban-add/sequence.html","searchKeys":["sequence","open override val sequence: Int?","dev.kord.gateway.GuildBanAdd.sequence"]},{"name":"open override val sequence: Int?","description":"dev.kord.gateway.GuildBanRemove.sequence","location":"gateway/dev.kord.gateway/-guild-ban-remove/sequence.html","searchKeys":["sequence","open override val sequence: Int?","dev.kord.gateway.GuildBanRemove.sequence"]},{"name":"open override val sequence: Int?","description":"dev.kord.gateway.GuildCreate.sequence","location":"gateway/dev.kord.gateway/-guild-create/sequence.html","searchKeys":["sequence","open override val sequence: Int?","dev.kord.gateway.GuildCreate.sequence"]},{"name":"open override val sequence: Int?","description":"dev.kord.gateway.GuildDelete.sequence","location":"gateway/dev.kord.gateway/-guild-delete/sequence.html","searchKeys":["sequence","open override val sequence: Int?","dev.kord.gateway.GuildDelete.sequence"]},{"name":"open override val sequence: Int?","description":"dev.kord.gateway.GuildEmojisUpdate.sequence","location":"gateway/dev.kord.gateway/-guild-emojis-update/sequence.html","searchKeys":["sequence","open override val sequence: Int?","dev.kord.gateway.GuildEmojisUpdate.sequence"]},{"name":"open override val sequence: Int?","description":"dev.kord.gateway.GuildIntegrationsUpdate.sequence","location":"gateway/dev.kord.gateway/-guild-integrations-update/sequence.html","searchKeys":["sequence","open override val sequence: Int?","dev.kord.gateway.GuildIntegrationsUpdate.sequence"]},{"name":"open override val sequence: Int?","description":"dev.kord.gateway.GuildMemberAdd.sequence","location":"gateway/dev.kord.gateway/-guild-member-add/sequence.html","searchKeys":["sequence","open override val sequence: Int?","dev.kord.gateway.GuildMemberAdd.sequence"]},{"name":"open override val sequence: Int?","description":"dev.kord.gateway.GuildMemberRemove.sequence","location":"gateway/dev.kord.gateway/-guild-member-remove/sequence.html","searchKeys":["sequence","open override val sequence: Int?","dev.kord.gateway.GuildMemberRemove.sequence"]},{"name":"open override val sequence: Int?","description":"dev.kord.gateway.GuildMemberUpdate.sequence","location":"gateway/dev.kord.gateway/-guild-member-update/sequence.html","searchKeys":["sequence","open override val sequence: Int?","dev.kord.gateway.GuildMemberUpdate.sequence"]},{"name":"open override val sequence: Int?","description":"dev.kord.gateway.GuildMembersChunk.sequence","location":"gateway/dev.kord.gateway/-guild-members-chunk/sequence.html","searchKeys":["sequence","open override val sequence: Int?","dev.kord.gateway.GuildMembersChunk.sequence"]},{"name":"open override val sequence: Int?","description":"dev.kord.gateway.GuildRoleCreate.sequence","location":"gateway/dev.kord.gateway/-guild-role-create/sequence.html","searchKeys":["sequence","open override val sequence: Int?","dev.kord.gateway.GuildRoleCreate.sequence"]},{"name":"open override val sequence: Int?","description":"dev.kord.gateway.GuildRoleDelete.sequence","location":"gateway/dev.kord.gateway/-guild-role-delete/sequence.html","searchKeys":["sequence","open override val sequence: Int?","dev.kord.gateway.GuildRoleDelete.sequence"]},{"name":"open override val sequence: Int?","description":"dev.kord.gateway.GuildRoleUpdate.sequence","location":"gateway/dev.kord.gateway/-guild-role-update/sequence.html","searchKeys":["sequence","open override val sequence: Int?","dev.kord.gateway.GuildRoleUpdate.sequence"]},{"name":"open override val sequence: Int?","description":"dev.kord.gateway.GuildScheduledEventCreate.sequence","location":"gateway/dev.kord.gateway/-guild-scheduled-event-create/sequence.html","searchKeys":["sequence","open override val sequence: Int?","dev.kord.gateway.GuildScheduledEventCreate.sequence"]},{"name":"open override val sequence: Int?","description":"dev.kord.gateway.GuildScheduledEventDelete.sequence","location":"gateway/dev.kord.gateway/-guild-scheduled-event-delete/sequence.html","searchKeys":["sequence","open override val sequence: Int?","dev.kord.gateway.GuildScheduledEventDelete.sequence"]},{"name":"open override val sequence: Int?","description":"dev.kord.gateway.GuildScheduledEventUpdate.sequence","location":"gateway/dev.kord.gateway/-guild-scheduled-event-update/sequence.html","searchKeys":["sequence","open override val sequence: Int?","dev.kord.gateway.GuildScheduledEventUpdate.sequence"]},{"name":"open override val sequence: Int?","description":"dev.kord.gateway.GuildScheduledEventUserAdd.sequence","location":"gateway/dev.kord.gateway/-guild-scheduled-event-user-add/sequence.html","searchKeys":["sequence","open override val sequence: Int?","dev.kord.gateway.GuildScheduledEventUserAdd.sequence"]},{"name":"open override val sequence: Int?","description":"dev.kord.gateway.GuildScheduledEventUserRemove.sequence","location":"gateway/dev.kord.gateway/-guild-scheduled-event-user-remove/sequence.html","searchKeys":["sequence","open override val sequence: Int?","dev.kord.gateway.GuildScheduledEventUserRemove.sequence"]},{"name":"open override val sequence: Int?","description":"dev.kord.gateway.GuildUpdate.sequence","location":"gateway/dev.kord.gateway/-guild-update/sequence.html","searchKeys":["sequence","open override val sequence: Int?","dev.kord.gateway.GuildUpdate.sequence"]},{"name":"open override val sequence: Int?","description":"dev.kord.gateway.InteractionCreate.sequence","location":"gateway/dev.kord.gateway/-interaction-create/sequence.html","searchKeys":["sequence","open override val sequence: Int?","dev.kord.gateway.InteractionCreate.sequence"]},{"name":"open override val sequence: Int?","description":"dev.kord.gateway.InviteCreate.sequence","location":"gateway/dev.kord.gateway/-invite-create/sequence.html","searchKeys":["sequence","open override val sequence: Int?","dev.kord.gateway.InviteCreate.sequence"]},{"name":"open override val sequence: Int?","description":"dev.kord.gateway.InviteDelete.sequence","location":"gateway/dev.kord.gateway/-invite-delete/sequence.html","searchKeys":["sequence","open override val sequence: Int?","dev.kord.gateway.InviteDelete.sequence"]},{"name":"open override val sequence: Int?","description":"dev.kord.gateway.MessageCreate.sequence","location":"gateway/dev.kord.gateway/-message-create/sequence.html","searchKeys":["sequence","open override val sequence: Int?","dev.kord.gateway.MessageCreate.sequence"]},{"name":"open override val sequence: Int?","description":"dev.kord.gateway.MessageDelete.sequence","location":"gateway/dev.kord.gateway/-message-delete/sequence.html","searchKeys":["sequence","open override val sequence: Int?","dev.kord.gateway.MessageDelete.sequence"]},{"name":"open override val sequence: Int?","description":"dev.kord.gateway.MessageDeleteBulk.sequence","location":"gateway/dev.kord.gateway/-message-delete-bulk/sequence.html","searchKeys":["sequence","open override val sequence: Int?","dev.kord.gateway.MessageDeleteBulk.sequence"]},{"name":"open override val sequence: Int?","description":"dev.kord.gateway.MessageReactionAdd.sequence","location":"gateway/dev.kord.gateway/-message-reaction-add/sequence.html","searchKeys":["sequence","open override val sequence: Int?","dev.kord.gateway.MessageReactionAdd.sequence"]},{"name":"open override val sequence: Int?","description":"dev.kord.gateway.MessageReactionRemove.sequence","location":"gateway/dev.kord.gateway/-message-reaction-remove/sequence.html","searchKeys":["sequence","open override val sequence: Int?","dev.kord.gateway.MessageReactionRemove.sequence"]},{"name":"open override val sequence: Int?","description":"dev.kord.gateway.MessageReactionRemoveAll.sequence","location":"gateway/dev.kord.gateway/-message-reaction-remove-all/sequence.html","searchKeys":["sequence","open override val sequence: Int?","dev.kord.gateway.MessageReactionRemoveAll.sequence"]},{"name":"open override val sequence: Int?","description":"dev.kord.gateway.MessageReactionRemoveEmoji.sequence","location":"gateway/dev.kord.gateway/-message-reaction-remove-emoji/sequence.html","searchKeys":["sequence","open override val sequence: Int?","dev.kord.gateway.MessageReactionRemoveEmoji.sequence"]},{"name":"open override val sequence: Int?","description":"dev.kord.gateway.MessageUpdate.sequence","location":"gateway/dev.kord.gateway/-message-update/sequence.html","searchKeys":["sequence","open override val sequence: Int?","dev.kord.gateway.MessageUpdate.sequence"]},{"name":"open override val sequence: Int?","description":"dev.kord.gateway.PresenceUpdate.sequence","location":"gateway/dev.kord.gateway/-presence-update/sequence.html","searchKeys":["sequence","open override val sequence: Int?","dev.kord.gateway.PresenceUpdate.sequence"]},{"name":"open override val sequence: Int?","description":"dev.kord.gateway.Ready.sequence","location":"gateway/dev.kord.gateway/-ready/sequence.html","searchKeys":["sequence","open override val sequence: Int?","dev.kord.gateway.Ready.sequence"]},{"name":"open override val sequence: Int?","description":"dev.kord.gateway.Resumed.sequence","location":"gateway/dev.kord.gateway/-resumed/sequence.html","searchKeys":["sequence","open override val sequence: Int?","dev.kord.gateway.Resumed.sequence"]},{"name":"open override val sequence: Int?","description":"dev.kord.gateway.ThreadCreate.sequence","location":"gateway/dev.kord.gateway/-thread-create/sequence.html","searchKeys":["sequence","open override val sequence: Int?","dev.kord.gateway.ThreadCreate.sequence"]},{"name":"open override val sequence: Int?","description":"dev.kord.gateway.ThreadDelete.sequence","location":"gateway/dev.kord.gateway/-thread-delete/sequence.html","searchKeys":["sequence","open override val sequence: Int?","dev.kord.gateway.ThreadDelete.sequence"]},{"name":"open override val sequence: Int?","description":"dev.kord.gateway.ThreadListSync.sequence","location":"gateway/dev.kord.gateway/-thread-list-sync/sequence.html","searchKeys":["sequence","open override val sequence: Int?","dev.kord.gateway.ThreadListSync.sequence"]},{"name":"open override val sequence: Int?","description":"dev.kord.gateway.ThreadMemberUpdate.sequence","location":"gateway/dev.kord.gateway/-thread-member-update/sequence.html","searchKeys":["sequence","open override val sequence: Int?","dev.kord.gateway.ThreadMemberUpdate.sequence"]},{"name":"open override val sequence: Int?","description":"dev.kord.gateway.ThreadMembersUpdate.sequence","location":"gateway/dev.kord.gateway/-thread-members-update/sequence.html","searchKeys":["sequence","open override val sequence: Int?","dev.kord.gateway.ThreadMembersUpdate.sequence"]},{"name":"open override val sequence: Int?","description":"dev.kord.gateway.ThreadUpdate.sequence","location":"gateway/dev.kord.gateway/-thread-update/sequence.html","searchKeys":["sequence","open override val sequence: Int?","dev.kord.gateway.ThreadUpdate.sequence"]},{"name":"open override val sequence: Int?","description":"dev.kord.gateway.TypingStart.sequence","location":"gateway/dev.kord.gateway/-typing-start/sequence.html","searchKeys":["sequence","open override val sequence: Int?","dev.kord.gateway.TypingStart.sequence"]},{"name":"open override val sequence: Int?","description":"dev.kord.gateway.UserUpdate.sequence","location":"gateway/dev.kord.gateway/-user-update/sequence.html","searchKeys":["sequence","open override val sequence: Int?","dev.kord.gateway.UserUpdate.sequence"]},{"name":"open override val sequence: Int?","description":"dev.kord.gateway.VoiceServerUpdate.sequence","location":"gateway/dev.kord.gateway/-voice-server-update/sequence.html","searchKeys":["sequence","open override val sequence: Int?","dev.kord.gateway.VoiceServerUpdate.sequence"]},{"name":"open override val sequence: Int?","description":"dev.kord.gateway.VoiceStateUpdate.sequence","location":"gateway/dev.kord.gateway/-voice-state-update/sequence.html","searchKeys":["sequence","open override val sequence: Int?","dev.kord.gateway.VoiceStateUpdate.sequence"]},{"name":"open override val sequence: Int?","description":"dev.kord.gateway.WebhooksUpdate.sequence","location":"gateway/dev.kord.gateway/-webhooks-update/sequence.html","searchKeys":["sequence","open override val sequence: Int?","dev.kord.gateway.WebhooksUpdate.sequence"]},{"name":"open suspend override fun detach()","description":"dev.kord.gateway.DefaultGateway.detach","location":"gateway/dev.kord.gateway/-default-gateway/detach.html","searchKeys":["detach","open suspend override fun detach()","dev.kord.gateway.DefaultGateway.detach"]},{"name":"open suspend override fun retry()","description":"dev.kord.gateway.retry.LinearRetry.retry","location":"gateway/dev.kord.gateway.retry/-linear-retry/retry.html","searchKeys":["retry","open suspend override fun retry()","dev.kord.gateway.retry.LinearRetry.retry"]},{"name":"open suspend override fun send(command: Command)","description":"dev.kord.gateway.DefaultGateway.send","location":"gateway/dev.kord.gateway/-default-gateway/send.html","searchKeys":["send","open suspend override fun send(command: Command)","dev.kord.gateway.DefaultGateway.send"]},{"name":"open suspend override fun start(configuration: GatewayConfiguration)","description":"dev.kord.gateway.DefaultGateway.start","location":"gateway/dev.kord.gateway/-default-gateway/start.html","searchKeys":["start","open suspend override fun start(configuration: GatewayConfiguration)","dev.kord.gateway.DefaultGateway.start"]},{"name":"open suspend override fun stop()","description":"dev.kord.gateway.DefaultGateway.stop","location":"gateway/dev.kord.gateway/-default-gateway/stop.html","searchKeys":["stop","open suspend override fun stop()","dev.kord.gateway.DefaultGateway.stop"]},{"name":"operator fun Intent.unaryMinus()","description":"dev.kord.gateway.Intents.IntentsBuilder.unaryMinus","location":"gateway/dev.kord.gateway/-intents/-intents-builder/unary-minus.html","searchKeys":["unaryMinus","operator fun Intent.unaryMinus()","dev.kord.gateway.Intents.IntentsBuilder.unaryMinus"]},{"name":"operator fun Intent.unaryPlus()","description":"dev.kord.gateway.Intents.IntentsBuilder.unaryPlus","location":"gateway/dev.kord.gateway/-intents/-intents-builder/unary-plus.html","searchKeys":["unaryPlus","operator fun Intent.unaryPlus()","dev.kord.gateway.Intents.IntentsBuilder.unaryPlus"]},{"name":"operator fun Intents.unaryMinus()","description":"dev.kord.gateway.Intents.IntentsBuilder.unaryMinus","location":"gateway/dev.kord.gateway/-intents/-intents-builder/unary-minus.html","searchKeys":["unaryMinus","operator fun Intents.unaryMinus()","dev.kord.gateway.Intents.IntentsBuilder.unaryMinus"]},{"name":"operator fun Intents.unaryPlus()","description":"dev.kord.gateway.Intents.IntentsBuilder.unaryPlus","location":"gateway/dev.kord.gateway/-intents/-intents-builder/unary-plus.html","searchKeys":["unaryPlus","operator fun Intents.unaryPlus()","dev.kord.gateway.Intents.IntentsBuilder.unaryPlus"]},{"name":"operator fun contains(intent: Intent): Boolean","description":"dev.kord.gateway.Intents.contains","location":"gateway/dev.kord.gateway/-intents/contains.html","searchKeys":["contains","operator fun contains(intent: Intent): Boolean","dev.kord.gateway.Intents.contains"]},{"name":"operator fun contains(intent: Intents): Boolean","description":"dev.kord.gateway.Intents.contains","location":"gateway/dev.kord.gateway/-intents/contains.html","searchKeys":["contains","operator fun contains(intent: Intents): Boolean","dev.kord.gateway.Intents.contains"]},{"name":"operator fun minus(intent: Intent): Intents","description":"dev.kord.gateway.Intents.minus","location":"gateway/dev.kord.gateway/-intents/minus.html","searchKeys":["minus","operator fun minus(intent: Intent): Intents","dev.kord.gateway.Intents.minus"]},{"name":"operator fun minus(intent: Intents): Intents","description":"dev.kord.gateway.Intents.minus","location":"gateway/dev.kord.gateway/-intents/minus.html","searchKeys":["minus","operator fun minus(intent: Intents): Intents","dev.kord.gateway.Intents.minus"]},{"name":"operator fun plus(intent: Intent): Intents","description":"dev.kord.gateway.Intents.plus","location":"gateway/dev.kord.gateway/-intents/plus.html","searchKeys":["plus","operator fun plus(intent: Intent): Intents","dev.kord.gateway.Intents.plus"]},{"name":"operator fun plus(intent: Intents): Intents","description":"dev.kord.gateway.Intents.plus","location":"gateway/dev.kord.gateway/-intents/plus.html","searchKeys":["plus","operator fun plus(intent: Intents): Intents","dev.kord.gateway.Intents.plus"]},{"name":"sealed class Close : Event","description":"dev.kord.gateway.Close","location":"gateway/dev.kord.gateway/-close/index.html","searchKeys":["Close","sealed class Close : Event","dev.kord.gateway.Close"]},{"name":"sealed class Command","description":"dev.kord.gateway.Command","location":"gateway/dev.kord.gateway/-command/index.html","searchKeys":["Command","sealed class Command","dev.kord.gateway.Command"]},{"name":"sealed class DispatchEvent : Event","description":"dev.kord.gateway.DispatchEvent","location":"gateway/dev.kord.gateway/-dispatch-event/index.html","searchKeys":["DispatchEvent","sealed class DispatchEvent : Event","dev.kord.gateway.DispatchEvent"]},{"name":"sealed class Event","description":"dev.kord.gateway.Event","location":"gateway/dev.kord.gateway/-event/index.html","searchKeys":["Event","sealed class Event","dev.kord.gateway.Event"]},{"name":"sealed class Intent","description":"dev.kord.gateway.Intent","location":"gateway/dev.kord.gateway/-intent/index.html","searchKeys":["Intent","sealed class Intent","dev.kord.gateway.Intent"]},{"name":"suspend fun stop()","description":"dev.kord.gateway.Ticker.stop","location":"gateway/dev.kord.gateway/-ticker/stop.html","searchKeys":["stop","suspend fun stop()","dev.kord.gateway.Ticker.stop"]},{"name":"suspend fun tickAt(intervalMillis: Long, block: suspend () -> Unit)","description":"dev.kord.gateway.Ticker.tickAt","location":"gateway/dev.kord.gateway/-ticker/tick-at.html","searchKeys":["tickAt","suspend fun tickAt(intervalMillis: Long, block: suspend () -> Unit)","dev.kord.gateway.Ticker.tickAt"]},{"name":"val action: DiscordAutoModerationAction","description":"dev.kord.gateway.DiscordAutoModerationActionExecution.action","location":"gateway/dev.kord.gateway/-discord-auto-moderation-action-execution/action.html","searchKeys":["action","val action: DiscordAutoModerationAction","dev.kord.gateway.DiscordAutoModerationActionExecution.action"]},{"name":"val actionExecution: DiscordAutoModerationActionExecution","description":"dev.kord.gateway.AutoModerationActionExecution.actionExecution","location":"gateway/dev.kord.gateway/-auto-moderation-action-execution/action-execution.html","searchKeys":["actionExecution","val actionExecution: DiscordAutoModerationActionExecution","dev.kord.gateway.AutoModerationActionExecution.actionExecution"]},{"name":"val activities: List<DiscordBotActivity>","description":"dev.kord.gateway.UpdateStatus.activities","location":"gateway/dev.kord.gateway/-update-status/activities.html","searchKeys":["activities","val activities: List<DiscordBotActivity>","dev.kord.gateway.UpdateStatus.activities"]},{"name":"val addedMembers: Optional<List<DiscordThreadMember>>","description":"dev.kord.gateway.DiscordThreadMembersUpdate.addedMembers","location":"gateway/dev.kord.gateway/-discord-thread-members-update/added-members.html","searchKeys":["addedMembers","val addedMembers: Optional<List<DiscordThreadMember>>","dev.kord.gateway.DiscordThreadMembersUpdate.addedMembers"]},{"name":"val afk: Boolean","description":"dev.kord.gateway.DiscordPresence.afk","location":"gateway/dev.kord.gateway/-discord-presence/afk.html","searchKeys":["afk","val afk: Boolean","dev.kord.gateway.DiscordPresence.afk"]},{"name":"val afk: Boolean","description":"dev.kord.gateway.UpdateStatus.afk","location":"gateway/dev.kord.gateway/-update-status/afk.html","searchKeys":["afk","val afk: Boolean","dev.kord.gateway.UpdateStatus.afk"]},{"name":"val alertSystemMessageId: OptionalSnowflake","description":"dev.kord.gateway.DiscordAutoModerationActionExecution.alertSystemMessageId","location":"gateway/dev.kord.gateway/-discord-auto-moderation-action-execution/alert-system-message-id.html","searchKeys":["alertSystemMessageId","val alertSystemMessageId: OptionalSnowflake","dev.kord.gateway.DiscordAutoModerationActionExecution.alertSystemMessageId"]},{"name":"val all: Intents","description":"dev.kord.gateway.Intents.Companion.all","location":"gateway/dev.kord.gateway/-intents/-companion/all.html","searchKeys":["all","val all: Intents","dev.kord.gateway.Intents.Companion.all"]},{"name":"val application: DiscordApplicationCommand","description":"dev.kord.gateway.ApplicationCommandCreate.application","location":"gateway/dev.kord.gateway/-application-command-create/application.html","searchKeys":["application","val application: DiscordApplicationCommand","dev.kord.gateway.ApplicationCommandCreate.application"]},{"name":"val application: DiscordApplicationCommand","description":"dev.kord.gateway.ApplicationCommandDelete.application","location":"gateway/dev.kord.gateway/-application-command-delete/application.html","searchKeys":["application","val application: DiscordApplicationCommand","dev.kord.gateway.ApplicationCommandDelete.application"]},{"name":"val application: DiscordApplicationCommand","description":"dev.kord.gateway.ApplicationCommandUpdate.application","location":"gateway/dev.kord.gateway/-application-command-update/application.html","searchKeys":["application","val application: DiscordApplicationCommand","dev.kord.gateway.ApplicationCommandUpdate.application"]},{"name":"val application: Optional<JsonElement?>","description":"dev.kord.gateway.ReadyData.application","location":"gateway/dev.kord.gateway/-ready-data/application.html","searchKeys":["application","val application: Optional<JsonElement?>","dev.kord.gateway.ReadyData.application"]},{"name":"val ban: DiscordGuildBan","description":"dev.kord.gateway.GuildBanAdd.ban","location":"gateway/dev.kord.gateway/-guild-ban-add/ban.html","searchKeys":["ban","val ban: DiscordGuildBan","dev.kord.gateway.GuildBanAdd.ban"]},{"name":"val ban: DiscordGuildBan","description":"dev.kord.gateway.GuildBanRemove.ban","location":"gateway/dev.kord.gateway/-guild-ban-remove/ban.html","searchKeys":["ban","val ban: DiscordGuildBan","dev.kord.gateway.GuildBanRemove.ban"]},{"name":"val browser: String","description":"dev.kord.gateway.IdentifyProperties.browser","location":"gateway/dev.kord.gateway/-identify-properties/browser.html","searchKeys":["browser","val browser: String","dev.kord.gateway.IdentifyProperties.browser"]},{"name":"val channel: DiscordChannel","description":"dev.kord.gateway.ChannelCreate.channel","location":"gateway/dev.kord.gateway/-channel-create/channel.html","searchKeys":["channel","val channel: DiscordChannel","dev.kord.gateway.ChannelCreate.channel"]},{"name":"val channel: DiscordChannel","description":"dev.kord.gateway.ChannelDelete.channel","location":"gateway/dev.kord.gateway/-channel-delete/channel.html","searchKeys":["channel","val channel: DiscordChannel","dev.kord.gateway.ChannelDelete.channel"]},{"name":"val channel: DiscordChannel","description":"dev.kord.gateway.ChannelUpdate.channel","location":"gateway/dev.kord.gateway/-channel-update/channel.html","searchKeys":["channel","val channel: DiscordChannel","dev.kord.gateway.ChannelUpdate.channel"]},{"name":"val channel: DiscordChannel","description":"dev.kord.gateway.ThreadCreate.channel","location":"gateway/dev.kord.gateway/-thread-create/channel.html","searchKeys":["channel","val channel: DiscordChannel","dev.kord.gateway.ThreadCreate.channel"]},{"name":"val channel: DiscordChannel","description":"dev.kord.gateway.ThreadDelete.channel","location":"gateway/dev.kord.gateway/-thread-delete/channel.html","searchKeys":["channel","val channel: DiscordChannel","dev.kord.gateway.ThreadDelete.channel"]},{"name":"val channel: DiscordChannel","description":"dev.kord.gateway.ThreadUpdate.channel","location":"gateway/dev.kord.gateway/-thread-update/channel.html","searchKeys":["channel","val channel: DiscordChannel","dev.kord.gateway.ThreadUpdate.channel"]},{"name":"val channelId: OptionalSnowflake","description":"dev.kord.gateway.DiscordAutoModerationActionExecution.channelId","location":"gateway/dev.kord.gateway/-discord-auto-moderation-action-execution/channel-id.html","searchKeys":["channelId","val channelId: OptionalSnowflake","dev.kord.gateway.DiscordAutoModerationActionExecution.channelId"]},{"name":"val channelId: Snowflake","description":"dev.kord.gateway.DiscordCreatedInvite.channelId","location":"gateway/dev.kord.gateway/-discord-created-invite/channel-id.html","searchKeys":["channelId","val channelId: Snowflake","dev.kord.gateway.DiscordCreatedInvite.channelId"]},{"name":"val channelId: Snowflake","description":"dev.kord.gateway.DiscordDeletedInvite.channelId","location":"gateway/dev.kord.gateway/-discord-deleted-invite/channel-id.html","searchKeys":["channelId","val channelId: Snowflake","dev.kord.gateway.DiscordDeletedInvite.channelId"]},{"name":"val channelId: Snowflake","description":"dev.kord.gateway.DiscordRemovedEmoji.channelId","location":"gateway/dev.kord.gateway/-discord-removed-emoji/channel-id.html","searchKeys":["channelId","val channelId: Snowflake","dev.kord.gateway.DiscordRemovedEmoji.channelId"]},{"name":"val channelId: Snowflake?","description":"dev.kord.gateway.UpdateVoiceStatus.channelId","location":"gateway/dev.kord.gateway/-update-voice-status/channel-id.html","searchKeys":["channelId","val channelId: Snowflake?","dev.kord.gateway.UpdateVoiceStatus.channelId"]},{"name":"val channelIds: Optional<List<Snowflake>>","description":"dev.kord.gateway.DiscordThreadListSync.channelIds","location":"gateway/dev.kord.gateway/-discord-thread-list-sync/channel-ids.html","searchKeys":["channelIds","val channelIds: Optional<List<Snowflake>>","dev.kord.gateway.DiscordThreadListSync.channelIds"]},{"name":"val chunkCount: Int","description":"dev.kord.gateway.GuildMembersChunkData.chunkCount","location":"gateway/dev.kord.gateway/-guild-members-chunk-data/chunk-count.html","searchKeys":["chunkCount","val chunkCount: Int","dev.kord.gateway.GuildMembersChunkData.chunkCount"]},{"name":"val chunkIndex: Int","description":"dev.kord.gateway.GuildMembersChunkData.chunkIndex","location":"gateway/dev.kord.gateway/-guild-members-chunk-data/chunk-index.html","searchKeys":["chunkIndex","val chunkIndex: Int","dev.kord.gateway.GuildMembersChunkData.chunkIndex"]},{"name":"val client: HttpClient","description":"dev.kord.gateway.DefaultGatewayData.client","location":"gateway/dev.kord.gateway/-default-gateway-data/client.html","searchKeys":["client","val client: HttpClient","dev.kord.gateway.DefaultGatewayData.client"]},{"name":"val closeCode: GatewayCloseCode","description":"dev.kord.gateway.Close.DiscordClose.closeCode","location":"gateway/dev.kord.gateway/-close/-discord-close/close-code.html","searchKeys":["closeCode","val closeCode: GatewayCloseCode","dev.kord.gateway.Close.DiscordClose.closeCode"]},{"name":"val code: DiscordBitSet","description":"dev.kord.gateway.Intent.code","location":"gateway/dev.kord.gateway/-intent/code.html","searchKeys":["code","val code: DiscordBitSet","dev.kord.gateway.Intent.code"]},{"name":"val code: DiscordBitSet","description":"dev.kord.gateway.Intents.code","location":"gateway/dev.kord.gateway/-intents/code.html","searchKeys":["code","val code: DiscordBitSet","dev.kord.gateway.Intents.code"]},{"name":"val code: Int","description":"dev.kord.gateway.GatewayCloseCode.code","location":"gateway/dev.kord.gateway/-gateway-close-code/code.html","searchKeys":["code","val code: Int","dev.kord.gateway.GatewayCloseCode.code"]},{"name":"val code: Int","description":"dev.kord.gateway.OpCode.code","location":"gateway/dev.kord.gateway/-op-code/code.html","searchKeys":["code","val code: Int","dev.kord.gateway.OpCode.code"]},{"name":"val code: String","description":"dev.kord.gateway.DiscordCreatedInvite.code","location":"gateway/dev.kord.gateway/-discord-created-invite/code.html","searchKeys":["code","val code: String","dev.kord.gateway.DiscordCreatedInvite.code"]},{"name":"val code: String","description":"dev.kord.gateway.DiscordDeletedInvite.code","location":"gateway/dev.kord.gateway/-discord-deleted-invite/code.html","searchKeys":["code","val code: String","dev.kord.gateway.DiscordDeletedInvite.code"]},{"name":"val content: String","description":"dev.kord.gateway.DiscordAutoModerationActionExecution.content","location":"gateway/dev.kord.gateway/-discord-auto-moderation-action-execution/content.html","searchKeys":["content","val content: String","dev.kord.gateway.DiscordAutoModerationActionExecution.content"]},{"name":"val createdAt: Instant","description":"dev.kord.gateway.DiscordCreatedInvite.createdAt","location":"gateway/dev.kord.gateway/-discord-created-invite/created-at.html","searchKeys":["createdAt","val createdAt: Instant","dev.kord.gateway.DiscordCreatedInvite.createdAt"]},{"name":"val data: DiscordTyping","description":"dev.kord.gateway.TypingStart.data","location":"gateway/dev.kord.gateway/-typing-start/data.html","searchKeys":["data","val data: DiscordTyping","dev.kord.gateway.TypingStart.data"]},{"name":"val data: GuildMembersChunkData","description":"dev.kord.gateway.GuildMembersChunk.data","location":"gateway/dev.kord.gateway/-guild-members-chunk/data.html","searchKeys":["data","val data: GuildMembersChunkData","dev.kord.gateway.GuildMembersChunk.data"]},{"name":"val data: GuildScheduledEventUserMetadata","description":"dev.kord.gateway.GuildScheduledEventUserAdd.data","location":"gateway/dev.kord.gateway/-guild-scheduled-event-user-add/data.html","searchKeys":["data","val data: GuildScheduledEventUserMetadata","dev.kord.gateway.GuildScheduledEventUserAdd.data"]},{"name":"val data: GuildScheduledEventUserMetadata","description":"dev.kord.gateway.GuildScheduledEventUserRemove.data","location":"gateway/dev.kord.gateway/-guild-scheduled-event-user-remove/data.html","searchKeys":["data","val data: GuildScheduledEventUserMetadata","dev.kord.gateway.GuildScheduledEventUserRemove.data"]},{"name":"val data: Long","description":"dev.kord.gateway.Heartbeat.data","location":"gateway/dev.kord.gateway/-heartbeat/data.html","searchKeys":["data","val data: Long","dev.kord.gateway.Heartbeat.data"]},{"name":"val data: ReadyData","description":"dev.kord.gateway.Ready.data","location":"gateway/dev.kord.gateway/-ready/data.html","searchKeys":["data","val data: ReadyData","dev.kord.gateway.Ready.data"]},{"name":"val device: String","description":"dev.kord.gateway.IdentifyProperties.device","location":"gateway/dev.kord.gateway/-identify-properties/device.html","searchKeys":["device","val device: String","dev.kord.gateway.IdentifyProperties.device"]},{"name":"val dispatcher: CoroutineDispatcher","description":"dev.kord.gateway.DefaultGatewayData.dispatcher","location":"gateway/dev.kord.gateway/-default-gateway-data/dispatcher.html","searchKeys":["dispatcher","val dispatcher: CoroutineDispatcher","dev.kord.gateway.DefaultGatewayData.dispatcher"]},{"name":"val emoji: DiscordRemovedReactionEmoji","description":"dev.kord.gateway.DiscordRemovedEmoji.emoji","location":"gateway/dev.kord.gateway/-discord-removed-emoji/emoji.html","searchKeys":["emoji","val emoji: DiscordRemovedReactionEmoji","dev.kord.gateway.DiscordRemovedEmoji.emoji"]},{"name":"val emoji: DiscordUpdatedEmojis","description":"dev.kord.gateway.GuildEmojisUpdate.emoji","location":"gateway/dev.kord.gateway/-guild-emojis-update/emoji.html","searchKeys":["emoji","val emoji: DiscordUpdatedEmojis","dev.kord.gateway.GuildEmojisUpdate.emoji"]},{"name":"val event: DiscordGuildScheduledEvent","description":"dev.kord.gateway.GuildScheduledEventCreate.event","location":"gateway/dev.kord.gateway/-guild-scheduled-event-create/event.html","searchKeys":["event","val event: DiscordGuildScheduledEvent","dev.kord.gateway.GuildScheduledEventCreate.event"]},{"name":"val event: DiscordGuildScheduledEvent","description":"dev.kord.gateway.GuildScheduledEventDelete.event","location":"gateway/dev.kord.gateway/-guild-scheduled-event-delete/event.html","searchKeys":["event","val event: DiscordGuildScheduledEvent","dev.kord.gateway.GuildScheduledEventDelete.event"]},{"name":"val event: DiscordGuildScheduledEvent","description":"dev.kord.gateway.GuildScheduledEventUpdate.event","location":"gateway/dev.kord.gateway/-guild-scheduled-event-update/event.html","searchKeys":["event","val event: DiscordGuildScheduledEvent","dev.kord.gateway.GuildScheduledEventUpdate.event"]},{"name":"val eventFlow: MutableSharedFlow<Event>","description":"dev.kord.gateway.DefaultGatewayData.eventFlow","location":"gateway/dev.kord.gateway/-default-gateway-data/event-flow.html","searchKeys":["eventFlow","val eventFlow: MutableSharedFlow<Event>","dev.kord.gateway.DefaultGatewayData.eventFlow"]},{"name":"val game: DiscordBotActivity? = null","description":"dev.kord.gateway.DiscordPresence.game","location":"gateway/dev.kord.gateway/-discord-presence/game.html","searchKeys":["game","val game: DiscordBotActivity? = null","dev.kord.gateway.DiscordPresence.game"]},{"name":"val geoOrderedRtcRegions: Optional<JsonElement?>","description":"dev.kord.gateway.ReadyData.geoOrderedRtcRegions","location":"gateway/dev.kord.gateway/-ready-data/geo-ordered-rtc-regions.html","searchKeys":["geoOrderedRtcRegions","val geoOrderedRtcRegions: Optional<JsonElement?>","dev.kord.gateway.ReadyData.geoOrderedRtcRegions"]},{"name":"val guild: DiscordGuild","description":"dev.kord.gateway.GuildCreate.guild","location":"gateway/dev.kord.gateway/-guild-create/guild.html","searchKeys":["guild","val guild: DiscordGuild","dev.kord.gateway.GuildCreate.guild"]},{"name":"val guild: DiscordGuild","description":"dev.kord.gateway.GuildUpdate.guild","location":"gateway/dev.kord.gateway/-guild-update/guild.html","searchKeys":["guild","val guild: DiscordGuild","dev.kord.gateway.GuildUpdate.guild"]},{"name":"val guild: DiscordUnavailableGuild","description":"dev.kord.gateway.GuildDelete.guild","location":"gateway/dev.kord.gateway/-guild-delete/guild.html","searchKeys":["guild","val guild: DiscordUnavailableGuild","dev.kord.gateway.GuildDelete.guild"]},{"name":"val guildHashes: Optional<JsonElement?>","description":"dev.kord.gateway.ReadyData.guildHashes","location":"gateway/dev.kord.gateway/-ready-data/guild-hashes.html","searchKeys":["guildHashes","val guildHashes: Optional<JsonElement?>","dev.kord.gateway.ReadyData.guildHashes"]},{"name":"val guildId: OptionalSnowflake","description":"dev.kord.gateway.DiscordCreatedInvite.guildId","location":"gateway/dev.kord.gateway/-discord-created-invite/guild-id.html","searchKeys":["guildId","val guildId: OptionalSnowflake","dev.kord.gateway.DiscordCreatedInvite.guildId"]},{"name":"val guildId: OptionalSnowflake","description":"dev.kord.gateway.DiscordDeletedInvite.guildId","location":"gateway/dev.kord.gateway/-discord-deleted-invite/guild-id.html","searchKeys":["guildId","val guildId: OptionalSnowflake","dev.kord.gateway.DiscordDeletedInvite.guildId"]},{"name":"val guildId: Snowflake","description":"dev.kord.gateway.DiscordAutoModerationActionExecution.guildId","location":"gateway/dev.kord.gateway/-discord-auto-moderation-action-execution/guild-id.html","searchKeys":["guildId","val guildId: Snowflake","dev.kord.gateway.DiscordAutoModerationActionExecution.guildId"]},{"name":"val guildId: Snowflake","description":"dev.kord.gateway.DiscordRemovedEmoji.guildId","location":"gateway/dev.kord.gateway/-discord-removed-emoji/guild-id.html","searchKeys":["guildId","val guildId: Snowflake","dev.kord.gateway.DiscordRemovedEmoji.guildId"]},{"name":"val guildId: Snowflake","description":"dev.kord.gateway.DiscordThreadListSync.guildId","location":"gateway/dev.kord.gateway/-discord-thread-list-sync/guild-id.html","searchKeys":["guildId","val guildId: Snowflake","dev.kord.gateway.DiscordThreadListSync.guildId"]},{"name":"val guildId: Snowflake","description":"dev.kord.gateway.DiscordThreadMembersUpdate.guildId","location":"gateway/dev.kord.gateway/-discord-thread-members-update/guild-id.html","searchKeys":["guildId","val guildId: Snowflake","dev.kord.gateway.DiscordThreadMembersUpdate.guildId"]},{"name":"val guildId: Snowflake","description":"dev.kord.gateway.GuildMembersChunkData.guildId","location":"gateway/dev.kord.gateway/-guild-members-chunk-data/guild-id.html","searchKeys":["guildId","val guildId: Snowflake","dev.kord.gateway.GuildMembersChunkData.guildId"]},{"name":"val guildId: Snowflake","description":"dev.kord.gateway.GuildScheduledEventUserMetadata.guildId","location":"gateway/dev.kord.gateway/-guild-scheduled-event-user-metadata/guild-id.html","searchKeys":["guildId","val guildId: Snowflake","dev.kord.gateway.GuildScheduledEventUserMetadata.guildId"]},{"name":"val guildId: Snowflake","description":"dev.kord.gateway.RequestGuildMembers.guildId","location":"gateway/dev.kord.gateway/-request-guild-members/guild-id.html","searchKeys":["guildId","val guildId: Snowflake","dev.kord.gateway.RequestGuildMembers.guildId"]},{"name":"val guildId: Snowflake","description":"dev.kord.gateway.UpdateVoiceStatus.guildId","location":"gateway/dev.kord.gateway/-update-voice-status/guild-id.html","searchKeys":["guildId","val guildId: Snowflake","dev.kord.gateway.UpdateVoiceStatus.guildId"]},{"name":"val guildScheduledEventId: Snowflake","description":"dev.kord.gateway.GuildScheduledEventUserMetadata.guildScheduledEventId","location":"gateway/dev.kord.gateway/-guild-scheduled-event-user-metadata/guild-scheduled-event-id.html","searchKeys":["guildScheduledEventId","val guildScheduledEventId: Snowflake","dev.kord.gateway.GuildScheduledEventUserMetadata.guildScheduledEventId"]},{"name":"val guilds: List<DiscordUnavailableGuild>","description":"dev.kord.gateway.ReadyData.guilds","location":"gateway/dev.kord.gateway/-ready-data/guilds.html","searchKeys":["guilds","val guilds: List<DiscordUnavailableGuild>","dev.kord.gateway.ReadyData.guilds"]},{"name":"val heartbeatInterval: Int","description":"dev.kord.gateway.Hello.heartbeatInterval","location":"gateway/dev.kord.gateway/-hello/heartbeat-interval.html","searchKeys":["heartbeatInterval","val heartbeatInterval: Int","dev.kord.gateway.Hello.heartbeatInterval"]},{"name":"val id: Snowflake","description":"dev.kord.gateway.DiscordThreadMembersUpdate.id","location":"gateway/dev.kord.gateway/-discord-thread-members-update/id.html","searchKeys":["id","val id: Snowflake","dev.kord.gateway.DiscordThreadMembersUpdate.id"]},{"name":"val id: Snowflake?","description":"dev.kord.gateway.DiscordRemovedReactionEmoji.id","location":"gateway/dev.kord.gateway/-discord-removed-reaction-emoji/id.html","searchKeys":["id","val id: Snowflake?","dev.kord.gateway.DiscordRemovedReactionEmoji.id"]},{"name":"val identifyRateLimiter: IdentifyRateLimiter","description":"dev.kord.gateway.DefaultGatewayData.identifyRateLimiter","location":"gateway/dev.kord.gateway/-default-gateway-data/identify-rate-limiter.html","searchKeys":["identifyRateLimiter","val identifyRateLimiter: IdentifyRateLimiter","dev.kord.gateway.DefaultGatewayData.identifyRateLimiter"]},{"name":"val indices: Iterable<Int>","description":"dev.kord.gateway.builder.Shards.indices","location":"gateway/dev.kord.gateway.builder/-shards/indices.html","searchKeys":["indices","val indices: Iterable<Int>","dev.kord.gateway.builder.Shards.indices"]},{"name":"val integrations: DiscordGuildIntegrations","description":"dev.kord.gateway.GuildIntegrationsUpdate.integrations","location":"gateway/dev.kord.gateway/-guild-integrations-update/integrations.html","searchKeys":["integrations","val integrations: DiscordGuildIntegrations","dev.kord.gateway.GuildIntegrationsUpdate.integrations"]},{"name":"val intents: Intents","description":"dev.kord.gateway.GatewayConfiguration.intents","location":"gateway/dev.kord.gateway/-gateway-configuration/intents.html","searchKeys":["intents","val intents: Intents","dev.kord.gateway.GatewayConfiguration.intents"]},{"name":"val interaction: DiscordInteraction","description":"dev.kord.gateway.InteractionCreate.interaction","location":"gateway/dev.kord.gateway/-interaction-create/interaction.html","searchKeys":["interaction","val interaction: DiscordInteraction","dev.kord.gateway.InteractionCreate.interaction"]},{"name":"val invite: DiscordCreatedInvite","description":"dev.kord.gateway.InviteCreate.invite","location":"gateway/dev.kord.gateway/-invite-create/invite.html","searchKeys":["invite","val invite: DiscordCreatedInvite","dev.kord.gateway.InviteCreate.invite"]},{"name":"val invite: DiscordDeletedInvite","description":"dev.kord.gateway.InviteDelete.invite","location":"gateway/dev.kord.gateway/-invite-delete/invite.html","searchKeys":["invite","val invite: DiscordDeletedInvite","dev.kord.gateway.InviteDelete.invite"]},{"name":"val inviter: Optional<DiscordUser>","description":"dev.kord.gateway.DiscordCreatedInvite.inviter","location":"gateway/dev.kord.gateway/-discord-created-invite/inviter.html","searchKeys":["inviter","val inviter: Optional<DiscordUser>","dev.kord.gateway.DiscordCreatedInvite.inviter"]},{"name":"val limit: OptionalInt","description":"dev.kord.gateway.RequestGuildMembers.limit","location":"gateway/dev.kord.gateway/-request-guild-members/limit.html","searchKeys":["limit","val limit: OptionalInt","dev.kord.gateway.RequestGuildMembers.limit"]},{"name":"val matchedContent: String?","description":"dev.kord.gateway.DiscordAutoModerationActionExecution.matchedContent","location":"gateway/dev.kord.gateway/-discord-auto-moderation-action-execution/matched-content.html","searchKeys":["matchedContent","val matchedContent: String?","dev.kord.gateway.DiscordAutoModerationActionExecution.matchedContent"]},{"name":"val matchedKeyword: String?","description":"dev.kord.gateway.DiscordAutoModerationActionExecution.matchedKeyword","location":"gateway/dev.kord.gateway/-discord-auto-moderation-action-execution/matched-keyword.html","searchKeys":["matchedKeyword","val matchedKeyword: String?","dev.kord.gateway.DiscordAutoModerationActionExecution.matchedKeyword"]},{"name":"val maxAge: DurationInSeconds","description":"dev.kord.gateway.DiscordCreatedInvite.maxAge","location":"gateway/dev.kord.gateway/-discord-created-invite/max-age.html","searchKeys":["maxAge","val maxAge: DurationInSeconds","dev.kord.gateway.DiscordCreatedInvite.maxAge"]},{"name":"val maxUses: Int","description":"dev.kord.gateway.DiscordCreatedInvite.maxUses","location":"gateway/dev.kord.gateway/-discord-created-invite/max-uses.html","searchKeys":["maxUses","val maxUses: Int","dev.kord.gateway.DiscordCreatedInvite.maxUses"]},{"name":"val member: DiscordAddedGuildMember","description":"dev.kord.gateway.GuildMemberAdd.member","location":"gateway/dev.kord.gateway/-guild-member-add/member.html","searchKeys":["member","val member: DiscordAddedGuildMember","dev.kord.gateway.GuildMemberAdd.member"]},{"name":"val member: DiscordRemovedGuildMember","description":"dev.kord.gateway.GuildMemberRemove.member","location":"gateway/dev.kord.gateway/-guild-member-remove/member.html","searchKeys":["member","val member: DiscordRemovedGuildMember","dev.kord.gateway.GuildMemberRemove.member"]},{"name":"val member: DiscordThreadMember","description":"dev.kord.gateway.ThreadMemberUpdate.member","location":"gateway/dev.kord.gateway/-thread-member-update/member.html","searchKeys":["member","val member: DiscordThreadMember","dev.kord.gateway.ThreadMemberUpdate.member"]},{"name":"val member: DiscordUpdatedGuildMember","description":"dev.kord.gateway.GuildMemberUpdate.member","location":"gateway/dev.kord.gateway/-guild-member-update/member.html","searchKeys":["member","val member: DiscordUpdatedGuildMember","dev.kord.gateway.GuildMemberUpdate.member"]},{"name":"val memberCount: Int","description":"dev.kord.gateway.DiscordThreadMembersUpdate.memberCount","location":"gateway/dev.kord.gateway/-discord-thread-members-update/member-count.html","searchKeys":["memberCount","val memberCount: Int","dev.kord.gateway.DiscordThreadMembersUpdate.memberCount"]},{"name":"val members: DiscordThreadMembersUpdate","description":"dev.kord.gateway.ThreadMembersUpdate.members","location":"gateway/dev.kord.gateway/-thread-members-update/members.html","searchKeys":["members","val members: DiscordThreadMembersUpdate","dev.kord.gateway.ThreadMembersUpdate.members"]},{"name":"val members: List<DiscordGuildMember>","description":"dev.kord.gateway.GuildMembersChunkData.members","location":"gateway/dev.kord.gateway/-guild-members-chunk-data/members.html","searchKeys":["members","val members: List<DiscordGuildMember>","dev.kord.gateway.GuildMembersChunkData.members"]},{"name":"val members: List<DiscordThreadMember>","description":"dev.kord.gateway.DiscordThreadListSync.members","location":"gateway/dev.kord.gateway/-discord-thread-list-sync/members.html","searchKeys":["members","val members: List<DiscordThreadMember>","dev.kord.gateway.DiscordThreadListSync.members"]},{"name":"val message: DeletedMessage","description":"dev.kord.gateway.MessageDelete.message","location":"gateway/dev.kord.gateway/-message-delete/message.html","searchKeys":["message","val message: DeletedMessage","dev.kord.gateway.MessageDelete.message"]},{"name":"val message: DiscordMessage","description":"dev.kord.gateway.MessageCreate.message","location":"gateway/dev.kord.gateway/-message-create/message.html","searchKeys":["message","val message: DiscordMessage","dev.kord.gateway.MessageCreate.message"]},{"name":"val message: DiscordPartialMessage","description":"dev.kord.gateway.MessageUpdate.message","location":"gateway/dev.kord.gateway/-message-update/message.html","searchKeys":["message","val message: DiscordPartialMessage","dev.kord.gateway.MessageUpdate.message"]},{"name":"val messageBulk: BulkDeleteData","description":"dev.kord.gateway.MessageDeleteBulk.messageBulk","location":"gateway/dev.kord.gateway/-message-delete-bulk/message-bulk.html","searchKeys":["messageBulk","val messageBulk: BulkDeleteData","dev.kord.gateway.MessageDeleteBulk.messageBulk"]},{"name":"val messageId: OptionalSnowflake","description":"dev.kord.gateway.DiscordAutoModerationActionExecution.messageId","location":"gateway/dev.kord.gateway/-discord-auto-moderation-action-execution/message-id.html","searchKeys":["messageId","val messageId: OptionalSnowflake","dev.kord.gateway.DiscordAutoModerationActionExecution.messageId"]},{"name":"val messageId: Snowflake","description":"dev.kord.gateway.DiscordRemovedEmoji.messageId","location":"gateway/dev.kord.gateway/-discord-removed-emoji/message-id.html","searchKeys":["messageId","val messageId: Snowflake","dev.kord.gateway.DiscordRemovedEmoji.messageId"]},{"name":"val name: String","description":"dev.kord.gateway.GatewayConfiguration.name","location":"gateway/dev.kord.gateway/-gateway-configuration/name.html","searchKeys":["name","val name: String","dev.kord.gateway.GatewayConfiguration.name"]},{"name":"val name: String?","description":"dev.kord.gateway.DiscordRemovedReactionEmoji.name","location":"gateway/dev.kord.gateway/-discord-removed-reaction-emoji/name.html","searchKeys":["name","val name: String?","dev.kord.gateway.DiscordRemovedReactionEmoji.name"]},{"name":"val nonPrivileged: Intents","description":"dev.kord.gateway.Intents.Companion.nonPrivileged","location":"gateway/dev.kord.gateway/-intents/-companion/non-privileged.html","searchKeys":["nonPrivileged","val nonPrivileged: Intents","dev.kord.gateway.Intents.Companion.nonPrivileged"]},{"name":"val nonce: Optional<String>","description":"dev.kord.gateway.GuildMembersChunkData.nonce","location":"gateway/dev.kord.gateway/-guild-members-chunk-data/nonce.html","searchKeys":["nonce","val nonce: Optional<String>","dev.kord.gateway.GuildMembersChunkData.nonce"]},{"name":"val nonce: Optional<String>","description":"dev.kord.gateway.RequestGuildMembers.nonce","location":"gateway/dev.kord.gateway/-request-guild-members/nonce.html","searchKeys":["nonce","val nonce: Optional<String>","dev.kord.gateway.RequestGuildMembers.nonce"]},{"name":"val none: Intents","description":"dev.kord.gateway.Intents.Companion.none","location":"gateway/dev.kord.gateway/-intents/-companion/none.html","searchKeys":["none","val none: Intents","dev.kord.gateway.Intents.Companion.none"]},{"name":"val notFound: Optional<Set<Snowflake>>","description":"dev.kord.gateway.GuildMembersChunkData.notFound","location":"gateway/dev.kord.gateway/-guild-members-chunk-data/not-found.html","searchKeys":["notFound","val notFound: Optional<Set<Snowflake>>","dev.kord.gateway.GuildMembersChunkData.notFound"]},{"name":"val os: String","description":"dev.kord.gateway.IdentifyProperties.os","location":"gateway/dev.kord.gateway/-identify-properties/os.html","searchKeys":["os","val os: String","dev.kord.gateway.IdentifyProperties.os"]},{"name":"val permissions: DiscordGuildApplicationCommandPermissions","description":"dev.kord.gateway.ApplicationCommandPermissionsUpdate.permissions","location":"gateway/dev.kord.gateway/-application-command-permissions-update/permissions.html","searchKeys":["permissions","val permissions: DiscordGuildApplicationCommandPermissions","dev.kord.gateway.ApplicationCommandPermissionsUpdate.permissions"]},{"name":"val pins: DiscordPinsUpdateData","description":"dev.kord.gateway.ChannelPinsUpdate.pins","location":"gateway/dev.kord.gateway/-channel-pins-update/pins.html","searchKeys":["pins","val pins: DiscordPinsUpdateData","dev.kord.gateway.ChannelPinsUpdate.pins"]},{"name":"val presence: DiscordPresenceUpdate","description":"dev.kord.gateway.PresenceUpdate.presence","location":"gateway/dev.kord.gateway/-presence-update/presence.html","searchKeys":["presence","val presence: DiscordPresenceUpdate","dev.kord.gateway.PresenceUpdate.presence"]},{"name":"val presence: Optional<DiscordPresence>","description":"dev.kord.gateway.GatewayConfiguration.presence","location":"gateway/dev.kord.gateway/-gateway-configuration/presence.html","searchKeys":["presence","val presence: Optional<DiscordPresence>","dev.kord.gateway.GatewayConfiguration.presence"]},{"name":"val presences: Optional<List<DiscordPresenceUpdate>>","description":"dev.kord.gateway.GuildMembersChunkData.presences","location":"gateway/dev.kord.gateway/-guild-members-chunk-data/presences.html","searchKeys":["presences","val presences: Optional<List<DiscordPresenceUpdate>>","dev.kord.gateway.GuildMembersChunkData.presences"]},{"name":"val presences: OptionalBoolean","description":"dev.kord.gateway.RequestGuildMembers.presences","location":"gateway/dev.kord.gateway/-request-guild-members/presences.html","searchKeys":["presences","val presences: OptionalBoolean","dev.kord.gateway.RequestGuildMembers.presences"]},{"name":"val privateChannels: List<DiscordChannel>","description":"dev.kord.gateway.ReadyData.privateChannels","location":"gateway/dev.kord.gateway/-ready-data/private-channels.html","searchKeys":["privateChannels","val privateChannels: List<DiscordChannel>","dev.kord.gateway.ReadyData.privateChannels"]},{"name":"val privileged: Intents","description":"dev.kord.gateway.Intents.Companion.privileged","location":"gateway/dev.kord.gateway/-intents/-companion/privileged.html","searchKeys":["privileged","val privileged: Intents","dev.kord.gateway.Intents.Companion.privileged"]},{"name":"val query: Optional<String>","description":"dev.kord.gateway.RequestGuildMembers.query","location":"gateway/dev.kord.gateway/-request-guild-members/query.html","searchKeys":["query","val query: Optional<String>","dev.kord.gateway.RequestGuildMembers.query"]},{"name":"val reaction: DiscordRemovedEmoji","description":"dev.kord.gateway.MessageReactionRemoveEmoji.reaction","location":"gateway/dev.kord.gateway/-message-reaction-remove-emoji/reaction.html","searchKeys":["reaction","val reaction: DiscordRemovedEmoji","dev.kord.gateway.MessageReactionRemoveEmoji.reaction"]},{"name":"val reaction: MessageReactionAddData","description":"dev.kord.gateway.MessageReactionAdd.reaction","location":"gateway/dev.kord.gateway/-message-reaction-add/reaction.html","searchKeys":["reaction","val reaction: MessageReactionAddData","dev.kord.gateway.MessageReactionAdd.reaction"]},{"name":"val reaction: MessageReactionRemoveData","description":"dev.kord.gateway.MessageReactionRemove.reaction","location":"gateway/dev.kord.gateway/-message-reaction-remove/reaction.html","searchKeys":["reaction","val reaction: MessageReactionRemoveData","dev.kord.gateway.MessageReactionRemove.reaction"]},{"name":"val reactions: AllRemovedMessageReactions","description":"dev.kord.gateway.MessageReactionRemoveAll.reactions","location":"gateway/dev.kord.gateway/-message-reaction-remove-all/reactions.html","searchKeys":["reactions","val reactions: AllRemovedMessageReactions","dev.kord.gateway.MessageReactionRemoveAll.reactions"]},{"name":"val reconnectRetry: Retry","description":"dev.kord.gateway.DefaultGatewayData.reconnectRetry","location":"gateway/dev.kord.gateway/-default-gateway-data/reconnect-retry.html","searchKeys":["reconnectRetry","val reconnectRetry: Retry","dev.kord.gateway.DefaultGatewayData.reconnectRetry"]},{"name":"val recoverable: Boolean","description":"dev.kord.gateway.Close.DiscordClose.recoverable","location":"gateway/dev.kord.gateway/-close/-discord-close/recoverable.html","searchKeys":["recoverable","val recoverable: Boolean","dev.kord.gateway.Close.DiscordClose.recoverable"]},{"name":"val removedMemberIds: Optional<List<Snowflake>>","description":"dev.kord.gateway.DiscordThreadMembersUpdate.removedMemberIds","location":"gateway/dev.kord.gateway/-discord-thread-members-update/removed-member-ids.html","searchKeys":["removedMemberIds","val removedMemberIds: Optional<List<Snowflake>>","dev.kord.gateway.DiscordThreadMembersUpdate.removedMemberIds"]},{"name":"val resumable: Boolean","description":"dev.kord.gateway.InvalidSession.resumable","location":"gateway/dev.kord.gateway/-invalid-session/resumable.html","searchKeys":["resumable","val resumable: Boolean","dev.kord.gateway.InvalidSession.resumable"]},{"name":"val resumeGatewayUrl: String","description":"dev.kord.gateway.ReadyData.resumeGatewayUrl","location":"gateway/dev.kord.gateway/-ready-data/resume-gateway-url.html","searchKeys":["resumeGatewayUrl","val resumeGatewayUrl: String","dev.kord.gateway.ReadyData.resumeGatewayUrl"]},{"name":"val role: DiscordDeletedGuildRole","description":"dev.kord.gateway.GuildRoleDelete.role","location":"gateway/dev.kord.gateway/-guild-role-delete/role.html","searchKeys":["role","val role: DiscordDeletedGuildRole","dev.kord.gateway.GuildRoleDelete.role"]},{"name":"val role: DiscordGuildRole","description":"dev.kord.gateway.GuildRoleCreate.role","location":"gateway/dev.kord.gateway/-guild-role-create/role.html","searchKeys":["role","val role: DiscordGuildRole","dev.kord.gateway.GuildRoleCreate.role"]},{"name":"val role: DiscordGuildRole","description":"dev.kord.gateway.GuildRoleUpdate.role","location":"gateway/dev.kord.gateway/-guild-role-update/role.html","searchKeys":["role","val role: DiscordGuildRole","dev.kord.gateway.GuildRoleUpdate.role"]},{"name":"val rule: DiscordAutoModerationRule","description":"dev.kord.gateway.AutoModerationRuleCreate.rule","location":"gateway/dev.kord.gateway/-auto-moderation-rule-create/rule.html","searchKeys":["rule","val rule: DiscordAutoModerationRule","dev.kord.gateway.AutoModerationRuleCreate.rule"]},{"name":"val rule: DiscordAutoModerationRule","description":"dev.kord.gateway.AutoModerationRuleDelete.rule","location":"gateway/dev.kord.gateway/-auto-moderation-rule-delete/rule.html","searchKeys":["rule","val rule: DiscordAutoModerationRule","dev.kord.gateway.AutoModerationRuleDelete.rule"]},{"name":"val rule: DiscordAutoModerationRule","description":"dev.kord.gateway.AutoModerationRuleUpdate.rule","location":"gateway/dev.kord.gateway/-auto-moderation-rule-update/rule.html","searchKeys":["rule","val rule: DiscordAutoModerationRule","dev.kord.gateway.AutoModerationRuleUpdate.rule"]},{"name":"val ruleId: Snowflake","description":"dev.kord.gateway.DiscordAutoModerationActionExecution.ruleId","location":"gateway/dev.kord.gateway/-discord-auto-moderation-action-execution/rule-id.html","searchKeys":["ruleId","val ruleId: Snowflake","dev.kord.gateway.DiscordAutoModerationActionExecution.ruleId"]},{"name":"val ruleTriggerType: AutoModerationRuleTriggerType","description":"dev.kord.gateway.DiscordAutoModerationActionExecution.ruleTriggerType","location":"gateway/dev.kord.gateway/-discord-auto-moderation-action-execution/rule-trigger-type.html","searchKeys":["ruleTriggerType","val ruleTriggerType: AutoModerationRuleTriggerType","dev.kord.gateway.DiscordAutoModerationActionExecution.ruleTriggerType"]},{"name":"val selfDeaf: Boolean","description":"dev.kord.gateway.UpdateVoiceStatus.selfDeaf","location":"gateway/dev.kord.gateway/-update-voice-status/self-deaf.html","searchKeys":["selfDeaf","val selfDeaf: Boolean","dev.kord.gateway.UpdateVoiceStatus.selfDeaf"]},{"name":"val selfMute: Boolean","description":"dev.kord.gateway.UpdateVoiceStatus.selfMute","location":"gateway/dev.kord.gateway/-update-voice-status/self-mute.html","searchKeys":["selfMute","val selfMute: Boolean","dev.kord.gateway.UpdateVoiceStatus.selfMute"]},{"name":"val sendRateLimiter: RateLimiter","description":"dev.kord.gateway.DefaultGatewayData.sendRateLimiter","location":"gateway/dev.kord.gateway/-default-gateway-data/send-rate-limiter.html","searchKeys":["sendRateLimiter","val sendRateLimiter: RateLimiter","dev.kord.gateway.DefaultGatewayData.sendRateLimiter"]},{"name":"val sessionId: String","description":"dev.kord.gateway.ReadyData.sessionId","location":"gateway/dev.kord.gateway/-ready-data/session-id.html","searchKeys":["sessionId","val sessionId: String","dev.kord.gateway.ReadyData.sessionId"]},{"name":"val shard: DiscordShard","description":"dev.kord.gateway.GatewayConfiguration.shard","location":"gateway/dev.kord.gateway/-gateway-configuration/shard.html","searchKeys":["shard","val shard: DiscordShard","dev.kord.gateway.GatewayConfiguration.shard"]},{"name":"val shard: Optional<DiscordShard>","description":"dev.kord.gateway.ReadyData.shard","location":"gateway/dev.kord.gateway/-ready-data/shard.html","searchKeys":["shard","val shard: Optional<DiscordShard>","dev.kord.gateway.ReadyData.shard"]},{"name":"val since: Instant?","description":"dev.kord.gateway.UpdateStatus.since","location":"gateway/dev.kord.gateway/-update-status/since.html","searchKeys":["since","val since: Instant?","dev.kord.gateway.UpdateStatus.since"]},{"name":"val since: Instant? = null","description":"dev.kord.gateway.DiscordPresence.since","location":"gateway/dev.kord.gateway/-discord-presence/since.html","searchKeys":["since","val since: Instant? = null","dev.kord.gateway.DiscordPresence.since"]},{"name":"val status: PresenceStatus","description":"dev.kord.gateway.DiscordPresence.status","location":"gateway/dev.kord.gateway/-discord-presence/status.html","searchKeys":["status","val status: PresenceStatus","dev.kord.gateway.DiscordPresence.status"]},{"name":"val status: PresenceStatus","description":"dev.kord.gateway.UpdateStatus.status","location":"gateway/dev.kord.gateway/-update-status/status.html","searchKeys":["status","val status: PresenceStatus","dev.kord.gateway.UpdateStatus.status"]},{"name":"val sync: DiscordThreadListSync","description":"dev.kord.gateway.ThreadListSync.sync","location":"gateway/dev.kord.gateway/-thread-list-sync/sync.html","searchKeys":["sync","val sync: DiscordThreadListSync","dev.kord.gateway.ThreadListSync.sync"]},{"name":"val targetApplication: Optional<DiscordPartialApplication>","description":"dev.kord.gateway.DiscordCreatedInvite.targetApplication","location":"gateway/dev.kord.gateway/-discord-created-invite/target-application.html","searchKeys":["targetApplication","val targetApplication: Optional<DiscordPartialApplication>","dev.kord.gateway.DiscordCreatedInvite.targetApplication"]},{"name":"val targetType: Optional<InviteTargetType>","description":"dev.kord.gateway.DiscordCreatedInvite.targetType","location":"gateway/dev.kord.gateway/-discord-created-invite/target-type.html","searchKeys":["targetType","val targetType: Optional<InviteTargetType>","dev.kord.gateway.DiscordCreatedInvite.targetType"]},{"name":"val targetUser: Optional<DiscordUser>","description":"dev.kord.gateway.DiscordCreatedInvite.targetUser","location":"gateway/dev.kord.gateway/-discord-created-invite/target-user.html","searchKeys":["targetUser","val targetUser: Optional<DiscordUser>","dev.kord.gateway.DiscordCreatedInvite.targetUser"]},{"name":"val temporary: Boolean","description":"dev.kord.gateway.DiscordCreatedInvite.temporary","location":"gateway/dev.kord.gateway/-discord-created-invite/temporary.html","searchKeys":["temporary","val temporary: Boolean","dev.kord.gateway.DiscordCreatedInvite.temporary"]},{"name":"val threads: List<DiscordChannel>","description":"dev.kord.gateway.DiscordThreadListSync.threads","location":"gateway/dev.kord.gateway/-discord-thread-list-sync/threads.html","searchKeys":["threads","val threads: List<DiscordChannel>","dev.kord.gateway.DiscordThreadListSync.threads"]},{"name":"val threshold: Int","description":"dev.kord.gateway.GatewayConfiguration.threshold","location":"gateway/dev.kord.gateway/-gateway-configuration/threshold.html","searchKeys":["threshold","val threshold: Int","dev.kord.gateway.GatewayConfiguration.threshold"]},{"name":"val token: String","description":"dev.kord.gateway.GatewayConfiguration.token","location":"gateway/dev.kord.gateway/-gateway-configuration/token.html","searchKeys":["token","val token: String","dev.kord.gateway.GatewayConfiguration.token"]},{"name":"val token: String","description":"dev.kord.gateway.GatewayConfigurationBuilder.token","location":"gateway/dev.kord.gateway/-gateway-configuration-builder/token.html","searchKeys":["token","val token: String","dev.kord.gateway.GatewayConfigurationBuilder.token"]},{"name":"val totalShards: Int","description":"dev.kord.gateway.builder.Shards.totalShards","location":"gateway/dev.kord.gateway.builder/-shards/total-shards.html","searchKeys":["totalShards","val totalShards: Int","dev.kord.gateway.builder.Shards.totalShards"]},{"name":"val traces: List<String>","description":"dev.kord.gateway.ReadyData.traces","location":"gateway/dev.kord.gateway/-ready-data/traces.html","searchKeys":["traces","val traces: List<String>","dev.kord.gateway.ReadyData.traces"]},{"name":"val url: String","description":"dev.kord.gateway.DefaultGatewayData.url","location":"gateway/dev.kord.gateway/-default-gateway-data/url.html","searchKeys":["url","val url: String","dev.kord.gateway.DefaultGatewayData.url"]},{"name":"val user: DiscordUser","description":"dev.kord.gateway.ReadyData.user","location":"gateway/dev.kord.gateway/-ready-data/user.html","searchKeys":["user","val user: DiscordUser","dev.kord.gateway.ReadyData.user"]},{"name":"val user: DiscordUser","description":"dev.kord.gateway.UserUpdate.user","location":"gateway/dev.kord.gateway/-user-update/user.html","searchKeys":["user","val user: DiscordUser","dev.kord.gateway.UserUpdate.user"]},{"name":"val userId: Snowflake","description":"dev.kord.gateway.DiscordAutoModerationActionExecution.userId","location":"gateway/dev.kord.gateway/-discord-auto-moderation-action-execution/user-id.html","searchKeys":["userId","val userId: Snowflake","dev.kord.gateway.DiscordAutoModerationActionExecution.userId"]},{"name":"val userId: Snowflake","description":"dev.kord.gateway.GuildScheduledEventUserMetadata.userId","location":"gateway/dev.kord.gateway/-guild-scheduled-event-user-metadata/user-id.html","searchKeys":["userId","val userId: Snowflake","dev.kord.gateway.GuildScheduledEventUserMetadata.userId"]},{"name":"val userIds: Optional<Set<Snowflake>>","description":"dev.kord.gateway.RequestGuildMembers.userIds","location":"gateway/dev.kord.gateway/-request-guild-members/user-ids.html","searchKeys":["userIds","val userIds: Optional<Set<Snowflake>>","dev.kord.gateway.RequestGuildMembers.userIds"]},{"name":"val uses: Int","description":"dev.kord.gateway.DiscordCreatedInvite.uses","location":"gateway/dev.kord.gateway/-discord-created-invite/uses.html","searchKeys":["uses","val uses: Int","dev.kord.gateway.DiscordCreatedInvite.uses"]},{"name":"val values: Set<Intent>","description":"dev.kord.gateway.Intent.Companion.values","location":"gateway/dev.kord.gateway/-intent/-companion/values.html","searchKeys":["values","val values: Set<Intent>","dev.kord.gateway.Intent.Companion.values"]},{"name":"val values: Set<Intent>","description":"dev.kord.gateway.Intents.values","location":"gateway/dev.kord.gateway/-intents/values.html","searchKeys":["values","val values: Set<Intent>","dev.kord.gateway.Intents.values"]},{"name":"val version: Int","description":"dev.kord.gateway.ReadyData.version","location":"gateway/dev.kord.gateway/-ready-data/version.html","searchKeys":["version","val version: Int","dev.kord.gateway.ReadyData.version"]},{"name":"val voiceServerUpdateData: DiscordVoiceServerUpdateData","description":"dev.kord.gateway.VoiceServerUpdate.voiceServerUpdateData","location":"gateway/dev.kord.gateway/-voice-server-update/voice-server-update-data.html","searchKeys":["voiceServerUpdateData","val voiceServerUpdateData: DiscordVoiceServerUpdateData","dev.kord.gateway.VoiceServerUpdate.voiceServerUpdateData"]},{"name":"val voiceState: DiscordVoiceState","description":"dev.kord.gateway.VoiceStateUpdate.voiceState","location":"gateway/dev.kord.gateway/-voice-state-update/voice-state.html","searchKeys":["voiceState","val voiceState: DiscordVoiceState","dev.kord.gateway.VoiceStateUpdate.voiceState"]},{"name":"val webhooksUpdateData: DiscordWebhooksUpdateData","description":"dev.kord.gateway.WebhooksUpdate.webhooksUpdateData","location":"gateway/dev.kord.gateway/-webhooks-update/webhooks-update-data.html","searchKeys":["webhooksUpdateData","val webhooksUpdateData: DiscordWebhooksUpdateData","dev.kord.gateway.WebhooksUpdate.webhooksUpdateData"]},{"name":"var afk: Boolean = false","description":"dev.kord.gateway.builder.PresenceBuilder.afk","location":"gateway/dev.kord.gateway.builder/-presence-builder/afk.html","searchKeys":["afk","var afk: Boolean = false","dev.kord.gateway.builder.PresenceBuilder.afk"]},{"name":"var client: HttpClient? = null","description":"dev.kord.gateway.DefaultGatewayBuilder.client","location":"gateway/dev.kord.gateway/-default-gateway-builder/client.html","searchKeys":["client","var client: HttpClient? = null","dev.kord.gateway.DefaultGatewayBuilder.client"]},{"name":"var dispatcher: CoroutineDispatcher","description":"dev.kord.gateway.DefaultGatewayBuilder.dispatcher","location":"gateway/dev.kord.gateway/-default-gateway-builder/dispatcher.html","searchKeys":["dispatcher","var dispatcher: CoroutineDispatcher","dev.kord.gateway.DefaultGatewayBuilder.dispatcher"]},{"name":"var eventFlow: MutableSharedFlow<Event>","description":"dev.kord.gateway.DefaultGatewayBuilder.eventFlow","location":"gateway/dev.kord.gateway/-default-gateway-builder/event-flow.html","searchKeys":["eventFlow","var eventFlow: MutableSharedFlow<Event>","dev.kord.gateway.DefaultGatewayBuilder.eventFlow"]},{"name":"var guildId: Snowflake","description":"dev.kord.gateway.builder.RequestGuildMembersBuilder.guildId","location":"gateway/dev.kord.gateway.builder/-request-guild-members-builder/guild-id.html","searchKeys":["guildId","var guildId: Snowflake","dev.kord.gateway.builder.RequestGuildMembersBuilder.guildId"]},{"name":"var identifyRateLimiter: IdentifyRateLimiter? = null","description":"dev.kord.gateway.DefaultGatewayBuilder.identifyRateLimiter","location":"gateway/dev.kord.gateway/-default-gateway-builder/identify-rate-limiter.html","searchKeys":["identifyRateLimiter","var identifyRateLimiter: IdentifyRateLimiter? = null","dev.kord.gateway.DefaultGatewayBuilder.identifyRateLimiter"]},{"name":"var intents: Intents","description":"dev.kord.gateway.GatewayConfigurationBuilder.intents","location":"gateway/dev.kord.gateway/-gateway-configuration-builder/intents.html","searchKeys":["intents","var intents: Intents","dev.kord.gateway.GatewayConfigurationBuilder.intents"]},{"name":"var intents: Intents","description":"dev.kord.gateway.builder.LoginBuilder.intents","location":"gateway/dev.kord.gateway.builder/-login-builder/intents.html","searchKeys":["intents","var intents: Intents","dev.kord.gateway.builder.LoginBuilder.intents"]},{"name":"var limit: Int?","description":"dev.kord.gateway.builder.RequestGuildMembersBuilder.limit","location":"gateway/dev.kord.gateway.builder/-request-guild-members-builder/limit.html","searchKeys":["limit","var limit: Int?","dev.kord.gateway.builder.RequestGuildMembersBuilder.limit"]},{"name":"var name: String","description":"dev.kord.gateway.GatewayConfigurationBuilder.name","location":"gateway/dev.kord.gateway/-gateway-configuration-builder/name.html","searchKeys":["name","var name: String","dev.kord.gateway.GatewayConfigurationBuilder.name"]},{"name":"var name: String","description":"dev.kord.gateway.builder.LoginBuilder.name","location":"gateway/dev.kord.gateway.builder/-login-builder/name.html","searchKeys":["name","var name: String","dev.kord.gateway.builder.LoginBuilder.name"]},{"name":"var nonce: String?","description":"dev.kord.gateway.builder.RequestGuildMembersBuilder.nonce","location":"gateway/dev.kord.gateway.builder/-request-guild-members-builder/nonce.html","searchKeys":["nonce","var nonce: String?","dev.kord.gateway.builder.RequestGuildMembersBuilder.nonce"]},{"name":"var presence: DiscordPresence","description":"dev.kord.gateway.builder.LoginBuilder.presence","location":"gateway/dev.kord.gateway.builder/-login-builder/presence.html","searchKeys":["presence","var presence: DiscordPresence","dev.kord.gateway.builder.LoginBuilder.presence"]},{"name":"var presence: DiscordPresence? = null","description":"dev.kord.gateway.GatewayConfigurationBuilder.presence","location":"gateway/dev.kord.gateway/-gateway-configuration-builder/presence.html","searchKeys":["presence","var presence: DiscordPresence? = null","dev.kord.gateway.GatewayConfigurationBuilder.presence"]},{"name":"var presences: Boolean?","description":"dev.kord.gateway.builder.RequestGuildMembersBuilder.presences","location":"gateway/dev.kord.gateway.builder/-request-guild-members-builder/presences.html","searchKeys":["presences","var presences: Boolean?","dev.kord.gateway.builder.RequestGuildMembersBuilder.presences"]},{"name":"var query: String?","description":"dev.kord.gateway.builder.RequestGuildMembersBuilder.query","location":"gateway/dev.kord.gateway.builder/-request-guild-members-builder/query.html","searchKeys":["query","var query: String?","dev.kord.gateway.builder.RequestGuildMembersBuilder.query"]},{"name":"var reconnectRetry: Retry? = null","description":"dev.kord.gateway.DefaultGatewayBuilder.reconnectRetry","location":"gateway/dev.kord.gateway/-default-gateway-builder/reconnect-retry.html","searchKeys":["reconnectRetry","var reconnectRetry: Retry? = null","dev.kord.gateway.DefaultGatewayBuilder.reconnectRetry"]},{"name":"var sendRateLimiter: RateLimiter? = null","description":"dev.kord.gateway.DefaultGatewayBuilder.sendRateLimiter","location":"gateway/dev.kord.gateway/-default-gateway-builder/send-rate-limiter.html","searchKeys":["sendRateLimiter","var sendRateLimiter: RateLimiter? = null","dev.kord.gateway.DefaultGatewayBuilder.sendRateLimiter"]},{"name":"var shard: DiscordShard","description":"dev.kord.gateway.GatewayConfigurationBuilder.shard","location":"gateway/dev.kord.gateway/-gateway-configuration-builder/shard.html","searchKeys":["shard","var shard: DiscordShard","dev.kord.gateway.GatewayConfigurationBuilder.shard"]},{"name":"var since: Instant? = null","description":"dev.kord.gateway.builder.PresenceBuilder.since","location":"gateway/dev.kord.gateway.builder/-presence-builder/since.html","searchKeys":["since","var since: Instant? = null","dev.kord.gateway.builder.PresenceBuilder.since"]},{"name":"var status: PresenceStatus","description":"dev.kord.gateway.builder.PresenceBuilder.status","location":"gateway/dev.kord.gateway.builder/-presence-builder/status.html","searchKeys":["status","var status: PresenceStatus","dev.kord.gateway.builder.PresenceBuilder.status"]},{"name":"var threshold: Int = 250","description":"dev.kord.gateway.GatewayConfigurationBuilder.threshold","location":"gateway/dev.kord.gateway/-gateway-configuration-builder/threshold.html","searchKeys":["threshold","var threshold: Int = 250","dev.kord.gateway.GatewayConfigurationBuilder.threshold"]},{"name":"var url: String","description":"dev.kord.gateway.DefaultGatewayBuilder.url","location":"gateway/dev.kord.gateway/-default-gateway-builder/url.html","searchKeys":["url","var url: String","dev.kord.gateway.DefaultGatewayBuilder.url"]},{"name":"var userIds: MutableSet<Snowflake>","description":"dev.kord.gateway.builder.RequestGuildMembersBuilder.userIds","location":"gateway/dev.kord.gateway.builder/-request-guild-members-builder/user-ids.html","searchKeys":["userIds","var userIds: MutableSet<Snowflake>","dev.kord.gateway.builder.RequestGuildMembersBuilder.userIds"]}]